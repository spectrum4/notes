
kernel8-rpi4.elf:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000080000 <_start>:                                           // https://github.com/rsta2/circle/blob/c21f2efdad86c1062f255fbf891135a2a356713e/lib/startup64.S#L77
                                                                     // normally entered from armstub8 in EL2 after boot
   80000:   d5384240    mrs x0, currentel                            // check if already in EL1t mode?
   80004:   f100101f    cmp x0, #0x4
   80008:   54000380    b.eq    80078 <_start+0x78>                  // skip ahead, if already at EL1t, no work to do
   8000c:   58000420    ldr x0, 80090 <_start+0x90>                  // IRQ, FIQ and exception handler run in EL1h
   80010:   d51c4100    msr sp_el1, x0                               // init their stack
   80014:   58000420    ldr x0, 80098 <_start+0x98>                  // init exception vector table for EL2
   80018:   d51cc000    msr vbar_el2, x0                             // switch to el1_m
   8001c:   d53ce100    mrs x0, cnthctl_el2                          // Initialize Generic Timers
   80020:   b2400400    orr x0, x0, #0x3                             // Enable EL1 access to timers
   80024:   d51ce100    msr cnthctl_el2, x0
   80028:   d51ce07f    msr cntvoff_el2, xzr
   8002c:   d5380000    mrs x0, midr_el1                             // Initilize MPID/MPIDR registers
   80030:   d53800a1    mrs x1, mpidr_el1
   80034:   d51c0000    msr vpidr_el2, x0
   80038:   d51c00a1    msr vmpidr_el2, x1
   8003c:   d2867fe0    mov x0, #0x33ff                              // Disable coprocessor traps
   80040:   d51c1140    msr cptr_el2, x0                             // Disable coprocessor traps to EL2
   80044:   d51c117f    msr hstr_el2, xzr                            // Disable coprocessor traps to EL2
   80048:   d2a00600    mov x0, #0x300000
   8004c:   d5181040    msr cpacr_el1, x0                            // Enable FP/SIMD at EL1
   80050:   d2b00000    mov x0, #0x80000000                          // 64bit EL1
   80054:   d51c1100    msr hcr_el2, x0
                                                                     // SCTLR_EL1 initialization
                                                                     //
                                                                     // setting RES1 bits (29,28,23,22,20,11) to 1
                                                                     // and RES0 bits (31,30,27,21,17,13,10,6) +
                                                                     // UCI,EE,EOE,WXN,nTWE,nTWI,UCT,DZE,I,UMA,SED,ITD,
                                                                     // CP15BEN,SA0,SA,C,A,M to 0
   80058:   d2810000    mov x0, #0x800
   8005c:   f2a61a00    movk    x0, #0x30d0, lsl #16
   80060:   d5181000    msr sctlr_el1, x0                            // SCTLR_EL1 = 0x30d00800
   80064:   d2807880    mov x0, #0x3c4                               // Return to the EL1_SP1 mode from EL2
   80068:   d51c4000    msr spsr_el2, x0                             // EL1_SP0 | D | A | I | F
   8006c:   10000060    adr x0, 80078 <_start+0x78>
   80070:   d51c4020    msr elr_el2, x0
   80074:   d69f03e0    eret

   80078:   58000140    ldr x0, 800a0 <_start+0xa0>                  // main thread runs in EL1t and uses sp_el0
   8007c:   9100001f    mov sp, x0                                   // init its stack
   80080:   580000c0    ldr x0, 80098 <_start+0x98>                  // init exception vector table
   80084:   d518c000    msr vbar_el1, x0
   80088:   1400955e    b   a5600 <sysinit>                          // call sysinit
   8008c:   00000000    udf #0

   80090:   00308000    .word   0x00308000                           // MEM_EXCEPTION_STACK (SP_EL1)
   80094:   00000000    .word   0x00000000

   80098:   000ad800    .word   0x000ad800                           // VectorTable (VBAR_EL1)
   8009c:   00000000    .word   0x00000000

   800a0:   002a0000    .word   0x002a0000                           // stack pointer address
   800a4:   00000000    .word   0x00000000

Disassembly of section .text:

0000000000080800 <main>:                                             // main method (MAINPROC)
   80800:   d285d80c    mov x12, #0x2ec0
   80804:   cb2c63ff    sub sp, sp, x12
   80808:   910043e0    add x0, sp, #0x10
   8080c:   a9007bfd    stp x29, x30, [sp]
   80810:   910003fd    mov x29, sp
   80814:   94000033    bl  808e0 <CKernel::CKernel()>               // CKernel constructor
   80818:   910043e0    add x0, sp, #0x10
   8081c:   94000099    bl  80a80 <CKernel::Initialize()>            // Call CKernel.Initialize()
   80820:   72001c1f    tst w0, #0xff
   80824:   540000a0    b.eq    80838 <main+0x38>                    // halt if failed
   80828:   910043e0    add x0, sp, #0x10
   8082c:   940000c9    bl  80b50 <CKernel::Run()>                   // Call CKernel.Run()
   80830:   7100081f    cmp w0, #0x2
   80834:   54000040    b.eq    8083c <main+0x3c>                    // Reboot if function return value = 2

   80838:   94009362    bl  a55c0 <halt>

   8083c:   94009369    bl  a55e0 <reboot>

0000000000080840 <CKernel::ShutdownHandler()>:
   80840:   d00001c0    adrp    x0, ba000 <font_data+0x1080>
   80844:   f9444000    ldr x0, [x0, #2176]
   80848:   b4000080    cbz x0, 80858 <CKernel::ShutdownHandler()+0x18>
   8084c:   52800041    mov w1, #0x2
   80850:   b92ea801    str w1, [x0, #11944]
   80854:   d65f03c0    ret
   80858:   f0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8085c:   f0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   80860:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   80864:   9101c021    add x1, x1, #0x70
   80868:   910003fd    mov x29, sp
   8086c:   91020000    add x0, x0, #0x80
   80870:   52801382    mov w2, #0x9c
   80874:   94007093    bl  9cac0 <assertion_failed>
   80878:   d503201f    nop
   8087c:   d503201f    nop

0000000000080880 <CKernel::KeyboardRemovedHandler(CDevice*, void*)>:
   80880:   a9be7bfd    stp x29, x30, [sp, #-32]!
   80884:   910003fd    mov x29, sp
   80888:   f9000bf3    str x19, [sp, #16]
   8088c:   d00001d3    adrp    x19, ba000 <font_data+0x1080>
   80890:   f9444260    ldr x0, [x19, #2176]
   80894:   b40001a0    cbz x0, 808c8 <CKernel::KeyboardRemovedHandler(CDevice*, void*)+0x48>
   80898:   94007b5a    bl  9f600 <CLogger::Get()>
   8089c:   f0000163    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   808a0:   f0000181    adrp    x1, b3000 <_etext+0x3f9c>
   808a4:   91024063    add x3, x3, #0x90
   808a8:   91320021    add x1, x1, #0xc80
   808ac:   52800082    mov w2, #0x4
   808b0:   94007d3c    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   808b4:   f9444260    ldr x0, [x19, #2176]
   808b8:   f9400bf3    ldr x19, [sp, #16]
   808bc:   f917501f    str xzr, [x0, #11936]
   808c0:   a8c27bfd    ldp x29, x30, [sp], #32
   808c4:   d65f03c0    ret
   808c8:   f0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   808cc:   f0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   808d0:   9101c021    add x1, x1, #0x70
   808d4:   91020000    add x0, x0, #0x80
   808d8:   528016e2    mov w2, #0xb7
   808dc:   94007079    bl  9cac0 <assertion_failed>

00000000000808e0 <CKernel::CKernel()>:                                  // CKernel constructor
   808e0:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   808e4:   d2836702    mov x2, #0x1b38
   808e8:   910003fd    mov x29, sp
   808ec:   d2856703    mov x3, #0x2b38
   808f0:   52800001    mov w1, #0x0
   808f4:   a90153f3    stp x19, x20, [sp, #16]
   808f8:   aa0003f3    mov x19, x0
   808fc:   91006014    add x20, x0, #0x18
   80900:   a9025bf5    stp x21, x22, [sp, #32]
   80904:   8b020015    add x21, x0, x2
   80908:   8b030016    add x22, x0, x3
   8090c:   f9001bf7    str x23, [sp, #48]
   80910:   94006fe0    bl  9c890 <CActLED::CActLED(bool)>
   80914:   aa1403e0    mov x0, x20
   80918:   940079d2    bl  9f060 <CKernelOptions::CKernelOptions()>
   8091c:   9122e260    add x0, x19, #0x8b8
   80920:   9400733c    bl  9d610 <CDeviceNameService::CDeviceNameService()>
   80924:   aa1403e0    mov x0, x20
   80928:   940078d2    bl  9ec70 <CKernelOptions::GetWidth() const>
   8092c:   2a0003f7    mov w23, w0
   80930:   aa1403e0    mov x0, x20
   80934:   940078d3    bl  9ec80 <CKernelOptions::GetHeight() const>
   80938:   2a1703e1    mov w1, w23
   8093c:   2a0003e2    mov w2, w0
   80940:   52800004    mov w4, #0x0
   80944:   91232260    add x0, x19, #0x8c8
   80948:   52800003    mov w3, #0x0
   8094c:   940081f9    bl  a1130 <CScreenDevice::CScreenDevice(unsigned int, unsigned int, bool, unsigned int)>
   80950:   52800003    mov w3, #0x0
   80954:   52800002    mov w2, #0x0
   80958:   d2800001    mov x1, #0x0
   8095c:   9126a260    add x0, x19, #0x9a8
   80960:   940088d0    bl  a2ca0 <CSerialDevice::CSerialDevice(CInterruptSystem*, bool, unsigned int)>
   80964:   d2836604    mov x4, #0x1b30
   80968:   8b040260    add x0, x19, x4
   8096c:   94009e2d    bl  a8220 <CExceptionHandler::CExceptionHandler()>
   80970:   aa1503e0    mov x0, x21
   80974:   9400a5cf    bl  aa0b0 <CInterruptSystem::CInterruptSystem()>
   80978:   aa1503e1    mov x1, x21
   8097c:   aa1603e0    mov x0, x22
   80980:   94009364    bl  a5710 <CTimer::CTimer(CInterruptSystem*)>
   80984:   aa1403e0    mov x0, x20
   80988:   940078c6    bl  9eca0 <CKernelOptions::GetLogLevel() const>
   8098c:   d2857405    mov x5, #0x2ba0
   80990:   aa1603e2    mov x2, x22
   80994:   2a0003e1    mov w1, w0
   80998:   52800023    mov w3, #0x1
   8099c:   8b050260    add x0, x19, x5
   809a0:   94007ad8    bl  9f500 <CLogger::CLogger(unsigned int, CTimer*, bool)>
   809a4:   d285b106    mov x6, #0x2d88
   809a8:   aa1603e2    mov x2, x22
   809ac:   8b060260    add x0, x19, x6
   809b0:   aa1503e1    mov x1, x21
   809b4:   52800023    mov w3, #0x1
   809b8:   94000a6a    bl  83360 <CXHCIDevice::CXHCIDevice(CInterruptSystem*, CTimer*, bool)>
   809bc:   d00001c4    adrp    x4, ba000 <font_data+0x1080>
   809c0:   a9425bf5    ldp x21, x22, [sp, #32]
   809c4:   aa1303e0    mov x0, x19
   809c8:   52803e83    mov w3, #0x1f4
   809cc:   52801902    mov w2, #0xc8
   809d0:   528000a1    mov w1, #0x5
   809d4:   f9044093    str x19, [x4, #2176]
   809d8:   f9401bf7    ldr x23, [sp, #48]
   809dc:   f917527f    str xzr, [x19, #11936]
   809e0:   b92eaa7f    str wzr, [x19, #11944]
   809e4:   a94153f3    ldp x19, x20, [sp, #16]
   809e8:   a8c47bfd    ldp x29, x30, [sp], #64
   809ec:   14006ffd    b   9c9e0 <CActLED::Blink(unsigned int, unsigned int, unsigned int)>

00000000000809f0 <CKernel::~CKernel()>:
   809f0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   809f4:   910003fd    mov x29, sp
   809f8:   d00001c1    adrp    x1, ba000 <font_data+0x1080>
   809fc:   f9000bf3    str x19, [sp, #16]
   80a00:   aa0003f3    mov x19, x0
   80a04:   d285b100    mov x0, #0x2d88
   80a08:   8b000260    add x0, x19, x0
   80a0c:   f904403f    str xzr, [x1, #2176]
   80a10:   94000b68    bl  837b0 <CXHCIDevice::~CXHCIDevice()>
   80a14:   d2857401    mov x1, #0x2ba0
   80a18:   8b010260    add x0, x19, x1
   80a1c:   94007ad1    bl  9f560 <CLogger::~CLogger()>
   80a20:   d2856702    mov x2, #0x2b38
   80a24:   8b020260    add x0, x19, x2
   80a28:   9400935e    bl  a57a0 <CTimer::~CTimer()>
   80a2c:   d2836703    mov x3, #0x1b38
   80a30:   8b030260    add x0, x19, x3
   80a34:   9400a5ab    bl  aa0e0 <CInterruptSystem::~CInterruptSystem()>
   80a38:   d2836604    mov x4, #0x1b30
   80a3c:   8b040260    add x0, x19, x4
   80a40:   94009d58    bl  a7fa0 <CExceptionHandler::~CExceptionHandler()>
   80a44:   9126a260    add x0, x19, #0x9a8
   80a48:   94008c02    bl  a3a50 <CSerialDevice::~CSerialDevice()>
   80a4c:   91232260    add x0, x19, #0x8c8
   80a50:   94008138    bl  a0f30 <CScreenDevice::~CScreenDevice()>
   80a54:   9122e260    add x0, x19, #0x8b8
   80a58:   940072fe    bl  9d650 <CDeviceNameService::~CDeviceNameService()>
   80a5c:   91006260    add x0, x19, #0x18
   80a60:   9400786c    bl  9ec10 <CKernelOptions::~CKernelOptions()>
   80a64:   aa1303e0    mov x0, x19
   80a68:   f9400bf3    ldr x19, [sp, #16]
   80a6c:   a8c27bfd    ldp x29, x30, [sp], #32
   80a70:   14006fc0    b   9c970 <CActLED::~CActLED()>
   80a74:   d503201f    nop
   80a78:   d503201f    nop
   80a7c:   d503201f    nop

0000000000080a80 <CKernel::Initialize()>:
   80a80:   a9be7bfd    stp x29, x30, [sp, #-32]!
   80a84:   910003fd    mov x29, sp
   80a88:   a90153f3    stp x19, x20, [sp, #16]
   80a8c:   91232014    add x20, x0, #0x8c8
   80a90:   aa0003f3    mov x19, x0
   80a94:   aa1403e0    mov x0, x20
   80a98:   940085e2    bl  a2220 <CScreenDevice::Initialize()>
   80a9c:   72001c1f    tst w0, #0xff
   80aa0:   540000a1    b.ne    80ab4 <CKernel::Initialize()+0x34>
   80aa4:   52800000    mov w0, #0x0
   80aa8:   a94153f3    ldp x19, x20, [sp, #16]
   80aac:   a8c27bfd    ldp x29, x30, [sp], #32
   80ab0:   d65f03c0    ret
   80ab4:   52984001    mov w1, #0xc200
   80ab8:   72a00021    movk    w1, #0x1, lsl #16
   80abc:   52800004    mov w4, #0x0
   80ac0:   52800023    mov w3, #0x1
   80ac4:   52800102    mov w2, #0x8
   80ac8:   9126a260    add x0, x19, #0x9a8
   80acc:   940088f5    bl  a2ea0 <CSerialDevice::Initialize(unsigned int, unsigned int, unsigned int, CSerialDevice::TParity)>
   80ad0:   72001c1f    tst w0, #0xff
   80ad4:   54fffe80    b.eq    80aa4 <CKernel::Initialize()+0x24>
   80ad8:   91006260    add x0, x19, #0x18
   80adc:   9400786d    bl  9ec90 <CKernelOptions::GetLogDevice() const>
   80ae0:   aa0003e1    mov x1, x0
   80ae4:   52800002    mov w2, #0x0
   80ae8:   9122e260    add x0, x19, #0x8b8
   80aec:   94007375    bl  9d8c0 <CDeviceNameService::GetDevice(char const*, bool)>
   80af0:   aa0003e1    mov x1, x0
   80af4:   d2857403    mov x3, #0x2ba0
   80af8:   f100003f    cmp x1, #0x0
   80afc:   8b030260    add x0, x19, x3
   80b00:   9a941021    csel    x1, x1, x20, ne
   80b04:   94007cc7    bl  9fe20 <CLogger::Initialize(CDevice*)>
   80b08:   72001c1f    tst w0, #0xff
   80b0c:   54fffcc0    b.eq    80aa4 <CKernel::Initialize()+0x24>
   80b10:   d2836702    mov x2, #0x1b38
   80b14:   8b020260    add x0, x19, x2
   80b18:   9400a57a    bl  aa100 <CInterruptSystem::Initialize()>
   80b1c:   72001c1f    tst w0, #0xff
   80b20:   54fffc20    b.eq    80aa4 <CKernel::Initialize()+0x24>
   80b24:   d2856701    mov x1, #0x2b38
   80b28:   8b010260    add x0, x19, x1
   80b2c:   94009611    bl  a6370 <CTimer::Initialize()>
   80b30:   72001c1f    tst w0, #0xff
   80b34:   54fffb80    b.eq    80aa4 <CKernel::Initialize()+0x24>
   80b38:   d285b100    mov x0, #0x2d88
   80b3c:   52800021    mov w1, #0x1
   80b40:   8b000260    add x0, x19, x0
   80b44:   a94153f3    ldp x19, x20, [sp, #16]
   80b48:   a8c27bfd    ldp x29, x30, [sp], #32
   80b4c:   14000b71    b   83910 <CXHCIDevice::Initialize(bool)>

0000000000080b50 <CKernel::Run()>:
   80b50:   a9ba7bfd    stp x29, x30, [sp, #-96]!
   80b54:   d2857401    mov x1, #0x2ba0
   80b58:   910003fd    mov x29, sp
   80b5c:   f0000163    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   80b60:   52800062    mov w2, #0x3
   80b64:   9102a063    add x3, x3, #0xa8
   80b68:   a90363f7    stp x23, x24, [sp, #48]
   80b6c:   8b010018    add x24, x0, x1
   80b70:   f0000197    adrp    x23, b3000 <_etext+0x3f9c>
   80b74:   913202f7    add x23, x23, #0xc80
   80b78:   aa1703e1    mov x1, x23
   80b7c:   a90153f3    stp x19, x20, [sp, #16]
   80b80:   aa0003f3    mov x19, x0
   80b84:   aa1803e0    mov x0, x24
   80b88:   94007c86    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   80b8c:   aa1803e0    mov x0, x24
   80b90:   aa1703e1    mov x1, x23
   80b94:   f0000163    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   80b98:   91034063    add x3, x3, #0xd0
   80b9c:   52800062    mov w2, #0x3
   80ba0:   94007c80    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   80ba4:   b96eaa74    ldr w20, [x19, #11944]
   80ba8:   35000454    cbnz    w20, 80c30 <CKernel::Run()+0xe0>
   80bac:   d285b100    mov x0, #0x2d88
   80bb0:   a9025bf5    stp x21, x22, [sp, #32]
   80bb4:   91232276    add x22, x19, #0x8c8
   80bb8:   8b000275    add x21, x19, x0
   80bbc:   a9046bf9    stp x25, x26, [sp, #64]
   80bc0:   f000017a    adrp    x26, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   80bc4:   9104235a    add x26, x26, #0x108
   80bc8:   90000019    adrp    x25, 80000 <_start>
   80bcc:   91220339    add x25, x25, #0x880
   80bd0:   f9002bfb    str x27, [sp, #80]
   80bd4:   9122e27b    add x27, x19, #0x8b8
   80bd8:   aa1503e0    mov x0, x21
   80bdc:   94000089    bl  80e00 <CUSBHostController::UpdatePlugAndPlay()>
   80be0:   72001c1f    tst w0, #0xff
   80be4:   54000060    b.eq    80bf0 <CKernel::Run()+0xa0>
   80be8:   f9575260    ldr x0, [x19, #11936]
   80bec:   b40002c0    cbz x0, 80c44 <CKernel::Run()+0xf4>
   80bf0:   f9575260    ldr x0, [x19, #11936]
   80bf4:   b4000060    cbz x0, 80c00 <CKernel::Run()+0xb0>
   80bf8:   f9575260    ldr x0, [x19, #11936]
   80bfc:   9400035d    bl  81970 <CUSBKeyboardDevice::UpdateLEDs()>
   80c00:   2a1403e2    mov w2, w20
   80c04:   52800001    mov w1, #0x0
   80c08:   aa1603e0    mov x0, x22
   80c0c:   11000694    add w20, w20, #0x1
   80c10:   940087b0    bl  a2ad0 <CScreenDevice::Rotor(unsigned int, unsigned int)>
   80c14:   52800c80    mov w0, #0x64
   80c18:   9400963e    bl  a6510 <CTimer::SimpleMsDelay(unsigned int)>
   80c1c:   b96eaa60    ldr w0, [x19, #11944]
   80c20:   34fffdc0    cbz w0, 80bd8 <CKernel::Run()+0x88>
   80c24:   a9425bf5    ldp x21, x22, [sp, #32]
   80c28:   a9446bf9    ldp x25, x26, [sp, #64]
   80c2c:   f9402bfb    ldr x27, [sp, #80]
   80c30:   a94363f7    ldp x23, x24, [sp, #48]
   80c34:   b96eaa60    ldr w0, [x19, #11944]
   80c38:   a94153f3    ldp x19, x20, [sp, #16]
   80c3c:   a8c67bfd    ldp x29, x30, [sp], #96
   80c40:   d65f03c0    ret
   80c44:   52800002    mov w2, #0x0
   80c48:   aa1a03e1    mov x1, x26
   80c4c:   aa1b03e0    mov x0, x27
   80c50:   9400731c    bl  9d8c0 <CDeviceNameService::GetDevice(char const*, bool)>
   80c54:   f9175260    str x0, [x19, #11936]
   80c58:   d2800002    mov x2, #0x0
   80c5c:   aa1903e1    mov x1, x25
   80c60:   f9575260    ldr x0, [x19, #11936]
   80c64:   b4fffc60    cbz x0, 80bf0 <CKernel::Run()+0xa0>
   80c68:   f9575260    ldr x0, [x19, #11936]
   80c6c:   94007221    bl  9d4f0 <CDevice::RegisterRemovedHandler(void (*)(CDevice*, void*), void*)>
   80c70:   90000001    adrp    x1, 80000 <_start>
   80c74:   91210021    add x1, x1, #0x840
   80c78:   f9575260    ldr x0, [x19, #11936]
   80c7c:   940002c5    bl  81790 <CUSBKeyboardDevice::RegisterShutdownHandler(void (*)())>
   80c80:   f9575260    ldr x0, [x19, #11936]
   80c84:   90000001    adrp    x1, 80000 <_start>
   80c88:   9132c021    add x1, x1, #0xcb0
   80c8c:   940002b9    bl  81770 <CUSBKeyboardDevice::RegisterKeyPressedHandler(void (*)(char const*))>
   80c90:   f0000163    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   80c94:   91044063    add x3, x3, #0x110
   80c98:   52800062    mov w2, #0x3
   80c9c:   aa1703e1    mov x1, x23
   80ca0:   aa1803e0    mov x0, x24
   80ca4:   94007c3f    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   80ca8:   17ffffd2    b   80bf0 <CKernel::Run()+0xa0>
   80cac:   d503201f    nop

0000000000080cb0 <CKernel::KeyPressedHandler(char const*)>:
   80cb0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   80cb4:   d00001c1    adrp    x1, ba000 <font_data+0x1080>
   80cb8:   910003fd    mov x29, sp
   80cbc:   a90153f3    stp x19, x20, [sp, #16]
   80cc0:   f9444034    ldr x20, [x1, #2176]
   80cc4:   b4000134    cbz x20, 80ce8 <CKernel::KeyPressedHandler(char const*)+0x38>
   80cc8:   aa0003f3    mov x19, x0
   80ccc:   9400969d    bl  a6740 <strlen>
   80cd0:   aa0003e2    mov x2, x0
   80cd4:   aa1303e1    mov x1, x19
   80cd8:   91232280    add x0, x20, #0x8c8
   80cdc:   a94153f3    ldp x19, x20, [sp, #16]
   80ce0:   a8c27bfd    ldp x29, x30, [sp], #32
   80ce4:   14008723    b   a2970 <CScreenDevice::Write(void const*, unsigned long)>
   80ce8:   f0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   80cec:   f0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   80cf0:   9101c021    add x1, x1, #0x70
   80cf4:   91020000    add x0, x0, #0x80
   80cf8:   52801182    mov w2, #0x8c
   80cfc:   94006f71    bl  9cac0 <assertion_failed>

0000000000080d00 <CKernel::KeyStatusHandlerRaw(unsigned char, unsigned char const*)>:
   80d00:   a9b97bfd    stp x29, x30, [sp, #-112]!
   80d04:   910003fd    mov x29, sp
   80d08:   a9025bf5    stp x21, x22, [sp, #32]
   80d0c:   d00001d6    adrp    x22, ba000 <font_data+0x1080>
   80d10:   f94442c3    ldr x3, [x22, #2176]
   80d14:   a90153f3    stp x19, x20, [sp, #16]
   80d18:   b4000683    cbz x3, 80de8 <CKernel::KeyStatusHandlerRaw(unsigned char, unsigned char const*)+0xe8>
   80d1c:   12001c15    and w21, w0, #0xff
   80d20:   9100c3e0    add x0, sp, #0x30
   80d24:   aa0103f3    mov x19, x1
   80d28:   91001834    add x20, x1, #0x6
   80d2c:   94008be9    bl  a3cd0 <CString::CString()>
   80d30:   f0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   80d34:   2a1503e2    mov w2, w21
   80d38:   9100c3e0    add x0, sp, #0x30
   80d3c:   9104a021    add x1, x1, #0x128
   80d40:   d0000195    adrp    x21, b2000 <_etext+0x2f9c>
   80d44:   913f82b5    add x21, x21, #0xfe0
   80d48:   940091ee    bl  a5500 <CString::Format(char const*, ...)>
   80d4c:   14000004    b   80d5c <CKernel::KeyStatusHandlerRaw(unsigned char, unsigned char const*)+0x5c>
   80d50:   91000673    add x19, x19, #0x1
   80d54:   eb14027f    cmp x19, x20
   80d58:   54000260    b.eq    80da4 <CKernel::KeyStatusHandlerRaw(unsigned char, unsigned char const*)+0xa4>
   80d5c:   39400260    ldrb    w0, [x19]
   80d60:   34ffff80    cbz w0, 80d50 <CKernel::KeyStatusHandlerRaw(unsigned char, unsigned char const*)+0x50>
   80d64:   910143e0    add x0, sp, #0x50
   80d68:   91000673    add x19, x19, #0x1
   80d6c:   94008bd9    bl  a3cd0 <CString::CString()>
   80d70:   385ff262    ldurb   w2, [x19, #-1]
   80d74:   aa1503e1    mov x1, x21
   80d78:   910143e0    add x0, sp, #0x50
   80d7c:   940091e1    bl  a5500 <CString::Format(char const*, ...)>
   80d80:   910143e0    add x0, sp, #0x50
   80d84:   94008c17    bl  a3de0 <CString::operator char const*() const>
   80d88:   aa0003e1    mov x1, x0
   80d8c:   9100c3e0    add x0, sp, #0x30
   80d90:   94008c68    bl  a3f30 <CString::Append(char const*)>
   80d94:   910143e0    add x0, sp, #0x50
   80d98:   94008b92    bl  a3be0 <CString::~CString()>
   80d9c:   eb14027f    cmp x19, x20
   80da0:   54fffde1    b.ne    80d5c <CKernel::KeyStatusHandlerRaw(unsigned char, unsigned char const*)+0x5c>
   80da4:   f94442d3    ldr x19, [x22, #2176]
   80da8:   d2857401    mov x1, #0x2ba0
   80dac:   9100c3e0    add x0, sp, #0x30
   80db0:   8b010273    add x19, x19, x1
   80db4:   94008c0b    bl  a3de0 <CString::operator char const*() const>
   80db8:   f0000181    adrp    x1, b3000 <_etext+0x3f9c>
   80dbc:   aa0003e3    mov x3, x0
   80dc0:   91320021    add x1, x1, #0xc80
   80dc4:   aa1303e0    mov x0, x19
   80dc8:   52800062    mov w2, #0x3
   80dcc:   94007bf5    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   80dd0:   9100c3e0    add x0, sp, #0x30
   80dd4:   94008b83    bl  a3be0 <CString::~CString()>
   80dd8:   a94153f3    ldp x19, x20, [sp, #16]
   80ddc:   a9425bf5    ldp x21, x22, [sp, #32]
   80de0:   a8c77bfd    ldp x29, x30, [sp], #112
   80de4:   d65f03c0    ret
   80de8:   f0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   80dec:   f0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   80df0:   9101c021    add x1, x1, #0x70
   80df4:   91020000    add x0, x0, #0x80
   80df8:   52801442    mov w2, #0xa2
   80dfc:   94006f31    bl  9cac0 <assertion_failed>

0000000000080e00 <CUSBHostController::UpdatePlugAndPlay()>:
   80e00:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   80e04:   d00001c1    adrp    x1, ba000 <font_data+0x1080>
   80e08:   910003fd    mov x29, sp
   80e0c:   a90153f3    stp x19, x20, [sp, #16]
   80e10:   a9025bf5    stp x21, x22, [sp, #32]
   80e14:   f9001bf7    str x23, [sp, #48]
   80e18:   39622037    ldrb    w23, [x1, #2184]
   80e1c:   360007b7    tbz w23, #0, 80f10 <CUSBHostController::UpdatePlugAndPlay()+0x110>
   80e20:   39402013    ldrb    w19, [x0, #8]
   80e24:   aa0003f5    mov x21, x0
   80e28:   3900201f    strb    wzr, [x0, #8]
   80e2c:   b9401800    ldr w0, [x0, #24]
   80e30:   35000540    cbnz    w0, 80ed8 <CUSBHostController::UpdatePlugAndPlay()+0xd8>
   80e34:   910042b6    add x22, x21, #0x10
   80e38:   aa1603e0    mov x0, x22
   80e3c:   94007f25    bl  a0ad0 <CPtrList::GetFirst()>
   80e40:   aa0003f4    mov x20, x0
   80e44:   b4000720    cbz x0, 80f28 <CUSBHostController::UpdatePlugAndPlay()+0x128>
   80e48:   aa1403e1    mov x1, x20
   80e4c:   aa1603e0    mov x0, x22
   80e50:   94007f3c    bl  a0b40 <CPtrList::GetPtr(TPtrListElement*)>
   80e54:   aa0003f3    mov x19, x0
   80e58:   aa1403e1    mov x1, x20
   80e5c:   aa1603e0    mov x0, x22
   80e60:   94007fd0    bl  a0da0 <CPtrList::Remove(TPtrListElement*)>
   80e64:   b9401aa0    ldr w0, [x21, #24]
   80e68:   35000220    cbnz    w0, 80eac <CUSBHostController::UpdatePlugAndPlay()+0xac>
   80e6c:   b4000253    cbz x19, 80eb4 <CUSBHostController::UpdatePlugAndPlay()+0xb4>
   80e70:   39400261    ldrb    w1, [x19]
   80e74:   f9400660    ldr x0, [x19, #8]
   80e78:   360002a1    tbz w1, #0, 80ecc <CUSBHostController::UpdatePlugAndPlay()+0xcc>
   80e7c:   b40003e0    cbz x0, 80ef8 <CUSBHostController::UpdatePlugAndPlay()+0xf8>
   80e80:   f9400001    ldr x1, [x0]
   80e84:   f9401021    ldr x1, [x1, #32]
   80e88:   d63f0020    blr x1
   80e8c:   aa1303e0    mov x0, x19
   80e90:   d2800201    mov x1, #0x10
   80e94:   94009a73    bl  a7860 <operator delete(void*, unsigned long)>
   80e98:   b9401aa0    ldr w0, [x21, #24]
   80e9c:   2a1703f3    mov w19, w23
   80ea0:   34fffcc0    cbz w0, 80e38 <CUSBHostController::UpdatePlugAndPlay()+0x38>
   80ea4:   94009df3    bl  a8670 <EnterCritical>
   80ea8:   17ffffe4    b   80e38 <CUSBHostController::UpdatePlugAndPlay()+0x38>
   80eac:   94009e21    bl  a8730 <LeaveCritical>
   80eb0:   b5fffe13    cbnz    x19, 80e70 <CUSBHostController::UpdatePlugAndPlay()+0x70>
   80eb4:   f0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   80eb8:   f0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   80ebc:   91052021    add x1, x1, #0x148
   80ec0:   9105c000    add x0, x0, #0x170
   80ec4:   52801422    mov w2, #0xa1
   80ec8:   94006efe    bl  9cac0 <assertion_failed>
   80ecc:   b40000a0    cbz x0, 80ee0 <CUSBHostController::UpdatePlugAndPlay()+0xe0>
   80ed0:   940007e0    bl  82e50 <CUSBStandardHub::HandlePortStatusChange()>
   80ed4:   17ffffee    b   80e8c <CUSBHostController::UpdatePlugAndPlay()+0x8c>
   80ed8:   94009de6    bl  a8670 <EnterCritical>
   80edc:   17ffffd6    b   80e34 <CUSBHostController::UpdatePlugAndPlay()+0x34>
   80ee0:   f0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   80ee4:   f0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   80ee8:   91052021    add x1, x1, #0x148
   80eec:   91066000    add x0, x0, #0x198
   80ef0:   52801522    mov w2, #0xa9
   80ef4:   94006ef3    bl  9cac0 <assertion_failed>
   80ef8:   f0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   80efc:   f0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   80f00:   91052021    add x1, x1, #0x148
   80f04:   91060000    add x0, x0, #0x180
   80f08:   52801482    mov w2, #0xa4
   80f0c:   94006eed    bl  9cac0 <assertion_failed>
   80f10:   f0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   80f14:   f0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   80f18:   91052021    add x1, x1, #0x148
   80f1c:   91058000    add x0, x0, #0x160
   80f20:   52801222    mov w2, #0x91
   80f24:   94006ee7    bl  9cac0 <assertion_failed>
   80f28:   b9401aa0    ldr w0, [x21, #24]
   80f2c:   350000e0    cbnz    w0, 80f48 <CUSBHostController::UpdatePlugAndPlay()+0x148>
   80f30:   a9425bf5    ldp x21, x22, [sp, #32]
   80f34:   2a1303e0    mov w0, w19
   80f38:   a94153f3    ldp x19, x20, [sp, #16]
   80f3c:   f9401bf7    ldr x23, [sp, #48]
   80f40:   a8c47bfd    ldp x29, x30, [sp], #64
   80f44:   d65f03c0    ret
   80f48:   94009dfa    bl  a8730 <LeaveCritical>
   80f4c:   17fffff9    b   80f30 <CUSBHostController::UpdatePlugAndPlay()+0x130>

0000000000080f50 <CUSBHostController::CUSBHostController(bool)>:
   80f50:   a9be7bfd    stp x29, x30, [sp, #-32]!
   80f54:   910003fd    mov x29, sp
   80f58:   52800023    mov w3, #0x1
   80f5c:   f0000182    adrp    x2, b3000 <_etext+0x3f9c>
   80f60:   91326042    add x2, x2, #0xc98
   80f64:   a90153f3    stp x19, x20, [sp, #16]
   80f68:   aa0003f3    mov x19, x0
   80f6c:   91004000    add x0, x0, #0x10
   80f70:   12001c34    and w20, w1, #0xff
   80f74:   f9000262    str x2, [x19]
   80f78:   39002263    strb    w3, [x19, #8]
   80f7c:   94007ec5    bl  a0a90 <CPtrList::CPtrList()>
   80f80:   d00001c0    adrp    x0, ba000 <font_data+0x1080>
   80f84:   91222003    add x3, x0, #0x888
   80f88:   52800022    mov w2, #0x1
   80f8c:   39222014    strb    w20, [x0, #2184]
   80f90:   f9000473    str x19, [x3, #8]
   80f94:   b9001a62    str w2, [x19, #24]
   80f98:   a94153f3    ldp x19, x20, [sp, #16]
   80f9c:   a8c27bfd    ldp x29, x30, [sp], #32
   80fa0:   d65f03c0    ret
   80fa4:   d503201f    nop
   80fa8:   d503201f    nop
   80fac:   d503201f    nop

0000000000080fb0 <CUSBHostController::~CUSBHostController()>:
   80fb0:   f0000182    adrp    x2, b3000 <_etext+0x3f9c>
   80fb4:   91326042    add x2, x2, #0xc98
   80fb8:   d00001c1    adrp    x1, ba000 <font_data+0x1080>
   80fbc:   f8010402    str x2, [x0], #16
   80fc0:   f904483f    str xzr, [x1, #2192]
   80fc4:   14007eb7    b   a0aa0 <CPtrList::~CPtrList()>
   80fc8:   d503201f    nop
   80fcc:   d503201f    nop

0000000000080fd0 <CUSBHostController::~CUSBHostController()>:
   80fd0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   80fd4:   f0000182    adrp    x2, b3000 <_etext+0x3f9c>
   80fd8:   91326042    add x2, x2, #0xc98
   80fdc:   910003fd    mov x29, sp
   80fe0:   d00001c1    adrp    x1, ba000 <font_data+0x1080>
   80fe4:   f9000bf3    str x19, [sp, #16]
   80fe8:   aa0003f3    mov x19, x0
   80fec:   f8010402    str x2, [x0], #16
   80ff0:   f904483f    str xzr, [x1, #2192]
   80ff4:   94007eab    bl  a0aa0 <CPtrList::~CPtrList()>
   80ff8:   aa1303e0    mov x0, x19
   80ffc:   f9400bf3    ldr x19, [sp, #16]
   81000:   d2800401    mov x1, #0x20
   81004:   a8c27bfd    ldp x29, x30, [sp], #32
   81008:   14009a16    b   a7860 <operator delete(void*, unsigned long)>
   8100c:   d503201f    nop

0000000000081010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>:
   81010:   a9b17bfd    stp x29, x30, [sp, #-240]!
   81014:   910003fd    mov x29, sp
   81018:   a9025bf5    stp x21, x22, [sp, #32]
   8101c:   aa0003f5    mov x21, x0
   81020:   d2800100    mov x0, #0x8
   81024:   12003cf6    and w22, w7, #0xffff
   81028:   a90153f3    stp x19, x20, [sp, #16]
   8102c:   aa0103f4    mov x20, x1
   81030:   a90363f7    stp x23, x24, [sp, #48]
   81034:   12003cb8    and w24, w5, #0xffff
   81038:   aa0603f7    mov x23, x6
   8103c:   a9046bf9    stp x25, x26, [sp, #64]
   81040:   12003c99    and w25, w4, #0xffff
   81044:   12001c7a    and w26, w3, #0xff
   81048:   f9002bfb    str x27, [sp, #80]
   8104c:   12001c5b    and w27, w2, #0xff
   81050:   940099dc    bl  a77c0 <operator new(unsigned long)>
   81054:   aa0003f3    mov x19, x0
   81058:   53087f27    lsr w7, w25, #8
   8105c:   3900001b    strb    w27, [x0]
   81060:   53087f06    lsr w6, w24, #8
   81064:   53087ec5    lsr w5, w22, #8
   81068:   aa1703e2    mov x2, x23
   8106c:   2a1603e3    mov w3, w22
   81070:   3900067a    strb    w26, [x19, #1]
   81074:   910183e0    add x0, sp, #0x60
   81078:   aa1403e1    mov x1, x20
   8107c:   39000a79    strb    w25, [x19, #2]
   81080:   aa1303e4    mov x4, x19
   81084:   39000e67    strb    w7, [x19, #3]
   81088:   39001278    strb    w24, [x19, #4]
   8108c:   39001666    strb    w6, [x19, #5]
   81090:   39001a76    strb    w22, [x19, #6]
   81094:   39001e65    strb    w5, [x19, #7]
   81098:   9400027a    bl  81a80 <CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)>
   8109c:   f94002a3    ldr x3, [x21]
   810a0:   aa1503e0    mov x0, x21
   810a4:   910183e1    add x1, sp, #0x60
   810a8:   52800002    mov w2, #0x0
   810ac:   f9401063    ldr x3, [x3, #32]
   810b0:   d63f0060    blr x3
   810b4:   37000240    tbnz    w0, #0, 810fc <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)+0xec>
   810b8:   b40002b4    cbz x20, 8110c <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)+0xfc>
   810bc:   aa1403e0    mov x0, x20
   810c0:   12800014    mov w20, #0xffffffff
   810c4:   940023eb    bl  8a070 <CUSBEndpoint::ResetPID()>
   810c8:   aa1303e0    mov x0, x19
   810cc:   d2800101    mov x1, #0x8
   810d0:   940099e4    bl  a7860 <operator delete(void*, unsigned long)>
   810d4:   910183e0    add x0, sp, #0x60
   810d8:   9400028a    bl  81b00 <CUSBRequest::~CUSBRequest()>
   810dc:   a9425bf5    ldp x21, x22, [sp, #32]
   810e0:   2a1403e0    mov w0, w20
   810e4:   a94153f3    ldp x19, x20, [sp, #16]
   810e8:   a94363f7    ldp x23, x24, [sp, #48]
   810ec:   a9446bf9    ldp x25, x26, [sp, #64]
   810f0:   f9402bfb    ldr x27, [sp, #80]
   810f4:   a8cf7bfd    ldp x29, x30, [sp], #240
   810f8:   d65f03c0    ret
   810fc:   910183e0    add x0, sp, #0x60
   81100:   940002a0    bl  81b80 <CUSBRequest::GetResultLength() const>
   81104:   2a0003f4    mov w20, w0
   81108:   17fffff0    b   810c8 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)+0xb8>
   8110c:   d0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81110:   d0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81114:   91052021    add x1, x1, #0x148
   81118:   9106c000    add x0, x0, #0x1b0
   8111c:   52800e82    mov w2, #0x74
   81120:   94006e68    bl  9cac0 <assertion_failed>
   81124:   d503201f    nop
   81128:   d503201f    nop
   8112c:   d503201f    nop

0000000000081130 <CUSBHostController::GetDescriptor(CUSBEndpoint*, unsigned char, unsigned char, void*, unsigned int, unsigned char, unsigned short)>:
   81130:   12001cc8    and w8, w6, #0xff
   81134:   12003ce9    and w9, w7, #0xffff
   81138:   12001c63    and w3, w3, #0xff
   8113c:   53181c42    ubfiz   w2, w2, #8, #8
   81140:   aa0403e6    mov x6, x4
   81144:   2a0503e7    mov w7, w5
   81148:   2a020064    orr w4, w3, w2
   8114c:   2a0903e5    mov w5, w9
   81150:   2a0803e2    mov w2, w8
   81154:   528000c3    mov w3, #0x6
   81158:   17ffffae    b   81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   8115c:   d503201f    nop

0000000000081160 <CUSBHostController::SetAddress(CUSBEndpoint*, unsigned char)>:
   81160:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   81164:   12001c44    and w4, w2, #0xff
   81168:   910003fd    mov x29, sp
   8116c:   52800007    mov w7, #0x0
   81170:   d2800006    mov x6, #0x0
   81174:   52800005    mov w5, #0x0
   81178:   528000a3    mov w3, #0x5
   8117c:   52800002    mov w2, #0x0
   81180:   97ffffa4    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   81184:   37f800e0    tbnz    w0, #31, 811a0 <CUSBHostController::SetAddress(CUSBEndpoint*, unsigned char)+0x40>
   81188:   9400953e    bl  a6680 <CTimer::Get()>
   8118c:   52800640    mov w0, #0x32
   81190:   940094e0    bl  a6510 <CTimer::SimpleMsDelay(unsigned int)>
   81194:   52800020    mov w0, #0x1
   81198:   a8c17bfd    ldp x29, x30, [sp], #16
   8119c:   d65f03c0    ret
   811a0:   52800000    mov w0, #0x0
   811a4:   a8c17bfd    ldp x29, x30, [sp], #16
   811a8:   d65f03c0    ret
   811ac:   d503201f    nop

00000000000811b0 <CUSBHostController::SetConfiguration(CUSBEndpoint*, unsigned char)>:
   811b0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   811b4:   12001c44    and w4, w2, #0xff
   811b8:   910003fd    mov x29, sp
   811bc:   52800007    mov w7, #0x0
   811c0:   d2800006    mov x6, #0x0
   811c4:   52800005    mov w5, #0x0
   811c8:   52800123    mov w3, #0x9
   811cc:   52800002    mov w2, #0x0
   811d0:   97ffff90    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   811d4:   37f800e0    tbnz    w0, #31, 811f0 <CUSBHostController::SetConfiguration(CUSBEndpoint*, unsigned char)+0x40>
   811d8:   9400952a    bl  a6680 <CTimer::Get()>
   811dc:   52800640    mov w0, #0x32
   811e0:   940094cc    bl  a6510 <CTimer::SimpleMsDelay(unsigned int)>
   811e4:   52800020    mov w0, #0x1
   811e8:   a8c17bfd    ldp x29, x30, [sp], #16
   811ec:   d65f03c0    ret
   811f0:   52800000    mov w0, #0x0
   811f4:   a8c17bfd    ldp x29, x30, [sp], #16
   811f8:   d65f03c0    ret
   811fc:   d503201f    nop

0000000000081200 <CUSBHostController::Transfer(CUSBEndpoint*, void*, unsigned int, unsigned int)>:
   81200:   a9b57bfd    stp x29, x30, [sp, #-176]!
   81204:   910003fd    mov x29, sp
   81208:   a90153f3    stp x19, x20, [sp, #16]
   8120c:   aa0003f3    mov x19, x0
   81210:   2a0403f4    mov w20, w4
   81214:   910083e0    add x0, sp, #0x20
   81218:   d2800004    mov x4, #0x0
   8121c:   94000219    bl  81a80 <CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)>
   81220:   f9400263    ldr x3, [x19]
   81224:   2a1403e2    mov w2, w20
   81228:   aa1303e0    mov x0, x19
   8122c:   910083e1    add x1, sp, #0x20
   81230:   f9401063    ldr x3, [x3, #32]
   81234:   d63f0060    blr x3
   81238:   36000140    tbz w0, #0, 81260 <CUSBHostController::Transfer(CUSBEndpoint*, void*, unsigned int, unsigned int)+0x60>
   8123c:   910083e0    add x0, sp, #0x20
   81240:   94000250    bl  81b80 <CUSBRequest::GetResultLength() const>
   81244:   2a0003f3    mov w19, w0
   81248:   910083e0    add x0, sp, #0x20
   8124c:   9400022d    bl  81b00 <CUSBRequest::~CUSBRequest()>
   81250:   2a1303e0    mov w0, w19
   81254:   a94153f3    ldp x19, x20, [sp, #16]
   81258:   a8cb7bfd    ldp x29, x30, [sp], #176
   8125c:   d65f03c0    ret
   81260:   12800013    mov w19, #0xffffffff
   81264:   17fffff9    b   81248 <CUSBHostController::Transfer(CUSBEndpoint*, void*, unsigned int, unsigned int)+0x48>
   81268:   d503201f    nop
   8126c:   d503201f    nop

0000000000081270 <CUSBHostController::IsPlugAndPlay()>:
   81270:   b00001c0    adrp    x0, ba000 <font_data+0x1080>
   81274:   39622000    ldrb    w0, [x0, #2184]
   81278:   d65f03c0    ret
   8127c:   d503201f    nop

0000000000081280 <CUSBHostController::PortStatusChanged(CUSBHCIRootPort*)>:
   81280:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   81284:   b00001c2    adrp    x2, ba000 <font_data+0x1080>
   81288:   910003fd    mov x29, sp
   8128c:   39622042    ldrb    w2, [x2, #2184]
   81290:   a90153f3    stp x19, x20, [sp, #16]
   81294:   a9025bf5    stp x21, x22, [sp, #32]
   81298:   36000502    tbz w2, #0, 81338 <CUSBHostController::PortStatusChanged(CUSBHCIRootPort*)+0xb8>
   8129c:   aa0103f3    mov x19, x1
   812a0:   b4000581    cbz x1, 81350 <CUSBHostController::PortStatusChanged(CUSBHCIRootPort*)+0xd0>
   812a4:   aa0003f5    mov x21, x0
   812a8:   d2800200    mov x0, #0x10
   812ac:   94009945    bl  a77c0 <operator new(unsigned long)>
   812b0:   52800022    mov w2, #0x1
   812b4:   b9401aa1    ldr w1, [x21, #24]
   812b8:   aa0003f6    mov x22, x0
   812bc:   f9000413    str x19, [x0, #8]
   812c0:   39000002    strb    w2, [x0]
   812c4:   350002c1    cbnz    w1, 8131c <CUSBHostController::PortStatusChanged(CUSBHCIRootPort*)+0x9c>
   812c8:   910042b3    add x19, x21, #0x10
   812cc:   aa1303e0    mov x0, x19
   812d0:   94007e00    bl  a0ad0 <CPtrList::GetFirst()>
   812d4:   aa0003e1    mov x1, x0
   812d8:   b4000480    cbz x0, 81368 <CUSBHostController::PortStatusChanged(CUSBHCIRootPort*)+0xe8>
   812dc:   d503201f    nop
   812e0:   aa1303e0    mov x0, x19
   812e4:   aa0103f4    mov x20, x1
   812e8:   94007dfe    bl  a0ae0 <CPtrList::GetNext(TPtrListElement*)>
   812ec:   aa0003e1    mov x1, x0
   812f0:   b5ffff80    cbnz    x0, 812e0 <CUSBHostController::PortStatusChanged(CUSBHCIRootPort*)+0x60>
   812f4:   aa1303e0    mov x0, x19
   812f8:   aa1603e2    mov x2, x22
   812fc:   aa1403e1    mov x1, x20
   81300:   94007e68    bl  a0ca0 <CPtrList::InsertAfter(TPtrListElement*, void*)>
   81304:   b9401aa0    ldr w0, [x21, #24]
   81308:   35000100    cbnz    w0, 81328 <CUSBHostController::PortStatusChanged(CUSBHCIRootPort*)+0xa8>
   8130c:   a94153f3    ldp x19, x20, [sp, #16]
   81310:   a9425bf5    ldp x21, x22, [sp, #32]
   81314:   a8c37bfd    ldp x29, x30, [sp], #48
   81318:   d65f03c0    ret
   8131c:   2a0103e0    mov w0, w1
   81320:   94009cd4    bl  a8670 <EnterCritical>
   81324:   17ffffe9    b   812c8 <CUSBHostController::PortStatusChanged(CUSBHCIRootPort*)+0x48>
   81328:   a94153f3    ldp x19, x20, [sp, #16]
   8132c:   a9425bf5    ldp x21, x22, [sp, #32]
   81330:   a8c37bfd    ldp x29, x30, [sp], #48
   81334:   14009cff    b   a8730 <LeaveCritical>
   81338:   d0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8133c:   d0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81340:   91052021    add x1, x1, #0x148
   81344:   91058000    add x0, x0, #0x160
   81348:   52801762    mov w2, #0xbb
   8134c:   94006ddd    bl  9cac0 <assertion_failed>
   81350:   d0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81354:   d0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81358:   91052021    add x1, x1, #0x148
   8135c:   91062000    add x0, x0, #0x188
   81360:   52801782    mov w2, #0xbc
   81364:   94006dd7    bl  9cac0 <assertion_failed>
   81368:   d2800014    mov x20, #0x0
   8136c:   17ffffe2    b   812f4 <CUSBHostController::PortStatusChanged(CUSBHCIRootPort*)+0x74>

0000000000081370 <CUSBHostController::PortStatusChanged(CUSBStandardHub*)>:
   81370:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   81374:   b00001c2    adrp    x2, ba000 <font_data+0x1080>
   81378:   910003fd    mov x29, sp
   8137c:   39622042    ldrb    w2, [x2, #2184]
   81380:   a90153f3    stp x19, x20, [sp, #16]
   81384:   a9025bf5    stp x21, x22, [sp, #32]
   81388:   360004c2    tbz w2, #0, 81420 <CUSBHostController::PortStatusChanged(CUSBStandardHub*)+0xb0>
   8138c:   aa0103f3    mov x19, x1
   81390:   b4000541    cbz x1, 81438 <CUSBHostController::PortStatusChanged(CUSBStandardHub*)+0xc8>
   81394:   aa0003f5    mov x21, x0
   81398:   d2800200    mov x0, #0x10
   8139c:   94009909    bl  a77c0 <operator new(unsigned long)>
   813a0:   b9401aa1    ldr w1, [x21, #24]
   813a4:   aa0003f6    mov x22, x0
   813a8:   3900001f    strb    wzr, [x0]
   813ac:   f9000413    str x19, [x0, #8]
   813b0:   350002a1    cbnz    w1, 81404 <CUSBHostController::PortStatusChanged(CUSBStandardHub*)+0x94>
   813b4:   910042b3    add x19, x21, #0x10
   813b8:   aa1303e0    mov x0, x19
   813bc:   94007dc5    bl  a0ad0 <CPtrList::GetFirst()>
   813c0:   aa0003e1    mov x1, x0
   813c4:   b4000460    cbz x0, 81450 <CUSBHostController::PortStatusChanged(CUSBStandardHub*)+0xe0>
   813c8:   aa1303e0    mov x0, x19
   813cc:   aa0103f4    mov x20, x1
   813d0:   94007dc4    bl  a0ae0 <CPtrList::GetNext(TPtrListElement*)>
   813d4:   aa0003e1    mov x1, x0
   813d8:   b5ffff80    cbnz    x0, 813c8 <CUSBHostController::PortStatusChanged(CUSBStandardHub*)+0x58>
   813dc:   aa1303e0    mov x0, x19
   813e0:   aa1603e2    mov x2, x22
   813e4:   aa1403e1    mov x1, x20
   813e8:   94007e2e    bl  a0ca0 <CPtrList::InsertAfter(TPtrListElement*, void*)>
   813ec:   b9401aa0    ldr w0, [x21, #24]
   813f0:   35000100    cbnz    w0, 81410 <CUSBHostController::PortStatusChanged(CUSBStandardHub*)+0xa0>
   813f4:   a94153f3    ldp x19, x20, [sp, #16]
   813f8:   a9425bf5    ldp x21, x22, [sp, #32]
   813fc:   a8c37bfd    ldp x29, x30, [sp], #48
   81400:   d65f03c0    ret
   81404:   2a0103e0    mov w0, w1
   81408:   94009c9a    bl  a8670 <EnterCritical>
   8140c:   17ffffea    b   813b4 <CUSBHostController::PortStatusChanged(CUSBStandardHub*)+0x44>
   81410:   a94153f3    ldp x19, x20, [sp, #16]
   81414:   a9425bf5    ldp x21, x22, [sp, #32]
   81418:   a8c37bfd    ldp x29, x30, [sp], #48
   8141c:   14009cc5    b   a8730 <LeaveCritical>
   81420:   d0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81424:   d0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81428:   91052021    add x1, x1, #0x148
   8142c:   91058000    add x0, x0, #0x160
   81430:   52801a82    mov w2, #0xd4
   81434:   94006da3    bl  9cac0 <assertion_failed>
   81438:   d0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8143c:   d0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81440:   91052021    add x1, x1, #0x148
   81444:   91068000    add x0, x0, #0x1a0
   81448:   52801aa2    mov w2, #0xd5
   8144c:   94006d9d    bl  9cac0 <assertion_failed>
   81450:   d2800014    mov x20, #0x0
   81454:   17ffffe2    b   813dc <CUSBHostController::PortStatusChanged(CUSBStandardHub*)+0x6c>
   81458:   d503201f    nop
   8145c:   d503201f    nop

0000000000081460 <CUSBHostController::Get()>:
   81460:   b00001c0    adrp    x0, ba000 <font_data+0x1080>
   81464:   f9444800    ldr x0, [x0, #2192]
   81468:   b4000040    cbz x0, 81470 <CUSBHostController::Get()+0x10>
   8146c:   d65f03c0    ret
   81470:   d0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81474:   d0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81478:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   8147c:   91052021    add x1, x1, #0x148
   81480:   910003fd    mov x29, sp
   81484:   91020000    add x0, x0, #0x80
   81488:   52801da2    mov w2, #0xed
   8148c:   94006d8d    bl  9cac0 <assertion_failed>

0000000000081490 <CUSBHostController::CancelDeviceTransactions(CUSBDevice*)>:
   81490:   d65f03c0    ret
    ...

00000000000814a0 <proxy_handler(unsigned char, unsigned char const*, void*)>:
   814a0:   aa0203f0    mov x16, x2
   814a4:   d61f0200    br  x16
   814a8:   d503201f    nop
   814ac:   d503201f    nop

00000000000814b0 <CUSBKeyboardDevice::~CUSBKeyboardDevice()>:
   814b0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   814b4:   910003fd    mov x29, sp
   814b8:   d0000181    adrp    x1, b3000 <_etext+0x3f9c>
   814bc:   91338021    add x1, x1, #0xce0
   814c0:   f9000bf3    str x19, [sp, #16]
   814c4:   aa0003f3    mov x19, x0
   814c8:   b9459400    ldr w0, [x0, #1428]
   814cc:   f9000261    str x1, [x19]
   814d0:   f902be7f    str xzr, [x19, #1400]
   814d4:   350000e0    cbnz    w0, 814f0 <CUSBKeyboardDevice::~CUSBKeyboardDevice()+0x40>
   814d8:   91012260    add x0, x19, #0x48
   814dc:   94006689    bl  9af00 <CKeyboardBehaviour::~CKeyboardBehaviour()>
   814e0:   aa1303e0    mov x0, x19
   814e4:   f9400bf3    ldr x19, [sp, #16]
   814e8:   a8c27bfd    ldp x29, x30, [sp], #32
   814ec:   14002fa1    b   8d370 <CUSBHIDDevice::~CUSBHIDDevice()>
   814f0:   9400715c    bl  9da60 <CDeviceNameService::Get()>
   814f4:   d0000181    adrp    x1, b3000 <_etext+0x3f9c>
   814f8:   b9459662    ldr w2, [x19, #1428]
   814fc:   52800003    mov w3, #0x0
   81500:   91352021    add x1, x1, #0xd48
   81504:   94007183    bl  9db10 <CDeviceNameService::RemoveDevice(char const*, unsigned int, bool)>
   81508:   b9459661    ldr w1, [x19, #1428]
   8150c:   b00001c0    adrp    x0, ba000 <font_data+0x1080>
   81510:   91226000    add x0, x0, #0x898
   81514:   94009a83    bl  a7f20 <CNumberPool::FreeNumber(unsigned int)>
   81518:   91012260    add x0, x19, #0x48
   8151c:   94006679    bl  9af00 <CKeyboardBehaviour::~CKeyboardBehaviour()>
   81520:   aa1303e0    mov x0, x19
   81524:   f9400bf3    ldr x19, [sp, #16]
   81528:   a8c27bfd    ldp x29, x30, [sp], #32
   8152c:   14002f91    b   8d370 <CUSBHIDDevice::~CUSBHIDDevice()>

0000000000081530 <CUSBKeyboardDevice::~CUSBKeyboardDevice()>:
   81530:   a9be7bfd    stp x29, x30, [sp, #-32]!
   81534:   910003fd    mov x29, sp
   81538:   f9000bf3    str x19, [sp, #16]
   8153c:   aa0003f3    mov x19, x0
   81540:   97ffffdc    bl  814b0 <CUSBKeyboardDevice::~CUSBKeyboardDevice()>
   81544:   aa1303e0    mov x0, x19
   81548:   f9400bf3    ldr x19, [sp, #16]
   8154c:   d280b301    mov x1, #0x598
   81550:   a8c27bfd    ldp x29, x30, [sp], #32
   81554:   140098c3    b   a7860 <operator delete(void*, unsigned long)>
   81558:   d503201f    nop
   8155c:   d503201f    nop

0000000000081560 <CUSBKeyboardDevice::ReportHandler(unsigned char const*, unsigned int)>:
   81560:   f100003f    cmp x1, #0x0
   81564:   7a481840    ccmp    w2, #0x8, #0x0, ne
   81568:   54000d01    b.ne    81708 <CUSBKeyboardDevice::ReportHandler(unsigned char const*, unsigned int)+0x1a8>
   8156c:   a9bb7bfd    stp x29, x30, [sp, #-80]!
   81570:   910003fd    mov x29, sp
   81574:   f942bc03    ldr x3, [x0, #1400]
   81578:   a9025bf5    stp x21, x22, [sp, #32]
   8157c:   aa0103f5    mov x21, x1
   81580:   a90363f7    stp x23, x24, [sp, #48]
   81584:   aa0003f7    mov x23, x0
   81588:   f90023f9    str x25, [sp, #64]
   8158c:   aa0103f9    mov x25, x1
   81590:   384026a0    ldrb    w0, [x21], #2
   81594:   b4000b63    cbz x3, 81700 <CUSBKeyboardDevice::ReportHandler(unsigned char const*, unsigned int)+0x1a0>
   81598:   aa1503e1    mov x1, x21
   8159c:   f942c2e2    ldr x2, [x23, #1408]
   815a0:   d63f0060    blr x3
   815a4:   395622e0    ldrb    w0, [x23, #1416]
   815a8:   36000a20    tbz w0, #0, 816ec <CUSBKeyboardDevice::ReportHandler(unsigned char const*, unsigned int)+0x18c>
   815ac:   a90153f3    stp x19, x20, [sp, #16]
   815b0:   39400320    ldrb    w0, [x25]
   815b4:   52801013    mov w19, #0x80
   815b8:   52800014    mov w20, #0x0
   815bc:   52800038    mov w24, #0x1
   815c0:   910122f6    add x22, x23, #0x48
   815c4:   14000008    b   815e4 <CUSBKeyboardDevice::ReportHandler(unsigned char const*, unsigned int)+0x84>
   815c8:   35000582    cbnz    w2, 81678 <CUSBKeyboardDevice::ReportHandler(unsigned char const*, unsigned int)+0x118>
   815cc:   11000694    add w20, w20, #0x1
   815d0:   11000673    add w19, w19, #0x1
   815d4:   7100229f    cmp w20, #0x8
   815d8:   12001e73    and w19, w19, #0xff
   815dc:   54000220    b.eq    81620 <CUSBKeyboardDevice::ReportHandler(unsigned char const*, unsigned int)+0xc0>
   815e0:   39400320    ldrb    w0, [x25]
   815e4:   1ad42303    lsl w3, w24, w20
   815e8:   395626e2    ldrb    w2, [x23, #1417]
   815ec:   6a03001f    tst w0, w3
   815f0:   0a030042    and w2, w2, w3
   815f4:   54fffea0    b.eq    815c8 <CUSBKeyboardDevice::ReportHandler(unsigned char const*, unsigned int)+0x68>
   815f8:   35fffea2    cbnz    w2, 815cc <CUSBKeyboardDevice::ReportHandler(unsigned char const*, unsigned int)+0x6c>
   815fc:   2a1303e1    mov w1, w19
   81600:   aa1603e0    mov x0, x22
   81604:   11000694    add w20, w20, #0x1
   81608:   11000673    add w19, w19, #0x1
   8160c:   940066d1    bl  9b150 <CKeyboardBehaviour::KeyPressed(unsigned char)>
   81610:   7100229f    cmp w20, #0x8
   81614:   12001e73    and w19, w19, #0xff
   81618:   54fffe41    b.ne    815e0 <CUSBKeyboardDevice::ReportHandler(unsigned char const*, unsigned int)+0x80>
   8161c:   d503201f    nop
   81620:   91162ef8    add x24, x23, #0x58b
   81624:   911646f6    add x22, x23, #0x591
   81628:   aa1803f3    mov x19, x24
   8162c:   91002334    add x20, x25, #0x8
   81630:   14000004    b   81640 <CUSBKeyboardDevice::ReportHandler(unsigned char const*, unsigned int)+0xe0>
   81634:   91000673    add x19, x19, #0x1
   81638:   eb16027f    cmp x19, x22
   8163c:   540003a0    b.eq    816b0 <CUSBKeyboardDevice::ReportHandler(unsigned char const*, unsigned int)+0x150>
   81640:   39400261    ldrb    w1, [x19]
   81644:   aa1503e2    mov x2, x21
   81648:   34ffff61    cbz w1, 81634 <CUSBKeyboardDevice::ReportHandler(unsigned char const*, unsigned int)+0xd4>
   8164c:   eb02029f    cmp x20, x2
   81650:   540000e0    b.eq    8166c <CUSBKeyboardDevice::ReportHandler(unsigned char const*, unsigned int)+0x10c>
   81654:   d503201f    nop
   81658:   38401443    ldrb    w3, [x2], #1
   8165c:   6b01007f    cmp w3, w1
   81660:   54fffea0    b.eq    81634 <CUSBKeyboardDevice::ReportHandler(unsigned char const*, unsigned int)+0xd4>
   81664:   eb02029f    cmp x20, x2
   81668:   54ffff81    b.ne    81658 <CUSBKeyboardDevice::ReportHandler(unsigned char const*, unsigned int)+0xf8>
   8166c:   910122e0    add x0, x23, #0x48
   81670:   940066cc    bl  9b1a0 <CKeyboardBehaviour::KeyReleased(unsigned char)>
   81674:   17fffff0    b   81634 <CUSBKeyboardDevice::ReportHandler(unsigned char const*, unsigned int)+0xd4>
   81678:   2a1303e1    mov w1, w19
   8167c:   aa1603e0    mov x0, x22
   81680:   940066c8    bl  9b1a0 <CKeyboardBehaviour::KeyReleased(unsigned char)>
   81684:   17ffffd2    b   815cc <CUSBKeyboardDevice::ReportHandler(unsigned char const*, unsigned int)+0x6c>
   81688:   38401443    ldrb    w3, [x2], #1
   8168c:   6b01007f    cmp w3, w1
   81690:   540000a0    b.eq    816a4 <CUSBKeyboardDevice::ReportHandler(unsigned char const*, unsigned int)+0x144>
   81694:   eb16005f    cmp x2, x22
   81698:   54ffff81    b.ne    81688 <CUSBKeyboardDevice::ReportHandler(unsigned char const*, unsigned int)+0x128>
   8169c:   910122e0    add x0, x23, #0x48
   816a0:   940066ac    bl  9b150 <CKeyboardBehaviour::KeyPressed(unsigned char)>
   816a4:   910006b5    add x21, x21, #0x1
   816a8:   eb15029f    cmp x20, x21
   816ac:   540000e0    b.eq    816c8 <CUSBKeyboardDevice::ReportHandler(unsigned char const*, unsigned int)+0x168>
   816b0:   394002a1    ldrb    w1, [x21]
   816b4:   aa1803e2    mov x2, x24
   816b8:   35fffee1    cbnz    w1, 81694 <CUSBKeyboardDevice::ReportHandler(unsigned char const*, unsigned int)+0x134>
   816bc:   910006b5    add x21, x21, #0x1
   816c0:   eb15029f    cmp x20, x21
   816c4:   54ffff61    b.ne    816b0 <CUSBKeyboardDevice::ReportHandler(unsigned char const*, unsigned int)+0x150>
   816c8:   a94153f3    ldp x19, x20, [sp, #16]
   816cc:   aa1903e1    mov x1, x25
   816d0:   911626e0    add x0, x23, #0x589
   816d4:   d2800102    mov x2, #0x8
   816d8:   a9425bf5    ldp x21, x22, [sp, #32]
   816dc:   a94363f7    ldp x23, x24, [sp, #48]
   816e0:   f94023f9    ldr x25, [sp, #64]
   816e4:   a8c57bfd    ldp x29, x30, [sp], #80
   816e8:   140095a4    b   a6d78 <memcpy>
   816ec:   a9425bf5    ldp x21, x22, [sp, #32]
   816f0:   a94363f7    ldp x23, x24, [sp, #48]
   816f4:   f94023f9    ldr x25, [sp, #64]
   816f8:   a8c57bfd    ldp x29, x30, [sp], #80
   816fc:   d65f03c0    ret
   81700:   a90153f3    stp x19, x20, [sp, #16]
   81704:   17ffffac    b   815b4 <CUSBKeyboardDevice::ReportHandler(unsigned char const*, unsigned int)+0x54>
   81708:   d65f03c0    ret
   8170c:   d503201f    nop

0000000000081710 <CUSBKeyboardDevice::CUSBKeyboardDevice(CUSBFunction*)>:
   81710:   a9be7bfd    stp x29, x30, [sp, #-32]!
   81714:   52800102    mov w2, #0x8
   81718:   910003fd    mov x29, sp
   8171c:   f9000bf3    str x19, [sp, #16]
   81720:   aa0003f3    mov x19, x0
   81724:   94002efb    bl  8d310 <CUSBHIDDevice::CUSBHIDDevice(CUSBFunction*, unsigned int)>
   81728:   aa1303e0    mov x0, x19
   8172c:   d0000181    adrp    x1, b3000 <_etext+0x3f9c>
   81730:   91338021    add x1, x1, #0xce0
   81734:   f8048401    str x1, [x0], #72
   81738:   940065ea    bl  9aee0 <CKeyboardBehaviour::CKeyboardBehaviour()>
   8173c:   91162660    add x0, x19, #0x589
   81740:   d2800102    mov x2, #0x8
   81744:   f902be7f    str xzr, [x19, #1400]
   81748:   52800001    mov w1, #0x0
   8174c:   f902c27f    str xzr, [x19, #1408]
   81750:   3916227f    strb    wzr, [x19, #1416]
   81754:   3916467f    strb    wzr, [x19, #1425]
   81758:   b905967f    str wzr, [x19, #1428]
   8175c:   f9400bf3    ldr x19, [sp, #16]
   81760:   a8c27bfd    ldp x29, x30, [sp], #32
   81764:   1400956d    b   a6d18 <memset>
   81768:   d503201f    nop
   8176c:   d503201f    nop

0000000000081770 <CUSBKeyboardDevice::RegisterKeyPressedHandler(void (*)(char const*))>:
   81770:   91012000    add x0, x0, #0x48
   81774:   140065eb    b   9af20 <CKeyboardBehaviour::RegisterKeyPressedHandler(void (*)(char const*))>
   81778:   d503201f    nop
   8177c:   d503201f    nop

0000000000081780 <CUSBKeyboardDevice::RegisterSelectConsoleHandler(void (*)(unsigned int))>:
   81780:   91012000    add x0, x0, #0x48
   81784:   140065f3    b   9af50 <CKeyboardBehaviour::RegisterSelectConsoleHandler(void (*)(unsigned int))>
   81788:   d503201f    nop
   8178c:   d503201f    nop

0000000000081790 <CUSBKeyboardDevice::RegisterShutdownHandler(void (*)())>:
   81790:   91012000    add x0, x0, #0x48
   81794:   140065fb    b   9af80 <CKeyboardBehaviour::RegisterShutdownHandler(void (*)())>
   81798:   d503201f    nop
   8179c:   d503201f    nop

00000000000817a0 <CUSBKeyboardDevice::GetLEDStatus() const>:
   817a0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   817a4:   91012000    add x0, x0, #0x48
   817a8:   910003fd    mov x29, sp
   817ac:   94006601    bl  9afb0 <CKeyboardBehaviour::GetLEDStatus() const>
   817b0:   12000800    and w0, w0, #0x7
   817b4:   a8c17bfd    ldp x29, x30, [sp], #16
   817b8:   d65f03c0    ret
   817bc:   d503201f    nop

00000000000817c0 <CUSBKeyboardDevice::RegisterKeyStatusHandlerRaw(void (*)(unsigned char, unsigned char const*, void*), bool, void*)>:
   817c0:   b40000c1    cbz x1, 817d8 <CUSBKeyboardDevice::RegisterKeyStatusHandlerRaw(void (*)(unsigned char, unsigned char const*, void*), bool, void*)+0x18>
   817c4:   12001c42    and w2, w2, #0xff
   817c8:   f902bc01    str x1, [x0, #1400]
   817cc:   f902c003    str x3, [x0, #1408]
   817d0:   39162002    strb    w2, [x0, #1416]
   817d4:   d65f03c0    ret
   817d8:   d0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   817dc:   d0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   817e0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   817e4:   91070021    add x1, x1, #0x1c0
   817e8:   910003fd    mov x29, sp
   817ec:   91074000    add x0, x0, #0x1d0
   817f0:   528010e2    mov w2, #0x87
   817f4:   94006cb3    bl  9cac0 <assertion_failed>
   817f8:   d503201f    nop
   817fc:   d503201f    nop

0000000000081800 <CUSBKeyboardDevice::RegisterKeyStatusHandlerRaw(void (*)(unsigned char, unsigned char const*), bool)>:
   81800:   90000003    adrp    x3, 81000 <CUSBHostController::~CUSBHostController()+0x30>
   81804:   91128063    add x3, x3, #0x4a0
   81808:   f902c001    str x1, [x0, #1408]
   8180c:   39162002    strb    w2, [x0, #1416]
   81810:   f902bc03    str x3, [x0, #1400]
   81814:   d65f03c0    ret
   81818:   d503201f    nop
   8181c:   d503201f    nop

0000000000081820 <CUSBKeyboardDevice::UnregisterKeyStatusHandlerRaw()>:
   81820:   f902bc1f    str xzr, [x0, #1400]
   81824:   f902c01f    str xzr, [x0, #1408]
   81828:   d65f03c0    ret
   8182c:   d503201f    nop

0000000000081830 <CUSBKeyboardDevice::SetLEDs(unsigned char)>:
   81830:   a9b67bfd    stp x29, x30, [sp, #-160]!
   81834:   910003fd    mov x29, sp
   81838:   a90153f3    stp x19, x20, [sp, #16]
   8183c:   9101bff3    add x19, sp, #0x6f
   81840:   aa0003f4    mov x20, x0
   81844:   927ae673    and x19, x19, #0xffffffffffffffc0
   81848:   f90013f5    str x21, [sp, #32]
   8184c:   a9007e7f    stp xzr, xzr, [x19]
   81850:   39000261    strb    w1, [x19]
   81854:   a9017e7f    stp xzr, xzr, [x19, #16]
   81858:   a9027e7f    stp xzr, xzr, [x19, #32]
   8185c:   a9037e7f    stp xzr, xzr, [x19, #48]
   81860:   9400233c    bl  8a550 <CUSBFunction::GetHost() const>
   81864:   aa0003f5    mov x21, x0
   81868:   aa1403e0    mov x0, x20
   8186c:   9400232d    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   81870:   aa0003e1    mov x1, x0
   81874:   aa1403e0    mov x0, x20
   81878:   aa0103f4    mov x20, x1
   8187c:   94002399    bl  8a6e0 <CUSBFunction::GetInterfaceNumber() const>
   81880:   12001c05    and w5, w0, #0xff
   81884:   aa1303e6    mov x6, x19
   81888:   aa1403e1    mov x1, x20
   8188c:   aa1503e0    mov x0, x21
   81890:   52800027    mov w7, #0x1
   81894:   52804004    mov w4, #0x200
   81898:   52800123    mov w3, #0x9
   8189c:   52800422    mov w2, #0x21
   818a0:   97fffddc    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   818a4:   2a2003e0    mvn w0, w0
   818a8:   a94153f3    ldp x19, x20, [sp, #16]
   818ac:   531f7c00    lsr w0, w0, #31
   818b0:   f94013f5    ldr x21, [sp, #32]
   818b4:   a8ca7bfd    ldp x29, x30, [sp], #160
   818b8:   d65f03c0    ret
   818bc:   d503201f    nop

00000000000818c0 <CUSBKeyboardDevice::Configure()>:
   818c0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   818c4:   52800001    mov w1, #0x0
   818c8:   910003fd    mov x29, sp
   818cc:   a90153f3    stp x19, x20, [sp, #16]
   818d0:   aa0003f3    mov x19, x0
   818d4:   94002ed3    bl  8d420 <CUSBHIDDevice::ConfigureHID(unsigned int)>
   818d8:   2a0003f4    mov w20, w0
   818dc:   360002d4    tbz w20, #0, 81934 <CUSBKeyboardDevice::Configure()+0x74>
   818e0:   39564661    ldrb    w1, [x19, #1425]
   818e4:   aa1303e0    mov x0, x19
   818e8:   d0000194    adrp    x20, b3000 <_etext+0x3f9c>
   818ec:   91352294    add x20, x20, #0xd48
   818f0:   97ffffd0    bl  81830 <CUSBKeyboardDevice::SetLEDs(unsigned char)>
   818f4:   b00001c0    adrp    x0, ba000 <font_data+0x1080>
   818f8:   91002282    add x2, x20, #0x8
   818fc:   52800021    mov w1, #0x1
   81900:   91226000    add x0, x0, #0x898
   81904:   94009957    bl  a7e60 <CNumberPool::AllocateNumber(bool, char const*)>
   81908:   b9059660    str w0, [x19, #1428]
   8190c:   94007055    bl  9da60 <CDeviceNameService::Get()>
   81910:   b9459662    ldr w2, [x19, #1428]
   81914:   aa1403e1    mov x1, x20
   81918:   aa1303e3    mov x3, x19
   8191c:   52800004    mov w4, #0x0
   81920:   9400705c    bl  9da90 <CDeviceNameService::AddDevice(char const*, unsigned int, CDevice*, bool)>
   81924:   aa1303e0    mov x0, x19
   81928:   a94153f3    ldp x19, x20, [sp, #16]
   8192c:   a8c27bfd    ldp x29, x30, [sp], #32
   81930:   14002fe8    b   8d8d0 <CUSBHIDDevice::StartRequest()>
   81934:   94007733    bl  9f600 <CLogger::Get()>
   81938:   d0000181    adrp    x1, b3000 <_etext+0x3f9c>
   8193c:   91352021    add x1, x1, #0xd48
   81940:   d0000163    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81944:   91002021    add x1, x1, #0x8
   81948:   9107c063    add x3, x3, #0x1f0
   8194c:   52800022    mov w2, #0x1
   81950:   94007914    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   81954:   2a1403e0    mov w0, w20
   81958:   a94153f3    ldp x19, x20, [sp, #16]
   8195c:   a8c27bfd    ldp x29, x30, [sp], #32
   81960:   d65f03c0    ret
   81964:   d503201f    nop
   81968:   d503201f    nop
   8196c:   d503201f    nop

0000000000081970 <CUSBKeyboardDevice::UpdateLEDs()>:
   81970:   a9be7bfd    stp x29, x30, [sp, #-32]!
   81974:   910003fd    mov x29, sp
   81978:   f9000bf3    str x19, [sp, #16]
   8197c:   aa0003f3    mov x19, x0
   81980:   f942bc00    ldr x0, [x0, #1400]
   81984:   b4000060    cbz x0, 81990 <CUSBKeyboardDevice::UpdateLEDs()+0x20>
   81988:   39562260    ldrb    w0, [x19, #1416]
   8198c:   360000e0    tbz w0, #0, 819a8 <CUSBKeyboardDevice::UpdateLEDs()+0x38>
   81990:   91012260    add x0, x19, #0x48
   81994:   94006587    bl  9afb0 <CKeyboardBehaviour::GetLEDStatus() const>
   81998:   39564661    ldrb    w1, [x19, #1425]
   8199c:   12000802    and w2, w0, #0x7
   819a0:   6b02003f    cmp w1, w2
   819a4:   54000081    b.ne    819b4 <CUSBKeyboardDevice::UpdateLEDs()+0x44>
   819a8:   f9400bf3    ldr x19, [sp, #16]
   819ac:   a8c27bfd    ldp x29, x30, [sp], #32
   819b0:   d65f03c0    ret
   819b4:   2a0203e1    mov w1, w2
   819b8:   aa1303e0    mov x0, x19
   819bc:   39164662    strb    w2, [x19, #1425]
   819c0:   97ffff9c    bl  81830 <CUSBKeyboardDevice::SetLEDs(unsigned char)>
   819c4:   3707ff20    tbnz    w0, #0, 819a8 <CUSBKeyboardDevice::UpdateLEDs()+0x38>
   819c8:   9400770e    bl  9f600 <CLogger::Get()>
   819cc:   d0000181    adrp    x1, b3000 <_etext+0x3f9c>
   819d0:   91352021    add x1, x1, #0xd48
   819d4:   f9400bf3    ldr x19, [sp, #16]
   819d8:   d0000163    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   819dc:   a8c27bfd    ldp x29, x30, [sp], #32
   819e0:   91002021    add x1, x1, #0x8
   819e4:   91084063    add x3, x3, #0x210
   819e8:   52800022    mov w2, #0x1
   819ec:   140078ed    b   9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>

00000000000819f0 <CUSBKeyboardDevice::FindByte(unsigned char const*, unsigned char, unsigned int)>:
   819f0:   12001c21    and w1, w1, #0xff
   819f4:   8b224002    add x2, x0, w2, uxtw
   819f8:   14000004    b   81a08 <CUSBKeyboardDevice::FindByte(unsigned char const*, unsigned char, unsigned int)+0x18>
   819fc:   38401403    ldrb    w3, [x0], #1
   81a00:   6b01007f    cmp w3, w1
   81a04:   540000a0    b.eq    81a18 <CUSBKeyboardDevice::FindByte(unsigned char const*, unsigned char, unsigned int)+0x28>
   81a08:   eb02001f    cmp x0, x2
   81a0c:   54ffff81    b.ne    819fc <CUSBKeyboardDevice::FindByte(unsigned char const*, unsigned char, unsigned int)+0xc>
   81a10:   52800000    mov w0, #0x0
   81a14:   d65f03c0    ret
   81a18:   52800020    mov w0, #0x1
   81a1c:   d65f03c0    ret

0000000000081a20 <CUSBFunction::GetHubInfo() const>:
   81a20:   d2800000    mov x0, #0x0
   81a24:   d65f03c0    ret
    ...

0000000000081a30 <_GLOBAL__sub_I__ZN18CUSBKeyboardDevice18s_DeviceNumberPoolE>:
   81a30:   a9be7bfd    stp x29, x30, [sp, #-32]!
   81a34:   910003fd    mov x29, sp
   81a38:   528007e2    mov w2, #0x3f
   81a3c:   52800021    mov w1, #0x1
   81a40:   f9000bf3    str x19, [sp, #16]
   81a44:   b00001d3    adrp    x19, ba000 <font_data+0x1080>
   81a48:   91226273    add x19, x19, #0x898
   81a4c:   aa1303e0    mov x0, x19
   81a50:   940098e8    bl  a7df0 <CNumberPool::CNumberPool(unsigned int, unsigned int)>
   81a54:   b00001c2    adrp    x2, ba000 <font_data+0x1080>
   81a58:   d0000120    adrp    x0, a7000 <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int, bool)+0xd0>
   81a5c:   aa1303e1    mov x1, x19
   81a60:   f9400bf3    ldr x19, [sp, #16]
   81a64:   91278042    add x2, x2, #0x9e0
   81a68:   a8c27bfd    ldp x29, x30, [sp], #32
   81a6c:   91394000    add x0, x0, #0xe50
   81a70:   14008ec8    b   a5590 <__cxa_atexit>
    ...

0000000000081a80 <CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)>:
   81a80:   d2c00125    mov x5, #0x900000000
   81a84:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   81a88:   910003fd    mov x29, sp
   81a8c:   a9001001    stp x1, x4, [x0]
   81a90:   f9000802    str x2, [x0, #16]
   81a94:   29037c03    stp w3, wzr, [x0, #24]
   81a98:   f9001005    str x5, [x0, #32]
   81a9c:   b900281f    str wzr, [x0, #40]
   81aa0:   a9077c1f    stp xzr, xzr, [x0, #112]
   81aa4:   f900401f    str xzr, [x0, #128]
   81aa8:   3902201f    strb    wzr, [x0, #136]
   81aac:   b40000c1    cbz x1, 81ac4 <CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)+0x44>
   81ab0:   7100007f    cmp w3, #0x0
   81ab4:   fa401840    ccmp    x2, #0x0, #0x0, ne
   81ab8:   54000120    b.eq    81adc <CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)+0x5c>
   81abc:   a8c17bfd    ldp x29, x30, [sp], #16
   81ac0:   d65f03c0    ret
   81ac4:   d0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81ac8:   d0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81acc:   9108a021    add x1, x1, #0x228
   81ad0:   9108e000    add x0, x0, #0x238
   81ad4:   528004a2    mov w2, #0x25
   81ad8:   94006bfa    bl  9cac0 <assertion_failed>
   81adc:   d0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81ae0:   d0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81ae4:   9108a021    add x1, x1, #0x228
   81ae8:   91094000    add x0, x0, #0x250
   81aec:   528004c2    mov w2, #0x26
   81af0:   94006bf4    bl  9cac0 <assertion_failed>
   81af4:   d503201f    nop
   81af8:   d503201f    nop
   81afc:   d503201f    nop

0000000000081b00 <CUSBRequest::~CUSBRequest()>:
   81b00:   d65f03c0    ret
   81b04:   d503201f    nop
   81b08:   d503201f    nop
   81b0c:   d503201f    nop

0000000000081b10 <CUSBRequest::GetEndpoint() const>:
   81b10:   f9400000    ldr x0, [x0]
   81b14:   b4000040    cbz x0, 81b1c <CUSBRequest::GetEndpoint() const+0xc>
   81b18:   d65f03c0    ret
   81b1c:   d0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81b20:   d0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81b24:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   81b28:   9108a021    add x1, x1, #0x228
   81b2c:   910003fd    mov x29, sp
   81b30:   9108e000    add x0, x0, #0x238
   81b34:   52800662    mov w2, #0x33
   81b38:   94006be2    bl  9cac0 <assertion_failed>
   81b3c:   d503201f    nop

0000000000081b40 <CUSBRequest::SetStatus(int)>:
   81b40:   b9001c01    str w1, [x0, #28]
   81b44:   d65f03c0    ret
   81b48:   d503201f    nop
   81b4c:   d503201f    nop

0000000000081b50 <CUSBRequest::SetResultLen(unsigned int)>:
   81b50:   b9002001    str w1, [x0, #32]
   81b54:   d65f03c0    ret
   81b58:   d503201f    nop
   81b5c:   d503201f    nop

0000000000081b60 <CUSBRequest::SetUSBError(TUSBError)>:
   81b60:   b9002401    str w1, [x0, #36]
   81b64:   d65f03c0    ret
   81b68:   d503201f    nop
   81b6c:   d503201f    nop

0000000000081b70 <CUSBRequest::GetStatus() const>:
   81b70:   b9401c00    ldr w0, [x0, #28]
   81b74:   d65f03c0    ret
   81b78:   d503201f    nop
   81b7c:   d503201f    nop

0000000000081b80 <CUSBRequest::GetResultLength() const>:
   81b80:   b9401c01    ldr w1, [x0, #28]
   81b84:   34000061    cbz w1, 81b90 <CUSBRequest::GetResultLength() const+0x10>
   81b88:   b9402000    ldr w0, [x0, #32]
   81b8c:   d65f03c0    ret
   81b90:   d0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81b94:   d0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81b98:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   81b9c:   9108a021    add x1, x1, #0x228
   81ba0:   910003fd    mov x29, sp
   81ba4:   9109e000    add x0, x0, #0x278
   81ba8:   528009a2    mov w2, #0x4d
   81bac:   94006bc5    bl  9cac0 <assertion_failed>

0000000000081bb0 <CUSBRequest::GetUSBError() const>:
   81bb0:   b9401c01    ldr w1, [x0, #28]
   81bb4:   35000061    cbnz    w1, 81bc0 <CUSBRequest::GetUSBError() const+0x10>
   81bb8:   b9402400    ldr w0, [x0, #36]
   81bbc:   d65f03c0    ret
   81bc0:   d0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81bc4:   d0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81bc8:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   81bcc:   9108a021    add x1, x1, #0x228
   81bd0:   910003fd    mov x29, sp
   81bd4:   910a2000    add x0, x0, #0x288
   81bd8:   52800a82    mov w2, #0x54
   81bdc:   94006bb9    bl  9cac0 <assertion_failed>

0000000000081be0 <CUSBRequest::GetSetupData()>:
   81be0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   81be4:   910003fd    mov x29, sp
   81be8:   f9000bf3    str x19, [sp, #16]
   81bec:   aa0003f3    mov x19, x0
   81bf0:   f9400000    ldr x0, [x0]
   81bf4:   94002103    bl  8a000 <CUSBEndpoint::GetType() const>
   81bf8:   350000c0    cbnz    w0, 81c10 <CUSBRequest::GetSetupData()+0x30>
   81bfc:   f9400660    ldr x0, [x19, #8]
   81c00:   b4000140    cbz x0, 81c28 <CUSBRequest::GetSetupData()+0x48>
   81c04:   f9400bf3    ldr x19, [sp, #16]
   81c08:   a8c27bfd    ldp x29, x30, [sp], #32
   81c0c:   d65f03c0    ret
   81c10:   d0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81c14:   d0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81c18:   9108a021    add x1, x1, #0x228
   81c1c:   910a6000    add x0, x0, #0x298
   81c20:   52800b62    mov w2, #0x5b
   81c24:   94006ba7    bl  9cac0 <assertion_failed>
   81c28:   d0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81c2c:   d0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81c30:   9108a021    add x1, x1, #0x228
   81c34:   910b2000    add x0, x0, #0x2c8
   81c38:   52800b82    mov w2, #0x5c
   81c3c:   94006ba1    bl  9cac0 <assertion_failed>

0000000000081c40 <CUSBRequest::GetBuffer()>:
   81c40:   aa0003e1    mov x1, x0
   81c44:   f9400800    ldr x0, [x0, #16]
   81c48:   b4000040    cbz x0, 81c50 <CUSBRequest::GetBuffer()+0x10>
   81c4c:   d65f03c0    ret
   81c50:   b9401821    ldr w1, [x1, #24]
   81c54:   34ffffc1    cbz w1, 81c4c <CUSBRequest::GetBuffer()+0xc>
   81c58:   d0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81c5c:   d0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81c60:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   81c64:   9108a021    add x1, x1, #0x228
   81c68:   910003fd    mov x29, sp
   81c6c:   91094000    add x0, x0, #0x250
   81c70:   52800c62    mov w2, #0x63
   81c74:   94006b93    bl  9cac0 <assertion_failed>
   81c78:   d503201f    nop
   81c7c:   d503201f    nop

0000000000081c80 <CUSBRequest::GetBufLen() const>:
   81c80:   b9401800    ldr w0, [x0, #24]
   81c84:   d65f03c0    ret
   81c88:   d503201f    nop
   81c8c:   d503201f    nop

0000000000081c90 <CUSBRequest::AddIsoPacket(unsigned short)>:
   81c90:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   81c94:   910003fd    mov x29, sp
   81c98:   b9402802    ldr w2, [x0, #40]
   81c9c:   71007c5f    cmp w2, #0x1f
   81ca0:   54000188    b.hi    81cd0 <CUSBRequest::AddIsoPacket(unsigned short)+0x40>
   81ca4:   12003c21    and w1, w1, #0xffff
   81ca8:   34000201    cbz w1, 81ce8 <CUSBRequest::AddIsoPacket(unsigned short)+0x58>
   81cac:   b9401803    ldr w3, [x0, #24]
   81cb0:   6b03003f    cmp w1, w3
   81cb4:   54000268    b.hi    81d00 <CUSBRequest::AddIsoPacket(unsigned short)+0x70>
   81cb8:   11000443    add w3, w2, #0x1
   81cbc:   8b224402    add x2, x0, w2, uxtw #1
   81cc0:   b9002803    str w3, [x0, #40]
   81cc4:   79005841    strh    w1, [x2, #44]
   81cc8:   a8c17bfd    ldp x29, x30, [sp], #16
   81ccc:   d65f03c0    ret
   81cd0:   d0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81cd4:   d0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81cd8:   9108a021    add x1, x1, #0x228
   81cdc:   910b8000    add x0, x0, #0x2e0
   81ce0:   52800e02    mov w2, #0x70
   81ce4:   94006b77    bl  9cac0 <assertion_failed>
   81ce8:   d0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81cec:   d0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81cf0:   9108a021    add x1, x1, #0x228
   81cf4:   910c2000    add x0, x0, #0x308
   81cf8:   52800e22    mov w2, #0x71
   81cfc:   94006b71    bl  9cac0 <assertion_failed>
   81d00:   d0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81d04:   d0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81d08:   9108a021    add x1, x1, #0x228
   81d0c:   910c8000    add x0, x0, #0x320
   81d10:   52800e42    mov w2, #0x72
   81d14:   94006b6b    bl  9cac0 <assertion_failed>
   81d18:   d503201f    nop
   81d1c:   d503201f    nop

0000000000081d20 <CUSBRequest::GetNumIsoPackets() const>:
   81d20:   b9402800    ldr w0, [x0, #40]
   81d24:   34000040    cbz w0, 81d2c <CUSBRequest::GetNumIsoPackets() const+0xc>
   81d28:   d65f03c0    ret
   81d2c:   d0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81d30:   d0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81d34:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   81d38:   9108a021    add x1, x1, #0x228
   81d3c:   910003fd    mov x29, sp
   81d40:   910d0000    add x0, x0, #0x340
   81d44:   52800f22    mov w2, #0x79
   81d48:   94006b5e    bl  9cac0 <assertion_failed>
   81d4c:   d503201f    nop

0000000000081d50 <CUSBRequest::GetIsoPacketSize(unsigned int) const>:
   81d50:   b9402802    ldr w2, [x0, #40]
   81d54:   6b01005f    cmp w2, w1
   81d58:   54000089    b.ls    81d68 <CUSBRequest::GetIsoPacketSize(unsigned int) const+0x18>
   81d5c:   8b214401    add x1, x0, w1, uxtw #1
   81d60:   79405820    ldrh    w0, [x1, #44]
   81d64:   d65f03c0    ret
   81d68:   d0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81d6c:   d0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81d70:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   81d74:   9108a021    add x1, x1, #0x228
   81d78:   910003fd    mov x29, sp
   81d7c:   910d6000    add x0, x0, #0x358
   81d80:   52801002    mov w2, #0x80
   81d84:   94006b4f    bl  9cac0 <assertion_failed>
   81d88:   d503201f    nop
   81d8c:   d503201f    nop

0000000000081d90 <CUSBRequest::SetCompletionRoutine(void (*)(CUSBRequest*, void*, void*), void*, void*)>:
   81d90:   a9070801    stp x1, x2, [x0, #112]
   81d94:   f9004003    str x3, [x0, #128]
   81d98:   b4000041    cbz x1, 81da0 <CUSBRequest::SetCompletionRoutine(void (*)(CUSBRequest*, void*, void*), void*, void*)+0x10>
   81d9c:   d65f03c0    ret
   81da0:   d0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81da4:   d0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81da8:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   81dac:   9108a021    add x1, x1, #0x228
   81db0:   910003fd    mov x29, sp
   81db4:   910de000    add x0, x0, #0x378
   81db8:   52801162    mov w2, #0x8b
   81dbc:   94006b41    bl  9cac0 <assertion_failed>

0000000000081dc0 <CUSBRequest::CallCompletionRoutine()>:
   81dc0:   f9403803    ldr x3, [x0, #112]
   81dc4:   b4000083    cbz x3, 81dd4 <CUSBRequest::CallCompletionRoutine()+0x14>
   81dc8:   a9478801    ldp x1, x2, [x0, #120]
   81dcc:   aa0303f0    mov x16, x3
   81dd0:   d61f0200    br  x16
   81dd4:   d0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81dd8:   d0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81ddc:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   81de0:   9108a021    add x1, x1, #0x228
   81de4:   910003fd    mov x29, sp
   81de8:   910de000    add x0, x0, #0x378
   81dec:   52801202    mov w2, #0x90
   81df0:   94006b34    bl  9cac0 <assertion_failed>
   81df4:   d503201f    nop
   81df8:   d503201f    nop
   81dfc:   d503201f    nop

0000000000081e00 <CUSBRequest::SetCompleteOnNAK()>:
   81e00:   52800021    mov w1, #0x1
   81e04:   39022001    strb    w1, [x0, #136]
   81e08:   d65f03c0    ret
   81e0c:   d503201f    nop

0000000000081e10 <CUSBRequest::IsCompleteOnNAK() const>:
   81e10:   39422000    ldrb    w0, [x0, #136]
   81e14:   d65f03c0    ret
   81e18:   d503201f    nop
   81e1c:   d503201f    nop

0000000000081e20 <CUSBRequest::operator new(unsigned long)>:
   81e20:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   81e24:   f102401f    cmp x0, #0x90
   81e28:   910003fd    mov x29, sp
   81e2c:   540000c1    b.ne    81e44 <CUSBRequest::operator new(unsigned long)+0x24>
   81e30:   b00001c0    adrp    x0, ba000 <font_data+0x1080>
   81e34:   f9445400    ldr x0, [x0, #2216]
   81e38:   b4000120    cbz x0, 81e5c <CUSBRequest::operator new(unsigned long)+0x3c>
   81e3c:   a8c17bfd    ldp x29, x30, [sp], #16
   81e40:   14006c84    b   9d050 <CClassAllocator::Allocate()>
   81e44:   d0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81e48:   d0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81e4c:   9108a021    add x1, x1, #0x228
   81e50:   910e6000    add x0, x0, #0x398
   81e54:   528013e2    mov w2, #0x9f
   81e58:   94006b1a    bl  9cac0 <assertion_failed>
   81e5c:   d0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81e60:   d0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81e64:   9108a021    add x1, x1, #0x228
   81e68:   910ee000    add x0, x0, #0x3b8
   81e6c:   528013e2    mov w2, #0x9f
   81e70:   94006b14    bl  9cac0 <assertion_failed>
   81e74:   d503201f    nop
   81e78:   d503201f    nop
   81e7c:   d503201f    nop

0000000000081e80 <CUSBRequest::operator delete(void*, unsigned long)>:
   81e80:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   81e84:   f102403f    cmp x1, #0x90
   81e88:   910003fd    mov x29, sp
   81e8c:   540000e1    b.ne    81ea8 <CUSBRequest::operator delete(void*, unsigned long)+0x28>
   81e90:   aa0003e1    mov x1, x0
   81e94:   b00001c0    adrp    x0, ba000 <font_data+0x1080>
   81e98:   f9445400    ldr x0, [x0, #2216]
   81e9c:   b4000120    cbz x0, 81ec0 <CUSBRequest::operator delete(void*, unsigned long)+0x40>
   81ea0:   a8c17bfd    ldp x29, x30, [sp], #16
   81ea4:   14006c9f    b   9d120 <CClassAllocator::Free(void*)>
   81ea8:   d0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81eac:   d0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81eb0:   9108a021    add x1, x1, #0x228
   81eb4:   910e6000    add x0, x0, #0x398
   81eb8:   528013e2    mov w2, #0x9f
   81ebc:   94006b01    bl  9cac0 <assertion_failed>
   81ec0:   d0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81ec4:   d0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81ec8:   9108a021    add x1, x1, #0x228
   81ecc:   910ee000    add x0, x0, #0x3b8
   81ed0:   528013e2    mov w2, #0x9f
   81ed4:   94006afb    bl  9cac0 <assertion_failed>
   81ed8:   d503201f    nop
   81edc:   d503201f    nop

0000000000081ee0 <CUSBRequest::InitAllocator(unsigned int)>:
   81ee0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   81ee4:   910003fd    mov x29, sp
   81ee8:   a90153f3    stp x19, x20, [sp, #16]
   81eec:   b00001d4    adrp    x20, ba000 <font_data+0x1080>
   81ef0:   f9445681    ldr x1, [x20, #2216]
   81ef4:   b50001c1    cbnz    x1, 81f2c <CUSBRequest::InitAllocator(unsigned int)+0x4c>
   81ef8:   2a0003f3    mov w19, w0
   81efc:   d2800700    mov x0, #0x38
   81f00:   94009630    bl  a77c0 <operator new(unsigned long)>
   81f04:   2a1303e2    mov w2, w19
   81f08:   d2801201    mov x1, #0x90
   81f0c:   aa0003f3    mov x19, x0
   81f10:   d0000163    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81f14:   910fa063    add x3, x3, #0x3e8
   81f18:   94006bf2    bl  9cee0 <CClassAllocator::CClassAllocator(unsigned long, unsigned int, char const*)>
   81f1c:   f9045693    str x19, [x20, #2216]
   81f20:   a94153f3    ldp x19, x20, [sp, #16]
   81f24:   a8c27bfd    ldp x29, x30, [sp], #32
   81f28:   d65f03c0    ret
   81f2c:   d0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81f30:   d0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81f34:   9108a021    add x1, x1, #0x228
   81f38:   910f4000    add x0, x0, #0x3d0
   81f3c:   528013e2    mov w2, #0x9f
   81f40:   94006ae0    bl  9cac0 <assertion_failed>
   81f44:   d503201f    nop
   81f48:   d503201f    nop
   81f4c:   d503201f    nop

0000000000081f50 <CUSBRequest::InitProtectedAllocator(unsigned int, unsigned int)>:
   81f50:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   81f54:   910003fd    mov x29, sp
   81f58:   f90013f5    str x21, [sp, #32]
   81f5c:   b00001d5    adrp    x21, ba000 <font_data+0x1080>
   81f60:   a90153f3    stp x19, x20, [sp, #16]
   81f64:   2a0003f3    mov w19, w0
   81f68:   2a0103f4    mov w20, w1
   81f6c:   f94456a0    ldr x0, [x21, #2216]
   81f70:   b40000e0    cbz x0, 81f8c <CUSBRequest::InitProtectedAllocator(unsigned int, unsigned int)+0x3c>
   81f74:   f94013f5    ldr x21, [sp, #32]
   81f78:   2a0103e2    mov w2, w1
   81f7c:   2a1303e1    mov w1, w19
   81f80:   a94153f3    ldp x19, x20, [sp, #16]
   81f84:   a8c37bfd    ldp x29, x30, [sp], #48
   81f88:   14006be6    b   9cf20 <CClassAllocator::Extend(unsigned int, unsigned int)>
   81f8c:   d2800700    mov x0, #0x38
   81f90:   9400960c    bl  a77c0 <operator new(unsigned long)>
   81f94:   2a1403e3    mov w3, w20
   81f98:   2a1303e2    mov w2, w19
   81f9c:   d2801201    mov x1, #0x90
   81fa0:   aa0003f3    mov x19, x0
   81fa4:   d0000164    adrp    x4, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   81fa8:   910fa084    add x4, x4, #0x3e8
   81fac:   94006bd5    bl  9cf00 <CClassAllocator::CClassAllocator(unsigned long, unsigned int, unsigned int, char const*)>
   81fb0:   f90456b3    str x19, [x21, #2216]
   81fb4:   a94153f3    ldp x19, x20, [sp, #16]
   81fb8:   f94013f5    ldr x21, [sp, #32]
   81fbc:   a8c37bfd    ldp x29, x30, [sp], #48
   81fc0:   d65f03c0    ret
    ...

0000000000081fd0 <CUSBStandardHub::GetHubInfo() const>:
   81fd0:   f9406800    ldr x0, [x0, #208]
   81fd4:   d65f03c0    ret
   81fd8:   d503201f    nop
   81fdc:   d503201f    nop

0000000000081fe0 <CUSBStandardHub::~CUSBStandardHub()>:
   81fe0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   81fe4:   910003fd    mov x29, sp
   81fe8:   d0000181    adrp    x1, b3000 <_etext+0x3f9c>
   81fec:   9135a021    add x1, x1, #0xd68
   81ff0:   a90153f3    stp x19, x20, [sp, #16]
   81ff4:   aa0003f4    mov x20, x0
   81ff8:   b940d800    ldr w0, [x0, #216]
   81ffc:   f9000281    str x1, [x20]
   82000:   35000660    cbnz    w0, 820cc <CUSBStandardHub::~CUSBStandardHub()+0xec>
   82004:   f9406a80    ldr x0, [x20, #208]
   82008:   b4000060    cbz x0, 82014 <CUSBStandardHub::~CUSBStandardHub()+0x34>
   8200c:   d2800101    mov x1, #0x8
   82010:   94009614    bl  a7860 <operator delete(void*, unsigned long)>
   82014:   b9404280    ldr w0, [x20, #64]
   82018:   f9006a9f    str xzr, [x20, #208]
   8201c:   340002c0    cbz w0, 82074 <CUSBStandardHub::~CUSBStandardHub()+0x94>
   82020:   91022293    add x19, x20, #0x88
   82024:   f90013f5    str x21, [sp, #32]
   82028:   52800015    mov w21, #0x0
   8202c:   d503201f    nop
   82030:   f9400260    ldr x0, [x19]
   82034:   d2800081    mov x1, #0x4
   82038:   b4000040    cbz x0, 82040 <CUSBStandardHub::~CUSBStandardHub()+0x60>
   8203c:   94009609    bl  a7860 <operator delete(void*, unsigned long)>
   82040:   f85c0260    ldur    x0, [x19, #-64]
   82044:   f900027f    str xzr, [x19]
   82048:   b4000080    cbz x0, 82058 <CUSBStandardHub::~CUSBStandardHub()+0x78>
   8204c:   f9400001    ldr x1, [x0]
   82050:   f9400421    ldr x1, [x1, #8]
   82054:   d63f0020    blr x1
   82058:   b9404280    ldr w0, [x20, #64]
   8205c:   110006b5    add w21, w21, #0x1
   82060:   91002273    add x19, x19, #0x8
   82064:   f81b827f    stur    xzr, [x19, #-72]
   82068:   6b15001f    cmp w0, w21
   8206c:   54fffe28    b.hi    82030 <CUSBStandardHub::~CUSBStandardHub()+0x50>
   82070:   f94013f5    ldr x21, [sp, #32]
   82074:   b900429f    str wzr, [x20, #64]
   82078:   f9401e80    ldr x0, [x20, #56]
   8207c:   b4000040    cbz x0, 82084 <CUSBStandardHub::~CUSBStandardHub()+0xa4>
   82080:   940095ec    bl  a7830 <operator delete[](void*)>
   82084:   f9401a93    ldr x19, [x20, #48]
   82088:   f9001e9f    str xzr, [x20, #56]
   8208c:   b40000d3    cbz x19, 820a4 <CUSBStandardHub::~CUSBStandardHub()+0xc4>
   82090:   aa1303e0    mov x0, x19
   82094:   94001fbb    bl  89f80 <CUSBEndpoint::~CUSBEndpoint()>
   82098:   aa1303e0    mov x0, x19
   8209c:   d2800401    mov x1, #0x20
   820a0:   940095f0    bl  a7860 <operator delete(void*, unsigned long)>
   820a4:   f9401680    ldr x0, [x20, #40]
   820a8:   f9001a9f    str xzr, [x20, #48]
   820ac:   b4000060    cbz x0, 820b8 <CUSBStandardHub::~CUSBStandardHub()+0xd8>
   820b0:   d2800121    mov x1, #0x9
   820b4:   940095eb    bl  a7860 <operator delete(void*, unsigned long)>
   820b8:   aa1403e0    mov x0, x20
   820bc:   f900169f    str xzr, [x20, #40]
   820c0:   a94153f3    ldp x19, x20, [sp, #16]
   820c4:   a8c37bfd    ldp x29, x30, [sp], #48
   820c8:   14002002    b   8a0d0 <CUSBFunction::~CUSBFunction()>
   820cc:   94006e65    bl  9da60 <CDeviceNameService::Get()>
   820d0:   b940da82    ldr w2, [x20, #216]
   820d4:   b0000181    adrp    x1, b3000 <_etext+0x3f9c>
   820d8:   52800003    mov w3, #0x0
   820dc:   91372021    add x1, x1, #0xdc8
   820e0:   94006e8c    bl  9db10 <CDeviceNameService::RemoveDevice(char const*, unsigned int, bool)>
   820e4:   b940da81    ldr w1, [x20, #216]
   820e8:   900001c0    adrp    x0, ba000 <font_data+0x1080>
   820ec:   9122c000    add x0, x0, #0x8b0
   820f0:   9400978c    bl  a7f20 <CNumberPool::FreeNumber(unsigned int)>
   820f4:   17ffffc4    b   82004 <CUSBStandardHub::~CUSBStandardHub()+0x24>
   820f8:   d503201f    nop
   820fc:   d503201f    nop

0000000000082100 <CUSBStandardHub::~CUSBStandardHub()>:
   82100:   a9be7bfd    stp x29, x30, [sp, #-32]!
   82104:   910003fd    mov x29, sp
   82108:   f9000bf3    str x19, [sp, #16]
   8210c:   aa0003f3    mov x19, x0
   82110:   97ffffb4    bl  81fe0 <CUSBStandardHub::~CUSBStandardHub()>
   82114:   aa1303e0    mov x0, x19
   82118:   f9400bf3    ldr x19, [sp, #16]
   8211c:   d2801c01    mov x1, #0xe0
   82120:   a8c27bfd    ldp x29, x30, [sp], #32
   82124:   140095cf    b   a7860 <operator delete(void*, unsigned long)>
   82128:   d503201f    nop
   8212c:   d503201f    nop

0000000000082130 <CUSBStandardHub::CUSBStandardHub(CUSBFunction*)>:
   82130:   a9be7bfd    stp x29, x30, [sp, #-32]!
   82134:   910003fd    mov x29, sp
   82138:   f9000bf3    str x19, [sp, #16]
   8213c:   aa0003f3    mov x19, x0
   82140:   94002088    bl  8a360 <CUSBFunction::CUSBFunction(CUSBFunction*)>
   82144:   b0000184    adrp    x4, b3000 <_etext+0x3f9c>
   82148:   9135a084    add x4, x4, #0xd68
   8214c:   a902fe7f    stp xzr, xzr, [x19, #40]
   82150:   91012263    add x3, x19, #0x48
   82154:   91022262    add x2, x19, #0x88
   82158:   91032260    add x0, x19, #0xc8
   8215c:   d2800001    mov x1, #0x0
   82160:   f9000264    str x4, [x19]
   82164:   f9001e7f    str xzr, [x19, #56]
   82168:   b900427f    str wzr, [x19, #64]
   8216c:   3901127f    strb    wzr, [x19, #68]
   82170:   f9006a7f    str xzr, [x19, #208]
   82174:   b900da7f    str wzr, [x19, #216]
   82178:   f821787f    str xzr, [x3, x1, lsl #3]
   8217c:   f821785f    str xzr, [x2, x1, lsl #3]
   82180:   3821681f    strb    wzr, [x0, x1]
   82184:   91000421    add x1, x1, #0x1
   82188:   f100203f    cmp x1, #0x8
   8218c:   54ffff61    b.ne    82178 <CUSBStandardHub::CUSBStandardHub(CUSBFunction*)+0x48>
   82190:   f9400bf3    ldr x19, [sp, #16]
   82194:   a8c27bfd    ldp x29, x30, [sp], #32
   82198:   d65f03c0    ret
   8219c:   d503201f    nop

00000000000821a0 <CUSBStandardHub::DisablePort(unsigned int)>:
   821a0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   821a4:   910003fd    mov x29, sp
   821a8:   a90153f3    stp x19, x20, [sp, #16]
   821ac:   2a0103f3    mov w19, w1
   821b0:   b9404001    ldr w1, [x0, #64]
   821b4:   a9025bf5    stp x21, x22, [sp, #32]
   821b8:   6b13003f    cmp w1, w19
   821bc:   540004c9    b.ls    82254 <CUSBStandardHub::DisablePort(unsigned int)+0xb4>
   821c0:   aa0003f4    mov x20, x0
   821c4:   11000676    add w22, w19, #0x1
   821c8:   940020e2    bl  8a550 <CUSBFunction::GetHost() const>
   821cc:   aa0003f5    mov x21, x0
   821d0:   aa1403e0    mov x0, x20
   821d4:   940020d3    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   821d8:   52800024    mov w4, #0x1
   821dc:   aa0003e1    mov x1, x0
   821e0:   2a1603e5    mov w5, w22
   821e4:   aa1503e0    mov x0, x21
   821e8:   2a0403e3    mov w3, w4
   821ec:   52800007    mov w7, #0x0
   821f0:   d2800006    mov x6, #0x0
   821f4:   52800462    mov w2, #0x23
   821f8:   97fffb86    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   821fc:   37f80100    tbnz    w0, #31, 8221c <CUSBStandardHub::DisablePort(unsigned int)+0x7c>
   82200:   8b334293    add x19, x20, w19, uxtw
   82204:   a9425bf5    ldp x21, x22, [sp, #32]
   82208:   52800020    mov w0, #0x1
   8220c:   3903227f    strb    wzr, [x19, #200]
   82210:   a94153f3    ldp x19, x20, [sp, #16]
   82214:   a8c37bfd    ldp x29, x30, [sp], #48
   82218:   d65f03c0    ret
   8221c:   940074f9    bl  9f600 <CLogger::Get()>
   82220:   b0000181    adrp    x1, b3000 <_etext+0x3f9c>
   82224:   91372021    add x1, x1, #0xdc8
   82228:   b0000163    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8222c:   2a1603e4    mov w4, w22
   82230:   91002021    add x1, x1, #0x8
   82234:   9110a063    add x3, x3, #0x428
   82238:   52800022    mov w2, #0x1
   8223c:   940076d9    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   82240:   a94153f3    ldp x19, x20, [sp, #16]
   82244:   52800000    mov w0, #0x0
   82248:   a9425bf5    ldp x21, x22, [sp, #32]
   8224c:   a8c37bfd    ldp x29, x30, [sp], #48
   82250:   d65f03c0    ret
   82254:   b0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   82258:   b0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8225c:   910fe021    add x1, x1, #0x3f8
   82260:   91104000    add x0, x0, #0x410
   82264:   52801b62    mov w2, #0xdb
   82268:   94006a16    bl  9cac0 <assertion_failed>
   8226c:   d503201f    nop

0000000000082270 <CUSBStandardHub::RemoveDeviceAt(unsigned int)>:
   82270:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   82274:   910003fd    mov x29, sp
   82278:   a90153f3    stp x19, x20, [sp, #16]
   8227c:   2a0103f3    mov w19, w1
   82280:   f90013f5    str x21, [sp, #32]
   82284:   aa0003f5    mov x21, x0
   82288:   97ffffc6    bl  821a0 <CUSBStandardHub::DisablePort(unsigned int)>
   8228c:   2a0003f4    mov w20, w0
   82290:   36000114    tbz w20, #0, 822b0 <CUSBStandardHub::RemoveDeviceAt(unsigned int)+0x40>
   82294:   8b334eb3    add x19, x21, w19, uxtw #3
   82298:   f9402660    ldr x0, [x19, #72]
   8229c:   b4000080    cbz x0, 822ac <CUSBStandardHub::RemoveDeviceAt(unsigned int)+0x3c>
   822a0:   f9400001    ldr x1, [x0]
   822a4:   f9400421    ldr x1, [x1, #8]
   822a8:   d63f0020    blr x1
   822ac:   f900267f    str xzr, [x19, #72]
   822b0:   f94013f5    ldr x21, [sp, #32]
   822b4:   2a1403e0    mov w0, w20
   822b8:   a94153f3    ldp x19, x20, [sp, #16]
   822bc:   a8c37bfd    ldp x29, x30, [sp], #48
   822c0:   d65f03c0    ret
   822c4:   d503201f    nop
   822c8:   d503201f    nop
   822cc:   d503201f    nop

00000000000822d0 <CUSBStandardHub::StartStatusChangeRequest()>:
   822d0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   822d4:   910003fd    mov x29, sp
   822d8:   b9404003    ldr w3, [x0, #64]
   822dc:   a90153f3    stp x19, x20, [sp, #16]
   822e0:   34000463    cbz w3, 8236c <CUSBStandardHub::StartStatusChangeRequest()+0x9c>
   822e4:   aa0003f3    mov x19, x0
   822e8:   11002063    add w3, w3, #0x8
   822ec:   f9401c00    ldr x0, [x0, #56]
   822f0:   53037c74    lsr w20, w3, #3
   822f4:   b4000340    cbz x0, 8235c <CUSBStandardHub::StartStatusChangeRequest()+0x8c>
   822f8:   f9401a60    ldr x0, [x19, #48]
   822fc:   b4000440    cbz x0, 82384 <CUSBStandardHub::StartStatusChangeRequest()+0xb4>
   82300:   d2801200    mov x0, #0x90
   82304:   97fffec7    bl  81e20 <CUSBRequest::operator new(unsigned long)>
   82308:   a9430a61    ldp x1, x2, [x19, #48]
   8230c:   d2800004    mov x4, #0x0
   82310:   2a1403e3    mov w3, w20
   82314:   aa0003f4    mov x20, x0
   82318:   97fffdda    bl  81a80 <CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)>
   8231c:   90000001    adrp    x1, 82000 <CUSBStandardHub::~CUSBStandardHub()+0x20>
   82320:   aa1303e3    mov x3, x19
   82324:   aa1403e0    mov x0, x20
   82328:   9111c021    add x1, x1, #0x470
   8232c:   d2800002    mov x2, #0x0
   82330:   97fffe98    bl  81d90 <CUSBRequest::SetCompletionRoutine(void (*)(CUSBRequest*, void*, void*), void*, void*)>
   82334:   aa1303e0    mov x0, x19
   82338:   94002086    bl  8a550 <CUSBFunction::GetHost() const>
   8233c:   f9400003    ldr x3, [x0]
   82340:   aa1403e1    mov x1, x20
   82344:   52800002    mov w2, #0x0
   82348:   a94153f3    ldp x19, x20, [sp, #16]
   8234c:   a8c27bfd    ldp x29, x30, [sp], #32
   82350:   f9401463    ldr x3, [x3, #40]
   82354:   aa0303f0    mov x16, x3
   82358:   d61f0200    br  x16
   8235c:   92407280    and x0, x20, #0x1fffffff
   82360:   94009520    bl  a77e0 <operator new[](unsigned long)>
   82364:   f9001e60    str x0, [x19, #56]
   82368:   17ffffe4    b   822f8 <CUSBStandardHub::StartStatusChangeRequest()+0x28>
   8236c:   b0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   82370:   b0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   82374:   910fe021    add x1, x1, #0x3f8
   82378:   91110000    add x0, x0, #0x440
   8237c:   52803c42    mov w2, #0x1e2
   82380:   940069d0    bl  9cac0 <assertion_failed>
   82384:   b0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   82388:   b0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8238c:   910fe021    add x1, x1, #0x3f8
   82390:   91114000    add x0, x0, #0x450
   82394:   52803d62    mov w2, #0x1eb
   82398:   940069ca    bl  9cac0 <assertion_failed>
   8239c:   d503201f    nop

00000000000823a0 <CUSBStandardHub::CompletionRoutine(CUSBRequest*)>:
   823a0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   823a4:   910003fd    mov x29, sp
   823a8:   a90153f3    stp x19, x20, [sp, #16]
   823ac:   b40003e1    cbz x1, 82428 <CUSBStandardHub::CompletionRoutine(CUSBRequest*)+0x88>
   823b0:   aa0003f4    mov x20, x0
   823b4:   aa0103e0    mov x0, x1
   823b8:   aa0103f3    mov x19, x1
   823bc:   97fffded    bl  81b70 <CUSBRequest::GetStatus() const>
   823c0:   340001e0    cbz w0, 823fc <CUSBStandardHub::CompletionRoutine(CUSBRequest*)+0x5c>
   823c4:   aa1303e0    mov x0, x19
   823c8:   97fffdee    bl  81b80 <CUSBRequest::GetResultLength() const>
   823cc:   34000400    cbz w0, 8244c <CUSBStandardHub::CompletionRoutine(CUSBRequest*)+0xac>
   823d0:   aa1403e0    mov x0, x20
   823d4:   9400205f    bl  8a550 <CUSBFunction::GetHost() const>
   823d8:   aa1403e1    mov x1, x20
   823dc:   97fffbe5    bl  81370 <CUSBHostController::PortStatusChanged(CUSBStandardHub*)>
   823e0:   aa1303e0    mov x0, x19
   823e4:   97fffdc7    bl  81b00 <CUSBRequest::~CUSBRequest()>
   823e8:   aa1303e0    mov x0, x19
   823ec:   a94153f3    ldp x19, x20, [sp, #16]
   823f0:   d2801201    mov x1, #0x90
   823f4:   a8c27bfd    ldp x29, x30, [sp], #32
   823f8:   17fffea2    b   81e80 <CUSBRequest::operator delete(void*, unsigned long)>
   823fc:   aa1303e0    mov x0, x19
   82400:   97fffdec    bl  81bb0 <CUSBRequest::GetUSBError() const>
   82404:   71000c1f    cmp w0, #0x3
   82408:   540001c0    b.eq    82440 <CUSBStandardHub::CompletionRoutine(CUSBRequest*)+0xa0>
   8240c:   aa1303e0    mov x0, x19
   82410:   97fffdbc    bl  81b00 <CUSBRequest::~CUSBRequest()>
   82414:   aa1303e0    mov x0, x19
   82418:   a94153f3    ldp x19, x20, [sp, #16]
   8241c:   d2801201    mov x1, #0x90
   82420:   a8c27bfd    ldp x29, x30, [sp], #32
   82424:   17fffe97    b   81e80 <CUSBRequest::operator delete(void*, unsigned long)>
   82428:   b0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8242c:   b0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   82430:   910fe021    add x1, x1, #0x3f8
   82434:   9111c000    add x0, x0, #0x470
   82438:   52803ea2    mov w2, #0x1f5
   8243c:   940069a1    bl  9cac0 <assertion_failed>
   82440:   aa1403e0    mov x0, x20
   82444:   97ffffa3    bl  822d0 <CUSBStandardHub::StartStatusChangeRequest()>
   82448:   17fffff1    b   8240c <CUSBStandardHub::CompletionRoutine(CUSBRequest*)+0x6c>
   8244c:   b0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   82450:   b0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   82454:   910fe021    add x1, x1, #0x3f8
   82458:   91120000    add x0, x0, #0x480
   8245c:   52803f22    mov w2, #0x1f9
   82460:   94006998    bl  9cac0 <assertion_failed>
   82464:   d503201f    nop
   82468:   d503201f    nop
   8246c:   d503201f    nop

0000000000082470 <CUSBStandardHub::CompletionStub(CUSBRequest*, void*, void*)>:
   82470:   b4000082    cbz x2, 82480 <CUSBStandardHub::CompletionStub(CUSBRequest*, void*, void*)+0x10>
   82474:   aa0003e1    mov x1, x0
   82478:   aa0203e0    mov x0, x2
   8247c:   17ffffc9    b   823a0 <CUSBStandardHub::CompletionRoutine(CUSBRequest*)>
   82480:   b0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   82484:   b0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   82488:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   8248c:   910fe021    add x1, x1, #0x3f8
   82490:   910003fd    mov x29, sp
   82494:   91128000    add x0, x0, #0x4a0
   82498:   52804162    mov w2, #0x20b
   8249c:   94006989    bl  9cac0 <assertion_failed>

00000000000824a0 <CUSBStandardHub::Initialize()>:
   824a0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   824a4:   910003fd    mov x29, sp
   824a8:   a90153f3    stp x19, x20, [sp, #16]
   824ac:   aa0003f3    mov x19, x0
   824b0:   94001f00    bl  8a0b0 <CUSBFunction::Initialize()>
   824b4:   36000840    tbz w0, #0, 825bc <CUSBStandardHub::Initialize()+0x11c>
   824b8:   f9401660    ldr x0, [x19, #40]
   824bc:   b5000a20    cbnz    x0, 82600 <CUSBStandardHub::Initialize()+0x160>
   824c0:   d2800120    mov x0, #0x9
   824c4:   940094bf    bl  a77c0 <operator new(unsigned long)>
   824c8:   aa0003e1    mov x1, x0
   824cc:   aa1303e0    mov x0, x19
   824d0:   f9001661    str x1, [x19, #40]
   824d4:   9400201f    bl  8a550 <CUSBFunction::GetHost() const>
   824d8:   aa0003f4    mov x20, x0
   824dc:   aa1303e0    mov x0, x19
   824e0:   94002010    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   824e4:   f9401664    ldr x4, [x19, #40]
   824e8:   aa0003e1    mov x1, x0
   824ec:   52800007    mov w7, #0x0
   824f0:   aa1403e0    mov x0, x20
   824f4:   12800be6    mov w6, #0xffffffa0
   824f8:   52800125    mov w5, #0x9
   824fc:   52800003    mov w3, #0x0
   82500:   52800522    mov w2, #0x29
   82504:   97fffb0b    bl  81130 <CUSBHostController::GetDescriptor(CUSBEndpoint*, unsigned char, unsigned char, void*, unsigned int, unsigned char, unsigned short)>
   82508:   7100241f    cmp w0, #0x9
   8250c:   540003e1    b.ne    82588 <CUSBStandardHub::Initialize()+0xe8>
   82510:   f9401660    ldr x0, [x19, #40]
   82514:   39400800    ldrb    w0, [x0, #2]
   82518:   7100201f    cmp w0, #0x8
   8251c:   b9004260    str w0, [x19, #64]
   82520:   54000568    b.hi    825cc <CUSBStandardHub::Initialize()+0x12c>
   82524:   d2800100    mov x0, #0x8
   82528:   940094a6    bl  a77c0 <operator new(unsigned long)>
   8252c:   b9404262    ldr w2, [x19, #64]
   82530:   aa0003e1    mov x1, x0
   82534:   aa1303e0    mov x0, x19
   82538:   f9006a61    str x1, [x19, #208]
   8253c:   b9000022    str w2, [x1]
   82540:   9400208c    bl  8a770 <CUSBFunction::GetInterfaceProtocol() const>
   82544:   f9401663    ldr x3, [x19, #40]
   82548:   12001c01    and w1, w0, #0xff
   8254c:   aa1303e0    mov x0, x19
   82550:   7100083f    cmp w1, #0x2
   82554:   f9406a62    ldr x2, [x19, #208]
   82558:   1a9f17e1    cset    w1, eq
   8255c:   39001041    strb    w1, [x2, #4]
   82560:   39400c61    ldrb    w1, [x3, #3]
   82564:   d3451821    ubfx    x1, x1, #5, #2
   82568:   39001441    strb    w1, [x2, #5]
   8256c:   94001fe1    bl  8a4f0 <CUSBFunction::GetDevice() const>
   82570:   f9400001    ldr x1, [x0]
   82574:   a94153f3    ldp x19, x20, [sp, #16]
   82578:   a8c27bfd    ldp x29, x30, [sp], #32
   8257c:   f9401021    ldr x1, [x1, #32]
   82580:   aa0103f0    mov x16, x1
   82584:   d61f0200    br  x16
   82588:   9400741e    bl  9f600 <CLogger::Get()>
   8258c:   b0000181    adrp    x1, b3000 <_etext+0x3f9c>
   82590:   91372021    add x1, x1, #0xdc8
   82594:   b0000163    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   82598:   91002021    add x1, x1, #0x8
   8259c:   91130063    add x3, x3, #0x4c0
   825a0:   52800022    mov w2, #0x1
   825a4:   940075ff    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   825a8:   f9401660    ldr x0, [x19, #40]
   825ac:   b4000060    cbz x0, 825b8 <CUSBStandardHub::Initialize()+0x118>
   825b0:   d2800121    mov x1, #0x9
   825b4:   940094ab    bl  a7860 <operator delete(void*, unsigned long)>
   825b8:   f900167f    str xzr, [x19, #40]
   825bc:   a94153f3    ldp x19, x20, [sp, #16]
   825c0:   52800000    mov w0, #0x0
   825c4:   a8c27bfd    ldp x29, x30, [sp], #32
   825c8:   d65f03c0    ret
   825cc:   9400740d    bl  9f600 <CLogger::Get()>
   825d0:   b0000181    adrp    x1, b3000 <_etext+0x3f9c>
   825d4:   91372021    add x1, x1, #0xdc8
   825d8:   b9404264    ldr w4, [x19, #64]
   825dc:   b0000163    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   825e0:   91002021    add x1, x1, #0x8
   825e4:   91138063    add x3, x3, #0x4e0
   825e8:   52800022    mov w2, #0x1
   825ec:   940075ed    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   825f0:   f9401660    ldr x0, [x19, #40]
   825f4:   b5fffde0    cbnz    x0, 825b0 <CUSBStandardHub::Initialize()+0x110>
   825f8:   f900167f    str xzr, [x19, #40]
   825fc:   17fffff0    b   825bc <CUSBStandardHub::Initialize()+0x11c>
   82600:   b0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   82604:   b0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   82608:   910fe021    add x1, x1, #0x3f8
   8260c:   9112c000    add x0, x0, #0x4b0
   82610:   52800c42    mov w2, #0x62
   82614:   9400692b    bl  9cac0 <assertion_failed>
   82618:   d503201f    nop
   8261c:   d503201f    nop

0000000000082620 <CUSBStandardHub::EnumeratePorts()>:
   82620:   a9ba7bfd    stp x29, x30, [sp, #-96]!
   82624:   910003fd    mov x29, sp
   82628:   a9025bf5    stp x21, x22, [sp, #32]
   8262c:   aa0003f6    mov x22, x0
   82630:   94001fc8    bl  8a550 <CUSBFunction::GetHost() const>
   82634:   b4002580    cbz x0, 82ae4 <CUSBStandardHub::EnumeratePorts()+0x4c4>
   82638:   a90363f7    stp x23, x24, [sp, #48]
   8263c:   aa0003f7    mov x23, x0
   82640:   aa1603e0    mov x0, x22
   82644:   94001fb7    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   82648:   aa0003f8    mov x24, x0
   8264c:   b4002600    cbz x0, 82b0c <CUSBStandardHub::EnumeratePorts()+0x4ec>
   82650:   b94042c0    ldr w0, [x22, #64]
   82654:   a90153f3    stp x19, x20, [sp, #16]
   82658:   a9046bf9    stp x25, x26, [sp, #64]
   8265c:   340026a0    cbz w0, 82b30 <CUSBStandardHub::EnumeratePorts()+0x510>
   82660:   394112c0    ldrb    w0, [x22, #68]
   82664:   36001a20    tbz w0, #0, 829a8 <CUSBStandardHub::EnumeratePorts()+0x388>
   82668:   a90573fb    stp x27, x28, [sp, #80]
   8266c:   910122dc    add x28, x22, #0x48
   82670:   b000019a    adrp    x26, b3000 <_etext+0x3f9c>
   82674:   9137235a    add x26, x26, #0xdc8
   82678:   aa1c03f3    mov x19, x28
   8267c:   b000017b    adrp    x27, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   82680:   9114c37b    add x27, x27, #0x530
   82684:   f9400260    ldr x0, [x19]
   82688:   9100235a    add x26, x26, #0x8
   8268c:   52800034    mov w20, #0x1
   82690:   b5000980    cbnz    x0, 827c0 <CUSBStandardHub::EnumeratePorts()+0x1a0>
   82694:   d503201f    nop
   82698:   f9402266    ldr x6, [x19, #64]
   8269c:   b4001766    cbz x6, 82988 <CUSBStandardHub::EnumeratePorts()+0x368>
   826a0:   12003e99    and w25, w20, #0xffff
   826a4:   52800087    mov w7, #0x4
   826a8:   2a1903e5    mov w5, w25
   826ac:   52800004    mov w4, #0x0
   826b0:   52800003    mov w3, #0x0
   826b4:   12800b82    mov w2, #0xffffffa3
   826b8:   aa1803e1    mov x1, x24
   826bc:   aa1703e0    mov x0, x23
   826c0:   97fffa54    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   826c4:   7100101f    cmp w0, #0x4
   826c8:   2a0003f5    mov w21, w0
   826cc:   54001501    b.ne    8296c <CUSBStandardHub::EnumeratePorts()+0x34c>
   826d0:   f9402261    ldr x1, [x19, #64]
   826d4:   39400020    ldrb    w0, [x1]
   826d8:   39400421    ldrb    w1, [x1, #1]
   826dc:   2a012000    orr w0, w0, w1, lsl #8
   826e0:   36001ba1    tbz w1, #0, 82a54 <CUSBStandardHub::EnumeratePorts()+0x434>
   826e4:   360005e0    tbz w0, #0, 827a0 <CUSBStandardHub::EnumeratePorts()+0x180>
   826e8:   52800007    mov w7, #0x0
   826ec:   d2800006    mov x6, #0x0
   826f0:   2a1903e5    mov w5, w25
   826f4:   2a1503e4    mov w4, w21
   826f8:   52800063    mov w3, #0x3
   826fc:   52800462    mov w2, #0x23
   82700:   aa1803e1    mov x1, x24
   82704:   aa1703e0    mov x0, x23
   82708:   97fffa42    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   8270c:   37f81900    tbnz    w0, #31, 82a2c <CUSBStandardHub::EnumeratePorts()+0x40c>
   82710:   94008fdc    bl  a6680 <CTimer::Get()>
   82714:   52800c80    mov w0, #0x64
   82718:   94008f7e    bl  a6510 <CTimer::SimpleMsDelay(unsigned int)>
   8271c:   f9402266    ldr x6, [x19, #64]
   82720:   2a1503e7    mov w7, w21
   82724:   2a1903e5    mov w5, w25
   82728:   aa1803e1    mov x1, x24
   8272c:   aa1703e0    mov x0, x23
   82730:   52800004    mov w4, #0x0
   82734:   52800003    mov w3, #0x0
   82738:   12800b82    mov w2, #0xffffffa3
   8273c:   97fffa35    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   82740:   7100101f    cmp w0, #0x4
   82744:   540028a1    b.ne    82c58 <CUSBStandardHub::EnumeratePorts()+0x638>
   82748:   f9402260    ldr x0, [x19, #64]
   8274c:   39400001    ldrb    w1, [x0]
   82750:   39400400    ldrb    w0, [x0, #1]
   82754:   2a002020    orr w0, w1, w0, lsl #8
   82758:   36081b21    tbz w1, #1, 82abc <CUSBStandardHub::EnumeratePorts()+0x49c>
   8275c:   37182820    tbnz    w0, #3, 82c60 <CUSBStandardHub::EnumeratePorts()+0x640>
   82760:   52800015    mov w21, #0x0
   82764:   364811c0    tbz w0, #9, 8299c <CUSBStandardHub::EnumeratePorts()+0x37c>
   82768:   f9400260    ldr x0, [x19]
   8276c:   b5001f00    cbnz    x0, 82b4c <CUSBStandardHub::EnumeratePorts()+0x52c>
   82770:   d2803b00    mov x0, #0x1d8
   82774:   94009413    bl  a77c0 <operator new(unsigned long)>
   82778:   2a1503e2    mov w2, w21
   8277c:   51000684    sub w4, w20, #0x1
   82780:   aa0003f5    mov x21, x0
   82784:   aa1603e3    mov x3, x22
   82788:   aa1703e1    mov x1, x23
   8278c:   940013e5    bl  87720 <CXHCIUSBDevice::CXHCIUSBDevice(CXHCIDevice*, TUSBSpeed, CUSBStandardHub*, unsigned int)>
   82790:   aa1503e0    mov x0, x21
   82794:   f9000275    str x21, [x19]
   82798:   94001596    bl  87df0 <CXHCIUSBDevice::Initialize()>
   8279c:   360013a0    tbz w0, #0, 82a10 <CUSBStandardHub::EnumeratePorts()+0x3f0>
   827a0:   b94042c1    ldr w1, [x22, #64]
   827a4:   91002273    add x19, x19, #0x8
   827a8:   11000680    add w0, w20, #0x1
   827ac:   6b14003f    cmp w1, w20
   827b0:   54000149    b.ls    827d8 <CUSBStandardHub::EnumeratePorts()+0x1b8>
   827b4:   2a0003f4    mov w20, w0
   827b8:   f9400260    ldr x0, [x19]
   827bc:   b4fff6e0    cbz x0, 82698 <CUSBStandardHub::EnumeratePorts()+0x78>
   827c0:   9400166c    bl  88170 <CUSBDevice::ReScanDevices()>
   827c4:   b94042c1    ldr w1, [x22, #64]
   827c8:   91002273    add x19, x19, #0x8
   827cc:   11000680    add w0, w20, #0x1
   827d0:   6b14003f    cmp w1, w20
   827d4:   54ffff08    b.hi    827b4 <CUSBStandardHub::EnumeratePorts()+0x194>
   827d8:   34000601    cbz w1, 82898 <CUSBStandardHub::EnumeratePorts()+0x278>
   827dc:   b0000194    adrp    x20, b3000 <_etext+0x3f9c>
   827e0:   91372294    add x20, x20, #0xdc8
   827e4:   b0000175    adrp    x21, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   827e8:   911882b5    add x21, x21, #0x620
   827ec:   91002294    add x20, x20, #0x8
   827f0:   d2800013    mov x19, #0x0
   827f4:   1400000b    b   82820 <CUSBStandardHub::EnumeratePorts()+0x200>
   827f8:   94007382    bl  9f600 <CLogger::Get()>
   827fc:   aa1403e1    mov x1, x20
   82800:   2a1903e4    mov w4, w25
   82804:   aa1503e3    mov x3, x21
   82808:   52800082    mov w2, #0x4
   8280c:   94007565    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   82810:   b94042c1    ldr w1, [x22, #64]
   82814:   91000673    add x19, x19, #0x1
   82818:   6b13003f    cmp w1, w19
   8281c:   540003e9    b.ls    82898 <CUSBStandardHub::EnumeratePorts()+0x278>
   82820:   f8737b80    ldr x0, [x28, x19, lsl #3]
   82824:   b4ffff80    cbz x0, 82814 <CUSBStandardHub::EnumeratePorts()+0x1f4>
   82828:   910322c2    add x2, x22, #0xc8
   8282c:   38736843    ldrb    w3, [x2, x19]
   82830:   3707ff23    tbnz    w3, #0, 82814 <CUSBStandardHub::EnumeratePorts()+0x1f4>
   82834:   f9400001    ldr x1, [x0]
   82838:   52800023    mov w3, #0x1
   8283c:   11000679    add w25, w19, #0x1
   82840:   38336843    strb    w3, [x2, x19]
   82844:   f9400c21    ldr x1, [x1, #24]
   82848:   d63f0020    blr x1
   8284c:   3707fd60    tbnz    w0, #0, 827f8 <CUSBStandardHub::EnumeratePorts()+0x1d8>
   82850:   9400736c    bl  9f600 <CLogger::Get()>
   82854:   b0000163    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   82858:   2a1903e4    mov w4, w25
   8285c:   aa1403e1    mov x1, x20
   82860:   9117e063    add x3, x3, #0x5f8
   82864:   52800042    mov w2, #0x2
   82868:   9400754e    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8286c:   f8737b80    ldr x0, [x28, x19, lsl #3]
   82870:   b4000080    cbz x0, 82880 <CUSBStandardHub::EnumeratePorts()+0x260>
   82874:   f9400001    ldr x1, [x0]
   82878:   f9400421    ldr x1, [x1, #8]
   8287c:   d63f0020    blr x1
   82880:   b94042c1    ldr w1, [x22, #64]
   82884:   f8337b9f    str xzr, [x28, x19, lsl #3]
   82888:   91000673    add x19, x19, #0x1
   8288c:   6b13003f    cmp w1, w19
   82890:   54fffc88    b.hi    82820 <CUSBStandardHub::EnumeratePorts()+0x200>
   82894:   d503201f    nop
   82898:   a94573fb    ldp x27, x28, [sp, #80]
   8289c:   d2800080    mov x0, #0x4
   828a0:   940093c8    bl  a77c0 <operator new(unsigned long)>
   828a4:   aa0003f4    mov x20, x0
   828a8:   aa1803e1    mov x1, x24
   828ac:   aa1703e0    mov x0, x23
   828b0:   aa1403e6    mov x6, x20
   828b4:   52800087    mov w7, #0x4
   828b8:   52800005    mov w5, #0x0
   828bc:   52800004    mov w4, #0x0
   828c0:   52800003    mov w3, #0x0
   828c4:   12800be2    mov w2, #0xffffffa0
   828c8:   97fff9d2    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   828cc:   7100101f    cmp w0, #0x4
   828d0:   540014a1    b.ne    82b64 <CUSBStandardHub::EnumeratePorts()+0x544>
   828d4:   39400280    ldrb    w0, [x20]
   828d8:   36081540    tbz w0, #1, 82b80 <CUSBStandardHub::EnumeratePorts()+0x560>
   828dc:   b94042c0    ldr w0, [x22, #64]
   828e0:   52800001    mov w1, #0x0
   828e4:   340001e0    cbz w0, 82920 <CUSBStandardHub::EnumeratePorts()+0x300>
   828e8:   11000433    add w19, w1, #0x1
   828ec:   52800007    mov w7, #0x0
   828f0:   aa1803e1    mov x1, x24
   828f4:   2a1303e5    mov w5, w19
   828f8:   d2800006    mov x6, #0x0
   828fc:   52800104    mov w4, #0x8
   82900:   52800023    mov w3, #0x1
   82904:   52800462    mov w2, #0x23
   82908:   aa1703e0    mov x0, x23
   8290c:   97fff9c1    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   82910:   b94042c0    ldr w0, [x22, #64]
   82914:   2a1303e1    mov w1, w19
   82918:   6b13001f    cmp w0, w19
   8291c:   54fffe68    b.hi    828e8 <CUSBStandardHub::EnumeratePorts()+0x2c8>
   82920:   94007338    bl  9f600 <CLogger::Get()>
   82924:   b0000181    adrp    x1, b3000 <_etext+0x3f9c>
   82928:   91372021    add x1, x1, #0xdc8
   8292c:   b0000163    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   82930:   91002021    add x1, x1, #0x8
   82934:   91196063    add x3, x3, #0x658
   82938:   52800022    mov w2, #0x1
   8293c:   94007519    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   82940:   aa1403e0    mov x0, x20
   82944:   d2800081    mov x1, #0x4
   82948:   940093c6    bl  a7860 <operator delete(void*, unsigned long)>
   8294c:   52800019    mov w25, #0x0
   82950:   a94153f3    ldp x19, x20, [sp, #16]
   82954:   2a1903e0    mov w0, w25
   82958:   a9425bf5    ldp x21, x22, [sp, #32]
   8295c:   a94363f7    ldp x23, x24, [sp, #48]
   82960:   a9446bf9    ldp x25, x26, [sp, #64]
   82964:   a8c67bfd    ldp x29, x30, [sp], #96
   82968:   d65f03c0    ret
   8296c:   94007325    bl  9f600 <CLogger::Get()>
   82970:   2a1403e4    mov w4, w20
   82974:   aa1b03e3    mov x3, x27
   82978:   aa1a03e1    mov x1, x26
   8297c:   52800022    mov w2, #0x1
   82980:   94007508    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   82984:   17ffff87    b   827a0 <CUSBStandardHub::EnumeratePorts()+0x180>
   82988:   d2800080    mov x0, #0x4
   8298c:   9400938d    bl  a77c0 <operator new(unsigned long)>
   82990:   aa0003e6    mov x6, x0
   82994:   f9002260    str x0, [x19, #64]
   82998:   17ffff42    b   826a0 <CUSBStandardHub::EnumeratePorts()+0x80>
   8299c:   d34a2800    ubfx    x0, x0, #10, #1
   829a0:   11000415    add w21, w0, #0x1
   829a4:   17ffff71    b   82768 <CUSBStandardHub::EnumeratePorts()+0x148>
   829a8:   52800013    mov w19, #0x0
   829ac:   14000004    b   829bc <CUSBStandardHub::EnumeratePorts()+0x39c>
   829b0:   b94042c0    ldr w0, [x22, #64]
   829b4:   6b13001f    cmp w0, w19
   829b8:   540005a9    b.ls    82a6c <CUSBStandardHub::EnumeratePorts()+0x44c>
   829bc:   11000673    add w19, w19, #0x1
   829c0:   52800007    mov w7, #0x0
   829c4:   2a1303e5    mov w5, w19
   829c8:   d2800006    mov x6, #0x0
   829cc:   52800104    mov w4, #0x8
   829d0:   52800063    mov w3, #0x3
   829d4:   52800462    mov w2, #0x23
   829d8:   aa1803e1    mov x1, x24
   829dc:   aa1703e0    mov x0, x23
   829e0:   97fff98c    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   829e4:   36fffe60    tbz w0, #31, 829b0 <CUSBStandardHub::EnumeratePorts()+0x390>
   829e8:   94007306    bl  9f600 <CLogger::Get()>
   829ec:   b0000181    adrp    x1, b3000 <_etext+0x3f9c>
   829f0:   91372021    add x1, x1, #0xdc8
   829f4:   b0000163    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   829f8:   2a1303e4    mov w4, w19
   829fc:   91002021    add x1, x1, #0x8
   82a00:   91146063    add x3, x3, #0x518
   82a04:   52800022    mov w2, #0x1
   82a08:   940074e6    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   82a0c:   17ffffd0    b   8294c <CUSBStandardHub::EnumeratePorts()+0x32c>
   82a10:   f9400260    ldr x0, [x19]
   82a14:   b4000080    cbz x0, 82a24 <CUSBStandardHub::EnumeratePorts()+0x404>
   82a18:   f9400001    ldr x1, [x0]
   82a1c:   f9400421    ldr x1, [x1, #8]
   82a20:   d63f0020    blr x1
   82a24:   f900027f    str xzr, [x19]
   82a28:   17ffff5e    b   827a0 <CUSBStandardHub::EnumeratePorts()+0x180>
   82a2c:   940072f5    bl  9f600 <CLogger::Get()>
   82a30:   b0000181    adrp    x1, b3000 <_etext+0x3f9c>
   82a34:   91372021    add x1, x1, #0xdc8
   82a38:   b0000163    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   82a3c:   91002021    add x1, x1, #0x8
   82a40:   2a1403e4    mov w4, w20
   82a44:   91162063    add x3, x3, #0x588
   82a48:   52800022    mov w2, #0x1
   82a4c:   940074d5    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   82a50:   17ffff54    b   827a0 <CUSBStandardHub::EnumeratePorts()+0x180>
   82a54:   b0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   82a58:   b0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   82a5c:   910fe021    add x1, x1, #0x3f8
   82a60:   91154000    add x0, x0, #0x550
   82a64:   52802722    mov w2, #0x139
   82a68:   94006816    bl  9cac0 <assertion_failed>
   82a6c:   52800020    mov w0, #0x1
   82a70:   390112c0    strb    w0, [x22, #68]
   82a74:   940070df    bl  9edf0 <CKernelOptions::Get()>
   82a78:   b4000140    cbz x0, 82aa0 <CUSBStandardHub::EnumeratePorts()+0x480>
   82a7c:   94007091    bl  9ecc0 <CKernelOptions::GetUSBPowerDelay() const>
   82a80:   2a0003f3    mov w19, w0
   82a84:   340000e0    cbz w0, 82aa0 <CUSBStandardHub::EnumeratePorts()+0x480>
   82a88:   94008efe    bl  a6680 <CTimer::Get()>
   82a8c:   2a1303e0    mov w0, w19
   82a90:   94008ea0    bl  a6510 <CTimer::SimpleMsDelay(unsigned int)>
   82a94:   b94042c0    ldr w0, [x22, #64]
   82a98:   35ffde80    cbnz    w0, 82668 <CUSBStandardHub::EnumeratePorts()+0x48>
   82a9c:   17ffff80    b   8289c <CUSBStandardHub::EnumeratePorts()+0x27c>
   82aa0:   94008ef8    bl  a6680 <CTimer::Get()>
   82aa4:   52803fd3    mov w19, #0x1fe
   82aa8:   2a1303e0    mov w0, w19
   82aac:   94008e99    bl  a6510 <CTimer::SimpleMsDelay(unsigned int)>
   82ab0:   b94042c0    ldr w0, [x22, #64]
   82ab4:   35ffdda0    cbnz    w0, 82668 <CUSBStandardHub::EnumeratePorts()+0x48>
   82ab8:   17ffff79    b   8289c <CUSBStandardHub::EnumeratePorts()+0x27c>
   82abc:   940072d1    bl  9f600 <CLogger::Get()>
   82ac0:   b0000181    adrp    x1, b3000 <_etext+0x3f9c>
   82ac4:   91372021    add x1, x1, #0xdc8
   82ac8:   b0000163    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   82acc:   91002021    add x1, x1, #0x8
   82ad0:   2a1403e4    mov w4, w20
   82ad4:   91168063    add x3, x3, #0x5a0
   82ad8:   52800022    mov w2, #0x1
   82adc:   940074b1    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   82ae0:   17ffff30    b   827a0 <CUSBStandardHub::EnumeratePorts()+0x180>
   82ae4:   b0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   82ae8:   b0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   82aec:   a90153f3    stp x19, x20, [sp, #16]
   82af0:   910fe021    add x1, x1, #0x3f8
   82af4:   9113e000    add x0, x0, #0x4f8
   82af8:   52801ee2    mov w2, #0xf7
   82afc:   a90363f7    stp x23, x24, [sp, #48]
   82b00:   a9046bf9    stp x25, x26, [sp, #64]
   82b04:   a90573fb    stp x27, x28, [sp, #80]
   82b08:   940067ee    bl  9cac0 <assertion_failed>
   82b0c:   b0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   82b10:   b0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   82b14:   a90153f3    stp x19, x20, [sp, #16]
   82b18:   910fe021    add x1, x1, #0x3f8
   82b1c:   91142000    add x0, x0, #0x508
   82b20:   52801f42    mov w2, #0xfa
   82b24:   a9046bf9    stp x25, x26, [sp, #64]
   82b28:   a90573fb    stp x27, x28, [sp, #80]
   82b2c:   940067e5    bl  9cac0 <assertion_failed>
   82b30:   b0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   82b34:   b0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   82b38:   a90573fb    stp x27, x28, [sp, #80]
   82b3c:   910fe021    add x1, x1, #0x3f8
   82b40:   91110000    add x0, x0, #0x440
   82b44:   52801f82    mov w2, #0xfc
   82b48:   940067de    bl  9cac0 <assertion_failed>
   82b4c:   b0000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   82b50:   b0000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   82b54:   910fe021    add x1, x1, #0x3f8
   82b58:   91178000    add x0, x0, #0x5e0
   82b5c:   52802ec2    mov w2, #0x176
   82b60:   940067d8    bl  9cac0 <assertion_failed>
   82b64:   940072a7    bl  9f600 <CLogger::Get()>
   82b68:   b0000181    adrp    x1, b3000 <_etext+0x3f9c>
   82b6c:   91372021    add x1, x1, #0xdc8
   82b70:   b0000163    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   82b74:   91002021    add x1, x1, #0x8
   82b78:   91190063    add x3, x3, #0x640
   82b7c:   17ffff6f    b   82938 <CUSBStandardHub::EnumeratePorts()+0x318>
   82b80:   aa1403e0    mov x0, x20
   82b84:   d2800081    mov x1, #0x4
   82b88:   94009336    bl  a7860 <operator delete(void*, unsigned long)>
   82b8c:   b94042c0    ldr w0, [x22, #64]
   82b90:   34000900    cbz w0, 82cb0 <CUSBStandardHub::EnumeratePorts()+0x690>
   82b94:   b000019a    adrp    x26, b3000 <_etext+0x3f9c>
   82b98:   9137235a    add x26, x26, #0xdc8
   82b9c:   a90573fb    stp x27, x28, [sp, #80]
   82ba0:   d2800033    mov x19, #0x1
   82ba4:   b000017b    adrp    x27, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   82ba8:   9116e37b    add x27, x27, #0x5b8
   82bac:   9100235a    add x26, x26, #0x8
   82bb0:   2a1303f9    mov w25, w19
   82bb4:   910202d5    add x21, x22, #0x80
   82bb8:   14000006    b   82bd0 <CUSBStandardHub::EnumeratePorts()+0x5b0>
   82bbc:   b94042c0    ldr w0, [x22, #64]
   82bc0:   91000673    add x19, x19, #0x1
   82bc4:   51000661    sub w1, w19, #0x1
   82bc8:   6b00003f    cmp w1, w0
   82bcc:   54000422    b.cs    82c50 <CUSBStandardHub::EnumeratePorts()+0x630>
   82bd0:   12003e74    and w20, w19, #0xffff
   82bd4:   f8737aa6    ldr x6, [x21, x19, lsl #3]
   82bd8:   52800087    mov w7, #0x4
   82bdc:   2a1403e5    mov w5, w20
   82be0:   52800004    mov w4, #0x0
   82be4:   52800003    mov w3, #0x0
   82be8:   12800b82    mov w2, #0xffffffa3
   82bec:   aa1803e1    mov x1, x24
   82bf0:   aa1703e0    mov x0, x23
   82bf4:   97fff907    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   82bf8:   7100101f    cmp w0, #0x4
   82bfc:   54fffe01    b.ne    82bbc <CUSBStandardHub::EnumeratePorts()+0x59c>
   82c00:   f8737aa0    ldr x0, [x21, x19, lsl #3]
   82c04:   39400000    ldrb    w0, [x0]
   82c08:   361ffda0    tbz w0, #3, 82bbc <CUSBStandardHub::EnumeratePorts()+0x59c>
   82c0c:   2a1403e5    mov w5, w20
   82c10:   52800007    mov w7, #0x0
   82c14:   d2800006    mov x6, #0x0
   82c18:   52800104    mov w4, #0x8
   82c1c:   52800023    mov w3, #0x1
   82c20:   52800462    mov w2, #0x23
   82c24:   aa1803e1    mov x1, x24
   82c28:   aa1703e0    mov x0, x23
   82c2c:   97fff8f9    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   82c30:   94007274    bl  9f600 <CLogger::Get()>
   82c34:   2a1303e4    mov w4, w19
   82c38:   aa1b03e3    mov x3, x27
   82c3c:   aa1a03e1    mov x1, x26
   82c40:   52800022    mov w2, #0x1
   82c44:   52800019    mov w25, #0x0
   82c48:   94007456    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   82c4c:   17ffffdc    b   82bbc <CUSBStandardHub::EnumeratePorts()+0x59c>
   82c50:   a94573fb    ldp x27, x28, [sp, #80]
   82c54:   17ffff3f    b   82950 <CUSBStandardHub::EnumeratePorts()+0x330>
   82c58:   a94573fb    ldp x27, x28, [sp, #80]
   82c5c:   17ffff3c    b   8294c <CUSBStandardHub::EnumeratePorts()+0x32c>
   82c60:   2a1903e5    mov w5, w25
   82c64:   aa1803e1    mov x1, x24
   82c68:   52800007    mov w7, #0x0
   82c6c:   d2800006    mov x6, #0x0
   82c70:   52800104    mov w4, #0x8
   82c74:   52800023    mov w3, #0x1
   82c78:   52800462    mov w2, #0x23
   82c7c:   aa1703e0    mov x0, x23
   82c80:   97fff8e4    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   82c84:   9400725f    bl  9f600 <CLogger::Get()>
   82c88:   b0000181    adrp    x1, b3000 <_etext+0x3f9c>
   82c8c:   91372021    add x1, x1, #0xdc8
   82c90:   b0000163    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   82c94:   2a1403e4    mov w4, w20
   82c98:   91002021    add x1, x1, #0x8
   82c9c:   9116e063    add x3, x3, #0x5b8
   82ca0:   52800022    mov w2, #0x1
   82ca4:   9400743f    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   82ca8:   a94573fb    ldp x27, x28, [sp, #80]
   82cac:   17ffff28    b   8294c <CUSBStandardHub::EnumeratePorts()+0x32c>
   82cb0:   52800039    mov w25, #0x1
   82cb4:   17ffff27    b   82950 <CUSBStandardHub::EnumeratePorts()+0x330>
   82cb8:   d503201f    nop
   82cbc:   d503201f    nop

0000000000082cc0 <CUSBStandardHub::ReScanDevices()>:
   82cc0:   17fffe58    b   82620 <CUSBStandardHub::EnumeratePorts()>
   82cc4:   d503201f    nop
   82cc8:   d503201f    nop
   82ccc:   d503201f    nop

0000000000082cd0 <CUSBStandardHub::Configure()>:
   82cd0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   82cd4:   910003fd    mov x29, sp
   82cd8:   a90153f3    stp x19, x20, [sp, #16]
   82cdc:   aa0003f3    mov x19, x0
   82ce0:   a9025bf5    stp x21, x22, [sp, #32]
   82ce4:   94001df7    bl  8a4c0 <CUSBFunction::GetNumEndpoints() const>
   82ce8:   12001c14    and w20, w0, #0xff
   82cec:   7100069f    cmp w20, #0x1
   82cf0:   54000181    b.ne    82d20 <CUSBStandardHub::Configure()+0x50>
   82cf4:   528000a1    mov w1, #0x5
   82cf8:   aa1303e0    mov x0, x19
   82cfc:   94001e21    bl  8a580 <CUSBFunction::GetDescriptor(unsigned char)>
   82d00:   aa0003f5    mov x21, x0
   82d04:   b40000e0    cbz x0, 82d20 <CUSBStandardHub::Configure()+0x50>
   82d08:   39c00800    ldrsb   w0, [x0, #2]
   82d0c:   36f800a0    tbz w0, #31, 82d20 <CUSBStandardHub::Configure()+0x50>
   82d10:   39400ea0    ldrb    w0, [x21, #3]
   82d14:   12001400    and w0, w0, #0x3f
   82d18:   71000c1f    cmp w0, #0x3
   82d1c:   54000180    b.eq    82d4c <CUSBStandardHub::Configure()+0x7c>
   82d20:   b0000181    adrp    x1, b3000 <_etext+0x3f9c>
   82d24:   91372021    add x1, x1, #0xdc8
   82d28:   aa1303e0    mov x0, x19
   82d2c:   91002021    add x1, x1, #0x8
   82d30:   94001e20    bl  8a5b0 <CUSBFunction::ConfigurationError(char const*) const>
   82d34:   52800015    mov w21, #0x0
   82d38:   a94153f3    ldp x19, x20, [sp, #16]
   82d3c:   2a1503e0    mov w0, w21
   82d40:   a9425bf5    ldp x21, x22, [sp, #32]
   82d44:   a8c37bfd    ldp x29, x30, [sp], #48
   82d48:   d65f03c0    ret
   82d4c:   d2800400    mov x0, #0x20
   82d50:   9400929c    bl  a77c0 <operator new(unsigned long)>
   82d54:   aa0003f6    mov x22, x0
   82d58:   aa1303e0    mov x0, x19
   82d5c:   94001de5    bl  8a4f0 <CUSBFunction::GetDevice() const>
   82d60:   aa0003e1    mov x1, x0
   82d64:   aa1503e2    mov x2, x21
   82d68:   aa1603e0    mov x0, x22
   82d6c:   94001c19    bl  89dd0 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   82d70:   aa1303e0    mov x0, x19
   82d74:   f9001a76    str x22, [x19, #48]
   82d78:   94001d0e    bl  8a1b0 <CUSBFunction::Configure()>
   82d7c:   36000520    tbz w0, #0, 82e20 <CUSBStandardHub::Configure()+0x150>
   82d80:   b0000195    adrp    x21, b3000 <_etext+0x3f9c>
   82d84:   913722b5    add x21, x21, #0xdc8
   82d88:   910022b6    add x22, x21, #0x8
   82d8c:   900001c0    adrp    x0, ba000 <font_data+0x1080>
   82d90:   aa1603e2    mov x2, x22
   82d94:   2a1403e1    mov w1, w20
   82d98:   9122c000    add x0, x0, #0x8b0
   82d9c:   94009431    bl  a7e60 <CNumberPool::AllocateNumber(bool, char const*)>
   82da0:   b900da60    str w0, [x19, #216]
   82da4:   94006b2f    bl  9da60 <CDeviceNameService::Get()>
   82da8:   b940da62    ldr w2, [x19, #216]
   82dac:   aa1503e1    mov x1, x21
   82db0:   aa1303e3    mov x3, x19
   82db4:   52800004    mov w4, #0x0
   82db8:   94006b36    bl  9da90 <CDeviceNameService::AddDevice(char const*, unsigned int, CDevice*, bool)>
   82dbc:   aa1303e0    mov x0, x19
   82dc0:   97fffe18    bl  82620 <CUSBStandardHub::EnumeratePorts()>
   82dc4:   12001c15    and w21, w0, #0xff
   82dc8:   360001e0    tbz w0, #0, 82e04 <CUSBStandardHub::Configure()+0x134>
   82dcc:   aa1303e0    mov x0, x19
   82dd0:   94001de0    bl  8a550 <CUSBFunction::GetHost() const>
   82dd4:   97fff927    bl  81270 <CUSBHostController::IsPlugAndPlay()>
   82dd8:   3607fb00    tbz w0, #0, 82d38 <CUSBStandardHub::Configure()+0x68>
   82ddc:   aa1303e0    mov x0, x19
   82de0:   97fffd3c    bl  822d0 <CUSBStandardHub::StartStatusChangeRequest()>
   82de4:   3707faa0    tbnz    w0, #0, 82d38 <CUSBStandardHub::Configure()+0x68>
   82de8:   94007206    bl  9f600 <CLogger::Get()>
   82dec:   2a1403e2    mov w2, w20
   82df0:   aa1603e1    mov x1, x22
   82df4:   b0000163    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   82df8:   911aa063    add x3, x3, #0x6a8
   82dfc:   940073e9    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   82e00:   17ffffcd    b   82d34 <CUSBStandardHub::Configure()+0x64>
   82e04:   940071ff    bl  9f600 <CLogger::Get()>
   82e08:   2a1403e2    mov w2, w20
   82e0c:   aa1603e1    mov x1, x22
   82e10:   b0000163    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   82e14:   911a4063    add x3, x3, #0x690
   82e18:   940073e2    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   82e1c:   17ffffc6    b   82d34 <CUSBStandardHub::Configure()+0x64>
   82e20:   940071f8    bl  9f600 <CLogger::Get()>
   82e24:   b0000181    adrp    x1, b3000 <_etext+0x3f9c>
   82e28:   91372021    add x1, x1, #0xdc8
   82e2c:   b0000163    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   82e30:   2a1403e2    mov w2, w20
   82e34:   91002021    add x1, x1, #0x8
   82e38:   9119e063    add x3, x3, #0x678
   82e3c:   940073d9    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   82e40:   17ffffbd    b   82d34 <CUSBStandardHub::Configure()+0x64>
   82e44:   d503201f    nop
   82e48:   d503201f    nop
   82e4c:   d503201f    nop

0000000000082e50 <CUSBStandardHub::HandlePortStatusChange()>:
   82e50:   a9ba7bfd    stp x29, x30, [sp, #-96]!
   82e54:   910003fd    mov x29, sp
   82e58:   a90153f3    stp x19, x20, [sp, #16]
   82e5c:   aa0003f4    mov x20, x0
   82e60:   f9401c00    ldr x0, [x0, #56]
   82e64:   a9025bf5    stp x21, x22, [sp, #32]
   82e68:   b4001a60    cbz x0, 831b4 <CUSBStandardHub::HandlePortStatusChange()+0x364>
   82e6c:   b9404281    ldr w1, [x20, #64]
   82e70:   39400016    ldrb    w22, [x0]
   82e74:   71001c3f    cmp w1, #0x7
   82e78:   54000849    b.ls    82f80 <CUSBStandardHub::HandlePortStatusChange()+0x130>
   82e7c:   71003c3f    cmp w1, #0xf
   82e80:   54001ac8    b.hi    831d8 <CUSBStandardHub::HandlePortStatusChange()+0x388>
   82e84:   39400002    ldrb    w2, [x0]
   82e88:   39400416    ldrb    w22, [x0, #1]
   82e8c:   2a162056    orr w22, w2, w22, lsl #8
   82e90:   37001222    tbnz    w2, #0, 830d4 <CUSBStandardHub::HandlePortStatusChange()+0x284>
   82e94:   a90363f7    stp x23, x24, [sp, #48]
   82e98:   b0000198    adrp    x24, b3000 <_etext+0x3f9c>
   82e9c:   91372318    add x24, x24, #0xdc8
   82ea0:   91002318    add x24, x24, #0x8
   82ea4:   52800013    mov w19, #0x0
   82ea8:   a9046bf9    stp x25, x26, [sp, #64]
   82eac:   b0000179    adrp    x25, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   82eb0:   911c4339    add x25, x25, #0x710
   82eb4:   a90573fb    stp x27, x28, [sp, #80]
   82eb8:   2a1303f7    mov w23, w19
   82ebc:   11000673    add w19, w19, #0x1
   82ec0:   1ad32ac0    asr w0, w22, w19
   82ec4:   36000460    tbz w0, #0, 82f50 <CUSBStandardHub::HandlePortStatusChange()+0x100>
   82ec8:   aa1403e0    mov x0, x20
   82ecc:   12003e7b    and w27, w19, #0xffff
   82ed0:   8b374e9a    add x26, x20, w23, uxtw #3
   82ed4:   94001d9f    bl  8a550 <CUSBFunction::GetHost() const>
   82ed8:   aa0003f5    mov x21, x0
   82edc:   aa1403e0    mov x0, x20
   82ee0:   94001d90    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   82ee4:   f9404746    ldr x6, [x26, #136]
   82ee8:   aa0003e1    mov x1, x0
   82eec:   2a1b03e5    mov w5, w27
   82ef0:   aa1503e0    mov x0, x21
   82ef4:   52800087    mov w7, #0x4
   82ef8:   52800004    mov w4, #0x0
   82efc:   52800003    mov w3, #0x0
   82f00:   12800b82    mov w2, #0xffffffa3
   82f04:   97fff843    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   82f08:   7100101f    cmp w0, #0x4
   82f0c:   540000e0    b.eq    82f28 <CUSBStandardHub::HandlePortStatusChange()+0xd8>
   82f10:   940071bc    bl  9f600 <CLogger::Get()>
   82f14:   2a1303e4    mov w4, w19
   82f18:   aa1903e3    mov x3, x25
   82f1c:   aa1803e1    mov x1, x24
   82f20:   52800002    mov w2, #0x0
   82f24:   9400739f    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   82f28:   f9404741    ldr x1, [x26, #136]
   82f2c:   39400820    ldrb    w0, [x1, #2]
   82f30:   39400c35    ldrb    w21, [x1, #3]
   82f34:   2a152015    orr w21, w0, w21, lsl #8
   82f38:   37100fc0    tbnz    w0, #2, 83130 <CUSBStandardHub::HandlePortStatusChange()+0x2e0>
   82f3c:   37181075    tbnz    w21, #3, 83148 <CUSBStandardHub::HandlePortStatusChange()+0x2f8>
   82f40:   37080975    tbnz    w21, #1, 8306c <CUSBStandardHub::HandlePortStatusChange()+0x21c>
   82f44:   37200615    tbnz    w21, #4, 83004 <CUSBStandardHub::HandlePortStatusChange()+0x1b4>
   82f48:   37000235    tbnz    w21, #0, 82f8c <CUSBStandardHub::HandlePortStatusChange()+0x13c>
   82f4c:   b9404281    ldr w1, [x20, #64]
   82f50:   6b01027f    cmp w19, w1
   82f54:   54fffb23    b.cc    82eb8 <CUSBStandardHub::HandlePortStatusChange()+0x68>
   82f58:   a94363f7    ldp x23, x24, [sp, #48]
   82f5c:   a9446bf9    ldp x25, x26, [sp, #64]
   82f60:   a94573fb    ldp x27, x28, [sp, #80]
   82f64:   aa1403e0    mov x0, x20
   82f68:   97fffcda    bl  822d0 <CUSBStandardHub::StartStatusChangeRequest()>
   82f6c:   360010e0    tbz w0, #0, 83188 <CUSBStandardHub::HandlePortStatusChange()+0x338>
   82f70:   a94153f3    ldp x19, x20, [sp, #16]
   82f74:   a9425bf5    ldp x21, x22, [sp, #32]
   82f78:   a8c67bfd    ldp x29, x30, [sp], #96
   82f7c:   d65f03c0    ret
   82f80:   37000ab6    tbnz    w22, #0, 830d4 <CUSBStandardHub::HandlePortStatusChange()+0x284>
   82f84:   35fff881    cbnz    w1, 82e94 <CUSBStandardHub::HandlePortStatusChange()+0x44>
   82f88:   17fffff7    b   82f64 <CUSBStandardHub::HandlePortStatusChange()+0x114>
   82f8c:   aa1403e0    mov x0, x20
   82f90:   94001d70    bl  8a550 <CUSBFunction::GetHost() const>
   82f94:   aa0003f5    mov x21, x0
   82f98:   aa1403e0    mov x0, x20
   82f9c:   94001d61    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   82fa0:   aa0003e1    mov x1, x0
   82fa4:   2a1b03e5    mov w5, w27
   82fa8:   aa1503e0    mov x0, x21
   82fac:   52800007    mov w7, #0x0
   82fb0:   d2800006    mov x6, #0x0
   82fb4:   52800204    mov w4, #0x10
   82fb8:   52800023    mov w3, #0x1
   82fbc:   52800462    mov w2, #0x23
   82fc0:   97fff814    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   82fc4:   37f80ce0    tbnz    w0, #31, 83160 <CUSBStandardHub::HandlePortStatusChange()+0x310>
   82fc8:   f9404741    ldr x1, [x26, #136]
   82fcc:   f9402740    ldr x0, [x26, #72]
   82fd0:   39400021    ldrb    w1, [x1]
   82fd4:   36000961    tbz w1, #0, 83100 <CUSBStandardHub::HandlePortStatusChange()+0x2b0>
   82fd8:   b5fffba0    cbnz    x0, 82f4c <CUSBStandardHub::HandlePortStatusChange()+0xfc>
   82fdc:   f9400281    ldr x1, [x20]
   82fe0:   90000000    adrp    x0, 82000 <CUSBStandardHub::~CUSBStandardHub()+0x20>
   82fe4:   91330000    add x0, x0, #0xcc0
   82fe8:   f9402821    ldr x1, [x1, #80]
   82fec:   eb00003f    cmp x1, x0
   82ff0:   aa1403e0    mov x0, x20
   82ff4:   54001041    b.ne    831fc <CUSBStandardHub::HandlePortStatusChange()+0x3ac>
   82ff8:   97fffd8a    bl  82620 <CUSBStandardHub::EnumeratePorts()>
   82ffc:   b9404281    ldr w1, [x20, #64]
   83000:   17ffffd4    b   82f50 <CUSBStandardHub::HandlePortStatusChange()+0x100>
   83004:   aa1403e0    mov x0, x20
   83008:   94001d52    bl  8a550 <CUSBFunction::GetHost() const>
   8300c:   aa0003fc    mov x28, x0
   83010:   aa1403e0    mov x0, x20
   83014:   94001d43    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   83018:   aa0003e1    mov x1, x0
   8301c:   2a1b03e5    mov w5, w27
   83020:   aa1c03e0    mov x0, x28
   83024:   52800007    mov w7, #0x0
   83028:   d2800006    mov x6, #0x0
   8302c:   52800284    mov w4, #0x14
   83030:   52800023    mov w3, #0x1
   83034:   52800462    mov w2, #0x23
   83038:   97fff7f6    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   8303c:   36fff860    tbz w0, #31, 82f48 <CUSBStandardHub::HandlePortStatusChange()+0xf8>
   83040:   94007170    bl  9f600 <CLogger::Get()>
   83044:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   83048:   91372021    add x1, x1, #0xdc8
   8304c:   90000163    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   83050:   91002021    add x1, x1, #0x8
   83054:   2a1303e4    mov w4, w19
   83058:   911f0063    add x3, x3, #0x7c0
   8305c:   52800002    mov w2, #0x0
   83060:   94007350    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   83064:   3607f755    tbz w21, #0, 82f4c <CUSBStandardHub::HandlePortStatusChange()+0xfc>
   83068:   17ffffc9    b   82f8c <CUSBStandardHub::HandlePortStatusChange()+0x13c>
   8306c:   aa1403e0    mov x0, x20
   83070:   94001d38    bl  8a550 <CUSBFunction::GetHost() const>
   83074:   aa0003fc    mov x28, x0
   83078:   aa1403e0    mov x0, x20
   8307c:   94001d29    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   83080:   aa0003e1    mov x1, x0
   83084:   2a1b03e5    mov w5, w27
   83088:   aa1c03e0    mov x0, x28
   8308c:   52800007    mov w7, #0x0
   83090:   d2800006    mov x6, #0x0
   83094:   52800224    mov w4, #0x11
   83098:   52800023    mov w3, #0x1
   8309c:   52800462    mov w2, #0x23
   830a0:   97fff7dc    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   830a4:   36fff500    tbz w0, #31, 82f44 <CUSBStandardHub::HandlePortStatusChange()+0xf4>
   830a8:   94007156    bl  9f600 <CLogger::Get()>
   830ac:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   830b0:   91372021    add x1, x1, #0xdc8
   830b4:   90000163    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   830b8:   91002021    add x1, x1, #0x8
   830bc:   2a1303e4    mov w4, w19
   830c0:   911e6063    add x3, x3, #0x798
   830c4:   52800002    mov w2, #0x0
   830c8:   94007336    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   830cc:   3627f3f5    tbz w21, #4, 82f48 <CUSBStandardHub::HandlePortStatusChange()+0xf8>
   830d0:   17ffffcd    b   83004 <CUSBStandardHub::HandlePortStatusChange()+0x1b4>
   830d4:   9400714b    bl  9f600 <CLogger::Get()>
   830d8:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   830dc:   91372021    add x1, x1, #0xdc8
   830e0:   90000163    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   830e4:   91002021    add x1, x1, #0x8
   830e8:   911bc063    add x3, x3, #0x6f0
   830ec:   52800002    mov w2, #0x0
   830f0:   9400732c    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   830f4:   b9404281    ldr w1, [x20, #64]
   830f8:   35ffece1    cbnz    w1, 82e94 <CUSBStandardHub::HandlePortStatusChange()+0x44>
   830fc:   17ffff9a    b   82f64 <CUSBStandardHub::HandlePortStatusChange()+0x114>
   83100:   b4fff260    cbz x0, 82f4c <CUSBStandardHub::HandlePortStatusChange()+0xfc>
   83104:   2a1703e1    mov w1, w23
   83108:   aa1403e0    mov x0, x20
   8310c:   97fffc25    bl  821a0 <CUSBStandardHub::DisablePort(unsigned int)>
   83110:   3607f1e0    tbz w0, #0, 82f4c <CUSBStandardHub::HandlePortStatusChange()+0xfc>
   83114:   f9402740    ldr x0, [x26, #72]
   83118:   b4000080    cbz x0, 83128 <CUSBStandardHub::HandlePortStatusChange()+0x2d8>
   8311c:   f9400001    ldr x1, [x0]
   83120:   f9400421    ldr x1, [x1, #8]
   83124:   d63f0020    blr x1
   83128:   f900275f    str xzr, [x26, #72]
   8312c:   17ffff88    b   82f4c <CUSBStandardHub::HandlePortStatusChange()+0xfc>
   83130:   90000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   83134:   90000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   83138:   910fe021    add x1, x1, #0x3f8
   8313c:   911ce000    add x0, x0, #0x738
   83140:   528046c2    mov w2, #0x236
   83144:   9400665f    bl  9cac0 <assertion_failed>
   83148:   90000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8314c:   90000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   83150:   910fe021    add x1, x1, #0x3f8
   83154:   911da000    add x0, x0, #0x768
   83158:   528046e2    mov w2, #0x237
   8315c:   94006659    bl  9cac0 <assertion_failed>
   83160:   94007128    bl  9f600 <CLogger::Get()>
   83164:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   83168:   91372021    add x1, x1, #0xdc8
   8316c:   90000163    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   83170:   91002021    add x1, x1, #0x8
   83174:   2a1303e4    mov w4, w19
   83178:   911fa063    add x3, x3, #0x7e8
   8317c:   52800002    mov w2, #0x0
   83180:   94007308    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   83184:   17ffff91    b   82fc8 <CUSBStandardHub::HandlePortStatusChange()+0x178>
   83188:   9400711e    bl  9f600 <CLogger::Get()>
   8318c:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   83190:   91372021    add x1, x1, #0xdc8
   83194:   a94153f3    ldp x19, x20, [sp, #16]
   83198:   90000163    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8319c:   91002021    add x1, x1, #0x8
   831a0:   91206063    add x3, x3, #0x818
   831a4:   52800022    mov w2, #0x1
   831a8:   a9425bf5    ldp x21, x22, [sp, #32]
   831ac:   a8c67bfd    ldp x29, x30, [sp], #96
   831b0:   140072fc    b   9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   831b4:   90000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   831b8:   90000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   831bc:   a90363f7    stp x23, x24, [sp, #48]
   831c0:   910fe021    add x1, x1, #0x3f8
   831c4:   911b0000    add x0, x0, #0x6c0
   831c8:   52804242    mov w2, #0x212
   831cc:   a9046bf9    stp x25, x26, [sp, #64]
   831d0:   a90573fb    stp x27, x28, [sp, #80]
   831d4:   9400663b    bl  9cac0 <assertion_failed>
   831d8:   90000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   831dc:   90000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   831e0:   a90363f7    stp x23, x24, [sp, #48]
   831e4:   910fe021    add x1, x1, #0x3f8
   831e8:   911b8000    add x0, x0, #0x6e0
   831ec:   528042c2    mov w2, #0x216
   831f0:   a9046bf9    stp x25, x26, [sp, #64]
   831f4:   a90573fb    stp x27, x28, [sp, #80]
   831f8:   94006632    bl  9cac0 <assertion_failed>
   831fc:   d63f0020    blr x1
   83200:   b9404281    ldr w1, [x20, #64]
   83204:   17ffff53    b   82f50 <CUSBStandardHub::HandlePortStatusChange()+0x100>
    ...

0000000000083210 <_GLOBAL__sub_I__ZN15CUSBStandardHub18s_DeviceNumberPoolE>:
   83210:   a9be7bfd    stp x29, x30, [sp, #-32]!
   83214:   910003fd    mov x29, sp
   83218:   528007e2    mov w2, #0x3f
   8321c:   52800021    mov w1, #0x1
   83220:   f9000bf3    str x19, [sp, #16]
   83224:   f00001b3    adrp    x19, ba000 <font_data+0x1080>
   83228:   9122c273    add x19, x19, #0x8b0
   8322c:   aa1303e0    mov x0, x19
   83230:   940092f0    bl  a7df0 <CNumberPool::CNumberPool(unsigned int, unsigned int)>
   83234:   f00001a2    adrp    x2, ba000 <font_data+0x1080>
   83238:   90000120    adrp    x0, a7000 <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int, bool)+0xd0>
   8323c:   aa1303e1    mov x1, x19
   83240:   f9400bf3    ldr x19, [sp, #16]
   83244:   91278042    add x2, x2, #0x9e0
   83248:   a8c27bfd    ldp x29, x30, [sp], #32
   8324c:   91394000    add x0, x0, #0xe50
   83250:   140088d0    b   a5590 <__cxa_atexit>
    ...

0000000000083260 <CXHCIDevice::SubmitBlockingRequest(CUSBRequest*, unsigned int)>:
   83260:   39444000    ldrb    w0, [x0, #272]
   83264:   37000200    tbnz    w0, #0, 832a4 <CXHCIDevice::SubmitBlockingRequest(CUSBRequest*, unsigned int)+0x44>
   83268:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8326c:   910003fd    mov x29, sp
   83270:   a90153f3    stp x19, x20, [sp, #16]
   83274:   aa0103f3    mov x19, x1
   83278:   b40001a1    cbz x1, 832ac <CXHCIDevice::SubmitBlockingRequest(CUSBRequest*, unsigned int)+0x4c>
   8327c:   aa0103e0    mov x0, x1
   83280:   2a0203f4    mov w20, w2
   83284:   97fffa23    bl  81b10 <CUSBRequest::GetEndpoint() const>
   83288:   94001b7e    bl  8a080 <CUSBEndpoint::GetXHCIEndpoint()>
   8328c:   b40001a0    cbz x0, 832c0 <CXHCIDevice::SubmitBlockingRequest(CUSBRequest*, unsigned int)+0x60>
   83290:   2a1403e2    mov w2, w20
   83294:   aa1303e1    mov x1, x19
   83298:   a94153f3    ldp x19, x20, [sp, #16]
   8329c:   a8c27bfd    ldp x29, x30, [sp], #32
   832a0:   14000598    b   84900 <CXHCIEndpoint::Transfer(CUSBRequest*, unsigned int)>
   832a4:   52800000    mov w0, #0x0
   832a8:   d65f03c0    ret
   832ac:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   832b0:   91388021    add x1, x1, #0xe20
   832b4:   91004020    add x0, x1, #0x10
   832b8:   528022c2    mov w2, #0x116
   832bc:   94006601    bl  9cac0 <assertion_failed>
   832c0:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   832c4:   91388021    add x1, x1, #0xe20
   832c8:   91008020    add x0, x1, #0x20
   832cc:   52802302    mov w2, #0x118
   832d0:   940065fc    bl  9cac0 <assertion_failed>
   832d4:   d503201f    nop
   832d8:   d503201f    nop
   832dc:   d503201f    nop

00000000000832e0 <CXHCIDevice::SubmitAsyncRequest(CUSBRequest*, unsigned int)>:
   832e0:   39444000    ldrb    w0, [x0, #272]
   832e4:   37000200    tbnz    w0, #0, 83324 <CXHCIDevice::SubmitAsyncRequest(CUSBRequest*, unsigned int)+0x44>
   832e8:   a9be7bfd    stp x29, x30, [sp, #-32]!
   832ec:   910003fd    mov x29, sp
   832f0:   a90153f3    stp x19, x20, [sp, #16]
   832f4:   aa0103f3    mov x19, x1
   832f8:   b40001a1    cbz x1, 8332c <CXHCIDevice::SubmitAsyncRequest(CUSBRequest*, unsigned int)+0x4c>
   832fc:   aa0103e0    mov x0, x1
   83300:   2a0203f4    mov w20, w2
   83304:   97fffa03    bl  81b10 <CUSBRequest::GetEndpoint() const>
   83308:   94001b5e    bl  8a080 <CUSBEndpoint::GetXHCIEndpoint()>
   8330c:   b40001a0    cbz x0, 83340 <CXHCIDevice::SubmitAsyncRequest(CUSBRequest*, unsigned int)+0x60>
   83310:   2a1403e2    mov w2, w20
   83314:   aa1303e1    mov x1, x19
   83318:   a94153f3    ldp x19, x20, [sp, #16]
   8331c:   a8c27bfd    ldp x29, x30, [sp], #32
   83320:   14000418    b   84380 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)>
   83324:   52800000    mov w0, #0x0
   83328:   d65f03c0    ret
   8332c:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   83330:   91388021    add x1, x1, #0xe20
   83334:   91004020    add x0, x1, #0x10
   83338:   52802482    mov w2, #0x124
   8333c:   940065e1    bl  9cac0 <assertion_failed>
   83340:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   83344:   91388021    add x1, x1, #0xe20
   83348:   91008020    add x0, x1, #0x20
   8334c:   528024c2    mov w2, #0x126
   83350:   940065dc    bl  9cac0 <assertion_failed>
   83354:   d503201f    nop
   83358:   d503201f    nop
   8335c:   d503201f    nop

0000000000083360 <CXHCIDevice::CXHCIDevice(CInterruptSystem*, CTimer*, bool)>:
   83360:   a9be7bfd    stp x29, x30, [sp, #-32]!
   83364:   910003fd    mov x29, sp
   83368:   a90153f3    stp x19, x20, [sp, #16]
   8336c:   aa0103f4    mov x20, x1                                                   // x20 = pTimer ?
   83370:   2a0303e1    mov w1, w3                                                    // w1 = 
   83374:   aa0003f3    mov x19, x0
   83378:   97fff6f6    bl  80f50 <CUSBHostController::CUSBHostController(bool)>      // CUSBHostController (bPlugAndPlay)
   8337c:   90000182    adrp    x2, b3000 <_etext+0x3f9c>
   83380:   9137a042    add x2, x2, #0xde8                                            // x2 = 0x3de8
   83384:   f9001274    str x20, [x19, #32]                                           // ctimer 
   83388:   aa1403e1    mov x1, x20
   8338c:   9100c260    add x0, x19, #0x30
   83390:   3900a27f    strb    wzr, [x19, #40]
   83394:   f9000262    str x2, [x19]
   83398:   9400978a    bl  a91c0 <CBcmPCIeHostBridge::CBcmPCIeHostBridge(CInterruptSystem*)>    // init external xhci host bridge
   8339c:   52800200    mov w0, #0x10
   833a0:   940094a8    bl  a8640 <CMemorySystem::GetCoherentPage(unsigned int)>
   833a4:   aa0003f4    mov x20, x0
   833a8:   528007e0    mov w0, #0x3f
   833ac:   940094a5    bl  a8640 <CMemorySystem::GetCoherentPage(unsigned int)>
   833b0:   d29fffe2    mov x2, #0xffff
   833b4:   aa1403e1    mov x1, x20
   833b8:   8b020002    add x2, x0, x2
   833bc:   91030260    add x0, x19, #0xc0
   833c0:   94000ec8    bl  86ee0 <CXHCISharedMemAllocator::CXHCISharedMemAllocator(unsigned long, unsigned long)>
   833c4:   a90dfe7f    stp xzr, xzr, [x19, #216]
   833c8:   a90efe7f    stp xzr, xzr, [x19, #232]
   833cc:   a90ffe7f    stp xzr, xzr, [x19, #248]
   833d0:   f900867f    str xzr, [x19, #264]
   833d4:   3904427f    strb    wzr, [x19, #272]
   833d8:   a94153f3    ldp x19, x20, [sp, #16]
   833dc:   a8c27bfd    ldp x29, x30, [sp], #32
   833e0:   d65f03c0    ret
   833e4:   d503201f    nop
   833e8:   d503201f    nop
   833ec:   d503201f    nop

00000000000833f0 <CXHCIDevice::ReScanDevices()>:
   833f0:   f9408400    ldr x0, [x0, #264]
   833f4:   b4000040    cbz x0, 833fc <CXHCIDevice::ReScanDevices()+0xc>
   833f8:   14000bfa    b   863e0 <CXHCIRootHub::ReScanDevices()>
   833fc:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   83400:   91388021    add x1, x1, #0xe20
   83404:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   83408:   9100c020    add x0, x1, #0x30
   8340c:   910003fd    mov x29, sp
   83410:   52802162    mov w2, #0x10b
   83414:   940065ab    bl  9cac0 <assertion_failed>
   83418:   d503201f    nop
   8341c:   d503201f    nop

0000000000083420 <CXHCIDevice::GetMMIOSpace()>:
   83420:   f9406c00    ldr x0, [x0, #216]
   83424:   b4000040    cbz x0, 8342c <CXHCIDevice::GetMMIOSpace()+0xc>
   83428:   d65f03c0    ret
   8342c:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   83430:   91388021    add x1, x1, #0xe20
   83434:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   83438:   91010020    add x0, x1, #0x40
   8343c:   910003fd    mov x29, sp
   83440:   528025a2    mov w2, #0x12d
   83444:   9400659f    bl  9cac0 <assertion_failed>
   83448:   d503201f    nop
   8344c:   d503201f    nop

0000000000083450 <CXHCIDevice::GetSlotManager()>:
   83450:   f9407000    ldr x0, [x0, #224]
   83454:   b4000040    cbz x0, 8345c <CXHCIDevice::GetSlotManager()+0xc>
   83458:   d65f03c0    ret
   8345c:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   83460:   91388021    add x1, x1, #0xe20
   83464:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   83468:   91014020    add x0, x1, #0x50
   8346c:   910003fd    mov x29, sp
   83470:   52802662    mov w2, #0x133
   83474:   94006593    bl  9cac0 <assertion_failed>
   83478:   d503201f    nop
   8347c:   d503201f    nop

0000000000083480 <CXHCIDevice::GetCommandManager()>:
   83480:   f9407800    ldr x0, [x0, #240]
   83484:   b4000040    cbz x0, 8348c <CXHCIDevice::GetCommandManager()+0xc>
   83488:   d65f03c0    ret
   8348c:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   83490:   91388021    add x1, x1, #0xe20
   83494:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   83498:   9101a020    add x0, x1, #0x68
   8349c:   910003fd    mov x29, sp
   834a0:   52802722    mov w2, #0x139
   834a4:   94006587    bl  9cac0 <assertion_failed>
   834a8:   d503201f    nop
   834ac:   d503201f    nop

00000000000834b0 <CXHCIDevice::GetRootHub()>:
   834b0:   f9408400    ldr x0, [x0, #264]
   834b4:   b4000040    cbz x0, 834bc <CXHCIDevice::GetRootHub()+0xc>
   834b8:   d65f03c0    ret
   834bc:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   834c0:   91388021    add x1, x1, #0xe20
   834c4:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   834c8:   9100c020    add x0, x1, #0x30
   834cc:   910003fd    mov x29, sp
   834d0:   528027e2    mov w2, #0x13f
   834d4:   9400657b    bl  9cac0 <assertion_failed>
   834d8:   d503201f    nop
   834dc:   d503201f    nop

00000000000834e0 <CXHCIDevice::AllocateSharedMem(unsigned long, unsigned long, unsigned long)>:
   834e0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   834e4:   91030000    add x0, x0, #0xc0
   834e8:   910003fd    mov x29, sp
   834ec:   a90153f3    stp x19, x20, [sp, #16]
   834f0:   aa0103f4    mov x20, x1
   834f4:   94000e9b    bl  86f60 <CXHCISharedMemAllocator::Allocate(unsigned long, unsigned long, unsigned long)>
   834f8:   aa0003f3    mov x19, x0
   834fc:   b4000100    cbz x0, 8351c <CXHCIDevice::AllocateSharedMem(unsigned long, unsigned long, unsigned long)+0x3c>
   83500:   aa1403e2    mov x2, x20
   83504:   52800001    mov w1, #0x0
   83508:   94008e04    bl  a6d18 <memset>
   8350c:   aa1303e0    mov x0, x19
   83510:   a94153f3    ldp x19, x20, [sp, #16]
   83514:   a8c27bfd    ldp x29, x30, [sp], #32
   83518:   d65f03c0    ret
   8351c:   94007039    bl  9f600 <CLogger::Get()>
   83520:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   83524:   91388021    add x1, x1, #0xe20
   83528:   91020023    add x3, x1, #0x80
   8352c:   52800022    mov w2, #0x1
   83530:   91028021    add x1, x1, #0xa0
   83534:   9400721b    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   83538:   aa1303e0    mov x0, x19
   8353c:   a94153f3    ldp x19, x20, [sp, #16]
   83540:   a8c27bfd    ldp x29, x30, [sp], #32
   83544:   d65f03c0    ret
   83548:   d503201f    nop
   8354c:   d503201f    nop

0000000000083550 <CXHCIDevice::FreeSharedMem(void*)>:
   83550:   91030000    add x0, x0, #0xc0
   83554:   14000f13    b   871a0 <CXHCISharedMemAllocator::Free(void*)>
   83558:   d503201f    nop
   8355c:   d503201f    nop

0000000000083560 <CXHCIDevice::InterruptHandler()>:
   83560:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   83564:   910003fd    mov x29, sp
   83568:   52800081    mov w1, #0x4
   8356c:   a90153f3    stp x19, x20, [sp, #16]
   83570:   aa0003f4    mov x20, x0
   83574:   f9406c00    ldr x0, [x0, #216]
   83578:   f90013f5    str x21, [sp, #32]
   8357c:   940008b5    bl  85850 <CXHCIMMIOSpace::op_read32(unsigned int)>
   83580:   321d0002    orr w2, w0, #0x8
   83584:   2a0003f3    mov w19, w0
   83588:   f9406e80    ldr x0, [x20, #216]
   8358c:   52800081    mov w1, #0x4
   83590:   94000908    bl  859b0 <CXHCIMMIOSpace::op_write32(unsigned int, unsigned int)>
   83594:   f9406e95    ldr x21, [x20, #216]
   83598:   52800002    mov w2, #0x0
   8359c:   52800001    mov w1, #0x0
   835a0:   aa1503e0    mov x0, x21
   835a4:   940008db    bl  85910 <CXHCIMMIOSpace::rt_read32(unsigned int, unsigned int)>
   835a8:   2a0003e3    mov w3, w0
   835ac:   52800002    mov w2, #0x0
   835b0:   aa1503e0    mov x0, x21
   835b4:   32000063    orr w3, w3, #0x1
   835b8:   52800001    mov w1, #0x0
   835bc:   9400092d    bl  85a70 <CXHCIMMIOSpace::rt_write32(unsigned int, unsigned int, unsigned int)>
   835c0:   370003f3    tbnz    w19, #0, 8363c <CXHCIDevice::InterruptHandler()+0xdc>
   835c4:   39444280    ldrb    w0, [x20, #272]
   835c8:   37000320    tbnz    w0, #0, 8362c <CXHCIDevice::InterruptHandler()+0xcc>
   835cc:   f9407680    ldr x0, [x20, #232]
   835d0:   52800233    mov w19, #0x11
   835d4:   d2800015    mov x21, #0x0
   835d8:   b4000460    cbz x0, 83664 <CXHCIDevice::InterruptHandler()+0x104>
   835dc:   71000673    subs    w19, w19, #0x1
   835e0:   540001c1    b.ne    83618 <CXHCIDevice::InterruptHandler()+0xb8>
   835e4:   f9406e93    ldr x19, [x20, #216]
   835e8:   b4000495    cbz x21, 83678 <CXHCIDevice::InterruptHandler()+0x118>
   835ec:   f00001a1    adrp    x1, ba000 <font_data+0x1080>
   835f0:   aa1303e0    mov x0, x19
   835f4:   a94153f3    ldp x19, x20, [sp, #16]
   835f8:   52800302    mov w2, #0x18
   835fc:   f9458823    ldr x3, [x1, #2832]
   83600:   52800001    mov w1, #0x0
   83604:   aa0302a3    orr x3, x21, x3
   83608:   f94013f5    ldr x21, [sp, #32]
   8360c:   b27d0063    orr x3, x3, #0x8
   83610:   a8c37bfd    ldp x29, x30, [sp], #48
   83614:   1400093b    b   85b00 <CXHCIMMIOSpace::rt_write64(unsigned int, unsigned int, unsigned long)>
   83618:   f9407680    ldr x0, [x20, #232]
   8361c:   940007d1    bl  85560 <CXHCIEventManager::HandleEvents()>
   83620:   b4fffe20    cbz x0, 835e4 <CXHCIDevice::InterruptHandler()+0x84>
   83624:   aa0003f5    mov x21, x0
   83628:   17ffffed    b   835dc <CXHCIDevice::InterruptHandler()+0x7c>
   8362c:   a94153f3    ldp x19, x20, [sp, #16]
   83630:   f94013f5    ldr x21, [sp, #32]
   83634:   a8c37bfd    ldp x29, x30, [sp], #48
   83638:   d65f03c0    ret
   8363c:   94006ff1    bl  9f600 <CLogger::Get()>
   83640:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   83644:   91388021    add x1, x1, #0xe20
   83648:   a94153f3    ldp x19, x20, [sp, #16]
   8364c:   9102a023    add x3, x1, #0xa8
   83650:   52800022    mov w2, #0x1
   83654:   91028021    add x1, x1, #0xa0
   83658:   f94013f5    ldr x21, [sp, #32]
   8365c:   a8c37bfd    ldp x29, x30, [sp], #48
   83660:   140071d0    b   9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   83664:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   83668:   91388021    add x1, x1, #0xe20
   8366c:   9102e020    add x0, x1, #0xb8
   83670:   52802e42    mov w2, #0x172
   83674:   94006513    bl  9cac0 <assertion_failed>
   83678:   52800302    mov w2, #0x18
   8367c:   52800001    mov w1, #0x0
   83680:   aa1303e0    mov x0, x19
   83684:   940008b7    bl  85960 <CXHCIMMIOSpace::rt_read64(unsigned int, unsigned int)>
   83688:   927cec03    and x3, x0, #0xfffffffffffffff0
   8368c:   f94013f5    ldr x21, [sp, #32]
   83690:   aa1303e0    mov x0, x19
   83694:   a94153f3    ldp x19, x20, [sp, #16]
   83698:   52800302    mov w2, #0x18
   8369c:   b27d0063    orr x3, x3, #0x8
   836a0:   52800001    mov w1, #0x0
   836a4:   a8c37bfd    ldp x29, x30, [sp], #48
   836a8:   14000916    b   85b00 <CXHCIMMIOSpace::rt_write64(unsigned int, unsigned int, unsigned long)>
   836ac:   d503201f    nop

00000000000836b0 <CXHCIDevice::InterruptStub(void*)>:
   836b0:   b4000040    cbz x0, 836b8 <CXHCIDevice::InterruptStub(void*)+0x8>
   836b4:   17ffffab    b   83560 <CXHCIDevice::InterruptHandler()>
   836b8:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   836bc:   91388021    add x1, x1, #0xe20
   836c0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   836c4:   91034020    add x0, x1, #0xd0
   836c8:   910003fd    mov x29, sp
   836cc:   52803162    mov w2, #0x18b
   836d0:   940064fc    bl  9cac0 <assertion_failed>
   836d4:   d503201f    nop
   836d8:   d503201f    nop
   836dc:   d503201f    nop

00000000000836e0 <CXHCIDevice::HWReset()>:
   836e0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   836e4:   910003fd    mov x29, sp
   836e8:   5290d404    mov w4, #0x86a0
   836ec:   72a00024    movk    w4, #0x1, lsl #16
   836f0:   52800003    mov w3, #0x0
   836f4:   52810002    mov w2, #0x800
   836f8:   52800081    mov w1, #0x4
   836fc:   a90153f3    stp x19, x20, [sp, #16]
   83700:   aa0003f3    mov x19, x0
   83704:   f9406c00    ldr x0, [x0, #216]
   83708:   94000912    bl  85b50 <CXHCIMMIOSpace::op_wait32(unsigned int, unsigned int, unsigned int, unsigned int)>
   8370c:   370000c0    tbnz    w0, #0, 83724 <CXHCIDevice::HWReset()+0x44>
   83710:   52800014    mov w20, #0x0
   83714:   2a1403e0    mov w0, w20
   83718:   a94153f3    ldp x19, x20, [sp, #16]
   8371c:   a8c27bfd    ldp x29, x30, [sp], #32
   83720:   d65f03c0    ret
   83724:   52800023    mov w3, #0x1
   83728:   f9406e60    ldr x0, [x19, #216]
   8372c:   5290d404    mov w4, #0x86a0
   83730:   72a00024    movk    w4, #0x1, lsl #16
   83734:   2a0303e2    mov w2, w3
   83738:   52800081    mov w1, #0x4
   8373c:   94000905    bl  85b50 <CXHCIMMIOSpace::op_wait32(unsigned int, unsigned int, unsigned int, unsigned int)>
   83740:   3607fe80    tbz w0, #0, 83710 <CXHCIDevice::HWReset()+0x30>
   83744:   f9406e74    ldr x20, [x19, #216]
   83748:   52800001    mov w1, #0x0
   8374c:   aa1403e0    mov x0, x20
   83750:   94000840    bl  85850 <CXHCIMMIOSpace::op_read32(unsigned int)>
   83754:   2a0003e2    mov w2, w0
   83758:   52800001    mov w1, #0x0
   8375c:   aa1403e0    mov x0, x20
   83760:   321f0042    orr w2, w2, #0x2
   83764:   94000893    bl  859b0 <CXHCIMMIOSpace::op_write32(unsigned int, unsigned int)>
   83768:   f9406e60    ldr x0, [x19, #216]
   8376c:   5289c404    mov w4, #0x4e20
   83770:   52800003    mov w3, #0x0
   83774:   52800042    mov w2, #0x2
   83778:   52800001    mov w1, #0x0
   8377c:   940008f5    bl  85b50 <CXHCIMMIOSpace::op_wait32(unsigned int, unsigned int, unsigned int, unsigned int)>
   83780:   12001c14    and w20, w0, #0xff
   83784:   3607fc60    tbz w0, #0, 83710 <CXHCIDevice::HWReset()+0x30>
   83788:   f9406e60    ldr x0, [x19, #216]
   8378c:   52800081    mov w1, #0x4
   83790:   94000830    bl  85850 <CXHCIMMIOSpace::op_read32(unsigned int)>
   83794:   365ffc00    tbz w0, #11, 83714 <CXHCIDevice::HWReset()+0x34>
   83798:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   8379c:   91388021    add x1, x1, #0xe20
   837a0:   91038020    add x0, x1, #0xe0
   837a4:   52803422    mov w2, #0x1a1
   837a8:   940064c6    bl  9cac0 <assertion_failed>
   837ac:   d503201f    nop

00000000000837b0 <CXHCIDevice::~CXHCIDevice()>:
   837b0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   837b4:   910003fd    mov x29, sp
   837b8:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   837bc:   9137a021    add x1, x1, #0xde8
   837c0:   a90153f3    stp x19, x20, [sp, #16]
   837c4:   aa0003f3    mov x19, x0
   837c8:   52800020    mov w0, #0x1
   837cc:   f9406e74    ldr x20, [x19, #216]
   837d0:   f9000261    str x1, [x19]
   837d4:   39044260    strb    w0, [x19, #272]
   837d8:   b4000174    cbz x20, 83804 <CXHCIDevice::~CXHCIDevice()+0x54>
   837dc:   52800001    mov w1, #0x0
   837e0:   aa1403e0    mov x0, x20
   837e4:   9400081b    bl  85850 <CXHCIMMIOSpace::op_read32(unsigned int)>
   837e8:   2a0003e2    mov w2, w0
   837ec:   52800001    mov w1, #0x0
   837f0:   aa1403e0    mov x0, x20
   837f4:   121f7842    and w2, w2, #0xfffffffe
   837f8:   9400086e    bl  859b0 <CXHCIMMIOSpace::op_write32(unsigned int, unsigned int)>
   837fc:   aa1303e0    mov x0, x19
   83800:   97ffffb8    bl  836e0 <CXHCIDevice::HWReset()>
   83804:   3940a260    ldrb    w0, [x19, #40]
   83808:   360000c0    tbz w0, #0, 83820 <CXHCIDevice::~CXHCIDevice()+0x70>
   8380c:   f9401260    ldr x0, [x19, #32]
   83810:   b40005a0    cbz x0, 838c4 <CXHCIDevice::~CXHCIDevice()+0x114>
   83814:   528015e1    mov w1, #0xaf
   83818:   94009ab2    bl  aa2e0 <CInterruptSystem::DisconnectIRQ(unsigned int)>
   8381c:   3900a27f    strb    wzr, [x19, #40]
   83820:   f9407a74    ldr x20, [x19, #240]
   83824:   a90ffe7f    stp xzr, xzr, [x19, #248]
   83828:   b40000d4    cbz x20, 83840 <CXHCIDevice::~CXHCIDevice()+0x90>
   8382c:   aa1403e0    mov x0, x20
   83830:   94003d54    bl  92d80 <CXHCICommandManager::~CXHCICommandManager()>
   83834:   aa1403e0    mov x0, x20
   83838:   d2800a01    mov x1, #0x50
   8383c:   94009009    bl  a7860 <operator delete(void*, unsigned long)>
   83840:   f9407674    ldr x20, [x19, #232]
   83844:   f9007a7f    str xzr, [x19, #240]
   83848:   b40000d4    cbz x20, 83860 <CXHCIDevice::~CXHCIDevice()+0xb0>
   8384c:   aa1403e0    mov x0, x20
   83850:   94000708    bl  85470 <CXHCIEventManager::~CXHCIEventManager()>
   83854:   aa1403e0    mov x0, x20
   83858:   d2800801    mov x1, #0x40
   8385c:   94009001    bl  a7860 <operator delete(void*, unsigned long)>
   83860:   f9407274    ldr x20, [x19, #224]
   83864:   f900767f    str xzr, [x19, #232]
   83868:   b40000d4    cbz x20, 83880 <CXHCIDevice::~CXHCIDevice()+0xd0>
   8386c:   aa1403e0    mov x0, x20
   83870:   94000ea8    bl  87310 <CXHCISlotManager::~CXHCISlotManager()>
   83874:   aa1403e0    mov x0, x20
   83878:   d2802301    mov x1, #0x118
   8387c:   94008ff9    bl  a7860 <operator delete(void*, unsigned long)>
   83880:   f9406e74    ldr x20, [x19, #216]
   83884:   f900727f    str xzr, [x19, #224]
   83888:   b40000d4    cbz x20, 838a0 <CXHCIDevice::~CXHCIDevice()+0xf0>
   8388c:   aa1403e0    mov x0, x20
   83890:   940007d4    bl  857e0 <CXHCIMMIOSpace::~CXHCIMMIOSpace()>
   83894:   aa1403e0    mov x0, x20
   83898:   d2800801    mov x1, #0x40
   8389c:   94008ff1    bl  a7860 <operator delete(void*, unsigned long)>
   838a0:   91030260    add x0, x19, #0xc0
   838a4:   f9006e7f    str xzr, [x19, #216]
   838a8:   94000da6    bl  86f40 <CXHCISharedMemAllocator::~CXHCISharedMemAllocator()>
   838ac:   9100c260    add x0, x19, #0x30
   838b0:   94009674    bl  a9280 <CBcmPCIeHostBridge::~CBcmPCIeHostBridge()>
   838b4:   aa1303e0    mov x0, x19
   838b8:   a94153f3    ldp x19, x20, [sp, #16]
   838bc:   a8c27bfd    ldp x29, x30, [sp], #32
   838c0:   17fff5bc    b   80fb0 <CUSBHostController::~CUSBHostController()>
   838c4:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   838c8:   91388021    add x1, x1, #0xe20
   838cc:   9104a020    add x0, x1, #0x128
   838d0:   52800922    mov w2, #0x49
   838d4:   9400647b    bl  9cac0 <assertion_failed>
   838d8:   d503201f    nop
   838dc:   d503201f    nop

00000000000838e0 <CXHCIDevice::~CXHCIDevice()>:
   838e0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   838e4:   910003fd    mov x29, sp
   838e8:   f9000bf3    str x19, [sp, #16]
   838ec:   aa0003f3    mov x19, x0
   838f0:   97ffffb0    bl  837b0 <CXHCIDevice::~CXHCIDevice()>
   838f4:   aa1303e0    mov x0, x19
   838f8:   f9400bf3    ldr x19, [sp, #16]
   838fc:   d2802301    mov x1, #0x118
   83900:   a8c27bfd    ldp x29, x30, [sp], #32
   83904:   14008fd7    b   a7860 <operator delete(void*, unsigned long)>
   83908:   d503201f    nop
   8390c:   d503201f    nop

0000000000083910 <CXHCIDevice::Initialize(bool)>:
   83910:   a9b97bfd    stp x29, x30, [sp, #-112]!
   83914:   910003fd    mov x29, sp
   83918:   a90153f3    stp x19, x20, [sp, #16]
   8391c:   aa0003f3    mov x19, x0
   83920:   52802000    mov w0, #0x100
   83924:   9100c274    add x20, x19, #0x30
   83928:   a9025bf5    stp x21, x22, [sp, #32]
   8392c:   12001c36    and w22, w1, #0xff
   83930:   52800021    mov w1, #0x1
   83934:   97fff987    bl  81f50 <CUSBRequest::InitProtectedAllocator(unsigned int, unsigned int)>
   83938:   aa1403e0    mov x0, x20
   8393c:   94009875    bl  a9b10 <CBcmPCIeHostBridge::Initialize()>
   83940:   36000da0    tbz w0, #0, 83af4 <CXHCIDevice::Initialize(bool)+0x1e4>
   83944:   52800001    mov w1, #0x0
   83948:   910163e0    add x0, sp, #0x58
   8394c:   94006481    bl  9cb50 <CBcmPropertyTags::CBcmPropertyTags(bool)>
   83950:   52a00203    mov w3, #0x100000
   83954:   910183e2    add x2, sp, #0x60
   83958:   910163e0    add x0, sp, #0x58
   8395c:   52800b01    mov w1, #0x58
   83960:   72a00061    movk    w1, #0x3, lsl #16
   83964:   52800084    mov w4, #0x4
   83968:   b9006fe3    str w3, [sp, #108]
   8396c:   52800203    mov w3, #0x10
   83970:   940064d8    bl  9ccd0 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   83974:   52806601    mov w1, #0x330
   83978:   72a00181    movk    w1, #0xc, lsl #16
   8397c:   aa1403e0    mov x0, x20
   83980:   52800003    mov w3, #0x0
   83984:   52800002    mov w2, #0x0
   83988:   940096d2    bl  a94d0 <CBcmPCIeHostBridge::EnableDevice(unsigned int, unsigned int, unsigned int)>
   8398c:   36000ce0    tbz w0, #0, 83b28 <CXHCIDevice::Initialize(bool)+0x218>
   83990:   d2800055    mov x21, #0x2
   83994:   f2c000d5    movk    x21, #0x6, lsl #32
   83998:   794002b4    ldrh    w20, [x21]
   8399c:   12003e94    and w20, w20, #0xffff
   839a0:   7104029f    cmp w20, #0x100
   839a4:   54000961    b.ne    83ad0 <CXHCIDevice::Initialize(bool)+0x1c0>
   839a8:   d2800800    mov x0, #0x40
   839ac:   94008f85    bl  a77c0 <operator new(unsigned long)>
   839b0:   aa0003f4    mov x20, x0
   839b4:   d1000aa1    sub x1, x21, #0x2
   839b8:   94000766    bl  85750 <CXHCIMMIOSpace::CXHCIMMIOSpace(unsigned long)>
   839bc:   aa1403e0    mov x0, x20
   839c0:   52800081    mov w1, #0x4
   839c4:   f9006e74    str x20, [x19, #216]
   839c8:   9400078a    bl  857f0 <CXHCIMMIOSpace::cap_read32(unsigned int)>
   839cc:   721b081f    tst w0, #0xe0
   839d0:   54001920    b.eq    83cf4 <CXHCIDevice::Initialize(bool)+0x3e4>
   839d4:   f9406e60    ldr x0, [x19, #216]
   839d8:   52800081    mov w1, #0x4
   839dc:   94000785    bl  857f0 <CXHCIMMIOSpace::cap_read32(unsigned int)>
   839e0:   53187c14    lsr w20, w0, #24
   839e4:   a90363f7    stp x23, x24, [sp, #48]
   839e8:   7100169f    cmp w20, #0x5
   839ec:   54001928    b.hi    83d10 <CXHCIDevice::Initialize(bool)+0x400>
   839f0:   f9406e60    ldr x0, [x19, #216]
   839f4:   52800101    mov w1, #0x8
   839f8:   9400077e    bl  857f0 <CXHCIMMIOSpace::cap_read32(unsigned int)>
   839fc:   2a0003f7    mov w23, w0
   83a00:   f9406e60    ldr x0, [x19, #216]
   83a04:   52800201    mov w1, #0x10
   83a08:   9400077a    bl  857f0 <CXHCIMMIOSpace::cap_read32(unsigned int)>
   83a0c:   37101680    tbnz    w0, #2, 83cdc <CXHCIDevice::Initialize(bool)+0x3cc>
   83a10:   aa1303e0    mov x0, x19
   83a14:   97ffff33    bl  836e0 <CXHCIDevice::HWReset()>
   83a18:   36000980    tbz w0, #0, 83b48 <CXHCIDevice::Initialize(bool)+0x238>
   83a1c:   f9406e60    ldr x0, [x19, #216]
   83a20:   52800101    mov w1, #0x8
   83a24:   9400078b    bl  85850 <CXHCIMMIOSpace::op_read32(unsigned int)>
   83a28:   36001800    tbz w0, #0, 83d28 <CXHCIDevice::Initialize(bool)+0x418>
   83a2c:   d2802300    mov x0, #0x118
   83a30:   94008f64    bl  a77c0 <operator new(unsigned long)>
   83a34:   aa0003f5    mov x21, x0
   83a38:   aa1303e1    mov x1, x19
   83a3c:   94000e09    bl  87260 <CXHCISlotManager::CXHCISlotManager(CXHCIDevice*)>
   83a40:   d2800800    mov x0, #0x40
   83a44:   f9007275    str x21, [x19, #224]
   83a48:   94008f5e    bl  a77c0 <operator new(unsigned long)>
   83a4c:   aa0003f5    mov x21, x0
   83a50:   aa1303e1    mov x1, x19
   83a54:   9400060b    bl  85280 <CXHCIEventManager::CXHCIEventManager(CXHCIDevice*)>
   83a58:   d2800a00    mov x0, #0x50
   83a5c:   f9007675    str x21, [x19, #232]
   83a60:   94008f58    bl  a77c0 <operator new(unsigned long)>
   83a64:   aa0003f5    mov x21, x0
   83a68:   aa1303e1    mov x1, x19
   83a6c:   94003c91    bl  92cb0 <CXHCICommandManager::CXHCICommandManager(CXHCIDevice*)>
   83a70:   f9407260    ldr x0, [x19, #224]
   83a74:   f9007a75    str x21, [x19, #240]
   83a78:   94000e32    bl  87340 <CXHCISlotManager::IsValid()>
   83a7c:   36000080    tbz w0, #0, 83a8c <CXHCIDevice::Initialize(bool)+0x17c>
   83a80:   f9407660    ldr x0, [x19, #232]
   83a84:   940006a7    bl  85520 <CXHCIEventManager::IsValid()>
   83a88:   37000720    tbnz    w0, #0, 83b6c <CXHCIDevice::Initialize(bool)+0x25c>
   83a8c:   94006edd    bl  9f600 <CLogger::Get()>
   83a90:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   83a94:   91388021    add x1, x1, #0xe20
   83a98:   910a8023    add x3, x1, #0x2a0
   83a9c:   52800022    mov w2, #0x1
   83aa0:   91028021    add x1, x1, #0xa0
   83aa4:   940070bf    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   83aa8:   a94363f7    ldp x23, x24, [sp, #48]
   83aac:   d503201f    nop
   83ab0:   52800015    mov w21, #0x0
   83ab4:   910163e0    add x0, sp, #0x58
   83ab8:   9400642a    bl  9cb60 <CBcmPropertyTags::~CBcmPropertyTags()>
   83abc:   a94153f3    ldp x19, x20, [sp, #16]
   83ac0:   2a1503e0    mov w0, w21
   83ac4:   a9425bf5    ldp x21, x22, [sp, #32]
   83ac8:   a8c77bfd    ldp x29, x30, [sp], #112
   83acc:   d65f03c0    ret
   83ad0:   94006ecc    bl  9f600 <CLogger::Get()>
   83ad4:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   83ad8:   91388021    add x1, x1, #0xe20
   83adc:   91062023    add x3, x1, #0x188
   83ae0:   2a1403e4    mov w4, w20
   83ae4:   91028021    add x1, x1, #0xa0
   83ae8:   52800022    mov w2, #0x1
   83aec:   940070ad    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   83af0:   17fffff0    b   83ab0 <CXHCIDevice::Initialize(bool)+0x1a0>
   83af4:   12001c15    and w21, w0, #0xff
   83af8:   94006ec2    bl  9f600 <CLogger::Get()>
   83afc:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   83b00:   91388021    add x1, x1, #0xe20
   83b04:   91050023    add x3, x1, #0x140
   83b08:   52800022    mov w2, #0x1
   83b0c:   91028021    add x1, x1, #0xa0
   83b10:   940070a4    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   83b14:   a94153f3    ldp x19, x20, [sp, #16]
   83b18:   2a1503e0    mov w0, w21
   83b1c:   a9425bf5    ldp x21, x22, [sp, #32]
   83b20:   a8c77bfd    ldp x29, x30, [sp], #112
   83b24:   d65f03c0    ret
   83b28:   94006eb6    bl  9f600 <CLogger::Get()>
   83b2c:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   83b30:   91388021    add x1, x1, #0xe20
   83b34:   9105a023    add x3, x1, #0x168
   83b38:   52800022    mov w2, #0x1
   83b3c:   91028021    add x1, x1, #0xa0
   83b40:   94007098    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   83b44:   17ffffdb    b   83ab0 <CXHCIDevice::Initialize(bool)+0x1a0>
   83b48:   94006eae    bl  9f600 <CLogger::Get()>
   83b4c:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   83b50:   91388021    add x1, x1, #0xe20
   83b54:   91092023    add x3, x1, #0x248
   83b58:   52800022    mov w2, #0x1
   83b5c:   91028021    add x1, x1, #0xa0
   83b60:   94007090    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   83b64:   a94363f7    ldp x23, x24, [sp, #48]
   83b68:   17ffffd2    b   83ab0 <CXHCIDevice::Initialize(bool)+0x1a0>
   83b6c:   f9407a60    ldr x0, [x19, #240]
   83b70:   94003c94    bl  92dc0 <CXHCICommandManager::IsValid()>
   83b74:   12001c15    and w21, w0, #0xff
   83b78:   3607f8a0    tbz w0, #0, 83a8c <CXHCIDevice::Initialize(bool)+0x17c>
   83b7c:   531b7ef7    lsr w23, w23, #27
   83b80:   a9046bf9    stp x25, x26, [sp, #64]
   83b84:   34001057    cbz w23, 83d8c <CXHCIDevice::Initialize(bool)+0x47c>
   83b88:   d2820003    mov x3, #0x1000
   83b8c:   d37412fa    ubfiz   x26, x23, #12, #5
   83b90:   91030279    add x25, x19, #0xc0
   83b94:   aa1a03e1    mov x1, x26
   83b98:   aa1903e0    mov x0, x25
   83b9c:   aa0303e2    mov x2, x3
   83ba0:   94000cf0    bl  86f60 <CXHCISharedMemAllocator::Allocate(unsigned long, unsigned long, unsigned long)>
   83ba4:   aa0003f8    mov x24, x0
   83ba8:   b4000e20    cbz x0, 83d6c <CXHCIDevice::Initialize(bool)+0x45c>
   83bac:   aa1a03e2    mov x2, x26
   83bb0:   52800001    mov w1, #0x0
   83bb4:   94008c59    bl  a6d18 <memset>
   83bb8:   d37d12fa    ubfiz   x26, x23, #3, #5
   83bbc:   aa1903e0    mov x0, x25
   83bc0:   f9007e78    str x24, [x19, #248]
   83bc4:   aa1a03e1    mov x1, x26
   83bc8:   d2820003    mov x3, #0x1000
   83bcc:   d2800802    mov x2, #0x40
   83bd0:   94000ce4    bl  86f60 <CXHCISharedMemAllocator::Allocate(unsigned long, unsigned long, unsigned long)>
   83bd4:   aa0003f8    mov x24, x0
   83bd8:   b4000b40    cbz x0, 83d40 <CXHCIDevice::Initialize(bool)+0x430>
   83bdc:   aa1a03e2    mov x2, x26
   83be0:   52800001    mov w1, #0x0
   83be4:   94008c4d    bl  a6d18 <memset>
   83be8:   f9407e63    ldr x3, [x19, #248]
   83bec:   f9008278    str x24, [x19, #256]
   83bf0:   b4000b83    cbz x3, 83d60 <CXHCIDevice::Initialize(bool)+0x450>
   83bf4:   f00001a0    adrp    x0, ba000 <font_data+0x1080>
   83bf8:   912c4000    add x0, x0, #0xb10
   83bfc:   d2800002    mov x2, #0x0
   83c00:   f9400001    ldr x1, [x0]
   83c04:   aa010061    orr x1, x3, x1
   83c08:   8b023021    add x1, x1, x2, lsl #12
   83c0c:   f8227b01    str x1, [x24, x2, lsl #3]
   83c10:   91000442    add x2, x2, #0x1
   83c14:   eb17005f    cmp x2, x23
   83c18:   54ffff41    b.ne    83c00 <CXHCIDevice::Initialize(bool)+0x2f0>
   83c1c:   f9407260    ldr x0, [x19, #224]
   83c20:   aa1803e1    mov x1, x24
   83c24:   94000e2b    bl  874d0 <CXHCISlotManager::AssignScratchpadBufferArray(unsigned long*)>
   83c28:   d2800700    mov x0, #0x38
   83c2c:   94008ee5    bl  a77c0 <operator new(unsigned long)>
   83c30:   2a1403e1    mov w1, w20
   83c34:   aa1303e2    mov x2, x19
   83c38:   aa0003f4    mov x20, x0
   83c3c:   94000979    bl  86220 <CXHCIRootHub::CXHCIRootHub(unsigned int, CXHCIDevice*)>
   83c40:   f9401260    ldr x0, [x19, #32]
   83c44:   f9008674    str x20, [x19, #264]
   83c48:   b4000c00    cbz x0, 83dc8 <CXHCIDevice::Initialize(bool)+0x4b8>
   83c4c:   aa1303e3    mov x3, x19
   83c50:   528015e1    mov w1, #0xaf
   83c54:   90000002    adrp    x2, 83000 <CUSBStandardHub::HandlePortStatusChange()+0x1b0>
   83c58:   911ac042    add x2, x2, #0x6b0
   83c5c:   94009981    bl  aa260 <CInterruptSystem::ConnectIRQ(unsigned int, void (*)(void*), void*)>
   83c60:   f9406e74    ldr x20, [x19, #216]
   83c64:   52800020    mov w0, #0x1
   83c68:   52800001    mov w1, #0x0
   83c6c:   3900a260    strb    w0, [x19, #40]
   83c70:   aa1403e0    mov x0, x20
   83c74:   940006f7    bl  85850 <CXHCIMMIOSpace::op_read32(unsigned int)>
   83c78:   2a0003e2    mov w2, w0
   83c7c:   52800001    mov w1, #0x0
   83c80:   aa1403e0    mov x0, x20
   83c84:   321e0042    orr w2, w2, #0x4
   83c88:   9400074a    bl  859b0 <CXHCIMMIOSpace::op_write32(unsigned int, unsigned int)>
   83c8c:   f9406e74    ldr x20, [x19, #216]
   83c90:   52800001    mov w1, #0x0
   83c94:   aa1403e0    mov x0, x20
   83c98:   940006ee    bl  85850 <CXHCIMMIOSpace::op_read32(unsigned int)>
   83c9c:   2a0003e2    mov w2, w0
   83ca0:   52800001    mov w1, #0x0
   83ca4:   aa1403e0    mov x0, x20
   83ca8:   32000042    orr w2, w2, #0x1
   83cac:   94000741    bl  859b0 <CXHCIMMIOSpace::op_write32(unsigned int, unsigned int)>
   83cb0:   97fff570    bl  81270 <CUSBHostController::IsPlugAndPlay()>
   83cb4:   12001c00    and w0, w0, #0xff
   83cb8:   52000000    eor w0, w0, #0x1
   83cbc:   2a0002d6    orr w22, w22, w0
   83cc0:   36000096    tbz w22, #0, 83cd0 <CXHCIDevice::Initialize(bool)+0x3c0>
   83cc4:   f9408660    ldr x0, [x19, #264]
   83cc8:   9400098e    bl  86300 <CXHCIRootHub::Initialize()>
   83ccc:   360006a0    tbz w0, #0, 83da0 <CXHCIDevice::Initialize(bool)+0x490>
   83cd0:   a94363f7    ldp x23, x24, [sp, #48]
   83cd4:   a9446bf9    ldp x25, x26, [sp, #64]
   83cd8:   17ffff77    b   83ab4 <CXHCIDevice::Initialize(bool)+0x1a4>
   83cdc:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   83ce0:   91388021    add x1, x1, #0xe20
   83ce4:   a9046bf9    stp x25, x26, [sp, #64]
   83ce8:   9107e020    add x0, x1, #0x1f8
   83cec:   528015a2    mov w2, #0xad
   83cf0:   94006374    bl  9cac0 <assertion_failed>
   83cf4:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   83cf8:   91388021    add x1, x1, #0xe20
   83cfc:   a90363f7    stp x23, x24, [sp, #48]
   83d00:   9106a020    add x0, x1, #0x1a8
   83d04:   528013c2    mov w2, #0x9e
   83d08:   a9046bf9    stp x25, x26, [sp, #64]
   83d0c:   9400636d    bl  9cac0 <assertion_failed>
   83d10:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   83d14:   91388021    add x1, x1, #0xe20
   83d18:   a9046bf9    stp x25, x26, [sp, #64]
   83d1c:   91074020    add x0, x1, #0x1d0
   83d20:   52801482    mov w2, #0xa4
   83d24:   94006367    bl  9cac0 <assertion_failed>
   83d28:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   83d2c:   91388021    add x1, x1, #0xe20
   83d30:   a9046bf9    stp x25, x26, [sp, #64]
   83d34:   91096020    add x0, x1, #0x258
   83d38:   528017e2    mov w2, #0xbf
   83d3c:   94006361    bl  9cac0 <assertion_failed>
   83d40:   94006e30    bl  9f600 <CLogger::Get()>
   83d44:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   83d48:   91388021    add x1, x1, #0xe20
   83d4c:   91020023    add x3, x1, #0x80
   83d50:   52800022    mov w2, #0x1
   83d54:   91028021    add x1, x1, #0xa0
   83d58:   94007012    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   83d5c:   f900827f    str xzr, [x19, #256]
   83d60:   a94363f7    ldp x23, x24, [sp, #48]
   83d64:   a9446bf9    ldp x25, x26, [sp, #64]
   83d68:   17ffff52    b   83ab0 <CXHCIDevice::Initialize(bool)+0x1a0>
   83d6c:   94006e25    bl  9f600 <CLogger::Get()>
   83d70:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   83d74:   91388021    add x1, x1, #0xe20
   83d78:   91020023    add x3, x1, #0x80
   83d7c:   52800022    mov w2, #0x1
   83d80:   91028021    add x1, x1, #0xa0
   83d84:   94007007    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   83d88:   17ffff8c    b   83bb8 <CXHCIDevice::Initialize(bool)+0x2a8>
   83d8c:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   83d90:   91388021    add x1, x1, #0xe20
   83d94:   910b4020    add x0, x1, #0x2d0
   83d98:   52801ac2    mov w2, #0xd6
   83d9c:   94006349    bl  9cac0 <assertion_failed>
   83da0:   94006e18    bl  9f600 <CLogger::Get()>
   83da4:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   83da8:   91388021    add x1, x1, #0xe20
   83dac:   910ba023    add x3, x1, #0x2e8
   83db0:   52800022    mov w2, #0x1
   83db4:   91028021    add x1, x1, #0xa0
   83db8:   94006ffa    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   83dbc:   a94363f7    ldp x23, x24, [sp, #48]
   83dc0:   a9446bf9    ldp x25, x26, [sp, #64]
   83dc4:   17ffff3b    b   83ab0 <CXHCIDevice::Initialize(bool)+0x1a0>
   83dc8:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   83dcc:   91388021    add x1, x1, #0xe20
   83dd0:   9104a020    add x0, x1, #0x128
   83dd4:   52801d62    mov w2, #0xeb
   83dd8:   9400633a    bl  9cac0 <assertion_failed>
   83ddc:   d503201f    nop

0000000000083de0 <CXHCIDevice::DumpStatus()>:
   83de0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   83de4:   910003fd    mov x29, sp
   83de8:   f9000bf3    str x19, [sp, #16]
   83dec:   aa0003f3    mov x19, x0
   83df0:   f9408400    ldr x0, [x0, #264]
   83df4:   940009b7    bl  864d0 <CXHCIRootHub::DumpStatus()>
   83df8:   f9407660    ldr x0, [x19, #232]
   83dfc:   94000651    bl  85740 <CXHCIEventManager::DumpStatus()>
   83e00:   f9407a60    ldr x0, [x19, #240]
   83e04:   94003bf3    bl  92dd0 <CXHCICommandManager::DumpStatus()>
   83e08:   f9407260    ldr x0, [x19, #224]
   83e0c:   94000dd5    bl  87560 <CXHCISlotManager::DumpStatus()>
   83e10:   f9406e60    ldr x0, [x19, #216]
   83e14:   9400077b    bl  85c00 <CXHCIMMIOSpace::DumpStatus()>
   83e18:   52800002    mov w2, #0x0
   83e1c:   52800001    mov w1, #0x0
   83e20:   9100c260    add x0, x19, #0x30
   83e24:   9400951b    bl  a9290 <CBcmPCIeHostBridge::DumpStatus(unsigned int, unsigned int)>
   83e28:   94006df6    bl  9f600 <CLogger::Get()>
   83e2c:   aa0003e1    mov x1, x0
   83e30:   91030260    add x0, x19, #0xc0
   83e34:   aa0103f3    mov x19, x1
   83e38:   94000c46    bl  86f50 <CXHCISharedMemAllocator::GetFreeSpace() const>
   83e3c:   aa0003e4    mov x4, x0
   83e40:   90000181    adrp    x1, b3000 <_etext+0x3f9c>
   83e44:   91388021    add x1, x1, #0xe20
   83e48:   aa1303e0    mov x0, x19
   83e4c:   f9400bf3    ldr x19, [sp, #16]
   83e50:   910c0023    add x3, x1, #0x300
   83e54:   a8c27bfd    ldp x29, x30, [sp], #32
   83e58:   d34aa484    ubfx    x4, x4, #10, #32
   83e5c:   91028021    add x1, x1, #0xa0
   83e60:   52800082    mov w2, #0x4
   83e64:   14006fcf    b   9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
    ...

0000000000083e70 <CXHCIEndpoint::CompletionRoutine(CUSBRequest*, void*, void*)>:
   83e70:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   83e74:   910003fd    mov x29, sp
   83e78:   b40000e2    cbz x2, 83e94 <CXHCIEndpoint::CompletionRoutine(CUSBRequest*, void*, void*)+0x24>
   83e7c:   39410040    ldrb    w0, [x2, #64]
   83e80:   37000160    tbnz    w0, #0, 83eac <CXHCIEndpoint::CompletionRoutine(CUSBRequest*, void*, void*)+0x3c>
   83e84:   52800020    mov w0, #0x1
   83e88:   39010040    strb    w0, [x2, #64]
   83e8c:   a8c17bfd    ldp x29, x30, [sp], #16
   83e90:   d65f03c0    ret
   83e94:   90000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   83e98:   90000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   83e9c:   9120c021    add x1, x1, #0x830
   83ea0:   91128000    add x0, x0, #0x4a0
   83ea4:   52803de2    mov w2, #0x1ef
   83ea8:   94006306    bl  9cac0 <assertion_failed>
   83eac:   90000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   83eb0:   90000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   83eb4:   9120c021    add x1, x1, #0x830
   83eb8:   91212000    add x0, x0, #0x848
   83ebc:   52803e22    mov w2, #0x1f1
   83ec0:   94006300    bl  9cac0 <assertion_failed>
   83ec4:   d503201f    nop
   83ec8:   d503201f    nop
   83ecc:   d503201f    nop

0000000000083ed0 <CXHCIEndpoint::CXHCIEndpoint(CXHCIUSBDevice*, CXHCIDevice*)>:
   83ed0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   83ed4:   910003fd    mov x29, sp
   83ed8:   a90153f3    stp x19, x20, [sp, #16]
   83edc:   aa0003f3    mov x19, x0
   83ee0:   aa0203e0    mov x0, x2
   83ee4:   aa0203f4    mov x20, x2
   83ee8:   a9000a61    stp x1, x2, [x19]
   83eec:   97fffd4d    bl  83420 <CXHCIDevice::GetMMIOSpace()>
   83ef0:   52800021    mov w1, #0x1
   83ef4:   aa0003e4    mov x4, x0
   83ef8:   f900127f    str xzr, [x19, #32]
   83efc:   52800083    mov w3, #0x4
   83f00:   52800022    mov w2, #0x1
   83f04:   a9037e7f    stp xzr, xzr, [x19, #48]
   83f08:   d2800500    mov x0, #0x28
   83f0c:   f9000a64    str x4, [x19, #16]
   83f10:   39006261    strb    w1, [x19, #24]
   83f14:   3900b661    strb    w1, [x19, #45]
   83f18:   3900ba63    strb    w3, [x19, #46]
   83f1c:   39010261    strb    w1, [x19, #64]
   83f20:   f900267f    str xzr, [x19, #72]
   83f24:   b9005262    str w2, [x19, #80]
   83f28:   94008e26    bl  a77c0 <operator new(unsigned long)>
   83f2c:   aa1403e3    mov x3, x20
   83f30:   52800802    mov w2, #0x40
   83f34:   aa0003f4    mov x20, x0
   83f38:   52800001    mov w1, #0x0
   83f3c:   9400075d    bl  85cb0 <CXHCIRing::CXHCIRing(TXHCIRingType, unsigned int, CXHCIDevice*)>
   83f40:   aa1403e0    mov x0, x20
   83f44:   f9001274    str x20, [x19, #32]
   83f48:   940007b2    bl  85e10 <CXHCIRing::IsValid() const>
   83f4c:   370000a0    tbnz    w0, #0, 83f60 <CXHCIEndpoint::CXHCIEndpoint(CXHCIUSBDevice*, CXHCIDevice*)+0x90>
   83f50:   3900627f    strb    wzr, [x19, #24]
   83f54:   a94153f3    ldp x19, x20, [sp, #16]
   83f58:   a8c27bfd    ldp x29, x30, [sp], #32
   83f5c:   d65f03c0    ret
   83f60:   f9400260    ldr x0, [x19]
   83f64:   aa1303e2    mov x2, x19
   83f68:   3940b661    ldrb    w1, [x19, #45]
   83f6c:   a94153f3    ldp x19, x20, [sp, #16]
   83f70:   a8c27bfd    ldp x29, x30, [sp], #32
   83f74:   14000e23    b   87800 <CXHCIUSBDevice::RegisterEndpoint(unsigned char, CXHCIEndpoint*)>
   83f78:   d503201f    nop
   83f7c:   d503201f    nop

0000000000083f80 <CXHCIEndpoint::~CXHCIEndpoint()>:
   83f80:   a9be7bfd    stp x29, x30, [sp, #-32]!
   83f84:   910003fd    mov x29, sp
   83f88:   aa0003e1    mov x1, x0
   83f8c:   39410000    ldrb    w0, [x0, #64]
   83f90:   f9000bf3    str x19, [sp, #16]
   83f94:   36000200    tbz w0, #0, 83fd4 <CXHCIEndpoint::~CXHCIEndpoint()+0x54>
   83f98:   f9402420    ldr x0, [x1, #72]
   83f9c:   b5000280    cbnz    x0, 83fec <CXHCIEndpoint::~CXHCIEndpoint()+0x6c>
   83fa0:   f9401033    ldr x19, [x1, #32]
   83fa4:   3900b43f    strb    wzr, [x1, #45]
   83fa8:   b4000113    cbz x19, 83fc8 <CXHCIEndpoint::~CXHCIEndpoint()+0x48>
   83fac:   aa1303e0    mov x0, x19
   83fb0:   94000790    bl  85df0 <CXHCIRing::~CXHCIRing()>
   83fb4:   aa1303e0    mov x0, x19
   83fb8:   f9400bf3    ldr x19, [sp, #16]
   83fbc:   d2800501    mov x1, #0x28
   83fc0:   a8c27bfd    ldp x29, x30, [sp], #32
   83fc4:   14008e27    b   a7860 <operator delete(void*, unsigned long)>
   83fc8:   f9400bf3    ldr x19, [sp, #16]
   83fcc:   a8c27bfd    ldp x29, x30, [sp], #32
   83fd0:   d65f03c0    ret
   83fd4:   90000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   83fd8:   90000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   83fdc:   9120c021    add x1, x1, #0x830
   83fe0:   91214000    add x0, x0, #0x850
   83fe4:   52801382    mov w2, #0x9c
   83fe8:   940062b6    bl  9cac0 <assertion_failed>
   83fec:   90000161    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   83ff0:   90000160    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   83ff4:   9120c021    add x1, x1, #0x830
   83ff8:   9121a000    add x0, x0, #0x868
   83ffc:   528013a2    mov w2, #0x9d
   84000:   940062b0    bl  9cac0 <assertion_failed>
   84004:   d503201f    nop
   84008:   d503201f    nop
   8400c:   d503201f    nop

0000000000084010 <CXHCIEndpoint::IsValid()>:
   84010:   39406000    ldrb    w0, [x0, #24]
   84014:   d65f03c0    ret
   84018:   d503201f    nop
   8401c:   d503201f    nop

0000000000084020 <CXHCIEndpoint::GetTransferRing()>:
   84020:   f9401000    ldr x0, [x0, #32]
   84024:   b4000040    cbz x0, 8402c <CXHCIEndpoint::GetTransferRing()+0xc>
   84028:   d65f03c0    ret
   8402c:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84030:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84034:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   84038:   9120c021    add x1, x1, #0x830
   8403c:   910003fd    mov x29, sp
   84040:   91222000    add x0, x0, #0x888
   84044:   52801642    mov w2, #0xb2
   84048:   9400629e    bl  9cac0 <assertion_failed>
   8404c:   d503201f    nop

0000000000084050 <CXHCIEndpoint::TransferEvent(unsigned char, unsigned int)>:
   84050:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   84054:   910003fd    mov x29, sp
   84058:   a90153f3    stp x19, x20, [sp, #16]
   8405c:   d5033fbf    dmb sy
   84060:   f9401814    ldr x20, [x0, #48]
   84064:   b4000354    cbz x20, 840cc <CXHCIEndpoint::TransferEvent(unsigned char, unsigned int)+0x7c>
   84068:   a9025bf5    stp x21, x22, [sp, #32]
   8406c:   12001c36    and w22, w1, #0xff
   84070:   aa0003f3    mov x19, x0
   84074:   710006df    cmp w22, #0x1
   84078:   7a4d1ac4    ccmp    w22, #0xd, #0x4, ne
   8407c:   540002e0    b.eq    840d8 <CXHCIEndpoint::TransferEvent(unsigned char, unsigned int)+0x88>
   84080:   51003ac0    sub w0, w22, #0xe
   84084:   12001c00    and w0, w0, #0xff
   84088:   7100041f    cmp w0, #0x1
   8408c:   540001e9    b.ls    840c8 <CXHCIEndpoint::TransferEvent(unsigned char, unsigned int)+0x78>
   84090:   aa1403e0    mov x0, x20
   84094:   97fff69f    bl  81b10 <CUSBRequest::GetEndpoint() const>
   84098:   940017da    bl  8a000 <CUSBEndpoint::GetType() const>
   8409c:   71000c1f    cmp w0, #0x3
   840a0:   54000621    b.ne    84164 <CXHCIEndpoint::TransferEvent(unsigned char, unsigned int)+0x114>
   840a4:   b9405260    ldr w0, [x19, #80]
   840a8:   35000480    cbnz    w0, 84138 <CXHCIEndpoint::TransferEvent(unsigned char, unsigned int)+0xe8>
   840ac:   f9401e60    ldr x0, [x19, #56]
   840b0:   a9037e60    stp x0, xzr, [x19, #48]
   840b4:   aa1403e0    mov x0, x20
   840b8:   a94153f3    ldp x19, x20, [sp, #16]
   840bc:   a9425bf5    ldp x21, x22, [sp, #32]
   840c0:   a8c47bfd    ldp x29, x30, [sp], #64
   840c4:   17fff73f    b   81dc0 <CUSBRequest::CallCompletionRoutine()>
   840c8:   a9425bf5    ldp x21, x22, [sp, #32]
   840cc:   a94153f3    ldp x19, x20, [sp, #16]
   840d0:   a8c47bfd    ldp x29, x30, [sp], #64
   840d4:   d65f03c0    ret
   840d8:   aa1403e0    mov x0, x20
   840dc:   2a0203f5    mov w21, w2
   840e0:   f9001bf7    str x23, [sp, #48]
   840e4:   97fff6d7    bl  81c40 <CUSBRequest::GetBuffer()>
   840e8:   aa0003f7    mov x23, x0
   840ec:   aa1403e0    mov x0, x20
   840f0:   97fff6e4    bl  81c80 <CUSBRequest::GetBufLen() const>
   840f4:   2a0003f6    mov w22, w0
   840f8:   b40000b7    cbz x23, 8410c <CXHCIEndpoint::TransferEvent(unsigned char, unsigned int)+0xbc>
   840fc:   34000540    cbz w0, 841a4 <CXHCIEndpoint::TransferEvent(unsigned char, unsigned int)+0x154>
   84100:   aa1703e0    mov x0, x23
   84104:   2a1603e1    mov w1, w22
   84108:   9400926e    bl  a8ac0 <CleanAndInvalidateDataCacheRange>
   8410c:   6b1502df    cmp w22, w21
   84110:   540003e3    b.cc    8418c <CXHCIEndpoint::TransferEvent(unsigned char, unsigned int)+0x13c>
   84114:   4b1502c1    sub w1, w22, w21
   84118:   aa1403e0    mov x0, x20
   8411c:   97fff68d    bl  81b50 <CUSBRequest::SetResultLen(unsigned int)>
   84120:   aa1403e0    mov x0, x20
   84124:   52800021    mov w1, #0x1
   84128:   97fff686    bl  81b40 <CUSBRequest::SetStatus(int)>
   8412c:   b9405260    ldr w0, [x19, #80]
   84130:   f9401bf7    ldr x23, [sp, #48]
   84134:   34fffbc0    cbz w0, 840ac <CXHCIEndpoint::TransferEvent(unsigned char, unsigned int)+0x5c>
   84138:   9400914e    bl  a8670 <EnterCritical>
   8413c:   f9401e61    ldr x1, [x19, #56]
   84140:   b9405260    ldr w0, [x19, #80]
   84144:   a9037e61    stp x1, xzr, [x19, #48]
   84148:   34fffb60    cbz w0, 840b4 <CXHCIEndpoint::TransferEvent(unsigned char, unsigned int)+0x64>
   8414c:   94009179    bl  a8730 <LeaveCritical>
   84150:   a9425bf5    ldp x21, x22, [sp, #32]
   84154:   aa1403e0    mov x0, x20
   84158:   a94153f3    ldp x19, x20, [sp, #16]
   8415c:   a8c47bfd    ldp x29, x30, [sp], #64
   84160:   17fff718    b   81dc0 <CUSBRequest::CallCompletionRoutine()>
   84164:   94006d27    bl  9f600 <CLogger::Get()>
   84168:   f0000143    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8416c:   90000181    adrp    x1, b4000 <From+0x140>
   84170:   3940b665    ldrb    w5, [x19, #45]
   84174:   2a1603e4    mov w4, w22
   84178:   91234063    add x3, x3, #0x8d0
   8417c:   91050021    add x1, x1, #0x140
   84180:   52800042    mov w2, #0x2
   84184:   94006f07    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   84188:   17ffffc7    b   840a4 <CXHCIEndpoint::TransferEvent(unsigned char, unsigned int)+0x54>
   8418c:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84190:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84194:   9120c021    add x1, x1, #0x830
   84198:   9122c000    add x0, x0, #0x8b0
   8419c:   528036e2    mov w2, #0x1b7
   841a0:   94006248    bl  9cac0 <assertion_failed>
   841a4:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   841a8:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   841ac:   9120c021    add x1, x1, #0x830
   841b0:   91228000    add x0, x0, #0x8a0
   841b4:   52803662    mov w2, #0x1b3
   841b8:   94006242    bl  9cac0 <assertion_failed>
   841bc:   d503201f    nop

00000000000841c0 <CXHCIEndpoint::DumpStatus()>:
   841c0:   d100c3ff    sub sp, sp, #0x30
   841c4:   a9017bfd    stp x29, x30, [sp, #16]
   841c8:   910043fd    add x29, sp, #0x10
   841cc:   f90013f3    str x19, [sp, #32]
   841d0:   aa0003f3    mov x19, x0
   841d4:   39406000    ldrb    w0, [x0, #24]
   841d8:   36000340    tbz w0, #0, 84240 <CXHCIEndpoint::DumpStatus()+0x80>
   841dc:   3940b660    ldrb    w0, [x19, #45]
   841e0:   7100041f    cmp w0, #0x1
   841e4:   54000128    b.hi    84208 <CXHCIEndpoint::DumpStatus()+0x48>
   841e8:   f9401260    ldr x0, [x19, #32]
   841ec:   b40003e0    cbz x0, 84268 <CXHCIEndpoint::DumpStatus()+0xa8>
   841f0:   a9417bfd    ldp x29, x30, [sp, #16]
   841f4:   90000181    adrp    x1, b4000 <From+0x140>
   841f8:   91050021    add x1, x1, #0x140
   841fc:   f94013f3    ldr x19, [sp, #32]
   84200:   9100c3ff    add sp, sp, #0x30
   84204:   140007e3    b   86190 <CXHCIRing::DumpStatus(char const*)>
   84208:   94006cfe    bl  9f600 <CLogger::Get()>
   8420c:   3940b264    ldrb    w4, [x19, #44]
   84210:   f0000143    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84214:   90000181    adrp    x1, b4000 <From+0x140>
   84218:   91244063    add x3, x3, #0x910
   8421c:   91050021    add x1, x1, #0x140
   84220:   79405667    ldrh    w7, [x19, #42]
   84224:   52800082    mov w2, #0x4
   84228:   3940a666    ldrb    w6, [x19, #41]
   8422c:   b90003e4    str w4, [sp]
   84230:   3940a265    ldrb    w5, [x19, #40]
   84234:   3940b664    ldrb    w4, [x19, #45]
   84238:   94006eda    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8423c:   17ffffeb    b   841e8 <CXHCIEndpoint::DumpStatus()+0x28>
   84240:   94006cf0    bl  9f600 <CLogger::Get()>
   84244:   f0000143    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84248:   90000181    adrp    x1, b4000 <From+0x140>
   8424c:   a9417bfd    ldp x29, x30, [sp, #16]
   84250:   9123e063    add x3, x3, #0x8f8
   84254:   91050021    add x1, x1, #0x140
   84258:   52800082    mov w2, #0x4
   8425c:   f94013f3    ldr x19, [sp, #32]
   84260:   9100c3ff    add sp, sp, #0x30
   84264:   14006ecf    b   9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   84268:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8426c:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84270:   9120c021    add x1, x1, #0x830
   84274:   91222000    add x0, x0, #0x888
   84278:   52803cc2    mov w2, #0x1e6
   8427c:   94006211    bl  9cac0 <assertion_failed>

0000000000084280 <CXHCIEndpoint::EnqueueTRB(unsigned int, unsigned int, unsigned int, unsigned int)>:
   84280:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   84284:   910003fd    mov x29, sp
   84288:   a90153f3    stp x19, x20, [sp, #16]
   8428c:   a9025bf5    stp x21, x22, [sp, #32]
   84290:   a90363f7    stp x23, x24, [sp, #48]
   84294:   aa0003f7    mov x23, x0
   84298:   f9401000    ldr x0, [x0, #32]
   8429c:   b4000620    cbz x0, 84360 <CXHCIEndpoint::EnqueueTRB(unsigned int, unsigned int, unsigned int, unsigned int)+0xe0>
   842a0:   2a0103f8    mov w24, w1
   842a4:   2a0203f4    mov w20, w2
   842a8:   2a0303f6    mov w22, w3
   842ac:   2a0403f5    mov w21, w4
   842b0:   94000710    bl  85ef0 <CXHCIRing::GetEnqueueTRB()>
   842b4:   aa0003f3    mov x19, x0
   842b8:   52800000    mov w0, #0x0
   842bc:   b4000493    cbz x19, 8434c <CXHCIEndpoint::EnqueueTRB(unsigned int, unsigned int, unsigned int, unsigned int)+0xcc>
   842c0:   d3483ec2    ubfx    x2, x22, #8, #8
   842c4:   d3505ec1    ubfx    x1, x22, #16, #8
   842c8:   f94012e0    ldr x0, [x23, #32]
   842cc:   53187ec7    lsr w7, w22, #24
   842d0:   d3483ea6    ubfx    x6, x21, #8, #8
   842d4:   39000276    strb    w22, [x19]
   842d8:   d3505ea5    ubfx    x5, x21, #16, #8
   842dc:   53187ea4    lsr w4, w21, #24
   842e0:   39000662    strb    w2, [x19, #1]
   842e4:   d3483e83    ubfx    x3, x20, #8, #8
   842e8:   d3505e82    ubfx    x2, x20, #16, #8
   842ec:   39000a61    strb    w1, [x19, #2]
   842f0:   53187e81    lsr w1, w20, #24
   842f4:   39000e67    strb    w7, [x19, #3]
   842f8:   39001275    strb    w21, [x19, #4]
   842fc:   39001666    strb    w6, [x19, #5]
   84300:   39001a65    strb    w5, [x19, #6]
   84304:   39001e64    strb    w4, [x19, #7]
   84308:   39002274    strb    w20, [x19, #8]
   8430c:   39002663    strb    w3, [x19, #9]
   84310:   39002a62    strb    w2, [x19, #10]
   84314:   39002e61    strb    w1, [x19, #11]
   84318:   94000792    bl  86160 <CXHCIRing::GetCycleState() const>
   8431c:   2a180001    orr w1, w0, w24
   84320:   2a180002    orr w2, w0, w24
   84324:   f94012e0    ldr x0, [x23, #32]
   84328:   d3483c24    ubfx    x4, x1, #8, #8
   8432c:   d3505c23    ubfx    x3, x1, #16, #8
   84330:   53187c21    lsr w1, w1, #24
   84334:   39003262    strb    w2, [x19, #12]
   84338:   39003664    strb    w4, [x19, #13]
   8433c:   39003a63    strb    w3, [x19, #14]
   84340:   39003e61    strb    w1, [x19, #15]
   84344:   9400073f    bl  86040 <CXHCIRing::IncrementEnqueue()>
   84348:   52800020    mov w0, #0x1
   8434c:   a94153f3    ldp x19, x20, [sp, #16]
   84350:   a9425bf5    ldp x21, x22, [sp, #32]
   84354:   a94363f7    ldp x23, x24, [sp, #48]
   84358:   a8c47bfd    ldp x29, x30, [sp], #64
   8435c:   d65f03c0    ret
   84360:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84364:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84368:   9120c021    add x1, x1, #0x830
   8436c:   91222000    add x0, x0, #0x888
   84370:   52803ee2    mov w2, #0x1f7
   84374:   940061d3    bl  9cac0 <assertion_failed>
   84378:   d503201f    nop
   8437c:   d503201f    nop

0000000000084380 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)>:
   84380:   a9ba7bfd    stp x29, x30, [sp, #-96]!
   84384:   910003fd    mov x29, sp
   84388:   a90153f3    stp x19, x20, [sp, #16]
   8438c:   b4001001    cbz x1, 8458c <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x20c>
   84390:   2a0203f3    mov w19, w2
   84394:   35001102    cbnz    w2, 845b4 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x234>
   84398:   a90363f7    stp x23, x24, [sp, #48]
   8439c:   39406017    ldrb    w23, [x0, #24]
   843a0:   a90573fb    stp x27, x28, [sp, #80]
   843a4:   aa0003fc    mov x28, x0
   843a8:   37000077    tbnz    w23, #0, 843b4 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x34>
   843ac:   52800017    mov w23, #0x0
   843b0:   14000068    b   84550 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x1d0>
   843b4:   aa0103e0    mov x0, x1
   843b8:   aa0103f4    mov x20, x1
   843bc:   a9025bf5    stp x21, x22, [sp, #32]
   843c0:   97fff620    bl  81c40 <CUSBRequest::GetBuffer()>
   843c4:   aa0003f5    mov x21, x0
   843c8:   aa1403e0    mov x0, x20
   843cc:   97fff62d    bl  81c80 <CUSBRequest::GetBufLen() const>
   843d0:   b9405381    ldr w1, [x28, #80]
   843d4:   2a0003f6    mov w22, w0
   843d8:   35000c81    cbnz    w1, 84568 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x1e8>
   843dc:   f9401b80    ldr x0, [x28, #48]
   843e0:   b4000cc0    cbz x0, 84578 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x1f8>
   843e4:   f9401f80    ldr x0, [x28, #56]
   843e8:   b5001600    cbnz    x0, 846a8 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x328>
   843ec:   b9405380    ldr w0, [x28, #80]
   843f0:   f9001f94    str x20, [x28, #56]
   843f4:   35000c80    cbnz    w0, 84584 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x204>
   843f8:   3940bb80    ldrb    w0, [x28, #46]
   843fc:   370806a0    tbnz    w0, #1, 844d0 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x150>
   84400:   7100101f    cmp w0, #0x4
   84404:   54000f00    b.eq    845e4 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x264>
   84408:   36001900    tbz w0, #0, 84728 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x3a8>
   8440c:   b4002075    cbz x21, 84818 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x498>
   84410:   34002136    cbz w22, 84834 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x4b4>
   84414:   f14a02bf    cmp x21, #0x280, lsl #12
   84418:   54002209    b.ls    84858 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x4d8>
   8441c:   2a1603e1    mov w1, w22
   84420:   aa1503e0    mov x0, x21
   84424:   940091a7    bl  a8ac0 <CleanAndInvalidateDataCacheRange>
   84428:   aa1403e0    mov x0, x20
   8442c:   97fff63d    bl  81d20 <CUSBRequest::GetNumIsoPackets() const>
   84430:   2a0003f8    mov w24, w0
   84434:   34000700    cbz w0, 84514 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x194>
   84438:   5100041b    sub w27, w0, #0x1
   8443c:   a9046bf9    stp x25, x26, [sp, #64]
   84440:   d00001b9    adrp    x25, ba000 <font_data+0x1080>
   84444:   912c4339    add x25, x25, #0xb10
   84448:   530f3b76    lsl w22, w27, #17
   8444c:   14000006    b   84464 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0xe4>
   84450:   11000673    add w19, w19, #0x1
   84454:   514082d6    sub w22, w22, #0x20, lsl #12
   84458:   8b3a22b5    add x21, x21, w26, uxth
   8445c:   6b13031f    cmp w24, w19
   84460:   54000be0    b.eq    845dc <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x25c>
   84464:   2a1303e1    mov w1, w19
   84468:   aa1403e0    mov x0, x20
   8446c:   97fff639    bl  81d50 <CUSBRequest::GetIsoPacketSize(unsigned int) const>
   84470:   f9400323    ldr x3, [x25]
   84474:   12003c1a    and w26, w0, #0xffff
   84478:   52828402    mov w2, #0x1420
   8447c:   72b00002    movk    w2, #0x8000, lsl #16
   84480:   6b13037f    cmp w27, w19
   84484:   52828001    mov w1, #0x1400
   84488:   72b00001    movk    w1, #0x8000, lsl #16
   8448c:   1a821021    csel    w1, w1, w2, ne
   84490:   aa1c03e0    mov x0, x28
   84494:   2a160342    orr w2, w26, w22
   84498:   aa0302a4    orr x4, x21, x3
   8449c:   2a150063    orr w3, w3, w21
   844a0:   d360fc84    lsr x4, x4, #32
   844a4:   97ffff77    bl  84280 <CXHCIEndpoint::EnqueueTRB(unsigned int, unsigned int, unsigned int, unsigned int)>
   844a8:   3707fd40    tbnz    w0, #0, 84450 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0xd0>
   844ac:   a9446bf9    ldp x25, x26, [sp, #64]
   844b0:   b9405380    ldr w0, [x28, #80]
   844b4:   35000e60    cbnz    w0, 84680 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x300>
   844b8:   f9401f80    ldr x0, [x28, #56]
   844bc:   b4001040    cbz x0, 846c4 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x344>
   844c0:   a9425bf5    ldp x21, x22, [sp, #32]
   844c4:   52800017    mov w23, #0x0
   844c8:   f9001f9f    str xzr, [x28, #56]
   844cc:   14000021    b   84550 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x1d0>
   844d0:   b4001035    cbz x21, 846d4 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x354>
   844d4:   340010f6    cbz w22, 846f0 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x370>
   844d8:   f14a02bf    cmp x21, #0x280, lsl #12
   844dc:   54001189    b.ls    8470c <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x38c>
   844e0:   2a1603e1    mov w1, w22
   844e4:   aa1503e0    mov x0, x21
   844e8:   94009176    bl  a8ac0 <CleanAndInvalidateDataCacheRange>
   844ec:   d00001a0    adrp    x0, ba000 <font_data+0x1080>
   844f0:   2a1603e2    mov w2, w22
   844f4:   f9458803    ldr x3, [x0, #2832]
   844f8:   52808401    mov w1, #0x420
   844fc:   aa1c03e0    mov x0, x28
   84500:   aa0302a4    orr x4, x21, x3
   84504:   2a150063    orr w3, w3, w21
   84508:   d360fc84    lsr x4, x4, #32
   8450c:   97ffff5d    bl  84280 <CXHCIEndpoint::EnqueueTRB(unsigned int, unsigned int, unsigned int, unsigned int)>
   84510:   3607fd00    tbz w0, #0, 844b0 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x130>
   84514:   d5033f9f    dsb sy
   84518:   f9400380    ldr x0, [x28]
   8451c:   b4001140    cbz x0, 84744 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x3c4>
   84520:   3940b781    ldrb    w1, [x28, #45]
   84524:   51000421    sub w1, w1, #0x1
   84528:   12001c21    and w1, w1, #0xff
   8452c:   7100783f    cmp w1, #0x1e
   84530:   54001668    b.hi    847fc <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x47c>
   84534:   f9400b93    ldr x19, [x28, #16]
   84538:   94000c96    bl  87790 <CXHCIUSBDevice::GetSlotID() const>
   8453c:   12001c01    and w1, w0, #0xff
   84540:   3940b782    ldrb    w2, [x28, #45]
   84544:   aa1303e0    mov x0, x19
   84548:   9400052a    bl  859f0 <CXHCIMMIOSpace::db_write32(unsigned int, unsigned int)>
   8454c:   a9425bf5    ldp x21, x22, [sp, #32]
   84550:   2a1703e0    mov w0, w23
   84554:   a94153f3    ldp x19, x20, [sp, #16]
   84558:   a94363f7    ldp x23, x24, [sp, #48]
   8455c:   a94573fb    ldp x27, x28, [sp, #80]
   84560:   a8c67bfd    ldp x29, x30, [sp], #96
   84564:   d65f03c0    ret
   84568:   2a0103e0    mov w0, w1
   8456c:   94009041    bl  a8670 <EnterCritical>
   84570:   f9401b80    ldr x0, [x28, #48]
   84574:   b5fff380    cbnz    x0, 843e4 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x64>
   84578:   b9405380    ldr w0, [x28, #80]
   8457c:   f9001b94    str x20, [x28, #48]
   84580:   34fff3c0    cbz w0, 843f8 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x78>
   84584:   9400906b    bl  a8730 <LeaveCritical>
   84588:   17ffff9c    b   843f8 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x78>
   8458c:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84590:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84594:   a9025bf5    stp x21, x22, [sp, #32]
   84598:   9120c021    add x1, x1, #0x830
   8459c:   9111c000    add x0, x0, #0x470
   845a0:   52801f82    mov w2, #0xfc
   845a4:   a90363f7    stp x23, x24, [sp, #48]
   845a8:   a9046bf9    stp x25, x26, [sp, #64]
   845ac:   a90573fb    stp x27, x28, [sp, #80]
   845b0:   94006144    bl  9cac0 <assertion_failed>
   845b4:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   845b8:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   845bc:   a9025bf5    stp x21, x22, [sp, #32]
   845c0:   9120c021    add x1, x1, #0x830
   845c4:   91254000    add x0, x0, #0x950
   845c8:   52801fa2    mov w2, #0xfd
   845cc:   a90363f7    stp x23, x24, [sp, #48]
   845d0:   a9046bf9    stp x25, x26, [sp, #64]
   845d4:   a90573fb    stp x27, x28, [sp, #80]
   845d8:   9400613a    bl  9cac0 <assertion_failed>
   845dc:   a9446bf9    ldp x25, x26, [sp, #64]
   845e0:   17ffffcd    b   84514 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x194>
   845e4:   aa1403e0    mov x0, x20
   845e8:   97fff57e    bl  81be0 <CUSBRequest::GetSetupData()>
   845ec:   aa0003e3    mov x3, x0
   845f0:   b40014e0    cbz x0, 8488c <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x50c>
   845f4:   39c00000    ldrsb   w0, [x0]
   845f8:   37f80b40    tbnz    w0, #31, 84760 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x3e0>
   845fc:   39401065    ldrb    w5, [x3, #4]
   84600:   710002df    cmp w22, #0x0
   84604:   52810801    mov w1, #0x840
   84608:   1a9f07e7    cset    w7, ne
   8460c:   2a074421    orr w1, w1, w7, lsl #17
   84610:   52800102    mov w2, #0x8
   84614:   39401464    ldrb    w4, [x3, #5]
   84618:   aa1c03e0    mov x0, x28
   8461c:   39400069    ldrb    w9, [x3]
   84620:   39400467    ldrb    w7, [x3, #1]
   84624:   aa0420a8    orr x8, x5, x4, lsl #8
   84628:   39401864    ldrb    w4, [x3, #6]
   8462c:   39400865    ldrb    w5, [x3, #2]
   84630:   aa072127    orr x7, x9, x7, lsl #8
   84634:   39401c69    ldrb    w9, [x3, #7]
   84638:   aa044104    orr x4, x8, x4, lsl #16
   8463c:   39400c68    ldrb    w8, [x3, #3]
   84640:   aa0540e3    orr x3, x7, x5, lsl #16
   84644:   2a096084    orr w4, w4, w9, lsl #24
   84648:   2a086063    orr w3, w3, w8, lsl #24
   8464c:   97ffff0d    bl  84280 <CXHCIEndpoint::EnqueueTRB(unsigned int, unsigned int, unsigned int, unsigned int)>
   84650:   3607f300    tbz w0, #0, 844b0 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x130>
   84654:   35001116    cbnz    w22, 84874 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x4f4>
   84658:   52a00033    mov w19, #0x10000
   8465c:   52820401    mov w1, #0x1020
   84660:   52800004    mov w4, #0x0
   84664:   2a010261    orr w1, w19, w1
   84668:   52800003    mov w3, #0x0
   8466c:   52800002    mov w2, #0x0
   84670:   aa1c03e0    mov x0, x28
   84674:   97ffff03    bl  84280 <CXHCIEndpoint::EnqueueTRB(unsigned int, unsigned int, unsigned int, unsigned int)>
   84678:   3707f4e0    tbnz    w0, #0, 84514 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x194>
   8467c:   17ffff8d    b   844b0 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x130>
   84680:   94008ffc    bl  a8670 <EnterCritical>
   84684:   f9401f81    ldr x1, [x28, #56]
   84688:   b9405380    ldr w0, [x28, #80]
   8468c:   b4000e21    cbz x1, 84850 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x4d0>
   84690:   f9001f9f    str xzr, [x28, #56]
   84694:   34000f60    cbz w0, 84880 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x500>
   84698:   94009026    bl  a8730 <LeaveCritical>
   8469c:   a9425bf5    ldp x21, x22, [sp, #32]
   846a0:   52800017    mov w23, #0x0
   846a4:   17ffffab    b   84550 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x1d0>
   846a8:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   846ac:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   846b0:   a9046bf9    stp x25, x26, [sp, #64]
   846b4:   9120c021    add x1, x1, #0x830
   846b8:   9125c000    add x0, x0, #0x970
   846bc:   528021c2    mov w2, #0x10e
   846c0:   94006100    bl  9cac0 <assertion_failed>
   846c4:   a9425bf5    ldp x21, x22, [sp, #32]
   846c8:   52800017    mov w23, #0x0
   846cc:   f9001b9f    str xzr, [x28, #48]
   846d0:   17ffffa0    b   84550 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x1d0>
   846d4:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   846d8:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   846dc:   a9046bf9    stp x25, x26, [sp, #64]
   846e0:   9120c021    add x1, x1, #0x830
   846e4:   91260000    add x0, x0, #0x980
   846e8:   528022e2    mov w2, #0x117
   846ec:   940060f5    bl  9cac0 <assertion_failed>
   846f0:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   846f4:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   846f8:   a9046bf9    stp x25, x26, [sp, #64]
   846fc:   9120c021    add x1, x1, #0x830
   84700:   91228000    add x0, x0, #0x8a0
   84704:   52802302    mov w2, #0x118
   84708:   940060ee    bl  9cac0 <assertion_failed>
   8470c:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84710:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84714:   a9046bf9    stp x25, x26, [sp, #64]
   84718:   9120c021    add x1, x1, #0x830
   8471c:   91264000    add x0, x0, #0x990
   84720:   52802322    mov w2, #0x119
   84724:   940060e7    bl  9cac0 <assertion_failed>
   84728:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8472c:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84730:   a9046bf9    stp x25, x26, [sp, #64]
   84734:   9120c021    add x1, x1, #0x830
   84738:   91272000    add x0, x0, #0x9c8
   8473c:   52802d22    mov w2, #0x169
   84740:   940060e0    bl  9cac0 <assertion_failed>
   84744:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84748:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8474c:   a9046bf9    stp x25, x26, [sp, #64]
   84750:   9120c021    add x1, x1, #0x830
   84754:   9127a000    add x0, x0, #0x9e8
   84758:   528030c2    mov w2, #0x186
   8475c:   940060d9    bl  9cac0 <assertion_failed>
   84760:   34000a56    cbz w22, 848a8 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x528>
   84764:   39401064    ldrb    w4, [x3, #4]
   84768:   52810801    mov w1, #0x840
   8476c:   72a00061    movk    w1, #0x3, lsl #16
   84770:   52800102    mov w2, #0x8
   84774:   aa1c03e0    mov x0, x28
   84778:   39401468    ldrb    w8, [x3, #5]
   8477c:   52a00034    mov w20, #0x10000
   84780:   39400069    ldrb    w9, [x3]
   84784:   39400467    ldrb    w7, [x3, #1]
   84788:   aa082088    orr x8, x4, x8, lsl #8
   8478c:   39401864    ldrb    w4, [x3, #6]
   84790:   39400865    ldrb    w5, [x3, #2]
   84794:   aa072127    orr x7, x9, x7, lsl #8
   84798:   39401c69    ldrb    w9, [x3, #7]
   8479c:   aa044104    orr x4, x8, x4, lsl #16
   847a0:   39400c68    ldrb    w8, [x3, #3]
   847a4:   aa0540e3    orr x3, x7, x5, lsl #16
   847a8:   2a096084    orr w4, w4, w9, lsl #24
   847ac:   2a086063    orr w3, w3, w8, lsl #24
   847b0:   97fffeb4    bl  84280 <CXHCIEndpoint::EnqueueTRB(unsigned int, unsigned int, unsigned int, unsigned int)>
   847b4:   3607e7e0    tbz w0, #0, 844b0 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x130>
   847b8:   b4000875    cbz x21, 848c4 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x544>
   847bc:   f14a02bf    cmp x21, #0x280, lsl #12
   847c0:   54000909    b.ls    848e0 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x560>
   847c4:   2a1603e1    mov w1, w22
   847c8:   aa1503e0    mov x0, x21
   847cc:   940090bd    bl  a8ac0 <CleanAndInvalidateDataCacheRange>
   847d0:   d00001a0    adrp    x0, ba000 <font_data+0x1080>
   847d4:   2a1603e2    mov w2, w22
   847d8:   f9458803    ldr x3, [x0, #2832]
   847dc:   32160681    orr w1, w20, #0xc00
   847e0:   aa1c03e0    mov x0, x28
   847e4:   aa0302a4    orr x4, x21, x3
   847e8:   2a150063    orr w3, w3, w21
   847ec:   d360fc84    lsr x4, x4, #32
   847f0:   97fffea4    bl  84280 <CXHCIEndpoint::EnqueueTRB(unsigned int, unsigned int, unsigned int, unsigned int)>
   847f4:   3707f340    tbnz    w0, #0, 8465c <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x2dc>
   847f8:   17ffff2e    b   844b0 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x130>
   847fc:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84800:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84804:   a9046bf9    stp x25, x26, [sp, #64]
   84808:   9120c021    add x1, x1, #0x830
   8480c:   9127e000    add x0, x0, #0x9f8
   84810:   528030e2    mov w2, #0x187
   84814:   940060ab    bl  9cac0 <assertion_failed>
   84818:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8481c:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84820:   a9046bf9    stp x25, x26, [sp, #64]
   84824:   9120c021    add x1, x1, #0x830
   84828:   91260000    add x0, x0, #0x980
   8482c:   52802d62    mov w2, #0x16b
   84830:   940060a4    bl  9cac0 <assertion_failed>
   84834:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84838:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8483c:   a9046bf9    stp x25, x26, [sp, #64]
   84840:   9120c021    add x1, x1, #0x830
   84844:   91228000    add x0, x0, #0x8a0
   84848:   52802d82    mov w2, #0x16c
   8484c:   9400609d    bl  9cac0 <assertion_failed>
   84850:   f9001b9f    str xzr, [x28, #48]
   84854:   17ffff90    b   84694 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x314>
   84858:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8485c:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84860:   a9046bf9    stp x25, x26, [sp, #64]
   84864:   9120c021    add x1, x1, #0x830
   84868:   91264000    add x0, x0, #0x990
   8486c:   52802da2    mov w2, #0x16d
   84870:   94006094    bl  9cac0 <assertion_failed>
   84874:   52800014    mov w20, #0x0
   84878:   52a00033    mov w19, #0x10000
   8487c:   17ffffcf    b   847b8 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x438>
   84880:   a9425bf5    ldp x21, x22, [sp, #32]
   84884:   52800017    mov w23, #0x0
   84888:   17ffff32    b   84550 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)+0x1d0>
   8488c:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84890:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84894:   a9046bf9    stp x25, x26, [sp, #64]
   84898:   9120c021    add x1, x1, #0x830
   8489c:   9126e000    add x0, x0, #0x9b8
   848a0:   52802502    mov w2, #0x128
   848a4:   94006087    bl  9cac0 <assertion_failed>
   848a8:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   848ac:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   848b0:   a9046bf9    stp x25, x26, [sp, #64]
   848b4:   9120c021    add x1, x1, #0x830
   848b8:   91228000    add x0, x0, #0x8a0
   848bc:   528025e2    mov w2, #0x12f
   848c0:   94006080    bl  9cac0 <assertion_failed>
   848c4:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   848c8:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   848cc:   a9046bf9    stp x25, x26, [sp, #64]
   848d0:   9120c021    add x1, x1, #0x830
   848d4:   91260000    add x0, x0, #0x980
   848d8:   52802a22    mov w2, #0x151
   848dc:   94006079    bl  9cac0 <assertion_failed>
   848e0:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   848e4:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   848e8:   a9046bf9    stp x25, x26, [sp, #64]
   848ec:   9120c021    add x1, x1, #0x830
   848f0:   91264000    add x0, x0, #0x990
   848f4:   52802a62    mov w2, #0x153
   848f8:   94006072    bl  9cac0 <assertion_failed>
   848fc:   d503201f    nop

0000000000084900 <CXHCIEndpoint::Transfer(CUSBRequest*, unsigned int)>:
   84900:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   84904:   910003fd    mov x29, sp
   84908:   a90153f3    stp x19, x20, [sp, #16]
   8490c:   f90013f5    str x21, [sp, #32]
   84910:   b4000721    cbz x1, 849f4 <CXHCIEndpoint::Transfer(CUSBRequest*, unsigned int)+0xf4>
   84914:   350007c2    cbnz    w2, 84a0c <CXHCIEndpoint::Transfer(CUSBRequest*, unsigned int)+0x10c>
   84918:   aa0103f5    mov x21, x1
   8491c:   f0ffffe1    adrp    x1, 83000 <CUSBStandardHub::HandlePortStatusChange()+0x1b0>
   84920:   aa0003f3    mov x19, x0
   84924:   aa0003e3    mov x3, x0
   84928:   9139c021    add x1, x1, #0xe70
   8492c:   aa1503e0    mov x0, x21
   84930:   d2800002    mov x2, #0x0
   84934:   97fff517    bl  81d90 <CUSBRequest::SetCompletionRoutine(void (*)(CUSBRequest*, void*, void*), void*, void*)>
   84938:   39410260    ldrb    w0, [x19, #64]
   8493c:   36000740    tbz w0, #0, 84a24 <CXHCIEndpoint::Transfer(CUSBRequest*, unsigned int)+0x124>
   84940:   52800002    mov w2, #0x0
   84944:   aa1503e1    mov x1, x21
   84948:   3901027f    strb    wzr, [x19, #64]
   8494c:   aa1303e0    mov x0, x19
   84950:   97fffe8c    bl  84380 <CXHCIEndpoint::TransferAsync(CUSBRequest*, unsigned int)>
   84954:   370000c0    tbnz    w0, #0, 8496c <CXHCIEndpoint::Transfer(CUSBRequest*, unsigned int)+0x6c>
   84958:   a94153f3    ldp x19, x20, [sp, #16]
   8495c:   52800000    mov w0, #0x0
   84960:   f94013f5    ldr x21, [sp, #32]
   84964:   a8c37bfd    ldp x29, x30, [sp], #48
   84968:   d65f03c0    ret
   8496c:   94008745    bl  a6680 <CTimer::Get()>
   84970:   9400840c    bl  a59a0 <CTimer::GetTicks() const>
   84974:   2a0003f4    mov w20, w0
   84978:   14000006    b   84990 <CXHCIEndpoint::Transfer(CUSBRequest*, unsigned int)+0x90>
   8497c:   94008741    bl  a6680 <CTimer::Get()>
   84980:   94008408    bl  a59a0 <CTimer::GetTicks() const>
   84984:   4b140002    sub w2, w0, w20
   84988:   71018c5f    cmp w2, #0x63
   8498c:   54000188    b.hi    849bc <CXHCIEndpoint::Transfer(CUSBRequest*, unsigned int)+0xbc>
   84990:   39410262    ldrb    w2, [x19, #64]
   84994:   3607ff42    tbz w2, #0, 8497c <CXHCIEndpoint::Transfer(CUSBRequest*, unsigned int)+0x7c>
   84998:   d5033fbf    dmb sy
   8499c:   aa1503e0    mov x0, x21
   849a0:   97fff474    bl  81b70 <CUSBRequest::GetStatus() const>
   849a4:   a94153f3    ldp x19, x20, [sp, #16]
   849a8:   7100001f    cmp w0, #0x0
   849ac:   1a9f07e0    cset    w0, ne
   849b0:   f94013f5    ldr x21, [sp, #32]
   849b4:   a8c37bfd    ldp x29, x30, [sp], #48
   849b8:   d65f03c0    ret
   849bc:   94006b11    bl  9f600 <CLogger::Get()>
   849c0:   f0000143    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   849c4:   90000181    adrp    x1, b4000 <From+0x140>
   849c8:   91288063    add x3, x3, #0xa20
   849cc:   91050021    add x1, x1, #0x140
   849d0:   52800082    mov w2, #0x4
   849d4:   94006cf3    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   849d8:   b9405260    ldr w0, [x19, #80]
   849dc:   35000300    cbnz    w0, 84a3c <CXHCIEndpoint::Transfer(CUSBRequest*, unsigned int)+0x13c>
   849e0:   f9401e60    ldr x0, [x19, #56]
   849e4:   a9037e60    stp x0, xzr, [x19, #48]
   849e8:   52800020    mov w0, #0x1
   849ec:   39010260    strb    w0, [x19, #64]
   849f0:   17ffffda    b   84958 <CXHCIEndpoint::Transfer(CUSBRequest*, unsigned int)+0x58>
   849f4:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   849f8:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   849fc:   9120c021    add x1, x1, #0x830
   84a00:   9111c000    add x0, x0, #0x470
   84a04:   52801a02    mov w2, #0xd0
   84a08:   9400602e    bl  9cac0 <assertion_failed>
   84a0c:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84a10:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84a14:   9120c021    add x1, x1, #0x830
   84a18:   91254000    add x0, x0, #0x950
   84a1c:   52801a22    mov w2, #0xd1
   84a20:   94006028    bl  9cac0 <assertion_failed>
   84a24:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84a28:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84a2c:   9120c021    add x1, x1, #0x830
   84a30:   91214000    add x0, x0, #0x850
   84a34:   52801aa2    mov w2, #0xd5
   84a38:   94006022    bl  9cac0 <assertion_failed>
   84a3c:   94008f0d    bl  a8670 <EnterCritical>
   84a40:   f9401e61    ldr x1, [x19, #56]
   84a44:   b9405260    ldr w0, [x19, #80]
   84a48:   a9037e61    stp x1, xzr, [x19, #48]
   84a4c:   34fffce0    cbz w0, 849e8 <CXHCIEndpoint::Transfer(CUSBRequest*, unsigned int)+0xe8>
   84a50:   94008f38    bl  a8730 <LeaveCritical>
   84a54:   17ffffe5    b   849e8 <CXHCIEndpoint::Transfer(CUSBRequest*, unsigned int)+0xe8>
   84a58:   d503201f    nop
   84a5c:   d503201f    nop

0000000000084a60 <CXHCIEndpoint::GetInputContextSetMaxPacketSize()>:
   84a60:   a9be7bfd    stp x29, x30, [sp, #-32]!
   84a64:   910003fd    mov x29, sp
   84a68:   a90153f3    stp x19, x20, [sp, #16]
   84a6c:   aa0003f3    mov x19, x0
   84a70:   f9402400    ldr x0, [x0, #72]
   84a74:   b50003c0    cbnz    x0, 84aec <CXHCIEndpoint::GetInputContextSetMaxPacketSize()+0x8c>
   84a78:   d28283e0    mov x0, #0x141f
   84a7c:   94008b59    bl  a77e0 <operator new[](unsigned long)>
   84a80:   f9400261    ldr x1, [x19]
   84a84:   913ffc14    add x20, x0, #0xfff
   84a88:   f9002660    str x0, [x19, #72]
   84a8c:   9274ce94    and x20, x20, #0xfffffffffffff000
   84a90:   b40003a1    cbz x1, 84b04 <CXHCIEndpoint::GetInputContextSetMaxPacketSize()+0xa4>
   84a94:   d2800402    mov x2, #0x20
   84a98:   52800001    mov w1, #0x0
   84a9c:   aa1403e0    mov x0, x20
   84aa0:   9400889e    bl  a6d18 <memset>
   84aa4:   f9400260    ldr x0, [x19]
   84aa8:   94000b4a    bl  877d0 <CXHCIUSBDevice::GetDeviceContext()>
   84aac:   aa0003e1    mov x1, x0
   84ab0:   d2808002    mov x2, #0x400
   84ab4:   91008280    add x0, x20, #0x20
   84ab8:   940088b0    bl  a6d78 <memcpy>
   84abc:   79405663    ldrh    w3, [x19, #42]
   84ac0:   aa1403e2    mov x2, x20
   84ac4:   b21f03e4    mov x4, #0x200000002
   84ac8:   aa1403e0    mov x0, x20
   84acc:   d2808401    mov x1, #0x420
   84ad0:   f8040444    str x4, [x2], #64
   84ad4:   79000c43    strh    w3, [x2, #6]
   84ad8:   94008ffa    bl  a8ac0 <CleanAndInvalidateDataCacheRange>
   84adc:   aa1403e0    mov x0, x20
   84ae0:   a94153f3    ldp x19, x20, [sp, #16]
   84ae4:   a8c27bfd    ldp x29, x30, [sp], #32
   84ae8:   d65f03c0    ret
   84aec:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84af0:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84af4:   9120c021    add x1, x1, #0x830
   84af8:   9121a000    add x0, x0, #0x868
   84afc:   528041c2    mov w2, #0x20e
   84b00:   94005ff0    bl  9cac0 <assertion_failed>
   84b04:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84b08:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84b0c:   9120c021    add x1, x1, #0x830
   84b10:   9127a000    add x0, x0, #0x9e8
   84b14:   528042a2    mov w2, #0x215
   84b18:   94005fea    bl  9cac0 <assertion_failed>
   84b1c:   d503201f    nop

0000000000084b20 <CXHCIEndpoint::SetMaxPacketSize(unsigned int)>:
   84b20:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   84b24:   910003fd    mov x29, sp
   84b28:   a90153f3    stp x19, x20, [sp, #16]
   84b2c:   f90013f5    str x21, [sp, #32]
   84b30:   3940b414    ldrb    w20, [x0, #45]
   84b34:   7100069f    cmp w20, #0x1
   84b38:   54000581    b.ne    84be8 <CXHCIEndpoint::SetMaxPacketSize(unsigned int)+0xc8>
   84b3c:   aa0003f3    mov x19, x0
   84b40:   f9400000    ldr x0, [x0]
   84b44:   2a0103f5    mov w21, w1
   84b48:   94000e5e    bl  884c0 <CUSBDevice::GetSpeed() const>
   84b4c:   7100041f    cmp w0, #0x1
   84b50:   54000421    b.ne    84bd4 <CXHCIEndpoint::SetMaxPacketSize(unsigned int)+0xb4>
   84b54:   510022a0    sub w0, w21, #0x8
   84b58:   7100e01f    cmp w0, #0x38
   84b5c:   54000528    b.hi    84c00 <CXHCIEndpoint::SetMaxPacketSize(unsigned int)+0xe0>
   84b60:   aa1303e0    mov x0, x19
   84b64:   79005675    strh    w21, [x19, #42]
   84b68:   97ffffbe    bl  84a60 <CXHCIEndpoint::GetInputContextSetMaxPacketSize()>
   84b6c:   aa0003f4    mov x20, x0
   84b70:   b4000540    cbz x0, 84c18 <CXHCIEndpoint::SetMaxPacketSize(unsigned int)+0xf8>
   84b74:   f9400660    ldr x0, [x19, #8]
   84b78:   b40005c0    cbz x0, 84c30 <CXHCIEndpoint::SetMaxPacketSize(unsigned int)+0x110>
   84b7c:   f9400261    ldr x1, [x19]
   84b80:   b4000641    cbz x1, 84c48 <CXHCIEndpoint::SetMaxPacketSize(unsigned int)+0x128>
   84b84:   97fffa3f    bl  83480 <CXHCIDevice::GetCommandManager()>
   84b88:   aa0003f5    mov x21, x0
   84b8c:   f9400260    ldr x0, [x19]
   84b90:   94000b00    bl  87790 <CXHCIUSBDevice::GetSlotID() const>
   84b94:   2a0003e1    mov w1, w0
   84b98:   aa1403e2    mov x2, x20
   84b9c:   aa1503e0    mov x0, x21
   84ba0:   94003998    bl  93200 <CXHCICommandManager::EvaluateContext(unsigned char, TXHCIInputContext*)>
   84ba4:   f9402661    ldr x1, [x19, #72]
   84ba8:   2a0003f4    mov w20, w0
   84bac:   b40005a1    cbz x1, 84c60 <CXHCIEndpoint::SetMaxPacketSize(unsigned int)+0x140>
   84bb0:   aa0103e0    mov x0, x1
   84bb4:   94008b1f    bl  a7830 <operator delete[](void*)>
   84bb8:   f94013f5    ldr x21, [sp, #32]
   84bbc:   7100069f    cmp w20, #0x1
   84bc0:   1a9f17e0    cset    w0, eq
   84bc4:   f900267f    str xzr, [x19, #72]
   84bc8:   a94153f3    ldp x19, x20, [sp, #16]
   84bcc:   a8c37bfd    ldp x29, x30, [sp], #48
   84bd0:   d65f03c0    ret
   84bd4:   f94013f5    ldr x21, [sp, #32]
   84bd8:   2a1403e0    mov w0, w20
   84bdc:   a94153f3    ldp x19, x20, [sp, #16]
   84be0:   a8c37bfd    ldp x29, x30, [sp], #48
   84be4:   d65f03c0    ret
   84be8:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84bec:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84bf0:   9120c021    add x1, x1, #0x830
   84bf4:   9128e000    add x0, x0, #0xa38
   84bf8:   52801702    mov w2, #0xb8
   84bfc:   94005fb1    bl  9cac0 <assertion_failed>
   84c00:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84c04:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84c08:   9120c021    add x1, x1, #0x830
   84c0c:   91294000    add x0, x0, #0xa50
   84c10:   528017c2    mov w2, #0xbe
   84c14:   94005fab    bl  9cac0 <assertion_failed>
   84c18:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84c1c:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84c20:   9120c021    add x1, x1, #0x830
   84c24:   912a0000    add x0, x0, #0xa80
   84c28:   52801842    mov w2, #0xc2
   84c2c:   94005fa5    bl  9cac0 <assertion_failed>
   84c30:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84c34:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84c38:   9120c021    add x1, x1, #0x830
   84c3c:   912a6000    add x0, x0, #0xa98
   84c40:   52801882    mov w2, #0xc4
   84c44:   94005f9f    bl  9cac0 <assertion_failed>
   84c48:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84c4c:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84c50:   9120c021    add x1, x1, #0x830
   84c54:   9127a000    add x0, x0, #0x9e8
   84c58:   528018a2    mov w2, #0xc5
   84c5c:   94005f99    bl  9cac0 <assertion_failed>
   84c60:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84c64:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84c68:   9120c021    add x1, x1, #0x830
   84c6c:   912ac000    add x0, x0, #0xab0
   84c70:   52804cc2    mov w2, #0x266
   84c74:   94005f93    bl  9cac0 <assertion_failed>
   84c78:   d503201f    nop
   84c7c:   d503201f    nop

0000000000084c80 <CXHCIEndpoint::GetInputContextConfigureEndpoint()>:
   84c80:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   84c84:   910003fd    mov x29, sp
   84c88:   a90153f3    stp x19, x20, [sp, #16]
   84c8c:   aa0003f4    mov x20, x0
   84c90:   f9402400    ldr x0, [x0, #72]
   84c94:   a9025bf5    stp x21, x22, [sp, #32]
   84c98:   b5000c80    cbnz    x0, 84e28 <CXHCIEndpoint::GetInputContextConfigureEndpoint()+0x1a8>
   84c9c:   d28283e0    mov x0, #0x141f
   84ca0:   94008ad0    bl  a77e0 <operator new[](unsigned long)>
   84ca4:   913ffc13    add x19, x0, #0xfff
   84ca8:   d2808402    mov x2, #0x420
   84cac:   f9002680    str x0, [x20, #72]
   84cb0:   9274ce73    and x19, x19, #0xfffffffffffff000
   84cb4:   52800001    mov w1, #0x0
   84cb8:   aa1303e0    mov x0, x19
   84cbc:   94008817    bl  a6d18 <memset>
   84cc0:   3940b695    ldrb    w21, [x20, #45]
   84cc4:   510006b6    sub w22, w21, #0x1
   84cc8:   12001ec0    and w0, w22, #0xff
   84ccc:   7100781f    cmp w0, #0x1e
   84cd0:   54000b88    b.hi    84e40 <CXHCIEndpoint::GetInputContextConfigureEndpoint()+0x1c0>
   84cd4:   52800021    mov w1, #0x1
   84cd8:   f9401280    ldr x0, [x20, #32]
   84cdc:   1ad52021    lsl w1, w1, w21
   84ce0:   29000661    stp w1, w1, [x19]
   84ce4:   b4000ba0    cbz x0, 84e58 <CXHCIEndpoint::GetInputContextConfigureEndpoint()+0x1d8>
   84ce8:   9400045a    bl  85e50 <CXHCIRing::GetFirstTRB()>
   84cec:   d00001a1    adrp    x1, ba000 <font_data+0x1080>
   84cf0:   93407ed6    sxtw    x22, w22
   84cf4:   3940ba82    ldrb    w2, [x20, #46]
   84cf8:   d37b1eb5    ubfiz   x21, x21, #5, #8
   84cfc:   928f8005    mov x5, #0xffffffffffff83ff
   84d00:   f9458826    ldr x6, [x1, #2832]
   84d04:   91000ac1    add x1, x22, #0x2
   84d08:   8b150275    add x21, x19, x21
   84d0c:   d37be821    lsl x1, x1, #5
   84d10:   f2dfff25    movk    x5, #0xfff9, lsl #32
   84d14:   8b010263    add x3, x19, x1
   84d18:   79405684    ldrh    w4, [x20, #42]
   84d1c:   71001c5f    cmp w2, #0x7
   84d20:   aa060000    orr x0, x0, x6
   84d24:   b2400000    orr x0, x0, #0x1
   84d28:   f90016a0    str x0, [x21, #40]
   84d2c:   b9400460    ldr w0, [x3, #4]
   84d30:   331d0840    bfi w0, w2, #3, #3
   84d34:   33103c80    bfi w0, w4, #16, #16
   84d38:   b9000460    str w0, [x3, #4]
   84d3c:   390096bf    strb    wzr, [x21, #37]
   84d40:   f8616a60    ldr x0, [x19, x1]
   84d44:   8a050000    and x0, x0, x5
   84d48:   b25f0400    orr x0, x0, #0x600000000
   84d4c:   f8216a60    str x0, [x19, x1]
   84d50:   54000908    b.hi    84e70 <CXHCIEndpoint::GetInputContextConfigureEndpoint()+0x1f0>
   84d54:   d2800020    mov x0, #0x1
   84d58:   d2800441    mov x1, #0x22
   84d5c:   9ac22000    lsl x0, x0, x2
   84d60:   ea01001f    tst x0, x1
   84d64:   54000261    b.ne    84db0 <CXHCIEndpoint::GetInputContextConfigureEndpoint()+0x130>
   84d68:   d2801101    mov x1, #0x88
   84d6c:   ea01001f    tst x0, x1
   84d70:   540003e1    b.ne    84dec <CXHCIEndpoint::GetInputContextConfigureEndpoint()+0x16c>
   84d74:   d2800881    mov x1, #0x44
   84d78:   ea01001f    tst x0, x1
   84d7c:   540007a0    b.eq    84e70 <CXHCIEndpoint::GetInputContextConfigureEndpoint()+0x1f0>
   84d80:   8b161676    add x22, x19, x22, lsl #5
   84d84:   d2808401    mov x1, #0x420
   84d88:   b94052c0    ldr w0, [x22, #80]
   84d8c:   72802000    movk    w0, #0x100
   84d90:   b90052c0    str w0, [x22, #80]
   84d94:   aa1303e0    mov x0, x19
   84d98:   94008f4a    bl  a8ac0 <CleanAndInvalidateDataCacheRange>
   84d9c:   a9425bf5    ldp x21, x22, [sp, #32]
   84da0:   aa1303e0    mov x0, x19
   84da4:   a94153f3    ldp x19, x20, [sp, #16]
   84da8:   a8c37bfd    ldp x29, x30, [sp], #48
   84dac:   d65f03c0    ret
   84db0:   3940b280    ldrb    w0, [x20, #44]
   84db4:   8b161676    add x22, x19, x22, lsl #5
   84db8:   d2808401    mov x1, #0x420
   84dbc:   39008aa0    strb    w0, [x21, #34]
   84dc0:   b94052c0    ldr w0, [x22, #80]
   84dc4:   33003c80    bfxil   w0, w4, #0, #16
   84dc8:   33103c80    bfi w0, w4, #16, #16
   84dcc:   b90052c0    str w0, [x22, #80]
   84dd0:   aa1303e0    mov x0, x19
   84dd4:   94008f3b    bl  a8ac0 <CleanAndInvalidateDataCacheRange>
   84dd8:   a9425bf5    ldp x21, x22, [sp, #32]
   84ddc:   aa1303e0    mov x0, x19
   84de0:   a94153f3    ldp x19, x20, [sp, #16]
   84de4:   a8c37bfd    ldp x29, x30, [sp], #48
   84de8:   d65f03c0    ret
   84dec:   3940b280    ldrb    w0, [x20, #44]
   84df0:   8b161676    add x22, x19, x22, lsl #5
   84df4:   d2808401    mov x1, #0x420
   84df8:   39008aa0    strb    w0, [x21, #34]
   84dfc:   b94052c0    ldr w0, [x22, #80]
   84e00:   72800200    movk    w0, #0x10
   84e04:   33103c80    bfi w0, w4, #16, #16
   84e08:   b90052c0    str w0, [x22, #80]
   84e0c:   aa1303e0    mov x0, x19
   84e10:   94008f2c    bl  a8ac0 <CleanAndInvalidateDataCacheRange>
   84e14:   a9425bf5    ldp x21, x22, [sp, #32]
   84e18:   aa1303e0    mov x0, x19
   84e1c:   a94153f3    ldp x19, x20, [sp, #16]
   84e20:   a8c37bfd    ldp x29, x30, [sp], #48
   84e24:   d65f03c0    ret
   84e28:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84e2c:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84e30:   9120c021    add x1, x1, #0x830
   84e34:   9121a000    add x0, x0, #0x868
   84e38:   52804542    mov w2, #0x22a
   84e3c:   94005f21    bl  9cac0 <assertion_failed>
   84e40:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84e44:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84e48:   9120c021    add x1, x1, #0x830
   84e4c:   9127e000    add x0, x0, #0x9f8
   84e50:   52804682    mov w2, #0x234
   84e54:   94005f1b    bl  9cac0 <assertion_failed>
   84e58:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84e5c:   f0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84e60:   9120c021    add x1, x1, #0x830
   84e64:   91222000    add x0, x0, #0x888
   84e68:   52804762    mov w2, #0x23b
   84e6c:   94005f15    bl  9cac0 <assertion_failed>
   84e70:   f0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   84e74:   90000160    adrp    x0, b0000 <_etext+0xf9c>
   84e78:   9120c021    add x1, x1, #0x830
   84e7c:   91106000    add x0, x0, #0x418
   84e80:   52804b62    mov w2, #0x25b
   84e84:   94005f0f    bl  9cac0 <assertion_failed>
   84e88:   d503201f    nop
   84e8c:   d503201f    nop

0000000000084e90 <CXHCIEndpoint::CXHCIEndpoint(CXHCIUSBDevice*, TUSBEndpointDescriptor const*, CXHCIDevice*)>:
   84e90:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   84e94:   910003fd    mov x29, sp
   84e98:   a90153f3    stp x19, x20, [sp, #16]
   84e9c:   aa0003f3    mov x19, x0
   84ea0:   aa0303e0    mov x0, x3
   84ea4:   aa0203f4    mov x20, x2
   84ea8:   a9025bf5    stp x21, x22, [sp, #32]
   84eac:   aa0303f5    mov x21, x3
   84eb0:   52800036    mov w22, #0x1
   84eb4:   a9000e61    stp x1, x3, [x19]
   84eb8:   97fff95a    bl  83420 <CXHCIDevice::GetMMIOSpace()>
   84ebc:   aa0003e2    mov x2, x0
   84ec0:   52800021    mov w1, #0x1
   84ec4:   39006276    strb    w22, [x19, #24]
   84ec8:   d2800500    mov x0, #0x28
   84ecc:   f900127f    str xzr, [x19, #32]
   84ed0:   f9000a62    str x2, [x19, #16]
   84ed4:   3900b67f    strb    wzr, [x19, #45]
   84ed8:   3900ba7f    strb    wzr, [x19, #46]
   84edc:   a9037e7f    stp xzr, xzr, [x19, #48]
   84ee0:   39010276    strb    w22, [x19, #64]
   84ee4:   f900267f    str xzr, [x19, #72]
   84ee8:   b9005261    str w1, [x19, #80]
   84eec:   94008a35    bl  a77c0 <operator new(unsigned long)>
   84ef0:   aa1503e3    mov x3, x21
   84ef4:   52800802    mov w2, #0x40
   84ef8:   aa0003f5    mov x21, x0
   84efc:   52800001    mov w1, #0x0
   84f00:   9400036c    bl  85cb0 <CXHCIRing::CXHCIRing(TXHCIRingType, unsigned int, CXHCIDevice*)>
   84f04:   aa1503e0    mov x0, x21
   84f08:   f9001275    str x21, [x19, #32]
   84f0c:   940003c1    bl  85e10 <CXHCIRing::IsValid() const>
   84f10:   360007a0    tbz w0, #0, 85004 <CXHCIEndpoint::CXHCIEndpoint(CXHCIUSBDevice*, TUSBEndpointDescriptor const*, CXHCIDevice*)+0x174>
   84f14:   b4000e34    cbz x20, 850d8 <CXHCIEndpoint::CXHCIEndpoint(CXHCIUSBDevice*, TUSBEndpointDescriptor const*, CXHCIDevice*)+0x248>
   84f18:   39400280    ldrb    w0, [x20]
   84f1c:   7100181f    cmp w0, #0x6
   84f20:   54000fc9    b.ls    85118 <CXHCIEndpoint::CXHCIEndpoint(CXHCIUSBDevice*, TUSBEndpointDescriptor const*, CXHCIDevice*)+0x288>
   84f24:   39400680    ldrb    w0, [x20, #1]
   84f28:   7100141f    cmp w0, #0x5
   84f2c:   54000a41    b.ne    85074 <CXHCIEndpoint::CXHCIEndpoint(CXHCIUSBDevice*, TUSBEndpointDescriptor const*, CXHCIDevice*)+0x1e4>
   84f30:   39400a81    ldrb    w1, [x20, #2]
   84f34:   39400e82    ldrb    w2, [x20, #3]
   84f38:   f9400260    ldr x0, [x19]
   84f3c:   3900a261    strb    w1, [x19, #40]
   84f40:   3900a662    strb    w2, [x19, #41]
   84f44:   39401283    ldrb    w3, [x20, #4]
   84f48:   39401681    ldrb    w1, [x20, #5]
   84f4c:   aa012061    orr x1, x3, x1, lsl #8
   84f50:   12002821    and w1, w1, #0x7ff
   84f54:   79005661    strh    w1, [x19, #42]
   84f58:   b4000ec0    cbz x0, 85130 <CXHCIEndpoint::CXHCIEndpoint(CXHCIUSBDevice*, TUSBEndpointDescriptor const*, CXHCIDevice*)+0x2a0>
   84f5c:   37000982    tbnz    w2, #0, 8508c <CXHCIEndpoint::CXHCIEndpoint(CXHCIUSBDevice*, TUSBEndpointDescriptor const*, CXHCIDevice*)+0x1fc>
   84f60:   3900b27f    strb    wzr, [x19, #44]
   84f64:   94000d57    bl  884c0 <CUSBDevice::GetSpeed() const>
   84f68:   350000a0    cbnz    w0, 84f7c <CXHCIEndpoint::CXHCIEndpoint(CXHCIUSBDevice*, TUSBEndpointDescriptor const*, CXHCIDevice*)+0xec>
   84f6c:   3940a660    ldrb    w0, [x19, #41]
   84f70:   12000400    and w0, w0, #0x3
   84f74:   7100081f    cmp w0, #0x2
   84f78:   540006a0    b.eq    8504c <CXHCIEndpoint::CXHCIEndpoint(CXHCIUSBDevice*, TUSBEndpointDescriptor const*, CXHCIDevice*)+0x1bc>
   84f7c:   3940a262    ldrb    w2, [x19, #40]
   84f80:   72000c40    ands    w0, w2, #0xf
   84f84:   54000e20    b.eq    85148 <CXHCIEndpoint::CXHCIEndpoint(CXHCIUSBDevice*, TUSBEndpointDescriptor const*, CXHCIDevice*)+0x2b8>
   84f88:   531f1803    ubfiz   w3, w0, #1, #7
   84f8c:   531f7801    lsl w1, w0, #1
   84f90:   3940a660    ldrb    w0, [x19, #41]
   84f94:   3900b663    strb    w3, [x19, #45]
   84f98:   37380402    tbnz    w2, #7, 85018 <CXHCIEndpoint::CXHCIEndpoint(CXHCIUSBDevice*, TUSBEndpointDescriptor const*, CXHCIDevice*)+0x188>
   84f9c:   12000400    and w0, w0, #0x3
   84fa0:   3900ba60    strb    w0, [x19, #46]
   84fa4:   34000400    cbz w0, 85024 <CXHCIEndpoint::CXHCIEndpoint(CXHCIUSBDevice*, TUSBEndpointDescriptor const*, CXHCIDevice*)+0x194>
   84fa8:   aa1303e0    mov x0, x19
   84fac:   97ffff35    bl  84c80 <CXHCIEndpoint::GetInputContextConfigureEndpoint()>
   84fb0:   aa0003f4    mov x20, x0
   84fb4:   b4000d60    cbz x0, 85160 <CXHCIEndpoint::CXHCIEndpoint(CXHCIUSBDevice*, TUSBEndpointDescriptor const*, CXHCIDevice*)+0x2d0>
   84fb8:   f9400660    ldr x0, [x19, #8]
   84fbc:   b4000de0    cbz x0, 85178 <CXHCIEndpoint::CXHCIEndpoint(CXHCIUSBDevice*, TUSBEndpointDescriptor const*, CXHCIDevice*)+0x2e8>
   84fc0:   97fff930    bl  83480 <CXHCIDevice::GetCommandManager()>
   84fc4:   aa0003f5    mov x21, x0
   84fc8:   f9400260    ldr x0, [x19]
   84fcc:   940009f1    bl  87790 <CXHCIUSBDevice::GetSlotID() const>
   84fd0:   2a0003e1    mov w1, w0
   84fd4:   aa1403e2    mov x2, x20
   84fd8:   aa1503e0    mov x0, x21
   84fdc:   52800003    mov w3, #0x0
   84fe0:   94003864    bl  93170 <CXHCICommandManager::ConfigureEndpoint(unsigned char, TXHCIInputContext*, bool)>
   84fe4:   f9402661    ldr x1, [x19, #72]
   84fe8:   2a0003f4    mov w20, w0
   84fec:   b4000d21    cbz x1, 85190 <CXHCIEndpoint::CXHCIEndpoint(CXHCIUSBDevice*, TUSBEndpointDescriptor const*, CXHCIDevice*)+0x300>
   84ff0:   aa0103e0    mov x0, x1
   84ff4:   94008a0f    bl  a7830 <operator delete[](void*)>
   84ff8:   7100069f    cmp w20, #0x1
   84ffc:   f900267f    str xzr, [x19, #72]
   85000:   54000180    b.eq    85030 <CXHCIEndpoint::CXHCIEndpoint(CXHCIUSBDevice*, TUSBEndpointDescriptor const*, CXHCIDevice*)+0x1a0>
   85004:   a9425bf5    ldp x21, x22, [sp, #32]
   85008:   3900627f    strb    wzr, [x19, #24]
   8500c:   a94153f3    ldp x19, x20, [sp, #16]
   85010:   a8c37bfd    ldp x29, x30, [sp], #48
   85014:   d65f03c0    ret
   85018:   11000421    add w1, w1, #0x1
   8501c:   12000400    and w0, w0, #0x3
   85020:   3900b661    strb    w1, [x19, #45]
   85024:   11001000    add w0, w0, #0x4
   85028:   3900ba60    strb    w0, [x19, #46]
   8502c:   17ffffdf    b   84fa8 <CXHCIEndpoint::CXHCIEndpoint(CXHCIUSBDevice*, TUSBEndpointDescriptor const*, CXHCIDevice*)+0x118>
   85030:   f9400260    ldr x0, [x19]
   85034:   aa1303e2    mov x2, x19
   85038:   a9425bf5    ldp x21, x22, [sp, #32]
   8503c:   3940b661    ldrb    w1, [x19, #45]
   85040:   a94153f3    ldp x19, x20, [sp, #16]
   85044:   a8c37bfd    ldp x29, x30, [sp], #48
   85048:   140009ee    b   87800 <CXHCIUSBDevice::RegisterEndpoint(unsigned char, CXHCIEndpoint*)>
   8504c:   79405660    ldrh    w0, [x19, #42]
   85050:   52800061    mov w1, #0x3
   85054:   3900a661    strb    w1, [x19, #41]
   85058:   7100201f    cmp w0, #0x8
   8505c:   54000069    b.ls    85068 <CXHCIEndpoint::CXHCIEndpoint(CXHCIUSBDevice*, TUSBEndpointDescriptor const*, CXHCIDevice*)+0x1d8>
   85060:   52800100    mov w0, #0x8
   85064:   79005660    strh    w0, [x19, #42]
   85068:   52800060    mov w0, #0x3
   8506c:   3900b260    strb    w0, [x19, #44]
   85070:   17ffffc3    b   84f7c <CXHCIEndpoint::CXHCIEndpoint(CXHCIUSBDevice*, TUSBEndpointDescriptor const*, CXHCIDevice*)+0xec>
   85074:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85078:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8507c:   9120c021    add x1, x1, #0x830
   85080:   912c0000    add x0, x0, #0xb00
   85084:   52800ae2    mov w2, #0x57
   85088:   94005e8e    bl  9cac0 <assertion_failed>
   8508c:   39401a94    ldrb    w20, [x20, #6]
   85090:   94000d0c    bl  884c0 <CUSBDevice::GetSpeed() const>
   85094:   7100041f    cmp w0, #0x1
   85098:   540002cc    b.gt    850f0 <CXHCIEndpoint::CXHCIEndpoint(CXHCIUSBDevice*, TUSBEndpointDescriptor const*, CXHCIDevice*)+0x260>
   8509c:   52807d00    mov w0, #0x3e8
   850a0:   1b007e81    mul w1, w20, w0
   850a4:   6b00003f    cmp w1, w0
   850a8:   5400084d    b.le    851b0 <CXHCIEndpoint::CXHCIEndpoint(CXHCIUSBDevice*, TUSBEndpointDescriptor const*, CXHCIDevice*)+0x320>
   850ac:   52800060    mov w0, #0x3
   850b0:   52800fa3    mov w3, #0x7d
   850b4:   14000004    b   850c4 <CXHCIEndpoint::CXHCIEndpoint(CXHCIUSBDevice*, TUSBEndpointDescriptor const*, CXHCIDevice*)+0x234>
   850b8:   1ac02062    lsl w2, w3, w0
   850bc:   6b02003f    cmp w1, w2
   850c0:   5400074d    b.le    851a8 <CXHCIEndpoint::CXHCIEndpoint(CXHCIUSBDevice*, TUSBEndpointDescriptor const*, CXHCIDevice*)+0x318>
   850c4:   11000400    add w0, w0, #0x1
   850c8:   71002c1f    cmp w0, #0xb
   850cc:   54ffff61    b.ne    850b8 <CXHCIEndpoint::CXHCIEndpoint(CXHCIUSBDevice*, TUSBEndpointDescriptor const*, CXHCIDevice*)+0x228>
   850d0:   2a0003e1    mov w1, w0
   850d4:   1400000e    b   8510c <CXHCIEndpoint::CXHCIEndpoint(CXHCIUSBDevice*, TUSBEndpointDescriptor const*, CXHCIDevice*)+0x27c>
   850d8:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   850dc:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   850e0:   9120c021    add x1, x1, #0x830
   850e4:   912b4000    add x0, x0, #0xad0
   850e8:   52800aa2    mov w2, #0x55
   850ec:   94005e75    bl  9cac0 <assertion_failed>
   850f0:   7100429f    cmp w20, #0x10
   850f4:   52800200    mov w0, #0x10
   850f8:   1a809281    csel    w1, w20, w0, ls
   850fc:   72001c3f    tst w1, #0xff
   85100:   1a961021    csel    w1, w1, w22, ne
   85104:   51000421    sub w1, w1, #0x1
   85108:   12001c21    and w1, w1, #0xff
   8510c:   f9400260    ldr x0, [x19]
   85110:   3900b261    strb    w1, [x19, #44]
   85114:   17ffff94    b   84f64 <CXHCIEndpoint::CXHCIEndpoint(CXHCIUSBDevice*, TUSBEndpointDescriptor const*, CXHCIDevice*)+0xd4>
   85118:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8511c:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85120:   9120c021    add x1, x1, #0x830
   85124:   912b8000    add x0, x0, #0xae0
   85128:   52800ac2    mov w2, #0x56
   8512c:   94005e65    bl  9cac0 <assertion_failed>
   85130:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85134:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85138:   9120c021    add x1, x1, #0x830
   8513c:   9127a000    add x0, x0, #0x9e8
   85140:   52800ba2    mov w2, #0x5d
   85144:   94005e5f    bl  9cac0 <assertion_failed>
   85148:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8514c:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85150:   9120c021    add x1, x1, #0x830
   85154:   912cc000    add x0, x0, #0xb30
   85158:   52800ee2    mov w2, #0x77
   8515c:   94005e59    bl  9cac0 <assertion_failed>
   85160:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85164:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85168:   9120c021    add x1, x1, #0x830
   8516c:   912a0000    add x0, x0, #0xa80
   85170:   52801102    mov w2, #0x88
   85174:   94005e53    bl  9cac0 <assertion_failed>
   85178:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8517c:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85180:   9120c021    add x1, x1, #0x830
   85184:   912a6000    add x0, x0, #0xa98
   85188:   52801142    mov w2, #0x8a
   8518c:   94005e4d    bl  9cac0 <assertion_failed>
   85190:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85194:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85198:   9120c021    add x1, x1, #0x830
   8519c:   912ac000    add x0, x0, #0xab0
   851a0:   52804cc2    mov w2, #0x266
   851a4:   94005e47    bl  9cac0 <assertion_failed>
   851a8:   12001c01    and w1, w0, #0xff
   851ac:   17ffffd8    b   8510c <CXHCIEndpoint::CXHCIEndpoint(CXHCIUSBDevice*, TUSBEndpointDescriptor const*, CXHCIDevice*)+0x27c>
   851b0:   52800061    mov w1, #0x3
   851b4:   17ffffd6    b   8510c <CXHCIEndpoint::CXHCIEndpoint(CXHCIUSBDevice*, TUSBEndpointDescriptor const*, CXHCIDevice*)+0x27c>
   851b8:   d503201f    nop
   851bc:   d503201f    nop

00000000000851c0 <CXHCIEndpoint::FreeInputContext()>:
   851c0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   851c4:   910003fd    mov x29, sp
   851c8:   f9000bf3    str x19, [sp, #16]
   851cc:   aa0003f3    mov x19, x0
   851d0:   f9402400    ldr x0, [x0, #72]
   851d4:   b40000c0    cbz x0, 851ec <CXHCIEndpoint::FreeInputContext()+0x2c>
   851d8:   94008996    bl  a7830 <operator delete[](void*)>
   851dc:   f900267f    str xzr, [x19, #72]
   851e0:   f9400bf3    ldr x19, [sp, #16]
   851e4:   a8c27bfd    ldp x29, x30, [sp], #32
   851e8:   d65f03c0    ret
   851ec:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   851f0:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   851f4:   9120c021    add x1, x1, #0x830
   851f8:   912ac000    add x0, x0, #0xab0
   851fc:   52804cc2    mov w2, #0x266
   85200:   94005e30    bl  9cac0 <assertion_failed>
   85204:   d503201f    nop
   85208:   d503201f    nop
   8520c:   d503201f    nop

0000000000085210 <CXHCIEndpoint::ConvertInterval(unsigned char, TUSBSpeed)>:
   85210:   7100043f    cmp w1, #0x1
   85214:   12001c00    and w0, w0, #0xff
   85218:   540001ec    b.gt    85254 <CXHCIEndpoint::ConvertInterval(unsigned char, TUSBSpeed)+0x44>
   8521c:   52807d01    mov w1, #0x3e8
   85220:   1b017c01    mul w1, w0, w1
   85224:   52800060    mov w0, #0x3
   85228:   710fa03f    cmp w1, #0x3e8
   8522c:   5400012d    b.le    85250 <CXHCIEndpoint::ConvertInterval(unsigned char, TUSBSpeed)+0x40>
   85230:   52800fa3    mov w3, #0x7d
   85234:   14000003    b   85240 <CXHCIEndpoint::ConvertInterval(unsigned char, TUSBSpeed)+0x30>
   85238:   6b01005f    cmp w2, w1
   8523c:   540001ca    b.ge    85274 <CXHCIEndpoint::ConvertInterval(unsigned char, TUSBSpeed)+0x64>
   85240:   11000400    add w0, w0, #0x1
   85244:   71002c1f    cmp w0, #0xb
   85248:   1ac02062    lsl w2, w3, w0
   8524c:   54ffff61    b.ne    85238 <CXHCIEndpoint::ConvertInterval(unsigned char, TUSBSpeed)+0x28>
   85250:   d65f03c0    ret
   85254:   7100401f    cmp w0, #0x10
   85258:   52800201    mov w1, #0x10
   8525c:   1a819000    csel    w0, w0, w1, ls
   85260:   72001c1f    tst w0, #0xff
   85264:   1a9f1400    csinc   w0, w0, wzr, ne
   85268:   51000400    sub w0, w0, #0x1
   8526c:   12001c00    and w0, w0, #0xff
   85270:   d65f03c0    ret
   85274:   12001c00    and w0, w0, #0xff
   85278:   d65f03c0    ret
   8527c:   00000000    udf #0

0000000000085280 <CXHCIEventManager::CXHCIEventManager(CXHCIDevice*)>:
   85280:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   85284:   910003fd    mov x29, sp
   85288:   a90153f3    stp x19, x20, [sp, #16]
   8528c:   aa0003f3    mov x19, x0
   85290:   aa0103e0    mov x0, x1
   85294:   aa0103f4    mov x20, x1
   85298:   a9025bf5    stp x21, x22, [sp, #32]
   8529c:   91004275    add x21, x19, #0x10
   852a0:   f9000261    str x1, [x19]
   852a4:   97fff85f    bl  83420 <CXHCIDevice::GetMMIOSpace()>
   852a8:   aa0003e4    mov x4, x0
   852ac:   aa1403e3    mov x3, x20
   852b0:   aa1503e0    mov x0, x21
   852b4:   52802002    mov w2, #0x100
   852b8:   52800021    mov w1, #0x1
   852bc:   f9000664    str x4, [x19, #8]
   852c0:   9400027c    bl  85cb0 <CXHCIRing::CXHCIRing(TXHCIRingType, unsigned int, CXHCIDevice*)>
   852c4:   aa1503e0    mov x0, x21
   852c8:   f9001e7f    str xzr, [x19, #56]
   852cc:   940002d1    bl  85e10 <CXHCIRing::IsValid() const>
   852d0:   36000b00    tbz w0, #0, 85430 <CXHCIEventManager::CXHCIEventManager(CXHCIDevice*)+0x1b0>
   852d4:   f9400260    ldr x0, [x19]
   852d8:   b4000b40    cbz x0, 85440 <CXHCIEventManager::CXHCIEventManager(CXHCIDevice*)+0x1c0>
   852dc:   d2820003    mov x3, #0x1000
   852e0:   d2800802    mov x2, #0x40
   852e4:   d2800201    mov x1, #0x10
   852e8:   97fff87e    bl  834e0 <CXHCIDevice::AllocateSharedMem(unsigned long, unsigned long, unsigned long)>
   852ec:   f9001e60    str x0, [x19, #56]
   852f0:   b4000a00    cbz x0, 85430 <CXHCIEventManager::CXHCIEventManager(CXHCIDevice*)+0x1b0>
   852f4:   aa1503e0    mov x0, x21
   852f8:   b00001b6    adrp    x22, ba000 <font_data+0x1080>
   852fc:   940002d5    bl  85e50 <CXHCIRing::GetFirstTRB()>
   85300:   f9458ac2    ldr x2, [x22, #2832]
   85304:   aa0003e1    mov x1, x0
   85308:   aa1503e0    mov x0, x21
   8530c:   f9401e74    ldr x20, [x19, #56]
   85310:   aa020021    orr x1, x1, x2
   85314:   53187c25    lsr w5, w1, #24
   85318:   d3609c24    ubfx    x4, x1, #32, #8
   8531c:   d368bc23    ubfx    x3, x1, #40, #8
   85320:   d370dc22    ubfx    x2, x1, #48, #8
   85324:   39000281    strb    w1, [x20]
   85328:   53083c27    ubfx    w7, w1, #8, #8
   8532c:   53105c26    ubfx    w6, w1, #16, #8
   85330:   39000e85    strb    w5, [x20, #3]
   85334:   d378fc21    lsr x1, x1, #56
   85338:   39001284    strb    w4, [x20, #4]
   8533c:   39000687    strb    w7, [x20, #1]
   85340:   39000a86    strb    w6, [x20, #2]
   85344:   39001683    strb    w3, [x20, #5]
   85348:   39001a82    strb    w2, [x20, #6]
   8534c:   39001e81    strb    w1, [x20, #7]
   85350:   940002b4    bl  85e20 <CXHCIRing::GetTRBCount() const>
   85354:   f9401e62    ldr x2, [x19, #56]
   85358:   2a0003e1    mov w1, w0
   8535c:   53187c03    lsr w3, w0, #24
   85360:   d3483c25    ubfx    x5, x1, #8, #8
   85364:   d3505c24    ubfx    x4, x1, #16, #8
   85368:   f9400660    ldr x0, [x19, #8]
   8536c:   39002281    strb    w1, [x20, #8]
   85370:   39002685    strb    w5, [x20, #9]
   85374:   39002a84    strb    w4, [x20, #10]
   85378:   39002e83    strb    w3, [x20, #11]
   8537c:   3900305f    strb    wzr, [x2, #12]
   85380:   3900345f    strb    wzr, [x2, #13]
   85384:   3900385f    strb    wzr, [x2, #14]
   85388:   39003c5f    strb    wzr, [x2, #15]
   8538c:   b4000660    cbz x0, 85458 <CXHCIEventManager::CXHCIEventManager(CXHCIDevice*)+0x1d8>
   85390:   52800023    mov w3, #0x1
   85394:   52800102    mov w2, #0x8
   85398:   52800001    mov w1, #0x0
   8539c:   940001b5    bl  85a70 <CXHCIMMIOSpace::rt_write32(unsigned int, unsigned int, unsigned int)>
   853a0:   f9401e64    ldr x4, [x19, #56]
   853a4:   52800202    mov w2, #0x10
   853a8:   52800001    mov w1, #0x0
   853ac:   f9458ac3    ldr x3, [x22, #2832]
   853b0:   f9400660    ldr x0, [x19, #8]
   853b4:   aa030083    orr x3, x4, x3
   853b8:   940001d2    bl  85b00 <CXHCIMMIOSpace::rt_write64(unsigned int, unsigned int, unsigned long)>
   853bc:   aa1503e0    mov x0, x21
   853c0:   f9400674    ldr x20, [x19, #8]
   853c4:   940002a3    bl  85e50 <CXHCIRing::GetFirstTRB()>
   853c8:   f9458ac3    ldr x3, [x22, #2832]
   853cc:   aa0003e4    mov x4, x0
   853d0:   52800302    mov w2, #0x18
   853d4:   52800001    mov w1, #0x0
   853d8:   aa1403e0    mov x0, x20
   853dc:   aa030083    orr x3, x4, x3
   853e0:   940001c8    bl  85b00 <CXHCIMMIOSpace::rt_write64(unsigned int, unsigned int, unsigned long)>
   853e4:   f9400660    ldr x0, [x19, #8]
   853e8:   52803e83    mov w3, #0x1f4
   853ec:   52800082    mov w2, #0x4
   853f0:   52800001    mov w1, #0x0
   853f4:   9400019f    bl  85a70 <CXHCIMMIOSpace::rt_write32(unsigned int, unsigned int, unsigned int)>
   853f8:   f9400673    ldr x19, [x19, #8]
   853fc:   52800002    mov w2, #0x0
   85400:   52800001    mov w1, #0x0
   85404:   aa1303e0    mov x0, x19
   85408:   94000142    bl  85910 <CXHCIMMIOSpace::rt_read32(unsigned int, unsigned int)>
   8540c:   2a0003e3    mov w3, w0
   85410:   a9425bf5    ldp x21, x22, [sp, #32]
   85414:   aa1303e0    mov x0, x19
   85418:   52800002    mov w2, #0x0
   8541c:   321f0063    orr w3, w3, #0x2
   85420:   52800001    mov w1, #0x0
   85424:   a94153f3    ldp x19, x20, [sp, #16]
   85428:   a8c37bfd    ldp x29, x30, [sp], #48
   8542c:   14000191    b   85a70 <CXHCIMMIOSpace::rt_write32(unsigned int, unsigned int, unsigned int)>
   85430:   a94153f3    ldp x19, x20, [sp, #16]
   85434:   a9425bf5    ldp x21, x22, [sp, #32]
   85438:   a8c37bfd    ldp x29, x30, [sp], #48
   8543c:   d65f03c0    ret
   85440:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85444:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85448:   912d6021    add x1, x1, #0xb58
   8544c:   912a6000    add x0, x0, #0xa98
   85450:   528004c2    mov w2, #0x26
   85454:   94005d9b    bl  9cac0 <assertion_failed>
   85458:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8545c:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85460:   912d6021    add x1, x1, #0xb58
   85464:   912dc000    add x0, x0, #0xb70
   85468:   52800622    mov w2, #0x31
   8546c:   94005d95    bl  9cac0 <assertion_failed>

0000000000085470 <CXHCIEventManager::~CXHCIEventManager()>:
   85470:   a9be7bfd    stp x29, x30, [sp, #-32]!
   85474:   910003fd    mov x29, sp
   85478:   a90153f3    stp x19, x20, [sp, #16]
   8547c:   aa0003f3    mov x19, x0
   85480:   f9401c00    ldr x0, [x0, #56]
   85484:   b4000240    cbz x0, 854cc <CXHCIEventManager::~CXHCIEventManager()+0x5c>
   85488:   f9400674    ldr x20, [x19, #8]
   8548c:   b40002d4    cbz x20, 854e4 <CXHCIEventManager::~CXHCIEventManager()+0x74>
   85490:   52800002    mov w2, #0x0
   85494:   52800001    mov w1, #0x0
   85498:   aa1403e0    mov x0, x20
   8549c:   9400011d    bl  85910 <CXHCIMMIOSpace::rt_read32(unsigned int, unsigned int)>
   854a0:   2a0003e3    mov w3, w0
   854a4:   52800002    mov w2, #0x0
   854a8:   aa1403e0    mov x0, x20
   854ac:   121e7863    and w3, w3, #0xfffffffd
   854b0:   52800001    mov w1, #0x0
   854b4:   9400016f    bl  85a70 <CXHCIMMIOSpace::rt_write32(unsigned int, unsigned int, unsigned int)>
   854b8:   f9400260    ldr x0, [x19]
   854bc:   b4000200    cbz x0, 854fc <CXHCIEventManager::~CXHCIEventManager()+0x8c>
   854c0:   f9401e61    ldr x1, [x19, #56]
   854c4:   97fff823    bl  83550 <CXHCIDevice::FreeSharedMem(void*)>
   854c8:   f9001e7f    str xzr, [x19, #56]
   854cc:   aa1303e0    mov x0, x19
   854d0:   f900067f    str xzr, [x19, #8]
   854d4:   a94153f3    ldp x19, x20, [sp, #16]
   854d8:   f801041f    str xzr, [x0], #16
   854dc:   a8c27bfd    ldp x29, x30, [sp], #32
   854e0:   14000244    b   85df0 <CXHCIRing::~CXHCIRing()>
   854e4:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   854e8:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   854ec:   912d6021    add x1, x1, #0xb58
   854f0:   912dc000    add x0, x0, #0xb70
   854f4:   528007c2    mov w2, #0x3e
   854f8:   94005d72    bl  9cac0 <assertion_failed>
   854fc:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85500:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85504:   912d6021    add x1, x1, #0xb58
   85508:   912a6000    add x0, x0, #0xa98
   8550c:   52800862    mov w2, #0x43
   85510:   94005d6c    bl  9cac0 <assertion_failed>
   85514:   d503201f    nop
   85518:   d503201f    nop
   8551c:   d503201f    nop

0000000000085520 <CXHCIEventManager::IsValid()>:
   85520:   a9be7bfd    stp x29, x30, [sp, #-32]!
   85524:   910003fd    mov x29, sp
   85528:   f9000bf3    str x19, [sp, #16]
   8552c:   aa0003f3    mov x19, x0
   85530:   91004000    add x0, x0, #0x10
   85534:   94000237    bl  85e10 <CXHCIRing::IsValid() const>
   85538:   12001c01    and w1, w0, #0xff
   8553c:   36000080    tbz w0, #0, 8554c <CXHCIEventManager::IsValid()+0x2c>
   85540:   f9401e60    ldr x0, [x19, #56]
   85544:   f100001f    cmp x0, #0x0
   85548:   1a9f07e1    cset    w1, ne
   8554c:   f9400bf3    ldr x19, [sp, #16]
   85550:   2a0103e0    mov w0, w1
   85554:   a8c27bfd    ldp x29, x30, [sp], #32
   85558:   d65f03c0    ret
   8555c:   d503201f    nop

0000000000085560 <CXHCIEventManager::HandleEvents()>:
   85560:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   85564:   910003fd    mov x29, sp
   85568:   a90153f3    stp x19, x20, [sp, #16]
   8556c:   aa0003f4    mov x20, x0
   85570:   f9400000    ldr x0, [x0]
   85574:   a9025bf5    stp x21, x22, [sp, #32]
   85578:   b4000b80    cbz x0, 856e8 <CXHCIEventManager::HandleEvents()+0x188>
   8557c:   91004296    add x22, x20, #0x10
   85580:   aa1603e0    mov x0, x22
   85584:   9400023f    bl  85e80 <CXHCIRing::GetDequeueTRB()>
   85588:   aa0003f3    mov x19, x0
   8558c:   b4000340    cbz x0, 855f4 <CXHCIEventManager::HandleEvents()+0x94>
   85590:   39403415    ldrb    w21, [x0, #13]
   85594:   d342feb5    lsr x21, x21, #2
   85598:   71008abf    cmp w21, #0x22
   8559c:   54000960    b.eq    856c8 <CXHCIEventManager::HandleEvents()+0x168>
   855a0:   54000348    b.hi    85608 <CXHCIEventManager::HandleEvents()+0xa8>
   855a4:   710082bf    cmp w21, #0x20
   855a8:   54000760    b.eq    85694 <CXHCIEventManager::HandleEvents()+0x134>
   855ac:   710086bf    cmp w21, #0x21
   855b0:   54000601    b.ne    85670 <CXHCIEventManager::HandleEvents()+0x110>
   855b4:   f9400280    ldr x0, [x20]
   855b8:   97fff7b2    bl  83480 <CXHCIDevice::GetCommandManager()>
   855bc:   39400262    ldrb    w2, [x19]
   855c0:   39400663    ldrb    w3, [x19, #1]
   855c4:   39400a61    ldrb    w1, [x19, #2]
   855c8:   39400e64    ldrb    w4, [x19, #3]
   855cc:   aa032043    orr x3, x2, x3, lsl #8
   855d0:   39402e62    ldrb    w2, [x19, #11]
   855d4:   aa014061    orr x1, x3, x1, lsl #16
   855d8:   39403e63    ldrb    w3, [x19, #15]
   855dc:   aa046021    orr x1, x1, x4, lsl #24
   855e0:   94003730    bl  932a0 <CXHCICommandManager::CommandCompleted(TXHCITRB*, unsigned char, unsigned char)>
   855e4:   aa1603e0    mov x0, x22
   855e8:   9400025e    bl  85f60 <CXHCIRing::IncrementDequeue()>
   855ec:   aa0003f3    mov x19, x0
   855f0:   b4000340    cbz x0, 85658 <CXHCIEventManager::HandleEvents()+0xf8>
   855f4:   a9425bf5    ldp x21, x22, [sp, #32]
   855f8:   aa1303e0    mov x0, x19
   855fc:   a94153f3    ldp x19, x20, [sp, #16]
   85600:   a8c37bfd    ldp x29, x30, [sp], #48
   85604:   d65f03c0    ret
   85608:   710096bf    cmp w21, #0x25
   8560c:   54000321    b.ne    85670 <CXHCIEventManager::HandleEvents()+0x110>
   85610:   39402c15    ldrb    w21, [x0, #11]
   85614:   f0000173    adrp    x19, b4000 <From+0x140>
   85618:   91052273    add x19, x19, #0x148
   8561c:   710056bf    cmp w21, #0x15
   85620:   54000700    b.eq    85700 <CXHCIEventManager::HandleEvents()+0x1a0>
   85624:   f9400280    ldr x0, [x20]
   85628:   97fff9ee    bl  83de0 <CXHCIDevice::DumpStatus()>
   8562c:   940067f5    bl  9f600 <CLogger::Get()>
   85630:   d0000143    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85634:   2a1503e4    mov w4, w21
   85638:   aa1303e1    mov x1, x19
   8563c:   912fe063    add x3, x3, #0xbf8
   85640:   52800002    mov w2, #0x0
   85644:   940069d7    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   85648:   aa1603e0    mov x0, x22
   8564c:   94000245    bl  85f60 <CXHCIRing::IncrementDequeue()>
   85650:   aa0003f3    mov x19, x0
   85654:   b5fffd00    cbnz    x0, 855f4 <CXHCIEventManager::HandleEvents()+0x94>
   85658:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8565c:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85660:   912d6021    add x1, x1, #0xb58
   85664:   9130c000    add x0, x0, #0xc30
   85668:   52801162    mov w2, #0x8b
   8566c:   94005d15    bl  9cac0 <assertion_failed>
   85670:   940067e4    bl  9f600 <CLogger::Get()>
   85674:   d0000143    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85678:   f0000161    adrp    x1, b4000 <From+0x140>
   8567c:   2a1503e4    mov w4, w21
   85680:   91306063    add x3, x3, #0xc18
   85684:   91052021    add x1, x1, #0x148
   85688:   52800002    mov w2, #0x0
   8568c:   940069c5    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   85690:   17ffffee    b   85648 <CXHCIEventManager::HandleEvents()+0xe8>
   85694:   f9400280    ldr x0, [x20]
   85698:   97fff76e    bl  83450 <CXHCIDevice::GetSlotManager()>
   8569c:   39402261    ldrb    w1, [x19, #8]
   856a0:   39402662    ldrb    w2, [x19, #9]
   856a4:   39402a63    ldrb    w3, [x19, #10]
   856a8:   39403a64    ldrb    w4, [x19, #14]
   856ac:   aa022022    orr x2, x1, x2, lsl #8
   856b0:   39402e61    ldrb    w1, [x19, #11]
   856b4:   2a034042    orr w2, w2, w3, lsl #16
   856b8:   39403e63    ldrb    w3, [x19, #15]
   856bc:   12001084    and w4, w4, #0x1f
   856c0:   94000794    bl  87510 <CXHCISlotManager::TransferEvent(unsigned char, unsigned int, unsigned char, unsigned char)>
   856c4:   17ffffe1    b   85648 <CXHCIEventManager::HandleEvents()+0xe8>
   856c8:   39402c00    ldrb    w0, [x0, #11]
   856cc:   7100041f    cmp w0, #0x1
   856d0:   54000261    b.ne    8571c <CXHCIEventManager::HandleEvents()+0x1bc>
   856d4:   f9400280    ldr x0, [x20]
   856d8:   97fff776    bl  834b0 <CXHCIDevice::GetRootHub()>
   856dc:   39400e61    ldrb    w1, [x19, #3]
   856e0:   94000364    bl  86470 <CXHCIRootHub::StatusChanged(unsigned char)>
   856e4:   17ffffd9    b   85648 <CXHCIEventManager::HandleEvents()+0xe8>
   856e8:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   856ec:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   856f0:   912d6021    add x1, x1, #0xb58
   856f4:   912a6000    add x0, x0, #0xa98
   856f8:   52800a82    mov w2, #0x54
   856fc:   94005cf1    bl  9cac0 <assertion_failed>
   85700:   940067c0    bl  9f600 <CLogger::Get()>
   85704:   aa1303e1    mov x1, x19
   85708:   d0000143    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8570c:   912fa063    add x3, x3, #0xbe8
   85710:   52800002    mov w2, #0x0
   85714:   940069a3    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   85718:   17ffffc3    b   85624 <CXHCIEventManager::HandleEvents()+0xc4>
   8571c:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85720:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85724:   912d6021    add x1, x1, #0xb58
   85728:   912e0000    add x0, x0, #0xb80
   8572c:   52800e22    mov w2, #0x71
   85730:   94005ce4    bl  9cac0 <assertion_failed>
   85734:   d503201f    nop
   85738:   d503201f    nop
   8573c:   d503201f    nop

0000000000085740 <CXHCIEventManager::DumpStatus()>:
   85740:   f0000161    adrp    x1, b4000 <From+0x140>
   85744:   91052021    add x1, x1, #0x148
   85748:   91004000    add x0, x0, #0x10
   8574c:   14000291    b   86190 <CXHCIRing::DumpStatus(char const*)>

0000000000085750 <CXHCIMMIOSpace::CXHCIMMIOSpace(unsigned long)>:
   85750:   39400022    ldrb    w2, [x1]
   85754:   8b220022    add x2, x1, w2, uxtb
   85758:   a9000801    stp x1, x2, [x0]
   8575c:   b40002c1    cbz x1, 857b4 <CXHCIMMIOSpace::CXHCIMMIOSpace(unsigned long)+0x64>
   85760:   b9401424    ldr w4, [x1, #20]
   85764:   91100042    add x2, x2, #0x400
   85768:   b9401823    ldr w3, [x1, #24]
   8576c:   f9001002    str x2, [x0, #32]
   85770:   b9400427    ldr w7, [x1, #4]
   85774:   927e7484    and x4, x4, #0xfffffffc
   85778:   b9400826    ldr w6, [x1, #8]
   8577c:   8b010084    add x4, x4, x1
   85780:   927b6862    and x2, x3, #0xffffffe0
   85784:   b9400c25    ldr w5, [x1, #12]
   85788:   8b010042    add x2, x2, x1
   8578c:   f9000804    str x4, [x0, #16]
   85790:   b9401023    ldr w3, [x1, #16]
   85794:   f9000c02    str x2, [x0, #24]
   85798:   29061807    stp w7, w6, [x0, #48]
   8579c:   b9003805    str w5, [x0, #56]
   857a0:   53107c62    lsr w2, w3, #16
   857a4:   8b222821    add x1, x1, w2, uxth #2
   857a8:   f9001401    str x1, [x0, #40]
   857ac:   b9003c03    str w3, [x0, #60]
   857b0:   d65f03c0    ret
   857b4:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   857b8:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   857bc:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   857c0:   91310021    add x1, x1, #0xc40
   857c4:   910003fd    mov x29, sp
   857c8:   91316000    add x0, x0, #0xc58
   857cc:   528016a2    mov w2, #0xb5
   857d0:   94005cbc    bl  9cac0 <assertion_failed>
   857d4:   d503201f    nop
   857d8:   d503201f    nop
   857dc:   d503201f    nop

00000000000857e0 <CXHCIMMIOSpace::~CXHCIMMIOSpace()>:
   857e0:   d65f03c0    ret
   857e4:   d503201f    nop
   857e8:   d503201f    nop
   857ec:   d503201f    nop

00000000000857f0 <CXHCIMMIOSpace::cap_read32(unsigned int)>:
   857f0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   857f4:   910003fd    mov x29, sp
   857f8:   f9400002    ldr x2, [x0]
   857fc:   b4000122    cbz x2, 85820 <CXHCIMMIOSpace::cap_read32(unsigned int)+0x30>
   85800:   51001021    sub w1, w1, #0x4
   85804:   71003c3f    cmp w1, #0xf
   85808:   53027c21    lsr w1, w1, #2
   8580c:   54000168    b.hi    85838 <CXHCIMMIOSpace::cap_read32(unsigned int)+0x48>
   85810:   91003021    add x1, x1, #0xc
   85814:   a8c17bfd    ldp x29, x30, [sp], #16
   85818:   b8617800    ldr w0, [x0, x1, lsl #2]
   8581c:   d65f03c0    ret
   85820:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85824:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85828:   91310021    add x1, x1, #0xc40
   8582c:   91316000    add x0, x0, #0xc58
   85830:   528006a2    mov w2, #0x35
   85834:   94005ca3    bl  9cac0 <assertion_failed>
   85838:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8583c:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85840:   91310021    add x1, x1, #0xc40
   85844:   9131a000    add x0, x0, #0xc68
   85848:   52800742    mov w2, #0x3a
   8584c:   94005c9d    bl  9cac0 <assertion_failed>

0000000000085850 <CXHCIMMIOSpace::op_read32(unsigned int)>:
   85850:   f9400002    ldr x2, [x0]
   85854:   b4000082    cbz x2, 85864 <CXHCIMMIOSpace::op_read32(unsigned int)+0x14>
   85858:   f9400400    ldr x0, [x0, #8]
   8585c:   b8614800    ldr w0, [x0, w1, uxtw]
   85860:   d65f03c0    ret
   85864:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85868:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8586c:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   85870:   91310021    add x1, x1, #0xc40
   85874:   910003fd    mov x29, sp
   85878:   91316000    add x0, x0, #0xc58
   8587c:   52800802    mov w2, #0x40
   85880:   94005c90    bl  9cac0 <assertion_failed>
   85884:   d503201f    nop
   85888:   d503201f    nop
   8588c:   d503201f    nop

0000000000085890 <CXHCIMMIOSpace::pt_read32(unsigned int, unsigned int)>:
   85890:   f9400003    ldr x3, [x0]
   85894:   b40000c3    cbz x3, 858ac <CXHCIMMIOSpace::pt_read32(unsigned int, unsigned int)+0x1c>
   85898:   f9401000    ldr x0, [x0, #32]
   8589c:   531c6c21    lsl w1, w1, #4
   858a0:   8b000021    add x1, x1, x0
   858a4:   b8624820    ldr w0, [x1, w2, uxtw]
   858a8:   d65f03c0    ret
   858ac:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   858b0:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   858b4:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   858b8:   91310021    add x1, x1, #0xc40
   858bc:   910003fd    mov x29, sp
   858c0:   91316000    add x0, x0, #0xc58
   858c4:   528008e2    mov w2, #0x47
   858c8:   94005c7e    bl  9cac0 <assertion_failed>
   858cc:   d503201f    nop

00000000000858d0 <CXHCIMMIOSpace::rt_read32(unsigned int)>:
   858d0:   f9400002    ldr x2, [x0]
   858d4:   b4000082    cbz x2, 858e4 <CXHCIMMIOSpace::rt_read32(unsigned int)+0x14>
   858d8:   f9400c00    ldr x0, [x0, #24]
   858dc:   b8614800    ldr w0, [x0, w1, uxtw]
   858e0:   d65f03c0    ret
   858e4:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   858e8:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   858ec:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   858f0:   91310021    add x1, x1, #0xc40
   858f4:   910003fd    mov x29, sp
   858f8:   91316000    add x0, x0, #0xc58
   858fc:   528009c2    mov w2, #0x4e
   85900:   94005c70    bl  9cac0 <assertion_failed>
   85904:   d503201f    nop
   85908:   d503201f    nop
   8590c:   d503201f    nop

0000000000085910 <CXHCIMMIOSpace::rt_read32(unsigned int, unsigned int)>:
   85910:   f9400003    ldr x3, [x0]
   85914:   b4000103    cbz x3, 85934 <CXHCIMMIOSpace::rt_read32(unsigned int, unsigned int)+0x24>
   85918:   f9400c00    ldr x0, [x0, #24]
   8591c:   531b6821    lsl w1, w1, #5
   85920:   2a0203e2    mov w2, w2
   85924:   91008042    add x2, x2, #0x20
   85928:   8b000021    add x1, x1, x0
   8592c:   b8626820    ldr w0, [x1, x2]
   85930:   d65f03c0    ret
   85934:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85938:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8593c:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   85940:   91310021    add x1, x1, #0xc40
   85944:   910003fd    mov x29, sp
   85948:   91316000    add x0, x0, #0xc58
   8594c:   52800aa2    mov w2, #0x55
   85950:   94005c5c    bl  9cac0 <assertion_failed>
   85954:   d503201f    nop
   85958:   d503201f    nop
   8595c:   d503201f    nop

0000000000085960 <CXHCIMMIOSpace::rt_read64(unsigned int, unsigned int)>:
   85960:   f9400003    ldr x3, [x0]
   85964:   b4000143    cbz x3, 8598c <CXHCIMMIOSpace::rt_read64(unsigned int, unsigned int)+0x2c>
   85968:   f9400c00    ldr x0, [x0, #24]
   8596c:   531b6821    lsl w1, w1, #5
   85970:   8b000021    add x1, x1, x0
   85974:   8b224022    add x2, x1, w2, uxtw
   85978:   b9402040    ldr w0, [x2, #32]
   8597c:   b9402441    ldr w1, [x2, #36]
   85980:   2a0003e0    mov w0, w0
   85984:   aa018000    orr x0, x0, x1, lsl #32
   85988:   d65f03c0    ret
   8598c:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85990:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85994:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   85998:   91310021    add x1, x1, #0xc40
   8599c:   910003fd    mov x29, sp
   859a0:   91316000    add x0, x0, #0xc58
   859a4:   52800b82    mov w2, #0x5c
   859a8:   94005c46    bl  9cac0 <assertion_failed>
   859ac:   d503201f    nop

00000000000859b0 <CXHCIMMIOSpace::op_write32(unsigned int, unsigned int)>:
   859b0:   f9400003    ldr x3, [x0]
   859b4:   b4000083    cbz x3, 859c4 <CXHCIMMIOSpace::op_write32(unsigned int, unsigned int)+0x14>
   859b8:   f9400400    ldr x0, [x0, #8]
   859bc:   b8214802    str w2, [x0, w1, uxtw]
   859c0:   d65f03c0    ret
   859c4:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   859c8:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   859cc:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   859d0:   91310021    add x1, x1, #0xc40
   859d4:   910003fd    mov x29, sp
   859d8:   91316000    add x0, x0, #0xc58
   859dc:   52800d22    mov w2, #0x69
   859e0:   94005c38    bl  9cac0 <assertion_failed>
   859e4:   d503201f    nop
   859e8:   d503201f    nop
   859ec:   d503201f    nop

00000000000859f0 <CXHCIMMIOSpace::db_write32(unsigned int, unsigned int)>:
   859f0:   f9400003    ldr x3, [x0]
   859f4:   b40000a3    cbz x3, 85a08 <CXHCIMMIOSpace::db_write32(unsigned int, unsigned int)+0x18>
   859f8:   f9400800    ldr x0, [x0, #16]
   859fc:   531e7421    lsl w1, w1, #2
   85a00:   b8214802    str w2, [x0, w1, uxtw]
   85a04:   d65f03c0    ret
   85a08:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85a0c:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85a10:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   85a14:   91310021    add x1, x1, #0xc40
   85a18:   910003fd    mov x29, sp
   85a1c:   91316000    add x0, x0, #0xc58
   85a20:   52800e02    mov w2, #0x70
   85a24:   94005c27    bl  9cac0 <assertion_failed>
   85a28:   d503201f    nop
   85a2c:   d503201f    nop

0000000000085a30 <CXHCIMMIOSpace::pt_write32(unsigned int, unsigned int, unsigned int)>:
   85a30:   f9400004    ldr x4, [x0]
   85a34:   b40000c4    cbz x4, 85a4c <CXHCIMMIOSpace::pt_write32(unsigned int, unsigned int, unsigned int)+0x1c>
   85a38:   f9401000    ldr x0, [x0, #32]
   85a3c:   531c6c21    lsl w1, w1, #4
   85a40:   8b000021    add x1, x1, x0
   85a44:   b8224823    str w3, [x1, w2, uxtw]
   85a48:   d65f03c0    ret
   85a4c:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85a50:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85a54:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   85a58:   91310021    add x1, x1, #0xc40
   85a5c:   910003fd    mov x29, sp
   85a60:   91316000    add x0, x0, #0xc58
   85a64:   52800ee2    mov w2, #0x77
   85a68:   94005c16    bl  9cac0 <assertion_failed>
   85a6c:   d503201f    nop

0000000000085a70 <CXHCIMMIOSpace::rt_write32(unsigned int, unsigned int, unsigned int)>:
   85a70:   f9400004    ldr x4, [x0]
   85a74:   b4000104    cbz x4, 85a94 <CXHCIMMIOSpace::rt_write32(unsigned int, unsigned int, unsigned int)+0x24>
   85a78:   f9400c00    ldr x0, [x0, #24]
   85a7c:   531b6821    lsl w1, w1, #5
   85a80:   2a0203e2    mov w2, w2
   85a84:   91008042    add x2, x2, #0x20
   85a88:   8b000021    add x1, x1, x0
   85a8c:   b8226823    str w3, [x1, x2]
   85a90:   d65f03c0    ret
   85a94:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85a98:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85a9c:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   85aa0:   91310021    add x1, x1, #0xc40
   85aa4:   910003fd    mov x29, sp
   85aa8:   91316000    add x0, x0, #0xc58
   85aac:   52800fc2    mov w2, #0x7e
   85ab0:   94005c04    bl  9cac0 <assertion_failed>
   85ab4:   d503201f    nop
   85ab8:   d503201f    nop
   85abc:   d503201f    nop

0000000000085ac0 <CXHCIMMIOSpace::op_write64(unsigned int, unsigned long)>:
   85ac0:   f9400003    ldr x3, [x0]
   85ac4:   b40000e3    cbz x3, 85ae0 <CXHCIMMIOSpace::op_write64(unsigned int, unsigned long)+0x20>
   85ac8:   f9400400    ldr x0, [x0, #8]
   85acc:   d360fc44    lsr x4, x2, #32
   85ad0:   11001023    add w3, w1, #0x4
   85ad4:   b8214802    str w2, [x0, w1, uxtw]
   85ad8:   b8234804    str w4, [x0, w3, uxtw]
   85adc:   d65f03c0    ret
   85ae0:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85ae4:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85ae8:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   85aec:   91310021    add x1, x1, #0xc40
   85af0:   910003fd    mov x29, sp
   85af4:   91316000    add x0, x0, #0xc58
   85af8:   52800d22    mov w2, #0x69
   85afc:   94005bf1    bl  9cac0 <assertion_failed>

0000000000085b00 <CXHCIMMIOSpace::rt_write64(unsigned int, unsigned int, unsigned long)>:
   85b00:   f9400004    ldr x4, [x0]
   85b04:   b4000124    cbz x4, 85b28 <CXHCIMMIOSpace::rt_write64(unsigned int, unsigned int, unsigned long)+0x28>
   85b08:   f9400c04    ldr x4, [x0, #24]
   85b0c:   531b6821    lsl w1, w1, #5
   85b10:   d360fc60    lsr x0, x3, #32
   85b14:   8b040021    add x1, x1, x4
   85b18:   8b224022    add x2, x1, w2, uxtw
   85b1c:   b9002043    str w3, [x2, #32]
   85b20:   b9002440    str w0, [x2, #36]
   85b24:   d65f03c0    ret
   85b28:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85b2c:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85b30:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   85b34:   91310021    add x1, x1, #0xc40
   85b38:   910003fd    mov x29, sp
   85b3c:   91316000    add x0, x0, #0xc58
   85b40:   52801162    mov w2, #0x8b
   85b44:   94005bdf    bl  9cac0 <assertion_failed>
   85b48:   d503201f    nop
   85b4c:   d503201f    nop

0000000000085b50 <CXHCIMMIOSpace::op_wait32(unsigned int, unsigned int, unsigned int, unsigned int)>:
   85b50:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   85b54:   910003fd    mov x29, sp
   85b58:   a90153f3    stp x19, x20, [sp, #16]
   85b5c:   2a0103f4    mov w20, w1
   85b60:   aa0003f3    mov x19, x0
   85b64:   a9025bf5    stp x21, x22, [sp, #32]
   85b68:   2a0203f6    mov w22, w2
   85b6c:   2a0303f5    mov w21, w3
   85b70:   a90363f7    stp x23, x24, [sp, #48]
   85b74:   2a0403f8    mov w24, w4
   85b78:   940082c2    bl  a6680 <CTimer::Get()>
   85b7c:   94007f81    bl  a5980 <CTimer::GetClockTicks()>
   85b80:   2a0003f7    mov w23, w0
   85b84:   1400000b    b   85bb0 <CXHCIMMIOSpace::op_wait32(unsigned int, unsigned int, unsigned int, unsigned int)+0x60>
   85b88:   f9400660    ldr x0, [x19, #8]
   85b8c:   b8606a81    ldr w1, [x20, x0]
   85b90:   0a0102c1    and w1, w22, w1
   85b94:   6b15003f    cmp w1, w21
   85b98:   540001c0    b.eq    85bd0 <CXHCIMMIOSpace::op_wait32(unsigned int, unsigned int, unsigned int, unsigned int)+0x80>
   85b9c:   940082b9    bl  a6680 <CTimer::Get()>
   85ba0:   94007f78    bl  a5980 <CTimer::GetClockTicks()>
   85ba4:   4b170001    sub w1, w0, w23
   85ba8:   6b18003f    cmp w1, w24
   85bac:   540001e2    b.cs    85be8 <CXHCIMMIOSpace::op_wait32(unsigned int, unsigned int, unsigned int, unsigned int)+0x98>
   85bb0:   f9400260    ldr x0, [x19]
   85bb4:   b5fffea0    cbnz    x0, 85b88 <CXHCIMMIOSpace::op_wait32(unsigned int, unsigned int, unsigned int, unsigned int)+0x38>
   85bb8:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85bbc:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85bc0:   91310021    add x1, x1, #0xc40
   85bc4:   91316000    add x0, x0, #0xc58
   85bc8:   52800802    mov w2, #0x40
   85bcc:   94005bbd    bl  9cac0 <assertion_failed>
   85bd0:   a94153f3    ldp x19, x20, [sp, #16]
   85bd4:   52800020    mov w0, #0x1
   85bd8:   a9425bf5    ldp x21, x22, [sp, #32]
   85bdc:   a94363f7    ldp x23, x24, [sp, #48]
   85be0:   a8c47bfd    ldp x29, x30, [sp], #64
   85be4:   d65f03c0    ret
   85be8:   a94153f3    ldp x19, x20, [sp, #16]
   85bec:   52800000    mov w0, #0x0
   85bf0:   a9425bf5    ldp x21, x22, [sp, #32]
   85bf4:   a94363f7    ldp x23, x24, [sp, #48]
   85bf8:   a8c47bfd    ldp x29, x30, [sp], #64
   85bfc:   d65f03c0    ret

0000000000085c00 <CXHCIMMIOSpace::DumpStatus()>:
   85c00:   a9be7bfd    stp x29, x30, [sp, #-32]!
   85c04:   910003fd    mov x29, sp
   85c08:   f9000bf3    str x19, [sp, #16]
   85c0c:   aa0003f3    mov x19, x0
   85c10:   f9400000    ldr x0, [x0]
   85c14:   b4000240    cbz x0, 85c5c <CXHCIMMIOSpace::DumpStatus()+0x5c>
   85c18:   52800381    mov w1, #0x1c
   85c1c:   d0000142    adrp    x2, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85c20:   9131e042    add x2, x2, #0xc78
   85c24:   94005d73    bl  9d1f0 <debug_hexdump(void const*, unsigned int, char const*)>
   85c28:   f9400660    ldr x0, [x19, #8]
   85c2c:   52800781    mov w1, #0x3c
   85c30:   d0000142    adrp    x2, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85c34:   91320042    add x2, x2, #0xc80
   85c38:   94005d6e    bl  9d1f0 <debug_hexdump(void const*, unsigned int, char const*)>
   85c3c:   f9400e60    ldr x0, [x19, #24]
   85c40:   d0000142    adrp    x2, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85c44:   52800401    mov w1, #0x20
   85c48:   91322042    add x2, x2, #0xc88
   85c4c:   f9400bf3    ldr x19, [sp, #16]
   85c50:   a8c27bfd    ldp x29, x30, [sp], #32
   85c54:   91008000    add x0, x0, #0x20
   85c58:   14005d66    b   9d1f0 <debug_hexdump(void const*, unsigned int, char const*)>
   85c5c:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85c60:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85c64:   91310021    add x1, x1, #0xc40
   85c68:   91316000    add x0, x0, #0xc58
   85c6c:   52801542    mov w2, #0xaa
   85c70:   94005b94    bl  9cac0 <assertion_failed>
   85c74:   d503201f    nop
   85c78:   d503201f    nop
   85c7c:   d503201f    nop

0000000000085c80 <CXHCIMMIOSpace::cap_read32_raw(unsigned int)>:
   85c80:   f9400000    ldr x0, [x0]
   85c84:   b4000060    cbz x0, 85c90 <CXHCIMMIOSpace::cap_read32_raw(unsigned int)+0x10>
   85c88:   b8614800    ldr w0, [x0, w1, uxtw]
   85c8c:   d65f03c0    ret
   85c90:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85c94:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85c98:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   85c9c:   91310021    add x1, x1, #0xc40
   85ca0:   910003fd    mov x29, sp
   85ca4:   91316000    add x0, x0, #0xc58
   85ca8:   528016a2    mov w2, #0xb5
   85cac:   94005b85    bl  9cac0 <assertion_failed>

0000000000085cb0 <CXHCIRing::CXHCIRing(TXHCIRingType, unsigned int, CXHCIDevice*)>:
   85cb0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   85cb4:   910003fd    mov x29, sp
   85cb8:   71003c5f    cmp w2, #0xf
   85cbc:   f9000bf3    str x19, [sp, #16]
   85cc0:   aa0003f3    mov x19, x0
   85cc4:   aa0303e0    mov x0, x3
   85cc8:   52800023    mov w3, #0x1
   85ccc:   29000a61    stp w1, w2, [x19]
   85cd0:   a900fe60    stp x0, xzr, [x19, #8]
   85cd4:   f9000e7f    str xzr, [x19, #24]
   85cd8:   b9002263    str w3, [x19, #32]
   85cdc:   54000609    b.ls    85d9c <CXHCIRing::CXHCIRing(TXHCIRingType, unsigned int, CXHCIDevice*)+0xec>
   85ce0:   f240045f    tst x2, #0x3
   85ce4:   54000681    b.ne    85db4 <CXHCIRing::CXHCIRing(TXHCIRingType, unsigned int, CXHCIDevice*)+0x104>
   85ce8:   b4000720    cbz x0, 85dcc <CXHCIRing::CXHCIRing(TXHCIRingType, unsigned int, CXHCIDevice*)+0x11c>
   85cec:   d37c7c41    ubfiz   x1, x2, #4, #32
   85cf0:   d2a00023    mov x3, #0x10000
   85cf4:   d2800802    mov x2, #0x40
   85cf8:   97fff5fa    bl  834e0 <CXHCIDevice::AllocateSharedMem(unsigned long, unsigned long, unsigned long)>
   85cfc:   f9000a60    str x0, [x19, #16]
   85d00:   b4000480    cbz x0, 85d90 <CXHCIRing::CXHCIRing(TXHCIRingType, unsigned int, CXHCIDevice*)+0xe0>
   85d04:   b9400261    ldr w1, [x19]
   85d08:   7100043f    cmp w1, #0x1
   85d0c:   54000420    b.eq    85d90 <CXHCIRing::CXHCIRing(TXHCIRingType, unsigned int, CXHCIDevice*)+0xe0>
   85d10:   b00001a1    adrp    x1, ba000 <font_data+0x1080>
   85d14:   b9400663    ldr w3, [x19, #4]
   85d18:   52800045    mov w5, #0x2
   85d1c:   52800304    mov w4, #0x18
   85d20:   f9458822    ldr x2, [x1, #2832]
   85d24:   51000463    sub w3, w3, #0x1
   85d28:   d37cec63    lsl x3, x3, #4
   85d2c:   aa020002    orr x2, x0, x2
   85d30:   8b030001    add x1, x0, x3
   85d34:   53083c49    ubfx    w9, w2, #8, #8
   85d38:   53105c48    ubfx    w8, w2, #16, #8
   85d3c:   53187c47    lsr w7, w2, #24
   85d40:   d3609c46    ubfx    x6, x2, #32, #8
   85d44:   38236802    strb    w2, [x0, x3]
   85d48:   d368bc43    ubfx    x3, x2, #40, #8
   85d4c:   d370dc40    ubfx    x0, x2, #48, #8
   85d50:   39000429    strb    w9, [x1, #1]
   85d54:   d378fc42    lsr x2, x2, #56
   85d58:   39000828    strb    w8, [x1, #2]
   85d5c:   39000c27    strb    w7, [x1, #3]
   85d60:   39001026    strb    w6, [x1, #4]
   85d64:   39001423    strb    w3, [x1, #5]
   85d68:   39001820    strb    w0, [x1, #6]
   85d6c:   39001c22    strb    w2, [x1, #7]
   85d70:   3900203f    strb    wzr, [x1, #8]
   85d74:   3900243f    strb    wzr, [x1, #9]
   85d78:   3900283f    strb    wzr, [x1, #10]
   85d7c:   39002c3f    strb    wzr, [x1, #11]
   85d80:   39003025    strb    w5, [x1, #12]
   85d84:   39003424    strb    w4, [x1, #13]
   85d88:   3900383f    strb    wzr, [x1, #14]
   85d8c:   39003c3f    strb    wzr, [x1, #15]
   85d90:   f9400bf3    ldr x19, [sp, #16]
   85d94:   a8c27bfd    ldp x29, x30, [sp], #32
   85d98:   d65f03c0    ret
   85d9c:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85da0:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85da4:   91324021    add x1, x1, #0xc90
   85da8:   91328000    add x0, x0, #0xca0
   85dac:   528004a2    mov w2, #0x25
   85db0:   94005b44    bl  9cac0 <assertion_failed>
   85db4:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85db8:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85dbc:   91324021    add x1, x1, #0xc90
   85dc0:   9132e000    add x0, x0, #0xcb8
   85dc4:   528004c2    mov w2, #0x26
   85dc8:   94005b3e    bl  9cac0 <assertion_failed>
   85dcc:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85dd0:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85dd4:   91324021    add x1, x1, #0xc90
   85dd8:   91334000    add x0, x0, #0xcd0
   85ddc:   52800502    mov w2, #0x28
   85de0:   94005b38    bl  9cac0 <assertion_failed>
   85de4:   d503201f    nop
   85de8:   d503201f    nop
   85dec:   d503201f    nop

0000000000085df0 <CXHCIRing::~CXHCIRing()>:
   85df0:   f9400801    ldr x1, [x0, #16]
   85df4:   b4000061    cbz x1, 85e00 <CXHCIRing::~CXHCIRing()+0x10>
   85df8:   f9400400    ldr x0, [x0, #8]
   85dfc:   17fff5d5    b   83550 <CXHCIDevice::FreeSharedMem(void*)>
   85e00:   d65f03c0    ret
   85e04:   d503201f    nop
   85e08:   d503201f    nop
   85e0c:   d503201f    nop

0000000000085e10 <CXHCIRing::IsValid() const>:
   85e10:   f9400800    ldr x0, [x0, #16]
   85e14:   f100001f    cmp x0, #0x0
   85e18:   1a9f07e0    cset    w0, ne
   85e1c:   d65f03c0    ret

0000000000085e20 <CXHCIRing::GetTRBCount() const>:
   85e20:   f9400801    ldr x1, [x0, #16]
   85e24:   b4000061    cbz x1, 85e30 <CXHCIRing::GetTRBCount() const+0x10>
   85e28:   b9400400    ldr w0, [x0, #4]
   85e2c:   d65f03c0    ret
   85e30:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85e34:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85e38:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   85e3c:   91324021    add x1, x1, #0xc90
   85e40:   910003fd    mov x29, sp
   85e44:   9133a000    add x0, x0, #0xce8
   85e48:   52800982    mov w2, #0x4c
   85e4c:   94005b1d    bl  9cac0 <assertion_failed>

0000000000085e50 <CXHCIRing::GetFirstTRB()>:
   85e50:   f9400800    ldr x0, [x0, #16]
   85e54:   b4000040    cbz x0, 85e5c <CXHCIRing::GetFirstTRB()+0xc>
   85e58:   d65f03c0    ret
   85e5c:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85e60:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85e64:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   85e68:   91324021    add x1, x1, #0xc90
   85e6c:   910003fd    mov x29, sp
   85e70:   9133a000    add x0, x0, #0xce8
   85e74:   52800a62    mov w2, #0x53
   85e78:   94005b12    bl  9cac0 <assertion_failed>
   85e7c:   d503201f    nop

0000000000085e80 <CXHCIRing::GetDequeueTRB()>:
   85e80:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   85e84:   910003fd    mov x29, sp
   85e88:   f9400802    ldr x2, [x0, #16]
   85e8c:   b40001a2    cbz x2, 85ec0 <CXHCIRing::GetDequeueTRB()+0x40>
   85e90:   b9400403    ldr w3, [x0, #4]
   85e94:   b9401c01    ldr w1, [x0, #28]
   85e98:   6b03003f    cmp w1, w3
   85e9c:   540001e2    b.cs    85ed8 <CXHCIRing::GetDequeueTRB()+0x58>
   85ea0:   8b215041    add x1, x2, w1, uxtw #4
   85ea4:   39403022    ldrb    w2, [x1, #12]
   85ea8:   a8c17bfd    ldp x29, x30, [sp], #16
   85eac:   b9402003    ldr w3, [x0, #32]
   85eb0:   12000040    and w0, w2, #0x1
   85eb4:   6b03001f    cmp w0, w3
   85eb8:   9a9f0020    csel    x0, x1, xzr, eq
   85ebc:   d65f03c0    ret
   85ec0:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85ec4:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85ec8:   91324021    add x1, x1, #0xc90
   85ecc:   9133a000    add x0, x0, #0xce8
   85ed0:   52800b42    mov w2, #0x5a
   85ed4:   94005afb    bl  9cac0 <assertion_failed>
   85ed8:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85edc:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85ee0:   91324021    add x1, x1, #0xc90
   85ee4:   91340000    add x0, x0, #0xd00
   85ee8:   52800b62    mov w2, #0x5b
   85eec:   94005af5    bl  9cac0 <assertion_failed>

0000000000085ef0 <CXHCIRing::GetEnqueueTRB()>:
   85ef0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   85ef4:   910003fd    mov x29, sp
   85ef8:   f9400802    ldr x2, [x0, #16]
   85efc:   b40001a2    cbz x2, 85f30 <CXHCIRing::GetEnqueueTRB()+0x40>
   85f00:   b9400403    ldr w3, [x0, #4]
   85f04:   b9401801    ldr w1, [x0, #24]
   85f08:   6b03003f    cmp w1, w3
   85f0c:   540001e2    b.cs    85f48 <CXHCIRing::GetEnqueueTRB()+0x58>
   85f10:   8b215041    add x1, x2, w1, uxtw #4
   85f14:   39403022    ldrb    w2, [x1, #12]
   85f18:   a8c17bfd    ldp x29, x30, [sp], #16
   85f1c:   b9402003    ldr w3, [x0, #32]
   85f20:   12000040    and w0, w2, #0x1
   85f24:   6b03001f    cmp w0, w3
   85f28:   9a9f1020    csel    x0, x1, xzr, ne
   85f2c:   d65f03c0    ret
   85f30:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85f34:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85f38:   91324021    add x1, x1, #0xc90
   85f3c:   9133a000    add x0, x0, #0xce8
   85f40:   52800ce2    mov w2, #0x67
   85f44:   94005adf    bl  9cac0 <assertion_failed>
   85f48:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85f4c:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85f50:   91324021    add x1, x1, #0xc90
   85f54:   91348000    add x0, x0, #0xd20
   85f58:   52800d02    mov w2, #0x68
   85f5c:   94005ad9    bl  9cac0 <assertion_failed>

0000000000085f60 <CXHCIRing::IncrementDequeue()>:
   85f60:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   85f64:   aa0003e1    mov x1, x0
   85f68:   910003fd    mov x29, sp
   85f6c:   f9400800    ldr x0, [x0, #16]
   85f70:   b4000320    cbz x0, 85fd4 <CXHCIRing::IncrementDequeue()+0x74>
   85f74:   b9400022    ldr w2, [x1]
   85f78:   7100045f    cmp w2, #0x1
   85f7c:   54000381    b.ne    85fec <CXHCIRing::IncrementDequeue()+0x8c>
   85f80:   b9400424    ldr w4, [x1, #4]
   85f84:   b9401c22    ldr w2, [x1, #28]
   85f88:   6b04005f    cmp w2, w4
   85f8c:   540003c2    b.cs    86004 <CXHCIRing::IncrementDequeue()+0xa4>
   85f90:   8b225003    add x3, x0, w2, uxtw #4
   85f94:   39403063    ldrb    w3, [x3, #12]
   85f98:   b9402025    ldr w5, [x1, #32]
   85f9c:   12000063    and w3, w3, #0x1
   85fa0:   6b05007f    cmp w3, w5
   85fa4:   540003c1    b.ne    8601c <CXHCIRing::IncrementDequeue()+0xbc>
   85fa8:   11000442    add w2, w2, #0x1
   85fac:   6b02009f    cmp w4, w2
   85fb0:   540000a0    b.eq    85fc4 <CXHCIRing::IncrementDequeue()+0x64>
   85fb4:   8b225000    add x0, x0, w2, uxtw #4
   85fb8:   b9001c22    str w2, [x1, #28]
   85fbc:   a8c17bfd    ldp x29, x30, [sp], #16
   85fc0:   d65f03c0    ret
   85fc4:   52000063    eor w3, w3, #0x1
   85fc8:   29038c3f    stp wzr, w3, [x1, #28]
   85fcc:   a8c17bfd    ldp x29, x30, [sp], #16
   85fd0:   d65f03c0    ret
   85fd4:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85fd8:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85fdc:   91324021    add x1, x1, #0xc90
   85fe0:   9133a000    add x0, x0, #0xce8
   85fe4:   52800e82    mov w2, #0x74
   85fe8:   94005ab6    bl  9cac0 <assertion_failed>
   85fec:   d0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85ff0:   d0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   85ff4:   91324021    add x1, x1, #0xc90
   85ff8:   91350000    add x0, x0, #0xd40
   85ffc:   52800ea2    mov w2, #0x75
   86000:   94005ab0    bl  9cac0 <assertion_failed>
   86004:   b0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86008:   b0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8600c:   91324021    add x1, x1, #0xc90
   86010:   91340000    add x0, x0, #0xd00
   86014:   52800ec2    mov w2, #0x76
   86018:   94005aaa    bl  9cac0 <assertion_failed>
   8601c:   b0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86020:   b0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86024:   91324021    add x1, x1, #0xc90
   86028:   91358000    add x0, x0, #0xd60
   8602c:   52800f02    mov w2, #0x78
   86030:   94005aa4    bl  9cac0 <assertion_failed>
   86034:   d503201f    nop
   86038:   d503201f    nop
   8603c:   d503201f    nop

0000000000086040 <CXHCIRing::IncrementEnqueue()>:
   86040:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   86044:   910003fd    mov x29, sp
   86048:   f9400804    ldr x4, [x0, #16]
   8604c:   b4000564    cbz x4, 860f8 <CXHCIRing::IncrementEnqueue()+0xb8>
   86050:   b9400001    ldr w1, [x0]
   86054:   7100043f    cmp w1, #0x1
   86058:   540005c0    b.eq    86110 <CXHCIRing::IncrementEnqueue()+0xd0>
   8605c:   b9400402    ldr w2, [x0, #4]
   86060:   b9401801    ldr w1, [x0, #24]
   86064:   6b02003f    cmp w1, w2
   86068:   54000602    b.cs    86128 <CXHCIRing::IncrementEnqueue()+0xe8>
   8606c:   8b215083    add x3, x4, w1, uxtw #4
   86070:   39403063    ldrb    w3, [x3, #12]
   86074:   b9402005    ldr w5, [x0, #32]
   86078:   12000063    and w3, w3, #0x1
   8607c:   6b05007f    cmp w3, w5
   86080:   54000601    b.ne    86140 <CXHCIRing::IncrementEnqueue()+0x100>
   86084:   11000421    add w1, w1, #0x1
   86088:   51000442    sub w2, w2, #0x1
   8608c:   6b02003f    cmp w1, w2
   86090:   b9001801    str w1, [x0, #24]
   86094:   54000060    b.eq    860a0 <CXHCIRing::IncrementEnqueue()+0x60>
   86098:   a8c17bfd    ldp x29, x30, [sp], #16
   8609c:   d65f03c0    ret
   860a0:   8b215081    add x1, x4, w1, uxtw #4
   860a4:   39403026    ldrb    w6, [x1, #12]
   860a8:   39403425    ldrb    w5, [x1, #13]
   860ac:   39403824    ldrb    w4, [x1, #14]
   860b0:   39403c22    ldrb    w2, [x1, #15]
   860b4:   aa0520c5    orr x5, x6, x5, lsl #8
   860b8:   aa0440a4    orr x4, x5, x4, lsl #16
   860bc:   aa026082    orr x2, x4, x2, lsl #24
   860c0:   52000047    eor w7, w2, #0x1
   860c4:   53083c46    ubfx    w6, w2, #8, #8
   860c8:   53105c45    ubfx    w5, w2, #16, #8
   860cc:   d358dc44    ubfx    x4, x2, #24, #32
   860d0:   39003027    strb    w7, [x1, #12]
   860d4:   39003426    strb    w6, [x1, #13]
   860d8:   39003825    strb    w5, [x1, #14]
   860dc:   39003c24    strb    w4, [x1, #15]
   860e0:   36080062    tbz w2, #1, 860ec <CXHCIRing::IncrementEnqueue()+0xac>
   860e4:   52000063    eor w3, w3, #0x1
   860e8:   b9002003    str w3, [x0, #32]
   860ec:   b900181f    str wzr, [x0, #24]
   860f0:   a8c17bfd    ldp x29, x30, [sp], #16
   860f4:   d65f03c0    ret
   860f8:   b0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   860fc:   b0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86100:   91324021    add x1, x1, #0xc90
   86104:   9133a000    add x0, x0, #0xce8
   86108:   528010e2    mov w2, #0x87
   8610c:   94005a6d    bl  9cac0 <assertion_failed>
   86110:   b0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86114:   b0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86118:   91324021    add x1, x1, #0xc90
   8611c:   9136c000    add x0, x0, #0xdb0
   86120:   52801102    mov w2, #0x88
   86124:   94005a67    bl  9cac0 <assertion_failed>
   86128:   b0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8612c:   b0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86130:   91324021    add x1, x1, #0xc90
   86134:   91348000    add x0, x0, #0xd20
   86138:   52801122    mov w2, #0x89
   8613c:   94005a61    bl  9cac0 <assertion_failed>
   86140:   b0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86144:   b0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86148:   91324021    add x1, x1, #0xc90
   8614c:   91374000    add x0, x0, #0xdd0
   86150:   52801162    mov w2, #0x8b
   86154:   94005a5b    bl  9cac0 <assertion_failed>
   86158:   d503201f    nop
   8615c:   d503201f    nop

0000000000086160 <CXHCIRing::GetCycleState() const>:
   86160:   f9400801    ldr x1, [x0, #16]
   86164:   b4000061    cbz x1, 86170 <CXHCIRing::GetCycleState() const+0x10>
   86168:   b9402000    ldr w0, [x0, #32]
   8616c:   d65f03c0    ret
   86170:   b0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86174:   b0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86178:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   8617c:   91324021    add x1, x1, #0xc90
   86180:   910003fd    mov x29, sp
   86184:   9133a000    add x0, x0, #0xce8
   86188:   528013e2    mov w2, #0x9f
   8618c:   94005a4d    bl  9cac0 <assertion_failed>

0000000000086190 <CXHCIRing::DumpStatus(char const*)>:
   86190:   a9be7bfd    stp x29, x30, [sp, #-32]!
   86194:   910003fd    mov x29, sp
   86198:   a90153f3    stp x19, x20, [sp, #16]
   8619c:   aa0103f4    mov x20, x1
   861a0:   aa0003f3    mov x19, x0
   861a4:   94006517    bl  9f600 <CLogger::Get()>
   861a8:   29401262    ldp w2, w4, [x19]
   861ac:   f100029f    cmp x20, #0x0
   861b0:   d0000161    adrp    x1, b4000 <From+0x140>
   861b4:   91054021    add x1, x1, #0x150
   861b8:   9a940034    csel    x20, x1, x20, eq
   861bc:   b0000145    adrp    x5, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   861c0:   9138a0a5    add x5, x5, #0xe28
   861c4:   29430666    ldp w6, w1, [x19, #24]
   861c8:   7100045f    cmp w2, #0x1
   861cc:   54000081    b.ne    861dc <CXHCIRing::DumpStatus(char const*)+0x4c>
   861d0:   b0000145    adrp    x5, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   861d4:   913880a5    add x5, x5, #0xe20
   861d8:   2a0103e6    mov w6, w1
   861dc:   b9402267    ldr w7, [x19, #32]
   861e0:   b0000143    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   861e4:   9138c063    add x3, x3, #0xe30
   861e8:   52800082    mov w2, #0x4
   861ec:   aa1403e1    mov x1, x20
   861f0:   940066ec    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   861f4:   f9400a60    ldr x0, [x19, #16]
   861f8:   b40000e0    cbz x0, 86214 <CXHCIRing::DumpStatus(char const*)+0x84>
   861fc:   b9400661    ldr w1, [x19, #4]
   86200:   aa1403e2    mov x2, x20
   86204:   a94153f3    ldp x19, x20, [sp, #16]
   86208:   a8c27bfd    ldp x29, x30, [sp], #32
   8620c:   531c6c21    lsl w1, w1, #4
   86210:   14005bf8    b   9d1f0 <debug_hexdump(void const*, unsigned int, char const*)>
   86214:   a94153f3    ldp x19, x20, [sp, #16]
   86218:   a8c27bfd    ldp x29, x30, [sp], #32
   8621c:   d65f03c0    ret

0000000000086220 <CXHCIRootHub::CXHCIRootHub(unsigned int, CXHCIDevice*)>:
   86220:   b9000001    str w1, [x0]
   86224:   f9000402    str x2, [x0, #8]
   86228:   34000341    cbz w1, 86290 <CXHCIRootHub::CXHCIRootHub(unsigned int, CXHCIDevice*)+0x70>
   8622c:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   86230:   910003fd    mov x29, sp
   86234:   a90153f3    stp x19, x20, [sp, #16]
   86238:   52800013    mov w19, #0x0
   8623c:   a9025bf5    stp x21, x22, [sp, #32]
   86240:   aa0003f5    mov x21, x0
   86244:   d503201f    nop
   86248:   d2800600    mov x0, #0x30
   8624c:   11000676    add w22, w19, #0x1
   86250:   9400855c    bl  a77c0 <operator new(unsigned long)>
   86254:   f94006a2    ldr x2, [x21, #8]
   86258:   2a1603e1    mov w1, w22
   8625c:   aa0003f4    mov x20, x0
   86260:   940000f0    bl  86620 <CXHCIRootPort::CXHCIRootPort(unsigned char, CXHCIDevice*)>
   86264:   b94002a0    ldr w0, [x21]
   86268:   2a1303e1    mov w1, w19
   8626c:   2a1603f3    mov w19, w22
   86270:   91000821    add x1, x1, #0x2
   86274:   f8217ab4    str x20, [x21, x1, lsl #3]
   86278:   6b16001f    cmp w0, w22
   8627c:   54fffe68    b.hi    86248 <CXHCIRootHub::CXHCIRootHub(unsigned int, CXHCIDevice*)+0x28>
   86280:   a94153f3    ldp x19, x20, [sp, #16]
   86284:   a9425bf5    ldp x21, x22, [sp, #32]
   86288:   a8c37bfd    ldp x29, x30, [sp], #48
   8628c:   d65f03c0    ret
   86290:   d65f03c0    ret
   86294:   d503201f    nop
   86298:   d503201f    nop
   8629c:   d503201f    nop

00000000000862a0 <CXHCIRootHub::~CXHCIRootHub()>:
   862a0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   862a4:   910003fd    mov x29, sp
   862a8:   f90013f5    str x21, [sp, #32]
   862ac:   aa0003f5    mov x21, x0
   862b0:   b9400000    ldr w0, [x0]
   862b4:   340001e0    cbz w0, 862f0 <CXHCIRootHub::~CXHCIRootHub()+0x50>
   862b8:   a90153f3    stp x19, x20, [sp, #16]
   862bc:   52800013    mov w19, #0x0
   862c0:   8b334eb4    add x20, x21, w19, uxtw #3
   862c4:   f9400a80    ldr x0, [x20, #16]
   862c8:   b4000080    cbz x0, 862d8 <CXHCIRootHub::~CXHCIRootHub()+0x38>
   862cc:   f9400001    ldr x1, [x0]
   862d0:   f9400421    ldr x1, [x1, #8]
   862d4:   d63f0020    blr x1
   862d8:   f9000a9f    str xzr, [x20, #16]
   862dc:   11000673    add w19, w19, #0x1
   862e0:   b94002a0    ldr w0, [x21]
   862e4:   6b13001f    cmp w0, w19
   862e8:   54fffec8    b.hi    862c0 <CXHCIRootHub::~CXHCIRootHub()+0x20>
   862ec:   a94153f3    ldp x19, x20, [sp, #16]
   862f0:   f94013f5    ldr x21, [sp, #32]
   862f4:   a8c37bfd    ldp x29, x30, [sp], #48
   862f8:   d65f03c0    ret
   862fc:   d503201f    nop

0000000000086300 <CXHCIRootHub::Initialize()>:
   86300:   a9be7bfd    stp x29, x30, [sp, #-32]!
   86304:   910003fd    mov x29, sp
   86308:   a90153f3    stp x19, x20, [sp, #16]
   8630c:   aa0003f4    mov x20, x0
   86310:   940062b8    bl  9edf0 <CKernelOptions::Get()>
   86314:   b4000340    cbz x0, 8637c <CXHCIRootHub::Initialize()+0x7c>
   86318:   9400626a    bl  9ecc0 <CKernelOptions::GetUSBPowerDelay() const>
   8631c:   2a0003f3    mov w19, w0
   86320:   340002e0    cbz w0, 8637c <CXHCIRootHub::Initialize()+0x7c>
   86324:   940080d7    bl  a6680 <CTimer::Get()>
   86328:   2a1303e0    mov w0, w19
   8632c:   52800013    mov w19, #0x0
   86330:   94008078    bl  a6510 <CTimer::SimpleMsDelay(unsigned int)>
   86334:   b9400280    ldr w0, [x20]
   86338:   350000e0    cbnz    w0, 86354 <CXHCIRootHub::Initialize()+0x54>
   8633c:   14000024    b   863cc <CXHCIRootHub::Initialize()+0xcc>
   86340:   9400023c    bl  86c30 <CXHCIRootPort::Initialize()>
   86344:   b9400280    ldr w0, [x20]
   86348:   11000673    add w19, w19, #0x1
   8634c:   6b13001f    cmp w0, w19
   86350:   540001a9    b.ls    86384 <CXHCIRootHub::Initialize()+0x84>
   86354:   2a1303e1    mov w1, w19
   86358:   91000821    add x1, x1, #0x2
   8635c:   f8617a80    ldr x0, [x20, x1, lsl #3]
   86360:   b5ffff00    cbnz    x0, 86340 <CXHCIRootHub::Initialize()+0x40>
   86364:   b0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86368:   b0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8636c:   91394021    add x1, x1, #0xe50
   86370:   91398000    add x0, x0, #0xe60
   86374:   52800802    mov w2, #0x40
   86378:   940059d2    bl  9cac0 <assertion_failed>
   8637c:   52802593    mov w19, #0x12c
   86380:   17ffffe9    b   86324 <CXHCIRootHub::Initialize()+0x24>
   86384:   34000240    cbz w0, 863cc <CXHCIRootHub::Initialize()+0xcc>
   86388:   52800013    mov w19, #0x0
   8638c:   14000006    b   863a4 <CXHCIRootHub::Initialize()+0xa4>
   86390:   940001ec    bl  86b40 <CXHCIRootPort::Configure()>
   86394:   b9400280    ldr w0, [x20]
   86398:   11000673    add w19, w19, #0x1
   8639c:   6b13001f    cmp w0, w19
   863a0:   54000169    b.ls    863cc <CXHCIRootHub::Initialize()+0xcc>
   863a4:   2a1303e0    mov w0, w19
   863a8:   91000800    add x0, x0, #0x2
   863ac:   f8607a80    ldr x0, [x20, x0, lsl #3]
   863b0:   b5ffff00    cbnz    x0, 86390 <CXHCIRootHub::Initialize()+0x90>
   863b4:   b0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   863b8:   b0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   863bc:   91394021    add x1, x1, #0xe50
   863c0:   91398000    add x0, x0, #0xe60
   863c4:   528008c2    mov w2, #0x46
   863c8:   940059be    bl  9cac0 <assertion_failed>
   863cc:   a94153f3    ldp x19, x20, [sp, #16]
   863d0:   52800020    mov w0, #0x1
   863d4:   a8c27bfd    ldp x29, x30, [sp], #32
   863d8:   d65f03c0    ret
   863dc:   d503201f    nop

00000000000863e0 <CXHCIRootHub::ReScanDevices()>:
   863e0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   863e4:   910003fd    mov x29, sp
   863e8:   a90153f3    stp x19, x20, [sp, #16]
   863ec:   aa0003f4    mov x20, x0
   863f0:   b9400000    ldr w0, [x0]
   863f4:   f90013f5    str x21, [sp, #32]
   863f8:   34000300    cbz w0, 86458 <CXHCIRootHub::ReScanDevices()+0x78>
   863fc:   52800013    mov w19, #0x0
   86400:   52800015    mov w21, #0x0
   86404:   1400000b    b   86430 <CXHCIRootHub::ReScanDevices()+0x50>
   86408:   f9400001    ldr x1, [x0]
   8640c:   11000673    add w19, w19, #0x1
   86410:   f9400821    ldr x1, [x1, #16]
   86414:   d63f0020    blr x1
   86418:   b9400281    ldr w1, [x20]
   8641c:   f240001f    tst x0, #0x1
   86420:   12001c00    and w0, w0, #0xff
   86424:   1a8002b5    csel    w21, w21, w0, eq
   86428:   6b13003f    cmp w1, w19
   8642c:   54000189    b.ls    8645c <CXHCIRootHub::ReScanDevices()+0x7c>
   86430:   2a1303e1    mov w1, w19
   86434:   91000821    add x1, x1, #0x2
   86438:   f8617a80    ldr x0, [x20, x1, lsl #3]
   8643c:   b5fffe60    cbnz    x0, 86408 <CXHCIRootHub::ReScanDevices()+0x28>
   86440:   b0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86444:   b0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86448:   91394021    add x1, x1, #0xe50
   8644c:   91398000    add x0, x0, #0xe60
   86450:   52800a62    mov w2, #0x53
   86454:   9400599b    bl  9cac0 <assertion_failed>
   86458:   52800015    mov w21, #0x0
   8645c:   a94153f3    ldp x19, x20, [sp, #16]
   86460:   2a1503e0    mov w0, w21
   86464:   f94013f5    ldr x21, [sp, #32]
   86468:   a8c37bfd    ldp x29, x30, [sp], #48
   8646c:   d65f03c0    ret

0000000000086470 <CXHCIRootHub::StatusChanged(unsigned char)>:
   86470:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   86474:   910003fd    mov x29, sp
   86478:   12001c21    and w1, w1, #0xff
   8647c:   51000421    sub w1, w1, #0x1
   86480:   b9400002    ldr w2, [x0]
   86484:   6b01005f    cmp w2, w1
   86488:   540000c9    b.ls    864a0 <CXHCIRootHub::StatusChanged(unsigned char)+0x30>
   8648c:   91000821    add x1, x1, #0x2
   86490:   f8617800    ldr x0, [x0, x1, lsl #3]
   86494:   b4000120    cbz x0, 864b8 <CXHCIRootHub::StatusChanged(unsigned char)+0x48>
   86498:   a8c17bfd    ldp x29, x30, [sp], #16
   8649c:   140000a1    b   86720 <CXHCIRootPort::StatusChanged()>
   864a0:   b0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   864a4:   b0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   864a8:   91394021    add x1, x1, #0xe50
   864ac:   9139e000    add x0, x0, #0xe78
   864b0:   52800c02    mov w2, #0x60
   864b4:   94005983    bl  9cac0 <assertion_failed>
   864b8:   b0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   864bc:   b0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   864c0:   91394021    add x1, x1, #0xe50
   864c4:   91398000    add x0, x0, #0xe60
   864c8:   52800c22    mov w2, #0x61
   864cc:   9400597d    bl  9cac0 <assertion_failed>

00000000000864d0 <CXHCIRootHub::DumpStatus()>:
   864d0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   864d4:   910003fd    mov x29, sp
   864d8:   a90153f3    stp x19, x20, [sp, #16]
   864dc:   aa0003f4    mov x20, x0
   864e0:   b9400000    ldr w0, [x0]
   864e4:   34000160    cbz w0, 86510 <CXHCIRootHub::DumpStatus()+0x40>
   864e8:   52800013    mov w19, #0x0
   864ec:   d503201f    nop
   864f0:   2a1303e1    mov w1, w19
   864f4:   11000673    add w19, w19, #0x1
   864f8:   91000821    add x1, x1, #0x2
   864fc:   f8617a80    ldr x0, [x20, x1, lsl #3]
   86500:   940000c4    bl  86810 <CXHCIRootPort::DumpStatus()>
   86504:   b9400280    ldr w0, [x20]
   86508:   6b13001f    cmp w0, w19
   8650c:   54ffff28    b.hi    864f0 <CXHCIRootHub::DumpStatus()+0x20>
   86510:   a94153f3    ldp x19, x20, [sp, #16]
   86514:   a8c27bfd    ldp x29, x30, [sp], #32
   86518:   d65f03c0    ret
   8651c:   00000000    udf #0

0000000000086520 <CXHCIRootPort::~CXHCIRootPort()>:
   86520:   aa0003e1    mov x1, x0
   86524:   d0000162    adrp    x2, b4000 <From+0x140>
   86528:   9105c042    add x2, x2, #0x170
   8652c:   f9401000    ldr x0, [x0, #32]
   86530:   f9000022    str x2, [x1]
   86534:   b40000a0    cbz x0, 86548 <CXHCIRootPort::~CXHCIRootPort()+0x28>
   86538:   f9400001    ldr x1, [x0]
   8653c:   f9400421    ldr x1, [x1, #8]
   86540:   aa0103f0    mov x16, x1
   86544:   d61f0200    br  x16
   86548:   d65f03c0    ret
   8654c:   d503201f    nop

0000000000086550 <CXHCIRootPort::RemoveDevice()>:
   86550:   a9be7bfd    stp x29, x30, [sp, #-32]!
   86554:   910003fd    mov x29, sp
   86558:   f9000bf3    str x19, [sp, #16]
   8655c:   aa0003f3    mov x19, x0
   86560:   f9401000    ldr x0, [x0, #32]
   86564:   b4000080    cbz x0, 86574 <CXHCIRootPort::RemoveDevice()+0x24>
   86568:   f9400001    ldr x1, [x0]
   8656c:   f9400421    ldr x1, [x1, #8]
   86570:   d63f0020    blr x1
   86574:   52800020    mov w0, #0x1
   86578:   f900127f    str xzr, [x19, #32]
   8657c:   f9400bf3    ldr x19, [sp, #16]
   86580:   a8c27bfd    ldp x29, x30, [sp], #32
   86584:   d65f03c0    ret
   86588:   d503201f    nop
   8658c:   d503201f    nop

0000000000086590 <CXHCIRootPort::GetPortID() const>:
   86590:   b9400800    ldr w0, [x0, #8]
   86594:   7100101f    cmp w0, #0x4
   86598:   54000068    b.hi    865a4 <CXHCIRootPort::GetPortID() const+0x14>
   8659c:   11000400    add w0, w0, #0x1
   865a0:   d65f03c0    ret
   865a4:   b0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   865a8:   b0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   865ac:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   865b0:   913a4021    add x1, x1, #0xe90
   865b4:   910003fd    mov x29, sp
   865b8:   913aa000    add x0, x0, #0xea8
   865bc:   52801182    mov w2, #0x8c
   865c0:   94005940    bl  9cac0 <assertion_failed>
   865c4:   d503201f    nop
   865c8:   d503201f    nop
   865cc:   d503201f    nop

00000000000865d0 <CXHCIRootPort::~CXHCIRootPort()>:
   865d0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   865d4:   910003fd    mov x29, sp
   865d8:   d0000161    adrp    x1, b4000 <From+0x140>
   865dc:   9105c021    add x1, x1, #0x170
   865e0:   f9000bf3    str x19, [sp, #16]
   865e4:   aa0003f3    mov x19, x0
   865e8:   f9401000    ldr x0, [x0, #32]
   865ec:   f9000261    str x1, [x19]
   865f0:   b4000080    cbz x0, 86600 <CXHCIRootPort::~CXHCIRootPort()+0x30>
   865f4:   f9400001    ldr x1, [x0]
   865f8:   f9400421    ldr x1, [x1, #8]
   865fc:   d63f0020    blr x1
   86600:   aa1303e0    mov x0, x19
   86604:   f9400bf3    ldr x19, [sp, #16]
   86608:   d2800601    mov x1, #0x30
   8660c:   a8c27bfd    ldp x29, x30, [sp], #32
   86610:   14008494    b   a7860 <operator delete(void*, unsigned long)>
   86614:   d503201f    nop
   86618:   d503201f    nop
   8661c:   d503201f    nop

0000000000086620 <CXHCIRootPort::CXHCIRootPort(unsigned char, CXHCIDevice*)>:
   86620:   a9be7bfd    stp x29, x30, [sp, #-32]!
   86624:   12001c21    and w1, w1, #0xff
   86628:   910003fd    mov x29, sp
   8662c:   a90153f3    stp x19, x20, [sp, #16]
   86630:   aa0003f3    mov x19, x0
   86634:   51000434    sub w20, w1, #0x1
   86638:   d0000161    adrp    x1, b4000 <From+0x140>
   8663c:   9105c021    add x1, x1, #0x170
   86640:   aa0203e0    mov x0, x2
   86644:   f9000261    str x1, [x19]
   86648:   b9000a74    str w20, [x19, #8]
   8664c:   12001e94    and w20, w20, #0xff
   86650:   f9000a62    str x2, [x19, #16]
   86654:   97fff373    bl  83420 <CXHCIDevice::GetMMIOSpace()>
   86658:   52800021    mov w1, #0x1
   8665c:   7100129f    cmp w20, #0x4
   86660:   a901fe60    stp x0, xzr, [x19, #24]
   86664:   b9002a61    str w1, [x19, #40]
   86668:   54000088    b.hi    86678 <CXHCIRootPort::CXHCIRootPort(unsigned char, CXHCIDevice*)+0x58>
   8666c:   a94153f3    ldp x19, x20, [sp, #16]
   86670:   a8c27bfd    ldp x29, x30, [sp], #32
   86674:   d65f03c0    ret
   86678:   b0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8667c:   b0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86680:   913a4021    add x1, x1, #0xe90
   86684:   913b4000    add x0, x0, #0xed0
   86688:   52800422    mov w2, #0x21
   8668c:   9400590d    bl  9cac0 <assertion_failed>

0000000000086690 <CXHCIRootPort::GetPortSpeed()>:
   86690:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   86694:   aa0003e1    mov x1, x0
   86698:   910003fd    mov x29, sp
   8669c:   f9400c00    ldr x0, [x0, #24]
   866a0:   b4000240    cbz x0, 866e8 <CXHCIRootPort::GetPortSpeed()+0x58>
   866a4:   b9400821    ldr w1, [x1, #8]
   866a8:   7100103f    cmp w1, #0x4
   866ac:   540002a8    b.hi    86700 <CXHCIRootPort::GetPortSpeed()+0x70>
   866b0:   52800002    mov w2, #0x0
   866b4:   97fffc77    bl  85890 <CXHCIMMIOSpace::pt_read32(unsigned int, unsigned int)>
   866b8:   2a0003e1    mov w1, w0
   866bc:   52800080    mov w0, #0x4
   866c0:   d34a3421    ubfx    x1, x1, #10, #4
   866c4:   51000422    sub w2, w1, #0x1
   866c8:   12001c43    and w3, w2, #0xff
   866cc:   71000c7f    cmp w3, #0x3
   866d0:   54000088    b.hi    866e0 <CXHCIRootPort::GetPortSpeed()+0x50>
   866d4:   71000c3f    cmp w1, #0x3
   866d8:   52000040    eor w0, w2, #0x1
   866dc:   1a823000    csel    w0, w0, w2, cc
   866e0:   a8c17bfd    ldp x29, x30, [sp], #16
   866e4:   d65f03c0    ret
   866e8:   b0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   866ec:   b0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   866f0:   913a4021    add x1, x1, #0xe90
   866f4:   912dc000    add x0, x0, #0xb70
   866f8:   52801262    mov w2, #0x93
   866fc:   940058f1    bl  9cac0 <assertion_failed>
   86700:   b0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86704:   b0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86708:   913a4021    add x1, x1, #0xe90
   8670c:   913aa000    add x0, x0, #0xea8
   86710:   52801282    mov w2, #0x94
   86714:   940058eb    bl  9cac0 <assertion_failed>
   86718:   d503201f    nop
   8671c:   d503201f    nop

0000000000086720 <CXHCIRootPort::StatusChanged()>:
   86720:   a9be7bfd    stp x29, x30, [sp, #-32]!
   86724:   910003fd    mov x29, sp
   86728:   a90153f3    stp x19, x20, [sp, #16]
   8672c:   aa0003f3    mov x19, x0
   86730:   f9400c00    ldr x0, [x0, #24]
   86734:   b4000480    cbz x0, 867c4 <CXHCIRootPort::StatusChanged()+0xa4>
   86738:   b9400a61    ldr w1, [x19, #8]
   8673c:   7100103f    cmp w1, #0x4
   86740:   540004e8    b.hi    867dc <CXHCIRootPort::StatusChanged()+0xbc>
   86744:   b9402a62    ldr w2, [x19, #40]
   86748:   350002a2    cbnz    w2, 8679c <CXHCIRootPort::StatusChanged()+0x7c>
   8674c:   52800002    mov w2, #0x0
   86750:   97fffc50    bl  85890 <CXHCIMMIOSpace::pt_read32(unsigned int, unsigned int)>
   86754:   121e7803    and w3, w0, #0xfffffffd
   86758:   b9400a61    ldr w1, [x19, #8]
   8675c:   52800002    mov w2, #0x0
   86760:   2a0003f4    mov w20, w0
   86764:   f9400e60    ldr x0, [x19, #24]
   86768:   97fffcb2    bl  85a30 <CXHCIMMIOSpace::pt_write32(unsigned int, unsigned int, unsigned int)>
   8676c:   b9402a60    ldr w0, [x19, #40]
   86770:   35000120    cbnz    w0, 86794 <CXHCIRootPort::StatusChanged()+0x74>
   86774:   f9400a60    ldr x0, [x19, #16]
   86778:   b40003e0    cbz x0, 867f4 <CXHCIRootPort::StatusChanged()+0xd4>
   8677c:   97ffeabd    bl  81270 <CUSBHostController::IsPlugAndPlay()>
   86780:   36000040    tbz w0, #0, 86788 <CXHCIRootPort::StatusChanged()+0x68>
   86784:   37880174    tbnz    w20, #17, 867b0 <CXHCIRootPort::StatusChanged()+0x90>
   86788:   a94153f3    ldp x19, x20, [sp, #16]
   8678c:   a8c27bfd    ldp x29, x30, [sp], #32
   86790:   d65f03c0    ret
   86794:   940087e7    bl  a8730 <LeaveCritical>
   86798:   17fffff7    b   86774 <CXHCIRootPort::StatusChanged()+0x54>
   8679c:   2a0203e0    mov w0, w2
   867a0:   940087b4    bl  a8670 <EnterCritical>
   867a4:   f9400e60    ldr x0, [x19, #24]
   867a8:   b9400a61    ldr w1, [x19, #8]
   867ac:   17ffffe8    b   8674c <CXHCIRootPort::StatusChanged()+0x2c>
   867b0:   f9400a60    ldr x0, [x19, #16]
   867b4:   aa1303e1    mov x1, x19
   867b8:   a94153f3    ldp x19, x20, [sp, #16]
   867bc:   a8c27bfd    ldp x29, x30, [sp], #32
   867c0:   17ffeab0    b   81280 <CUSBHostController::PortStatusChanged(CUSBHCIRootPort*)>
   867c4:   b0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   867c8:   b0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   867cc:   913a4021    add x1, x1, #0xe90
   867d0:   912dc000    add x0, x0, #0xb70
   867d4:   52801a42    mov w2, #0xd2
   867d8:   940058ba    bl  9cac0 <assertion_failed>
   867dc:   b0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   867e0:   b0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   867e4:   913a4021    add x1, x1, #0xe90
   867e8:   913aa000    add x0, x0, #0xea8
   867ec:   52801a62    mov w2, #0xd3
   867f0:   940058b4    bl  9cac0 <assertion_failed>
   867f4:   b0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   867f8:   b0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   867fc:   913a4021    add x1, x1, #0xe90
   86800:   912a6000    add x0, x0, #0xa98
   86804:   52801c42    mov w2, #0xe2
   86808:   940058ae    bl  9cac0 <assertion_failed>
   8680c:   d503201f    nop

0000000000086810 <CXHCIRootPort::DumpStatus()>:
   86810:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   86814:   910003fd    mov x29, sp
   86818:   a90153f3    stp x19, x20, [sp, #16]
   8681c:   aa0003f3    mov x19, x0
   86820:   a9025bf5    stp x21, x22, [sp, #32]
   86824:   94006377    bl  9f600 <CLogger::Get()>
   86828:   b9400a76    ldr w22, [x19, #8]
   8682c:   52800002    mov w2, #0x0
   86830:   aa0003f4    mov x20, x0
   86834:   f9400e60    ldr x0, [x19, #24]
   86838:   2a1603e1    mov w1, w22
   8683c:   97fffc15    bl  85890 <CXHCIMMIOSpace::pt_read32(unsigned int, unsigned int)>
   86840:   b9400a61    ldr w1, [x19, #8]
   86844:   52800102    mov w2, #0x8
   86848:   2a0003f5    mov w21, w0
   8684c:   f9400e60    ldr x0, [x19, #24]
   86850:   97fffc10    bl  85890 <CXHCIMMIOSpace::pt_read32(unsigned int, unsigned int)>
   86854:   b0000143    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86858:   d0000161    adrp    x1, b4000 <From+0x140>
   8685c:   2a0003e6    mov w6, w0
   86860:   2a1503e5    mov w5, w21
   86864:   aa1403e0    mov x0, x20
   86868:   110006c4    add w4, w22, #0x1
   8686c:   913bc063    add x3, x3, #0xef0
   86870:   91068021    add x1, x1, #0x1a0
   86874:   52800082    mov w2, #0x4
   86878:   9400654a    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8687c:   f9401260    ldr x0, [x19, #32]
   86880:   b40000a0    cbz x0, 86894 <CXHCIRootPort::DumpStatus()+0x84>
   86884:   a94153f3    ldp x19, x20, [sp, #16]
   86888:   a9425bf5    ldp x21, x22, [sp, #32]
   8688c:   a8c37bfd    ldp x29, x30, [sp], #48
   86890:   14000410    b   878d0 <CXHCIUSBDevice::DumpStatus()>
   86894:   a94153f3    ldp x19, x20, [sp, #16]
   86898:   a9425bf5    ldp x21, x22, [sp, #32]
   8689c:   a8c37bfd    ldp x29, x30, [sp], #48
   868a0:   d65f03c0    ret
   868a4:   d503201f    nop
   868a8:   d503201f    nop
   868ac:   d503201f    nop

00000000000868b0 <CXHCIRootPort::IsConnected()>:
   868b0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   868b4:   aa0003e1    mov x1, x0
   868b8:   910003fd    mov x29, sp
   868bc:   f9400c00    ldr x0, [x0, #24]
   868c0:   b4000120    cbz x0, 868e4 <CXHCIRootPort::IsConnected()+0x34>
   868c4:   b9400821    ldr w1, [x1, #8]
   868c8:   7100103f    cmp w1, #0x4
   868cc:   54000188    b.hi    868fc <CXHCIRootPort::IsConnected()+0x4c>
   868d0:   52800002    mov w2, #0x0
   868d4:   97fffbef    bl  85890 <CXHCIMMIOSpace::pt_read32(unsigned int, unsigned int)>
   868d8:   12000000    and w0, w0, #0x1
   868dc:   a8c17bfd    ldp x29, x30, [sp], #16
   868e0:   d65f03c0    ret
   868e4:   b0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   868e8:   b0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   868ec:   913a4021    add x1, x1, #0xe90
   868f0:   912dc000    add x0, x0, #0xb70
   868f4:   52801f82    mov w2, #0xfc
   868f8:   94005872    bl  9cac0 <assertion_failed>
   868fc:   b0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86900:   b0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86904:   913a4021    add x1, x1, #0xe90
   86908:   913aa000    add x0, x0, #0xea8
   8690c:   52801fa2    mov w2, #0xfd
   86910:   9400586c    bl  9cac0 <assertion_failed>
   86914:   d503201f    nop
   86918:   d503201f    nop
   8691c:   d503201f    nop

0000000000086920 <CXHCIRootPort::Reset(unsigned int)>:
   86920:   a9be7bfd    stp x29, x30, [sp, #-32]!
   86924:   910003fd    mov x29, sp
   86928:   a90153f3    stp x19, x20, [sp, #16]
   8692c:   aa0003f3    mov x19, x0
   86930:   f9400c00    ldr x0, [x0, #24]
   86934:   b4000440    cbz x0, 869bc <CXHCIRootPort::Reset(unsigned int)+0x9c>
   86938:   2a0103f4    mov w20, w1
   8693c:   b9400a61    ldr w1, [x19, #8]
   86940:   7100103f    cmp w1, #0x4
   86944:   54000488    b.hi    869d4 <CXHCIRootPort::Reset(unsigned int)+0xb4>
   86948:   b9402a62    ldr w2, [x19, #40]
   8694c:   350002a2    cbnz    w2, 869a0 <CXHCIRootPort::Reset(unsigned int)+0x80>
   86950:   52800002    mov w2, #0x0
   86954:   97fffbcf    bl  85890 <CXHCIMMIOSpace::pt_read32(unsigned int, unsigned int)>
   86958:   121e7803    and w3, w0, #0xfffffffd
   8695c:   f9400e60    ldr x0, [x19, #24]
   86960:   52800002    mov w2, #0x0
   86964:   321c0063    orr w3, w3, #0x10
   86968:   b9400a61    ldr w1, [x19, #8]
   8696c:   97fffc31    bl  85a30 <CXHCIMMIOSpace::pt_write32(unsigned int, unsigned int, unsigned int)>
   86970:   b9402a60    ldr w0, [x19, #40]
   86974:   35000200    cbnz    w0, 869b4 <CXHCIRootPort::Reset(unsigned int)+0x94>
   86978:   b9400a61    ldr w1, [x19, #8]
   8697c:   2a1403e4    mov w4, w20
   86980:   52800003    mov w3, #0x0
   86984:   52800202    mov w2, #0x10
   86988:   f9400e60    ldr x0, [x19, #24]
   8698c:   a94153f3    ldp x19, x20, [sp, #16]
   86990:   11010021    add w1, w1, #0x40
   86994:   a8c27bfd    ldp x29, x30, [sp], #32
   86998:   531c6c21    lsl w1, w1, #4
   8699c:   17fffc6d    b   85b50 <CXHCIMMIOSpace::op_wait32(unsigned int, unsigned int, unsigned int, unsigned int)>
   869a0:   2a0203e0    mov w0, w2
   869a4:   94008733    bl  a8670 <EnterCritical>
   869a8:   f9400e60    ldr x0, [x19, #24]
   869ac:   b9400a61    ldr w1, [x19, #8]
   869b0:   17ffffe8    b   86950 <CXHCIRootPort::Reset(unsigned int)+0x30>
   869b4:   9400875f    bl  a8730 <LeaveCritical>
   869b8:   17fffff0    b   86978 <CXHCIRootPort::Reset(unsigned int)+0x58>
   869bc:   b0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   869c0:   b0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   869c4:   913a4021    add x1, x1, #0xe90
   869c8:   912dc000    add x0, x0, #0xb70
   869cc:   528020a2    mov w2, #0x105
   869d0:   9400583c    bl  9cac0 <assertion_failed>
   869d4:   b0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   869d8:   b0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   869dc:   913a4021    add x1, x1, #0xe90
   869e0:   913aa000    add x0, x0, #0xea8
   869e4:   528020c2    mov w2, #0x106
   869e8:   94005836    bl  9cac0 <assertion_failed>
   869ec:   d503201f    nop

00000000000869f0 <CXHCIRootPort::WaitForU0State(unsigned int)>:
   869f0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   869f4:   aa0003e2    mov x2, x0
   869f8:   910003fd    mov x29, sp
   869fc:   f9400c00    ldr x0, [x0, #24]
   86a00:   b4000160    cbz x0, 86a2c <CXHCIRootPort::WaitForU0State(unsigned int)+0x3c>
   86a04:   b9400842    ldr w2, [x2, #8]
   86a08:   7100105f    cmp w2, #0x4
   86a0c:   540001c8    b.hi    86a44 <CXHCIRootPort::WaitForU0State(unsigned int)+0x54>
   86a10:   11010042    add w2, w2, #0x40
   86a14:   2a0103e4    mov w4, w1
   86a18:   a8c17bfd    ldp x29, x30, [sp], #16
   86a1c:   531c6c41    lsl w1, w2, #4
   86a20:   52800003    mov w3, #0x0
   86a24:   52803c02    mov w2, #0x1e0
   86a28:   17fffc4a    b   85b50 <CXHCIMMIOSpace::op_wait32(unsigned int, unsigned int, unsigned int, unsigned int)>
   86a2c:   b0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86a30:   b0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86a34:   913a4021    add x1, x1, #0xe90
   86a38:   912dc000    add x0, x0, #0xb70
   86a3c:   52802322    mov w2, #0x119
   86a40:   94005820    bl  9cac0 <assertion_failed>
   86a44:   b0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86a48:   b0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86a4c:   913a4021    add x1, x1, #0xe90
   86a50:   913aa000    add x0, x0, #0xea8
   86a54:   52802342    mov w2, #0x11a
   86a58:   9400581a    bl  9cac0 <assertion_failed>
   86a5c:   d503201f    nop

0000000000086a60 <CXHCIRootPort::PowerOffOnOverCurrent()>:
   86a60:   a9be7bfd    stp x29, x30, [sp, #-32]!
   86a64:   910003fd    mov x29, sp
   86a68:   f9000bf3    str x19, [sp, #16]
   86a6c:   aa0003f3    mov x19, x0
   86a70:   f9400c00    ldr x0, [x0, #24]
   86a74:   b4000480    cbz x0, 86b04 <CXHCIRootPort::PowerOffOnOverCurrent()+0xa4>
   86a78:   b9400a61    ldr w1, [x19, #8]
   86a7c:   7100103f    cmp w1, #0x4
   86a80:   540004e8    b.hi    86b1c <CXHCIRootPort::PowerOffOnOverCurrent()+0xbc>
   86a84:   b9402a62    ldr w2, [x19, #40]
   86a88:   350002a2    cbnz    w2, 86adc <CXHCIRootPort::PowerOffOnOverCurrent()+0x7c>
   86a8c:   52800002    mov w2, #0x0
   86a90:   97fffb80    bl  85890 <CXHCIMMIOSpace::pt_read32(unsigned int, unsigned int)>
   86a94:   371800e0    tbnz    w0, #3, 86ab0 <CXHCIRootPort::PowerOffOnOverCurrent()+0x50>
   86a98:   b9402a60    ldr w0, [x19, #40]
   86a9c:   350002a0    cbnz    w0, 86af0 <CXHCIRootPort::PowerOffOnOverCurrent()+0x90>
   86aa0:   52800000    mov w0, #0x0
   86aa4:   f9400bf3    ldr x19, [sp, #16]
   86aa8:   a8c27bfd    ldp x29, x30, [sp], #32
   86aac:   d65f03c0    ret
   86ab0:   12167803    and w3, w0, #0xfffffdff
   86ab4:   f9400e60    ldr x0, [x19, #24]
   86ab8:   52800002    mov w2, #0x0
   86abc:   b9400a61    ldr w1, [x19, #8]
   86ac0:   97fffbdc    bl  85a30 <CXHCIMMIOSpace::pt_write32(unsigned int, unsigned int, unsigned int)>
   86ac4:   b9402a60    ldr w0, [x19, #40]
   86ac8:   350001a0    cbnz    w0, 86afc <CXHCIRootPort::PowerOffOnOverCurrent()+0x9c>
   86acc:   f9400bf3    ldr x19, [sp, #16]
   86ad0:   52800020    mov w0, #0x1
   86ad4:   a8c27bfd    ldp x29, x30, [sp], #32
   86ad8:   d65f03c0    ret
   86adc:   2a0203e0    mov w0, w2
   86ae0:   940086e4    bl  a8670 <EnterCritical>
   86ae4:   f9400e60    ldr x0, [x19, #24]
   86ae8:   b9400a61    ldr w1, [x19, #8]
   86aec:   17ffffe8    b   86a8c <CXHCIRootPort::PowerOffOnOverCurrent()+0x2c>
   86af0:   94008710    bl  a8730 <LeaveCritical>
   86af4:   52800000    mov w0, #0x0
   86af8:   17ffffeb    b   86aa4 <CXHCIRootPort::PowerOffOnOverCurrent()+0x44>
   86afc:   9400870d    bl  a8730 <LeaveCritical>
   86b00:   17fffff3    b   86acc <CXHCIRootPort::PowerOffOnOverCurrent()+0x6c>
   86b04:   b0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86b08:   b0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86b0c:   913a4021    add x1, x1, #0xe90
   86b10:   912dc000    add x0, x0, #0xb70
   86b14:   528024c2    mov w2, #0x126
   86b18:   940057ea    bl  9cac0 <assertion_failed>
   86b1c:   b0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86b20:   b0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86b24:   913a4021    add x1, x1, #0xe90
   86b28:   913aa000    add x0, x0, #0xea8
   86b2c:   528024e2    mov w2, #0x127
   86b30:   940057e4    bl  9cac0 <assertion_failed>
   86b34:   d503201f    nop
   86b38:   d503201f    nop
   86b3c:   d503201f    nop

0000000000086b40 <CXHCIRootPort::Configure()>:
   86b40:   a9be7bfd    stp x29, x30, [sp, #-32]!
   86b44:   910003fd    mov x29, sp
   86b48:   a90153f3    stp x19, x20, [sp, #16]
   86b4c:   aa0003f3    mov x19, x0
   86b50:   f9401000    ldr x0, [x0, #32]
   86b54:   b4000460    cbz x0, 86be0 <CXHCIRootPort::Configure()+0xa0>
   86b58:   f9400001    ldr x1, [x0]
   86b5c:   f9400c21    ldr x1, [x1, #24]
   86b60:   d63f0020    blr x1
   86b64:   12001c14    and w20, w0, #0xff
   86b68:   36000220    tbz w0, #0, 86bac <CXHCIRootPort::Configure()+0x6c>
   86b6c:   aa1303e0    mov x0, x19
   86b70:   97ffffbc    bl  86a60 <CXHCIRootPort::PowerOffOnOverCurrent()>
   86b74:   37000400    tbnz    w0, #0, 86bf4 <CXHCIRootPort::Configure()+0xb4>
   86b78:   940062a2    bl  9f600 <CLogger::Get()>
   86b7c:   b9400a64    ldr w4, [x19, #8]
   86b80:   b0000143    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86b84:   d0000161    adrp    x1, b4000 <From+0x140>
   86b88:   91188063    add x3, x3, #0x620
   86b8c:   91068021    add x1, x1, #0x1a0
   86b90:   52800082    mov w2, #0x4
   86b94:   11000484    add w4, w4, #0x1
   86b98:   94006482    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   86b9c:   2a1403e0    mov w0, w20
   86ba0:   a94153f3    ldp x19, x20, [sp, #16]
   86ba4:   a8c27bfd    ldp x29, x30, [sp], #32
   86ba8:   d65f03c0    ret
   86bac:   94006295    bl  9f600 <CLogger::Get()>
   86bb0:   b0000143    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86bb4:   d0000161    adrp    x1, b4000 <From+0x140>
   86bb8:   913c4063    add x3, x3, #0xf10
   86bbc:   91068021    add x1, x1, #0x1a0
   86bc0:   52800042    mov w2, #0x2
   86bc4:   94006477    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   86bc8:   f9401260    ldr x0, [x19, #32]
   86bcc:   b4000080    cbz x0, 86bdc <CXHCIRootPort::Configure()+0x9c>
   86bd0:   f9400001    ldr x1, [x0]
   86bd4:   f9400421    ldr x1, [x1, #8]
   86bd8:   d63f0020    blr x1
   86bdc:   f900127f    str xzr, [x19, #32]
   86be0:   52800014    mov w20, #0x0
   86be4:   2a1403e0    mov w0, w20
   86be8:   a94153f3    ldp x19, x20, [sp, #16]
   86bec:   a8c27bfd    ldp x29, x30, [sp], #32
   86bf0:   d65f03c0    ret
   86bf4:   94006283    bl  9f600 <CLogger::Get()>
   86bf8:   b9400a64    ldr w4, [x19, #8]
   86bfc:   52800022    mov w2, #0x1
   86c00:   b0000143    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86c04:   d0000161    adrp    x1, b4000 <From+0x140>
   86c08:   913ca063    add x3, x3, #0xf28
   86c0c:   91068021    add x1, x1, #0x1a0
   86c10:   0b020084    add w4, w4, w2
   86c14:   94006463    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   86c18:   f9401260    ldr x0, [x19, #32]
   86c1c:   b4fffe00    cbz x0, 86bdc <CXHCIRootPort::Configure()+0x9c>
   86c20:   f9400001    ldr x1, [x0]
   86c24:   f9400421    ldr x1, [x1, #8]
   86c28:   d63f0020    blr x1
   86c2c:   17ffffec    b   86bdc <CXHCIRootPort::Configure()+0x9c>

0000000000086c30 <CXHCIRootPort::Initialize()>:
   86c30:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   86c34:   910003fd    mov x29, sp
   86c38:   a90153f3    stp x19, x20, [sp, #16]
   86c3c:   aa0003f3    mov x19, x0
   86c40:   97ffff1c    bl  868b0 <CXHCIRootPort::IsConnected()>
   86c44:   36000480    tbz w0, #0, 86cd4 <CXHCIRootPort::Initialize()+0xa4>
   86c48:   b9400a60    ldr w0, [x19, #8]
   86c4c:   7100101f    cmp w0, #0x4
   86c50:   54000768    b.hi    86d3c <CXHCIRootPort::Initialize()+0x10c>
   86c54:   5290d401    mov w1, #0x86a0
   86c58:   72a00021    movk    w1, #0x1, lsl #16
   86c5c:   34000460    cbz w0, 86ce8 <CXHCIRootPort::Initialize()+0xb8>
   86c60:   aa1303e0    mov x0, x19
   86c64:   97ffff63    bl  869f0 <CXHCIRootPort::WaitForU0State(unsigned int)>
   86c68:   36000780    tbz w0, #0, 86d58 <CXHCIRootPort::Initialize()+0x128>
   86c6c:   f9401260    ldr x0, [x19, #32]
   86c70:   f90013f5    str x21, [sp, #32]
   86c74:   b50009e0    cbnz    x0, 86db0 <CXHCIRootPort::Initialize()+0x180>
   86c78:   d2803b00    mov x0, #0x1d8
   86c7c:   940082d1    bl  a77c0 <operator new(unsigned long)>
   86c80:   f9400a75    ldr x21, [x19, #16]
   86c84:   aa0003f4    mov x20, x0
   86c88:   aa1303e0    mov x0, x19
   86c8c:   97fffe81    bl  86690 <CXHCIRootPort::GetPortSpeed()>
   86c90:   2a0003e2    mov w2, w0
   86c94:   aa1303e3    mov x3, x19
   86c98:   aa1403e0    mov x0, x20
   86c9c:   aa1503e1    mov x1, x21
   86ca0:   94000280    bl  876a0 <CXHCIUSBDevice::CXHCIUSBDevice(CXHCIDevice*, TUSBSpeed, CXHCIRootPort*)>
   86ca4:   aa1403e0    mov x0, x20
   86ca8:   f9001274    str x20, [x19, #32]
   86cac:   94000451    bl  87df0 <CXHCIUSBDevice::Initialize()>
   86cb0:   12001c14    and w20, w0, #0xff
   86cb4:   37000340    tbnz    w0, #0, 86d1c <CXHCIRootPort::Initialize()+0xec>
   86cb8:   f9401260    ldr x0, [x19, #32]
   86cbc:   b4000080    cbz x0, 86ccc <CXHCIRootPort::Initialize()+0x9c>
   86cc0:   f9400001    ldr x1, [x0]
   86cc4:   f9400421    ldr x1, [x1, #8]
   86cc8:   d63f0020    blr x1
   86ccc:   f94013f5    ldr x21, [sp, #32]
   86cd0:   f900127f    str xzr, [x19, #32]
   86cd4:   52800014    mov w20, #0x0
   86cd8:   2a1403e0    mov w0, w20
   86cdc:   a94153f3    ldp x19, x20, [sp, #16]
   86ce0:   a8c37bfd    ldp x29, x30, [sp], #48
   86ce4:   d65f03c0    ret
   86ce8:   aa1303e0    mov x0, x19
   86cec:   97ffff0d    bl  86920 <CXHCIRootPort::Reset(unsigned int)>
   86cf0:   3707fbe0    tbnz    w0, #0, 86c6c <CXHCIRootPort::Initialize()+0x3c>
   86cf4:   94006243    bl  9f600 <CLogger::Get()>
   86cf8:   b9400a64    ldr w4, [x19, #8]
   86cfc:   b0000143    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86d00:   d0000161    adrp    x1, b4000 <From+0x140>
   86d04:   913d2063    add x3, x3, #0xf48
   86d08:   91068021    add x1, x1, #0x1a0
   86d0c:   52800042    mov w2, #0x2
   86d10:   11000484    add w4, w4, #0x1
   86d14:   94006423    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   86d18:   17ffffef    b   86cd4 <CXHCIRootPort::Initialize()+0xa4>
   86d1c:   aa1303e0    mov x0, x19
   86d20:   97ffff50    bl  86a60 <CXHCIRootPort::PowerOffOnOverCurrent()>
   86d24:   370002e0    tbnz    w0, #0, 86d80 <CXHCIRootPort::Initialize()+0x150>
   86d28:   f94013f5    ldr x21, [sp, #32]
   86d2c:   2a1403e0    mov w0, w20
   86d30:   a94153f3    ldp x19, x20, [sp, #16]
   86d34:   a8c37bfd    ldp x29, x30, [sp], #48
   86d38:   d65f03c0    ret
   86d3c:   b0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86d40:   b0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86d44:   f90013f5    str x21, [sp, #32]
   86d48:   913a4021    add x1, x1, #0xe90
   86d4c:   913aa000    add x0, x0, #0xea8
   86d50:   52800682    mov w2, #0x34
   86d54:   9400575b    bl  9cac0 <assertion_failed>
   86d58:   9400622a    bl  9f600 <CLogger::Get()>
   86d5c:   b9400a64    ldr w4, [x19, #8]
   86d60:   b0000143    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86d64:   d0000161    adrp    x1, b4000 <From+0x140>
   86d68:   913d8063    add x3, x3, #0xf60
   86d6c:   91068021    add x1, x1, #0x1a0
   86d70:   52800042    mov w2, #0x2
   86d74:   11000484    add w4, w4, #0x1
   86d78:   9400640a    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   86d7c:   17ffffd6    b   86cd4 <CXHCIRootPort::Initialize()+0xa4>
   86d80:   94006220    bl  9f600 <CLogger::Get()>
   86d84:   b9400a64    ldr w4, [x19, #8]
   86d88:   52800022    mov w2, #0x1
   86d8c:   b0000143    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86d90:   d0000161    adrp    x1, b4000 <From+0x140>
   86d94:   913ca063    add x3, x3, #0xf28
   86d98:   91068021    add x1, x1, #0x1a0
   86d9c:   0b020084    add w4, w4, w2
   86da0:   94006400    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   86da4:   f9401260    ldr x0, [x19, #32]
   86da8:   b5fff8c0    cbnz    x0, 86cc0 <CXHCIRootPort::Initialize()+0x90>
   86dac:   17ffffc8    b   86ccc <CXHCIRootPort::Initialize()+0x9c>
   86db0:   b0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86db4:   b0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86db8:   913a4021    add x1, x1, #0xe90
   86dbc:   913de000    add x0, x0, #0xf78
   86dc0:   52800942    mov w2, #0x4a
   86dc4:   9400573f    bl  9cac0 <assertion_failed>
   86dc8:   d503201f    nop
   86dcc:   d503201f    nop

0000000000086dd0 <CXHCIRootPort::ReScanDevices()>:
   86dd0:   f9401001    ldr x1, [x0, #32]
   86dd4:   b4000061    cbz x1, 86de0 <CXHCIRootPort::ReScanDevices()+0x10>
   86dd8:   aa0103e0    mov x0, x1
   86ddc:   140004e5    b   88170 <CUSBDevice::ReScanDevices()>
   86de0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   86de4:   910003fd    mov x29, sp
   86de8:   f9000bf3    str x19, [sp, #16]
   86dec:   aa0003f3    mov x19, x0
   86df0:   97ffff90    bl  86c30 <CXHCIRootPort::Initialize()>
   86df4:   37000080    tbnz    w0, #0, 86e04 <CXHCIRootPort::ReScanDevices()+0x34>
   86df8:   f9400bf3    ldr x19, [sp, #16]
   86dfc:   a8c27bfd    ldp x29, x30, [sp], #32
   86e00:   d65f03c0    ret
   86e04:   aa1303e0    mov x0, x19
   86e08:   f9400bf3    ldr x19, [sp, #16]
   86e0c:   a8c27bfd    ldp x29, x30, [sp], #32
   86e10:   17ffff4c    b   86b40 <CXHCIRootPort::Configure()>
   86e14:   d503201f    nop
   86e18:   d503201f    nop
   86e1c:   d503201f    nop

0000000000086e20 <CXHCIRootPort::HandlePortStatusChange()>:
   86e20:   a9be7bfd    stp x29, x30, [sp, #-32]!
   86e24:   910003fd    mov x29, sp
   86e28:   f9000bf3    str x19, [sp, #16]
   86e2c:   aa0003f3    mov x19, x0
   86e30:   97fffea0    bl  868b0 <CXHCIRootPort::IsConnected()>
   86e34:   360000c0    tbz w0, #0, 86e4c <CXHCIRootPort::HandlePortStatusChange()+0x2c>
   86e38:   f9401260    ldr x0, [x19, #32]
   86e3c:   b4000260    cbz x0, 86e88 <CXHCIRootPort::HandlePortStatusChange()+0x68>
   86e40:   f9400bf3    ldr x19, [sp, #16]
   86e44:   a8c27bfd    ldp x29, x30, [sp], #32
   86e48:   d65f03c0    ret
   86e4c:   f9401260    ldr x0, [x19, #32]
   86e50:   b4ffff80    cbz x0, 86e40 <CXHCIRootPort::HandlePortStatusChange()+0x20>
   86e54:   f9400262    ldr x2, [x19]
   86e58:   90000001    adrp    x1, 86000 <CXHCIRing::IncrementDequeue()+0xa0>
   86e5c:   91154021    add x1, x1, #0x550
   86e60:   f9400c42    ldr x2, [x2, #24]
   86e64:   eb01005f    cmp x2, x1
   86e68:   540002a1    b.ne    86ebc <CXHCIRootPort::HandlePortStatusChange()+0x9c>
   86e6c:   f9400001    ldr x1, [x0]
   86e70:   f9400421    ldr x1, [x1, #8]
   86e74:   d63f0020    blr x1
   86e78:   f900127f    str xzr, [x19, #32]
   86e7c:   f9400bf3    ldr x19, [sp, #16]
   86e80:   a8c27bfd    ldp x29, x30, [sp], #32
   86e84:   d65f03c0    ret
   86e88:   f9400261    ldr x1, [x19]
   86e8c:   90000000    adrp    x0, 86000 <CXHCIRing::IncrementDequeue()+0xa0>
   86e90:   91374000    add x0, x0, #0xdd0
   86e94:   f9400821    ldr x1, [x1, #16]
   86e98:   eb00003f    cmp x1, x0
   86e9c:   aa1303e0    mov x0, x19
   86ea0:   54000181    b.ne    86ed0 <CXHCIRootPort::HandlePortStatusChange()+0xb0>
   86ea4:   97ffff63    bl  86c30 <CXHCIRootPort::Initialize()>
   86ea8:   3607fcc0    tbz w0, #0, 86e40 <CXHCIRootPort::HandlePortStatusChange()+0x20>
   86eac:   aa1303e0    mov x0, x19
   86eb0:   f9400bf3    ldr x19, [sp, #16]
   86eb4:   a8c27bfd    ldp x29, x30, [sp], #32
   86eb8:   17ffff22    b   86b40 <CXHCIRootPort::Configure()>
   86ebc:   aa1303e0    mov x0, x19
   86ec0:   f9400bf3    ldr x19, [sp, #16]
   86ec4:   aa0203f0    mov x16, x2
   86ec8:   a8c27bfd    ldp x29, x30, [sp], #32
   86ecc:   d61f0200    br  x16
   86ed0:   f9400bf3    ldr x19, [sp, #16]
   86ed4:   aa0103f0    mov x16, x1
   86ed8:   a8c27bfd    ldp x29, x30, [sp], #32
   86edc:   d61f0200    br  x16

0000000000086ee0 <CXHCISharedMemAllocator::CXHCISharedMemAllocator(unsigned long, unsigned long)>:
   86ee0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   86ee4:   910003fd    mov x29, sp
   86ee8:   a9000801    stp x1, x2, [x0]
   86eec:   f900081f    str xzr, [x0, #16]
   86ef0:   b40000a1    cbz x1, 86f04 <CXHCISharedMemAllocator::CXHCISharedMemAllocator(unsigned long, unsigned long)+0x24>
   86ef4:   eb02003f    cmp x1, x2
   86ef8:   54000122    b.cs    86f1c <CXHCISharedMemAllocator::CXHCISharedMemAllocator(unsigned long, unsigned long)+0x3c>
   86efc:   a8c17bfd    ldp x29, x30, [sp], #16
   86f00:   d65f03c0    ret
   86f04:   b0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86f08:   b0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86f0c:   913e4021    add x1, x1, #0xf90
   86f10:   913ec000    add x0, x0, #0xfb0
   86f14:   528003e2    mov w2, #0x1f
   86f18:   940056ea    bl  9cac0 <assertion_failed>
   86f1c:   b0000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86f20:   b0000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   86f24:   913e4021    add x1, x1, #0xf90
   86f28:   913f2000    add x0, x0, #0xfc8
   86f2c:   52800402    mov w2, #0x20
   86f30:   940056e4    bl  9cac0 <assertion_failed>
   86f34:   d503201f    nop
   86f38:   d503201f    nop
   86f3c:   d503201f    nop

0000000000086f40 <CXHCISharedMemAllocator::~CXHCISharedMemAllocator()>:
   86f40:   d65f03c0    ret
   86f44:   d503201f    nop
   86f48:   d503201f    nop
   86f4c:   d503201f    nop

0000000000086f50 <CXHCISharedMemAllocator::GetFreeSpace() const>:
   86f50:   a9400001    ldp x1, x0, [x0]
   86f54:   eb010000    subs    x0, x0, x1
   86f58:   9a9f8000    csel    x0, x0, xzr, hi
   86f5c:   d65f03c0    ret

0000000000086f60 <CXHCISharedMemAllocator::Allocate(unsigned long, unsigned long, unsigned long)>:
   86f60:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   86f64:   910003fd    mov x29, sp
   86f68:   b4000941    cbz x1, 87090 <CXHCISharedMemAllocator::Allocate(unsigned long, unsigned long, unsigned long)+0x130>
   86f6c:   b40009e2    cbz x2, 870a8 <CXHCISharedMemAllocator::Allocate(unsigned long, unsigned long, unsigned long)+0x148>
   86f70:   eb03005f    cmp x2, x3
   86f74:   54000aa8    b.hi    870c8 <CXHCISharedMemAllocator::Allocate(unsigned long, unsigned long, unsigned long)+0x168>
   86f78:   f9400004    ldr x4, [x0]
   86f7c:   aa0003e5    mov x5, x0
   86f80:   b4000b04    cbz x4, 870e0 <CXHCISharedMemAllocator::Allocate(unsigned long, unsigned long, unsigned long)+0x180>
   86f84:   f9400408    ldr x8, [x0, #8]
   86f88:   b4000b88    cbz x8, 870f8 <CXHCISharedMemAllocator::Allocate(unsigned long, unsigned long, unsigned long)+0x198>
   86f8c:   f140407f    cmp x3, #0x10, lsl #12
   86f90:   d2800806    mov x6, #0x40
   86f94:   fa469042    ccmp    x2, x6, #0x2, ls
   86f98:   d2810000    mov x0, #0x800
   86f9c:   fa409022    ccmp    x1, x0, #0x2, ls
   86fa0:   d1000447    sub x7, x2, #0x1
   86fa4:   cb0303e9    neg x9, x3
   86fa8:   540003c9    b.ls    87020 <CXHCISharedMemAllocator::Allocate(unsigned long, unsigned long, unsigned long)+0xc0>
   86fac:   91006084    add x4, x4, #0x18
   86fb0:   cb0203e6    neg x6, x2
   86fb4:   8b0400e0    add x0, x7, x4
   86fb8:   ea0400ff    tst x7, x4
   86fbc:   8a060000    and x0, x0, x6
   86fc0:   9a800084    csel    x4, x4, x0, eq
   86fc4:   d1000480    sub x0, x4, #0x1
   86fc8:   8b010006    add x6, x0, x1
   86fcc:   8b030000    add x0, x0, x3
   86fd0:   ca0400c6    eor x6, x6, x4
   86fd4:   8a090000    and x0, x0, x9
   86fd8:   ea0900df    tst x6, x9
   86fdc:   9a841004    csel    x4, x0, x4, ne
   86fe0:   8b010080    add x0, x4, x1
   86fe4:   eb00011f    cmp x8, x0
   86fe8:   d1006086    sub x6, x4, #0x18
   86fec:   f90000a0    str x0, [x5]
   86ff0:   54000683    b.cc    870c0 <CXHCISharedMemAllocator::Allocate(unsigned long, unsigned long, unsigned long)+0x160>
   86ff4:   52886925    mov w5, #0x4349
   86ff8:   72ab0905    movk    w5, #0x5848, lsl #16
   86ffc:   ea07009f    tst x4, x7
   87000:   aa0403e0    mov x0, x4
   87004:   b81e8085    stur    w5, [x4, #-24]
   87008:   290088c1    stp w1, w2, [x6, #4]
   8700c:   b9000cc3    str w3, [x6, #12]
   87010:   f90008df    str xzr, [x6, #16]
   87014:   540008a1    b.ne    87128 <CXHCISharedMemAllocator::Allocate(unsigned long, unsigned long, unsigned long)+0x1c8>
   87018:   a8c17bfd    ldp x29, x30, [sp], #16
   8701c:   d65f03c0    ret
   87020:   f94008a1    ldr x1, [x5, #16]
   87024:   b4000761    cbz x1, 87110 <CXHCISharedMemAllocator::Allocate(unsigned long, unsigned long, unsigned long)+0x1b0>
   87028:   b9400022    ldr w2, [x1]
   8702c:   52886920    mov w0, #0x4349
   87030:   72ab0900    movk    w0, #0x5848, lsl #16
   87034:   6b00005f    cmp w2, w0
   87038:   54000841    b.ne    87140 <CXHCISharedMemAllocator::Allocate(unsigned long, unsigned long, unsigned long)+0x1e0>
   8703c:   b9400420    ldr w0, [x1, #4]
   87040:   7120001f    cmp w0, #0x800
   87044:   540008a1    b.ne    87158 <CXHCISharedMemAllocator::Allocate(unsigned long, unsigned long, unsigned long)+0x1f8>
   87048:   b9400820    ldr w0, [x1, #8]
   8704c:   7101001f    cmp w0, #0x40
   87050:   54000901    b.ne    87170 <CXHCISharedMemAllocator::Allocate(unsigned long, unsigned long, unsigned long)+0x210>
   87054:   b9400c20    ldr w0, [x1, #12]
   87058:   7140401f    cmp w0, #0x10, lsl #12
   8705c:   54000961    b.ne    87188 <CXHCISharedMemAllocator::Allocate(unsigned long, unsigned long, unsigned long)+0x228>
   87060:   f9400822    ldr x2, [x1, #16]
   87064:   91006020    add x0, x1, #0x18
   87068:   f240141f    tst x0, #0x3f
   8706c:   f90008a2    str x2, [x5, #16]
   87070:   f900083f    str xzr, [x1, #16]
   87074:   54fffd20    b.eq    87018 <CXHCISharedMemAllocator::Allocate(unsigned long, unsigned long, unsigned long)+0xb8>
   87078:   90000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8707c:   b0000140    adrp    x0, b0000 <_etext+0xf9c>
   87080:   913e4021    add x1, x1, #0xf90
   87084:   91038000    add x0, x0, #0xe0
   87088:   52800902    mov w2, #0x48
   8708c:   9400568d    bl  9cac0 <assertion_failed>
   87090:   90000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   87094:   90000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   87098:   913e4021    add x1, x1, #0xf90
   8709c:   913f8000    add x0, x0, #0xfe0
   870a0:   52800642    mov w2, #0x32
   870a4:   94005687    bl  9cac0 <assertion_failed>
   870a8:   90000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   870ac:   90000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   870b0:   913e4021    add x1, x1, #0xf90
   870b4:   913fc000    add x0, x0, #0xff0
   870b8:   52800662    mov w2, #0x33
   870bc:   94005681    bl  9cac0 <assertion_failed>
   870c0:   d2800000    mov x0, #0x0
   870c4:   17ffffd5    b   87018 <CXHCISharedMemAllocator::Allocate(unsigned long, unsigned long, unsigned long)+0xb8>
   870c8:   90000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   870cc:   b0000140    adrp    x0, b0000 <_etext+0xf9c>
   870d0:   913e4021    add x1, x1, #0xf90
   870d4:   91000000    add x0, x0, #0x0
   870d8:   52800682    mov w2, #0x34
   870dc:   94005679    bl  9cac0 <assertion_failed>
   870e0:   90000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   870e4:   90000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   870e8:   913e4021    add x1, x1, #0xf90
   870ec:   913ec000    add x0, x0, #0xfb0
   870f0:   528006a2    mov w2, #0x35
   870f4:   94005673    bl  9cac0 <assertion_failed>
   870f8:   90000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   870fc:   b0000140    adrp    x0, b0000 <_etext+0xf9c>
   87100:   913e4021    add x1, x1, #0xf90
   87104:   91006000    add x0, x0, #0x18
   87108:   528006c2    mov w2, #0x36
   8710c:   9400566d    bl  9cac0 <assertion_failed>
   87110:   aa0603e2    mov x2, x6
   87114:   aa0003e1    mov x1, x0
   87118:   929fffe9    mov x9, #0xffffffffffff0000
   8711c:   d28007e7    mov x7, #0x3f
   87120:   d2a00023    mov x3, #0x10000
   87124:   17ffffa2    b   86fac <CXHCISharedMemAllocator::Allocate(unsigned long, unsigned long, unsigned long)+0x4c>
   87128:   90000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8712c:   b0000140    adrp    x0, b0000 <_etext+0xf9c>
   87130:   913e4021    add x1, x1, #0xf90
   87134:   91044000    add x0, x0, #0x110
   87138:   52800e82    mov w2, #0x74
   8713c:   94005661    bl  9cac0 <assertion_failed>
   87140:   90000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   87144:   b0000140    adrp    x0, b0000 <_etext+0xf9c>
   87148:   913e4021    add x1, x1, #0xf90
   8714c:   9100a000    add x0, x0, #0x28
   87150:   528007e2    mov w2, #0x3f
   87154:   9400565b    bl  9cac0 <assertion_failed>
   87158:   90000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8715c:   b0000140    adrp    x0, b0000 <_etext+0xf9c>
   87160:   2a0603e2    mov w2, w6
   87164:   913e4021    add x1, x1, #0xf90
   87168:   91016000    add x0, x0, #0x58
   8716c:   94005655    bl  9cac0 <assertion_failed>
   87170:   90000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   87174:   b0000140    adrp    x0, b0000 <_etext+0xf9c>
   87178:   913e4021    add x1, x1, #0xf90
   8717c:   91020000    add x0, x0, #0x80
   87180:   52800822    mov w2, #0x41
   87184:   9400564f    bl  9cac0 <assertion_failed>
   87188:   90000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8718c:   b0000140    adrp    x0, b0000 <_etext+0xf9c>
   87190:   913e4021    add x1, x1, #0xf90
   87194:   9102c000    add x0, x0, #0xb0
   87198:   52800842    mov w2, #0x42
   8719c:   94005649    bl  9cac0 <assertion_failed>

00000000000871a0 <CXHCISharedMemAllocator::Free(void*)>:
   871a0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   871a4:   910003fd    mov x29, sp
   871a8:   a90153f3    stp x19, x20, [sp, #16]
   871ac:   b4000421    cbz x1, 87230 <CXHCISharedMemAllocator::Free(void*)+0x90>
   871b0:   aa0103f3    mov x19, x1
   871b4:   52886921    mov w1, #0x4349
   871b8:   72ab0901    movk    w1, #0x5848, lsl #16
   871bc:   b85e8262    ldur    w2, [x19, #-24]
   871c0:   d1006274    sub x20, x19, #0x18
   871c4:   6b01005f    cmp w2, w1
   871c8:   54000401    b.ne    87248 <CXHCISharedMemAllocator::Free(void*)+0xa8>
   871cc:   b9400681    ldr w1, [x20, #4]
   871d0:   7120003f    cmp w1, #0x800
   871d4:   540000c1    b.ne    871ec <CXHCISharedMemAllocator::Free(void*)+0x4c>
   871d8:   f9400682    ldr x2, [x20, #8]
   871dc:   d2800801    mov x1, #0x40
   871e0:   f2e00021    movk    x1, #0x1, lsl #48
   871e4:   eb01005f    cmp x2, x1
   871e8:   54000180    b.eq    87218 <CXHCISharedMemAllocator::Free(void*)+0x78>
   871ec:   94006105    bl  9f600 <CLogger::Get()>
   871f0:   b0000143    adrp    x3, b0000 <_etext+0xf9c>
   871f4:   b0000161    adrp    x1, b4000 <From+0x140>
   871f8:   29409a85    ldp w5, w6, [x20, #4]
   871fc:   aa1303e4    mov x4, x19
   87200:   a94153f3    ldp x19, x20, [sp, #16]
   87204:   91052063    add x3, x3, #0x148
   87208:   9106c021    add x1, x1, #0x1b0
   8720c:   52800042    mov w2, #0x2
   87210:   a8c27bfd    ldp x29, x30, [sp], #32
   87214:   140062e3    b   9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   87218:   f9400801    ldr x1, [x0, #16]
   8721c:   f9000a81    str x1, [x20, #16]
   87220:   f9000814    str x20, [x0, #16]
   87224:   a94153f3    ldp x19, x20, [sp, #16]
   87228:   a8c27bfd    ldp x29, x30, [sp], #32
   8722c:   d65f03c0    ret
   87230:   90000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   87234:   b0000140    adrp    x0, b0000 <_etext+0xf9c>
   87238:   913e4021    add x1, x1, #0xf90
   8723c:   9104e000    add x0, x0, #0x138
   87240:   52800f62    mov w2, #0x7b
   87244:   9400561f    bl  9cac0 <assertion_failed>
   87248:   90000141    adrp    x1, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8724c:   b0000140    adrp    x0, b0000 <_etext+0xf9c>
   87250:   913e4021    add x1, x1, #0xf90
   87254:   9100a000    add x0, x0, #0x28
   87258:   52800fe2    mov w2, #0x7f
   8725c:   94005619    bl  9cac0 <assertion_failed>

0000000000087260 <CXHCISlotManager::CXHCISlotManager(CXHCIDevice*)>:
   87260:   a9be7bfd    stp x29, x30, [sp, #-32]!
   87264:   910003fd    mov x29, sp
   87268:   a90153f3    stp x19, x20, [sp, #16]
   8726c:   aa0003f3    mov x19, x0
   87270:   aa0103e0    mov x0, x1
   87274:   f9000261    str x1, [x19]
   87278:   97fff06a    bl  83420 <CXHCIDevice::GetMMIOSpace()>
   8727c:   91006261    add x1, x19, #0x18
   87280:   aa0003f4    mov x20, x0
   87284:   a900fe60    stp x0, xzr, [x19, #8]
   87288:   91046262    add x2, x19, #0x118
   8728c:   d503201f    nop
   87290:   f800843f    str xzr, [x1], #8
   87294:   eb02003f    cmp x1, x2
   87298:   54ffffc1    b.ne    87290 <CXHCISlotManager::CXHCISlotManager(CXHCIDevice*)+0x30>
   8729c:   52800701    mov w1, #0x38
   872a0:   aa1403e0    mov x0, x20
   872a4:   97fff96b    bl  85850 <CXHCIMMIOSpace::op_read32(unsigned int)>
   872a8:   12185c02    and w2, w0, #0xffffff00
   872ac:   52800701    mov w1, #0x38
   872b0:   aa1403e0    mov x0, x20
   872b4:   321b0042    orr w2, w2, #0x20
   872b8:   97fff9be    bl  859b0 <CXHCIMMIOSpace::op_write32(unsigned int, unsigned int)>
   872bc:   f9400260    ldr x0, [x19]
   872c0:   d2820003    mov x3, #0x1000
   872c4:   d2800802    mov x2, #0x40
   872c8:   d2802101    mov x1, #0x108
   872cc:   97fff085    bl  834e0 <CXHCIDevice::AllocateSharedMem(unsigned long, unsigned long, unsigned long)>
   872d0:   f9000a60    str x0, [x19, #16]
   872d4:   b4000120    cbz x0, 872f8 <CXHCISlotManager::CXHCISlotManager(CXHCIDevice*)+0x98>
   872d8:   f0000183    adrp    x3, ba000 <font_data+0x1080>
   872dc:   52800601    mov w1, #0x30
   872e0:   f9458863    ldr x3, [x3, #2832]
   872e4:   aa030002    orr x2, x0, x3
   872e8:   f9400660    ldr x0, [x19, #8]
   872ec:   a94153f3    ldp x19, x20, [sp, #16]
   872f0:   a8c27bfd    ldp x29, x30, [sp], #32
   872f4:   17fff9f3    b   85ac0 <CXHCIMMIOSpace::op_write64(unsigned int, unsigned long)>
   872f8:   a94153f3    ldp x19, x20, [sp, #16]
   872fc:   a8c27bfd    ldp x29, x30, [sp], #32
   87300:   d65f03c0    ret
   87304:   d503201f    nop
   87308:   d503201f    nop
   8730c:   d503201f    nop

0000000000087310 <CXHCISlotManager::~CXHCISlotManager()>:
   87310:   91006001    add x1, x0, #0x18
   87314:   91046002    add x2, x0, #0x118
   87318:   f800843f    str xzr, [x1], #8
   8731c:   eb02003f    cmp x1, x2
   87320:   54ffffc1    b.ne    87318 <CXHCISlotManager::~CXHCISlotManager()+0x8>
   87324:   f9400801    ldr x1, [x0, #16]
   87328:   b4000061    cbz x1, 87334 <CXHCISlotManager::~CXHCISlotManager()+0x24>
   8732c:   f9400000    ldr x0, [x0]
   87330:   17fff088    b   83550 <CXHCIDevice::FreeSharedMem(void*)>
   87334:   d65f03c0    ret
   87338:   d503201f    nop
   8733c:   d503201f    nop

0000000000087340 <CXHCISlotManager::IsValid()>:
   87340:   f9400800    ldr x0, [x0, #16]
   87344:   f100001f    cmp x0, #0x0
   87348:   1a9f07e0    cset    w0, ne
   8734c:   d65f03c0    ret

0000000000087350 <CXHCISlotManager::AssignDevice(unsigned char, CXHCIUSBDevice*)>:
   87350:   12001c21    and w1, w1, #0xff
   87354:   a9be7bfd    stp x29, x30, [sp, #-32]!
   87358:   910003fd    mov x29, sp
   8735c:   51000423    sub w3, w1, #0x1
   87360:   12001c63    and w3, w3, #0xff
   87364:   71007c7f    cmp w3, #0x1f
   87368:   a90153f3    stp x19, x20, [sp, #16]
   8736c:   540002c8    b.hi    873c4 <CXHCISlotManager::AssignDevice(unsigned char, CXHCIUSBDevice*)+0x74>
   87370:   aa0003f4    mov x20, x0
   87374:   aa0203e0    mov x0, x2
   87378:   b4000322    cbz x2, 873dc <CXHCISlotManager::AssignDevice(unsigned char, CXHCIUSBDevice*)+0x8c>
   8737c:   8b210e82    add x2, x20, w1, uxtb #3
   87380:   f9400843    ldr x3, [x2, #16]
   87384:   2a0103f3    mov w19, w1
   87388:   b5000363    cbnz    x3, 873f4 <CXHCISlotManager::AssignDevice(unsigned char, CXHCIUSBDevice*)+0xa4>
   8738c:   f9000840    str x0, [x2, #16]
   87390:   94000110    bl  877d0 <CXHCIUSBDevice::GetDeviceContext()>
   87394:   b40003c0    cbz x0, 8740c <CXHCISlotManager::AssignDevice(unsigned char, CXHCIUSBDevice*)+0xbc>
   87398:   f9400a81    ldr x1, [x20, #16]
   8739c:   b4000441    cbz x1, 87424 <CXHCISlotManager::AssignDevice(unsigned char, CXHCIUSBDevice*)+0xd4>
   873a0:   f8737822    ldr x2, [x1, x19, lsl #3]
   873a4:   b50004c2    cbnz    x2, 8743c <CXHCISlotManager::AssignDevice(unsigned char, CXHCIUSBDevice*)+0xec>
   873a8:   f0000182    adrp    x2, ba000 <font_data+0x1080>
   873ac:   f9458842    ldr x2, [x2, #2832]
   873b0:   aa020000    orr x0, x0, x2
   873b4:   f8337820    str x0, [x1, x19, lsl #3]
   873b8:   a94153f3    ldp x19, x20, [sp, #16]
   873bc:   a8c27bfd    ldp x29, x30, [sp], #32
   873c0:   d65f03c0    ret
   873c4:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   873c8:   b0000140    adrp    x0, b0000 <_etext+0xf9c>
   873cc:   91062021    add x1, x1, #0x188
   873d0:   91068000    add x0, x0, #0x1a0
   873d4:   52800942    mov w2, #0x4a
   873d8:   940055ba    bl  9cac0 <assertion_failed>
   873dc:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   873e0:   b0000140    adrp    x0, b0000 <_etext+0xf9c>
   873e4:   91062021    add x1, x1, #0x188
   873e8:   91070000    add x0, x0, #0x1c0
   873ec:   52800982    mov w2, #0x4c
   873f0:   940055b4    bl  9cac0 <assertion_failed>
   873f4:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   873f8:   b0000140    adrp    x0, b0000 <_etext+0xf9c>
   873fc:   91062021    add x1, x1, #0x188
   87400:   91074000    add x0, x0, #0x1d0
   87404:   528009a2    mov w2, #0x4d
   87408:   940055ae    bl  9cac0 <assertion_failed>
   8740c:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   87410:   b0000140    adrp    x0, b0000 <_etext+0xf9c>
   87414:   91062021    add x1, x1, #0x188
   87418:   9107c000    add x0, x0, #0x1f0
   8741c:   52800a22    mov w2, #0x51
   87420:   940055a8    bl  9cac0 <assertion_failed>
   87424:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   87428:   b0000140    adrp    x0, b0000 <_etext+0xf9c>
   8742c:   91062021    add x1, x1, #0x188
   87430:   91082000    add x0, x0, #0x208
   87434:   52800a42    mov w2, #0x52
   87438:   940055a2    bl  9cac0 <assertion_failed>
   8743c:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   87440:   b0000140    adrp    x0, b0000 <_etext+0xf9c>
   87444:   91062021    add x1, x1, #0x188
   87448:   91086000    add x0, x0, #0x218
   8744c:   52800a62    mov w2, #0x53
   87450:   9400559c    bl  9cac0 <assertion_failed>
   87454:   d503201f    nop
   87458:   d503201f    nop
   8745c:   d503201f    nop

0000000000087460 <CXHCISlotManager::FreeSlot(unsigned char)>:
   87460:   92401c21    and x1, x1, #0xff
   87464:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   87468:   910003fd    mov x29, sp
   8746c:   51000422    sub w2, w1, #0x1
   87470:   12001c43    and w3, w2, #0xff
   87474:   71007c7f    cmp w3, #0x1f
   87478:   54000108    b.hi    87498 <CXHCISlotManager::FreeSlot(unsigned char)+0x38>
   8747c:   f9400803    ldr x3, [x0, #16]
   87480:   8b22cc02    add x2, x0, w2, sxtw #3
   87484:   f9000c5f    str xzr, [x2, #24]
   87488:   b4000143    cbz x3, 874b0 <CXHCISlotManager::FreeSlot(unsigned char)+0x50>
   8748c:   f821787f    str xzr, [x3, x1, lsl #3]
   87490:   a8c17bfd    ldp x29, x30, [sp], #16
   87494:   d65f03c0    ret
   87498:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   8749c:   b0000140    adrp    x0, b0000 <_etext+0xf9c>
   874a0:   91062021    add x1, x1, #0x188
   874a4:   91068000    add x0, x0, #0x1a0
   874a8:   52800b22    mov w2, #0x59
   874ac:   94005585    bl  9cac0 <assertion_failed>
   874b0:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   874b4:   b0000140    adrp    x0, b0000 <_etext+0xf9c>
   874b8:   91062021    add x1, x1, #0x188
   874bc:   91082000    add x0, x0, #0x208
   874c0:   52800b82    mov w2, #0x5c
   874c4:   9400557f    bl  9cac0 <assertion_failed>
   874c8:   d503201f    nop
   874cc:   d503201f    nop

00000000000874d0 <CXHCISlotManager::AssignScratchpadBufferArray(unsigned long*)>:
   874d0:   b40000e1    cbz x1, 874ec <CXHCISlotManager::AssignScratchpadBufferArray(unsigned long*)+0x1c>
   874d4:   f0000182    adrp    x2, ba000 <font_data+0x1080>
   874d8:   f9400800    ldr x0, [x0, #16]
   874dc:   f9458842    ldr x2, [x2, #2832]
   874e0:   aa020021    orr x1, x1, x2
   874e4:   f9000001    str x1, [x0]
   874e8:   d65f03c0    ret
   874ec:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   874f0:   b0000140    adrp    x0, b0000 <_etext+0xf9c>
   874f4:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   874f8:   91062021    add x1, x1, #0x188
   874fc:   910003fd    mov x29, sp
   87500:   9108e000    add x0, x0, #0x238
   87504:   52800c42    mov w2, #0x62
   87508:   9400556e    bl  9cac0 <assertion_failed>
   8750c:   d503201f    nop

0000000000087510 <CXHCISlotManager::TransferEvent(unsigned char, unsigned int, unsigned char, unsigned char)>:
   87510:   12001c63    and w3, w3, #0xff
   87514:   51000465    sub w5, w3, #0x1
   87518:   12001ca3    and w3, w5, #0xff
   8751c:   71007c7f    cmp w3, #0x1f
   87520:   54000108    b.hi    87540 <CXHCISlotManager::TransferEvent(unsigned char, unsigned int, unsigned char, unsigned char)+0x30>
   87524:   8b25cc05    add x5, x0, w5, sxtw #3
   87528:   f9400ca0    ldr x0, [x5, #24]
   8752c:   b4000080    cbz x0, 8753c <CXHCISlotManager::TransferEvent(unsigned char, unsigned int, unsigned char, unsigned char)+0x2c>
   87530:   12001c21    and w1, w1, #0xff
   87534:   12001c83    and w3, w4, #0xff
   87538:   140000ca    b   87860 <CXHCIUSBDevice::TransferEvent(unsigned char, unsigned int, unsigned char)>
   8753c:   d65f03c0    ret
   87540:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   87544:   b0000140    adrp    x0, b0000 <_etext+0xf9c>
   87548:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   8754c:   91062021    add x1, x1, #0x188
   87550:   910003fd    mov x29, sp
   87554:   91068000    add x0, x0, #0x1a0
   87558:   52800d22    mov w2, #0x69
   8755c:   94005559    bl  9cac0 <assertion_failed>

0000000000087560 <CXHCISlotManager::DumpStatus()>:
   87560:   f9400800    ldr x0, [x0, #16]
   87564:   b0000142    adrp    x2, b0000 <_etext+0xf9c>
   87568:   91096042    add x2, x2, #0x258
   8756c:   52802101    mov w1, #0x108
   87570:   14005720    b   9d1f0 <debug_hexdump(void const*, unsigned int, char const*)>
    ...

0000000000087580 <CXHCIUSBDevice::~CXHCIUSBDevice()>:
   87580:   a9be7bfd    stp x29, x30, [sp, #-32]!
   87584:   910003fd    mov x29, sp
   87588:   b0000161    adrp    x1, b4000 <From+0x140>
   8758c:   91074021    add x1, x1, #0x1d0
   87590:   f9000bf3    str x19, [sp, #16]
   87594:   aa0003f3    mov x19, x0
   87598:   f9405c00    ldr x0, [x0, #184]
   8759c:   f9000261    str x1, [x19]
   875a0:   b40003e0    cbz x0, 8761c <CXHCIUSBDevice::~CXHCIUSBDevice()+0x9c>
   875a4:   f940ea61    ldr x1, [x19, #464]
   875a8:   b5000461    cbnz    x1, 87634 <CXHCIUSBDevice::~CXHCIUSBDevice()+0xb4>
   875ac:   39432261    ldrb    w1, [x19, #200]
   875b0:   35000201    cbnz    w1, 875f0 <CXHCIUSBDevice::~CXHCIUSBDevice()+0x70>
   875b4:   f9406a61    ldr x1, [x19, #208]
   875b8:   b4000081    cbz x1, 875c8 <CXHCIUSBDevice::~CXHCIUSBDevice()+0x48>
   875bc:   f9405e60    ldr x0, [x19, #184]
   875c0:   97ffefe4    bl  83550 <CXHCIDevice::FreeSharedMem(void*)>
   875c4:   f9006a7f    str xzr, [x19, #208]
   875c8:   91036261    add x1, x19, #0xd8
   875cc:   91074262    add x2, x19, #0x1d0
   875d0:   f800843f    str xzr, [x1], #8
   875d4:   eb02003f    cmp x1, x2
   875d8:   54ffffc1    b.ne    875d0 <CXHCIUSBDevice::~CXHCIUSBDevice()+0x50>
   875dc:   aa1303e0    mov x0, x19
   875e0:   a90bfe7f    stp xzr, xzr, [x19, #184]
   875e4:   f9400bf3    ldr x19, [sp, #16]
   875e8:   a8c27bfd    ldp x29, x30, [sp], #32
   875ec:   140004f1    b   889b0 <CUSBDevice::~CUSBDevice()>
   875f0:   97ffefa4    bl  83480 <CXHCIDevice::GetCommandManager()>
   875f4:   39432261    ldrb    w1, [x19, #200]
   875f8:   94002ea2    bl  93080 <CXHCICommandManager::DisableSlot(unsigned char)>
   875fc:   7100041f    cmp w0, #0x1
   87600:   54000261    b.ne    8764c <CXHCIUSBDevice::~CXHCIUSBDevice()+0xcc>
   87604:   f9405e60    ldr x0, [x19, #184]
   87608:   97ffef92    bl  83450 <CXHCIDevice::GetSlotManager()>
   8760c:   39432261    ldrb    w1, [x19, #200]
   87610:   97ffff94    bl  87460 <CXHCISlotManager::FreeSlot(unsigned char)>
   87614:   3903227f    strb    wzr, [x19, #200]
   87618:   17ffffe7    b   875b4 <CXHCIUSBDevice::~CXHCIUSBDevice()+0x34>
   8761c:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   87620:   90000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   87624:   9109a021    add x1, x1, #0x268
   87628:   912a6000    add x0, x0, #0xa98
   8762c:   528008e2    mov w2, #0x47
   87630:   94005524    bl  9cac0 <assertion_failed>
   87634:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   87638:   90000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8763c:   9109a021    add x1, x1, #0x268
   87640:   9121a000    add x0, x0, #0x868
   87644:   52800922    mov w2, #0x49
   87648:   9400551e    bl  9cac0 <assertion_failed>
   8764c:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   87650:   b0000140    adrp    x0, b0000 <_etext+0xf9c>
   87654:   9109a021    add x1, x1, #0x268
   87658:   910a0000    add x0, x0, #0x280
   8765c:   52800a22    mov w2, #0x51
   87660:   94005518    bl  9cac0 <assertion_failed>
   87664:   d503201f    nop
   87668:   d503201f    nop
   8766c:   d503201f    nop

0000000000087670 <CXHCIUSBDevice::~CXHCIUSBDevice()>:
   87670:   a9be7bfd    stp x29, x30, [sp, #-32]!
   87674:   910003fd    mov x29, sp
   87678:   f9000bf3    str x19, [sp, #16]
   8767c:   aa0003f3    mov x19, x0
   87680:   97ffffc0    bl  87580 <CXHCIUSBDevice::~CXHCIUSBDevice()>
   87684:   aa1303e0    mov x0, x19
   87688:   f9400bf3    ldr x19, [sp, #16]
   8768c:   d2803b01    mov x1, #0x1d8
   87690:   a8c27bfd    ldp x29, x30, [sp], #32
   87694:   14008073    b   a7860 <operator delete(void*, unsigned long)>
   87698:   d503201f    nop
   8769c:   d503201f    nop

00000000000876a0 <CXHCIUSBDevice::CXHCIUSBDevice(CXHCIDevice*, TUSBSpeed, CXHCIRootPort*)>:
   876a0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   876a4:   910003fd    mov x29, sp
   876a8:   a90153f3    stp x19, x20, [sp, #16]
   876ac:   aa0003f3    mov x19, x0
   876b0:   aa0103f4    mov x20, x1
   876b4:   f90013f5    str x21, [sp, #32]
   876b8:   aa0303f5    mov x21, x3
   876bc:   94000271    bl  88080 <CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, CUSBHCIRootPort*)>
   876c0:   b0000164    adrp    x4, b4000 <From+0x140>
   876c4:   91074084    add x4, x4, #0x1d0
   876c8:   a90bd674    stp x20, x21, [x19, #184]
   876cc:   d2800802    mov x2, #0x40
   876d0:   d2808001    mov x1, #0x400
   876d4:   aa1403e0    mov x0, x20
   876d8:   d2820003    mov x3, #0x1000
   876dc:   f9000264    str x4, [x19]
   876e0:   3903227f    strb    wzr, [x19, #200]
   876e4:   f9006a7f    str xzr, [x19, #208]
   876e8:   f900ea7f    str xzr, [x19, #464]
   876ec:   97ffef7d    bl  834e0 <CXHCIDevice::AllocateSharedMem(unsigned long, unsigned long, unsigned long)>
   876f0:   91038261    add x1, x19, #0xe0
   876f4:   91074262    add x2, x19, #0x1d0
   876f8:   f9006a60    str x0, [x19, #208]
   876fc:   d503201f    nop
   87700:   f800843f    str xzr, [x1], #8
   87704:   eb02003f    cmp x1, x2
   87708:   54ffffc1    b.ne    87700 <CXHCIUSBDevice::CXHCIUSBDevice(CXHCIDevice*, TUSBSpeed, CXHCIRootPort*)+0x60>
   8770c:   a94153f3    ldp x19, x20, [sp, #16]
   87710:   f94013f5    ldr x21, [sp, #32]
   87714:   a8c37bfd    ldp x29, x30, [sp], #48
   87718:   d65f03c0    ret
   8771c:   d503201f    nop

0000000000087720 <CXHCIUSBDevice::CXHCIUSBDevice(CXHCIDevice*, TUSBSpeed, CUSBStandardHub*, unsigned int)>:
   87720:   a9be7bfd    stp x29, x30, [sp, #-32]!
   87724:   910003fd    mov x29, sp
   87728:   a90153f3    stp x19, x20, [sp, #16]
   8772c:   aa0003f3    mov x19, x0
   87730:   aa0103f4    mov x20, x1
   87734:   940003e7    bl  886d0 <CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, CUSBStandardHub*, unsigned int)>
   87738:   b0000164    adrp    x4, b4000 <From+0x140>
   8773c:   91074084    add x4, x4, #0x1d0
   87740:   a90bfe74    stp x20, xzr, [x19, #184]
   87744:   d2800802    mov x2, #0x40
   87748:   d2808001    mov x1, #0x400
   8774c:   aa1403e0    mov x0, x20
   87750:   d2820003    mov x3, #0x1000
   87754:   f9000264    str x4, [x19]
   87758:   3903227f    strb    wzr, [x19, #200]
   8775c:   f9006a7f    str xzr, [x19, #208]
   87760:   f900ea7f    str xzr, [x19, #464]
   87764:   97ffef5f    bl  834e0 <CXHCIDevice::AllocateSharedMem(unsigned long, unsigned long, unsigned long)>
   87768:   91038261    add x1, x19, #0xe0
   8776c:   91074262    add x2, x19, #0x1d0
   87770:   f9006a60    str x0, [x19, #208]
   87774:   d503201f    nop
   87778:   f800843f    str xzr, [x1], #8
   8777c:   eb02003f    cmp x1, x2
   87780:   54ffffc1    b.ne    87778 <CXHCIUSBDevice::CXHCIUSBDevice(CXHCIDevice*, TUSBSpeed, CUSBStandardHub*, unsigned int)+0x58>
   87784:   a94153f3    ldp x19, x20, [sp, #16]
   87788:   a8c27bfd    ldp x29, x30, [sp], #32
   8778c:   d65f03c0    ret

0000000000087790 <CXHCIUSBDevice::GetSlotID() const>:
   87790:   39432000    ldrb    w0, [x0, #200]
   87794:   51000401    sub w1, w0, #0x1
   87798:   12001c21    and w1, w1, #0xff
   8779c:   71007c3f    cmp w1, #0x1f
   877a0:   54000048    b.hi    877a8 <CXHCIUSBDevice::GetSlotID() const+0x18>
   877a4:   d65f03c0    ret
   877a8:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   877ac:   b0000140    adrp    x0, b0000 <_etext+0xf9c>
   877b0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   877b4:   9109a021    add x1, x1, #0x268
   877b8:   910003fd    mov x29, sp
   877bc:   910a8000    add x0, x0, #0x2a0
   877c0:   52801522    mov w2, #0xa9
   877c4:   940054bf    bl  9cac0 <assertion_failed>
   877c8:   d503201f    nop
   877cc:   d503201f    nop

00000000000877d0 <CXHCIUSBDevice::GetDeviceContext()>:
   877d0:   f9406800    ldr x0, [x0, #208]
   877d4:   b4000040    cbz x0, 877dc <CXHCIUSBDevice::GetDeviceContext()+0xc>
   877d8:   d65f03c0    ret
   877dc:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   877e0:   b0000140    adrp    x0, b0000 <_etext+0xf9c>
   877e4:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   877e8:   9109a021    add x1, x1, #0x268
   877ec:   910003fd    mov x29, sp
   877f0:   910b0000    add x0, x0, #0x2c0
   877f4:   528015e2    mov w2, #0xaf
   877f8:   940054b2    bl  9cac0 <assertion_failed>
   877fc:   d503201f    nop

0000000000087800 <CXHCIUSBDevice::RegisterEndpoint(unsigned char, CXHCIEndpoint*)>:
   87800:   12001c21    and w1, w1, #0xff
   87804:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   87808:   910003fd    mov x29, sp
   8780c:   51000421    sub w1, w1, #0x1
   87810:   12001c23    and w3, w1, #0xff
   87814:   7100787f    cmp w3, #0x1e
   87818:   540000c8    b.hi    87830 <CXHCIUSBDevice::RegisterEndpoint(unsigned char, CXHCIEndpoint*)+0x30>
   8781c:   b4000162    cbz x2, 87848 <CXHCIUSBDevice::RegisterEndpoint(unsigned char, CXHCIEndpoint*)+0x48>
   87820:   8b21cc01    add x1, x0, w1, sxtw #3
   87824:   f9006c22    str x2, [x1, #216]
   87828:   a8c17bfd    ldp x29, x30, [sp], #16
   8782c:   d65f03c0    ret
   87830:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   87834:   b0000140    adrp    x0, b0000 <_etext+0xf9c>
   87838:   9109a021    add x1, x1, #0x268
   8783c:   910b6000    add x0, x0, #0x2d8
   87840:   528016a2    mov w2, #0xb5
   87844:   9400549f    bl  9cac0 <assertion_failed>
   87848:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   8784c:   90000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   87850:   9109a021    add x1, x1, #0x268
   87854:   9106c000    add x0, x0, #0x1b0
   87858:   528016c2    mov w2, #0xb6
   8785c:   94005499    bl  9cac0 <assertion_failed>

0000000000087860 <CXHCIUSBDevice::TransferEvent(unsigned char, unsigned int, unsigned char)>:
   87860:   12001c63    and w3, w3, #0xff
   87864:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   87868:   910003fd    mov x29, sp
   8786c:   51000463    sub w3, w3, #0x1
   87870:   12001c64    and w4, w3, #0xff
   87874:   7100789f    cmp w4, #0x1e
   87878:   540000e8    b.hi    87894 <CXHCIUSBDevice::TransferEvent(unsigned char, unsigned int, unsigned char)+0x34>
   8787c:   8b23cc03    add x3, x0, w3, sxtw #3
   87880:   f9406c60    ldr x0, [x3, #216]
   87884:   b4000140    cbz x0, 878ac <CXHCIUSBDevice::TransferEvent(unsigned char, unsigned int, unsigned char)+0x4c>
   87888:   a8c17bfd    ldp x29, x30, [sp], #16
   8788c:   12001c21    and w1, w1, #0xff
   87890:   17fff1f0    b   84050 <CXHCIEndpoint::TransferEvent(unsigned char, unsigned int)>
   87894:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   87898:   b0000140    adrp    x0, b0000 <_etext+0xf9c>
   8789c:   9109a021    add x1, x1, #0x268
   878a0:   910b6000    add x0, x0, #0x2d8
   878a4:   52801782    mov w2, #0xbc
   878a8:   94005486    bl  9cac0 <assertion_failed>
   878ac:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   878b0:   b0000140    adrp    x0, b0000 <_etext+0xf9c>
   878b4:   9109a021    add x1, x1, #0x268
   878b8:   910c0000    add x0, x0, #0x300
   878bc:   528017a2    mov w2, #0xbd
   878c0:   94005480    bl  9cac0 <assertion_failed>
   878c4:   d503201f    nop
   878c8:   d503201f    nop
   878cc:   d503201f    nop

00000000000878d0 <CXHCIUSBDevice::DumpStatus()>:
   878d0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   878d4:   910003fd    mov x29, sp
   878d8:   b0000162    adrp    x2, b4000 <From+0x140>
   878dc:   9107e042    add x2, x2, #0x1f8
   878e0:   52802001    mov w1, #0x100
   878e4:   a90153f3    stp x19, x20, [sp, #16]
   878e8:   aa0003f4    mov x20, x0
   878ec:   91036013    add x19, x0, #0xd8
   878f0:   91074294    add x20, x20, #0x1d0
   878f4:   f9406800    ldr x0, [x0, #208]
   878f8:   9400563e    bl  9d1f0 <debug_hexdump(void const*, unsigned int, char const*)>
   878fc:   d503201f    nop
   87900:   f9400260    ldr x0, [x19]
   87904:   b4000040    cbz x0, 8790c <CXHCIUSBDevice::DumpStatus()+0x3c>
   87908:   97fff22e    bl  841c0 <CXHCIEndpoint::DumpStatus()>
   8790c:   91002273    add x19, x19, #0x8
   87910:   eb14027f    cmp x19, x20
   87914:   54ffff61    b.ne    87900 <CXHCIUSBDevice::DumpStatus()+0x30>
   87918:   a94153f3    ldp x19, x20, [sp, #16]
   8791c:   a8c27bfd    ldp x29, x30, [sp], #32
   87920:   d65f03c0    ret
   87924:   d503201f    nop
   87928:   d503201f    nop
   8792c:   d503201f    nop

0000000000087930 <CXHCIUSBDevice::GetInputContextAddressDevice()>:
   87930:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   87934:   910003fd    mov x29, sp
   87938:   a90153f3    stp x19, x20, [sp, #16]
   8793c:   aa0003f4    mov x20, x0
   87940:   f940e800    ldr x0, [x0, #464]
   87944:   f90013f5    str x21, [sp, #32]
   87948:   b5000dc0    cbnz    x0, 87b00 <CXHCIUSBDevice::GetInputContextAddressDevice()+0x1d0>
   8794c:   d28283e0    mov x0, #0x141f
   87950:   94007fa4    bl  a77e0 <operator new[](unsigned long)>
   87954:   913ffc13    add x19, x0, #0xfff
   87958:   d2808402    mov x2, #0x420
   8795c:   f900ea80    str x0, [x20, #464]
   87960:   9274ce73    and x19, x19, #0xfffffffffffff000
   87964:   52800001    mov w1, #0x0
   87968:   aa1303e0    mov x0, x19
   8796c:   94007ceb    bl  a6d18 <memset>
   87970:   b940b683    ldr w3, [x20, #180]
   87974:   52800062    mov w2, #0x3
   87978:   aa1403e0    mov x0, x20
   8797c:   b9402261    ldr w1, [x19, #32]
   87980:   b9000662    str w2, [x19, #4]
   87984:   b940b282    ldr w2, [x20, #176]
   87988:   33004c61    bfxil   w1, w3, #0, #20
   8798c:   39009a62    strb    w2, [x19, #38]
   87990:   b9002261    str w1, [x19, #32]
   87994:   940002cb    bl  884c0 <CUSBDevice::GetSpeed() const>
   87998:   7100041f    cmp w0, #0x1
   8799c:   aa1403e0    mov x0, x20
   879a0:   5400070d    b.le    87a80 <CXHCIUSBDevice::GetInputContextAddressDevice()+0x150>
   879a4:   940002c7    bl  884c0 <CUSBDevice::GetSpeed() const>
   879a8:   11000401    add w1, w0, #0x1
   879ac:   12000c21    and w1, w1, #0xf
   879b0:   79404662    ldrh    w2, [x19, #34]
   879b4:   531c2c21    ubfiz   w1, w1, #4, #12
   879b8:   5280e1e3    mov w3, #0x70f
   879bc:   32150021    orr w1, w1, #0x800
   879c0:   aa1403e0    mov x0, x20
   879c4:   0a030042    and w2, w2, w3
   879c8:   2a020021    orr w1, w1, w2
   879cc:   79004661    strh    w1, [x19, #34]
   879d0:   940002c0    bl  884d0 <CUSBDevice::IsSplit() const>
   879d4:   37000600    tbnz    w0, #0, 87a94 <CXHCIUSBDevice::GetInputContextAddressDevice()+0x164>
   879d8:   f9406e80    ldr x0, [x20, #216]
   879dc:   b40009e0    cbz x0, 87b18 <CXHCIUSBDevice::GetInputContextAddressDevice()+0x1e8>
   879e0:   97fff190    bl  84020 <CXHCIEndpoint::GetTransferRing()>
   879e4:   b4000a60    cbz x0, 87b30 <CXHCIUSBDevice::GetInputContextAddressDevice()+0x200>
   879e8:   97fff91a    bl  85e50 <CXHCIRing::GetFirstTRB()>
   879ec:   aa0003e1    mov x1, x0
   879f0:   f0000180    adrp    x0, ba000 <font_data+0x1080>
   879f4:   f9458804    ldr x4, [x0, #2832]
   879f8:   91010275    add x21, x19, #0x40
   879fc:   928fe003    mov x3, #0xffffffffffff80ff
   87a00:   f2bfe003    movk    x3, #0xff00, lsl #16
   87a04:   d2c004c2    mov x2, #0x2600000000
   87a08:   f2c01823    movk    x3, #0xc1, lsl #32
   87a0c:   aa1403e0    mov x0, x20
   87a10:   aa040021    orr x1, x1, x4
   87a14:   b2400021    orr x1, x1, #0x1
   87a18:   f90006a1    str x1, [x21, #8]
   87a1c:   f9402261    ldr x1, [x19, #64]
   87a20:   8a030021    and x1, x1, x3
   87a24:   aa020021    orr x1, x1, x2
   87a28:   f9002261    str x1, [x19, #64]
   87a2c:   b94012a1    ldr w1, [x21, #16]
   87a30:   72800101    movk    w1, #0x8
   87a34:   b90012a1    str w1, [x21, #16]
   87a38:   940002a2    bl  884c0 <CUSBDevice::GetSpeed() const>
   87a3c:   7100081f    cmp w0, #0x2
   87a40:   540001c0    b.eq    87a78 <CXHCIUSBDevice::GetInputContextAddressDevice()+0x148>
   87a44:   540005a9    b.ls    87af8 <CXHCIUSBDevice::GetInputContextAddressDevice()+0x1c8>
   87a48:   71000c1f    cmp w0, #0x3
   87a4c:   52804002    mov w2, #0x200
   87a50:   54000961    b.ne    87b7c <CXHCIUSBDevice::GetInputContextAddressDevice()+0x24c>
   87a54:   aa1303e0    mov x0, x19
   87a58:   d2808401    mov x1, #0x420
   87a5c:   79000ea2    strh    w2, [x21, #6]
   87a60:   94008418    bl  a8ac0 <CleanAndInvalidateDataCacheRange>
   87a64:   f94013f5    ldr x21, [sp, #32]
   87a68:   aa1303e0    mov x0, x19
   87a6c:   a94153f3    ldp x19, x20, [sp, #16]
   87a70:   a8c37bfd    ldp x29, x30, [sp], #48
   87a74:   d65f03c0    ret
   87a78:   52800802    mov w2, #0x40
   87a7c:   17fffff6    b   87a54 <CXHCIUSBDevice::GetInputContextAddressDevice()+0x124>
   87a80:   94000290    bl  884c0 <CUSBDevice::GetSpeed() const>
   87a84:   52000001    eor w1, w0, #0x1
   87a88:   11000421    add w1, w1, #0x1
   87a8c:   12000c21    and w1, w1, #0xf
   87a90:   17ffffc8    b   879b0 <CXHCIUSBDevice::GetInputContextAddressDevice()+0x80>
   87a94:   aa1403e0    mov x0, x20
   87a98:   94000292    bl  884e0 <CUSBDevice::GetHubAddress() const>
   87a9c:   2a0003e1    mov w1, w0
   87aa0:   aa1403e0    mov x0, x20
   87aa4:   3900a261    strb    w1, [x19, #40]
   87aa8:   94000292    bl  884f0 <CUSBDevice::GetHubPortNumber() const>
   87aac:   2a0003e1    mov w1, w0
   87ab0:   aa1403e0    mov x0, x20
   87ab4:   3900a661    strb    w1, [x19, #41]
   87ab8:   94000292    bl  88500 <CUSBDevice::GetTTHubDevice() const>
   87abc:   b4000540    cbz x0, 87b64 <CXHCIUSBDevice::GetInputContextAddressDevice()+0x234>
   87ac0:   f9403000    ldr x0, [x0, #96]
   87ac4:   b40000e0    cbz x0, 87ae0 <CXHCIUSBDevice::GetInputContextAddressDevice()+0x1b0>
   87ac8:   f9400002    ldr x2, [x0]
   87acc:   d0ffffc1    adrp    x1, 81000 <CUSBHostController::~CUSBHostController()+0x30>
   87ad0:   91288021    add x1, x1, #0xa20
   87ad4:   f9402c42    ldr x2, [x2, #88]
   87ad8:   eb01005f    cmp x2, x1
   87adc:   54000361    b.ne    87b48 <CXHCIUSBDevice::GetInputContextAddressDevice()+0x218>
   87ae0:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   87ae4:   b0000140    adrp    x0, b0000 <_etext+0xf9c>
   87ae8:   9109a021    add x1, x1, #0x268
   87aec:   910d0000    add x0, x0, #0x340
   87af0:   52801de2    mov w2, #0xef
   87af4:   940053f3    bl  9cac0 <assertion_failed>
   87af8:   52800102    mov w2, #0x8
   87afc:   17ffffd6    b   87a54 <CXHCIUSBDevice::GetInputContextAddressDevice()+0x124>
   87b00:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   87b04:   90000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   87b08:   9109a021    add x1, x1, #0x268
   87b0c:   9121a000    add x0, x0, #0x868
   87b10:   52801aa2    mov w2, #0xd5
   87b14:   940053eb    bl  9cac0 <assertion_failed>
   87b18:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   87b1c:   b0000140    adrp    x0, b0000 <_etext+0xf9c>
   87b20:   9109a021    add x1, x1, #0x268
   87b24:   910d4000    add x0, x0, #0x350
   87b28:   52801ee2    mov w2, #0xf7
   87b2c:   940053e5    bl  9cac0 <assertion_failed>
   87b30:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   87b34:   b0000140    adrp    x0, b0000 <_etext+0xf9c>
   87b38:   9109a021    add x1, x1, #0x268
   87b3c:   910da000    add x0, x0, #0x368
   87b40:   52801f22    mov w2, #0xf9
   87b44:   940053df    bl  9cac0 <assertion_failed>
   87b48:   d63f0040    blr x2
   87b4c:   b4fffca0    cbz x0, 87ae0 <CXHCIUSBDevice::GetInputContextAddressDevice()+0x1b0>
   87b50:   39401000    ldrb    w0, [x0, #4]
   87b54:   b9402261    ldr w1, [x19, #32]
   87b58:   33070001    bfi w1, w0, #25, #1
   87b5c:   b9002261    str w1, [x19, #32]
   87b60:   17ffff9e    b   879d8 <CXHCIUSBDevice::GetInputContextAddressDevice()+0xa8>
   87b64:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   87b68:   b0000140    adrp    x0, b0000 <_etext+0xf9c>
   87b6c:   9109a021    add x1, x1, #0x268
   87b70:   910ca000    add x0, x0, #0x328
   87b74:   52801da2    mov w2, #0xed
   87b78:   940053d2    bl  9cac0 <assertion_failed>
   87b7c:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   87b80:   b0000140    adrp    x0, b0000 <_etext+0xf9c>
   87b84:   9109a021    add x1, x1, #0x268
   87b88:   91106000    add x0, x0, #0x418
   87b8c:   528022a2    mov w2, #0x115
   87b90:   940053cc    bl  9cac0 <assertion_failed>
   87b94:   d503201f    nop
   87b98:   d503201f    nop
   87b9c:   d503201f    nop

0000000000087ba0 <CXHCIUSBDevice::GetInputContextEnableHubFunction()>:
   87ba0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   87ba4:   910003fd    mov x29, sp
   87ba8:   a90153f3    stp x19, x20, [sp, #16]
   87bac:   aa0003f4    mov x20, x0
   87bb0:   f940e800    ldr x0, [x0, #464]
   87bb4:   f90013f5    str x21, [sp, #32]
   87bb8:   b5000780    cbnz    x0, 87ca8 <CXHCIUSBDevice::GetInputContextEnableHubFunction()+0x108>
   87bbc:   d28283e0    mov x0, #0x141f
   87bc0:   94007f08    bl  a77e0 <operator new[](unsigned long)>
   87bc4:   f9406a81    ldr x1, [x20, #208]
   87bc8:   913ffc13    add x19, x0, #0xfff
   87bcc:   f900ea80    str x0, [x20, #464]
   87bd0:   9274ce73    and x19, x19, #0xfffffffffffff000
   87bd4:   b4000761    cbz x1, 87cc0 <CXHCIUSBDevice::GetInputContextEnableHubFunction()+0x120>
   87bd8:   d2800402    mov x2, #0x20
   87bdc:   52800001    mov w1, #0x0
   87be0:   aa1303e0    mov x0, x19
   87be4:   94007c4d    bl  a6d18 <memset>
   87be8:   f9406a81    ldr x1, [x20, #208]
   87bec:   91008260    add x0, x19, #0x20
   87bf0:   d2808002    mov x2, #0x400
   87bf4:   94007c61    bl  a6d78 <memcpy>
   87bf8:   f9403280    ldr x0, [x20, #96]
   87bfc:   b20003e1    mov x1, #0x100000001
   87c00:   f9000261    str x1, [x19]
   87c04:   b40000e0    cbz x0, 87c20 <CXHCIUSBDevice::GetInputContextEnableHubFunction()+0x80>
   87c08:   f9400002    ldr x2, [x0]
   87c0c:   d0ffffc1    adrp    x1, 81000 <CUSBHostController::~CUSBHostController()+0x30>
   87c10:   91288021    add x1, x1, #0xa20
   87c14:   f9402c42    ldr x2, [x2, #88]
   87c18:   eb01005f    cmp x2, x1
   87c1c:   540000e1    b.ne    87c38 <CXHCIUSBDevice::GetInputContextEnableHubFunction()+0x98>
   87c20:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   87c24:   b0000140    adrp    x0, b0000 <_etext+0xf9c>
   87c28:   9109a021    add x1, x1, #0x268
   87c2c:   910e0000    add x0, x0, #0x380
   87c30:   52802622    mov w2, #0x131
   87c34:   940053a3    bl  9cac0 <assertion_failed>
   87c38:   d63f0040    blr x2
   87c3c:   aa0003f5    mov x21, x0
   87c40:   b4ffff00    cbz x0, 87c20 <CXHCIUSBDevice::GetInputContextEnableHubFunction()+0x80>
   87c44:   f9401261    ldr x1, [x19, #32]
   87c48:   aa1403e0    mov x0, x20
   87c4c:   b2660021    orr x1, x1, #0x4000000
   87c50:   f9001261    str x1, [x19, #32]
   87c54:   b94002a1    ldr w1, [x21]
   87c58:   39009e61    strb    w1, [x19, #39]
   87c5c:   94000219    bl  884c0 <CUSBDevice::GetSpeed() const>
   87c60:   7100081f    cmp w0, #0x2
   87c64:   54000121    b.ne    87c88 <CXHCIUSBDevice::GetInputContextEnableHubFunction()+0xe8>
   87c68:   394012a2    ldrb    w2, [x21, #4]
   87c6c:   b9402261    ldr w1, [x19, #32]
   87c70:   b9402a60    ldr w0, [x19, #40]
   87c74:   33070041    bfi w1, w2, #25, #1
   87c78:   b9002261    str w1, [x19, #32]
   87c7c:   394016a1    ldrb    w1, [x21, #5]
   87c80:   33100420    bfi w0, w1, #16, #2
   87c84:   b9002a60    str w0, [x19, #40]
   87c88:   aa1303e0    mov x0, x19
   87c8c:   d2808401    mov x1, #0x420
   87c90:   9400838c    bl  a8ac0 <CleanAndInvalidateDataCacheRange>
   87c94:   f94013f5    ldr x21, [sp, #32]
   87c98:   aa1303e0    mov x0, x19
   87c9c:   a94153f3    ldp x19, x20, [sp, #16]
   87ca0:   a8c37bfd    ldp x29, x30, [sp], #48
   87ca4:   d65f03c0    ret
   87ca8:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   87cac:   90000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   87cb0:   9109a021    add x1, x1, #0x268
   87cb4:   9121a000    add x0, x0, #0x868
   87cb8:   52802402    mov w2, #0x120
   87cbc:   94005381    bl  9cac0 <assertion_failed>
   87cc0:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   87cc4:   b0000140    adrp    x0, b0000 <_etext+0xf9c>
   87cc8:   9109a021    add x1, x1, #0x268
   87ccc:   910b0000    add x0, x0, #0x2c0
   87cd0:   528024e2    mov w2, #0x127
   87cd4:   9400537b    bl  9cac0 <assertion_failed>
   87cd8:   d503201f    nop
   87cdc:   d503201f    nop

0000000000087ce0 <CXHCIUSBDevice::EnableHubFunction()>:
   87ce0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   87ce4:   910003fd    mov x29, sp
   87ce8:   a90153f3    stp x19, x20, [sp, #16]
   87cec:   aa0003f3    mov x19, x0
   87cf0:   97ffffac    bl  87ba0 <CXHCIUSBDevice::GetInputContextEnableHubFunction()>
   87cf4:   b40003c0    cbz x0, 87d6c <CXHCIUSBDevice::EnableHubFunction()+0x8c>
   87cf8:   aa0003f4    mov x20, x0
   87cfc:   f9405e60    ldr x0, [x19, #184]
   87d00:   97ffede0    bl  83480 <CXHCIDevice::GetCommandManager()>
   87d04:   aa1403e2    mov x2, x20
   87d08:   39432261    ldrb    w1, [x19, #200]
   87d0c:   94002d3d    bl  93200 <CXHCICommandManager::EvaluateContext(unsigned char, TXHCIInputContext*)>
   87d10:   2a0003f4    mov w20, w0
   87d14:   f940ea60    ldr x0, [x19, #464]
   87d18:   b4000360    cbz x0, 87d84 <CXHCIUSBDevice::EnableHubFunction()+0xa4>
   87d1c:   94007ec5    bl  a7830 <operator delete[](void*)>
   87d20:   7100069f    cmp w20, #0x1
   87d24:   f900ea7f    str xzr, [x19, #464]
   87d28:   52800020    mov w0, #0x1
   87d2c:   54000081    b.ne    87d3c <CXHCIUSBDevice::EnableHubFunction()+0x5c>
   87d30:   a94153f3    ldp x19, x20, [sp, #16]
   87d34:   a8c27bfd    ldp x29, x30, [sp], #32
   87d38:   d65f03c0    ret
   87d3c:   94005e31    bl  9f600 <CLogger::Get()>
   87d40:   b0000143    adrp    x3, b0000 <_etext+0xf9c>
   87d44:   b0000161    adrp    x1, b4000 <From+0x140>
   87d48:   2a1403e4    mov w4, w20
   87d4c:   910e4063    add x3, x3, #0x390
   87d50:   9107e021    add x1, x1, #0x1f8
   87d54:   52800042    mov w2, #0x2
   87d58:   94006012    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   87d5c:   a94153f3    ldp x19, x20, [sp, #16]
   87d60:   52800000    mov w0, #0x0
   87d64:   a8c27bfd    ldp x29, x30, [sp], #32
   87d68:   d65f03c0    ret
   87d6c:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   87d70:   90000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   87d74:   9109a021    add x1, x1, #0x268
   87d78:   912a0000    add x0, x0, #0xa80
   87d7c:   528012a2    mov w2, #0x95
   87d80:   94005350    bl  9cac0 <assertion_failed>
   87d84:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   87d88:   90000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   87d8c:   9109a021    add x1, x1, #0x268
   87d90:   912ac000    add x0, x0, #0xab0
   87d94:   52802862    mov w2, #0x143
   87d98:   9400534a    bl  9cac0 <assertion_failed>
   87d9c:   d503201f    nop

0000000000087da0 <CXHCIUSBDevice::FreeInputContext()>:
   87da0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   87da4:   910003fd    mov x29, sp
   87da8:   f9000bf3    str x19, [sp, #16]
   87dac:   aa0003f3    mov x19, x0
   87db0:   f940e800    ldr x0, [x0, #464]
   87db4:   b40000c0    cbz x0, 87dcc <CXHCIUSBDevice::FreeInputContext()+0x2c>
   87db8:   94007e9e    bl  a7830 <operator delete[](void*)>
   87dbc:   f900ea7f    str xzr, [x19, #464]
   87dc0:   f9400bf3    ldr x19, [sp, #16]
   87dc4:   a8c27bfd    ldp x29, x30, [sp], #32
   87dc8:   d65f03c0    ret
   87dcc:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   87dd0:   90000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   87dd4:   9109a021    add x1, x1, #0x268
   87dd8:   912ac000    add x0, x0, #0xab0
   87ddc:   52802862    mov w2, #0x143
   87de0:   94005338    bl  9cac0 <assertion_failed>
   87de4:   d503201f    nop
   87de8:   d503201f    nop
   87dec:   d503201f    nop

0000000000087df0 <CXHCIUSBDevice::Initialize()>:
   87df0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   87df4:   910003fd    mov x29, sp
   87df8:   a90153f3    stp x19, x20, [sp, #16]
   87dfc:   aa0003f3    mov x19, x0
   87e00:   f9406800    ldr x0, [x0, #208]
   87e04:   b40005c0    cbz x0, 87ebc <CXHCIUSBDevice::Initialize()+0xcc>
   87e08:   f9405e60    ldr x0, [x19, #184]
   87e0c:   b4000900    cbz x0, 87f2c <CXHCIUSBDevice::Initialize()+0x13c>
   87e10:   97ffed9c    bl  83480 <CXHCIDevice::GetCommandManager()>
   87e14:   91032261    add x1, x19, #0xc8
   87e18:   94002c7a    bl  93000 <CXHCICommandManager::EnableSlot(unsigned char*)>
   87e1c:   7100041f    cmp w0, #0x1
   87e20:   2a0003f4    mov w20, w0
   87e24:   54000541    b.ne    87ecc <CXHCIUSBDevice::Initialize()+0xdc>
   87e28:   f90013f5    str x21, [sp, #32]
   87e2c:   39432260    ldrb    w0, [x19, #200]
   87e30:   51000400    sub w0, w0, #0x1
   87e34:   12001c00    and w0, w0, #0xff
   87e38:   71007c1f    cmp w0, #0x1f
   87e3c:   54000868    b.hi    87f48 <CXHCIUSBDevice::Initialize()+0x158>
   87e40:   f9405e60    ldr x0, [x19, #184]
   87e44:   97ffed83    bl  83450 <CXHCIDevice::GetSlotManager()>
   87e48:   39432261    ldrb    w1, [x19, #200]
   87e4c:   aa1303e2    mov x2, x19
   87e50:   97fffd40    bl  87350 <CXHCISlotManager::AssignDevice(unsigned char, CXHCIUSBDevice*)>
   87e54:   aa1303e0    mov x0, x19
   87e58:   97fffeb6    bl  87930 <CXHCIUSBDevice::GetInputContextAddressDevice()>
   87e5c:   aa0003f5    mov x21, x0
   87e60:   b4000800    cbz x0, 87f60 <CXHCIUSBDevice::Initialize()+0x170>
   87e64:   f9405e60    ldr x0, [x19, #184]
   87e68:   97ffed86    bl  83480 <CXHCIDevice::GetCommandManager()>
   87e6c:   2a1403e3    mov w3, w20
   87e70:   39432261    ldrb    w1, [x19, #200]
   87e74:   aa1503e2    mov x2, x21
   87e78:   94002c96    bl  930d0 <CXHCICommandManager::AddressDevice(unsigned char, TXHCIInputContext*, bool)>
   87e7c:   2a0003f4    mov w20, w0
   87e80:   f940ea60    ldr x0, [x19, #464]
   87e84:   b40007a0    cbz x0, 87f78 <CXHCIUSBDevice::Initialize()+0x188>
   87e88:   94007e6a    bl  a7830 <operator delete[](void*)>
   87e8c:   7100069f    cmp w20, #0x1
   87e90:   f900ea7f    str xzr, [x19, #464]
   87e94:   54000360    b.eq    87f00 <CXHCIUSBDevice::Initialize()+0x110>
   87e98:   94005dda    bl  9f600 <CLogger::Get()>
   87e9c:   b0000143    adrp    x3, b0000 <_etext+0xf9c>
   87ea0:   b0000161    adrp    x1, b4000 <From+0x140>
   87ea4:   2a1403e4    mov w4, w20
   87ea8:   910f2063    add x3, x3, #0x3c8
   87eac:   9107e021    add x1, x1, #0x1f8
   87eb0:   52800042    mov w2, #0x2
   87eb4:   94005fbb    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   87eb8:   f94013f5    ldr x21, [sp, #32]
   87ebc:   a94153f3    ldp x19, x20, [sp, #16]
   87ec0:   52800000    mov w0, #0x0
   87ec4:   a8c37bfd    ldp x29, x30, [sp], #48
   87ec8:   d65f03c0    ret
   87ecc:   94005dcd    bl  9f600 <CLogger::Get()>
   87ed0:   b0000143    adrp    x3, b0000 <_etext+0xf9c>
   87ed4:   b0000161    adrp    x1, b4000 <From+0x140>
   87ed8:   2a1403e4    mov w4, w20
   87edc:   910ec063    add x3, x3, #0x3b0
   87ee0:   9107e021    add x1, x1, #0x1f8
   87ee4:   52800042    mov w2, #0x2
   87ee8:   94005fae    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   87eec:   52800000    mov w0, #0x0
   87ef0:   3903227f    strb    wzr, [x19, #200]
   87ef4:   a94153f3    ldp x19, x20, [sp, #16]
   87ef8:   a8c37bfd    ldp x29, x30, [sp], #48
   87efc:   d65f03c0    ret
   87f00:   940079e0    bl  a6680 <CTimer::Get()>
   87f04:   52800640    mov w0, #0x32
   87f08:   94007982    bl  a6510 <CTimer::SimpleMsDelay(unsigned int)>
   87f0c:   39432261    ldrb    w1, [x19, #200]
   87f10:   aa1303e0    mov x0, x19
   87f14:   94000157    bl  88470 <CUSBDevice::SetAddress(unsigned char)>
   87f18:   f94013f5    ldr x21, [sp, #32]
   87f1c:   aa1303e0    mov x0, x19
   87f20:   a94153f3    ldp x19, x20, [sp, #16]
   87f24:   a8c37bfd    ldp x29, x30, [sp], #48
   87f28:   1400030a    b   88b50 <CUSBDevice::Initialize()>
   87f2c:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   87f30:   90000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   87f34:   f90013f5    str x21, [sp, #32]
   87f38:   9109a021    add x1, x1, #0x268
   87f3c:   912a6000    add x0, x0, #0xa98
   87f40:   52800de2    mov w2, #0x6f
   87f44:   940052df    bl  9cac0 <assertion_failed>
   87f48:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   87f4c:   b0000140    adrp    x0, b0000 <_etext+0xf9c>
   87f50:   9109a021    add x1, x1, #0x268
   87f54:   910a8000    add x0, x0, #0x2a0
   87f58:   52800f62    mov w2, #0x7b
   87f5c:   940052d9    bl  9cac0 <assertion_failed>
   87f60:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   87f64:   90000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   87f68:   9109a021    add x1, x1, #0x268
   87f6c:   912a0000    add x0, x0, #0xa80
   87f70:   52800fe2    mov w2, #0x7f
   87f74:   940052d3    bl  9cac0 <assertion_failed>
   87f78:   b0000141    adrp    x1, b0000 <_etext+0xf9c>
   87f7c:   90000140    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   87f80:   9109a021    add x1, x1, #0x268
   87f84:   912ac000    add x0, x0, #0xab0
   87f88:   52802862    mov w2, #0x143
   87f8c:   940052cd    bl  9cac0 <assertion_failed>

0000000000087f90 <CUSBDevice::Configure()>:
   87f90:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   87f94:   910003fd    mov x29, sp
   87f98:   f9400401    ldr x1, [x0, #8]
   87f9c:   b40004e1    cbz x1, 88038 <CUSBDevice::Configure()+0xa8>
   87fa0:   f9401801    ldr x1, [x0, #48]
   87fa4:   b40005a1    cbz x1, 88058 <CUSBDevice::Configure()+0xc8>
   87fa8:   f9402801    ldr x1, [x0, #80]
   87fac:   f90013f5    str x21, [sp, #32]
   87fb0:   b40003a1    cbz x1, 88024 <CUSBDevice::Configure()+0x94>
   87fb4:   52800015    mov w21, #0x0
   87fb8:   a90153f3    stp x19, x20, [sp, #16]
   87fbc:   91018013    add x19, x0, #0x60
   87fc0:   9102c014    add x20, x0, #0xb0
   87fc4:   d503201f    nop
   87fc8:   f9400260    ldr x0, [x19]
   87fcc:   b4000180    cbz x0, 87ffc <CUSBDevice::Configure()+0x6c>
   87fd0:   f9400001    ldr x1, [x0]
   87fd4:   f9402421    ldr x1, [x1, #72]
   87fd8:   d63f0020    blr x1
   87fdc:   12001c01    and w1, w0, #0xff
   87fe0:   370001e0    tbnz    w0, #0, 8801c <CUSBDevice::Configure()+0x8c>
   87fe4:   f9400260    ldr x0, [x19]
   87fe8:   b4000080    cbz x0, 87ff8 <CUSBDevice::Configure()+0x68>
   87fec:   f9400001    ldr x1, [x0]
   87ff0:   f9400421    ldr x1, [x1, #8]
   87ff4:   d63f0020    blr x1
   87ff8:   f900027f    str xzr, [x19]
   87ffc:   91002273    add x19, x19, #0x8
   88000:   eb14027f    cmp x19, x20
   88004:   54fffe21    b.ne    87fc8 <CUSBDevice::Configure()+0x38>
   88008:   a94153f3    ldp x19, x20, [sp, #16]
   8800c:   2a1503e0    mov w0, w21
   88010:   f94013f5    ldr x21, [sp, #32]
   88014:   a8c37bfd    ldp x29, x30, [sp], #48
   88018:   d65f03c0    ret
   8801c:   2a0103f5    mov w21, w1
   88020:   17fffff7    b   87ffc <CUSBDevice::Configure()+0x6c>
   88024:   52800015    mov w21, #0x0
   88028:   2a1503e0    mov w0, w21
   8802c:   f94013f5    ldr x21, [sp, #32]
   88030:   a8c37bfd    ldp x29, x30, [sp], #48
   88034:   d65f03c0    ret
   88038:   90000141    adrp    x1, b0000 <_etext+0xf9c>
   8803c:   90000140    adrp    x0, b0000 <_etext+0xf9c>
   88040:   a90153f3    stp x19, x20, [sp, #16]
   88044:   910fa021    add x1, x1, #0x3e8
   88048:   910fe000    add x0, x0, #0x3f8
   8804c:   52803ba2    mov w2, #0x1dd
   88050:   f90013f5    str x21, [sp, #32]
   88054:   9400529b    bl  9cac0 <assertion_failed>
   88058:   90000141    adrp    x1, b0000 <_etext+0xf9c>
   8805c:   90000140    adrp    x0, b0000 <_etext+0xf9c>
   88060:   a90153f3    stp x19, x20, [sp, #16]
   88064:   910fa021    add x1, x1, #0x3e8
   88068:   91102000    add x0, x0, #0x408
   8806c:   52803bc2    mov w2, #0x1de
   88070:   f90013f5    str x21, [sp, #32]
   88074:   94005293    bl  9cac0 <assertion_failed>
   88078:   d503201f    nop
   8807c:   d503201f    nop

0000000000088080 <CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, CUSBHCIRootPort*)>:
   88080:   a9be7bfd    stp x29, x30, [sp, #-32]!
   88084:   910003fd    mov x29, sp
   88088:   52800024    mov w4, #0x1
   8808c:   a90153f3    stp x19, x20, [sp, #16]
   88090:   aa0003f3    mov x19, x0
   88094:   aa0303e0    mov x0, x3
   88098:   90000163    adrp    x3, b4000 <From+0x140>
   8809c:   91084063    add x3, x3, #0x210
   880a0:   a9000663    stp x3, x1, [x19]
   880a4:   a9017e60    stp x0, xzr, [x19, #16]
   880a8:   3900927f    strb    wzr, [x19, #36]
   880ac:   b9002a62    str w2, [x19, #40]
   880b0:   f9001a7f    str xzr, [x19, #48]
   880b4:   7900727f    strh    wzr, [x19, #56]
   880b8:   3900ea64    strb    w4, [x19, #58]
   880bc:   a9047e7f    stp xzr, xzr, [x19, #64]
   880c0:   a9057e7f    stp xzr, xzr, [x19, #80]
   880c4:   b40002e1    cbz x1, 88120 <CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, CUSBHCIRootPort*)+0xa0>
   880c8:   b4000380    cbz x0, 88138 <CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, CUSBHCIRootPort*)+0xb8>
   880cc:   f9400001    ldr x1, [x0]
   880d0:   f9401421    ldr x1, [x1, #40]
   880d4:   d63f0020    blr x1
   880d8:   12001c00    and w0, w0, #0xff
   880dc:   f9401a61    ldr x1, [x19, #48]
   880e0:   29167e60    stp w0, wzr, [x19, #176]
   880e4:   b5000361    cbnz    x1, 88150 <CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, CUSBHCIRootPort*)+0xd0>
   880e8:   d2800400    mov x0, #0x20
   880ec:   94007db5    bl  a77c0 <operator new(unsigned long)>
   880f0:   aa1303e1    mov x1, x19
   880f4:   aa0003f4    mov x20, x0
   880f8:   94000712    bl  89d40 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*)>
   880fc:   91018262    add x2, x19, #0x60
   88100:   9102c261    add x1, x19, #0xb0
   88104:   f9001a74    str x20, [x19, #48]
   88108:   f800845f    str xzr, [x2], #8
   8810c:   eb01005f    cmp x2, x1
   88110:   54ffffc1    b.ne    88108 <CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, CUSBHCIRootPort*)+0x88>
   88114:   a94153f3    ldp x19, x20, [sp, #16]
   88118:   a8c27bfd    ldp x29, x30, [sp], #32
   8811c:   d65f03c0    ret
   88120:   90000141    adrp    x1, b0000 <_etext+0xf9c>
   88124:   90000140    adrp    x0, b0000 <_etext+0xf9c>
   88128:   910fa021    add x1, x1, #0x3e8
   8812c:   910fe000    add x0, x0, #0x3f8
   88130:   52800702    mov w2, #0x38
   88134:   94005263    bl  9cac0 <assertion_failed>
   88138:   90000141    adrp    x1, b0000 <_etext+0xf9c>
   8813c:   90000140    adrp    x0, b0000 <_etext+0xf9c>
   88140:   910fa021    add x1, x1, #0x3e8
   88144:   91108000    add x0, x0, #0x420
   88148:   52800722    mov w2, #0x39
   8814c:   9400525d    bl  9cac0 <assertion_failed>
   88150:   90000141    adrp    x1, b0000 <_etext+0xf9c>
   88154:   90000140    adrp    x0, b0000 <_etext+0xf9c>
   88158:   910fa021    add x1, x1, #0x3e8
   8815c:   9110e000    add x0, x0, #0x438
   88160:   52800802    mov w2, #0x40
   88164:   94005257    bl  9cac0 <assertion_failed>
   88168:   d503201f    nop
   8816c:   d503201f    nop

0000000000088170 <CUSBDevice::ReScanDevices()>:
   88170:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   88174:   910003fd    mov x29, sp
   88178:   a90153f3    stp x19, x20, [sp, #16]
   8817c:   52800014    mov w20, #0x0
   88180:   91018013    add x19, x0, #0x60
   88184:   f90013f5    str x21, [sp, #32]
   88188:   9102c015    add x21, x0, #0xb0
   8818c:   d503201f    nop
   88190:   f9400260    ldr x0, [x19]
   88194:   b40000e0    cbz x0, 881b0 <CUSBDevice::ReScanDevices()+0x40>
   88198:   f9400001    ldr x1, [x0]
   8819c:   f9402821    ldr x1, [x1, #80]
   881a0:   d63f0020    blr x1
   881a4:   f240001f    tst x0, #0x1
   881a8:   12001c00    and w0, w0, #0xff
   881ac:   1a800294    csel    w20, w20, w0, eq
   881b0:   91002273    add x19, x19, #0x8
   881b4:   eb15027f    cmp x19, x21
   881b8:   54fffec1    b.ne    88190 <CUSBDevice::ReScanDevices()+0x20>
   881bc:   f94013f5    ldr x21, [sp, #32]
   881c0:   2a1403e0    mov w0, w20
   881c4:   a94153f3    ldp x19, x20, [sp, #16]
   881c8:   a8c37bfd    ldp x29, x30, [sp], #48
   881cc:   d65f03c0    ret

00000000000881d0 <CUSBDevice::RemoveDevice()>:
   881d0:   aa0003e1    mov x1, x0
   881d4:   f9400800    ldr x0, [x0, #16]
   881d8:   b40000a0    cbz x0, 881ec <CUSBDevice::RemoveDevice()+0x1c>
   881dc:   f9400001    ldr x1, [x0]
   881e0:   f9400c21    ldr x1, [x1, #24]
   881e4:   aa0103f0    mov x16, x1
   881e8:   d61f0200    br  x16
   881ec:   f9400c20    ldr x0, [x1, #24]
   881f0:   b4000060    cbz x0, 881fc <CUSBDevice::RemoveDevice()+0x2c>
   881f4:   b9402021    ldr w1, [x1, #32]
   881f8:   17ffe81e    b   82270 <CUSBStandardHub::RemoveDeviceAt(unsigned int)>
   881fc:   90000141    adrp    x1, b0000 <_etext+0xf9c>
   88200:   90000140    adrp    x0, b0000 <_etext+0xf9c>
   88204:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   88208:   910fa021    add x1, x1, #0x3e8
   8820c:   910003fd    mov x29, sp
   88210:   91114000    add x0, x0, #0x450
   88214:   528042a2    mov w2, #0x215
   88218:   9400522a    bl  9cac0 <assertion_failed>
   8821c:   d503201f    nop

0000000000088220 <CUSBDevice::GetName(TDeviceNameSelector) const>:
   88220:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   88224:   910003fd    mov x29, sp
   88228:   f90013f5    str x21, [sp, #32]
   8822c:   aa0003f5    mov x21, x0
   88230:   d2800400    mov x0, #0x20
   88234:   a90153f3    stp x19, x20, [sp, #16]
   88238:   2a0103f4    mov w20, w1
   8823c:   94007d61    bl  a77c0 <operator new(unsigned long)>
   88240:   aa0003f3    mov x19, x0
   88244:   94006ea3    bl  a3cd0 <CString::CString()>
   88248:   340002b4    cbz w20, 8829c <CUSBDevice::GetName(TDeviceNameSelector) const+0x7c>
   8824c:   7100069f    cmp w20, #0x1
   88250:   540005a1    b.ne    88304 <CUSBDevice::GetName(TDeviceNameSelector) const+0xe4>
   88254:   f94026a3    ldr x3, [x21, #72]
   88258:   b40006e3    cbz x3, 88334 <CUSBDevice::GetName(TDeviceNameSelector) const+0x114>
   8825c:   39401062    ldrb    w2, [x3, #4]
   88260:   51000440    sub w0, w2, #0x1
   88264:   12001c00    and w0, w0, #0xff
   88268:   7103f41f    cmp w0, #0xfd
   8826c:   540003a8    b.hi    882e0 <CUSBDevice::GetName(TDeviceNameSelector) const+0xc0>
   88270:   90000141    adrp    x1, b0000 <_etext+0xf9c>
   88274:   39401864    ldrb    w4, [x3, #6]
   88278:   aa1303e0    mov x0, x19
   8827c:   91124021    add x1, x1, #0x490
   88280:   39401463    ldrb    w3, [x3, #5]
   88284:   9400749f    bl  a5500 <CString::Format(char const*, ...)>
   88288:   f94013f5    ldr x21, [sp, #32]
   8828c:   aa1303e0    mov x0, x19
   88290:   a94153f3    ldp x19, x20, [sp, #16]
   88294:   a8c37bfd    ldp x29, x30, [sp], #48
   88298:   d65f03c0    ret
   8829c:   f94026a4    ldr x4, [x21, #72]
   882a0:   b40003e4    cbz x4, 8831c <CUSBDevice::GetName(TDeviceNameSelector) const+0xfc>
   882a4:   39402c85    ldrb    w5, [x4, #11]
   882a8:   90000141    adrp    x1, b0000 <_etext+0xf9c>
   882ac:   aa1303e0    mov x0, x19
   882b0:   9111e021    add x1, x1, #0x478
   882b4:   39402883    ldrb    w3, [x4, #10]
   882b8:   39402082    ldrb    w2, [x4, #8]
   882bc:   39402484    ldrb    w4, [x4, #9]
   882c0:   2a052063    orr w3, w3, w5, lsl #8
   882c4:   2a042042    orr w2, w2, w4, lsl #8
   882c8:   9400748e    bl  a5500 <CString::Format(char const*, ...)>
   882cc:   f94013f5    ldr x21, [sp, #32]
   882d0:   aa1303e0    mov x0, x19
   882d4:   a94153f3    ldp x19, x20, [sp, #16]
   882d8:   a8c37bfd    ldp x29, x30, [sp], #48
   882dc:   d65f03c0    ret
   882e0:   aa1303e0    mov x0, x19
   882e4:   90000141    adrp    x1, b0000 <_etext+0xf9c>
   882e8:   91122021    add x1, x1, #0x488
   882ec:   94006ec5    bl  a3e00 <CString::operator=(char const*)>
   882f0:   f94013f5    ldr x21, [sp, #32]
   882f4:   aa1303e0    mov x0, x19
   882f8:   a94153f3    ldp x19, x20, [sp, #16]
   882fc:   a8c37bfd    ldp x29, x30, [sp], #48
   88300:   d65f03c0    ret
   88304:   90000141    adrp    x1, b0000 <_etext+0xf9c>
   88308:   90000140    adrp    x0, b0000 <_etext+0xf9c>
   8830c:   910fa021    add x1, x1, #0x3e8
   88310:   91106000    add x0, x0, #0x418
   88314:   528046a2    mov w2, #0x235
   88318:   940051ea    bl  9cac0 <assertion_failed>
   8831c:   90000141    adrp    x1, b0000 <_etext+0xf9c>
   88320:   90000140    adrp    x0, b0000 <_etext+0xf9c>
   88324:   910fa021    add x1, x1, #0x3e8
   88328:   91118000    add x0, x0, #0x460
   8832c:   52804422    mov w2, #0x221
   88330:   940051e4    bl  9cac0 <assertion_failed>
   88334:   90000141    adrp    x1, b0000 <_etext+0xf9c>
   88338:   90000140    adrp    x0, b0000 <_etext+0xf9c>
   8833c:   910fa021    add x1, x1, #0x3e8
   88340:   91118000    add x0, x0, #0x460
   88344:   52804502    mov w2, #0x228
   88348:   940051de    bl  9cac0 <assertion_failed>
   8834c:   d503201f    nop

0000000000088350 <CUSBDevice::GetNames() const>:
   88350:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   88354:   910003fd    mov x29, sp
   88358:   f9001bf7    str x23, [sp, #48]
   8835c:   aa0003f7    mov x23, x0
   88360:   d2800400    mov x0, #0x20
   88364:   a90153f3    stp x19, x20, [sp, #16]
   88368:   a9025bf5    stp x21, x22, [sp, #32]
   8836c:   52800015    mov w21, #0x0
   88370:   90000156    adrp    x22, b0000 <_etext+0xf9c>
   88374:   911222d6    add x22, x22, #0x488
   88378:   94007d12    bl  a77c0 <operator new(unsigned long)>
   8837c:   aa0003f4    mov x20, x0
   88380:   94006e54    bl  a3cd0 <CString::CString()>
   88384:   2a1503e1    mov w1, w21
   88388:   aa1703e0    mov x0, x23
   8838c:   97ffffa5    bl  88220 <CUSBDevice::GetName(TDeviceNameSelector) const>
   88390:   aa0003f3    mov x19, x0
   88394:   b40001e0    cbz x0, 883d0 <CUSBDevice::GetNames() const+0x80>
   88398:   aa1603e1    mov x1, x22
   8839c:   94006f11    bl  a3fe0 <CString::Compare(char const*) const>
   883a0:   35000360    cbnz    w0, 8840c <CUSBDevice::GetNames() const+0xbc>
   883a4:   f9400261    ldr x1, [x19]
   883a8:   aa1303e0    mov x0, x19
   883ac:   f9400421    ldr x1, [x1, #8]
   883b0:   d63f0020    blr x1
   883b4:   350001b5    cbnz    w21, 883e8 <CUSBDevice::GetNames() const+0x98>
   883b8:   52800035    mov w21, #0x1
   883bc:   aa1703e0    mov x0, x23
   883c0:   2a1503e1    mov w1, w21
   883c4:   97ffff97    bl  88220 <CUSBDevice::GetName(TDeviceNameSelector) const>
   883c8:   aa0003f3    mov x19, x0
   883cc:   b5fffe60    cbnz    x0, 88398 <CUSBDevice::GetNames() const+0x48>
   883d0:   90000141    adrp    x1, b0000 <_etext+0xf9c>
   883d4:   90000140    adrp    x0, b0000 <_etext+0xf9c>
   883d8:   910fa021    add x1, x1, #0x3e8
   883dc:   91128000    add x0, x0, #0x4a0
   883e0:   528048c2    mov w2, #0x246
   883e4:   940051b7    bl  9cac0 <assertion_failed>
   883e8:   aa1403e0    mov x0, x20
   883ec:   94006ec9    bl  a3f10 <CString::GetLength() const>
   883f0:   b4000200    cbz x0, 88430 <CUSBDevice::GetNames() const+0xe0>
   883f4:   a9425bf5    ldp x21, x22, [sp, #32]
   883f8:   aa1403e0    mov x0, x20
   883fc:   a94153f3    ldp x19, x20, [sp, #16]
   88400:   f9401bf7    ldr x23, [sp, #48]
   88404:   a8c47bfd    ldp x29, x30, [sp], #64
   88408:   d65f03c0    ret
   8840c:   aa1403e0    mov x0, x20
   88410:   94006ec0    bl  a3f10 <CString::GetLength() const>
   88414:   b5000200    cbnz    x0, 88454 <CUSBDevice::GetNames() const+0x104>
   88418:   aa1303e0    mov x0, x19
   8841c:   94006e71    bl  a3de0 <CString::operator char const*() const>
   88420:   aa0003e1    mov x1, x0
   88424:   aa1403e0    mov x0, x20
   88428:   94006ec2    bl  a3f30 <CString::Append(char const*)>
   8842c:   17ffffde    b   883a4 <CUSBDevice::GetNames() const+0x54>
   88430:   aa1603e1    mov x1, x22
   88434:   aa1403e0    mov x0, x20
   88438:   94006e72    bl  a3e00 <CString::operator=(char const*)>
   8843c:   a9425bf5    ldp x21, x22, [sp, #32]
   88440:   aa1403e0    mov x0, x20
   88444:   a94153f3    ldp x19, x20, [sp, #16]
   88448:   f9401bf7    ldr x23, [sp, #48]
   8844c:   a8c47bfd    ldp x29, x30, [sp], #64
   88450:   d65f03c0    ret
   88454:   90000141    adrp    x1, b0000 <_etext+0xf9c>
   88458:   9112c021    add x1, x1, #0x4b0
   8845c:   aa1403e0    mov x0, x20
   88460:   94006eb4    bl  a3f30 <CString::Append(char const*)>
   88464:   17ffffed    b   88418 <CUSBDevice::GetNames() const+0xc8>
   88468:   d503201f    nop
   8846c:   d503201f    nop

0000000000088470 <CUSBDevice::SetAddress(unsigned char)>:
   88470:   12001c21    and w1, w1, #0xff
   88474:   51000422    sub w2, w1, #0x1
   88478:   12001c42    and w2, w2, #0xff
   8847c:   71007c5f    cmp w2, #0x1f
   88480:   54000068    b.hi    8848c <CUSBDevice::SetAddress(unsigned char)+0x1c>
   88484:   39009001    strb    w1, [x0, #36]
   88488:   d65f03c0    ret
   8848c:   90000141    adrp    x1, b0000 <_etext+0xf9c>
   88490:   90000140    adrp    x0, b0000 <_etext+0xf9c>
   88494:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   88498:   910fa021    add x1, x1, #0x3e8
   8849c:   910003fd    mov x29, sp
   884a0:   9112e000    add x0, x0, #0x4b8
   884a4:   52804c42    mov w2, #0x262
   884a8:   94005186    bl  9cac0 <assertion_failed>
   884ac:   d503201f    nop

00000000000884b0 <CUSBDevice::GetAddress() const>:
   884b0:   39409000    ldrb    w0, [x0, #36]
   884b4:   d65f03c0    ret
   884b8:   d503201f    nop
   884bc:   d503201f    nop

00000000000884c0 <CUSBDevice::GetSpeed() const>:
   884c0:   b9402800    ldr w0, [x0, #40]
   884c4:   d65f03c0    ret
   884c8:   d503201f    nop
   884cc:   d503201f    nop

00000000000884d0 <CUSBDevice::IsSplit() const>:
   884d0:   3940e000    ldrb    w0, [x0, #56]
   884d4:   d65f03c0    ret
   884d8:   d503201f    nop
   884dc:   d503201f    nop

00000000000884e0 <CUSBDevice::GetHubAddress() const>:
   884e0:   3940e400    ldrb    w0, [x0, #57]
   884e4:   d65f03c0    ret
   884e8:   d503201f    nop
   884ec:   d503201f    nop

00000000000884f0 <CUSBDevice::GetHubPortNumber() const>:
   884f0:   3940e800    ldrb    w0, [x0, #58]
   884f4:   d65f03c0    ret
   884f8:   d503201f    nop
   884fc:   d503201f    nop

0000000000088500 <CUSBDevice::GetTTHubDevice() const>:
   88500:   f9402000    ldr x0, [x0, #64]
   88504:   d65f03c0    ret
   88508:   d503201f    nop
   8850c:   d503201f    nop

0000000000088510 <CUSBDevice::GetEndpoint0() const>:
   88510:   f9401800    ldr x0, [x0, #48]
   88514:   b4000040    cbz x0, 8851c <CUSBDevice::GetEndpoint0() const+0xc>
   88518:   d65f03c0    ret
   8851c:   90000141    adrp    x1, b0000 <_etext+0xf9c>
   88520:   90000140    adrp    x0, b0000 <_etext+0xf9c>
   88524:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   88528:   910fa021    add x1, x1, #0x3e8
   8852c:   910003fd    mov x29, sp
   88530:   91102000    add x0, x0, #0x408
   88534:   52805122    mov w2, #0x289
   88538:   94005162    bl  9cac0 <assertion_failed>
   8853c:   d503201f    nop

0000000000088540 <CUSBDevice::GetHost() const>:
   88540:   f9400400    ldr x0, [x0, #8]
   88544:   b4000040    cbz x0, 8854c <CUSBDevice::GetHost() const+0xc>
   88548:   d65f03c0    ret
   8854c:   90000141    adrp    x1, b0000 <_etext+0xf9c>
   88550:   90000140    adrp    x0, b0000 <_etext+0xf9c>
   88554:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   88558:   910fa021    add x1, x1, #0x3e8
   8855c:   910003fd    mov x29, sp
   88560:   910fe000    add x0, x0, #0x3f8
   88564:   528051e2    mov w2, #0x28f
   88568:   94005156    bl  9cac0 <assertion_failed>
   8856c:   d503201f    nop

0000000000088570 <CUSBDevice::GetDeviceDescriptor() const>:
   88570:   f9402400    ldr x0, [x0, #72]
   88574:   b4000040    cbz x0, 8857c <CUSBDevice::GetDeviceDescriptor() const+0xc>
   88578:   d65f03c0    ret
   8857c:   90000141    adrp    x1, b0000 <_etext+0xf9c>
   88580:   90000140    adrp    x0, b0000 <_etext+0xf9c>
   88584:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   88588:   910fa021    add x1, x1, #0x3e8
   8858c:   910003fd    mov x29, sp
   88590:   91118000    add x0, x0, #0x460
   88594:   528052a2    mov w2, #0x295
   88598:   9400514a    bl  9cac0 <assertion_failed>
   8859c:   d503201f    nop

00000000000885a0 <CUSBDevice::GetConfigurationDescriptor() const>:
   885a0:   f9402800    ldr x0, [x0, #80]
   885a4:   b4000040    cbz x0, 885ac <CUSBDevice::GetConfigurationDescriptor() const+0xc>
   885a8:   d65f03c0    ret
   885ac:   90000141    adrp    x1, b0000 <_etext+0xf9c>
   885b0:   90000140    adrp    x0, b0000 <_etext+0xf9c>
   885b4:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   885b8:   910fa021    add x1, x1, #0x3e8
   885bc:   910003fd    mov x29, sp
   885c0:   91136000    add x0, x0, #0x4d8
   885c4:   52805362    mov w2, #0x29b
   885c8:   9400513e    bl  9cac0 <assertion_failed>
   885cc:   d503201f    nop

00000000000885d0 <CUSBDevice::GetDescriptor(unsigned char)>:
   885d0:   f9402c00    ldr x0, [x0, #88]
   885d4:   b4000060    cbz x0, 885e0 <CUSBDevice::GetDescriptor(unsigned char)+0x10>
   885d8:   12001c21    and w1, w1, #0xff
   885dc:   14004551    b   99b20 <CUSBConfigurationParser::GetDescriptor(unsigned char)>
   885e0:   90000141    adrp    x1, b0000 <_etext+0xf9c>
   885e4:   90000140    adrp    x0, b0000 <_etext+0xf9c>
   885e8:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   885ec:   910fa021    add x1, x1, #0x3e8
   885f0:   910003fd    mov x29, sp
   885f4:   9113c000    add x0, x0, #0x4f0
   885f8:   52805422    mov w2, #0x2a1
   885fc:   94005131    bl  9cac0 <assertion_failed>

0000000000088600 <CUSBDevice::ConfigurationError(char const*) const>:
   88600:   f9402c00    ldr x0, [x0, #88]
   88604:   b4000040    cbz x0, 8860c <CUSBDevice::ConfigurationError(char const*) const+0xc>
   88608:   1400458a    b   99c30 <CUSBConfigurationParser::Error(char const*) const>
   8860c:   90000141    adrp    x1, b0000 <_etext+0xf9c>
   88610:   90000140    adrp    x0, b0000 <_etext+0xf9c>
   88614:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   88618:   910fa021    add x1, x1, #0x3e8
   8861c:   910003fd    mov x29, sp
   88620:   9113c000    add x0, x0, #0x4f0
   88624:   528054e2    mov w2, #0x2a7
   88628:   94005126    bl  9cac0 <assertion_failed>
   8862c:   d503201f    nop

0000000000088630 <CUSBDevice::GetFunction(unsigned int)>:
   88630:   7100243f    cmp w1, #0x9
   88634:   540000a8    b.hi    88648 <CUSBDevice::GetFunction(unsigned int)+0x18>
   88638:   2a0103e1    mov w1, w1
   8863c:   91003021    add x1, x1, #0xc
   88640:   f8617800    ldr x0, [x0, x1, lsl #3]
   88644:   d65f03c0    ret
   88648:   d2800000    mov x0, #0x0
   8864c:   d65f03c0    ret

0000000000088650 <CUSBDevice::AppendPortToRouteString(unsigned int, unsigned int)>:
   88650:   72000c02    ands    w2, w0, #0xf
   88654:   54000180    b.eq    88684 <CUSBDevice::AppendPortToRouteString(unsigned int, unsigned int)+0x34>
   88658:   721c0c1f    tst w0, #0xf0
   8865c:   54000120    b.eq    88680 <CUSBDevice::AppendPortToRouteString(unsigned int, unsigned int)+0x30>
   88660:   72180c1f    tst w0, #0xf00
   88664:   540002a0    b.eq    886b8 <CUSBDevice::AppendPortToRouteString(unsigned int, unsigned int)+0x68>
   88668:   72140c1f    tst w0, #0xf000
   8866c:   540002a0    b.eq    886c0 <CUSBDevice::AppendPortToRouteString(unsigned int, unsigned int)+0x70>
   88670:   72100c1f    tst w0, #0xf0000
   88674:   52800082    mov w2, #0x4
   88678:   54000060    b.eq    88684 <CUSBDevice::AppendPortToRouteString(unsigned int, unsigned int)+0x34>
   8867c:   d65f03c0    ret
   88680:   52800022    mov w2, #0x1
   88684:   531e7442    lsl w2, w2, #2
   88688:   71003c3f    cmp w1, #0xf
   8868c:   1ac22021    lsl w1, w1, w2
   88690:   2a010000    orr w0, w0, w1
   88694:   54ffff49    b.ls    8867c <CUSBDevice::AppendPortToRouteString(unsigned int, unsigned int)+0x2c>
   88698:   90000141    adrp    x1, b0000 <_etext+0xf9c>
   8869c:   90000140    adrp    x0, b0000 <_etext+0xf9c>
   886a0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   886a4:   910fa021    add x1, x1, #0x3e8
   886a8:   910003fd    mov x29, sp
   886ac:   91142000    add x0, x0, #0x508
   886b0:   52805ca2    mov w2, #0x2e5
   886b4:   94005103    bl  9cac0 <assertion_failed>
   886b8:   52800042    mov w2, #0x2
   886bc:   17fffff2    b   88684 <CUSBDevice::AppendPortToRouteString(unsigned int, unsigned int)+0x34>
   886c0:   52800062    mov w2, #0x3
   886c4:   17fffff0    b   88684 <CUSBDevice::AppendPortToRouteString(unsigned int, unsigned int)+0x34>
   886c8:   d503201f    nop
   886cc:   d503201f    nop

00000000000886d0 <CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, CUSBStandardHub*, unsigned int)>:
   886d0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   886d4:   910003fd    mov x29, sp
   886d8:   a90153f3    stp x19, x20, [sp, #16]
   886dc:   aa0003f3    mov x19, x0
   886e0:   aa0303e0    mov x0, x3
   886e4:   90000163    adrp    x3, b4000 <From+0x140>
   886e8:   91084063    add x3, x3, #0x210
   886ec:   f90013f5    str x21, [sp, #32]
   886f0:   a9000663    stp x3, x1, [x19]
   886f4:   a901027f    stp xzr, x0, [x19, #16]
   886f8:   b9002264    str w4, [x19, #32]
   886fc:   3900927f    strb    wzr, [x19, #36]
   88700:   b9002a62    str w2, [x19, #40]
   88704:   f9001a7f    str xzr, [x19, #48]
   88708:   a904fe7f    stp xzr, xzr, [x19, #72]
   8870c:   f9002e7f    str xzr, [x19, #88]
   88710:   b4000681    cbz x1, 887e0 <CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, CUSBStandardHub*, unsigned int)+0x110>
   88714:   b4000720    cbz x0, 887f8 <CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, CUSBStandardHub*, unsigned int)+0x128>
   88718:   2a0403f5    mov w21, w4
   8871c:   94000775    bl  8a4f0 <CUSBFunction::GetDevice() const>
   88720:   aa0003f4    mov x20, x0
   88724:   b4000760    cbz x0, 88810 <CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, CUSBStandardHub*, unsigned int)+0x140>
   88728:   29560002    ldp w2, w0, [x0, #176]
   8872c:   110006a1    add w1, w21, #0x1
   88730:   b900b262    str w2, [x19, #176]
   88734:   97ffffc7    bl  88650 <CUSBDevice::AppendPortToRouteString(unsigned int, unsigned int)>
   88738:   3940e281    ldrb    w1, [x20, #56]
   8873c:   b900b660    str w0, [x19, #180]
   88740:   3900e261    strb    w1, [x19, #56]
   88744:   3940e680    ldrb    w0, [x20, #57]
   88748:   3900e660    strb    w0, [x19, #57]
   8874c:   3940ea80    ldrb    w0, [x20, #58]
   88750:   3900ea60    strb    w0, [x19, #58]
   88754:   f9402280    ldr x0, [x20, #64]
   88758:   f9002260    str x0, [x19, #64]
   8875c:   36000241    tbz w1, #0, 887a4 <CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, CUSBStandardHub*, unsigned int)+0xd4>
   88760:   f9401a60    ldr x0, [x19, #48]
   88764:   b5000620    cbnz    x0, 88828 <CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, CUSBStandardHub*, unsigned int)+0x158>
   88768:   d2800400    mov x0, #0x20
   8876c:   94007c15    bl  a77c0 <operator new(unsigned long)>
   88770:   aa1303e1    mov x1, x19
   88774:   aa0003f4    mov x20, x0
   88778:   94000572    bl  89d40 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*)>
   8877c:   91018261    add x1, x19, #0x60
   88780:   9102c262    add x2, x19, #0xb0
   88784:   f9001a74    str x20, [x19, #48]
   88788:   f800843f    str xzr, [x1], #8
   8878c:   eb02003f    cmp x1, x2
   88790:   54ffffc1    b.ne    88788 <CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, CUSBStandardHub*, unsigned int)+0xb8>
   88794:   a94153f3    ldp x19, x20, [sp, #16]
   88798:   f94013f5    ldr x21, [sp, #32]
   8879c:   a8c37bfd    ldp x29, x30, [sp], #48
   887a0:   d65f03c0    ret
   887a4:   b9402a80    ldr w0, [x20, #40]
   887a8:   7100081f    cmp w0, #0x2
   887ac:   54fffda1    b.ne    88760 <CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, CUSBStandardHub*, unsigned int)+0x90>
   887b0:   b9402a60    ldr w0, [x19, #40]
   887b4:   7100041f    cmp w0, #0x1
   887b8:   54fffd4c    b.gt    88760 <CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, CUSBStandardHub*, unsigned int)+0x90>
   887bc:   52800021    mov w1, #0x1
   887c0:   b9402260    ldr w0, [x19, #32]
   887c4:   3900e261    strb    w1, [x19, #56]
   887c8:   39409281    ldrb    w1, [x20, #36]
   887cc:   f9002274    str x20, [x19, #64]
   887d0:   11000400    add w0, w0, #0x1
   887d4:   3900ea60    strb    w0, [x19, #58]
   887d8:   3900e661    strb    w1, [x19, #57]
   887dc:   17ffffe1    b   88760 <CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, CUSBStandardHub*, unsigned int)+0x90>
   887e0:   90000141    adrp    x1, b0000 <_etext+0xf9c>
   887e4:   90000140    adrp    x0, b0000 <_etext+0xf9c>
   887e8:   910fa021    add x1, x1, #0x3e8
   887ec:   910fe000    add x0, x0, #0x3f8
   887f0:   52800ae2    mov w2, #0x57
   887f4:   940050b3    bl  9cac0 <assertion_failed>
   887f8:   90000141    adrp    x1, b0000 <_etext+0xf9c>
   887fc:   90000140    adrp    x0, b0000 <_etext+0xf9c>
   88800:   910fa021    add x1, x1, #0x3e8
   88804:   91114000    add x0, x0, #0x450
   88808:   52800b02    mov w2, #0x58
   8880c:   940050ad    bl  9cac0 <assertion_failed>
   88810:   90000141    adrp    x1, b0000 <_etext+0xf9c>
   88814:   90000140    adrp    x0, b0000 <_etext+0xf9c>
   88818:   910fa021    add x1, x1, #0x3e8
   8881c:   91146000    add x0, x0, #0x518
   88820:   52800b62    mov w2, #0x5b
   88824:   940050a7    bl  9cac0 <assertion_failed>
   88828:   90000141    adrp    x1, b0000 <_etext+0xf9c>
   8882c:   90000140    adrp    x0, b0000 <_etext+0xf9c>
   88830:   910fa021    add x1, x1, #0x3e8
   88834:   9110e000    add x0, x0, #0x438
   88838:   52800e62    mov w2, #0x73
   8883c:   940050a1    bl  9cac0 <assertion_failed>

0000000000088840 <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>:
   88840:   a9ab7bfd    stp x29, x30, [sp, #-336]!
   88844:   910003fd    mov x29, sp
   88848:   a90153f3    stp x19, x20, [sp, #16]
   8884c:   a9025bf5    stp x21, x22, [sp, #32]
   88850:   a90363f7    stp x23, x24, [sp, #48]
   88854:   3d802be0    str q0, [sp, #160]
   88858:   3d802fe1    str q1, [sp, #176]
   8885c:   3d8033e2    str q2, [sp, #192]
   88860:   3d8037e3    str q3, [sp, #208]
   88864:   3d803be4    str q4, [sp, #224]
   88868:   3d803fe5    str q5, [sp, #240]
   8886c:   3d8043e6    str q6, [sp, #256]
   88870:   3d8047e7    str q7, [sp, #272]
   88874:   a91293e3    stp x3, x4, [sp, #296]
   88878:   a9139be5    stp x5, x6, [sp, #312]
   8887c:   f900a7e7    str x7, [sp, #328]
   88880:   b40008a2    cbz x2, 88994 <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)+0x154>
   88884:   aa0003f5    mov x21, x0
   88888:   910183e0    add x0, sp, #0x60
   8888c:   aa0203f7    mov x23, x2
   88890:   2a0103f8    mov w24, w1
   88894:   94006d0f    bl  a3cd0 <CString::CString()>
   88898:   90000162    adrp    x2, b4000 <From+0x140>
   8889c:   90000141    adrp    x1, b0000 <_etext+0xf9c>
   888a0:   b940b2a3    ldr w3, [x21, #176]
   888a4:   910183e0    add x0, sp, #0x60
   888a8:   91090042    add x2, x2, #0x240
   888ac:   9114e021    add x1, x1, #0x538
   888b0:   94007314    bl  a5500 <CString::Format(char const*, ...)>
   888b4:   b940b6a4    ldr w4, [x21, #180]
   888b8:   72000c93    ands    w19, w4, #0xf
   888bc:   54000300    b.eq    8891c <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)+0xdc>
   888c0:   90000156    adrp    x22, b0000 <_etext+0xf9c>
   888c4:   911502d6    add x22, x22, #0x540
   888c8:   52800094    mov w20, #0x4
   888cc:   910203e0    add x0, sp, #0x80
   888d0:   94006d00    bl  a3cd0 <CString::CString()>
   888d4:   2a1303e2    mov w2, w19
   888d8:   aa1603e1    mov x1, x22
   888dc:   910203e0    add x0, sp, #0x80
   888e0:   94007308    bl  a5500 <CString::Format(char const*, ...)>
   888e4:   910203e0    add x0, sp, #0x80
   888e8:   94006d3e    bl  a3de0 <CString::operator char const*() const>
   888ec:   aa0003e1    mov x1, x0
   888f0:   910183e0    add x0, sp, #0x60
   888f4:   94006d8f    bl  a3f30 <CString::Append(char const*)>
   888f8:   910203e0    add x0, sp, #0x80
   888fc:   94006cb9    bl  a3be0 <CString::~CString()>
   88900:   7100529f    cmp w20, #0x14
   88904:   540000c0    b.eq    8891c <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)+0xdc>
   88908:   b940b6a4    ldr w4, [x21, #180]
   8890c:   1ad42484    lsr w4, w4, w20
   88910:   11001294    add w20, w20, #0x4
   88914:   72000c93    ands    w19, w4, #0xf
   88918:   54fffda1    b.ne    888cc <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)+0x8c>
   8891c:   910543e3    add x3, sp, #0x150
   88920:   910543e0    add x0, sp, #0x150
   88924:   910483e2    add x2, sp, #0x120
   88928:   128004e1    mov w1, #0xffffffd8
   8892c:   a9080fe0    stp x0, x3, [sp, #128]
   88930:   12800fe0    mov w0, #0xffffff80
   88934:   f9004be2    str x2, [sp, #144]
   88938:   b9009be1    str w1, [sp, #152]
   8893c:   b9009fe0    str w0, [sp, #156]
   88940:   94005b30    bl  9f600 <CLogger::Get()>
   88944:   aa0003f3    mov x19, x0
   88948:   910183e0    add x0, sp, #0x60
   8894c:   94006d25    bl  a3de0 <CString::operator char const*() const>
   88950:   a94827e8    ldp x8, x9, [sp, #128]
   88954:   aa0003e1    mov x1, x0
   88958:   aa1703e3    mov x3, x23
   8895c:   2a1803e2    mov w2, w24
   88960:   910103e4    add x4, sp, #0x40
   88964:   aa1303e0    mov x0, x19
   88968:   a9491fe6    ldp x6, x7, [sp, #144]
   8896c:   a90427e8    stp x8, x9, [sp, #64]
   88970:   a9051fe6    stp x6, x7, [sp, #80]
   88974:   94005c9f    bl  9fbf0 <CLogger::WriteV(char const*, TLogSeverity, char const*, std::__va_list)>
   88978:   910183e0    add x0, sp, #0x60
   8897c:   94006c99    bl  a3be0 <CString::~CString()>
   88980:   a94153f3    ldp x19, x20, [sp, #16]
   88984:   a9425bf5    ldp x21, x22, [sp, #32]
   88988:   a94363f7    ldp x23, x24, [sp, #48]
   8898c:   a8d57bfd    ldp x29, x30, [sp], #336
   88990:   d65f03c0    ret
   88994:   90000141    adrp    x1, b0000 <_etext+0xf9c>
   88998:   90000140    adrp    x0, b0000 <_etext+0xf9c>
   8899c:   910fa021    add x1, x1, #0x3e8
   889a0:   9114a000    add x0, x0, #0x528
   889a4:   528056e2    mov w2, #0x2b7
   889a8:   94005046    bl  9cac0 <assertion_failed>
   889ac:   d503201f    nop

00000000000889b0 <CUSBDevice::~CUSBDevice()>:
   889b0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   889b4:   910003fd    mov x29, sp
   889b8:   90000161    adrp    x1, b4000 <From+0x140>
   889bc:   91084021    add x1, x1, #0x210
   889c0:   a90153f3    stp x19, x20, [sp, #16]
   889c4:   aa0003f4    mov x20, x0
   889c8:   f9400400    ldr x0, [x0, #8]
   889cc:   f90013f5    str x21, [sp, #32]
   889d0:   f9000281    str x1, [x20]
   889d4:   b40008a0    cbz x0, 88ae8 <CUSBDevice::~CUSBDevice()+0x138>
   889d8:   f9400002    ldr x2, [x0]
   889dc:   b0ffffc1    adrp    x1, 81000 <CUSBHostController::~CUSBHostController()+0x30>
   889e0:   91124021    add x1, x1, #0x490
   889e4:   f9401842    ldr x2, [x2, #48]
   889e8:   eb01005f    cmp x2, x1
   889ec:   54000781    b.ne    88adc <CUSBDevice::~CUSBDevice()+0x12c>
   889f0:   91018293    add x19, x20, #0x60
   889f4:   9102c295    add x21, x20, #0xb0
   889f8:   f9400260    ldr x0, [x19]
   889fc:   b4000080    cbz x0, 88a0c <CUSBDevice::~CUSBDevice()+0x5c>
   88a00:   f9400001    ldr x1, [x0]
   88a04:   f9400421    ldr x1, [x1, #8]
   88a08:   d63f0020    blr x1
   88a0c:   f800867f    str xzr, [x19], #8
   88a10:   eb15027f    cmp x19, x21
   88a14:   54ffff21    b.ne    889f8 <CUSBDevice::~CUSBDevice()+0x48>
   88a18:   f9402680    ldr x0, [x20, #72]
   88a1c:   b4000200    cbz x0, 88a5c <CUSBDevice::~CUSBDevice()+0xac>
   88a20:   aa1403e0    mov x0, x20
   88a24:   97fffe4b    bl  88350 <CUSBDevice::GetNames() const>
   88a28:   aa0003f3    mov x19, x0
   88a2c:   b40006a0    cbz x0, 88b00 <CUSBDevice::~CUSBDevice()+0x150>
   88a30:   94006cec    bl  a3de0 <CString::operator char const*() const>
   88a34:   90000142    adrp    x2, b0000 <_etext+0xf9c>
   88a38:   aa0003e3    mov x3, x0
   88a3c:   52800061    mov w1, #0x3
   88a40:   aa1403e0    mov x0, x20
   88a44:   91156042    add x2, x2, #0x558
   88a48:   97ffff7e    bl  88840 <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>
   88a4c:   f9400261    ldr x1, [x19]
   88a50:   aa1303e0    mov x0, x19
   88a54:   f9400421    ldr x1, [x1, #8]
   88a58:   d63f0020    blr x1
   88a5c:   f9402e93    ldr x19, [x20, #88]
   88a60:   b40000d3    cbz x19, 88a78 <CUSBDevice::~CUSBDevice()+0xc8>
   88a64:   aa1303e0    mov x0, x19
   88a68:   94004426    bl  99b00 <CUSBConfigurationParser::~CUSBConfigurationParser()>
   88a6c:   aa1303e0    mov x0, x19
   88a70:   d2800601    mov x1, #0x30
   88a74:   94007b7b    bl  a7860 <operator delete(void*, unsigned long)>
   88a78:   f9402a80    ldr x0, [x20, #80]
   88a7c:   f9002e9f    str xzr, [x20, #88]
   88a80:   b4000060    cbz x0, 88a8c <CUSBDevice::~CUSBDevice()+0xdc>
   88a84:   d2800121    mov x1, #0x9
   88a88:   94007b76    bl  a7860 <operator delete(void*, unsigned long)>
   88a8c:   f9402680    ldr x0, [x20, #72]
   88a90:   f9002a9f    str xzr, [x20, #80]
   88a94:   b4000060    cbz x0, 88aa0 <CUSBDevice::~CUSBDevice()+0xf0>
   88a98:   d2800241    mov x1, #0x12
   88a9c:   94007b71    bl  a7860 <operator delete(void*, unsigned long)>
   88aa0:   f9401a93    ldr x19, [x20, #48]
   88aa4:   f900269f    str xzr, [x20, #72]
   88aa8:   b4000133    cbz x19, 88acc <CUSBDevice::~CUSBDevice()+0x11c>
   88aac:   aa1303e0    mov x0, x19
   88ab0:   94000534    bl  89f80 <CUSBEndpoint::~CUSBEndpoint()>
   88ab4:   f94013f5    ldr x21, [sp, #32]
   88ab8:   aa1303e0    mov x0, x19
   88abc:   d2800401    mov x1, #0x20
   88ac0:   a94153f3    ldp x19, x20, [sp, #16]
   88ac4:   a8c37bfd    ldp x29, x30, [sp], #48
   88ac8:   14007b66    b   a7860 <operator delete(void*, unsigned long)>
   88acc:   a94153f3    ldp x19, x20, [sp, #16]
   88ad0:   f94013f5    ldr x21, [sp, #32]
   88ad4:   a8c37bfd    ldp x29, x30, [sp], #48
   88ad8:   d65f03c0    ret
   88adc:   aa1403e1    mov x1, x20
   88ae0:   d63f0040    blr x2
   88ae4:   17ffffc3    b   889f0 <CUSBDevice::~CUSBDevice()+0x40>
   88ae8:   90000141    adrp    x1, b0000 <_etext+0xf9c>
   88aec:   90000140    adrp    x0, b0000 <_etext+0xf9c>
   88af0:   910fa021    add x1, x1, #0x3e8
   88af4:   910fe000    add x0, x0, #0x3f8
   88af8:   52800fe2    mov w2, #0x7f
   88afc:   94004ff1    bl  9cac0 <assertion_failed>
   88b00:   90000141    adrp    x1, b0000 <_etext+0xf9c>
   88b04:   90000140    adrp    x0, b0000 <_etext+0xf9c>
   88b08:   910fa021    add x1, x1, #0x3e8
   88b0c:   91152000    add x0, x0, #0x548
   88b10:   52801162    mov w2, #0x8b
   88b14:   94004feb    bl  9cac0 <assertion_failed>
   88b18:   d503201f    nop
   88b1c:   d503201f    nop

0000000000088b20 <CUSBDevice::~CUSBDevice()>:
   88b20:   a9be7bfd    stp x29, x30, [sp, #-32]!
   88b24:   910003fd    mov x29, sp
   88b28:   f9000bf3    str x19, [sp, #16]
   88b2c:   aa0003f3    mov x19, x0
   88b30:   97ffffa0    bl  889b0 <CUSBDevice::~CUSBDevice()>
   88b34:   aa1303e0    mov x0, x19
   88b38:   f9400bf3    ldr x19, [sp, #16]
   88b3c:   d2801701    mov x1, #0xb8
   88b40:   a8c27bfd    ldp x29, x30, [sp], #32
   88b44:   14007b47    b   a7860 <operator delete(void*, unsigned long)>
   88b48:   d503201f    nop
   88b4c:   d503201f    nop

0000000000088b50 <CUSBDevice::Initialize()>:
   88b50:   a9b77bfd    stp x29, x30, [sp, #-144]!
   88b54:   910003fd    mov x29, sp
   88b58:   a90153f3    stp x19, x20, [sp, #16]
   88b5c:   aa0003f3    mov x19, x0
   88b60:   f9402400    ldr x0, [x0, #72]
   88b64:   b5001ee0    cbnz    x0, 88f40 <CUSBDevice::Initialize()+0x3f0>
   88b68:   d2800240    mov x0, #0x12
   88b6c:   94007b15    bl  a77c0 <operator new(unsigned long)>
   88b70:   aa0003e4    mov x4, x0
   88b74:   f9400660    ldr x0, [x19, #8]
   88b78:   f9002664    str x4, [x19, #72]
   88b7c:   b4001f40    cbz x0, 88f64 <CUSBDevice::Initialize()+0x414>
   88b80:   f9401a61    ldr x1, [x19, #48]
   88b84:   b4002021    cbz x1, 88f88 <CUSBDevice::Initialize()+0x438>
   88b88:   52800022    mov w2, #0x1
   88b8c:   52800007    mov w7, #0x0
   88b90:   12800fe6    mov w6, #0xffffff80
   88b94:   52800105    mov w5, #0x8
   88b98:   52800003    mov w3, #0x0
   88b9c:   97ffe165    bl  81130 <CUSBHostController::GetDescriptor(CUSBEndpoint*, unsigned char, unsigned char, void*, unsigned int, unsigned char, unsigned short)>
   88ba0:   7100201f    cmp w0, #0x8
   88ba4:   90000142    adrp    x2, b0000 <_etext+0xf9c>
   88ba8:   91162042    add x2, x2, #0x588
   88bac:   54000181    b.ne    88bdc <CUSBDevice::Initialize()+0x8c>
   88bb0:   f9402661    ldr x1, [x19, #72]
   88bb4:   39400034    ldrb    w20, [x1]
   88bb8:   71004a9f    cmp w20, #0x12
   88bbc:   540000c1    b.ne    88bd4 <CUSBDevice::Initialize()+0x84>
   88bc0:   a9025bf5    stp x21, x22, [sp, #32]
   88bc4:   39400435    ldrb    w21, [x1, #1]
   88bc8:   710006bf    cmp w21, #0x1
   88bcc:   54000220    b.eq    88c10 <CUSBDevice::Initialize()+0xc0>
   88bd0:   a9425bf5    ldp x21, x22, [sp, #32]
   88bd4:   90000142    adrp    x2, b0000 <_etext+0xf9c>
   88bd8:   9116c042    add x2, x2, #0x5b0
   88bdc:   aa1303e0    mov x0, x19
   88be0:   52800021    mov w1, #0x1
   88be4:   97ffff17    bl  88840 <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>
   88be8:   f9402660    ldr x0, [x19, #72]
   88bec:   b4000060    cbz x0, 88bf8 <CUSBDevice::Initialize()+0xa8>
   88bf0:   d2800241    mov x1, #0x12
   88bf4:   94007b1b    bl  a7860 <operator delete(void*, unsigned long)>
   88bf8:   f900267f    str xzr, [x19, #72]
   88bfc:   52800014    mov w20, #0x0
   88c00:   2a1403e0    mov w0, w20
   88c04:   a94153f3    ldp x19, x20, [sp, #16]
   88c08:   a8c97bfd    ldp x29, x30, [sp], #144
   88c0c:   d65f03c0    ret
   88c10:   f9401a60    ldr x0, [x19, #48]
   88c14:   39401c21    ldrb    w1, [x1, #7]
   88c18:   94000502    bl  8a020 <CUSBEndpoint::SetMaxPacketSize(unsigned int)>
   88c1c:   36001f80    tbz w0, #0, 8900c <CUSBDevice::Initialize()+0x4bc>
   88c20:   f9400660    ldr x0, [x19, #8]
   88c24:   2a1403e5    mov w5, w20
   88c28:   52800007    mov w7, #0x0
   88c2c:   12800fe6    mov w6, #0xffffff80
   88c30:   52800003    mov w3, #0x0
   88c34:   f9401a61    ldr x1, [x19, #48]
   88c38:   2a1503e2    mov w2, w21
   88c3c:   f9402664    ldr x4, [x19, #72]
   88c40:   97ffe13c    bl  81130 <CUSBHostController::GetDescriptor(CUSBEndpoint*, unsigned char, unsigned char, void*, unsigned int, unsigned char, unsigned short)>
   88c44:   7100481f    cmp w0, #0x12
   88c48:   54001b21    b.ne    88fac <CUSBDevice::Initialize()+0x45c>
   88c4c:   f9402a60    ldr x0, [x19, #80]
   88c50:   b5001f80    cbnz    x0, 89040 <CUSBDevice::Initialize()+0x4f0>
   88c54:   d2800120    mov x0, #0x9
   88c58:   52800014    mov w20, #0x0
   88c5c:   94007ad9    bl  a77c0 <operator new(unsigned long)>
   88c60:   f9402661    ldr x1, [x19, #72]
   88c64:   aa0003e4    mov x4, x0
   88c68:   f9002a60    str x0, [x19, #80]
   88c6c:   39402022    ldrb    w2, [x1, #8]
   88c70:   39402420    ldrb    w0, [x1, #9]
   88c74:   2a002040    orr w0, w2, w0, lsl #8
   88c78:   7114941f    cmp w0, #0x525
   88c7c:   540000e1    b.ne    88c98 <CUSBDevice::Initialize()+0x148>
   88c80:   39402823    ldrb    w3, [x1, #10]
   88c84:   52949442    mov w2, #0xa4a2
   88c88:   39402c20    ldrb    w0, [x1, #11]
   88c8c:   2a002060    orr w0, w3, w0, lsl #8
   88c90:   6b02001f    cmp w0, w2
   88c94:   1a9f17f4    cset    w20, eq
   88c98:   f9400660    ldr x0, [x19, #8]
   88c9c:   52800007    mov w7, #0x0
   88ca0:   12800fe6    mov w6, #0xffffff80
   88ca4:   52800125    mov w5, #0x9
   88ca8:   2a1403e3    mov w3, w20
   88cac:   f9401a61    ldr x1, [x19, #48]
   88cb0:   52800042    mov w2, #0x2
   88cb4:   97ffe11f    bl  81130 <CUSBHostController::GetDescriptor(CUSBEndpoint*, unsigned char, unsigned char, void*, unsigned int, unsigned char, unsigned short)>
   88cb8:   7100241f    cmp w0, #0x9
   88cbc:   54001bc1    b.ne    89034 <CUSBDevice::Initialize()+0x4e4>
   88cc0:   f9402a60    ldr x0, [x19, #80]
   88cc4:   39400001    ldrb    w1, [x0]
   88cc8:   7100243f    cmp w1, #0x9
   88ccc:   54001881    b.ne    88fdc <CUSBDevice::Initialize()+0x48c>
   88cd0:   39400416    ldrb    w22, [x0, #1]
   88cd4:   71000adf    cmp w22, #0x2
   88cd8:   54001821    b.ne    88fdc <CUSBDevice::Initialize()+0x48c>
   88cdc:   39400801    ldrb    w1, [x0, #2]
   88ce0:   39400c15    ldrb    w21, [x0, #3]
   88ce4:   2a152035    orr w21, w1, w21, lsl #8
   88ce8:   711002bf    cmp w21, #0x400
   88cec:   54001788    b.hi    88fdc <CUSBDevice::Initialize()+0x48c>
   88cf0:   d2800121    mov x1, #0x9
   88cf4:   94007adb    bl  a7860 <operator delete(void*, unsigned long)>
   88cf8:   92403ea0    and x0, x21, #0xffff
   88cfc:   94007ab9    bl  a77e0 <operator new[](unsigned long)>
   88d00:   aa0003e4    mov x4, x0
   88d04:   f9400660    ldr x0, [x19, #8]
   88d08:   2a1403e3    mov w3, w20
   88d0c:   2a1603e2    mov w2, w22
   88d10:   2a1503e5    mov w5, w21
   88d14:   f9401a61    ldr x1, [x19, #48]
   88d18:   52800007    mov w7, #0x0
   88d1c:   12800fe6    mov w6, #0xffffff80
   88d20:   f9002a64    str x4, [x19, #80]
   88d24:   97ffe103    bl  81130 <CUSBHostController::GetDescriptor(CUSBEndpoint*, unsigned char, unsigned char, void*, unsigned int, unsigned char, unsigned short)>
   88d28:   6b15001f    cmp w0, w21
   88d2c:   90000142    adrp    x2, b0000 <_etext+0xf9c>
   88d30:   911a2042    add x2, x2, #0x688
   88d34:   2a0003f4    mov w20, w0
   88d38:   54001561    b.ne    88fe4 <CUSBDevice::Initialize()+0x494>
   88d3c:   f9402e60    ldr x0, [x19, #88]
   88d40:   b5002bc0    cbnz    x0, 892b8 <CUSBDevice::Initialize()+0x768>
   88d44:   d2800600    mov x0, #0x30
   88d48:   94007a9e    bl  a77c0 <operator new(unsigned long)>
   88d4c:   f9402a61    ldr x1, [x19, #80]
   88d50:   2a1403e2    mov w2, w20
   88d54:   aa0003f4    mov x20, x0
   88d58:   940042f6    bl  99930 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)>
   88d5c:   aa1403e0    mov x0, x20
   88d60:   f9002e74    str x20, [x19, #88]
   88d64:   9400436b    bl  99b10 <CUSBConfigurationParser::IsValid() const>
   88d68:   36002400    tbz w0, #0, 891e8 <CUSBDevice::Initialize()+0x698>
   88d6c:   b9802a60    ldrsw   x0, [x19, #40]
   88d70:   f1000c1f    cmp x0, #0x3
   88d74:   54002c28    b.hi    892f8 <CUSBDevice::Initialize()+0x7a8>
   88d78:   aa1303e0    mov x0, x19
   88d7c:   97fffd75    bl  88350 <CUSBDevice::GetNames() const>
   88d80:   aa0003f4    mov x20, x0
   88d84:   b4002aa0    cbz x0, 892d8 <CUSBDevice::Initialize()+0x788>
   88d88:   94006c16    bl  a3de0 <CString::operator char const*() const>
   88d8c:   b9802a65    ldrsw   x5, [x19, #40]
   88d90:   90000164    adrp    x4, b4000 <From+0x140>
   88d94:   91090084    add x4, x4, #0x240
   88d98:   90000142    adrp    x2, b0000 <_etext+0xf9c>
   88d9c:   91004084    add x4, x4, #0x10
   88da0:   aa0003e3    mov x3, x0
   88da4:   911be042    add x2, x2, #0x6f8
   88da8:   aa1303e0    mov x0, x19
   88dac:   52800061    mov w1, #0x3
   88db0:   f8657884    ldr x4, [x4, x5, lsl #3]
   88db4:   97fffea3    bl  88840 <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>
   88db8:   f9400281    ldr x1, [x20]
   88dbc:   aa1403e0    mov x0, x20
   88dc0:   f9400421    ldr x1, [x1, #8]
   88dc4:   d63f0020    blr x1
   88dc8:   9101c3e0    add x0, sp, #0x70
   88dcc:   94006bc1    bl  a3cd0 <CString::CString()>
   88dd0:   910163e0    add x0, sp, #0x58
   88dd4:   aa1303e1    mov x1, x19
   88dd8:   94001c3e    bl  8fed0 <CUSBString::CUSBString(CUSBDevice*)>
   88ddc:   f9402660    ldr x0, [x19, #72]
   88de0:   39403814    ldrb    w20, [x0, #14]
   88de4:   51000682    sub w2, w20, #0x1
   88de8:   12001c42    and w2, w2, #0xff
   88dec:   7103f45f    cmp w2, #0xfd
   88df0:   54001dc9    b.ls    891a8 <CUSBDevice::Initialize()+0x658>
   88df4:   39403c14    ldrb    w20, [x0, #15]
   88df8:   51000680    sub w0, w20, #0x1
   88dfc:   12001c00    and w0, w0, #0xff
   88e00:   7103f41f    cmp w0, #0xfd
   88e04:   54002109    b.ls    89224 <CUSBDevice::Initialize()+0x6d4>
   88e08:   9101c3e0    add x0, sp, #0x70
   88e0c:   94006c41    bl  a3f10 <CString::GetLength() const>
   88e10:   b5001f80    cbnz    x0, 89200 <CUSBDevice::Initialize()+0x6b0>
   88e14:   f9402a62    ldr x2, [x19, #80]
   88e18:   52800015    mov w21, #0x0
   88e1c:   52800016    mov w22, #0x0
   88e20:   f9400660    ldr x0, [x19, #8]
   88e24:   f9401a61    ldr x1, [x19, #48]
   88e28:   39401442    ldrb    w2, [x2, #5]
   88e2c:   97ffe0e1    bl  811b0 <CUSBHostController::SetConfiguration(CUSBEndpoint*, unsigned char)>
   88e30:   12001c14    and w20, w0, #0xff
   88e34:   36002300    tbz w0, #0, 89294 <CUSBDevice::Initialize()+0x744>
   88e38:   a90363f7    stp x23, x24, [sp, #48]
   88e3c:   90000158    adrp    x24, b0000 <_etext+0xf9c>
   88e40:   91122318    add x24, x24, #0x488
   88e44:   90000157    adrp    x23, b0000 <_etext+0xf9c>
   88e48:   911d22f7    add x23, x23, #0x748
   88e4c:   a9046bf9    stp x25, x26, [sp, #64]
   88e50:   52800081    mov w1, #0x4
   88e54:   f9402e60    ldr x0, [x19, #88]
   88e58:   94004332    bl  99b20 <CUSBConfigurationParser::GetDescriptor(unsigned char)>
   88e5c:   b4000600    cbz x0, 88f1c <CUSBDevice::Initialize()+0x3cc>
   88e60:   39400801    ldrb    w1, [x0, #2]
   88e64:   6b0102bf    cmp w21, w1
   88e68:   1a8182b9    csel    w25, w21, w1, hi
   88e6c:   12001f39    and w25, w25, #0xff
   88e70:   6b15003f    cmp w1, w21
   88e74:   54000f63    b.cc    89060 <CUSBDevice::Initialize()+0x510>
   88e78:   f9402e60    ldr x0, [x19, #88]
   88e7c:   b4002000    cbz x0, 8927c <CUSBDevice::Initialize()+0x72c>
   88e80:   8b364e7a    add x26, x19, w22, uxtw #3
   88e84:   f9403340    ldr x0, [x26, #96]
   88e88:   b5001ee0    cbnz    x0, 89264 <CUSBDevice::Initialize()+0x714>
   88e8c:   d2800500    mov x0, #0x28
   88e90:   94007a4c    bl  a77c0 <operator new(unsigned long)>
   88e94:   aa0003f5    mov x21, x0
   88e98:   f9402e62    ldr x2, [x19, #88]
   88e9c:   aa1303e1    mov x1, x19
   88ea0:   94000500    bl  8a2a0 <CUSBFunction::CUSBFunction(CUSBDevice*, CUSBConfigurationParser*)>
   88ea4:   f9003355    str x21, [x26, #96]
   88ea8:   35000ff6    cbnz    w22, 890a4 <CUSBDevice::Initialize()+0x554>
   88eac:   52800001    mov w1, #0x0
   88eb0:   aa1303e0    mov x0, x19
   88eb4:   97fffcdb    bl  88220 <CUSBDevice::GetName(TDeviceNameSelector) const>
   88eb8:   aa0003e1    mov x1, x0
   88ebc:   aa1503e0    mov x0, x21
   88ec0:   940001f0    bl  89680 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)>
   88ec4:   aa0003f5    mov x21, x0
   88ec8:   b4000da0    cbz x0, 8907c <CUSBDevice::Initialize()+0x52c>
   88ecc:   f9403260    ldr x0, [x19, #96]
   88ed0:   b40015c0    cbz x0, 89188 <CUSBDevice::Initialize()+0x638>
   88ed4:   f9400001    ldr x1, [x0]
   88ed8:   f9400421    ldr x1, [x1, #8]
   88edc:   d63f0020    blr x1
   88ee0:   f94002a1    ldr x1, [x21]
   88ee4:   aa1503e0    mov x0, x21
   88ee8:   f9402021    ldr x1, [x1, #64]
   88eec:   f9003355    str x21, [x26, #96]
   88ef0:   d63f0020    blr x1
   88ef4:   36001300    tbz w0, #0, 89154 <CUSBDevice::Initialize()+0x604>
   88ef8:   110006d6    add w22, w22, #0x1
   88efc:   71002adf    cmp w22, #0xa
   88f00:   54002220    b.eq    89344 <CUSBDevice::Initialize()+0x7f4>
   88f04:   f9402e60    ldr x0, [x19, #88]
   88f08:   11000735    add w21, w25, #0x1
   88f0c:   52800081    mov w1, #0x4
   88f10:   12001eb5    and w21, w21, #0xff
   88f14:   94004303    bl  99b20 <CUSBConfigurationParser::GetDescriptor(unsigned char)>
   88f18:   b5fffa40    cbnz    x0, 88e60 <CUSBDevice::Initialize()+0x310>
   88f1c:   34002256    cbz w22, 89364 <CUSBDevice::Initialize()+0x814>
   88f20:   a94363f7    ldp x23, x24, [sp, #48]
   88f24:   a9446bf9    ldp x25, x26, [sp, #64]
   88f28:   910163e0    add x0, sp, #0x58
   88f2c:   94001c35    bl  90000 <CUSBString::~CUSBString()>
   88f30:   9101c3e0    add x0, sp, #0x70
   88f34:   94006b2b    bl  a3be0 <CString::~CString()>
   88f38:   a9425bf5    ldp x21, x22, [sp, #32]
   88f3c:   17ffff31    b   88c00 <CUSBDevice::Initialize()+0xb0>
   88f40:   90000141    adrp    x1, b0000 <_etext+0xf9c>
   88f44:   90000140    adrp    x0, b0000 <_etext+0xf9c>
   88f48:   a9025bf5    stp x21, x22, [sp, #32]
   88f4c:   910fa021    add x1, x1, #0x3e8
   88f50:   9115c000    add x0, x0, #0x570
   88f54:   52801682    mov w2, #0xb4
   88f58:   a90363f7    stp x23, x24, [sp, #48]
   88f5c:   a9046bf9    stp x25, x26, [sp, #64]
   88f60:   94004ed8    bl  9cac0 <assertion_failed>
   88f64:   90000141    adrp    x1, b0000 <_etext+0xf9c>
   88f68:   90000140    adrp    x0, b0000 <_etext+0xf9c>
   88f6c:   a9025bf5    stp x21, x22, [sp, #32]
   88f70:   910fa021    add x1, x1, #0x3e8
   88f74:   910fe000    add x0, x0, #0x3f8
   88f78:   52801702    mov w2, #0xb8
   88f7c:   a90363f7    stp x23, x24, [sp, #48]
   88f80:   a9046bf9    stp x25, x26, [sp, #64]
   88f84:   94004ecf    bl  9cac0 <assertion_failed>
   88f88:   90000141    adrp    x1, b0000 <_etext+0xf9c>
   88f8c:   90000140    adrp    x0, b0000 <_etext+0xf9c>
   88f90:   a9025bf5    stp x21, x22, [sp, #32]
   88f94:   910fa021    add x1, x1, #0x3e8
   88f98:   91102000    add x0, x0, #0x408
   88f9c:   52801722    mov w2, #0xb9
   88fa0:   a90363f7    stp x23, x24, [sp, #48]
   88fa4:   a9046bf9    stp x25, x26, [sp, #64]
   88fa8:   94004ec6    bl  9cac0 <assertion_failed>
   88fac:   aa1303e0    mov x0, x19
   88fb0:   2a1503e1    mov w1, w21
   88fb4:   90000142    adrp    x2, b0000 <_etext+0xf9c>
   88fb8:   9117e042    add x2, x2, #0x5f8
   88fbc:   97fffe21    bl  88840 <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>
   88fc0:   f9402660    ldr x0, [x19, #72]
   88fc4:   b4000320    cbz x0, 89028 <CUSBDevice::Initialize()+0x4d8>
   88fc8:   d2800241    mov x1, #0x12
   88fcc:   94007a25    bl  a7860 <operator delete(void*, unsigned long)>
   88fd0:   a9425bf5    ldp x21, x22, [sp, #32]
   88fd4:   f900267f    str xzr, [x19, #72]
   88fd8:   17ffff09    b   88bfc <CUSBDevice::Initialize()+0xac>
   88fdc:   90000142    adrp    x2, b0000 <_etext+0xf9c>
   88fe0:   91198042    add x2, x2, #0x660
   88fe4:   aa1303e0    mov x0, x19
   88fe8:   52800021    mov w1, #0x1
   88fec:   97fffe15    bl  88840 <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>
   88ff0:   f9402a60    ldr x0, [x19, #80]
   88ff4:   b4000060    cbz x0, 89000 <CUSBDevice::Initialize()+0x4b0>
   88ff8:   d2800121    mov x1, #0x9
   88ffc:   94007a19    bl  a7860 <operator delete(void*, unsigned long)>
   89000:   a9425bf5    ldp x21, x22, [sp, #32]
   89004:   f9002a7f    str xzr, [x19, #80]
   89008:   17fffefd    b   88bfc <CUSBDevice::Initialize()+0xac>
   8900c:   aa1303e0    mov x0, x19
   89010:   2a1503e1    mov w1, w21
   89014:   f0000122    adrp    x2, b0000 <_etext+0xf9c>
   89018:   91174042    add x2, x2, #0x5d0
   8901c:   97fffe09    bl  88840 <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>
   89020:   f9402660    ldr x0, [x19, #72]
   89024:   b5fffd20    cbnz    x0, 88fc8 <CUSBDevice::Initialize()+0x478>
   89028:   a9425bf5    ldp x21, x22, [sp, #32]
   8902c:   f900267f    str xzr, [x19, #72]
   89030:   17fffef3    b   88bfc <CUSBDevice::Initialize()+0xac>
   89034:   f0000122    adrp    x2, b0000 <_etext+0xf9c>
   89038:   9118c042    add x2, x2, #0x630
   8903c:   17ffffea    b   88fe4 <CUSBDevice::Initialize()+0x494>
   89040:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89044:   f0000120    adrp    x0, b0000 <_etext+0xf9c>
   89048:   a90363f7    stp x23, x24, [sp, #48]
   8904c:   910fa021    add x1, x1, #0x3e8
   89050:   91186000    add x0, x0, #0x618
   89054:   52802082    mov w2, #0x104
   89058:   a9046bf9    stp x25, x26, [sp, #64]
   8905c:   94004e99    bl  9cac0 <assertion_failed>
   89060:   39400c03    ldrb    w3, [x0, #3]
   89064:   aa1703e2    mov x2, x23
   89068:   52800081    mov w1, #0x4
   8906c:   aa1303e0    mov x0, x19
   89070:   2a1903f5    mov w21, w25
   89074:   97fffdf3    bl  88840 <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>
   89078:   17ffff76    b   88e50 <CUSBDevice::Initialize()+0x300>
   8907c:   f9403275    ldr x21, [x19, #96]
   89080:   52800021    mov w1, #0x1
   89084:   aa1303e0    mov x0, x19
   89088:   97fffc66    bl  88220 <CUSBDevice::GetName(TDeviceNameSelector) const>
   8908c:   aa0003e1    mov x1, x0
   89090:   aa1503e0    mov x0, x21
   89094:   9400017b    bl  89680 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)>
   89098:   aa0003f5    mov x21, x0
   8909c:   b5fff180    cbnz    x0, 88ecc <CUSBDevice::Initialize()+0x37c>
   890a0:   f9403355    ldr x21, [x26, #96]
   890a4:   aa1503e0    mov x0, x21
   890a8:   940004e6    bl  8a440 <CUSBFunction::GetInterfaceName() const>
   890ac:   aa0003f5    mov x21, x0
   890b0:   b4001340    cbz x0, 89318 <CUSBDevice::Initialize()+0x7c8>
   890b4:   aa1803e1    mov x1, x24
   890b8:   94006bca    bl  a3fe0 <CString::Compare(char const*) const>
   890bc:   35000240    cbnz    w0, 89104 <CUSBDevice::Initialize()+0x5b4>
   890c0:   f94002a1    ldr x1, [x21]
   890c4:   aa1503e0    mov x0, x21
   890c8:   f9400421    ldr x1, [x1, #8]
   890cc:   d63f0020    blr x1
   890d0:   f9403340    ldr x0, [x26, #96]
   890d4:   b40000a0    cbz x0, 890e8 <CUSBDevice::Initialize()+0x598>
   890d8:   f9400001    ldr x1, [x0]
   890dc:   f9400421    ldr x1, [x1, #8]
   890e0:   d63f0020    blr x1
   890e4:   f900335f    str xzr, [x26, #96]
   890e8:   f0000122    adrp    x2, b0000 <_etext+0xf9c>
   890ec:   911e8042    add x2, x2, #0x7a0
   890f0:   52800041    mov w1, #0x2
   890f4:   aa1303e0    mov x0, x19
   890f8:   2a1903f5    mov w21, w25
   890fc:   97fffdd1    bl  88840 <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>
   89100:   17ffff54    b   88e50 <CUSBDevice::Initialize()+0x300>
   89104:   aa1503e0    mov x0, x21
   89108:   94006b36    bl  a3de0 <CString::operator char const*() const>
   8910c:   f0000122    adrp    x2, b0000 <_etext+0xf9c>
   89110:   aa0003e3    mov x3, x0
   89114:   911e2042    add x2, x2, #0x788
   89118:   aa1303e0    mov x0, x19
   8911c:   52800061    mov w1, #0x3
   89120:   97fffdc8    bl  88840 <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>
   89124:   f9403340    ldr x0, [x26, #96]
   89128:   aa1503e1    mov x1, x21
   8912c:   94000155    bl  89680 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)>
   89130:   aa0003f5    mov x21, x0
   89134:   f9403340    ldr x0, [x26, #96]
   89138:   b4000080    cbz x0, 89148 <CUSBDevice::Initialize()+0x5f8>
   8913c:   f9400001    ldr x1, [x0]
   89140:   f9400421    ldr x1, [x1, #8]
   89144:   d63f0020    blr x1
   89148:   b5ffecd5    cbnz    x21, 88ee0 <CUSBDevice::Initialize()+0x390>
   8914c:   f900335f    str xzr, [x26, #96]
   89150:   17ffffe6    b   890e8 <CUSBDevice::Initialize()+0x598>
   89154:   aa1303e0    mov x0, x19
   89158:   f0000122    adrp    x2, b0000 <_etext+0xf9c>
   8915c:   911f0042    add x2, x2, #0x7c0
   89160:   52800081    mov w1, #0x4
   89164:   97fffdb7    bl  88840 <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>
   89168:   f9403340    ldr x0, [x26, #96]
   8916c:   b4000080    cbz x0, 8917c <CUSBDevice::Initialize()+0x62c>
   89170:   f9400001    ldr x1, [x0]
   89174:   f9400421    ldr x1, [x1, #8]
   89178:   d63f0020    blr x1
   8917c:   2a1903f5    mov w21, w25
   89180:   f900335f    str xzr, [x26, #96]
   89184:   17ffff33    b   88e50 <CUSBDevice::Initialize()+0x300>
   89188:   f94002a1    ldr x1, [x21]
   8918c:   aa1503e0    mov x0, x21
   89190:   f9402021    ldr x1, [x1, #64]
   89194:   f9003355    str x21, [x26, #96]
   89198:   d63f0020    blr x1
   8919c:   3607fdc0    tbz w0, #0, 89154 <CUSBDevice::Initialize()+0x604>
   891a0:   52800036    mov w22, #0x1
   891a4:   17ffff58    b   88f04 <CUSBDevice::Initialize()+0x3b4>
   891a8:   910163e0    add x0, sp, #0x58
   891ac:   94001c41    bl  902b0 <CUSBString::GetLanguageID()>
   891b0:   2a0003e2    mov w2, w0
   891b4:   2a1403e1    mov w1, w20
   891b8:   910163e0    add x0, sp, #0x58
   891bc:   94001ba5    bl  90050 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)>
   891c0:   37000060    tbnz    w0, #0, 891cc <CUSBDevice::Initialize()+0x67c>
   891c4:   f9402660    ldr x0, [x19, #72]
   891c8:   17ffff0b    b   88df4 <CUSBDevice::Initialize()+0x2a4>
   891cc:   910163e0    add x0, sp, #0x58
   891d0:   94001c34    bl  902a0 <CUSBString::Get() const>
   891d4:   aa0003e1    mov x1, x0
   891d8:   9101c3e0    add x0, sp, #0x70
   891dc:   94006b09    bl  a3e00 <CString::operator=(char const*)>
   891e0:   f9402660    ldr x0, [x19, #72]
   891e4:   17ffff04    b   88df4 <CUSBDevice::Initialize()+0x2a4>
   891e8:   aa1303e0    mov x0, x19
   891ec:   f0000141    adrp    x1, b4000 <From+0x140>
   891f0:   91090021    add x1, x1, #0x240
   891f4:   97fffd03    bl  88600 <CUSBDevice::ConfigurationError(char const*) const>
   891f8:   a9425bf5    ldp x21, x22, [sp, #32]
   891fc:   17fffe80    b   88bfc <CUSBDevice::Initialize()+0xac>
   89200:   9101c3e0    add x0, sp, #0x70
   89204:   94006af7    bl  a3de0 <CString::operator char const*() const>
   89208:   f0000122    adrp    x2, b0000 <_etext+0xf9c>
   8920c:   aa0003e3    mov x3, x0
   89210:   911c6042    add x2, x2, #0x718
   89214:   aa1303e0    mov x0, x19
   89218:   52800061    mov w1, #0x3
   8921c:   97fffd89    bl  88840 <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>
   89220:   17fffefd    b   88e14 <CUSBDevice::Initialize()+0x2c4>
   89224:   910163e0    add x0, sp, #0x58
   89228:   94001c22    bl  902b0 <CUSBString::GetLanguageID()>
   8922c:   2a0003e2    mov w2, w0
   89230:   2a1403e1    mov w1, w20
   89234:   910163e0    add x0, sp, #0x58
   89238:   94001b86    bl  90050 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)>
   8923c:   3607de60    tbz w0, #0, 88e08 <CUSBDevice::Initialize()+0x2b8>
   89240:   9101c3e0    add x0, sp, #0x70
   89244:   94006b33    bl  a3f10 <CString::GetLength() const>
   89248:   b5000740    cbnz    x0, 89330 <CUSBDevice::Initialize()+0x7e0>
   8924c:   910163e0    add x0, sp, #0x58
   89250:   94001c14    bl  902a0 <CUSBString::Get() const>
   89254:   aa0003e1    mov x1, x0
   89258:   9101c3e0    add x0, sp, #0x70
   8925c:   94006b35    bl  a3f30 <CString::Append(char const*)>
   89260:   17fffeea    b   88e08 <CUSBDevice::Initialize()+0x2b8>
   89264:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89268:   f0000120    adrp    x0, b0000 <_etext+0xf9c>
   8926c:   910fa021    add x1, x1, #0x3e8
   89270:   911da000    add x0, x0, #0x768
   89274:   528031a2    mov w2, #0x18d
   89278:   94004e12    bl  9cac0 <assertion_failed>
   8927c:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89280:   f0000120    adrp    x0, b0000 <_etext+0xf9c>
   89284:   910fa021    add x1, x1, #0x3e8
   89288:   9113c000    add x0, x0, #0x4f0
   8928c:   52803182    mov w2, #0x18c
   89290:   94004e0c    bl  9cac0 <assertion_failed>
   89294:   f9402a63    ldr x3, [x19, #80]
   89298:   f0000122    adrp    x2, b0000 <_etext+0xf9c>
   8929c:   aa1303e0    mov x0, x19
   892a0:   911ca042    add x2, x2, #0x728
   892a4:   52800021    mov w1, #0x1
   892a8:   52800014    mov w20, #0x0
   892ac:   39401463    ldrb    w3, [x3, #5]
   892b0:   97fffd64    bl  88840 <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>
   892b4:   17ffff1d    b   88f28 <CUSBDevice::Initialize()+0x3d8>
   892b8:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   892bc:   f0000120    adrp    x0, b0000 <_etext+0xf9c>
   892c0:   a90363f7    stp x23, x24, [sp, #48]
   892c4:   910fa021    add x1, x1, #0x3e8
   892c8:   911ac000    add x0, x0, #0x6b0
   892cc:   52802842    mov w2, #0x142
   892d0:   a9046bf9    stp x25, x26, [sp, #64]
   892d4:   94004dfb    bl  9cac0 <assertion_failed>
   892d8:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   892dc:   f0000120    adrp    x0, b0000 <_etext+0xf9c>
   892e0:   a90363f7    stp x23, x24, [sp, #48]
   892e4:   910fa021    add x1, x1, #0x3e8
   892e8:   91152000    add x0, x0, #0x548
   892ec:   52802a42    mov w2, #0x152
   892f0:   a9046bf9    stp x25, x26, [sp, #64]
   892f4:   94004df3    bl  9cac0 <assertion_failed>
   892f8:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   892fc:   f0000120    adrp    x0, b0000 <_etext+0xf9c>
   89300:   a90363f7    stp x23, x24, [sp, #48]
   89304:   910fa021    add x1, x1, #0x3e8
   89308:   911b2000    add x0, x0, #0x6c8
   8930c:   528029e2    mov w2, #0x14f
   89310:   a9046bf9    stp x25, x26, [sp, #64]
   89314:   94004deb    bl  9cac0 <assertion_failed>
   89318:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   8931c:   f0000120    adrp    x0, b0000 <_etext+0xf9c>
   89320:   910fa021    add x1, x1, #0x3e8
   89324:   91128000    add x0, x0, #0x4a0
   89328:   528033e2    mov w2, #0x19f
   8932c:   94004de5    bl  9cac0 <assertion_failed>
   89330:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89334:   911c4021    add x1, x1, #0x710
   89338:   9101c3e0    add x0, sp, #0x70
   8933c:   94006afd    bl  a3f30 <CString::Append(char const*)>
   89340:   17ffffc3    b   8924c <CUSBDevice::Initialize()+0x6fc>
   89344:   aa1303e0    mov x0, x19
   89348:   f0000122    adrp    x2, b0000 <_etext+0xf9c>
   8934c:   911f8042    add x2, x2, #0x7e0
   89350:   52800041    mov w1, #0x2
   89354:   97fffd3b    bl  88840 <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>
   89358:   a94363f7    ldp x23, x24, [sp, #48]
   8935c:   a9446bf9    ldp x25, x26, [sp, #64]
   89360:   17fffef2    b   88f28 <CUSBDevice::Initialize()+0x3d8>
   89364:   52800041    mov w1, #0x2
   89368:   aa1303e0    mov x0, x19
   8936c:   f0000122    adrp    x2, b0000 <_etext+0xf9c>
   89370:   91200042    add x2, x2, #0x800
   89374:   97fffd33    bl  88840 <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>
   89378:   f9400660    ldr x0, [x19, #8]
   8937c:   52800002    mov w2, #0x0
   89380:   f9401a61    ldr x1, [x19, #48]
   89384:   97ffdf8b    bl  811b0 <CUSBHostController::SetConfiguration(CUSBEndpoint*, unsigned char)>
   89388:   360000a0    tbz w0, #0, 8939c <CUSBDevice::Initialize()+0x84c>
   8938c:   a94363f7    ldp x23, x24, [sp, #48]
   89390:   52800014    mov w20, #0x0
   89394:   a9446bf9    ldp x25, x26, [sp, #64]
   89398:   17fffee4    b   88f28 <CUSBDevice::Initialize()+0x3d8>
   8939c:   aa1303e0    mov x0, x19
   893a0:   f0000122    adrp    x2, b0000 <_etext+0xf9c>
   893a4:   9120a042    add x2, x2, #0x828
   893a8:   52800041    mov w1, #0x2
   893ac:   97fffd25    bl  88840 <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>
   893b0:   a94363f7    ldp x23, x24, [sp, #48]
   893b4:   52800014    mov w20, #0x0
   893b8:   a9446bf9    ldp x25, x26, [sp, #64]
   893bc:   17fffedb    b   88f28 <CUSBDevice::Initialize()+0x3d8>

00000000000893c0 <CUSBDeviceFactory::GetGenericHIDDevice(CUSBFunction*)>:
   893c0:   a9b97bfd    stp x29, x30, [sp, #-112]!
   893c4:   910003fd    mov x29, sp
   893c8:   a9025bf5    stp x21, x22, [sp, #32]
   893cc:   aa0003f5    mov x21, x0
   893d0:   910123a0    add x0, x29, #0x48
   893d4:   aa1503e1    mov x1, x21
   893d8:   a90153f3    stp x19, x20, [sp, #16]
   893dc:   a90363f7    stp x23, x24, [sp, #48]
   893e0:   940003e0    bl  8a360 <CUSBFunction::CUSBFunction(CUSBFunction*)>
   893e4:   910123a0    add x0, x29, #0x48
   893e8:   52800421    mov w1, #0x21
   893ec:   94000465    bl  8a580 <CUSBFunction::GetDescriptor(unsigned char)>
   893f0:   b4000d40    cbz x0, 89598 <CUSBDeviceFactory::GetGenericHIDDevice(CUSBFunction*)+0x1d8>
   893f4:   aa0003f6    mov x22, x0
   893f8:   39401c00    ldrb    w0, [x0, #7]
   893fc:   394022d3    ldrb    w19, [x22, #8]
   89400:   2a132013    orr w19, w0, w19, lsl #8
   89404:   34000cb3    cbz w19, 89598 <CUSBDeviceFactory::GetGenericHIDDevice(CUSBFunction*)+0x1d8>
   89408:   2a1303e2    mov w2, w19
   8940c:   910123a0    add x0, x29, #0x48
   89410:   d1000442    sub x2, x2, #0x1
   89414:   b2401442    orr x2, x2, #0x3f
   89418:   91010042    add x2, x2, #0x40
   8941c:   927cec42    and x2, x2, #0xfffffffffffffff0
   89420:   cb2263ff    sub sp, sp, x2
   89424:   9400044b    bl  8a550 <CUSBFunction::GetHost() const>
   89428:   aa0003f7    mov x23, x0
   8942c:   910123a0    add x0, x29, #0x48
   89430:   9400043c    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   89434:   39401ad8    ldrb    w24, [x22, #6]
   89438:   aa0003e1    mov x1, x0
   8943c:   9100fff4    add x20, sp, #0x3f
   89440:   910123a0    add x0, x29, #0x48
   89444:   aa0103f6    mov x22, x1
   89448:   927ae694    and x20, x20, #0xffffffffffffffc0
   8944c:   940004a5    bl  8a6e0 <CUSBFunction::GetInterfaceNumber() const>
   89450:   12001c07    and w7, w0, #0xff
   89454:   aa1603e1    mov x1, x22
   89458:   2a1803e2    mov w2, w24
   8945c:   aa1703e0    mov x0, x23
   89460:   2a1303e5    mov w5, w19
   89464:   aa1403e4    mov x4, x20
   89468:   12800fc6    mov w6, #0xffffff81
   8946c:   52800003    mov w3, #0x0
   89470:   97ffdf30    bl  81130 <CUSBHostController::GetDescriptor(CUSBEndpoint*, unsigned char, unsigned char, void*, unsigned int, unsigned char, unsigned short)>
   89474:   6b13001f    cmp w0, w19
   89478:   540009c1    b.ne    895b0 <CUSBDeviceFactory::GetGenericHIDDevice(CUSBFunction*)+0x1f0>
   8947c:   d503201f    nop
   89480:   39400282    ldrb    w2, [x20]
   89484:   121e1443    and w3, w2, #0xfc
   89488:   12000442    and w2, w2, #0x3
   8948c:   7100107f    cmp w3, #0x4
   89490:   1a9f17e3    cset    w3, eq
   89494:   7100085f    cmp w2, #0x2
   89498:   540006a0    b.eq    8956c <CUSBDeviceFactory::GetGenericHIDDevice(CUSBFunction*)+0x1ac>
   8949c:   71000c5f    cmp w2, #0x3
   894a0:   54000480    b.eq    89530 <CUSBDeviceFactory::GetGenericHIDDevice(CUSBFunction*)+0x170>
   894a4:   7100045f    cmp w2, #0x1
   894a8:   51000660    sub w0, w19, #0x1
   894ac:   51000a73    sub w19, w19, #0x2
   894b0:   54000160    b.eq    894dc <CUSBDeviceFactory::GetGenericHIDDevice(CUSBFunction*)+0x11c>
   894b4:   91000694    add x20, x20, #0x1
   894b8:   12003c13    and w19, w0, #0xffff
   894bc:   35fffe33    cbnz    w19, 89480 <CUSBDeviceFactory::GetGenericHIDDevice(CUSBFunction*)+0xc0>
   894c0:   d2802e00    mov x0, #0x170
   894c4:   940078bf    bl  a77c0 <operator new(unsigned long)>
   894c8:   aa1503e1    mov x1, x21
   894cc:   52800022    mov w2, #0x1
   894d0:   aa0003f3    mov x19, x0
   894d4:   9400091b    bl  8b940 <CUSBGamePadStandardDevice::CUSBGamePadStandardDevice(CUSBFunction*, bool)>
   894d8:   1400000d    b   8950c <CUSBDeviceFactory::GetGenericHIDDevice(CUSBFunction*)+0x14c>
   894dc:   39400680    ldrb    w0, [x20, #1]
   894e0:   12003e73    and w19, w19, #0xffff
   894e4:   91000a94    add x20, x20, #0x2
   894e8:   7100341f    cmp w0, #0xd
   894ec:   1a9f17e0    cset    w0, eq
   894f0:   0a000063    and w3, w3, w0
   894f4:   34fffe43    cbz w3, 894bc <CUSBDeviceFactory::GetGenericHIDDevice(CUSBFunction*)+0xfc>
   894f8:   d2804600    mov x0, #0x230
   894fc:   940078b1    bl  a77c0 <operator new(unsigned long)>
   89500:   aa1503e1    mov x1, x21
   89504:   aa0003f3    mov x19, x0
   89508:   94002392    bl  92350 <CUSBTouchScreenDevice::CUSBTouchScreenDevice(CUSBFunction*)>
   8950c:   910123a0    add x0, x29, #0x48
   89510:   940002f0    bl  8a0d0 <CUSBFunction::~CUSBFunction()>
   89514:   910003bf    mov sp, x29
   89518:   aa1303e0    mov x0, x19
   8951c:   a94153f3    ldp x19, x20, [sp, #16]
   89520:   a9425bf5    ldp x21, x22, [sp, #32]
   89524:   a94363f7    ldp x23, x24, [sp, #48]
   89528:   a8c77bfd    ldp x29, x30, [sp], #112
   8952c:   d65f03c0    ret
   89530:   39400684    ldrb    w4, [x20, #1]
   89534:   51001673    sub w19, w19, #0x5
   89538:   91001694    add x20, x20, #0x5
   8953c:   12003e73    and w19, w19, #0xffff
   89540:   385fd282    ldurb   w2, [x20, #-3]
   89544:   385fe281    ldurb   w1, [x20, #-2]
   89548:   385ff280    ldurb   w0, [x20, #-1]
   8954c:   aa022082    orr x2, x4, x2, lsl #8
   89550:   aa014041    orr x1, x2, x1, lsl #16
   89554:   aa006020    orr x0, x1, x0, lsl #24
   89558:   7100341f    cmp w0, #0xd
   8955c:   1a9f17e0    cset    w0, eq
   89560:   0a000063    and w3, w3, w0
   89564:   34fffac3    cbz w3, 894bc <CUSBDeviceFactory::GetGenericHIDDevice(CUSBFunction*)+0xfc>
   89568:   17ffffe4    b   894f8 <CUSBDeviceFactory::GetGenericHIDDevice(CUSBFunction*)+0x138>
   8956c:   39400681    ldrb    w1, [x20, #1]
   89570:   51000e73    sub w19, w19, #0x3
   89574:   91000e94    add x20, x20, #0x3
   89578:   12003e73    and w19, w19, #0xffff
   8957c:   385ff280    ldurb   w0, [x20, #-1]
   89580:   2a002020    orr w0, w1, w0, lsl #8
   89584:   7100341f    cmp w0, #0xd
   89588:   1a9f17e0    cset    w0, eq
   8958c:   0a000063    and w3, w3, w0
   89590:   34fff963    cbz w3, 894bc <CUSBDeviceFactory::GetGenericHIDDevice(CUSBFunction*)+0xfc>
   89594:   17ffffd9    b   894f8 <CUSBDeviceFactory::GetGenericHIDDevice(CUSBFunction*)+0x138>
   89598:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   8959c:   9121a021    add x1, x1, #0x868
   895a0:   910123a0    add x0, x29, #0x48
   895a4:   d2800013    mov x19, #0x0
   895a8:   94000402    bl  8a5b0 <CUSBFunction::ConfigurationError(char const*) const>
   895ac:   17ffffd8    b   8950c <CUSBDeviceFactory::GetGenericHIDDevice(CUSBFunction*)+0x14c>
   895b0:   910123a0    add x0, x29, #0x48
   895b4:   d2800013    mov x19, #0x0
   895b8:   940003ce    bl  8a4f0 <CUSBFunction::GetDevice() const>
   895bc:   f0000122    adrp    x2, b0000 <_etext+0xf9c>
   895c0:   9121c042    add x2, x2, #0x870
   895c4:   52800021    mov w1, #0x1
   895c8:   97fffc9e    bl  88840 <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>
   895cc:   17ffffd0    b   8950c <CUSBDeviceFactory::GetGenericHIDDevice(CUSBFunction*)+0x14c>

00000000000895d0 <CUSBDeviceFactory::FindDeviceID(CString*, TUSBDeviceID const*)>:
   895d0:   a9bb7bfd    stp x29, x30, [sp, #-80]!
   895d4:   910003fd    mov x29, sp
   895d8:   a90153f3    stp x19, x20, [sp, #16]
   895dc:   f0000134    adrp    x20, b0000 <_etext+0xf9c>
   895e0:   9111e294    add x20, x20, #0x478
   895e4:   aa0103f3    mov x19, x1
   895e8:   f90013f5    str x21, [sp, #32]
   895ec:   aa0003f5    mov x21, x0
   895f0:   14000002    b   895f8 <CUSBDeviceFactory::FindDeviceID(CString*, TUSBDeviceID const*)+0x28>
   895f4:   9400697b    bl  a3be0 <CString::~CString()>
   895f8:   79400261    ldrh    w1, [x19]
   895fc:   9100c3e0    add x0, sp, #0x30
   89600:   35000061    cbnz    w1, 8960c <CUSBDeviceFactory::FindDeviceID(CString*, TUSBDeviceID const*)+0x3c>
   89604:   79400661    ldrh    w1, [x19, #2]
   89608:   340002c1    cbz w1, 89660 <CUSBDeviceFactory::FindDeviceID(CString*, TUSBDeviceID const*)+0x90>
   8960c:   940069b1    bl  a3cd0 <CString::CString()>
   89610:   79400663    ldrh    w3, [x19, #2]
   89614:   aa1403e1    mov x1, x20
   89618:   9100c3e0    add x0, sp, #0x30
   8961c:   91001273    add x19, x19, #0x4
   89620:   785fc262    ldurh   w2, [x19, #-4]
   89624:   94006fb7    bl  a5500 <CString::Format(char const*, ...)>
   89628:   9100c3e0    add x0, sp, #0x30
   8962c:   940069ed    bl  a3de0 <CString::operator char const*() const>
   89630:   aa0003e1    mov x1, x0
   89634:   aa1503e0    mov x0, x21
   89638:   94006a6a    bl  a3fe0 <CString::Compare(char const*) const>
   8963c:   2a0003e1    mov w1, w0
   89640:   9100c3e0    add x0, sp, #0x30
   89644:   35fffd81    cbnz    w1, 895f4 <CUSBDeviceFactory::FindDeviceID(CString*, TUSBDeviceID const*)+0x24>
   89648:   94006966    bl  a3be0 <CString::~CString()>
   8964c:   a94153f3    ldp x19, x20, [sp, #16]
   89650:   52800020    mov w0, #0x1
   89654:   f94013f5    ldr x21, [sp, #32]
   89658:   a8c57bfd    ldp x29, x30, [sp], #80
   8965c:   d65f03c0    ret
   89660:   a94153f3    ldp x19, x20, [sp, #16]
   89664:   52800000    mov w0, #0x0
   89668:   f94013f5    ldr x21, [sp, #32]
   8966c:   a8c57bfd    ldp x29, x30, [sp], #80
   89670:   d65f03c0    ret
   89674:   d503201f    nop
   89678:   d503201f    nop
   8967c:   d503201f    nop

0000000000089680 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)>:
   89680:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   89684:   910003fd    mov x29, sp
   89688:   a90153f3    stp x19, x20, [sp, #16]
   8968c:   f90013f5    str x21, [sp, #32]
   89690:   b4000ae0    cbz x0, 897ec <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x16c>
   89694:   aa0103f3    mov x19, x1
   89698:   b4000b61    cbz x1, 89804 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x184>
   8969c:   aa0003f4    mov x20, x0
   896a0:   940055d4    bl  9edf0 <CKernelOptions::Get()>
   896a4:   94005593    bl  9ecf0 <CKernelOptions::GetUSBIgnore() const>
   896a8:   aa0003f5    mov x21, x0
   896ac:   b4000b80    cbz x0, 8981c <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x19c>
   896b0:   aa0003e1    mov x1, x0
   896b4:   aa1303e0    mov x0, x19
   896b8:   94006a4a    bl  a3fe0 <CString::Compare(char const*) const>
   896bc:   340007c0    cbz w0, 897b4 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x134>
   896c0:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   896c4:   91240021    add x1, x1, #0x900
   896c8:   aa1303e0    mov x0, x19
   896cc:   94006a45    bl  a3fe0 <CString::Compare(char const*) const>
   896d0:   35000340    cbnz    w0, 89738 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0xb8>
   896d4:   d2801c00    mov x0, #0xe0
   896d8:   9400783a    bl  a77c0 <operator new(unsigned long)>
   896dc:   aa1403e1    mov x1, x20
   896e0:   aa0003f4    mov x20, x0
   896e4:   97ffe293    bl  82130 <CUSBStandardHub::CUSBStandardHub(CUSBFunction*)>
   896e8:   aa1403e0    mov x0, x20
   896ec:   94000381    bl  8a4f0 <CUSBFunction::GetDevice() const>
   896f0:   aa0003f5    mov x21, x0
   896f4:   aa1303e0    mov x0, x19
   896f8:   940069ba    bl  a3de0 <CString::operator char const*() const>
   896fc:   f0000122    adrp    x2, b0000 <_etext+0xf9c>
   89700:   aa0003e3    mov x3, x0
   89704:   912cc042    add x2, x2, #0xb30
   89708:   aa1503e0    mov x0, x21
   8970c:   52800061    mov w1, #0x3
   89710:   97fffc4c    bl  88840 <CUSBDevice::LogWrite(TLogSeverity, char const*, ...)>
   89714:   f9400261    ldr x1, [x19]
   89718:   aa1303e0    mov x0, x19
   8971c:   f9400421    ldr x1, [x1, #8]
   89720:   d63f0020    blr x1
   89724:   f94013f5    ldr x21, [sp, #32]
   89728:   aa1403e0    mov x0, x20
   8972c:   a94153f3    ldp x19, x20, [sp, #16]
   89730:   a8c37bfd    ldp x29, x30, [sp], #48
   89734:   d65f03c0    ret
   89738:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   8973c:   91244021    add x1, x1, #0x910
   89740:   aa1303e0    mov x0, x19
   89744:   94006a27    bl  a3fe0 <CString::Compare(char const*) const>
   89748:   34fffc60    cbz w0, 896d4 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x54>
   8974c:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89750:   91248021    add x1, x1, #0x920
   89754:   aa1303e0    mov x0, x19
   89758:   94006a22    bl  a3fe0 <CString::Compare(char const*) const>
   8975c:   340006c0    cbz w0, 89834 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x1b4>
   89760:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89764:   9124c021    add x1, x1, #0x930
   89768:   aa1303e0    mov x0, x19
   8976c:   94006a1d    bl  a3fe0 <CString::Compare(char const*) const>
   89770:   350006e0    cbnz    w0, 8984c <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x1cc>
   89774:   aa1403e0    mov x0, x20
   89778:   9400035e    bl  8a4f0 <CUSBFunction::GetDevice() const>
   8977c:   52800001    mov w1, #0x0
   89780:   97fffaa8    bl  88220 <CUSBDevice::GetName(TDeviceNameSelector) const>
   89784:   aa0003f5    mov x21, x0
   89788:   b4000c80    cbz x0, 89918 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x298>
   8978c:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89790:   91254021    add x1, x1, #0x950
   89794:   94006a13    bl  a3fe0 <CString::Compare(char const*) const>
   89798:   35000ac0    cbnz    w0, 898f0 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x270>
   8979c:   f94002a1    ldr x1, [x21]
   897a0:   aa1503e0    mov x0, x21
   897a4:   f9400421    ldr x1, [x1, #8]
   897a8:   d63f0020    blr x1
   897ac:   d2800014    mov x20, #0x0
   897b0:   17ffffd9    b   89714 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x94>
   897b4:   94005793    bl  9f600 <CLogger::Get()>
   897b8:   f0000123    adrp    x3, b0000 <_etext+0xf9c>
   897bc:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   897c0:   aa1503e4    mov x4, x21
   897c4:   91234063    add x3, x3, #0x8d0
   897c8:   9123c021    add x1, x1, #0x8f0
   897cc:   52800042    mov w2, #0x2
   897d0:   94005974    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   897d4:   d2800014    mov x20, #0x0
   897d8:   f94013f5    ldr x21, [sp, #32]
   897dc:   aa1403e0    mov x0, x20
   897e0:   a94153f3    ldp x19, x20, [sp, #16]
   897e4:   a8c37bfd    ldp x29, x30, [sp], #48
   897e8:   d65f03c0    ret
   897ec:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   897f0:   f0000120    adrp    x0, b0000 <_etext+0xf9c>
   897f4:   91226021    add x1, x1, #0x898
   897f8:   9122c000    add x0, x0, #0x8b0
   897fc:   52800702    mov w2, #0x38
   89800:   94004cb0    bl  9cac0 <assertion_failed>
   89804:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89808:   f0000120    adrp    x0, b0000 <_etext+0xf9c>
   8980c:   91226021    add x1, x1, #0x898
   89810:   91128000    add x0, x0, #0x4a0
   89814:   52800722    mov w2, #0x39
   89818:   94004caa    bl  9cac0 <assertion_failed>
   8981c:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89820:   f0000120    adrp    x0, b0000 <_etext+0xf9c>
   89824:   91226021    add x1, x1, #0x898
   89828:   91230000    add x0, x0, #0x8c0
   8982c:   52800782    mov w2, #0x3c
   89830:   94004ca4    bl  9cac0 <assertion_failed>
   89834:   d2800b00    mov x0, #0x58
   89838:   940077e2    bl  a77c0 <operator new(unsigned long)>
   8983c:   aa1403e1    mov x1, x20
   89840:   aa0003f4    mov x20, x0
   89844:   9400110f    bl  8dc80 <CUSBBulkOnlyMassStorageDevice::CUSBBulkOnlyMassStorageDevice(CUSBFunction*)>
   89848:   17ffffa8    b   896e8 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x68>
   8984c:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89850:   91258021    add x1, x1, #0x960
   89854:   aa1303e0    mov x0, x19
   89858:   940069e2    bl  a3fe0 <CString::Compare(char const*) const>
   8985c:   350000e0    cbnz    w0, 89878 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x1f8>
   89860:   d2801100    mov x0, #0x88
   89864:   940077d7    bl  a77c0 <operator new(unsigned long)>
   89868:   aa1403e1    mov x1, x20
   8986c:   aa0003f4    mov x20, x0
   89870:   940016b8    bl  8f350 <CUSBMouseDevice::CUSBMouseDevice(CUSBFunction*)>
   89874:   17ffff9d    b   896e8 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x68>
   89878:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   8987c:   9125c021    add x1, x1, #0x970
   89880:   aa1303e0    mov x0, x19
   89884:   940069d7    bl  a3fe0 <CString::Compare(char const*) const>
   89888:   340000c0    cbz w0, 898a0 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x220>
   8988c:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89890:   91260021    add x1, x1, #0x980
   89894:   aa1303e0    mov x0, x19
   89898:   940069d2    bl  a3fe0 <CString::Compare(char const*) const>
   8989c:   350004a0    cbnz    w0, 89930 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x2b0>
   898a0:   aa1403e0    mov x0, x20
   898a4:   94000313    bl  8a4f0 <CUSBFunction::GetDevice() const>
   898a8:   52800001    mov w1, #0x0
   898ac:   97fffa5d    bl  88220 <CUSBDevice::GetName(TDeviceNameSelector) const>
   898b0:   aa0003f5    mov x21, x0
   898b4:   b4000540    cbz x0, 8995c <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x2dc>
   898b8:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   898bc:   91268021    add x1, x1, #0x9a0
   898c0:   940069c8    bl  a3fe0 <CString::Compare(char const*) const>
   898c4:   34fff6c0    cbz w0, 8979c <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x11c>
   898c8:   aa1403e0    mov x0, x20
   898cc:   97fffebd    bl  893c0 <CUSBDeviceFactory::GetGenericHIDDevice(CUSBFunction*)>
   898d0:   f94002a1    ldr x1, [x21]
   898d4:   aa0003f4    mov x20, x0
   898d8:   aa1503e0    mov x0, x21
   898dc:   f9400421    ldr x1, [x1, #8]
   898e0:   d63f0020    blr x1
   898e4:   b5fff034    cbnz    x20, 896e8 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x68>
   898e8:   d2800014    mov x20, #0x0
   898ec:   17ffff8a    b   89714 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x94>
   898f0:   d280b300    mov x0, #0x598
   898f4:   940077b3    bl  a77c0 <operator new(unsigned long)>
   898f8:   aa1403e1    mov x1, x20
   898fc:   aa0003f4    mov x20, x0
   89900:   97ffdf84    bl  81710 <CUSBKeyboardDevice::CUSBKeyboardDevice(CUSBFunction*)>
   89904:   f94002a1    ldr x1, [x21]
   89908:   aa1503e0    mov x0, x21
   8990c:   f9400421    ldr x1, [x1, #8]
   89910:   d63f0020    blr x1
   89914:   17ffff75    b   896e8 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x68>
   89918:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   8991c:   f0000120    adrp    x0, b0000 <_etext+0xf9c>
   89920:   91226021    add x1, x1, #0x898
   89924:   91250000    add x0, x0, #0x940
   89928:   52800a62    mov w2, #0x53
   8992c:   94004c65    bl  9cac0 <assertion_failed>
   89930:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89934:   91264021    add x1, x1, #0x990
   89938:   aa1303e0    mov x0, x19
   8993c:   940069a9    bl  a3fe0 <CString::Compare(char const*) const>
   89940:   350001a0    cbnz    w0, 89974 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x2f4>
   89944:   d2803800    mov x0, #0x1c0
   89948:   9400779e    bl  a77c0 <operator new(unsigned long)>
   8994c:   aa1403e1    mov x1, x20
   89950:   aa0003f4    mov x20, x0
   89954:   9400041b    bl  8a9c0 <CUSBGamePadPS3Device::CUSBGamePadPS3Device(CUSBFunction*)>
   89958:   17ffff64    b   896e8 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x68>
   8995c:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89960:   f0000120    adrp    x0, b0000 <_etext+0xf9c>
   89964:   91226021    add x1, x1, #0x898
   89968:   91250000    add x0, x0, #0x940
   8996c:   52800c82    mov w2, #0x64
   89970:   94004c54    bl  9cac0 <assertion_failed>
   89974:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89978:   9126c021    add x1, x1, #0x9b0
   8997c:   aa1303e0    mov x0, x19
   89980:   94006998    bl  a3fe0 <CString::Compare(char const*) const>
   89984:   340000c0    cbz w0, 8999c <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x31c>
   89988:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   8998c:   91270021    add x1, x1, #0x9c0
   89990:   aa1303e0    mov x0, x19
   89994:   94006993    bl  a3fe0 <CString::Compare(char const*) const>
   89998:   350000e0    cbnz    w0, 899b4 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x334>
   8999c:   d2803000    mov x0, #0x180
   899a0:   94007788    bl  a77c0 <operator new(unsigned long)>
   899a4:   aa1403e1    mov x1, x20
   899a8:   aa0003f4    mov x20, x0
   899ac:   94000691    bl  8b3f0 <CUSBGamePadPS4Device::CUSBGamePadPS4Device(CUSBFunction*)>
   899b0:   17ffff4e    b   896e8 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x68>
   899b4:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   899b8:   91274021    add x1, x1, #0x9d0
   899bc:   aa1303e0    mov x0, x19
   899c0:   94006988    bl  a3fe0 <CString::Compare(char const*) const>
   899c4:   340000c0    cbz w0, 899dc <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x35c>
   899c8:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   899cc:   91278021    add x1, x1, #0x9e0
   899d0:   aa1303e0    mov x0, x19
   899d4:   94006983    bl  a3fe0 <CString::Compare(char const*) const>
   899d8:   350000e0    cbnz    w0, 899f4 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x374>
   899dc:   d2802b00    mov x0, #0x158
   899e0:   94007778    bl  a77c0 <operator new(unsigned long)>
   899e4:   aa1403e1    mov x1, x20
   899e8:   aa0003f4    mov x20, x0
   899ec:   94000c89    bl  8cc10 <CUSBGamePadXbox360Device::CUSBGamePadXbox360Device(CUSBFunction*)>
   899f0:   17ffff3e    b   896e8 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x68>
   899f4:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   899f8:   9127c021    add x1, x1, #0x9f0
   899fc:   aa1303e0    mov x0, x19
   89a00:   94006978    bl  a3fe0 <CString::Compare(char const*) const>
   89a04:   340000c0    cbz w0, 89a1c <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x39c>
   89a08:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89a0c:   91280021    add x1, x1, #0xa00
   89a10:   aa1303e0    mov x0, x19
   89a14:   94006973    bl  a3fe0 <CString::Compare(char const*) const>
   89a18:   350000e0    cbnz    w0, 89a34 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x3b4>
   89a1c:   d2802c00    mov x0, #0x160
   89a20:   94007768    bl  a77c0 <operator new(unsigned long)>
   89a24:   aa1403e1    mov x1, x20
   89a28:   aa0003f4    mov x20, x0
   89a2c:   94000dc1    bl  8d130 <CUSBGamePadXboxOneDevice::CUSBGamePadXboxOneDevice(CUSBFunction*)>
   89a30:   17ffff2e    b   896e8 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x68>
   89a34:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89a38:   91284021    add x1, x1, #0xa10
   89a3c:   aa1303e0    mov x0, x19
   89a40:   94006968    bl  a3fe0 <CString::Compare(char const*) const>
   89a44:   34fffec0    cbz w0, 89a1c <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x39c>
   89a48:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89a4c:   91288021    add x1, x1, #0xa20
   89a50:   aa1303e0    mov x0, x19
   89a54:   94006963    bl  a3fe0 <CString::Compare(char const*) const>
   89a58:   34fffe20    cbz w0, 89a1c <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x39c>
   89a5c:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89a60:   9128c021    add x1, x1, #0xa30
   89a64:   aa1303e0    mov x0, x19
   89a68:   9400695e    bl  a3fe0 <CString::Compare(char const*) const>
   89a6c:   350000e0    cbnz    w0, 89a88 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x408>
   89a70:   d2802c00    mov x0, #0x160
   89a74:   94007753    bl  a77c0 <operator new(unsigned long)>
   89a78:   aa1403e1    mov x1, x20
   89a7c:   aa0003f4    mov x20, x0
   89a80:   94000ad0    bl  8c5c0 <CUSBGamePadSwitchProDevice::CUSBGamePadSwitchProDevice(CUSBFunction*)>
   89a84:   17ffff19    b   896e8 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x68>
   89a88:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89a8c:   91290021    add x1, x1, #0xa40
   89a90:   aa1303e0    mov x0, x19
   89a94:   94006953    bl  a3fe0 <CString::Compare(char const*) const>
   89a98:   340000c0    cbz w0, 89ab0 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x430>
   89a9c:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89aa0:   91294021    add x1, x1, #0xa50
   89aa4:   aa1303e0    mov x0, x19
   89aa8:   9400694e    bl  a3fe0 <CString::Compare(char const*) const>
   89aac:   350000e0    cbnz    w0, 89ac8 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x448>
   89ab0:   d2800900    mov x0, #0x48
   89ab4:   94007743    bl  a77c0 <operator new(unsigned long)>
   89ab8:   aa1403e1    mov x1, x20
   89abc:   aa0003f4    mov x20, x0
   89ac0:   94001858    bl  8fc20 <CUSBPrinterDevice::CUSBPrinterDevice(CUSBFunction*)>
   89ac4:   17ffff09    b   896e8 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x68>
   89ac8:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89acc:   91298021    add x1, x1, #0xa60
   89ad0:   aa1303e0    mov x0, x19
   89ad4:   94006943    bl  a3fe0 <CString::Compare(char const*) const>
   89ad8:   350000e0    cbnz    w0, 89af4 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x474>
   89adc:   d2800900    mov x0, #0x48
   89ae0:   94007738    bl  a77c0 <operator new(unsigned long)>
   89ae4:   aa1403e1    mov x1, x20
   89ae8:   aa0003f4    mov x20, x0
   89aec:   940038b1    bl  97db0 <CSMSC951xDevice::CSMSC951xDevice(CUSBFunction*)>
   89af0:   17fffefe    b   896e8 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x68>
   89af4:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89af8:   9129c021    add x1, x1, #0xa70
   89afc:   aa1303e0    mov x0, x19
   89b00:   94006938    bl  a3fe0 <CString::Compare(char const*) const>
   89b04:   350000e0    cbnz    w0, 89b20 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x4a0>
   89b08:   d2800900    mov x0, #0x48
   89b0c:   9400772d    bl  a77c0 <operator new(unsigned long)>
   89b10:   aa1403e1    mov x1, x20
   89b14:   aa0003f4    mov x20, x0
   89b18:   940034ba    bl  96e00 <CLAN7800Device::CLAN7800Device(CUSBFunction*)>
   89b1c:   17fffef3    b   896e8 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x68>
   89b20:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89b24:   912a0021    add x1, x1, #0xa80
   89b28:   aa1303e0    mov x0, x19
   89b2c:   9400692d    bl  a3fe0 <CString::Compare(char const*) const>
   89b30:   340000c0    cbz w0, 89b48 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x4c8>
   89b34:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89b38:   912a4021    add x1, x1, #0xa90
   89b3c:   aa1303e0    mov x0, x19
   89b40:   94006928    bl  a3fe0 <CString::Compare(char const*) const>
   89b44:   350000e0    cbnz    w0, 89b60 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x4e0>
   89b48:   d2800b00    mov x0, #0x58
   89b4c:   9400771d    bl  a77c0 <operator new(unsigned long)>
   89b50:   aa1403e1    mov x1, x20
   89b54:   aa0003f4    mov x20, x0
   89b58:   94003c6a    bl  98d00 <CUSBBluetoothDevice::CUSBBluetoothDevice(CUSBFunction*)>
   89b5c:   17fffee3    b   896e8 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x68>
   89b60:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89b64:   912a8021    add x1, x1, #0xaa0
   89b68:   aa1303e0    mov x0, x19
   89b6c:   9400691d    bl  a3fe0 <CString::Compare(char const*) const>
   89b70:   340000c0    cbz w0, 89b88 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x508>
   89b74:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89b78:   912ac021    add x1, x1, #0xab0
   89b7c:   aa1303e0    mov x0, x19
   89b80:   94006918    bl  a3fe0 <CString::Compare(char const*) const>
   89b84:   350000e0    cbnz    w0, 89ba0 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x520>
   89b88:   d2800b00    mov x0, #0x58
   89b8c:   9400770d    bl  a77c0 <operator new(unsigned long)>
   89b90:   aa1403e1    mov x1, x20
   89b94:   aa0003f4    mov x20, x0
   89b98:   9400142e    bl  8ec50 <CUSBMIDIHostDevice::CUSBMIDIHostDevice(CUSBFunction*)>
   89b9c:   17fffed3    b   896e8 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x68>
   89ba0:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89ba4:   912b0021    add x1, x1, #0xac0
   89ba8:   aa1303e0    mov x0, x19
   89bac:   9400690d    bl  a3fe0 <CString::Compare(char const*) const>
   89bb0:   350000e0    cbnz    w0, 89bcc <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x54c>
   89bb4:   d2810700    mov x0, #0x838
   89bb8:   94007702    bl  a77c0 <operator new(unsigned long)>
   89bbc:   aa1403e1    mov x1, x20
   89bc0:   aa0003f4    mov x20, x0
   89bc4:   940025fb    bl  933b0 <CUSBAudioControlDevice::CUSBAudioControlDevice(CUSBFunction*)>
   89bc8:   17fffec8    b   896e8 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x68>
   89bcc:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89bd0:   912b4021    add x1, x1, #0xad0
   89bd4:   aa1303e0    mov x0, x19
   89bd8:   94006902    bl  a3fe0 <CString::Compare(char const*) const>
   89bdc:   34fffec0    cbz w0, 89bb4 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x534>
   89be0:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89be4:   912b8021    add x1, x1, #0xae0
   89be8:   aa1303e0    mov x0, x19
   89bec:   940068fd    bl  a3fe0 <CString::Compare(char const*) const>
   89bf0:   350000e0    cbnz    w0, 89c0c <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x58c>
   89bf4:   d2804000    mov x0, #0x200
   89bf8:   940076f2    bl  a77c0 <operator new(unsigned long)>
   89bfc:   aa1403e1    mov x1, x20
   89c00:   aa0003f4    mov x20, x0
   89c04:   9400283f    bl  93d00 <CUSBAudioStreamingDevice::CUSBAudioStreamingDevice(CUSBFunction*)>
   89c08:   17fffeb8    b   896e8 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x68>
   89c0c:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89c10:   912bc021    add x1, x1, #0xaf0
   89c14:   aa1303e0    mov x0, x19
   89c18:   940068f2    bl  a3fe0 <CString::Compare(char const*) const>
   89c1c:   34fffec0    cbz w0, 89bf4 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x574>
   89c20:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89c24:   912c0021    add x1, x1, #0xb00
   89c28:   aa1303e0    mov x0, x19
   89c2c:   940068ed    bl  a3fe0 <CString::Compare(char const*) const>
   89c30:   350000e0    cbnz    w0, 89c4c <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x5cc>
   89c34:   d2800900    mov x0, #0x48
   89c38:   940076e2    bl  a77c0 <operator new(unsigned long)>
   89c3c:   aa1403e1    mov x1, x20
   89c40:   aa0003f4    mov x20, x0
   89c44:   94003e53    bl  99590 <CUSBCDCEthernetDevice::CUSBCDCEthernetDevice(CUSBFunction*)>
   89c48:   17fffea8    b   896e8 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x68>
   89c4c:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89c50:   912c4021    add x1, x1, #0xb10
   89c54:   aa1303e0    mov x0, x19
   89c58:   940068e2    bl  a3fe0 <CString::Compare(char const*) const>
   89c5c:   340000c0    cbz w0, 89c74 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x5f4>
   89c60:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89c64:   912c8021    add x1, x1, #0xb20
   89c68:   aa1303e0    mov x0, x19
   89c6c:   940068dd    bl  a3fe0 <CString::Compare(char const*) const>
   89c70:   350000e0    cbnz    w0, 89c8c <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x60c>
   89c74:   d2800f00    mov x0, #0x78
   89c78:   940076d2    bl  a77c0 <operator new(unsigned long)>
   89c7c:   aa1403e1    mov x1, x20
   89c80:   aa0003f4    mov x20, x0
   89c84:   9400210b    bl  920b0 <CUSBSerialCDCDevice::CUSBSerialCDCDevice(CUSBFunction*)>
   89c88:   17fffe98    b   896e8 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x68>
   89c8c:   94001a5d    bl  90600 <CUSBSerialCH341Device::GetDeviceIDTable()>
   89c90:   aa0003e1    mov x1, x0
   89c94:   aa1303e0    mov x0, x19
   89c98:   97fffe4e    bl  895d0 <CUSBDeviceFactory::FindDeviceID(CString*, TUSBDeviceID const*)>
   89c9c:   360000e0    tbz w0, #0, 89cb8 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x638>
   89ca0:   d2800f00    mov x0, #0x78
   89ca4:   940076c7    bl  a77c0 <operator new(unsigned long)>
   89ca8:   aa1403e1    mov x1, x20
   89cac:   aa0003f4    mov x20, x0
   89cb0:   94001a48    bl  905d0 <CUSBSerialCH341Device::CUSBSerialCH341Device(CUSBFunction*)>
   89cb4:   17fffe8d    b   896e8 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x68>
   89cb8:   94001bca    bl  90be0 <CUSBSerialCP210xDevice::GetDeviceIDTable()>
   89cbc:   aa0003e1    mov x1, x0
   89cc0:   aa1303e0    mov x0, x19
   89cc4:   97fffe43    bl  895d0 <CUSBDeviceFactory::FindDeviceID(CString*, TUSBDeviceID const*)>
   89cc8:   360000e0    tbz w0, #0, 89ce4 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x664>
   89ccc:   d2801000    mov x0, #0x80
   89cd0:   940076bc    bl  a77c0 <operator new(unsigned long)>
   89cd4:   aa1403e1    mov x1, x20
   89cd8:   aa0003f4    mov x20, x0
   89cdc:   94001bb1    bl  90ba0 <CUSBSerialCP210xDevice::CUSBSerialCP210xDevice(CUSBFunction*)>
   89ce0:   17fffe82    b   896e8 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x68>
   89ce4:   94001d53    bl  91230 <CUSBSerialPL2303Device::GetDeviceIDTable()>
   89ce8:   aa0003e1    mov x1, x0
   89cec:   aa1303e0    mov x0, x19
   89cf0:   97fffe38    bl  895d0 <CUSBDeviceFactory::FindDeviceID(CString*, TUSBDeviceID const*)>
   89cf4:   360000e0    tbz w0, #0, 89d10 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x690>
   89cf8:   d2800f00    mov x0, #0x78
   89cfc:   940076b1    bl  a77c0 <operator new(unsigned long)>
   89d00:   aa1403e1    mov x1, x20
   89d04:   aa0003f4    mov x20, x0
   89d08:   94001d3e    bl  91200 <CUSBSerialPL2303Device::CUSBSerialPL2303Device(CUSBFunction*)>
   89d0c:   17fffe77    b   896e8 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x68>
   89d10:   94001fb0    bl  91bd0 <CUSBSerialFT231XDevice::GetDeviceIDTable()>
   89d14:   aa0003e1    mov x1, x0
   89d18:   aa1303e0    mov x0, x19
   89d1c:   97fffe2d    bl  895d0 <CUSBDeviceFactory::FindDeviceID(CString*, TUSBDeviceID const*)>
   89d20:   3607d460    tbz w0, #0, 897ac <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x12c>
   89d24:   d2800f00    mov x0, #0x78
   89d28:   940076a6    bl  a77c0 <operator new(unsigned long)>
   89d2c:   aa1403e1    mov x1, x20
   89d30:   aa0003f4    mov x20, x0
   89d34:   94001f9b    bl  91ba0 <CUSBSerialFT231XDevice::CUSBSerialFT231XDevice(CUSBFunction*)>
   89d38:   17fffe6c    b   896e8 <CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)+0x68>
   89d3c:   00000000    udf #0

0000000000089d40 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*)>:
   89d40:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   89d44:   910003fd    mov x29, sp
   89d48:   a90153f3    stp x19, x20, [sp, #16]
   89d4c:   aa0003f3    mov x19, x0
   89d50:   52800100    mov w0, #0x8
   89d54:   f90013f5    str x21, [sp, #32]
   89d58:   f9000261    str x1, [x19]
   89d5c:   3900227f    strb    wzr, [x19, #8]
   89d60:   b9000e7f    str wzr, [x19, #12]
   89d64:   3900427f    strb    wzr, [x19, #16]
   89d68:   b9001660    str w0, [x19, #20]
   89d6c:   b4000201    cbz x1, 89dac <CUSBEndpoint::CUSBEndpoint(CUSBDevice*)+0x6c>
   89d70:   d2800b00    mov x0, #0x58
   89d74:   94007693    bl  a77c0 <operator new(unsigned long)>
   89d78:   f9400275    ldr x21, [x19]
   89d7c:   aa0003f4    mov x20, x0
   89d80:   aa1503e0    mov x0, x21
   89d84:   97fff9ef    bl  88540 <CUSBDevice::GetHost() const>
   89d88:   aa0003e2    mov x2, x0
   89d8c:   aa1503e1    mov x1, x21
   89d90:   aa1403e0    mov x0, x20
   89d94:   97ffe84f    bl  83ed0 <CXHCIEndpoint::CXHCIEndpoint(CXHCIUSBDevice*, CXHCIDevice*)>
   89d98:   f94013f5    ldr x21, [sp, #32]
   89d9c:   f9000e74    str x20, [x19, #24]
   89da0:   a94153f3    ldp x19, x20, [sp, #16]
   89da4:   a8c37bfd    ldp x29, x30, [sp], #48
   89da8:   d65f03c0    ret
   89dac:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89db0:   d0000120    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   89db4:   912d4021    add x1, x1, #0xb50
   89db8:   9127a000    add x0, x0, #0x9e8
   89dbc:   52800482    mov w2, #0x24
   89dc0:   94004b40    bl  9cac0 <assertion_failed>
   89dc4:   d503201f    nop
   89dc8:   d503201f    nop
   89dcc:   d503201f    nop

0000000000089dd0 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>:
   89dd0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   89dd4:   910003fd    mov x29, sp
   89dd8:   a90153f3    stp x19, x20, [sp, #16]
   89ddc:   a9025bf5    stp x21, x22, [sp, #32]
   89de0:   aa0003f5    mov x21, x0
   89de4:   f9000001    str x1, [x0]
   89de8:   b4000701    cbz x1, 89ec8 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0xf8>
   89dec:   aa0203f3    mov x19, x2
   89df0:   b4000782    cbz x2, 89ee0 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0x110>
   89df4:   aa0103e0    mov x0, x1
   89df8:   39400041    ldrb    w1, [x2]
   89dfc:   7100183f    cmp w1, #0x6
   89e00:   540007c9    b.ls    89ef8 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0x128>
   89e04:   39400441    ldrb    w1, [x2, #1]
   89e08:   7100143f    cmp w1, #0x5
   89e0c:   54000821    b.ne    89f10 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0x140>
   89e10:   39400c41    ldrb    w1, [x2, #3]
   89e14:   12000421    and w1, w1, #0x3
   89e18:   7100083f    cmp w1, #0x2
   89e1c:   540004e0    b.eq    89eb8 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0xe8>
   89e20:   71000c3f    cmp w1, #0x3
   89e24:   540004e0    b.eq    89ec0 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0xf0>
   89e28:   7100043f    cmp w1, #0x1
   89e2c:   52800062    mov w2, #0x3
   89e30:   540009a1    b.ne    89f64 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0x194>
   89e34:   39400a61    ldrb    w1, [x19, #2]
   89e38:   b9000ea2    str w2, [x21, #12]
   89e3c:   93471c22    sbfx    x2, x1, #7, #1
   89e40:   12000c21    and w1, w1, #0xf
   89e44:   12000042    and w2, w2, #0x1
   89e48:   390022a1    strb    w1, [x21, #8]
   89e4c:   390042a2    strb    w2, [x21, #16]
   89e50:   39401262    ldrb    w2, [x19, #4]
   89e54:   39401661    ldrb    w1, [x19, #5]
   89e58:   aa012041    orr x1, x2, x1, lsl #8
   89e5c:   12002821    and w1, w1, #0x7ff
   89e60:   b90016a1    str w1, [x21, #20]
   89e64:   97fff997    bl  884c0 <CUSBDevice::GetSpeed() const>
   89e68:   35000080    cbnz    w0, 89e78 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0xa8>
   89e6c:   b9400ea0    ldr w0, [x21, #12]
   89e70:   7100041f    cmp w0, #0x1
   89e74:   540005a0    b.eq    89f28 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0x158>
   89e78:   d2800b00    mov x0, #0x58
   89e7c:   94007651    bl  a77c0 <operator new(unsigned long)>
   89e80:   f94002b6    ldr x22, [x21]
   89e84:   aa0003f4    mov x20, x0
   89e88:   aa1603e0    mov x0, x22
   89e8c:   97fff9ad    bl  88540 <CUSBDevice::GetHost() const>
   89e90:   aa0003e3    mov x3, x0
   89e94:   aa1303e2    mov x2, x19
   89e98:   aa1603e1    mov x1, x22
   89e9c:   aa1403e0    mov x0, x20
   89ea0:   97ffebfc    bl  84e90 <CXHCIEndpoint::CXHCIEndpoint(CXHCIUSBDevice*, TUSBEndpointDescriptor const*, CXHCIDevice*)>
   89ea4:   f9000eb4    str x20, [x21, #24]
   89ea8:   a94153f3    ldp x19, x20, [sp, #16]
   89eac:   a9425bf5    ldp x21, x22, [sp, #32]
   89eb0:   a8c37bfd    ldp x29, x30, [sp], #48
   89eb4:   d65f03c0    ret
   89eb8:   52800022    mov w2, #0x1
   89ebc:   17ffffde    b   89e34 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0x64>
   89ec0:   52800042    mov w2, #0x2
   89ec4:   17ffffdc    b   89e34 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0x64>
   89ec8:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89ecc:   d0000120    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   89ed0:   912d4021    add x1, x1, #0xb50
   89ed4:   9127a000    add x0, x0, #0x9e8
   89ed8:   52800662    mov w2, #0x33
   89edc:   94004af9    bl  9cac0 <assertion_failed>
   89ee0:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89ee4:   d0000120    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   89ee8:   912d4021    add x1, x1, #0xb50
   89eec:   912b4000    add x0, x0, #0xad0
   89ef0:   528006a2    mov w2, #0x35
   89ef4:   94004af3    bl  9cac0 <assertion_failed>
   89ef8:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89efc:   d0000120    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   89f00:   912d4021    add x1, x1, #0xb50
   89f04:   912b8000    add x0, x0, #0xae0
   89f08:   528006c2    mov w2, #0x36
   89f0c:   94004aed    bl  9cac0 <assertion_failed>
   89f10:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89f14:   d0000120    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   89f18:   912d4021    add x1, x1, #0xb50
   89f1c:   912c0000    add x0, x0, #0xb00
   89f20:   528006e2    mov w2, #0x37
   89f24:   94004ae7    bl  9cac0 <assertion_failed>
   89f28:   940055b6    bl  9f600 <CLogger::Get()>
   89f2c:   f0000123    adrp    x3, b0000 <_etext+0xf9c>
   89f30:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89f34:   912e2021    add x1, x1, #0xb88
   89f38:   912d8063    add x3, x3, #0xb60
   89f3c:   52800042    mov w2, #0x2
   89f40:   94005798    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   89f44:   b94016a0    ldr w0, [x21, #20]
   89f48:   52800041    mov w1, #0x2
   89f4c:   b9000ea1    str w1, [x21, #12]
   89f50:   7100201f    cmp w0, #0x8
   89f54:   54fff929    b.ls    89e78 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0xa8>
   89f58:   52800100    mov w0, #0x8
   89f5c:   b90016a0    str w0, [x21, #20]
   89f60:   17ffffc6    b   89e78 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)+0xa8>
   89f64:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89f68:   f0000120    adrp    x0, b0000 <_etext+0xf9c>
   89f6c:   912d4021    add x1, x1, #0xb50
   89f70:   91106000    add x0, x0, #0x418
   89f74:   52800902    mov w2, #0x48
   89f78:   94004ad2    bl  9cac0 <assertion_failed>
   89f7c:   d503201f    nop

0000000000089f80 <CUSBEndpoint::~CUSBEndpoint()>:
   89f80:   a9be7bfd    stp x29, x30, [sp, #-32]!
   89f84:   910003fd    mov x29, sp
   89f88:   f9000bf3    str x19, [sp, #16]
   89f8c:   f9400c13    ldr x19, [x0, #24]
   89f90:   b4000113    cbz x19, 89fb0 <CUSBEndpoint::~CUSBEndpoint()+0x30>
   89f94:   aa1303e0    mov x0, x19
   89f98:   97ffe7fa    bl  83f80 <CXHCIEndpoint::~CXHCIEndpoint()>
   89f9c:   aa1303e0    mov x0, x19
   89fa0:   f9400bf3    ldr x19, [sp, #16]
   89fa4:   d2800b01    mov x1, #0x58
   89fa8:   a8c27bfd    ldp x29, x30, [sp], #32
   89fac:   1400762d    b   a7860 <operator delete(void*, unsigned long)>
   89fb0:   f9400bf3    ldr x19, [sp, #16]
   89fb4:   a8c27bfd    ldp x29, x30, [sp], #32
   89fb8:   d65f03c0    ret
   89fbc:   d503201f    nop

0000000000089fc0 <CUSBEndpoint::GetDevice() const>:
   89fc0:   f9400000    ldr x0, [x0]
   89fc4:   b4000040    cbz x0, 89fcc <CUSBEndpoint::GetDevice() const+0xc>
   89fc8:   d65f03c0    ret
   89fcc:   f0000121    adrp    x1, b0000 <_etext+0xf9c>
   89fd0:   d0000120    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   89fd4:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   89fd8:   912d4021    add x1, x1, #0xb50
   89fdc:   910003fd    mov x29, sp
   89fe0:   9127a000    add x0, x0, #0x9e8
   89fe4:   52801462    mov w2, #0xa3
   89fe8:   94004ab6    bl  9cac0 <assertion_failed>
   89fec:   d503201f    nop

0000000000089ff0 <CUSBEndpoint::GetNumber() const>:
   89ff0:   39402000    ldrb    w0, [x0, #8]
   89ff4:   d65f03c0    ret
   89ff8:   d503201f    nop
   89ffc:   d503201f    nop

000000000008a000 <CUSBEndpoint::GetType() const>:
   8a000:   b9400c00    ldr w0, [x0, #12]
   8a004:   d65f03c0    ret
   8a008:   d503201f    nop
   8a00c:   d503201f    nop

000000000008a010 <CUSBEndpoint::IsDirectionIn() const>:
   8a010:   39404000    ldrb    w0, [x0, #16]
   8a014:   d65f03c0    ret
   8a018:   d503201f    nop
   8a01c:   d503201f    nop

000000000008a020 <CUSBEndpoint::SetMaxPacketSize(unsigned int)>:
   8a020:   aa0003e2    mov x2, x0
   8a024:   f9400c00    ldr x0, [x0, #24]
   8a028:   b9001441    str w1, [x2, #20]
   8a02c:   b4000040    cbz x0, 8a034 <CUSBEndpoint::SetMaxPacketSize(unsigned int)+0x14>
   8a030:   17ffeabc    b   84b20 <CXHCIEndpoint::SetMaxPacketSize(unsigned int)>
   8a034:   d0000121    adrp    x1, b0000 <_etext+0xf9c>
   8a038:   d0000120    adrp    x0, b0000 <_etext+0xf9c>
   8a03c:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   8a040:   912d4021    add x1, x1, #0xb50
   8a044:   910003fd    mov x29, sp
   8a048:   912e4000    add x0, x0, #0xb90
   8a04c:   52801762    mov w2, #0xbb
   8a050:   94004a9c    bl  9cac0 <assertion_failed>
   8a054:   d503201f    nop
   8a058:   d503201f    nop
   8a05c:   d503201f    nop

000000000008a060 <CUSBEndpoint::GetMaxPacketSize() const>:
   8a060:   b9401400    ldr w0, [x0, #20]
   8a064:   d65f03c0    ret
   8a068:   d503201f    nop
   8a06c:   d503201f    nop

000000000008a070 <CUSBEndpoint::ResetPID()>:
   8a070:   d65f03c0    ret
   8a074:   d503201f    nop
   8a078:   d503201f    nop
   8a07c:   d503201f    nop

000000000008a080 <CUSBEndpoint::GetXHCIEndpoint()>:
   8a080:   f9400c00    ldr x0, [x0, #24]
   8a084:   b4000040    cbz x0, 8a08c <CUSBEndpoint::GetXHCIEndpoint()+0xc>
   8a088:   d65f03c0    ret
   8a08c:   d0000121    adrp    x1, b0000 <_etext+0xf9c>
   8a090:   d0000120    adrp    x0, b0000 <_etext+0xf9c>
   8a094:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   8a098:   912d4021    add x1, x1, #0xb50
   8a09c:   910003fd    mov x29, sp
   8a0a0:   912e4000    add x0, x0, #0xb90
   8a0a4:   52802302    mov w2, #0x118
   8a0a8:   94004a86    bl  9cac0 <assertion_failed>
   8a0ac:   00000000    udf #0

000000000008a0b0 <CUSBFunction::Initialize()>:
   8a0b0:   52800020    mov w0, #0x1
   8a0b4:   d65f03c0    ret
   8a0b8:   d503201f    nop
   8a0bc:   d503201f    nop

000000000008a0c0 <CUSBFunction::ReScanDevices()>:
   8a0c0:   52800000    mov w0, #0x0
   8a0c4:   d65f03c0    ret
   8a0c8:   d503201f    nop
   8a0cc:   d503201f    nop

000000000008a0d0 <CUSBFunction::~CUSBFunction()>:
   8a0d0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8a0d4:   d0000141    adrp    x1, b4000 <From+0x140>
   8a0d8:   910a0021    add x1, x1, #0x280
   8a0dc:   910003fd    mov x29, sp
   8a0e0:   a90153f3    stp x19, x20, [sp, #16]
   8a0e4:   aa0003f3    mov x19, x0
   8a0e8:   f9400c14    ldr x20, [x0, #24]
   8a0ec:   f9000001    str x1, [x0]
   8a0f0:   f900101f    str xzr, [x0, #32]
   8a0f4:   b40000d4    cbz x20, 8a10c <CUSBFunction::~CUSBFunction()+0x3c>
   8a0f8:   aa1403e0    mov x0, x20
   8a0fc:   94003e81    bl  99b00 <CUSBConfigurationParser::~CUSBConfigurationParser()>
   8a100:   aa1403e0    mov x0, x20
   8a104:   d2800601    mov x1, #0x30
   8a108:   940075d6    bl  a7860 <operator delete(void*, unsigned long)>
   8a10c:   aa1303e0    mov x0, x19
   8a110:   a9017e7f    stp xzr, xzr, [x19, #16]
   8a114:   a94153f3    ldp x19, x20, [sp, #16]
   8a118:   a8c27bfd    ldp x29, x30, [sp], #32
   8a11c:   14004cbd    b   9d410 <CDevice::~CDevice()>

000000000008a120 <CUSBFunction::RemoveDevice()>:
   8a120:   f9400800    ldr x0, [x0, #16]
   8a124:   b4000040    cbz x0, 8a12c <CUSBFunction::RemoveDevice()+0xc>
   8a128:   17fff82a    b   881d0 <CUSBDevice::RemoveDevice()>
   8a12c:   d0000121    adrp    x1, b0000 <_etext+0xf9c>
   8a130:   b0000120    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8a134:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   8a138:   912ea021    add x1, x1, #0xba8
   8a13c:   910003fd    mov x29, sp
   8a140:   9127a000    add x0, x0, #0x9e8
   8a144:   52800cc2    mov w2, #0x66
   8a148:   94004a5e    bl  9cac0 <assertion_failed>
   8a14c:   d503201f    nop

000000000008a150 <CUSBFunction::~CUSBFunction()>:
   8a150:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8a154:   d0000141    adrp    x1, b4000 <From+0x140>
   8a158:   910a0021    add x1, x1, #0x280
   8a15c:   910003fd    mov x29, sp
   8a160:   a90153f3    stp x19, x20, [sp, #16]
   8a164:   aa0003f3    mov x19, x0
   8a168:   f9400c14    ldr x20, [x0, #24]
   8a16c:   f9000001    str x1, [x0]
   8a170:   f900101f    str xzr, [x0, #32]
   8a174:   b40000d4    cbz x20, 8a18c <CUSBFunction::~CUSBFunction()+0x3c>
   8a178:   aa1403e0    mov x0, x20
   8a17c:   94003e61    bl  99b00 <CUSBConfigurationParser::~CUSBConfigurationParser()>
   8a180:   aa1403e0    mov x0, x20
   8a184:   d2800601    mov x1, #0x30
   8a188:   940075b6    bl  a7860 <operator delete(void*, unsigned long)>
   8a18c:   aa1303e0    mov x0, x19
   8a190:   a9017e7f    stp xzr, xzr, [x19, #16]
   8a194:   94004c9f    bl  9d410 <CDevice::~CDevice()>
   8a198:   aa1303e0    mov x0, x19
   8a19c:   a94153f3    ldp x19, x20, [sp, #16]
   8a1a0:   d2800501    mov x1, #0x28
   8a1a4:   a8c27bfd    ldp x29, x30, [sp], #32
   8a1a8:   140075ae    b   a7860 <operator delete(void*, unsigned long)>
   8a1ac:   d503201f    nop

000000000008a1b0 <CUSBFunction::Configure()>:
   8a1b0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8a1b4:   910003fd    mov x29, sp
   8a1b8:   a90153f3    stp x19, x20, [sp, #16]
   8a1bc:   aa0003f3    mov x19, x0
   8a1c0:   f9401000    ldr x0, [x0, #32]
   8a1c4:   b4000460    cbz x0, 8a250 <CUSBFunction::Configure()+0xa0>
   8a1c8:   39400c00    ldrb    w0, [x0, #3]
   8a1cc:   350000a0    cbnz    w0, 8a1e0 <CUSBFunction::Configure()+0x30>
   8a1d0:   52800020    mov w0, #0x1
   8a1d4:   a94153f3    ldp x19, x20, [sp, #16]
   8a1d8:   a8c27bfd    ldp x29, x30, [sp], #32
   8a1dc:   d65f03c0    ret
   8a1e0:   f9400a60    ldr x0, [x19, #16]
   8a1e4:   b4000420    cbz x0, 8a268 <CUSBFunction::Configure()+0xb8>
   8a1e8:   97fff8d6    bl  88540 <CUSBDevice::GetHost() const>
   8a1ec:   f9400a61    ldr x1, [x19, #16]
   8a1f0:   aa0003f4    mov x20, x0
   8a1f4:   b4000461    cbz x1, 8a280 <CUSBFunction::Configure()+0xd0>
   8a1f8:   aa0103e0    mov x0, x1
   8a1fc:   97fff8c5    bl  88510 <CUSBDevice::GetEndpoint0() const>
   8a200:   f9401264    ldr x4, [x19, #32]
   8a204:   aa0003e1    mov x1, x0
   8a208:   52800007    mov w7, #0x0
   8a20c:   aa1403e0    mov x0, x20
   8a210:   d2800006    mov x6, #0x0
   8a214:   52800163    mov w3, #0xb
   8a218:   52800022    mov w2, #0x1
   8a21c:   39400885    ldrb    w5, [x4, #2]
   8a220:   39400c84    ldrb    w4, [x4, #3]
   8a224:   97ffdb7b    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   8a228:   36fffd40    tbz w0, #31, 8a1d0 <CUSBFunction::Configure()+0x20>
   8a22c:   940054f5    bl  9f600 <CLogger::Get()>
   8a230:   b0000123    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8a234:   d0000141    adrp    x1, b4000 <From+0x140>
   8a238:   9119e063    add x3, x3, #0x678
   8a23c:   910b8021    add x1, x1, #0x2e0
   8a240:   52800022    mov w2, #0x1
   8a244:   940056d7    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8a248:   52800000    mov w0, #0x0
   8a24c:   17ffffe2    b   8a1d4 <CUSBFunction::Configure()+0x24>
   8a250:   d0000121    adrp    x1, b0000 <_etext+0xf9c>
   8a254:   d0000120    adrp    x0, b0000 <_etext+0xf9c>
   8a258:   912ea021    add x1, x1, #0xba8
   8a25c:   912ee000    add x0, x0, #0xbb8
   8a260:   528009c2    mov w2, #0x4e
   8a264:   94004a17    bl  9cac0 <assertion_failed>
   8a268:   d0000121    adrp    x1, b0000 <_etext+0xf9c>
   8a26c:   b0000120    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8a270:   912ea021    add x1, x1, #0xba8
   8a274:   9127a000    add x0, x0, #0x9e8
   8a278:   52801202    mov w2, #0x90
   8a27c:   94004a11    bl  9cac0 <assertion_failed>
   8a280:   d0000121    adrp    x1, b0000 <_etext+0xf9c>
   8a284:   b0000120    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8a288:   912ea021    add x1, x1, #0xba8
   8a28c:   9127a000    add x0, x0, #0x9e8
   8a290:   52801142    mov w2, #0x8a
   8a294:   94004a0b    bl  9cac0 <assertion_failed>
   8a298:   d503201f    nop
   8a29c:   d503201f    nop

000000000008a2a0 <CUSBFunction::CUSBFunction(CUSBDevice*, CUSBConfigurationParser*)>:
   8a2a0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   8a2a4:   910003fd    mov x29, sp
   8a2a8:   a90153f3    stp x19, x20, [sp, #16]
   8a2ac:   aa0003f3    mov x19, x0
   8a2b0:   aa0103f4    mov x20, x1
   8a2b4:   f90013f5    str x21, [sp, #32]
   8a2b8:   aa0203f5    mov x21, x2
   8a2bc:   94004c89    bl  9d4e0 <CDevice::CDevice()>
   8a2c0:   d0000140    adrp    x0, b4000 <From+0x140>
   8a2c4:   910a0000    add x0, x0, #0x280
   8a2c8:   a9017e74    stp x20, xzr, [x19, #16]
   8a2cc:   f9000260    str x0, [x19]
   8a2d0:   f900127f    str xzr, [x19, #32]
   8a2d4:   b4000214    cbz x20, 8a314 <CUSBFunction::CUSBFunction(CUSBDevice*, CUSBConfigurationParser*)+0x74>
   8a2d8:   b40002b5    cbz x21, 8a32c <CUSBFunction::CUSBFunction(CUSBDevice*, CUSBConfigurationParser*)+0x8c>
   8a2dc:   d2800600    mov x0, #0x30
   8a2e0:   94007538    bl  a77c0 <operator new(unsigned long)>
   8a2e4:   aa0003f4    mov x20, x0
   8a2e8:   aa1503e1    mov x1, x21
   8a2ec:   94003ded    bl  99aa0 <CUSBConfigurationParser::CUSBConfigurationParser(CUSBConfigurationParser*)>
   8a2f0:   aa1403e0    mov x0, x20
   8a2f4:   f9000e74    str x20, [x19, #24]
   8a2f8:   94003e3a    bl  99be0 <CUSBConfigurationParser::GetCurrentDescriptor()>
   8a2fc:   f9001260    str x0, [x19, #32]
   8a300:   b4000220    cbz x0, 8a344 <CUSBFunction::CUSBFunction(CUSBDevice*, CUSBConfigurationParser*)+0xa4>
   8a304:   a94153f3    ldp x19, x20, [sp, #16]
   8a308:   f94013f5    ldr x21, [sp, #32]
   8a30c:   a8c37bfd    ldp x29, x30, [sp], #48
   8a310:   d65f03c0    ret
   8a314:   d0000121    adrp    x1, b0000 <_etext+0xf9c>
   8a318:   b0000120    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8a31c:   912ea021    add x1, x1, #0xba8
   8a320:   9127a000    add x0, x0, #0x9e8
   8a324:   52800442    mov w2, #0x22
   8a328:   940049e6    bl  9cac0 <assertion_failed>
   8a32c:   d0000121    adrp    x1, b0000 <_etext+0xf9c>
   8a330:   d0000120    adrp    x0, b0000 <_etext+0xf9c>
   8a334:   912ea021    add x1, x1, #0xba8
   8a338:   912f4000    add x0, x0, #0xbd0
   8a33c:   52800482    mov w2, #0x24
   8a340:   940049e0    bl  9cac0 <assertion_failed>
   8a344:   d0000121    adrp    x1, b0000 <_etext+0xf9c>
   8a348:   d0000120    adrp    x0, b0000 <_etext+0xf9c>
   8a34c:   912ea021    add x1, x1, #0xba8
   8a350:   912ee000    add x0, x0, #0xbb8
   8a354:   52800522    mov w2, #0x29
   8a358:   940049da    bl  9cac0 <assertion_failed>
   8a35c:   d503201f    nop

000000000008a360 <CUSBFunction::CUSBFunction(CUSBFunction*)>:
   8a360:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8a364:   910003fd    mov x29, sp
   8a368:   a90153f3    stp x19, x20, [sp, #16]
   8a36c:   aa0003f3    mov x19, x0
   8a370:   aa0103f4    mov x20, x1
   8a374:   94004c5b    bl  9d4e0 <CDevice::CDevice()>
   8a378:   d0000140    adrp    x0, b4000 <From+0x140>
   8a37c:   910a0000    add x0, x0, #0x280
   8a380:   a9017e7f    stp xzr, xzr, [x19, #16]
   8a384:   f9000260    str x0, [x19]
   8a388:   f900127f    str xzr, [x19, #32]
   8a38c:   b4000274    cbz x20, 8a3d8 <CUSBFunction::CUSBFunction(CUSBFunction*)+0x78>
   8a390:   f9400a80    ldr x0, [x20, #16]
   8a394:   f9000a60    str x0, [x19, #16]
   8a398:   b40002c0    cbz x0, 8a3f0 <CUSBFunction::CUSBFunction(CUSBFunction*)+0x90>
   8a39c:   f9400e80    ldr x0, [x20, #24]
   8a3a0:   b4000340    cbz x0, 8a408 <CUSBFunction::CUSBFunction(CUSBFunction*)+0xa8>
   8a3a4:   d2800600    mov x0, #0x30
   8a3a8:   94007506    bl  a77c0 <operator new(unsigned long)>
   8a3ac:   f9400e81    ldr x1, [x20, #24]
   8a3b0:   aa0003f4    mov x20, x0
   8a3b4:   94003dbb    bl  99aa0 <CUSBConfigurationParser::CUSBConfigurationParser(CUSBConfigurationParser*)>
   8a3b8:   aa1403e0    mov x0, x20
   8a3bc:   f9000e74    str x20, [x19, #24]
   8a3c0:   94003e08    bl  99be0 <CUSBConfigurationParser::GetCurrentDescriptor()>
   8a3c4:   f9001260    str x0, [x19, #32]
   8a3c8:   b40002c0    cbz x0, 8a420 <CUSBFunction::CUSBFunction(CUSBFunction*)+0xc0>
   8a3cc:   a94153f3    ldp x19, x20, [sp, #16]
   8a3d0:   a8c27bfd    ldp x29, x30, [sp], #32
   8a3d4:   d65f03c0    ret
   8a3d8:   d0000121    adrp    x1, b0000 <_etext+0xf9c>
   8a3dc:   d0000120    adrp    x0, b0000 <_etext+0xf9c>
   8a3e0:   912ea021    add x1, x1, #0xba8
   8a3e4:   912fa000    add x0, x0, #0xbe8
   8a3e8:   52800622    mov w2, #0x31
   8a3ec:   940049b5    bl  9cac0 <assertion_failed>
   8a3f0:   d0000121    adrp    x1, b0000 <_etext+0xf9c>
   8a3f4:   b0000120    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8a3f8:   912ea021    add x1, x1, #0xba8
   8a3fc:   9127a000    add x0, x0, #0x9e8
   8a400:   52800662    mov w2, #0x33
   8a404:   940049af    bl  9cac0 <assertion_failed>
   8a408:   d0000121    adrp    x1, b0000 <_etext+0xf9c>
   8a40c:   d0000120    adrp    x0, b0000 <_etext+0xf9c>
   8a410:   912ea021    add x1, x1, #0xba8
   8a414:   912fe000    add x0, x0, #0xbf8
   8a418:   528006a2    mov w2, #0x35
   8a41c:   940049a9    bl  9cac0 <assertion_failed>
   8a420:   d0000121    adrp    x1, b0000 <_etext+0xf9c>
   8a424:   d0000120    adrp    x0, b0000 <_etext+0xf9c>
   8a428:   912ea021    add x1, x1, #0xba8
   8a42c:   912ee000    add x0, x0, #0xbb8
   8a430:   52800742    mov w2, #0x3a
   8a434:   940049a3    bl  9cac0 <assertion_failed>
   8a438:   d503201f    nop
   8a43c:   d503201f    nop

000000000008a440 <CUSBFunction::GetInterfaceName() const>:
   8a440:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8a444:   910003fd    mov x29, sp
   8a448:   a90153f3    stp x19, x20, [sp, #16]
   8a44c:   aa0003f4    mov x20, x0
   8a450:   d2800400    mov x0, #0x20
   8a454:   940074db    bl  a77c0 <operator new(unsigned long)>
   8a458:   d0000121    adrp    x1, b0000 <_etext+0xf9c>
   8a45c:   91122021    add x1, x1, #0x488
   8a460:   aa0003f3    mov x19, x0
   8a464:   94006623    bl  a3cf0 <CString::CString(char const*)>
   8a468:   f9401283    ldr x3, [x20, #32]
   8a46c:   b40000c3    cbz x3, 8a484 <CUSBFunction::GetInterfaceName() const+0x44>
   8a470:   39401462    ldrb    w2, [x3, #5]
   8a474:   51000440    sub w0, w2, #0x1
   8a478:   12001c00    and w0, w0, #0xff
   8a47c:   7103f41f    cmp w0, #0xfd
   8a480:   540000a9    b.ls    8a494 <CUSBFunction::GetInterfaceName() const+0x54>
   8a484:   aa1303e0    mov x0, x19
   8a488:   a94153f3    ldp x19, x20, [sp, #16]
   8a48c:   a8c27bfd    ldp x29, x30, [sp], #32
   8a490:   d65f03c0    ret
   8a494:   d0000121    adrp    x1, b0000 <_etext+0xf9c>
   8a498:   39401c64    ldrb    w4, [x3, #7]
   8a49c:   aa1303e0    mov x0, x19
   8a4a0:   91306021    add x1, x1, #0xc18
   8a4a4:   39401863    ldrb    w3, [x3, #6]
   8a4a8:   94006c16    bl  a5500 <CString::Format(char const*, ...)>
   8a4ac:   aa1303e0    mov x0, x19
   8a4b0:   a94153f3    ldp x19, x20, [sp, #16]
   8a4b4:   a8c27bfd    ldp x29, x30, [sp], #32
   8a4b8:   d65f03c0    ret
   8a4bc:   d503201f    nop

000000000008a4c0 <CUSBFunction::GetNumEndpoints() const>:
   8a4c0:   f9401000    ldr x0, [x0, #32]
   8a4c4:   b4000060    cbz x0, 8a4d0 <CUSBFunction::GetNumEndpoints() const+0x10>
   8a4c8:   39401000    ldrb    w0, [x0, #4]
   8a4cc:   d65f03c0    ret
   8a4d0:   d0000121    adrp    x1, b0000 <_etext+0xf9c>
   8a4d4:   d0000120    adrp    x0, b0000 <_etext+0xf9c>
   8a4d8:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   8a4dc:   912ea021    add x1, x1, #0xba8
   8a4e0:   910003fd    mov x29, sp
   8a4e4:   912ee000    add x0, x0, #0xbb8
   8a4e8:   52800fc2    mov w2, #0x7e
   8a4ec:   94004975    bl  9cac0 <assertion_failed>

000000000008a4f0 <CUSBFunction::GetDevice() const>:
   8a4f0:   f9400800    ldr x0, [x0, #16]
   8a4f4:   b4000040    cbz x0, 8a4fc <CUSBFunction::GetDevice() const+0xc>
   8a4f8:   d65f03c0    ret
   8a4fc:   d0000121    adrp    x1, b0000 <_etext+0xf9c>
   8a500:   b0000120    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8a504:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   8a508:   912ea021    add x1, x1, #0xba8
   8a50c:   910003fd    mov x29, sp
   8a510:   9127a000    add x0, x0, #0x9e8
   8a514:   52801082    mov w2, #0x84
   8a518:   9400496a    bl  9cac0 <assertion_failed>
   8a51c:   d503201f    nop

000000000008a520 <CUSBFunction::GetEndpoint0() const>:
   8a520:   f9400800    ldr x0, [x0, #16]
   8a524:   b4000040    cbz x0, 8a52c <CUSBFunction::GetEndpoint0() const+0xc>
   8a528:   17fff7fa    b   88510 <CUSBDevice::GetEndpoint0() const>
   8a52c:   d0000121    adrp    x1, b0000 <_etext+0xf9c>
   8a530:   b0000120    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8a534:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   8a538:   912ea021    add x1, x1, #0xba8
   8a53c:   910003fd    mov x29, sp
   8a540:   9127a000    add x0, x0, #0x9e8
   8a544:   52801142    mov w2, #0x8a
   8a548:   9400495e    bl  9cac0 <assertion_failed>
   8a54c:   d503201f    nop

000000000008a550 <CUSBFunction::GetHost() const>:
   8a550:   f9400800    ldr x0, [x0, #16]
   8a554:   b4000040    cbz x0, 8a55c <CUSBFunction::GetHost() const+0xc>
   8a558:   17fff7fa    b   88540 <CUSBDevice::GetHost() const>
   8a55c:   d0000121    adrp    x1, b0000 <_etext+0xf9c>
   8a560:   b0000120    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8a564:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   8a568:   912ea021    add x1, x1, #0xba8
   8a56c:   910003fd    mov x29, sp
   8a570:   9127a000    add x0, x0, #0x9e8
   8a574:   52801202    mov w2, #0x90
   8a578:   94004952    bl  9cac0 <assertion_failed>
   8a57c:   d503201f    nop

000000000008a580 <CUSBFunction::GetDescriptor(unsigned char)>:
   8a580:   f9400c00    ldr x0, [x0, #24]
   8a584:   b4000060    cbz x0, 8a590 <CUSBFunction::GetDescriptor(unsigned char)+0x10>
   8a588:   12001c21    and w1, w1, #0xff
   8a58c:   14003d65    b   99b20 <CUSBConfigurationParser::GetDescriptor(unsigned char)>
   8a590:   d0000121    adrp    x1, b0000 <_etext+0xf9c>
   8a594:   d0000120    adrp    x0, b0000 <_etext+0xf9c>
   8a598:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   8a59c:   912ea021    add x1, x1, #0xba8
   8a5a0:   910003fd    mov x29, sp
   8a5a4:   9113c000    add x0, x0, #0x4f0
   8a5a8:   528012c2    mov w2, #0x96
   8a5ac:   94004945    bl  9cac0 <assertion_failed>

000000000008a5b0 <CUSBFunction::ConfigurationError(char const*) const>:
   8a5b0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   8a5b4:   910003fd    mov x29, sp
   8a5b8:   f9400c00    ldr x0, [x0, #24]
   8a5bc:   b4000080    cbz x0, 8a5cc <CUSBFunction::ConfigurationError(char const*) const+0x1c>
   8a5c0:   b4000121    cbz x1, 8a5e4 <CUSBFunction::ConfigurationError(char const*) const+0x34>
   8a5c4:   a8c17bfd    ldp x29, x30, [sp], #16
   8a5c8:   14003d9a    b   99c30 <CUSBConfigurationParser::Error(char const*) const>
   8a5cc:   d0000121    adrp    x1, b0000 <_etext+0xf9c>
   8a5d0:   d0000120    adrp    x0, b0000 <_etext+0xf9c>
   8a5d4:   912ea021    add x1, x1, #0xba8
   8a5d8:   9113c000    add x0, x0, #0x4f0
   8a5dc:   52801382    mov w2, #0x9c
   8a5e0:   94004938    bl  9cac0 <assertion_failed>
   8a5e4:   d0000121    adrp    x1, b0000 <_etext+0xf9c>
   8a5e8:   d0000120    adrp    x0, b0000 <_etext+0xf9c>
   8a5ec:   912ea021    add x1, x1, #0xba8
   8a5f0:   9130a000    add x0, x0, #0xc28
   8a5f4:   528013a2    mov w2, #0x9d
   8a5f8:   94004932    bl  9cac0 <assertion_failed>
   8a5fc:   d503201f    nop

000000000008a600 <CUSBFunction::SelectInterfaceByClass(unsigned char, unsigned char, unsigned char)>:
   8a600:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   8a604:   910003fd    mov x29, sp
   8a608:   a90153f3    stp x19, x20, [sp, #16]
   8a60c:   aa0003f3    mov x19, x0
   8a610:   f9401000    ldr x0, [x0, #32]
   8a614:   a9025bf5    stp x21, x22, [sp, #32]
   8a618:   b40003e0    cbz x0, 8a694 <CUSBFunction::SelectInterfaceByClass(unsigned char, unsigned char, unsigned char)+0x94>
   8a61c:   12001c34    and w20, w1, #0xff
   8a620:   f9400e61    ldr x1, [x19, #24]
   8a624:   b4000441    cbz x1, 8a6ac <CUSBFunction::SelectInterfaceByClass(unsigned char, unsigned char, unsigned char)+0xac>
   8a628:   f9400a61    ldr x1, [x19, #16]
   8a62c:   12001c55    and w21, w2, #0xff
   8a630:   12001c76    and w22, w3, #0xff
   8a634:   b5000141    cbnz    x1, 8a65c <CUSBFunction::SelectInterfaceByClass(unsigned char, unsigned char, unsigned char)+0x5c>
   8a638:   14000023    b   8a6c4 <CUSBFunction::SelectInterfaceByClass(unsigned char, unsigned char, unsigned char)+0xc4>
   8a63c:   f9400a60    ldr x0, [x19, #16]
   8a640:   52800081    mov w1, #0x4
   8a644:   97fff7e3    bl  885d0 <CUSBDevice::GetDescriptor(unsigned char)>
   8a648:   f9400e60    ldr x0, [x19, #24]
   8a64c:   52800081    mov w1, #0x4
   8a650:   94003d34    bl  99b20 <CUSBConfigurationParser::GetDescriptor(unsigned char)>
   8a654:   f9001260    str x0, [x19, #32]
   8a658:   b4000160    cbz x0, 8a684 <CUSBFunction::SelectInterfaceByClass(unsigned char, unsigned char, unsigned char)+0x84>
   8a65c:   39401401    ldrb    w1, [x0, #5]
   8a660:   6b14003f    cmp w1, w20
   8a664:   54fffec1    b.ne    8a63c <CUSBFunction::SelectInterfaceByClass(unsigned char, unsigned char, unsigned char)+0x3c>
   8a668:   39401801    ldrb    w1, [x0, #6]
   8a66c:   6b15003f    cmp w1, w21
   8a670:   54fffe61    b.ne    8a63c <CUSBFunction::SelectInterfaceByClass(unsigned char, unsigned char, unsigned char)+0x3c>
   8a674:   39401c00    ldrb    w0, [x0, #7]
   8a678:   6b16001f    cmp w0, w22
   8a67c:   54fffe01    b.ne    8a63c <CUSBFunction::SelectInterfaceByClass(unsigned char, unsigned char, unsigned char)+0x3c>
   8a680:   52800020    mov w0, #0x1
   8a684:   a94153f3    ldp x19, x20, [sp, #16]
   8a688:   a9425bf5    ldp x21, x22, [sp, #32]
   8a68c:   a8c37bfd    ldp x29, x30, [sp], #48
   8a690:   d65f03c0    ret
   8a694:   d0000121    adrp    x1, b0000 <_etext+0xf9c>
   8a698:   d0000120    adrp    x0, b0000 <_etext+0xf9c>
   8a69c:   912ea021    add x1, x1, #0xba8
   8a6a0:   912ee000    add x0, x0, #0xbb8
   8a6a4:   52801462    mov w2, #0xa3
   8a6a8:   94004906    bl  9cac0 <assertion_failed>
   8a6ac:   d0000121    adrp    x1, b0000 <_etext+0xf9c>
   8a6b0:   d0000120    adrp    x0, b0000 <_etext+0xf9c>
   8a6b4:   912ea021    add x1, x1, #0xba8
   8a6b8:   9113c000    add x0, x0, #0x4f0
   8a6bc:   52801482    mov w2, #0xa4
   8a6c0:   94004900    bl  9cac0 <assertion_failed>
   8a6c4:   d0000121    adrp    x1, b0000 <_etext+0xf9c>
   8a6c8:   b0000120    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8a6cc:   912ea021    add x1, x1, #0xba8
   8a6d0:   9127a000    add x0, x0, #0x9e8
   8a6d4:   528014a2    mov w2, #0xa5
   8a6d8:   940048fa    bl  9cac0 <assertion_failed>
   8a6dc:   d503201f    nop

000000000008a6e0 <CUSBFunction::GetInterfaceNumber() const>:
   8a6e0:   f9401000    ldr x0, [x0, #32]
   8a6e4:   b4000060    cbz x0, 8a6f0 <CUSBFunction::GetInterfaceNumber() const+0x10>
   8a6e8:   39400800    ldrb    w0, [x0, #2]
   8a6ec:   d65f03c0    ret
   8a6f0:   d0000121    adrp    x1, b0000 <_etext+0xf9c>
   8a6f4:   d0000120    adrp    x0, b0000 <_etext+0xf9c>
   8a6f8:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   8a6fc:   912ea021    add x1, x1, #0xba8
   8a700:   910003fd    mov x29, sp
   8a704:   912ee000    add x0, x0, #0xbb8
   8a708:   52801762    mov w2, #0xbb
   8a70c:   940048ed    bl  9cac0 <assertion_failed>

000000000008a710 <CUSBFunction::GetInterfaceClass() const>:
   8a710:   f9401000    ldr x0, [x0, #32]
   8a714:   b4000060    cbz x0, 8a720 <CUSBFunction::GetInterfaceClass() const+0x10>
   8a718:   39401400    ldrb    w0, [x0, #5]
   8a71c:   d65f03c0    ret
   8a720:   d0000121    adrp    x1, b0000 <_etext+0xf9c>
   8a724:   d0000120    adrp    x0, b0000 <_etext+0xf9c>
   8a728:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   8a72c:   912ea021    add x1, x1, #0xba8
   8a730:   910003fd    mov x29, sp
   8a734:   912ee000    add x0, x0, #0xbb8
   8a738:   52801822    mov w2, #0xc1
   8a73c:   940048e1    bl  9cac0 <assertion_failed>

000000000008a740 <CUSBFunction::GetInterfaceSubClass() const>:
   8a740:   f9401000    ldr x0, [x0, #32]
   8a744:   b4000060    cbz x0, 8a750 <CUSBFunction::GetInterfaceSubClass() const+0x10>
   8a748:   39401800    ldrb    w0, [x0, #6]
   8a74c:   d65f03c0    ret
   8a750:   d0000121    adrp    x1, b0000 <_etext+0xf9c>
   8a754:   d0000120    adrp    x0, b0000 <_etext+0xf9c>
   8a758:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   8a75c:   912ea021    add x1, x1, #0xba8
   8a760:   910003fd    mov x29, sp
   8a764:   912ee000    add x0, x0, #0xbb8
   8a768:   528018e2    mov w2, #0xc7
   8a76c:   940048d5    bl  9cac0 <assertion_failed>

000000000008a770 <CUSBFunction::GetInterfaceProtocol() const>:
   8a770:   f9401000    ldr x0, [x0, #32]
   8a774:   b4000060    cbz x0, 8a780 <CUSBFunction::GetInterfaceProtocol() const+0x10>
   8a778:   39401c00    ldrb    w0, [x0, #7]
   8a77c:   d65f03c0    ret
   8a780:   d0000121    adrp    x1, b0000 <_etext+0xf9c>
   8a784:   d0000120    adrp    x0, b0000 <_etext+0xf9c>
   8a788:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   8a78c:   912ea021    add x1, x1, #0xba8
   8a790:   910003fd    mov x29, sp
   8a794:   912ee000    add x0, x0, #0xbb8
   8a798:   528019a2    mov w2, #0xcd
   8a79c:   940048c9    bl  9cac0 <assertion_failed>

000000000008a7a0 <CUSBFunction::GetInterfaceDescriptor() const>:
   8a7a0:   f9401000    ldr x0, [x0, #32]
   8a7a4:   b4000040    cbz x0, 8a7ac <CUSBFunction::GetInterfaceDescriptor() const+0xc>
   8a7a8:   d65f03c0    ret
   8a7ac:   d0000121    adrp    x1, b0000 <_etext+0xf9c>
   8a7b0:   d0000120    adrp    x0, b0000 <_etext+0xf9c>
   8a7b4:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   8a7b8:   912ea021    add x1, x1, #0xba8
   8a7bc:   910003fd    mov x29, sp
   8a7c0:   912ee000    add x0, x0, #0xbb8
   8a7c4:   52801a62    mov w2, #0xd3
   8a7c8:   940048be    bl  9cac0 <assertion_failed>
   8a7cc:   00000000    udf #0

000000000008a7d0 <CUSBGamePadPS3Device::~CUSBGamePadPS3Device()>:
   8a7d0:   d0000141    adrp    x1, b4000 <From+0x140>
   8a7d4:   910be021    add x1, x1, #0x2f8
   8a7d8:   f9000001    str x1, [x0]
   8a7dc:   14000435    b   8b8b0 <CUSBGamePadStandardDevice::~CUSBGamePadStandardDevice()>

000000000008a7e0 <CUSBGamePadPS3Device::~CUSBGamePadPS3Device()>:
   8a7e0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8a7e4:   d0000141    adrp    x1, b4000 <From+0x140>
   8a7e8:   910be021    add x1, x1, #0x2f8
   8a7ec:   910003fd    mov x29, sp
   8a7f0:   f9000bf3    str x19, [sp, #16]
   8a7f4:   aa0003f3    mov x19, x0
   8a7f8:   f9000001    str x1, [x0]
   8a7fc:   9400042d    bl  8b8b0 <CUSBGamePadStandardDevice::~CUSBGamePadStandardDevice()>
   8a800:   aa1303e0    mov x0, x19
   8a804:   f9400bf3    ldr x19, [sp, #16]
   8a808:   d2803801    mov x1, #0x1c0
   8a80c:   a8c27bfd    ldp x29, x30, [sp], #32
   8a810:   14007414    b   a7860 <operator delete(void*, unsigned long)>
   8a814:   d503201f    nop
   8a818:   d503201f    nop
   8a81c:   d503201f    nop

000000000008a820 <CUSBGamePadPS3Device::SetLEDMode(TGamePadLEDMode)>:
   8a820:   93407c22    sxtw    x2, w1
   8a824:   f100285f    cmp x2, #0xa
   8a828:   54000069    b.ls    8a834 <CUSBGamePadPS3Device::SetLEDMode(TGamePadLEDMode)+0x14>
   8a82c:   52800000    mov w0, #0x0
   8a830:   d65f03c0    ret
   8a834:   d0000142    adrp    x2, b4000 <From+0x140>
   8a838:   910e8042    add x2, x2, #0x3a0
   8a83c:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   8a840:   910003fd    mov x29, sp
   8a844:   3861c841    ldrb    w1, [x2, w1, sxtw]
   8a848:   a90153f3    stp x19, x20, [sp, #16]
   8a84c:   aa0003f3    mov x19, x0
   8a850:   f90013f5    str x21, [sp, #32]
   8a854:   531f1821    ubfiz   w1, w1, #1, #7
   8a858:   39062401    strb    w1, [x0, #393]
   8a85c:   97ffff3d    bl  8a550 <CUSBFunction::GetHost() const>
   8a860:   aa0003f4    mov x20, x0
   8a864:   aa1303e0    mov x0, x19
   8a868:   97ffff2e    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   8a86c:   aa0003f5    mov x21, x0
   8a870:   aa1303e0    mov x0, x19
   8a874:   97ffff9b    bl  8a6e0 <CUSBFunction::GetInterfaceNumber() const>
   8a878:   12001c05    and w5, w0, #0xff
   8a87c:   91060266    add x6, x19, #0x180
   8a880:   aa1503e1    mov x1, x21
   8a884:   aa1403e0    mov x0, x20
   8a888:   52800607    mov w7, #0x30
   8a88c:   52804024    mov w4, #0x201
   8a890:   52800123    mov w3, #0x9
   8a894:   52800422    mov w2, #0x21
   8a898:   97ffd9de    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   8a89c:   2a2003e0    mvn w0, w0
   8a8a0:   a94153f3    ldp x19, x20, [sp, #16]
   8a8a4:   531f7c00    lsr w0, w0, #31
   8a8a8:   f94013f5    ldr x21, [sp, #32]
   8a8ac:   a8c37bfd    ldp x29, x30, [sp], #48
   8a8b0:   d65f03c0    ret
   8a8b4:   d503201f    nop
   8a8b8:   d503201f    nop
   8a8bc:   d503201f    nop

000000000008a8c0 <CUSBGamePadPS3Device::SetRumbleMode(TGamePadRumbleMode)>:
   8a8c0:   a9b67bfd    stp x29, x30, [sp, #-160]!
   8a8c4:   910003fd    mov x29, sp
   8a8c8:   d2800602    mov x2, #0x30
   8a8cc:   a90153f3    stp x19, x20, [sp, #16]
   8a8d0:   9101bff3    add x19, sp, #0x6f
   8a8d4:   aa0003f4    mov x20, x0
   8a8d8:   927ae673    and x19, x19, #0xffffffffffffffc0
   8a8dc:   aa1303e0    mov x0, x19
   8a8e0:   f90013f5    str x21, [sp, #32]
   8a8e4:   2a0103f5    mov w21, w1
   8a8e8:   91060281    add x1, x20, #0x180
   8a8ec:   94007123    bl  a6d78 <memcpy>
   8a8f0:   710006bf    cmp w21, #0x1
   8a8f4:   540004e0    b.eq    8a990 <CUSBGamePadPS3Device::SetRumbleMode(TGamePadRumbleMode)+0xd0>
   8a8f8:   71000abf    cmp w21, #0x2
   8a8fc:   54000420    b.eq    8a980 <CUSBGamePadPS3Device::SetRumbleMode(TGamePadRumbleMode)+0xc0>
   8a900:   35000515    cbnz    w21, 8a9a0 <CUSBGamePadPS3Device::SetRumbleMode(TGamePadRumbleMode)+0xe0>
   8a904:   52800003    mov w3, #0x0
   8a908:   52800001    mov w1, #0x0
   8a90c:   52800002    mov w2, #0x0
   8a910:   aa1403e0    mov x0, x20
   8a914:   39000661    strb    w1, [x19, #1]
   8a918:   39000a63    strb    w3, [x19, #2]
   8a91c:   39000e61    strb    w1, [x19, #3]
   8a920:   39001262    strb    w2, [x19, #4]
   8a924:   97ffff0b    bl  8a550 <CUSBFunction::GetHost() const>
   8a928:   aa0003f5    mov x21, x0
   8a92c:   aa1403e0    mov x0, x20
   8a930:   97fffefc    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   8a934:   aa0003e1    mov x1, x0
   8a938:   aa1403e0    mov x0, x20
   8a93c:   aa0103f4    mov x20, x1
   8a940:   97ffff68    bl  8a6e0 <CUSBFunction::GetInterfaceNumber() const>
   8a944:   12001c05    and w5, w0, #0xff
   8a948:   aa1303e6    mov x6, x19
   8a94c:   aa1403e1    mov x1, x20
   8a950:   aa1503e0    mov x0, x21
   8a954:   52800607    mov w7, #0x30
   8a958:   52804024    mov w4, #0x201
   8a95c:   52800123    mov w3, #0x9
   8a960:   52800422    mov w2, #0x21
   8a964:   97ffd9ab    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   8a968:   2a2003e0    mvn w0, w0
   8a96c:   a94153f3    ldp x19, x20, [sp, #16]
   8a970:   531f7c00    lsr w0, w0, #31
   8a974:   f94013f5    ldr x21, [sp, #32]
   8a978:   a8ca7bfd    ldp x29, x30, [sp], #160
   8a97c:   d65f03c0    ret
   8a980:   52800003    mov w3, #0x0
   8a984:   52801fc1    mov w1, #0xfe
   8a988:   52801fe2    mov w2, #0xff
   8a98c:   17ffffe1    b   8a910 <CUSBGamePadPS3Device::SetRumbleMode(TGamePadRumbleMode)+0x50>
   8a990:   52801fe3    mov w3, #0xff
   8a994:   52801fc1    mov w1, #0xfe
   8a998:   52800002    mov w2, #0x0
   8a99c:   17ffffdd    b   8a910 <CUSBGamePadPS3Device::SetRumbleMode(TGamePadRumbleMode)+0x50>
   8a9a0:   d0000121    adrp    x1, b0000 <_etext+0xf9c>
   8a9a4:   d0000120    adrp    x0, b0000 <_etext+0xf9c>
   8a9a8:   9130e021    add x1, x1, #0xc38
   8a9ac:   91106000    add x0, x0, #0x418
   8a9b0:   528021c2    mov w2, #0x10e
   8a9b4:   94004843    bl  9cac0 <assertion_failed>
   8a9b8:   d503201f    nop
   8a9bc:   d503201f    nop

000000000008a9c0 <CUSBGamePadPS3Device::CUSBGamePadPS3Device(CUSBFunction*)>:
   8a9c0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8a9c4:   52800002    mov w2, #0x0
   8a9c8:   910003fd    mov x29, sp
   8a9cc:   f9000bf3    str x19, [sp, #16]
   8a9d0:   aa0003f3    mov x19, x0
   8a9d4:   940003db    bl  8b940 <CUSBGamePadStandardDevice::CUSBGamePadStandardDevice(CUSBFunction*, bool)>
   8a9d8:   d0000144    adrp    x4, b4000 <From+0x140>
   8a9dc:   910be084    add x4, x4, #0x2f8
   8a9e0:   aa1303e0    mov x0, x19
   8a9e4:   52800003    mov w3, #0x0
   8a9e8:   52800002    mov w2, #0x0
   8a9ec:   52800061    mov w1, #0x3
   8a9f0:   f9000264    str x4, [x19]
   8a9f4:   97ffff03    bl  8a600 <CUSBFunction::SelectInterfaceByClass(unsigned char, unsigned char, unsigned char)>
   8a9f8:   2a0003e3    mov w3, w0
   8a9fc:   d0000141    adrp    x1, b4000 <From+0x140>
   8aa00:   910e8021    add x1, x1, #0x3a0
   8aa04:   91060260    add x0, x19, #0x180
   8aa08:   91004021    add x1, x1, #0x10
   8aa0c:   d2800602    mov x2, #0x30
   8aa10:   3905aa63    strb    w3, [x19, #362]
   8aa14:   f9400bf3    ldr x19, [sp, #16]
   8aa18:   a8c27bfd    ldp x29, x30, [sp], #32
   8aa1c:   140070d7    b   a6d78 <memcpy>

000000000008aa20 <CUSBGamePadPS3Device::PS3Enable()>:
   8aa20:   a9b67bfd    stp x29, x30, [sp, #-160]!
   8aa24:   910003fd    mov x29, sp
   8aa28:   d2818842    mov x2, #0xc42
   8aa2c:   d2800003    mov x3, #0x0
   8aa30:   a90153f3    stp x19, x20, [sp, #16]
   8aa34:   9101bff3    add x19, sp, #0x6f
   8aa38:   aa0003f4    mov x20, x0
   8aa3c:   927ae673    and x19, x19, #0xffffffffffffffc0
   8aa40:   a9025bf5    stp x21, x22, [sp, #32]
   8aa44:   a9000e62    stp x2, x3, [x19]
   8aa48:   a9017e7f    stp xzr, xzr, [x19, #16]
   8aa4c:   a9027e7f    stp xzr, xzr, [x19, #32]
   8aa50:   a9037e7f    stp xzr, xzr, [x19, #48]
   8aa54:   97fffebf    bl  8a550 <CUSBFunction::GetHost() const>
   8aa58:   aa0003f5    mov x21, x0
   8aa5c:   aa1403e0    mov x0, x20
   8aa60:   97fffeb0    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   8aa64:   aa0003f6    mov x22, x0
   8aa68:   aa1403e0    mov x0, x20
   8aa6c:   97ffff1d    bl  8a6e0 <CUSBFunction::GetInterfaceNumber() const>
   8aa70:   12001c05    and w5, w0, #0xff
   8aa74:   aa1303e6    mov x6, x19
   8aa78:   aa1603e1    mov x1, x22
   8aa7c:   aa1503e0    mov x0, x21
   8aa80:   52800087    mov w7, #0x4
   8aa84:   52807e84    mov w4, #0x3f4
   8aa88:   52800123    mov w3, #0x9
   8aa8c:   52800422    mov w2, #0x21
   8aa90:   97ffd960    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   8aa94:   37f80160    tbnz    w0, #31, 8aac0 <CUSBGamePadPS3Device::PS3Enable()+0xa0>
   8aa98:   f9400282    ldr x2, [x20]
   8aa9c:   aa1403e0    mov x0, x20
   8aaa0:   b9415681    ldr w1, [x20, #340]
   8aaa4:   f9404042    ldr x2, [x2, #128]
   8aaa8:   d63f0040    blr x2
   8aaac:   a94153f3    ldp x19, x20, [sp, #16]
   8aab0:   12001c00    and w0, w0, #0xff
   8aab4:   a9425bf5    ldp x21, x22, [sp, #32]
   8aab8:   a8ca7bfd    ldp x29, x30, [sp], #160
   8aabc:   d65f03c0    ret
   8aac0:   a94153f3    ldp x19, x20, [sp, #16]
   8aac4:   52800000    mov w0, #0x0
   8aac8:   a9425bf5    ldp x21, x22, [sp, #32]
   8aacc:   a8ca7bfd    ldp x29, x30, [sp], #160
   8aad0:   d65f03c0    ret
   8aad4:   d503201f    nop
   8aad8:   d503201f    nop
   8aadc:   d503201f    nop

000000000008aae0 <CUSBGamePadPS3Device::Configure()>:
   8aae0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8aae4:   910003fd    mov x29, sp
   8aae8:   3945a801    ldrb    w1, [x0, #362]
   8aaec:   360003a1    tbz w1, #0, 8ab60 <CUSBGamePadPS3Device::Configure()+0x80>
   8aaf0:   f9000bf3    str x19, [sp, #16]
   8aaf4:   aa0003f3    mov x19, x0
   8aaf8:   94000532    bl  8bfc0 <CUSBGamePadStandardDevice::Configure()>
   8aafc:   360005a0    tbz w0, #0, 8abb0 <CUSBGamePadPS3Device::Configure()+0xd0>
   8ab00:   7942a260    ldrh    w0, [x19, #336]
   8ab04:   5100c400    sub w0, w0, #0x31
   8ab08:   12003c00    and w0, w0, #0xffff
   8ab0c:   7100041f    cmp w0, #0x1
   8ab10:   54000368    b.hi    8ab7c <CUSBGamePadPS3Device::Configure()+0x9c>
   8ab14:   52800263    mov w3, #0x13
   8ab18:   52800204    mov w4, #0x10
   8ab1c:   91014261    add x1, x19, #0x50
   8ab20:   91044262    add x2, x19, #0x110
   8ab24:   52801fe0    mov w0, #0xff
   8ab28:   b9004a64    str w4, [x19, #72]
   8ab2c:   b9012a63    str w3, [x19, #296]
   8ab30:   2900003f    stp wzr, w0, [x1]
   8ab34:   91003021    add x1, x1, #0xc
   8ab38:   eb02003f    cmp x1, x2
   8ab3c:   54ffffa1    b.ne    8ab30 <CUSBGamePadPS3Device::Configure()+0x50>
   8ab40:   aa1303e0    mov x0, x19
   8ab44:   b9010e7f    str wzr, [x19, #268]
   8ab48:   97ffffb6    bl  8aa20 <CUSBGamePadPS3Device::PS3Enable()>
   8ab4c:   360004a0    tbz w0, #0, 8abe0 <CUSBGamePadPS3Device::Configure()+0x100>
   8ab50:   aa1303e0    mov x0, x19
   8ab54:   f9400bf3    ldr x19, [sp, #16]
   8ab58:   a8c27bfd    ldp x29, x30, [sp], #32
   8ab5c:   14000b5d    b   8d8d0 <CUSBHIDDevice::StartRequest()>
   8ab60:   d0000141    adrp    x1, b4000 <From+0x140>
   8ab64:   910e8021    add x1, x1, #0x3a0
   8ab68:   91010021    add x1, x1, #0x40
   8ab6c:   97fffe91    bl  8a5b0 <CUSBFunction::ConfigurationError(char const*) const>
   8ab70:   52800000    mov w0, #0x0
   8ab74:   a8c27bfd    ldp x29, x30, [sp], #32
   8ab78:   d65f03c0    ret
   8ab7c:   940052a1    bl  9f600 <CLogger::Get()>
   8ab80:   d0000141    adrp    x1, b4000 <From+0x140>
   8ab84:   910e8021    add x1, x1, #0x3a0
   8ab88:   7942a264    ldrh    w4, [x19, #336]
   8ab8c:   d0000123    adrp    x3, b0000 <_etext+0xf9c>
   8ab90:   91010021    add x1, x1, #0x40
   8ab94:   9131c063    add x3, x3, #0xc70
   8ab98:   52800022    mov w2, #0x1
   8ab9c:   94005481    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8aba0:   f9400bf3    ldr x19, [sp, #16]
   8aba4:   52800000    mov w0, #0x0
   8aba8:   a8c27bfd    ldp x29, x30, [sp], #32
   8abac:   d65f03c0    ret
   8abb0:   94005294    bl  9f600 <CLogger::Get()>
   8abb4:   d0000141    adrp    x1, b4000 <From+0x140>
   8abb8:   910e8021    add x1, x1, #0x3a0
   8abbc:   d0000123    adrp    x3, b0000 <_etext+0xf9c>
   8abc0:   91010021    add x1, x1, #0x40
   8abc4:   91314063    add x3, x3, #0xc50
   8abc8:   52800022    mov w2, #0x1
   8abcc:   94005475    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8abd0:   f9400bf3    ldr x19, [sp, #16]
   8abd4:   52800000    mov w0, #0x0
   8abd8:   a8c27bfd    ldp x29, x30, [sp], #32
   8abdc:   d65f03c0    ret
   8abe0:   94005288    bl  9f600 <CLogger::Get()>
   8abe4:   d0000141    adrp    x1, b4000 <From+0x140>
   8abe8:   910e8021    add x1, x1, #0x3a0
   8abec:   d0000123    adrp    x3, b0000 <_etext+0xf9c>
   8abf0:   91010021    add x1, x1, #0x40
   8abf4:   91324063    add x3, x3, #0xc90
   8abf8:   52800022    mov w2, #0x1
   8abfc:   94005469    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8ac00:   f9400bf3    ldr x19, [sp, #16]
   8ac04:   52800000    mov w0, #0x0
   8ac08:   a8c27bfd    ldp x29, x30, [sp], #32
   8ac0c:   d65f03c0    ret

000000000008ac10 <CUSBGamePadPS3Device::DecodeReport(unsigned char const*)>:
   8ac10:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   8ac14:   910003fd    mov x29, sp
   8ac18:   aa0003e4    mov x4, x0
   8ac1c:   aa0103e5    mov x5, x1
   8ac20:   7942a002    ldrh    w2, [x0, #336]
   8ac24:   7100c45f    cmp w2, #0x31
   8ac28:   540008c0    b.eq    8ad40 <CUSBGamePadPS3Device::DecodeReport(unsigned char const*)+0x130>
   8ac2c:   7100c85f    cmp w2, #0x32
   8ac30:   54000080    b.eq    8ac40 <CUSBGamePadPS3Device::DecodeReport(unsigned char const*)+0x30>
   8ac34:   35000942    cbnz    w2, 8ad5c <CUSBGamePadPS3Device::DecodeReport(unsigned char const*)+0x14c>
   8ac38:   a8c17bfd    ldp x29, x30, [sp], #16
   8ac3c:   140003bd    b   8bb30 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)>
   8ac40:   91000425    add x5, x1, #0x1
   8ac44:   394008a8    ldrb    w8, [x5, #2]
   8ac48:   d0000141    adrp    x1, b4000 <From+0x140>
   8ac4c:   910e8021    add x1, x1, #0x3a0
   8ac50:   91014021    add x1, x1, #0x50
   8ac54:   d2800003    mov x3, #0x0
   8ac58:   39400ca7    ldrb    w7, [x5, #3]
   8ac5c:   910038a6    add x6, x5, #0xe
   8ac60:   394010a0    ldrb    w0, [x5, #4]
   8ac64:   394014a2    ldrb    w2, [x5, #5]
   8ac68:   aa072107    orr x7, x8, x7, lsl #8
   8ac6c:   aa0040e0    orr x0, x7, x0, lsl #16
   8ac70:   aa026002    orr x2, x0, x2, lsl #24
   8ac74:   53104800    ubfx    w0, w0, #16, #3
   8ac78:   53057c47    lsr w7, w2, #5
   8ac7c:   53151c42    ubfiz   w2, w2, #11, #8
   8ac80:   121d1ce7    and w7, w7, #0x7f8
   8ac84:   2a070000    orr w0, w0, w7
   8ac88:   2a020000    orr w0, w0, w2
   8ac8c:   b9012c80    str w0, [x4, #300]
   8ac90:   394018a0    ldrb    w0, [x5, #6]
   8ac94:   b9004c80    str w0, [x4, #76]
   8ac98:   39401ca0    ldrb    w0, [x5, #7]
   8ac9c:   b9005880    str w0, [x4, #88]
   8aca0:   394020a0    ldrb    w0, [x5, #8]
   8aca4:   b9006480    str w0, [x4, #100]
   8aca8:   394024a0    ldrb    w0, [x5, #9]
   8acac:   b9007080    str w0, [x4, #112]
   8acb0:   b8637822    ldr w2, [x1, x3, lsl #2]
   8acb4:   386368c0    ldrb    w0, [x6, x3]
   8acb8:   91000463    add x3, x3, #0x1
   8acbc:   f100307f    cmp x3, #0xc
   8acc0:   8b020442    add x2, x2, x2, lsl #1
   8acc4:   8b020882    add x2, x4, x2, lsl #2
   8acc8:   b9004c40    str w0, [x2, #76]
   8accc:   54ffff21    b.ne    8acb0 <CUSBGamePadPS3Device::DecodeReport(unsigned char const*)+0xa0>
   8acd0:   3940a4a2    ldrb    w2, [x5, #41]
   8acd4:   52803fe1    mov w1, #0x1ff
   8acd8:   3940a8a0    ldrb    w0, [x5, #42]
   8acdc:   aa002040    orr x0, x2, x0, lsl #8
   8ace0:   5ac00400    rev16   w0, w0
   8ace4:   4b202020    sub w0, w1, w0, uxth
   8ace8:   b9013080    str w0, [x4, #304]
   8acec:   3940aca2    ldrb    w2, [x5, #43]
   8acf0:   3940b0a0    ldrb    w0, [x5, #44]
   8acf4:   aa002040    orr x0, x2, x0, lsl #8
   8acf8:   5ac00400    rev16   w0, w0
   8acfc:   4b202020    sub w0, w1, w0, uxth
   8ad00:   b9013480    str w0, [x4, #308]
   8ad04:   3940b4a2    ldrb    w2, [x5, #45]
   8ad08:   3940b8a0    ldrb    w0, [x5, #46]
   8ad0c:   aa002040    orr x0, x2, x0, lsl #8
   8ad10:   5ac00400    rev16   w0, w0
   8ad14:   4b202021    sub w1, w1, w0, uxth
   8ad18:   b9013881    str w1, [x4, #312]
   8ad1c:   3940bca1    ldrb    w1, [x5, #47]
   8ad20:   3940c0a0    ldrb    w0, [x5, #48]
   8ad24:   aa002020    orr x0, x1, x0, lsl #8
   8ad28:   5ac00400    rev16   w0, w0
   8ad2c:   12003c00    and w0, w0, #0xffff
   8ad30:   51001800    sub w0, w0, #0x6
   8ad34:   b9014480    str w0, [x4, #324]
   8ad38:   a8c17bfd    ldp x29, x30, [sp], #16
   8ad3c:   d65f03c0    ret
   8ad40:   b5fff821    cbnz    x1, 8ac44 <CUSBGamePadPS3Device::DecodeReport(unsigned char const*)+0x34>
   8ad44:   d0000121    adrp    x1, b0000 <_etext+0xf9c>
   8ad48:   d0000120    adrp    x0, b0000 <_etext+0xf9c>
   8ad4c:   9130e021    add x1, x1, #0xc38
   8ad50:   9132c000    add x0, x0, #0xcb0
   8ad54:   528012e2    mov w2, #0x97
   8ad58:   9400475a    bl  9cac0 <assertion_failed>
   8ad5c:   d0000121    adrp    x1, b0000 <_etext+0xf9c>
   8ad60:   d0000120    adrp    x0, b0000 <_etext+0xf9c>
   8ad64:   9130e021    add x1, x1, #0xc38
   8ad68:   91106000    add x0, x0, #0x418
   8ad6c:   52801242    mov w2, #0x92
   8ad70:   94004754    bl  9cac0 <assertion_failed>
    ...

000000000008ad80 <CUSBGamePadDevice::SetLEDMode(unsigned int, unsigned char, unsigned char)>:
   8ad80:   52800000    mov w0, #0x0
   8ad84:   d65f03c0    ret
    ...

000000000008ad90 <CUSBGamePadPS3Device::GetProperties()>:
   8ad90:   52800360    mov w0, #0x1b
   8ad94:   d65f03c0    ret
    ...

000000000008ada0 <CUSBGamePadPS4Device::DecodeReport(unsigned char const*)>:
   8ada0:   39400422    ldrb    w2, [x1, #1]
   8ada4:   d0000143    adrp    x3, b4000 <From+0x140>
   8ada8:   91134063    add x3, x3, #0x4d0
   8adac:   b9004c02    str w2, [x0, #76]
   8adb0:   39400822    ldrb    w2, [x1, #2]
   8adb4:   b9005802    str w2, [x0, #88]
   8adb8:   39400c22    ldrb    w2, [x1, #3]
   8adbc:   b9006402    str w2, [x0, #100]
   8adc0:   39401022    ldrb    w2, [x1, #4]
   8adc4:   b9007002    str w2, [x0, #112]
   8adc8:   39402022    ldrb    w2, [x1, #8]
   8adcc:   b9007c02    str w2, [x0, #124]
   8add0:   39402422    ldrb    w2, [x1, #9]
   8add4:   b9008802    str w2, [x0, #136]
   8add8:   39401422    ldrb    w2, [x1, #5]
   8addc:   12000c44    and w4, w2, #0xf
   8ade0:   aa0403e2    mov x2, x4
   8ade4:   b8647864    ldr w4, [x3, x4, lsl #2]
   8ade8:   b9011002    str w2, [x0, #272]
   8adec:   b9012c04    str w4, [x0, #300]
   8adf0:   32190082    orr w2, w4, #0x80
   8adf4:   39401423    ldrb    w3, [x1, #5]
   8adf8:   f279007f    tst x3, #0x80
   8adfc:   1a841042    csel    w2, w2, w4, ne
   8ae00:   b9012c02    str w2, [x0, #300]
   8ae04:   36300063    tbz w3, #6, 8ae10 <CUSBGamePadPS4Device::DecodeReport(unsigned char const*)+0x70>
   8ae08:   32180042    orr w2, w2, #0x100
   8ae0c:   b9012c02    str w2, [x0, #300]
   8ae10:   36280083    tbz w3, #5, 8ae20 <CUSBGamePadPS4Device::DecodeReport(unsigned char const*)+0x80>
   8ae14:   b9412c02    ldr w2, [x0, #300]
   8ae18:   32170042    orr w2, w2, #0x200
   8ae1c:   b9012c02    str w2, [x0, #300]
   8ae20:   36200083    tbz w3, #4, 8ae30 <CUSBGamePadPS4Device::DecodeReport(unsigned char const*)+0x90>
   8ae24:   b9412c02    ldr w2, [x0, #300]
   8ae28:   32160042    orr w2, w2, #0x400
   8ae2c:   b9012c02    str w2, [x0, #300]
   8ae30:   39401822    ldrb    w2, [x1, #6]
   8ae34:   373808a2    tbnz    w2, #7, 8af48 <CUSBGamePadPS4Device::DecodeReport(unsigned char const*)+0x1a8>
   8ae38:   36300082    tbz w2, #6, 8ae48 <CUSBGamePadPS4Device::DecodeReport(unsigned char const*)+0xa8>
   8ae3c:   b9412c03    ldr w3, [x0, #300]
   8ae40:   32140063    orr w3, w3, #0x1000
   8ae44:   b9012c03    str w3, [x0, #300]
   8ae48:   36280082    tbz w2, #5, 8ae58 <CUSBGamePadPS4Device::DecodeReport(unsigned char const*)+0xb8>
   8ae4c:   b9412c03    ldr w3, [x0, #300]
   8ae50:   32120063    orr w3, w3, #0x4000
   8ae54:   b9012c03    str w3, [x0, #300]
   8ae58:   36200082    tbz w2, #4, 8ae68 <CUSBGamePadPS4Device::DecodeReport(unsigned char const*)+0xc8>
   8ae5c:   b9412c03    ldr w3, [x0, #300]
   8ae60:   32150063    orr w3, w3, #0x800
   8ae64:   b9012c03    str w3, [x0, #300]
   8ae68:   36180082    tbz w2, #3, 8ae78 <CUSBGamePadPS4Device::DecodeReport(unsigned char const*)+0xd8>
   8ae6c:   b9412c03    ldr w3, [x0, #300]
   8ae70:   321c0063    orr w3, w3, #0x10
   8ae74:   b9012c03    str w3, [x0, #300]
   8ae78:   36100082    tbz w2, #2, 8ae88 <CUSBGamePadPS4Device::DecodeReport(unsigned char const*)+0xe8>
   8ae7c:   b9412c03    ldr w3, [x0, #300]
   8ae80:   321d0063    orr w3, w3, #0x8
   8ae84:   b9012c03    str w3, [x0, #300]
   8ae88:   36080082    tbz w2, #1, 8ae98 <CUSBGamePadPS4Device::DecodeReport(unsigned char const*)+0xf8>
   8ae8c:   b9412c03    ldr w3, [x0, #300]
   8ae90:   321a0063    orr w3, w3, #0x40
   8ae94:   b9012c03    str w3, [x0, #300]
   8ae98:   36000082    tbz w2, #0, 8aea8 <CUSBGamePadPS4Device::DecodeReport(unsigned char const*)+0x108>
   8ae9c:   b9412c02    ldr w2, [x0, #300]
   8aea0:   321b0042    orr w2, w2, #0x20
   8aea4:   b9012c02    str w2, [x0, #300]
   8aea8:   39401c22    ldrb    w2, [x1, #7]
   8aeac:   36080082    tbz w2, #1, 8aebc <CUSBGamePadPS4Device::DecodeReport(unsigned char const*)+0x11c>
   8aeb0:   b9412c03    ldr w3, [x0, #300]
   8aeb4:   320b0063    orr w3, w3, #0x200000
   8aeb8:   b9012c03    str w3, [x0, #300]
   8aebc:   36000082    tbz w2, #0, 8aecc <CUSBGamePadPS4Device::DecodeReport(unsigned char const*)+0x12c>
   8aec0:   b9412c02    ldr w2, [x0, #300]
   8aec4:   32000042    orr w2, w2, #0x1
   8aec8:   b9012c02    str w2, [x0, #300]
   8aecc:   39404c23    ldrb    w3, [x1, #19]
   8aed0:   39405022    ldrb    w2, [x1, #20]
   8aed4:   aa022062    orr x2, x3, x2, lsl #8
   8aed8:   93403c42    sxth    x2, w2
   8aedc:   b9013002    str w2, [x0, #304]
   8aee0:   39405c23    ldrb    w3, [x1, #23]
   8aee4:   39406022    ldrb    w2, [x1, #24]
   8aee8:   aa022062    orr x2, x3, x2, lsl #8
   8aeec:   93403c42    sxth    x2, w2
   8aef0:   b9013402    str w2, [x0, #308]
   8aef4:   39405423    ldrb    w3, [x1, #21]
   8aef8:   39405822    ldrb    w2, [x1, #22]
   8aefc:   aa022062    orr x2, x3, x2, lsl #8
   8af00:   93403c42    sxth    x2, w2
   8af04:   b9013802    str w2, [x0, #312]
   8af08:   39404423    ldrb    w3, [x1, #17]
   8af0c:   39404822    ldrb    w2, [x1, #18]
   8af10:   aa022062    orr x2, x3, x2, lsl #8
   8af14:   93403c42    sxth    x2, w2
   8af18:   b9013c02    str w2, [x0, #316]
   8af1c:   39403423    ldrb    w3, [x1, #13]
   8af20:   39403822    ldrb    w2, [x1, #14]
   8af24:   aa022062    orr x2, x3, x2, lsl #8
   8af28:   93403c42    sxth    x2, w2
   8af2c:   b9014002    str w2, [x0, #320]
   8af30:   39403c22    ldrb    w2, [x1, #15]
   8af34:   39404021    ldrb    w1, [x1, #16]
   8af38:   aa012041    orr x1, x2, x1, lsl #8
   8af3c:   93403c21    sxth    x1, w1
   8af40:   b9014401    str w1, [x0, #324]
   8af44:   d65f03c0    ret
   8af48:   b9412c03    ldr w3, [x0, #300]
   8af4c:   32130063    orr w3, w3, #0x2000
   8af50:   b9012c03    str w3, [x0, #300]
   8af54:   17ffffb9    b   8ae38 <CUSBGamePadPS4Device::DecodeReport(unsigned char const*)+0x98>
   8af58:   d503201f    nop
   8af5c:   d503201f    nop

000000000008af60 <CUSBGamePadPS4Device::~CUSBGamePadPS4Device()>:
   8af60:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8af64:   910003fd    mov x29, sp
   8af68:   d0000141    adrp    x1, b4000 <From+0x140>
   8af6c:   9110c021    add x1, x1, #0x430
   8af70:   f9000bf3    str x19, [sp, #16]
   8af74:   aa0003f3    mov x19, x0
   8af78:   f940b800    ldr x0, [x0, #368]
   8af7c:   f9000261    str x1, [x19]
   8af80:   b4000080    cbz x0, 8af90 <CUSBGamePadPS4Device::~CUSBGamePadPS4Device()+0x30>
   8af84:   f9400001    ldr x1, [x0]
   8af88:   f9400421    ldr x1, [x1, #8]
   8af8c:   d63f0020    blr x1
   8af90:   f940b660    ldr x0, [x19, #360]
   8af94:   b4000040    cbz x0, 8af9c <CUSBGamePadPS4Device::~CUSBGamePadPS4Device()+0x3c>
   8af98:   94007226    bl  a7830 <operator delete[](void*)>
   8af9c:   aa1303e0    mov x0, x19
   8afa0:   f9400bf3    ldr x19, [sp, #16]
   8afa4:   a8c27bfd    ldp x29, x30, [sp], #32
   8afa8:   14003bbe    b   99ea0 <CUSBGamePadDevice::~CUSBGamePadDevice()>
   8afac:   d503201f    nop

000000000008afb0 <CUSBGamePadPS4Device::~CUSBGamePadPS4Device()>:
   8afb0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8afb4:   910003fd    mov x29, sp
   8afb8:   d0000141    adrp    x1, b4000 <From+0x140>
   8afbc:   9110c021    add x1, x1, #0x430
   8afc0:   f9000bf3    str x19, [sp, #16]
   8afc4:   aa0003f3    mov x19, x0
   8afc8:   f940b800    ldr x0, [x0, #368]
   8afcc:   f9000261    str x1, [x19]
   8afd0:   b4000080    cbz x0, 8afe0 <CUSBGamePadPS4Device::~CUSBGamePadPS4Device()+0x30>
   8afd4:   f9400001    ldr x1, [x0]
   8afd8:   f9400421    ldr x1, [x1, #8]
   8afdc:   d63f0020    blr x1
   8afe0:   f940b660    ldr x0, [x19, #360]
   8afe4:   b4000040    cbz x0, 8afec <CUSBGamePadPS4Device::~CUSBGamePadPS4Device()+0x3c>
   8afe8:   94007212    bl  a7830 <operator delete[](void*)>
   8afec:   aa1303e0    mov x0, x19
   8aff0:   94003bac    bl  99ea0 <CUSBGamePadDevice::~CUSBGamePadDevice()>
   8aff4:   aa1303e0    mov x0, x19
   8aff8:   f9400bf3    ldr x19, [sp, #16]
   8affc:   d2803001    mov x1, #0x180
   8b000:   a8c27bfd    ldp x29, x30, [sp], #32
   8b004:   14007217    b   a7860 <operator delete(void*, unsigned long)>
   8b008:   d503201f    nop
   8b00c:   d503201f    nop

000000000008b010 <CUSBGamePadPS4Device::SetLEDMode(unsigned int, unsigned char, unsigned char)>:
   8b010:   53107c24    lsr w4, w1, #16
   8b014:   52800005    mov w5, #0x0
   8b018:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8b01c:   33001c85    bfxil   w5, w4, #0, #8
   8b020:   53087c27    lsr w7, w1, #8
   8b024:   910003fd    mov x29, sp
   8b028:   33181ce5    bfi w5, w7, #8, #8
   8b02c:   f940b406    ldr x6, [x0, #360]
   8b030:   f9000bf3    str x19, [sp, #16]
   8b034:   33101c25    bfi w5, w1, #16, #8
   8b038:   39456407    ldrb    w7, [x0, #345]
   8b03c:   39058003    strb    w3, [x0, #352]
   8b040:   52800003    mov w3, #0x0
   8b044:   33081c45    bfi w5, w2, #24, #8
   8b048:   52800402    mov w2, #0x20
   8b04c:   b9015c05    str w5, [x0, #348]
   8b050:   39000cc7    strb    w7, [x6, #3]
   8b054:   f940b401    ldr x1, [x0, #360]
   8b058:   39456c05    ldrb    w5, [x0, #347]
   8b05c:   39001025    strb    w5, [x1, #4]
   8b060:   f940b401    ldr x1, [x0, #360]
   8b064:   39456805    ldrb    w5, [x0, #346]
   8b068:   39001425    strb    w5, [x1, #5]
   8b06c:   f940b401    ldr x1, [x0, #360]
   8b070:   39457005    ldrb    w5, [x0, #348]
   8b074:   39001825    strb    w5, [x1, #6]
   8b078:   f940b401    ldr x1, [x0, #360]
   8b07c:   39457405    ldrb    w5, [x0, #349]
   8b080:   39001c25    strb    w5, [x1, #7]
   8b084:   f940b401    ldr x1, [x0, #360]
   8b088:   39457805    ldrb    w5, [x0, #350]
   8b08c:   39002025    strb    w5, [x1, #8]
   8b090:   f940b401    ldr x1, [x0, #360]
   8b094:   39457c05    ldrb    w5, [x0, #351]
   8b098:   39002425    strb    w5, [x1, #9]
   8b09c:   f940b401    ldr x1, [x0, #360]
   8b0a0:   39458005    ldrb    w5, [x0, #352]
   8b0a4:   39002825    strb    w5, [x1, #10]
   8b0a8:   f940b401    ldr x1, [x0, #360]
   8b0ac:   94000979    bl  8d690 <CUSBHIDDevice::SendToEndpointOut(void const*, unsigned int, unsigned int)>
   8b0b0:   2a0003f3    mov w19, w0
   8b0b4:   360000b3    tbz w19, #0, 8b0c8 <CUSBGamePadPS4Device::SetLEDMode(unsigned int, unsigned char, unsigned char)+0xb8>
   8b0b8:   2a1303e0    mov w0, w19
   8b0bc:   f9400bf3    ldr x19, [sp, #16]
   8b0c0:   a8c27bfd    ldp x29, x30, [sp], #32
   8b0c4:   d65f03c0    ret
   8b0c8:   9400514e    bl  9f600 <CLogger::Get()>
   8b0cc:   b0000141    adrp    x1, b4000 <From+0x140>
   8b0d0:   91134021    add x1, x1, #0x4d0
   8b0d4:   b0000123    adrp    x3, b0000 <_etext+0xf9c>
   8b0d8:   9100a021    add x1, x1, #0x28
   8b0dc:   91330063    add x3, x3, #0xcc0
   8b0e0:   52800022    mov w2, #0x1
   8b0e4:   9400532f    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8b0e8:   2a1303e0    mov w0, w19
   8b0ec:   f9400bf3    ldr x19, [sp, #16]
   8b0f0:   a8c27bfd    ldp x29, x30, [sp], #32
   8b0f4:   d65f03c0    ret
   8b0f8:   d503201f    nop
   8b0fc:   d503201f    nop

000000000008b100 <CUSBGamePadPS4Device::SetRumbleMode(TGamePadRumbleMode)>:
   8b100:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8b104:   910003fd    mov x29, sp
   8b108:   7100043f    cmp w1, #0x1
   8b10c:   f9000bf3    str x19, [sp, #16]
   8b110:   54000780    b.eq    8b200 <CUSBGamePadPS4Device::SetRumbleMode(TGamePadRumbleMode)+0x100>
   8b114:   7100083f    cmp w1, #0x2
   8b118:   540006c0    b.eq    8b1f0 <CUSBGamePadPS4Device::SetRumbleMode(TGamePadRumbleMode)+0xf0>
   8b11c:   340000c1    cbz w1, 8b134 <CUSBGamePadPS4Device::SetRumbleMode(TGamePadRumbleMode)+0x34>
   8b120:   52800033    mov w19, #0x1
   8b124:   2a1303e0    mov w0, w19
   8b128:   f9400bf3    ldr x19, [sp, #16]
   8b12c:   a8c27bfd    ldp x29, x30, [sp], #32
   8b130:   d65f03c0    ret
   8b134:   52800005    mov w5, #0x0
   8b138:   52800006    mov w6, #0x0
   8b13c:   52801e01    mov w1, #0xf0
   8b140:   f940b404    ldr x4, [x0, #360]
   8b144:   52800003    mov w3, #0x0
   8b148:   52800402    mov w2, #0x20
   8b14c:   39056401    strb    w1, [x0, #345]
   8b150:   39056806    strb    w6, [x0, #346]
   8b154:   39056c05    strb    w5, [x0, #347]
   8b158:   39000c81    strb    w1, [x4, #3]
   8b15c:   f940b401    ldr x1, [x0, #360]
   8b160:   39456c04    ldrb    w4, [x0, #347]
   8b164:   39001024    strb    w4, [x1, #4]
   8b168:   f940b401    ldr x1, [x0, #360]
   8b16c:   39456804    ldrb    w4, [x0, #346]
   8b170:   39001424    strb    w4, [x1, #5]
   8b174:   f940b401    ldr x1, [x0, #360]
   8b178:   39457004    ldrb    w4, [x0, #348]
   8b17c:   39001824    strb    w4, [x1, #6]
   8b180:   f940b401    ldr x1, [x0, #360]
   8b184:   39457404    ldrb    w4, [x0, #349]
   8b188:   39001c24    strb    w4, [x1, #7]
   8b18c:   f940b401    ldr x1, [x0, #360]
   8b190:   39457804    ldrb    w4, [x0, #350]
   8b194:   39002024    strb    w4, [x1, #8]
   8b198:   f940b401    ldr x1, [x0, #360]
   8b19c:   39457c04    ldrb    w4, [x0, #351]
   8b1a0:   39002424    strb    w4, [x1, #9]
   8b1a4:   f940b401    ldr x1, [x0, #360]
   8b1a8:   39458004    ldrb    w4, [x0, #352]
   8b1ac:   39002824    strb    w4, [x1, #10]
   8b1b0:   f940b401    ldr x1, [x0, #360]
   8b1b4:   94000937    bl  8d690 <CUSBHIDDevice::SendToEndpointOut(void const*, unsigned int, unsigned int)>
   8b1b8:   12001c13    and w19, w0, #0xff
   8b1bc:   3707fb20    tbnz    w0, #0, 8b120 <CUSBGamePadPS4Device::SetRumbleMode(TGamePadRumbleMode)+0x20>
   8b1c0:   94005110    bl  9f600 <CLogger::Get()>
   8b1c4:   b0000141    adrp    x1, b4000 <From+0x140>
   8b1c8:   91134021    add x1, x1, #0x4d0
   8b1cc:   b0000123    adrp    x3, b0000 <_etext+0xf9c>
   8b1d0:   9100a021    add x1, x1, #0x28
   8b1d4:   91330063    add x3, x3, #0xcc0
   8b1d8:   52800022    mov w2, #0x1
   8b1dc:   940052f1    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8b1e0:   2a1303e0    mov w0, w19
   8b1e4:   f9400bf3    ldr x19, [sp, #16]
   8b1e8:   a8c27bfd    ldp x29, x30, [sp], #32
   8b1ec:   d65f03c0    ret
   8b1f0:   52800005    mov w5, #0x0
   8b1f4:   52801fe6    mov w6, #0xff
   8b1f8:   52801e61    mov w1, #0xf3
   8b1fc:   17ffffd1    b   8b140 <CUSBGamePadPS4Device::SetRumbleMode(TGamePadRumbleMode)+0x40>
   8b200:   52801fe5    mov w5, #0xff
   8b204:   52800006    mov w6, #0x0
   8b208:   52801e61    mov w1, #0xf3
   8b20c:   17ffffcd    b   8b140 <CUSBGamePadPS4Device::SetRumbleMode(TGamePadRumbleMode)+0x40>

000000000008b210 <CUSBGamePadPS4Device::SetLEDMode(TGamePadLEDMode)>:
   8b210:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8b214:   910003fd    mov x29, sp
   8b218:   7100103f    cmp w1, #0x4
   8b21c:   f9000bf3    str x19, [sp, #16]
   8b220:   54000b20    b.eq    8b384 <CUSBGamePadPS4Device::SetLEDMode(TGamePadLEDMode)+0x174>
   8b224:   54000688    b.hi    8b2f4 <CUSBGamePadPS4Device::SetLEDMode(TGamePadLEDMode)+0xe4>
   8b228:   7100083f    cmp w1, #0x2
   8b22c:   54000d00    b.eq    8b3cc <CUSBGamePadPS4Device::SetLEDMode(TGamePadLEDMode)+0x1bc>
   8b230:   71000c3f    cmp w1, #0x3
   8b234:   54000840    b.eq    8b33c <CUSBGamePadPS4Device::SetLEDMode(TGamePadLEDMode)+0x12c>
   8b238:   7100043f    cmp w1, #0x1
   8b23c:   54000b01    b.ne    8b39c <CUSBGamePadPS4Device::SetLEDMode(TGamePadLEDMode)+0x18c>
   8b240:   52801fe5    mov w5, #0xff
   8b244:   52800001    mov w1, #0x0
   8b248:   2a0503e7    mov w7, w5
   8b24c:   52800004    mov w4, #0x0
   8b250:   52800fe8    mov w8, #0x7f
   8b254:   d503201f    nop
   8b258:   f940b406    ldr x6, [x0, #360]
   8b25c:   52800003    mov w3, #0x0
   8b260:   52800402    mov w2, #0x20
   8b264:   39057001    strb    w1, [x0, #348]
   8b268:   39456401    ldrb    w1, [x0, #345]
   8b26c:   39057404    strb    w4, [x0, #349]
   8b270:   39057805    strb    w5, [x0, #350]
   8b274:   39057c08    strb    w8, [x0, #351]
   8b278:   39058007    strb    w7, [x0, #352]
   8b27c:   39000cc1    strb    w1, [x6, #3]
   8b280:   f940b401    ldr x1, [x0, #360]
   8b284:   39456c04    ldrb    w4, [x0, #347]
   8b288:   39001024    strb    w4, [x1, #4]
   8b28c:   f940b401    ldr x1, [x0, #360]
   8b290:   39456804    ldrb    w4, [x0, #346]
   8b294:   39001424    strb    w4, [x1, #5]
   8b298:   f940b401    ldr x1, [x0, #360]
   8b29c:   39457004    ldrb    w4, [x0, #348]
   8b2a0:   39001824    strb    w4, [x1, #6]
   8b2a4:   f940b401    ldr x1, [x0, #360]
   8b2a8:   39457404    ldrb    w4, [x0, #349]
   8b2ac:   39001c24    strb    w4, [x1, #7]
   8b2b0:   f940b401    ldr x1, [x0, #360]
   8b2b4:   39457804    ldrb    w4, [x0, #350]
   8b2b8:   39002024    strb    w4, [x1, #8]
   8b2bc:   f940b401    ldr x1, [x0, #360]
   8b2c0:   39457c04    ldrb    w4, [x0, #351]
   8b2c4:   39002424    strb    w4, [x1, #9]
   8b2c8:   f940b401    ldr x1, [x0, #360]
   8b2cc:   39458004    ldrb    w4, [x0, #352]
   8b2d0:   39002824    strb    w4, [x1, #10]
   8b2d4:   f940b401    ldr x1, [x0, #360]
   8b2d8:   940008ee    bl  8d690 <CUSBHIDDevice::SendToEndpointOut(void const*, unsigned int, unsigned int)>
   8b2dc:   2a0003f3    mov w19, w0
   8b2e0:   360003b3    tbz w19, #0, 8b354 <CUSBGamePadPS4Device::SetLEDMode(TGamePadLEDMode)+0x144>
   8b2e4:   2a1303e0    mov w0, w19
   8b2e8:   f9400bf3    ldr x19, [sp, #16]
   8b2ec:   a8c27bfd    ldp x29, x30, [sp], #32
   8b2f0:   d65f03c0    ret
   8b2f4:   7100183f    cmp w1, #0x6
   8b2f8:   540005e0    b.eq    8b3b4 <CUSBGamePadPS4Device::SetLEDMode(TGamePadLEDMode)+0x1a4>
   8b2fc:   71001c3f    cmp w1, #0x7
   8b300:   54000120    b.eq    8b324 <CUSBGamePadPS4Device::SetLEDMode(TGamePadLEDMode)+0x114>
   8b304:   7100143f    cmp w1, #0x5
   8b308:   540004a1    b.ne    8b39c <CUSBGamePadPS4Device::SetLEDMode(TGamePadLEDMode)+0x18c>
   8b30c:   52801fe4    mov w4, #0xff
   8b310:   52800001    mov w1, #0x0
   8b314:   2a0403e5    mov w5, w4
   8b318:   2a0403e7    mov w7, w4
   8b31c:   52800fe8    mov w8, #0x7f
   8b320:   17ffffce    b   8b258 <CUSBGamePadPS4Device::SetLEDMode(TGamePadLEDMode)+0x48>
   8b324:   52801fe1    mov w1, #0xff
   8b328:   52800fe8    mov w8, #0x7f
   8b32c:   2a0103e4    mov w4, w1
   8b330:   2a0103e5    mov w5, w1
   8b334:   2a0103e7    mov w7, w1
   8b338:   17ffffc8    b   8b258 <CUSBGamePadPS4Device::SetLEDMode(TGamePadLEDMode)+0x48>
   8b33c:   52801fe1    mov w1, #0xff
   8b340:   52800004    mov w4, #0x0
   8b344:   2a0103e5    mov w5, w1
   8b348:   2a0103e7    mov w7, w1
   8b34c:   52800fe8    mov w8, #0x7f
   8b350:   17ffffc2    b   8b258 <CUSBGamePadPS4Device::SetLEDMode(TGamePadLEDMode)+0x48>
   8b354:   940050ab    bl  9f600 <CLogger::Get()>
   8b358:   b0000141    adrp    x1, b4000 <From+0x140>
   8b35c:   91134021    add x1, x1, #0x4d0
   8b360:   b0000123    adrp    x3, b0000 <_etext+0xf9c>
   8b364:   9100a021    add x1, x1, #0x28
   8b368:   91330063    add x3, x3, #0xcc0
   8b36c:   52800022    mov w2, #0x1
   8b370:   9400528c    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8b374:   2a1303e0    mov w0, w19
   8b378:   f9400bf3    ldr x19, [sp, #16]
   8b37c:   a8c27bfd    ldp x29, x30, [sp], #32
   8b380:   d65f03c0    ret
   8b384:   52801fe4    mov w4, #0xff
   8b388:   52800001    mov w1, #0x0
   8b38c:   2a0403e7    mov w7, w4
   8b390:   52800005    mov w5, #0x0
   8b394:   52800fe8    mov w8, #0x7f
   8b398:   17ffffb0    b   8b258 <CUSBGamePadPS4Device::SetLEDMode(TGamePadLEDMode)+0x48>
   8b39c:   52800001    mov w1, #0x0
   8b3a0:   52800004    mov w4, #0x0
   8b3a4:   52800005    mov w5, #0x0
   8b3a8:   52800008    mov w8, #0x0
   8b3ac:   52800007    mov w7, #0x0
   8b3b0:   17ffffaa    b   8b258 <CUSBGamePadPS4Device::SetLEDMode(TGamePadLEDMode)+0x48>
   8b3b4:   52801fe1    mov w1, #0xff
   8b3b8:   52800005    mov w5, #0x0
   8b3bc:   2a0103e4    mov w4, w1
   8b3c0:   2a0103e7    mov w7, w1
   8b3c4:   52800fe8    mov w8, #0x7f
   8b3c8:   17ffffa4    b   8b258 <CUSBGamePadPS4Device::SetLEDMode(TGamePadLEDMode)+0x48>
   8b3cc:   52801fe1    mov w1, #0xff
   8b3d0:   52800004    mov w4, #0x0
   8b3d4:   2a0103e7    mov w7, w1
   8b3d8:   52800005    mov w5, #0x0
   8b3dc:   52800fe8    mov w8, #0x7f
   8b3e0:   17ffff9e    b   8b258 <CUSBGamePadPS4Device::SetLEDMode(TGamePadLEDMode)+0x48>
   8b3e4:   d503201f    nop
   8b3e8:   d503201f    nop
   8b3ec:   d503201f    nop

000000000008b3f0 <CUSBGamePadPS4Device::CUSBGamePadPS4Device(CUSBFunction*)>:
   8b3f0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8b3f4:   910003fd    mov x29, sp
   8b3f8:   f9000bf3    str x19, [sp, #16]
   8b3fc:   aa0003f3    mov x19, x0
   8b400:   94003a94    bl  99e50 <CUSBGamePadDevice::CUSBGamePadDevice(CUSBFunction*)>
   8b404:   b0000144    adrp    x4, b4000 <From+0x140>
   8b408:   9110c084    add x4, x4, #0x430
   8b40c:   aa1303e0    mov x0, x19
   8b410:   52800003    mov w3, #0x0
   8b414:   52800002    mov w2, #0x0
   8b418:   52800061    mov w1, #0x3
   8b41c:   f9000264    str x4, [x19]
   8b420:   97fffc78    bl  8a600 <CUSBFunction::SelectInterfaceByClass(unsigned char, unsigned char, unsigned char)>
   8b424:   39056260    strb    w0, [x19, #344]
   8b428:   a916fe7f    stp xzr, xzr, [x19, #360]
   8b42c:   7902f27f    strh    wzr, [x19, #376]
   8b430:   f9400bf3    ldr x19, [sp, #16]
   8b434:   a8c27bfd    ldp x29, x30, [sp], #32
   8b438:   d65f03c0    ret
   8b43c:   d503201f    nop

000000000008b440 <CUSBGamePadPS4Device::HandleTouchpad(unsigned char const*)>:
   8b440:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   8b444:   910003fd    mov x29, sp
   8b448:   a90153f3    stp x19, x20, [sp, #16]
   8b44c:   aa0003f3    mov x19, x0
   8b450:   a9025bf5    stp x21, x22, [sp, #32]
   8b454:   aa0103f5    mov x21, x1
   8b458:   39401c20    ldrb    w0, [x1, #7]
   8b45c:   3945e264    ldrb    w4, [x19, #376]
   8b460:   37080980    tbnz    w0, #1, 8b590 <CUSBGamePadPS4Device::HandleTouchpad(unsigned char const*)+0x150>
   8b464:   370009c4    tbnz    w4, #0, 8b59c <CUSBGamePadPS4Device::HandleTouchpad(unsigned char const*)+0x15c>
   8b468:   394086b6    ldrb    w22, [x21, #33]
   8b46c:   39408ea0    ldrb    w0, [x21, #35]
   8b470:   510006c1    sub w1, w22, #0x1
   8b474:   71000c3f    cmp w1, #0x3
   8b478:   1a9f36d6    csinc   w22, w22, wzr, cc
   8b47c:   37380a20    tbnz    w0, #7, 8b5c0 <CUSBGamePadPS4Device::HandleTouchpad(unsigned char const*)+0x180>
   8b480:   52800014    mov w20, #0x0
   8b484:   d2800002    mov x2, #0x0
   8b488:   8b020c42    add x2, x2, x2, lsl #3
   8b48c:   3945e665    ldrb    w5, [x19, #377]
   8b490:   8b0202a2    add x2, x21, x2
   8b494:   39409441    ldrb    w1, [x2, #37]
   8b498:   39409443    ldrb    w3, [x2, #37]
   8b49c:   39409840    ldrb    w0, [x2, #38]
   8b4a0:   d3441c21    ubfx    x1, x1, #4, #4
   8b4a4:   39409046    ldrb    w6, [x2, #36]
   8b4a8:   d3780c62    ubfiz   x2, x3, #8, #4
   8b4ac:   2a001020    orr w0, w1, w0, lsl #4
   8b4b0:   2a060042    orr w2, w2, w6
   8b4b4:   36000505    tbz w5, #0, 8b554 <CUSBGamePadPS4Device::HandleTouchpad(unsigned char const*)+0x114>
   8b4b8:   7942fa61    ldrh    w1, [x19, #380]
   8b4bc:   52800fe6    mov w6, #0x7f
   8b4c0:   12800fc5    mov w5, #0xffffff81
   8b4c4:   7902fa60    strh    w0, [x19, #380]
   8b4c8:   7942f667    ldrh    w7, [x19, #378]
   8b4cc:   7902f662    strh    w2, [x19, #378]
   8b4d0:   4b010003    sub w3, w0, w1
   8b4d4:   6b06007f    cmp w3, w6
   8b4d8:   1a86d063    csel    w3, w3, w6, le
   8b4dc:   6b05007f    cmp w3, w5
   8b4e0:   1a85a063    csel    w3, w3, w5, ge
   8b4e4:   7100009f    cmp w4, #0x0
   8b4e8:   7a470040    ccmp    w2, w7, #0x0, eq
   8b4ec:   54000721    b.ne    8b5d0 <CUSBGamePadPS4Device::HandleTouchpad(unsigned char const*)+0x190>
   8b4f0:   6b01001f    cmp w0, w1
   8b4f4:   52800002    mov w2, #0x0
   8b4f8:   540000c0    b.eq    8b510 <CUSBGamePadPS4Device::HandleTouchpad(unsigned char const*)+0xd0>
   8b4fc:   f940ba60    ldr x0, [x19, #368]
   8b500:   b40003c0    cbz x0, 8b578 <CUSBGamePadPS4Device::HandleTouchpad(unsigned char const*)+0x138>
   8b504:   3945e261    ldrb    w1, [x19, #376]
   8b508:   52800004    mov w4, #0x0
   8b50c:   94004119    bl  9b970 <CMouseDevice::ReportHandler(unsigned int, int, int, int)>
   8b510:   11000694    add w20, w20, #0x1
   8b514:   6b1402df    cmp w22, w20
   8b518:   54000160    b.eq    8b544 <CUSBGamePadPS4Device::HandleTouchpad(unsigned char const*)+0x104>
   8b51c:   2a1403e2    mov w2, w20
   8b520:   8b344c40    add x0, x2, w20, uxtw #3
   8b524:   8b0002a0    add x0, x21, x0
   8b528:   39408c00    ldrb    w0, [x0, #35]
   8b52c:   d3471c04    ubfx    x4, x0, #7, #1
   8b530:   363ffac0    tbz w0, #7, 8b488 <CUSBGamePadPS4Device::HandleTouchpad(unsigned char const*)+0x48>
   8b534:   11000694    add w20, w20, #0x1
   8b538:   3905e67f    strb    wzr, [x19, #377]
   8b53c:   6b1402df    cmp w22, w20
   8b540:   54fffee1    b.ne    8b51c <CUSBGamePadPS4Device::HandleTouchpad(unsigned char const*)+0xdc>
   8b544:   a94153f3    ldp x19, x20, [sp, #16]
   8b548:   a9425bf5    ldp x21, x22, [sp, #32]
   8b54c:   a8c37bfd    ldp x29, x30, [sp], #48
   8b550:   d65f03c0    ret
   8b554:   52800021    mov w1, #0x1
   8b558:   7902f662    strh    w2, [x19, #378]
   8b55c:   7902fa60    strh    w0, [x19, #380]
   8b560:   3905e661    strb    w1, [x19, #377]
   8b564:   3607fd64    tbz w4, #0, 8b510 <CUSBGamePadPS4Device::HandleTouchpad(unsigned char const*)+0xd0>
   8b568:   f940ba60    ldr x0, [x19, #368]
   8b56c:   52800003    mov w3, #0x0
   8b570:   52800002    mov w2, #0x0
   8b574:   b5fffc80    cbnz    x0, 8b504 <CUSBGamePadPS4Device::HandleTouchpad(unsigned char const*)+0xc4>
   8b578:   b0000121    adrp    x1, b0000 <_etext+0xf9c>
   8b57c:   b0000120    adrp    x0, b0000 <_etext+0xf9c>
   8b580:   91338021    add x1, x1, #0xce0
   8b584:   9133e000    add x0, x0, #0xcf8
   8b588:   52802b42    mov w2, #0x15a
   8b58c:   9400454d    bl  9cac0 <assertion_failed>
   8b590:   12000081    and w1, w4, #0x1
   8b594:   52800004    mov w4, #0x0
   8b598:   35fff681    cbnz    w1, 8b468 <CUSBGamePadPS4Device::HandleTouchpad(unsigned char const*)+0x28>
   8b59c:   d3410400    ubfx    x0, x0, #1, #1
   8b5a0:   52800024    mov w4, #0x1
   8b5a4:   3905e260    strb    w0, [x19, #376]
   8b5a8:   394086b6    ldrb    w22, [x21, #33]
   8b5ac:   39408ea0    ldrb    w0, [x21, #35]
   8b5b0:   510006c1    sub w1, w22, #0x1
   8b5b4:   71000c3f    cmp w1, #0x3
   8b5b8:   1a9f36d6    csinc   w22, w22, wzr, cc
   8b5bc:   363ff620    tbz w0, #7, 8b480 <CUSBGamePadPS4Device::HandleTouchpad(unsigned char const*)+0x40>
   8b5c0:   3905e67f    strb    wzr, [x19, #377]
   8b5c4:   52800014    mov w20, #0x0
   8b5c8:   3707fd04    tbnz    w4, #0, 8b568 <CUSBGamePadPS4Device::HandleTouchpad(unsigned char const*)+0x128>
   8b5cc:   17ffffd1    b   8b510 <CUSBGamePadPS4Device::HandleTouchpad(unsigned char const*)+0xd0>
   8b5d0:   4b070042    sub w2, w2, w7
   8b5d4:   6b06005f    cmp w2, w6
   8b5d8:   1a86d042    csel    w2, w2, w6, le
   8b5dc:   6b05005f    cmp w2, w5
   8b5e0:   1a85a042    csel    w2, w2, w5, ge
   8b5e4:   17ffffc6    b   8b4fc <CUSBGamePadPS4Device::HandleTouchpad(unsigned char const*)+0xbc>
   8b5e8:   d503201f    nop
   8b5ec:   d503201f    nop

000000000008b5f0 <CUSBGamePadPS4Device::ReportHandler(unsigned char const*, unsigned int)>:
   8b5f0:   7101005f    cmp w2, #0x40
   8b5f4:   fa400824    ccmp    x1, #0x0, #0x4, eq
   8b5f8:   54000041    b.ne    8b600 <CUSBGamePadPS4Device::ReportHandler(unsigned char const*, unsigned int)+0x10>
   8b5fc:   d65f03c0    ret
   8b600:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8b604:   910003fd    mov x29, sp
   8b608:   f9400002    ldr x2, [x0]
   8b60c:   a90153f3    stp x19, x20, [sp, #16]
   8b610:   aa0003f3    mov x19, x0
   8b614:   aa0103f4    mov x20, x1
   8b618:   f9404c42    ldr x2, [x2, #152]
   8b61c:   d63f0040    blr x2
   8b620:   f940a662    ldr x2, [x19, #328]
   8b624:   b40000a2    cbz x2, 8b638 <CUSBGamePadPS4Device::ReportHandler(unsigned char const*, unsigned int)+0x48>
   8b628:   b9415660    ldr w0, [x19, #340]
   8b62c:   91012261    add x1, x19, #0x48
   8b630:   51000400    sub w0, w0, #0x1
   8b634:   d63f0040    blr x2
   8b638:   f940ba60    ldr x0, [x19, #368]
   8b63c:   b40000c0    cbz x0, 8b654 <CUSBGamePadPS4Device::ReportHandler(unsigned char const*, unsigned int)+0x64>
   8b640:   aa1403e1    mov x1, x20
   8b644:   aa1303e0    mov x0, x19
   8b648:   a94153f3    ldp x19, x20, [sp, #16]
   8b64c:   a8c27bfd    ldp x29, x30, [sp], #32
   8b650:   17ffff7c    b   8b440 <CUSBGamePadPS4Device::HandleTouchpad(unsigned char const*)>
   8b654:   a94153f3    ldp x19, x20, [sp, #16]
   8b658:   a8c27bfd    ldp x29, x30, [sp], #32
   8b65c:   d65f03c0    ret

000000000008b660 <CUSBGamePadPS4Device::SendLedRumbleCommand()>:
   8b660:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8b664:   910003fd    mov x29, sp
   8b668:   52800003    mov w3, #0x0
   8b66c:   52800402    mov w2, #0x20
   8b670:   f940b404    ldr x4, [x0, #360]
   8b674:   f9000bf3    str x19, [sp, #16]
   8b678:   39456405    ldrb    w5, [x0, #345]
   8b67c:   39000c85    strb    w5, [x4, #3]
   8b680:   f940b404    ldr x4, [x0, #360]
   8b684:   39456c05    ldrb    w5, [x0, #347]
   8b688:   39001085    strb    w5, [x4, #4]
   8b68c:   f940b404    ldr x4, [x0, #360]
   8b690:   39456805    ldrb    w5, [x0, #346]
   8b694:   39001485    strb    w5, [x4, #5]
   8b698:   f940b404    ldr x4, [x0, #360]
   8b69c:   39457005    ldrb    w5, [x0, #348]
   8b6a0:   39001885    strb    w5, [x4, #6]
   8b6a4:   f940b404    ldr x4, [x0, #360]
   8b6a8:   39457405    ldrb    w5, [x0, #349]
   8b6ac:   39001c85    strb    w5, [x4, #7]
   8b6b0:   f940b404    ldr x4, [x0, #360]
   8b6b4:   39457805    ldrb    w5, [x0, #350]
   8b6b8:   39002085    strb    w5, [x4, #8]
   8b6bc:   f940b404    ldr x4, [x0, #360]
   8b6c0:   39457c05    ldrb    w5, [x0, #351]
   8b6c4:   39002485    strb    w5, [x4, #9]
   8b6c8:   f940b404    ldr x4, [x0, #360]
   8b6cc:   39458005    ldrb    w5, [x0, #352]
   8b6d0:   39002885    strb    w5, [x4, #10]
   8b6d4:   f940b401    ldr x1, [x0, #360]
   8b6d8:   940007ee    bl  8d690 <CUSBHIDDevice::SendToEndpointOut(void const*, unsigned int, unsigned int)>
   8b6dc:   2a0003f3    mov w19, w0
   8b6e0:   360000b3    tbz w19, #0, 8b6f4 <CUSBGamePadPS4Device::SendLedRumbleCommand()+0x94>
   8b6e4:   2a1303e0    mov w0, w19
   8b6e8:   f9400bf3    ldr x19, [sp, #16]
   8b6ec:   a8c27bfd    ldp x29, x30, [sp], #32
   8b6f0:   d65f03c0    ret
   8b6f4:   94004fc3    bl  9f600 <CLogger::Get()>
   8b6f8:   b0000141    adrp    x1, b4000 <From+0x140>
   8b6fc:   91134021    add x1, x1, #0x4d0
   8b700:   b0000123    adrp    x3, b0000 <_etext+0xf9c>
   8b704:   9100a021    add x1, x1, #0x28
   8b708:   91330063    add x3, x3, #0xcc0
   8b70c:   52800022    mov w2, #0x1
   8b710:   940051a4    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8b714:   2a1303e0    mov w0, w19
   8b718:   f9400bf3    ldr x19, [sp, #16]
   8b71c:   a8c27bfd    ldp x29, x30, [sp], #32
   8b720:   d65f03c0    ret
   8b724:   d503201f    nop
   8b728:   d503201f    nop
   8b72c:   d503201f    nop

000000000008b730 <CUSBGamePadPS4Device::DisableTouchpad()>:
   8b730:   f0000160    adrp    x0, ba000 <font_data+0x1080>
   8b734:   3915801f    strb    wzr, [x0, #1376]
   8b738:   d65f03c0    ret
   8b73c:   d503201f    nop

000000000008b740 <CUSBGamePadPS4Device::Configure()>:
   8b740:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8b744:   910003fd    mov x29, sp
   8b748:   39456001    ldrb    w1, [x0, #344]
   8b74c:   36000721    tbz w1, #0, 8b830 <CUSBGamePadPS4Device::Configure()+0xf0>
   8b750:   52800801    mov w1, #0x40
   8b754:   a90153f3    stp x19, x20, [sp, #16]
   8b758:   aa0003f3    mov x19, x0
   8b75c:   7902a001    strh    w1, [x0, #336]
   8b760:   94003954    bl  99cb0 <CUSBGamePadDevice::Configure()>
   8b764:   36000840    tbz w0, #0, 8b86c <CUSBGamePadPS4Device::Configure()+0x12c>
   8b768:   f0000160    adrp    x0, ba000 <font_data+0x1080>
   8b76c:   39558000    ldrb    w0, [x0, #1376]
   8b770:   370006e0    tbnz    w0, #0, 8b84c <CUSBGamePadPS4Device::Configure()+0x10c>
   8b774:   528002c3    mov w3, #0x16
   8b778:   52800025    mov w5, #0x1
   8b77c:   528000c4    mov w4, #0x6
   8b780:   91014261    add x1, x19, #0x50
   8b784:   91026262    add x2, x19, #0x98
   8b788:   52801fe0    mov w0, #0xff
   8b78c:   b9010e65    str w5, [x19, #268]
   8b790:   b9004a64    str w4, [x19, #72]
   8b794:   b9012a63    str w3, [x19, #296]
   8b798:   2900003f    stp wzr, w0, [x1]
   8b79c:   91003021    add x1, x1, #0xc
   8b7a0:   eb02003f    cmp x1, x2
   8b7a4:   54ffffa1    b.ne    8b798 <CUSBGamePadPS4Device::Configure()+0x58>
   8b7a8:   d2800400    mov x0, #0x20
   8b7ac:   9400700d    bl  a77e0 <operator new[](unsigned long)>
   8b7b0:   d2800402    mov x2, #0x20
   8b7b4:   52800001    mov w1, #0x0
   8b7b8:   f900b660    str x0, [x19, #360]
   8b7bc:   94006d57    bl  a6d18 <memset>
   8b7c0:   f940b664    ldr x4, [x19, #360]
   8b7c4:   528000a7    mov w7, #0x5
   8b7c8:   528000e6    mov w6, #0x7
   8b7cc:   52800085    mov w5, #0x4
   8b7d0:   128001e3    mov w3, #0xfffffff0
   8b7d4:   12b00002    mov w2, #0x7fffffff
   8b7d8:   12800001    mov w1, #0xffffffff
   8b7dc:   aa1303e0    mov x0, x19
   8b7e0:   39000087    strb    w7, [x4]
   8b7e4:   f940b664    ldr x4, [x19, #360]
   8b7e8:   39000486    strb    w6, [x4, #1]
   8b7ec:   f940b664    ldr x4, [x19, #360]
   8b7f0:   39000885    strb    w5, [x4, #2]
   8b7f4:   39056663    strb    w3, [x19, #345]
   8b7f8:   7902b67f    strh    wzr, [x19, #346]
   8b7fc:   b9015e62    str w2, [x19, #348]
   8b800:   39058261    strb    w1, [x19, #352]
   8b804:   97ffff97    bl  8b660 <CUSBGamePadPS4Device::SendLedRumbleCommand()>
   8b808:   52801f40    mov w0, #0xfa
   8b80c:   7902ba7f    strh    wzr, [x19, #348]
   8b810:   39057a7f    strb    wzr, [x19, #350]
   8b814:   94006b3f    bl  a6510 <CTimer::SimpleMsDelay(unsigned int)>
   8b818:   aa1303e0    mov x0, x19
   8b81c:   97ffff91    bl  8b660 <CUSBGamePadPS4Device::SendLedRumbleCommand()>
   8b820:   aa1303e0    mov x0, x19
   8b824:   a94153f3    ldp x19, x20, [sp, #16]
   8b828:   a8c27bfd    ldp x29, x30, [sp], #32
   8b82c:   14000829    b   8d8d0 <CUSBHIDDevice::StartRequest()>
   8b830:   b0000141    adrp    x1, b4000 <From+0x140>
   8b834:   91134021    add x1, x1, #0x4d0
   8b838:   9100a021    add x1, x1, #0x28
   8b83c:   97fffb5d    bl  8a5b0 <CUSBFunction::ConfigurationError(char const*) const>
   8b840:   52800000    mov w0, #0x0
   8b844:   a8c27bfd    ldp x29, x30, [sp], #32
   8b848:   d65f03c0    ret
   8b84c:   d2800a00    mov x0, #0x50
   8b850:   94006fdc    bl  a77c0 <operator new(unsigned long)>
   8b854:   aa0003f4    mov x20, x0
   8b858:   52800002    mov w2, #0x0
   8b85c:   52800021    mov w1, #0x1
   8b860:   94003fe4    bl  9b7f0 <CMouseDevice::CMouseDevice(unsigned int, bool)>
   8b864:   f900ba74    str x20, [x19, #368]
   8b868:   17ffffc3    b   8b774 <CUSBGamePadPS4Device::Configure()+0x34>
   8b86c:   94004f65    bl  9f600 <CLogger::Get()>
   8b870:   b0000141    adrp    x1, b4000 <From+0x140>
   8b874:   91134021    add x1, x1, #0x4d0
   8b878:   b0000123    adrp    x3, b0000 <_etext+0xf9c>
   8b87c:   9100a021    add x1, x1, #0x28
   8b880:   91314063    add x3, x3, #0xc50
   8b884:   52800022    mov w2, #0x1
   8b888:   94005146    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8b88c:   a94153f3    ldp x19, x20, [sp, #16]
   8b890:   52800000    mov w0, #0x0
   8b894:   a8c27bfd    ldp x29, x30, [sp], #32
   8b898:   d65f03c0    ret
   8b89c:   00000000    udf #0

000000000008b8a0 <CUSBGamePadPS4Device::GetProperties()>:
   8b8a0:   528007e0    mov w0, #0x3f
   8b8a4:   d65f03c0    ret
    ...

000000000008b8b0 <CUSBGamePadStandardDevice::~CUSBGamePadStandardDevice()>:
   8b8b0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8b8b4:   910003fd    mov x29, sp
   8b8b8:   b0000141    adrp    x1, b4000 <From+0x140>
   8b8bc:   91146021    add x1, x1, #0x518
   8b8c0:   f9000bf3    str x19, [sp, #16]
   8b8c4:   aa0003f3    mov x19, x0
   8b8c8:   f940b000    ldr x0, [x0, #352]
   8b8cc:   f9000261    str x1, [x19]
   8b8d0:   b4000040    cbz x0, 8b8d8 <CUSBGamePadStandardDevice::~CUSBGamePadStandardDevice()+0x28>
   8b8d4:   94006fd7    bl  a7830 <operator delete[](void*)>
   8b8d8:   aa1303e0    mov x0, x19
   8b8dc:   f900b27f    str xzr, [x19, #352]
   8b8e0:   f9400bf3    ldr x19, [sp, #16]
   8b8e4:   a8c27bfd    ldp x29, x30, [sp], #32
   8b8e8:   1400396e    b   99ea0 <CUSBGamePadDevice::~CUSBGamePadDevice()>
   8b8ec:   d503201f    nop

000000000008b8f0 <CUSBGamePadStandardDevice::~CUSBGamePadStandardDevice()>:
   8b8f0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8b8f4:   910003fd    mov x29, sp
   8b8f8:   b0000141    adrp    x1, b4000 <From+0x140>
   8b8fc:   91146021    add x1, x1, #0x518
   8b900:   f9000bf3    str x19, [sp, #16]
   8b904:   aa0003f3    mov x19, x0
   8b908:   f940b000    ldr x0, [x0, #352]
   8b90c:   f9000261    str x1, [x19]
   8b910:   b4000040    cbz x0, 8b918 <CUSBGamePadStandardDevice::~CUSBGamePadStandardDevice()+0x28>
   8b914:   94006fc7    bl  a7830 <operator delete[](void*)>
   8b918:   aa1303e0    mov x0, x19
   8b91c:   f900b27f    str xzr, [x19, #352]
   8b920:   94003960    bl  99ea0 <CUSBGamePadDevice::~CUSBGamePadDevice()>
   8b924:   aa1303e0    mov x0, x19
   8b928:   f9400bf3    ldr x19, [sp, #16]
   8b92c:   d2802e01    mov x1, #0x170
   8b930:   a8c27bfd    ldp x29, x30, [sp], #32
   8b934:   14006fcb    b   a7860 <operator delete(void*, unsigned long)>
   8b938:   d503201f    nop
   8b93c:   d503201f    nop

000000000008b940 <CUSBGamePadStandardDevice::CUSBGamePadStandardDevice(CUSBFunction*, bool)>:
   8b940:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8b944:   910003fd    mov x29, sp
   8b948:   a90153f3    stp x19, x20, [sp, #16]
   8b94c:   aa0003f3    mov x19, x0
   8b950:   12001c54    and w20, w2, #0xff
   8b954:   9400393f    bl  99e50 <CUSBGamePadDevice::CUSBGamePadDevice(CUSBFunction*)>
   8b958:   b0000140    adrp    x0, b4000 <From+0x140>
   8b95c:   91146000    add x0, x0, #0x518
   8b960:   39056274    strb    w20, [x19, #344]
   8b964:   f900b27f    str xzr, [x19, #352]
   8b968:   f9000260    str x0, [x19]
   8b96c:   7902d27f    strh    wzr, [x19, #360]
   8b970:   a94153f3    ldp x19, x20, [sp, #16]
   8b974:   a8c27bfd    ldp x29, x30, [sp], #32
   8b978:   d65f03c0    ret
   8b97c:   d503201f    nop

000000000008b980 <CUSBGamePadStandardDevice::BitGetUnsigned(void const*, unsigned int, unsigned int)>:
   8b980:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   8b984:   910003fd    mov x29, sp
   8b988:   b40003c0    cbz x0, 8ba00 <CUSBGamePadStandardDevice::BitGetUnsigned(void const*, unsigned int, unsigned int)+0x80>
   8b98c:   7100805f    cmp w2, #0x20
   8b990:   54000448    b.hi    8ba18 <CUSBGamePadStandardDevice::BitGetUnsigned(void const*, unsigned int, unsigned int)+0x98>
   8b994:   aa0003e3    mov x3, x0
   8b998:   52800000    mov w0, #0x0
   8b99c:   34000222    cbz w2, 8b9e0 <CUSBGamePadStandardDevice::BitGetUnsigned(void const*, unsigned int, unsigned int)+0x60>
   8b9a0:   53037c20    lsr w0, w1, #3
   8b9a4:   12000824    and w4, w1, #0x7
   8b9a8:   b8604860    ldr w0, [x3, w0, uxtw]
   8b9ac:   53037c21    lsr w1, w1, #3
   8b9b0:   7100605f    cmp w2, #0x18
   8b9b4:   8b010063    add x3, x3, x1
   8b9b8:   1ac42400    lsr w0, w0, w4
   8b9bc:   54000169    b.ls    8b9e8 <CUSBGamePadStandardDevice::BitGetUnsigned(void const*, unsigned int, unsigned int)+0x68>
   8b9c0:   b8403063    ldur    w3, [x3, #3]
   8b9c4:   51006042    sub w2, w2, #0x18
   8b9c8:   52800021    mov w1, #0x1
   8b9cc:   1ac22021    lsl w1, w1, w2
   8b9d0:   51000421    sub w1, w1, #0x1
   8b9d4:   1ac42462    lsr w2, w3, w4
   8b9d8:   0a020021    and w1, w1, w2
   8b9dc:   33081c20    bfi w0, w1, #24, #8
   8b9e0:   a8c17bfd    ldp x29, x30, [sp], #16
   8b9e4:   d65f03c0    ret
   8b9e8:   52800021    mov w1, #0x1
   8b9ec:   a8c17bfd    ldp x29, x30, [sp], #16
   8b9f0:   1ac22021    lsl w1, w1, w2
   8b9f4:   51000421    sub w1, w1, #0x1
   8b9f8:   0a000020    and w0, w1, w0
   8b9fc:   d65f03c0    ret
   8ba00:   b0000121    adrp    x1, b0000 <_etext+0xf9c>
   8ba04:   b0000120    adrp    x0, b0000 <_etext+0xf9c>
   8ba08:   91344021    add x1, x1, #0xd10
   8ba0c:   9134a000    add x0, x0, #0xd28
   8ba10:   52802642    mov w2, #0x132
   8ba14:   9400442b    bl  9cac0 <assertion_failed>
   8ba18:   b0000121    adrp    x1, b0000 <_etext+0xf9c>
   8ba1c:   b0000120    adrp    x0, b0000 <_etext+0xf9c>
   8ba20:   91344021    add x1, x1, #0xd10
   8ba24:   9134e000    add x0, x0, #0xd38
   8ba28:   52802662    mov w2, #0x133
   8ba2c:   94004425    bl  9cac0 <assertion_failed>

000000000008ba30 <CUSBGamePadStandardDevice::BitGetSigned(void const*, unsigned int, unsigned int)>:
   8ba30:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   8ba34:   910003fd    mov x29, sp
   8ba38:   b40005e0    cbz x0, 8baf4 <CUSBGamePadStandardDevice::BitGetSigned(void const*, unsigned int, unsigned int)+0xc4>
   8ba3c:   7100805f    cmp w2, #0x20
   8ba40:   54000668    b.hi    8bb0c <CUSBGamePadStandardDevice::BitGetSigned(void const*, unsigned int, unsigned int)+0xdc>
   8ba44:   aa0003e3    mov x3, x0
   8ba48:   52800000    mov w0, #0x0
   8ba4c:   34000362    cbz w2, 8bab8 <CUSBGamePadStandardDevice::BitGetSigned(void const*, unsigned int, unsigned int)+0x88>
   8ba50:   53037c20    lsr w0, w1, #3
   8ba54:   12000824    and w4, w1, #0x7
   8ba58:   b8604860    ldr w0, [x3, w0, uxtw]
   8ba5c:   53037c21    lsr w1, w1, #3
   8ba60:   7100605f    cmp w2, #0x18
   8ba64:   8b010063    add x3, x3, x1
   8ba68:   1ac42400    lsr w0, w0, w4
   8ba6c:   540002a9    b.ls    8bac0 <CUSBGamePadStandardDevice::BitGetSigned(void const*, unsigned int, unsigned int)+0x90>
   8ba70:   b8403063    ldur    w3, [x3, #3]
   8ba74:   51006045    sub w5, w2, #0x18
   8ba78:   52800021    mov w1, #0x1
   8ba7c:   1ac52021    lsl w1, w1, w5
   8ba80:   7100805f    cmp w2, #0x20
   8ba84:   51000421    sub w1, w1, #0x1
   8ba88:   1ac42463    lsr w3, w3, w4
   8ba8c:   0a030021    and w1, w1, w3
   8ba90:   33081c20    bfi w0, w1, #24, #8
   8ba94:   54000120    b.eq    8bab8 <CUSBGamePadStandardDevice::BitGetSigned(void const*, unsigned int, unsigned int)+0x88>
   8ba98:   52800021    mov w1, #0x1
   8ba9c:   51000443    sub w3, w2, #0x1
   8baa0:   1ac22022    lsl w2, w1, w2
   8baa4:   1ac32021    lsl w1, w1, w3
   8baa8:   4b0203e2    neg w2, w2
   8baac:   6a00003f    tst w1, w0
   8bab0:   2a020002    orr w2, w0, w2
   8bab4:   1a801040    csel    w0, w2, w0, ne
   8bab8:   a8c17bfd    ldp x29, x30, [sp], #16
   8babc:   d65f03c0    ret
   8bac0:   52800021    mov w1, #0x1
   8bac4:   51000443    sub w3, w2, #0x1
   8bac8:   1ac22021    lsl w1, w1, w2
   8bacc:   51000421    sub w1, w1, #0x1
   8bad0:   0a000020    and w0, w1, w0
   8bad4:   52800021    mov w1, #0x1
   8bad8:   1ac22022    lsl w2, w1, w2
   8badc:   1ac32021    lsl w1, w1, w3
   8bae0:   4b0203e2    neg w2, w2
   8bae4:   6a00003f    tst w1, w0
   8bae8:   2a020002    orr w2, w0, w2
   8baec:   1a801040    csel    w0, w2, w0, ne
   8baf0:   17fffff2    b   8bab8 <CUSBGamePadStandardDevice::BitGetSigned(void const*, unsigned int, unsigned int)+0x88>
   8baf4:   b0000121    adrp    x1, b0000 <_etext+0xf9c>
   8baf8:   b0000120    adrp    x0, b0000 <_etext+0xf9c>
   8bafc:   91344021    add x1, x1, #0xd10
   8bb00:   9134a000    add x0, x0, #0xd28
   8bb04:   52802aa2    mov w2, #0x155
   8bb08:   940043ee    bl  9cac0 <assertion_failed>
   8bb0c:   b0000121    adrp    x1, b0000 <_etext+0xf9c>
   8bb10:   b0000120    adrp    x0, b0000 <_etext+0xf9c>
   8bb14:   91344021    add x1, x1, #0xd10
   8bb18:   9134e000    add x0, x0, #0xd38
   8bb1c:   52802ac2    mov w2, #0x156
   8bb20:   940043e8    bl  9cac0 <assertion_failed>
   8bb24:   d503201f    nop
   8bb28:   d503201f    nop
   8bb2c:   d503201f    nop

000000000008bb30 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)>:
   8bb30:   a9b67bfd    stp x29, x30, [sp, #-160]!
   8bb34:   910003fd    mov x29, sp
   8bb38:   a90153f3    stp x19, x20, [sp, #16]
   8bb3c:   f940b014    ldr x20, [x0, #352]
   8bb40:   a9025bf5    stp x21, x22, [sp, #32]
   8bb44:   b4001634    cbz x20, 8be08 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x2d8>
   8bb48:   aa0003f6    mov x22, x0
   8bb4c:   7942d013    ldrh    w19, [x0, #360]
   8bb50:   a90573fb    stp x27, x28, [sp, #80]
   8bb54:   34001e73    cbz w19, 8bf20 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x3f0>
   8bb58:   aa0103f5    mov x21, x1
   8bb5c:   52800009    mov w9, #0x0
   8bb60:   a9046bf9    stp x25, x26, [sp, #64]
   8bb64:   52865d79    mov w25, #0x32eb
   8bb68:   72bf1499    movk    w25, #0xf8a4, lsl #16
   8bb6c:   2a1903e7    mov w7, w25
   8bb70:   2a1903e5    mov w5, w25
   8bb74:   2a1903e4    mov w4, w25
   8bb78:   5280001c    mov w28, #0x0
   8bb7c:   52800006    mov w6, #0x0
   8bb80:   5280001b    mov w27, #0x0
   8bb84:   a90363f7    stp x23, x24, [sp, #48]
   8bb88:   5280001a    mov w26, #0x0
   8bb8c:   52800017    mov w23, #0x0
   8bb90:   52800018    mov w24, #0x0
   8bb94:   d503201f    nop
   8bb98:   39c00282    ldrsb   w2, [x20]
   8bb9c:   12000443    and w3, w2, #0x3
   8bba0:   7100047f    cmp w3, #0x1
   8bba4:   540009e0    b.eq    8bce0 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x1b0>
   8bba8:   7100087f    cmp w3, #0x2
   8bbac:   540008c0    b.eq    8bcc4 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x194>
   8bbb0:   35000723    cbnz    w3, 8bc94 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x164>
   8bbb4:   51000673    sub w19, w19, #0x1
   8bbb8:   91000694    add x20, x20, #0x1
   8bbbc:   12003e73    and w19, w19, #0xffff
   8bbc0:   121e1442    and w2, w2, #0xfc
   8bbc4:   7102105f    cmp w2, #0x84
   8bbc8:   54000400    b.eq    8bc48 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x118>
   8bbcc:   7100d05f    cmp w2, #0x34
   8bbd0:   54000c20    b.eq    8bd54 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x224>
   8bbd4:   540004ec    b.gt    8bc70 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x140>
   8bbd8:   7100505f    cmp w2, #0x14
   8bbdc:   54000b60    b.eq    8bd48 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x218>
   8bbe0:   54000acc    b.gt    8bd38 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x208>
   8bbe4:   7100105f    cmp w2, #0x4
   8bbe8:   54000860    b.eq    8bcf4 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x1c4>
   8bbec:   7100205f    cmp w2, #0x8
   8bbf0:   54000101    b.ne    8bc10 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0xe0>
   8bbf4:   7100d87f    cmp w3, #0x36
   8bbf8:   54000bac    b.gt    8bd6c <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x23c>
   8bbfc:   7100bc7f    cmp w3, #0x2f
   8bc00:   54000fac    b.gt    8bdf4 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x2c4>
   8bc04:   51001063    sub w3, w3, #0x4
   8bc08:   7100047f    cmp w3, #0x1
   8bc0c:   1a9f8529    csinc   w9, w9, wzr, hi
   8bc10:   35fffc53    cbnz    w19, 8bb98 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x68>
   8bc14:   d503201f    nop
   8bc18:   11001f18    add w24, w24, #0x7
   8bc1c:   a9446bf9    ldp x25, x26, [sp, #64]
   8bc20:   d3434b13    ubfx    x19, x24, #3, #16
   8bc24:   a94363f7    ldp x23, x24, [sp, #48]
   8bc28:   b9004ac6    str w6, [x22, #72]
   8bc2c:   b9010edc    str w28, [x22, #268]
   8bc30:   7902a2d3    strh    w19, [x22, #336]
   8bc34:   a94153f3    ldp x19, x20, [sp, #16]
   8bc38:   a9425bf5    ldp x21, x22, [sp, #32]
   8bc3c:   a94573fb    ldp x27, x28, [sp, #80]
   8bc40:   a8ca7bfd    ldp x29, x30, [sp], #160
   8bc44:   d65f03c0    ret
   8bc48:   35000f37    cbnz    w23, 8be2c <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x2fc>
   8bc4c:   b4000c95    cbz x21, 8bddc <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x2ac>
   8bc50:   394002a0    ldrb    w0, [x21]
   8bc54:   7100001f    cmp w0, #0x0
   8bc58:   7a431004    ccmp    w0, w3, #0x4, ne
   8bc5c:   54000f21    b.ne    8be40 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x310>
   8bc60:   2a0303f7    mov w23, w3
   8bc64:   52800118    mov w24, #0x8
   8bc68:   35fff993    cbnz    w19, 8bb98 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x68>
   8bc6c:   17ffffeb    b   8bc18 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0xe8>
   8bc70:   7102005f    cmp w2, #0x80
   8bc74:   540004c0    b.eq    8bd0c <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x1dc>
   8bc78:   5400058c    b.gt    8bd28 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x1f8>
   8bc7c:   7101105f    cmp w2, #0x44
   8bc80:   54000700    b.eq    8bd60 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x230>
   8bc84:   7101d05f    cmp w2, #0x74
   8bc88:   1a83135a    csel    w26, w26, w3, ne
   8bc8c:   35fff873    cbnz    w19, 8bb98 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x68>
   8bc90:   17ffffe2    b   8bc18 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0xe8>
   8bc94:   39c00e81    ldrsb   w1, [x20, #3]
   8bc98:   51001673    sub w19, w19, #0x5
   8bc9c:   91001694    add x20, x20, #0x5
   8bca0:   12003e73    and w19, w19, #0xffff
   8bca4:   38dfd283    ldursb  w3, [x20, #-3]
   8bca8:   38dff280    ldursb  w0, [x20, #-1]
   8bcac:   53103c21    lsl w1, w1, #16
   8bcb0:   38dfc28a    ldursb  w10, [x20, #-4]
   8bcb4:   2a032023    orr w3, w1, w3, lsl #8
   8bcb8:   2a006140    orr w0, w10, w0, lsl #24
   8bcbc:   2a000063    orr w3, w3, w0
   8bcc0:   17ffffc0    b   8bbc0 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x90>
   8bcc4:   39400680    ldrb    w0, [x20, #1]
   8bcc8:   51000e73    sub w19, w19, #0x3
   8bccc:   91000e94    add x20, x20, #0x3
   8bcd0:   12003e73    and w19, w19, #0xffff
   8bcd4:   38dff283    ldursb  w3, [x20, #-1]
   8bcd8:   2a032003    orr w3, w0, w3, lsl #8
   8bcdc:   17ffffb9    b   8bbc0 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x90>
   8bce0:   51000a73    sub w19, w19, #0x2
   8bce4:   39c00683    ldrsb   w3, [x20, #1]
   8bce8:   91000a94    add x20, x20, #0x2
   8bcec:   12003e73    and w19, w19, #0xffff
   8bcf0:   17ffffb4    b   8bbc0 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x90>
   8bcf4:   7100053f    cmp w9, #0x1
   8bcf8:   52800040    mov w0, #0x2
   8bcfc:   7a490860    ccmp    w3, #0x9, #0x0, eq
   8bd00:   1a801129    csel    w9, w9, w0, ne
   8bd04:   35fff4b3    cbnz    w19, 8bb98 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x68>
   8bd08:   17ffffc4    b   8bc18 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0xe8>
   8bd0c:   12000463    and w3, w3, #0x3
   8bd10:   1b1b7f4a    mul w10, w26, w27
   8bd14:   7100087f    cmp w3, #0x2
   8bd18:   54000380    b.eq    8bd88 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x258>
   8bd1c:   0b0a0318    add w24, w24, w10
   8bd20:   35fff3d3    cbnz    w19, 8bb98 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x68>
   8bd24:   17ffffbd    b   8bc18 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0xe8>
   8bd28:   7102505f    cmp w2, #0x94
   8bd2c:   1a83137b    csel    w27, w27, w3, ne
   8bd30:   35fff353    cbnz    w19, 8bb98 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x68>
   8bd34:   17ffffb9    b   8bc18 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0xe8>
   8bd38:   7100905f    cmp w2, #0x24
   8bd3c:   1a831084    csel    w4, w4, w3, ne
   8bd40:   35fff2d3    cbnz    w19, 8bb98 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x68>
   8bd44:   17ffffb5    b   8bc18 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0xe8>
   8bd48:   2a0303e5    mov w5, w3
   8bd4c:   35fff273    cbnz    w19, 8bb98 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x68>
   8bd50:   17ffffb2    b   8bc18 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0xe8>
   8bd54:   2a0303e7    mov w7, w3
   8bd58:   35fff213    cbnz    w19, 8bb98 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x68>
   8bd5c:   17ffffaf    b   8bc18 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0xe8>
   8bd60:   2a0303f9    mov w25, w3
   8bd64:   35fff1b3    cbnz    w19, 8bb98 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x68>
   8bd68:   17ffffac    b   8bc18 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0xe8>
   8bd6c:   7100e47f    cmp w3, #0x39
   8bd70:   54fff501    b.ne    8bc10 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0xe0>
   8bd74:   7100053f    cmp w9, #0x1
   8bd78:   52800080    mov w0, #0x4
   8bd7c:   1a801129    csel    w9, w9, w0, ne
   8bd80:   35fff0d3    cbnz    w19, 8bb98 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x68>
   8bd84:   17ffffa5    b   8bc18 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0xe8>
   8bd88:   71000d3f    cmp w9, #0x3
   8bd8c:   54000600    b.eq    8be4c <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x31c>
   8bd90:   7100113f    cmp w9, #0x4
   8bd94:   54000cc0    b.eq    8bf2c <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x3fc>
   8bd98:   7100093f    cmp w9, #0x2
   8bd9c:   54fffc01    b.ne    8bd1c <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x1ec>
   8bda0:   2a0a03e2    mov w2, w10
   8bda4:   2a1803e1    mov w1, w24
   8bda8:   b9012adb    str w27, [x22, #296]
   8bdac:   aa1503e0    mov x0, x21
   8bdb0:   290d9fea    stp w10, w7, [sp, #108]
   8bdb4:   290e93e5    stp w5, w4, [sp, #116]
   8bdb8:   b9007fe6    str w6, [sp, #124]
   8bdbc:   97fffef1    bl  8b980 <CUSBGamePadStandardDevice::BitGetUnsigned(void const*, unsigned int, unsigned int)>
   8bdc0:   294d9fea    ldp w10, w7, [sp, #108]
   8bdc4:   52800029    mov w9, #0x1
   8bdc8:   b9012ec0    str w0, [x22, #300]
   8bdcc:   294e93e5    ldp w5, w4, [sp, #116]
   8bdd0:   b9407fe6    ldr w6, [sp, #124]
   8bdd4:   0b0a0318    add w24, w24, w10
   8bdd8:   17ffffd2    b   8bd20 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x1f0>
   8bddc:   b0000121    adrp    x1, b0000 <_etext+0xf9c>
   8bde0:   b0000120    adrp    x0, b0000 <_etext+0xf9c>
   8bde4:   91344021    add x1, x1, #0xd10
   8bde8:   9134a000    add x0, x0, #0xd28
   8bdec:   52802642    mov w2, #0x132
   8bdf0:   94004334    bl  9cac0 <assertion_failed>
   8bdf4:   7100053f    cmp w9, #0x1
   8bdf8:   52800060    mov w0, #0x3
   8bdfc:   1a801129    csel    w9, w9, w0, ne
   8be00:   35ffecd3    cbnz    w19, 8bb98 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x68>
   8be04:   17ffff85    b   8bc18 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0xe8>
   8be08:   b0000121    adrp    x1, b0000 <_etext+0xf9c>
   8be0c:   b0000120    adrp    x0, b0000 <_etext+0xf9c>
   8be10:   a90363f7    stp x23, x24, [sp, #48]
   8be14:   91344021    add x1, x1, #0xd10
   8be18:   91352000    add x0, x0, #0xd48
   8be1c:   52801442    mov w2, #0xa2
   8be20:   a9046bf9    stp x25, x26, [sp, #64]
   8be24:   a90573fb    stp x27, x28, [sp, #80]
   8be28:   94004326    bl  9cac0 <assertion_failed>
   8be2c:   11001f13    add w19, w24, #0x7
   8be30:   a94363f7    ldp x23, x24, [sp, #48]
   8be34:   d3434a73    ubfx    x19, x19, #3, #16
   8be38:   a9446bf9    ldp x25, x26, [sp, #64]
   8be3c:   17ffff7b    b   8bc28 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0xf8>
   8be40:   a94363f7    ldp x23, x24, [sp, #48]
   8be44:   a9446bf9    ldp x25, x26, [sp, #64]
   8be48:   17ffff7b    b   8bc34 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x104>
   8be4c:   34000b1b    cbz w27, 8bfac <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x47c>
   8be50:   52800183    mov w3, #0xc
   8be54:   d2800982    mov x2, #0x4c
   8be58:   52865d60    mov w0, #0x32eb
   8be5c:   72bf1480    movk    w0, #0xf8a4, lsl #16
   8be60:   9b2308c3    smaddl  x3, w6, w3, x2
   8be64:   6b0000bf    cmp w5, w0
   8be68:   2a1803e1    mov w1, w24
   8be6c:   1a8710a9    csel    w9, w5, w7, ne
   8be70:   5280000b    mov w11, #0x0
   8be74:   6b00009f    cmp w4, w0
   8be78:   1a991080    csel    w0, w4, w25, ne
   8be7c:   b9009fe0    str w0, [sp, #156]
   8be80:   8b0302c3    add x3, x22, x3
   8be84:   1400000f    b   8bec0 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x390>
   8be88:   97fffebe    bl  8b980 <CUSBGamePadStandardDevice::BitGetUnsigned(void const*, unsigned int, unsigned int)>
   8be8c:   f9404be3    ldr x3, [sp, #144]
   8be90:   294da7e1    ldp w1, w9, [sp, #108]
   8be94:   294e97e7    ldp w7, w5, [sp, #116]
   8be98:   294fabe4    ldp w4, w10, [sp, #124]
   8be9c:   b9408beb    ldr w11, [sp, #136]
   8bea0:   b9409be6    ldr w6, [sp, #152]
   8bea4:   11000562    add w2, w11, #0x1
   8bea8:   b800c460    str w0, [x3], #12
   8beac:   0b1a0021    add w1, w1, w26
   8beb0:   6b1b005f    cmp w2, w27
   8beb4:   7a4f3842    ccmp    w2, #0xf, #0x2, cc
   8beb8:   540002a8    b.hi    8bf0c <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x3dc>
   8bebc:   2a0203eb    mov w11, w2
   8bec0:   b9409fe0    ldr w0, [sp, #156]
   8bec4:   2a1a03e2    mov w2, w26
   8bec8:   290da7e1    stp w1, w9, [sp, #108]
   8becc:   290e97e7    stp w7, w5, [sp, #116]
   8bed0:   290fabe4    stp w4, w10, [sp, #124]
   8bed4:   b9008beb    str w11, [sp, #136]
   8bed8:   29008069    stp w9, w0, [x3, #4]
   8bedc:   aa1503e0    mov x0, x21
   8bee0:   f9004be3    str x3, [sp, #144]
   8bee4:   b9009be6    str w6, [sp, #152]
   8bee8:   36fffd09    tbz w9, #31, 8be88 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x358>
   8beec:   97fffed1    bl  8ba30 <CUSBGamePadStandardDevice::BitGetSigned(void const*, unsigned int, unsigned int)>
   8bef0:   f9404be3    ldr x3, [sp, #144]
   8bef4:   294da7e1    ldp w1, w9, [sp, #108]
   8bef8:   294e97e7    ldp w7, w5, [sp, #116]
   8befc:   294fabe4    ldp w4, w10, [sp, #124]
   8bf00:   b9408beb    ldr w11, [sp, #136]
   8bf04:   b9409be6    ldr w6, [sp, #152]
   8bf08:   17ffffe7    b   8bea4 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x374>
   8bf0c:   110004c6    add w6, w6, #0x1
   8bf10:   52800029    mov w9, #0x1
   8bf14:   0b0b00c6    add w6, w6, w11
   8bf18:   0b0a0318    add w24, w24, w10
   8bf1c:   17ffff81    b   8bd20 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x1f0>
   8bf20:   5280001c    mov w28, #0x0
   8bf24:   52800006    mov w6, #0x0
   8bf28:   17ffff40    b   8bc28 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0xf8>
   8bf2c:   3400041b    cbz w27, 8bfac <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x47c>
   8bf30:   11000783    add w3, w28, #0x1
   8bf34:   910432c0    add x0, x22, #0x10c
   8bf38:   2a1803e1    mov w1, w24
   8bf3c:   93407c63    sxtw    x3, w3
   8bf40:   5280001c    mov w28, #0x0
   8bf44:   f90047e0    str x0, [sp, #136]
   8bf48:   2a1a03e2    mov w2, w26
   8bf4c:   aa1503e0    mov x0, x21
   8bf50:   290d9fe1    stp w1, w7, [sp, #108]
   8bf54:   290e93e5    stp w5, w4, [sp, #116]
   8bf58:   1100079c    add w28, w28, #0x1
   8bf5c:   b9007fe6    str w6, [sp, #124]
   8bf60:   f90043e3    str x3, [sp, #128]
   8bf64:   b9009bea    str w10, [sp, #152]
   8bf68:   97fffe86    bl  8b980 <CUSBGamePadStandardDevice::BitGetUnsigned(void const*, unsigned int, unsigned int)>
   8bf6c:   a9480be3    ldp x3, x2, [sp, #128]
   8bf70:   6b1b039f    cmp w28, w27
   8bf74:   7a453b82    ccmp    w28, #0x5, #0x2, cc
   8bf78:   294d9fe1    ldp w1, w7, [sp, #108]
   8bf7c:   b8237840    str w0, [x2, x3, lsl #2]
   8bf80:   aa0303e8    mov x8, x3
   8bf84:   91000463    add x3, x3, #0x1
   8bf88:   294e93e5    ldp w5, w4, [sp, #116]
   8bf8c:   b9407fe6    ldr w6, [sp, #124]
   8bf90:   0b1a0021    add w1, w1, w26
   8bf94:   b9409bea    ldr w10, [sp, #152]
   8bf98:   54fffd89    b.ls    8bf48 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x418>
   8bf9c:   2a0803fc    mov w28, w8
   8bfa0:   52800029    mov w9, #0x1
   8bfa4:   0b0a0318    add w24, w24, w10
   8bfa8:   17ffff5e    b   8bd20 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x1f0>
   8bfac:   52800029    mov w9, #0x1
   8bfb0:   0b0a0318    add w24, w24, w10
   8bfb4:   17ffff5b    b   8bd20 <CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)+0x1f0>
   8bfb8:   d503201f    nop
   8bfbc:   d503201f    nop

000000000008bfc0 <CUSBGamePadStandardDevice::Configure()>:
   8bfc0:   a9b57bfd    stp x29, x30, [sp, #-176]!
   8bfc4:   52800421    mov w1, #0x21
   8bfc8:   910003fd    mov x29, sp
   8bfcc:   a90153f3    stp x19, x20, [sp, #16]
   8bfd0:   aa0003f3    mov x19, x0
   8bfd4:   97fff96b    bl  8a580 <CUSBFunction::GetDescriptor(unsigned char)>
   8bfd8:   b40000c0    cbz x0, 8bff0 <CUSBGamePadStandardDevice::Configure()+0x30>
   8bfdc:   aa0003f4    mov x20, x0
   8bfe0:   39401c00    ldrb    w0, [x0, #7]
   8bfe4:   39402281    ldrb    w1, [x20, #8]
   8bfe8:   2a012001    orr w1, w0, w1, lsl #8
   8bfec:   35000121    cbnz    w1, 8c010 <CUSBGamePadStandardDevice::Configure()+0x50>
   8bff0:   b0000141    adrp    x1, b4000 <From+0x140>
   8bff4:   9116e021    add x1, x1, #0x5b8
   8bff8:   aa1303e0    mov x0, x19
   8bffc:   97fff96d    bl  8a5b0 <CUSBFunction::ConfigurationError(char const*) const>
   8c000:   52800000    mov w0, #0x0
   8c004:   a94153f3    ldp x19, x20, [sp, #16]
   8c008:   a8cb7bfd    ldp x29, x30, [sp], #176
   8c00c:   d65f03c0    ret
   8c010:   a9025bf5    stp x21, x22, [sp, #32]
   8c014:   92403c20    and x0, x1, #0xffff
   8c018:   a90363f7    stp x23, x24, [sp, #48]
   8c01c:   7902d261    strh    w1, [x19, #360]
   8c020:   94006df0    bl  a77e0 <operator new[](unsigned long)>
   8c024:   aa0003e1    mov x1, x0
   8c028:   aa1303e0    mov x0, x19
   8c02c:   f900b261    str x1, [x19, #352]
   8c030:   97fff948    bl  8a550 <CUSBFunction::GetHost() const>
   8c034:   aa0003f5    mov x21, x0
   8c038:   aa1303e0    mov x0, x19
   8c03c:   97fff939    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   8c040:   f940b277    ldr x23, [x19, #352]
   8c044:   aa0003f6    mov x22, x0
   8c048:   aa1303e0    mov x0, x19
   8c04c:   39401a94    ldrb    w20, [x20, #6]
   8c050:   7942d278    ldrh    w24, [x19, #360]
   8c054:   97fff9a3    bl  8a6e0 <CUSBFunction::GetInterfaceNumber() const>
   8c058:   12001c07    and w7, w0, #0xff
   8c05c:   aa1603e1    mov x1, x22
   8c060:   aa1703e4    mov x4, x23
   8c064:   2a1403e2    mov w2, w20
   8c068:   aa1503e0    mov x0, x21
   8c06c:   12800fc6    mov w6, #0xffffff81
   8c070:   2a1803e5    mov w5, w24
   8c074:   52800003    mov w3, #0x0
   8c078:   97ffd42e    bl  81130 <CUSBHostController::GetDescriptor(CUSBEndpoint*, unsigned char, unsigned char, void*, unsigned int, unsigned char, unsigned short)>
   8c07c:   7942d261    ldrh    w1, [x19, #360]
   8c080:   6b01001f    cmp w0, w1
   8c084:   54000421    b.ne    8c108 <CUSBGamePadStandardDevice::Configure()+0x148>
   8c088:   f9400262    ldr x2, [x19]
   8c08c:   aa1303e0    mov x0, x19
   8c090:   910123e1    add x1, sp, #0x48
   8c094:   a904ffff    stp xzr, xzr, [sp, #72]
   8c098:   a905ffff    stp xzr, xzr, [sp, #88]
   8c09c:   a906ffff    stp xzr, xzr, [sp, #104]
   8c0a0:   a907ffff    stp xzr, xzr, [sp, #120]
   8c0a4:   a908ffff    stp xzr, xzr, [sp, #136]
   8c0a8:   a909ffff    stp xzr, xzr, [sp, #152]
   8c0ac:   b900abff    str wzr, [sp, #168]
   8c0b0:   f9404c42    ldr x2, [x2, #152]
   8c0b4:   d63f0040    blr x2
   8c0b8:   b9404a60    ldr w0, [x19, #72]
   8c0bc:   350000a0    cbnz    w0, 8c0d0 <CUSBGamePadStandardDevice::Configure()+0x110>
   8c0c0:   b9410e60    ldr w0, [x19, #268]
   8c0c4:   35000060    cbnz    w0, 8c0d0 <CUSBGamePadStandardDevice::Configure()+0x110>
   8c0c8:   b9412a60    ldr w0, [x19, #296]
   8c0cc:   34000480    cbz w0, 8c15c <CUSBGamePadStandardDevice::Configure()+0x19c>
   8c0d0:   7942a260    ldrh    w0, [x19, #336]
   8c0d4:   340004a0    cbz w0, 8c168 <CUSBGamePadStandardDevice::Configure()+0x1a8>
   8c0d8:   aa1303e0    mov x0, x19
   8c0dc:   940036f5    bl  99cb0 <CUSBGamePadDevice::Configure()>
   8c0e0:   2a0003e1    mov w1, w0
   8c0e4:   12001c00    and w0, w0, #0xff
   8c0e8:   36000301    tbz w1, #0, 8c148 <CUSBGamePadStandardDevice::Configure()+0x188>
   8c0ec:   39456261    ldrb    w1, [x19, #344]
   8c0f0:   37000201    tbnz    w1, #0, 8c130 <CUSBGamePadStandardDevice::Configure()+0x170>
   8c0f4:   a94153f3    ldp x19, x20, [sp, #16]
   8c0f8:   a9425bf5    ldp x21, x22, [sp, #32]
   8c0fc:   a94363f7    ldp x23, x24, [sp, #48]
   8c100:   a8cb7bfd    ldp x29, x30, [sp], #176
   8c104:   d65f03c0    ret
   8c108:   94004d3e    bl  9f600 <CLogger::Get()>
   8c10c:   90000123    adrp    x3, b0000 <_etext+0xf9c>
   8c110:   90000141    adrp    x1, b4000 <From+0x140>
   8c114:   9121c063    add x3, x3, #0x870
   8c118:   9116e021    add x1, x1, #0x5b8
   8c11c:   52800022    mov w2, #0x1
   8c120:   94004f20    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8c124:   a9425bf5    ldp x21, x22, [sp, #32]
   8c128:   a94363f7    ldp x23, x24, [sp, #48]
   8c12c:   17ffffb5    b   8c000 <CUSBGamePadStandardDevice::Configure()+0x40>
   8c130:   aa1303e0    mov x0, x19
   8c134:   940005e7    bl  8d8d0 <CUSBHIDDevice::StartRequest()>
   8c138:   a9425bf5    ldp x21, x22, [sp, #32]
   8c13c:   12001c00    and w0, w0, #0xff
   8c140:   a94363f7    ldp x23, x24, [sp, #48]
   8c144:   17ffffb0    b   8c004 <CUSBGamePadStandardDevice::Configure()+0x44>
   8c148:   94004d2e    bl  9f600 <CLogger::Get()>
   8c14c:   90000123    adrp    x3, b0000 <_etext+0xf9c>
   8c150:   90000141    adrp    x1, b4000 <From+0x140>
   8c154:   91314063    add x3, x3, #0xc50
   8c158:   17fffff0    b   8c118 <CUSBGamePadStandardDevice::Configure()+0x158>
   8c15c:   a9425bf5    ldp x21, x22, [sp, #32]
   8c160:   a94363f7    ldp x23, x24, [sp, #48]
   8c164:   17ffffa7    b   8c000 <CUSBGamePadStandardDevice::Configure()+0x40>
   8c168:   90000121    adrp    x1, b0000 <_etext+0xf9c>
   8c16c:   90000120    adrp    x0, b0000 <_etext+0xf9c>
   8c170:   91344021    add x1, x1, #0xd10
   8c174:   9135a000    add x0, x0, #0xd68
   8c178:   528010a2    mov w2, #0x85
   8c17c:   94004251    bl  9cac0 <assertion_failed>

000000000008c180 <CUSBGamePadDevice::GetProperties()>:
   8c180:   52800000    mov w0, #0x0
   8c184:   d65f03c0    ret
    ...

000000000008c190 <CUSBGamePadDevice::SetLEDMode(TGamePadLEDMode)>:
   8c190:   52800000    mov w0, #0x0
   8c194:   d65f03c0    ret
    ...

000000000008c1a0 <CUSBGamePadDevice::SetRumbleMode(TGamePadRumbleMode)>:
   8c1a0:   52800000    mov w0, #0x0
   8c1a4:   d65f03c0    ret
    ...

000000000008c1b0 <CUSBGamePadSwitchProDevice::~CUSBGamePadSwitchProDevice()>:
   8c1b0:   90000141    adrp    x1, b4000 <From+0x140>
   8c1b4:   91176021    add x1, x1, #0x5d8
   8c1b8:   f9000001    str x1, [x0]
   8c1bc:   14003739    b   99ea0 <CUSBGamePadDevice::~CUSBGamePadDevice()>

000000000008c1c0 <CUSBGamePadSwitchProDevice::~CUSBGamePadSwitchProDevice()>:
   8c1c0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8c1c4:   90000141    adrp    x1, b4000 <From+0x140>
   8c1c8:   91176021    add x1, x1, #0x5d8
   8c1cc:   910003fd    mov x29, sp
   8c1d0:   f9000bf3    str x19, [sp, #16]
   8c1d4:   aa0003f3    mov x19, x0
   8c1d8:   f9000001    str x1, [x0]
   8c1dc:   94003731    bl  99ea0 <CUSBGamePadDevice::~CUSBGamePadDevice()>
   8c1e0:   aa1303e0    mov x0, x19
   8c1e4:   f9400bf3    ldr x19, [sp, #16]
   8c1e8:   d2802c01    mov x1, #0x160
   8c1ec:   a8c27bfd    ldp x29, x30, [sp], #32
   8c1f0:   14006d9c    b   a7860 <operator delete(void*, unsigned long)>
   8c1f4:   d503201f    nop
   8c1f8:   d503201f    nop
   8c1fc:   d503201f    nop

000000000008c200 <CUSBGamePadSwitchProDevice::SetRumbleMode(TGamePadRumbleMode)>:
   8c200:   a9b77bfd    stp x29, x30, [sp, #-144]!
   8c204:   b20903e2    mov x2, #0x80000000800000
   8c208:   91017fe4    add x4, sp, #0x5f
   8c20c:   927ae484    and x4, x4, #0xffffffffffffffc0
   8c210:   910003fd    mov x29, sp
   8c214:   f2800202    movk    x2, #0x10
   8c218:   d2800003    mov x3, #0x0
   8c21c:   f9000bf3    str x19, [sp, #16]
   8c220:   7100043f    cmp w1, #0x1
   8c224:   a9000c82    stp x2, x3, [x4]
   8c228:   a9017c9f    stp xzr, xzr, [x4, #16]
   8c22c:   a9027c9f    stp xzr, xzr, [x4, #32]
   8c230:   a9037c9f    stp xzr, xzr, [x4, #48]
   8c234:   54000460    b.eq    8c2c0 <CUSBGamePadSwitchProDevice::SetRumbleMode(TGamePadRumbleMode)+0xc0>
   8c238:   7100083f    cmp w1, #0x2
   8c23c:   540000e0    b.eq    8c258 <CUSBGamePadSwitchProDevice::SetRumbleMode(TGamePadRumbleMode)+0x58>
   8c240:   34000141    cbz w1, 8c268 <CUSBGamePadSwitchProDevice::SetRumbleMode(TGamePadRumbleMode)+0x68>
   8c244:   52800033    mov w19, #0x1
   8c248:   2a1303e0    mov w0, w19
   8c24c:   f9400bf3    ldr x19, [sp, #16]
   8c250:   a8c97bfd    ldp x29, x30, [sp], #144
   8c254:   d65f03c0    ret
   8c258:   52800402    mov w2, #0x20
   8c25c:   128013a1    mov w1, #0xffffff62
   8c260:   39000c82    strb    w2, [x4, #3]
   8c264:   79000881    strh    w1, [x4, #4]
   8c268:   39456405    ldrb    w5, [x0, #345]
   8c26c:   aa0403e1    mov x1, x4
   8c270:   52800003    mov w3, #0x0
   8c274:   52800142    mov w2, #0xa
   8c278:   110004a6    add w6, w5, #0x1
   8c27c:   12000ca5    and w5, w5, #0xf
   8c280:   39056406    strb    w6, [x0, #345]
   8c284:   39000485    strb    w5, [x4, #1]
   8c288:   94000502    bl  8d690 <CUSBHIDDevice::SendToEndpointOut(void const*, unsigned int, unsigned int)>
   8c28c:   12001c13    and w19, w0, #0xff
   8c290:   3707fda0    tbnz    w0, #0, 8c244 <CUSBGamePadSwitchProDevice::SetRumbleMode(TGamePadRumbleMode)+0x44>
   8c294:   94004cdb    bl  9f600 <CLogger::Get()>
   8c298:   90000123    adrp    x3, b0000 <_etext+0xf9c>
   8c29c:   90000141    adrp    x1, b4000 <From+0x140>
   8c2a0:   91360063    add x3, x3, #0xd80
   8c2a4:   911a0021    add x1, x1, #0x680
   8c2a8:   52800022    mov w2, #0x1
   8c2ac:   94004ebd    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8c2b0:   2a1303e0    mov w0, w19
   8c2b4:   f9400bf3    ldr x19, [sp, #16]
   8c2b8:   a8c97bfd    ldp x29, x30, [sp], #144
   8c2bc:   d65f03c0    ret
   8c2c0:   52841302    mov w2, #0x2098
   8c2c4:   128013a1    mov w1, #0xffffff62
   8c2c8:   79000c82    strh    w2, [x4, #6]
   8c2cc:   79001081    strh    w1, [x4, #8]
   8c2d0:   17ffffe6    b   8c268 <CUSBGamePadSwitchProDevice::SetRumbleMode(TGamePadRumbleMode)+0x68>
   8c2d4:   d503201f    nop
   8c2d8:   d503201f    nop
   8c2dc:   d503201f    nop

000000000008c2e0 <CUSBGamePadSwitchProDevice::DecodeReport(unsigned char const*)>:
   8c2e0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8c2e4:   910003fd    mov x29, sp
   8c2e8:   f9000bf3    str x19, [sp, #16]
   8c2ec:   aa0103f3    mov x19, x1
   8c2f0:   39400022    ldrb    w2, [x1]
   8c2f4:   7100c05f    cmp w2, #0x30
   8c2f8:   54000e21    b.ne    8c4bc <CUSBGamePadSwitchProDevice::DecodeReport(unsigned char const*)+0x1dc>
   8c2fc:   b9012c1f    str wzr, [x0, #300]
   8c300:   39400c23    ldrb    w3, [x1, #3]
   8c304:   53190063    ubfiz   w3, w3, #7, #1
   8c308:   b9012c03    str w3, [x0, #300]
   8c30c:   39400c22    ldrb    w2, [x1, #3]
   8c310:   36080082    tbz w2, #1, 8c320 <CUSBGamePadSwitchProDevice::DecodeReport(unsigned char const*)+0x40>
   8c314:   32160063    orr w3, w3, #0x400
   8c318:   b9012c03    str w3, [x0, #300]
   8c31c:   39400c22    ldrb    w2, [x1, #3]
   8c320:   361000a2    tbz w2, #2, 8c334 <CUSBGamePadSwitchProDevice::DecodeReport(unsigned char const*)+0x54>
   8c324:   b9412c01    ldr w1, [x0, #300]
   8c328:   32180021    orr w1, w1, #0x100
   8c32c:   b9012c01    str w1, [x0, #300]
   8c330:   39400e62    ldrb    w2, [x19, #3]
   8c334:   361800a2    tbz w2, #3, 8c348 <CUSBGamePadSwitchProDevice::DecodeReport(unsigned char const*)+0x68>
   8c338:   b9412c01    ldr w1, [x0, #300]
   8c33c:   32170021    orr w1, w1, #0x200
   8c340:   b9012c01    str w1, [x0, #300]
   8c344:   39400e62    ldrb    w2, [x19, #3]
   8c348:   363000a2    tbz w2, #6, 8c35c <CUSBGamePadSwitchProDevice::DecodeReport(unsigned char const*)+0x7c>
   8c34c:   b9412c01    ldr w1, [x0, #300]
   8c350:   321a0021    orr w1, w1, #0x40
   8c354:   b9012c01    str w1, [x0, #300]
   8c358:   39400e62    ldrb    w2, [x19, #3]
   8c35c:   373809c2    tbnz    w2, #7, 8c494 <CUSBGamePadSwitchProDevice::DecodeReport(unsigned char const*)+0x1b4>
   8c360:   39401262    ldrb    w2, [x19, #4]
   8c364:   360000a2    tbz w2, #0, 8c378 <CUSBGamePadSwitchProDevice::DecodeReport(unsigned char const*)+0x98>
   8c368:   b9412c01    ldr w1, [x0, #300]
   8c36c:   320d0021    orr w1, w1, #0x80000
   8c370:   b9012c01    str w1, [x0, #300]
   8c374:   39401262    ldrb    w2, [x19, #4]
   8c378:   360800a2    tbz w2, #1, 8c38c <CUSBGamePadSwitchProDevice::DecodeReport(unsigned char const*)+0xac>
   8c37c:   b9412c01    ldr w1, [x0, #300]
   8c380:   320c0021    orr w1, w1, #0x100000
   8c384:   b9012c01    str w1, [x0, #300]
   8c388:   39401262    ldrb    w2, [x19, #4]
   8c38c:   361000a2    tbz w2, #2, 8c3a0 <CUSBGamePadSwitchProDevice::DecodeReport(unsigned char const*)+0xc0>
   8c390:   b9412c01    ldr w1, [x0, #300]
   8c394:   32130021    orr w1, w1, #0x2000
   8c398:   b9012c01    str w1, [x0, #300]
   8c39c:   39401262    ldrb    w2, [x19, #4]
   8c3a0:   361800a2    tbz w2, #3, 8c3b4 <CUSBGamePadSwitchProDevice::DecodeReport(unsigned char const*)+0xd4>
   8c3a4:   b9412c01    ldr w1, [x0, #300]
   8c3a8:   32140021    orr w1, w1, #0x1000
   8c3ac:   b9012c01    str w1, [x0, #300]
   8c3b0:   39401262    ldrb    w2, [x19, #4]
   8c3b4:   362000a2    tbz w2, #4, 8c3c8 <CUSBGamePadSwitchProDevice::DecodeReport(unsigned char const*)+0xe8>
   8c3b8:   b9412c01    ldr w1, [x0, #300]
   8c3bc:   32000021    orr w1, w1, #0x1
   8c3c0:   b9012c01    str w1, [x0, #300]
   8c3c4:   39401262    ldrb    w2, [x19, #4]
   8c3c8:   36280082    tbz w2, #5, 8c3d8 <CUSBGamePadSwitchProDevice::DecodeReport(unsigned char const*)+0xf8>
   8c3cc:   b9412c01    ldr w1, [x0, #300]
   8c3d0:   32150021    orr w1, w1, #0x800
   8c3d4:   b9012c01    str w1, [x0, #300]
   8c3d8:   39401662    ldrb    w2, [x19, #5]
   8c3dc:   360000a2    tbz w2, #0, 8c3f0 <CUSBGamePadSwitchProDevice::DecodeReport(unsigned char const*)+0x110>
   8c3e0:   b9412c01    ldr w1, [x0, #300]
   8c3e4:   320f0021    orr w1, w1, #0x20000
   8c3e8:   b9012c01    str w1, [x0, #300]
   8c3ec:   39401662    ldrb    w2, [x19, #5]
   8c3f0:   360800a2    tbz w2, #1, 8c404 <CUSBGamePadSwitchProDevice::DecodeReport(unsigned char const*)+0x124>
   8c3f4:   b9412c01    ldr w1, [x0, #300]
   8c3f8:   32110021    orr w1, w1, #0x8000
   8c3fc:   b9012c01    str w1, [x0, #300]
   8c400:   39401662    ldrb    w2, [x19, #5]
   8c404:   361000a2    tbz w2, #2, 8c418 <CUSBGamePadSwitchProDevice::DecodeReport(unsigned char const*)+0x138>
   8c408:   b9412c01    ldr w1, [x0, #300]
   8c40c:   32100021    orr w1, w1, #0x10000
   8c410:   b9012c01    str w1, [x0, #300]
   8c414:   39401662    ldrb    w2, [x19, #5]
   8c418:   361800a2    tbz w2, #3, 8c42c <CUSBGamePadSwitchProDevice::DecodeReport(unsigned char const*)+0x14c>
   8c41c:   b9412c01    ldr w1, [x0, #300]
   8c420:   320e0021    orr w1, w1, #0x40000
   8c424:   b9012c01    str w1, [x0, #300]
   8c428:   39401662    ldrb    w2, [x19, #5]
   8c42c:   363000a2    tbz w2, #6, 8c440 <CUSBGamePadSwitchProDevice::DecodeReport(unsigned char const*)+0x160>
   8c430:   b9412c01    ldr w1, [x0, #300]
   8c434:   321b0021    orr w1, w1, #0x20
   8c438:   b9012c01    str w1, [x0, #300]
   8c43c:   39401662    ldrb    w2, [x19, #5]
   8c440:   37380362    tbnz    w2, #7, 8c4ac <CUSBGamePadSwitchProDevice::DecodeReport(unsigned char const*)+0x1cc>
   8c444:   39401a61    ldrb    w1, [x19, #6]
   8c448:   52801fe3    mov w3, #0xff
   8c44c:   39401e62    ldrb    w2, [x19, #7]
   8c450:   2a022022    orr w2, w1, w2, lsl #8
   8c454:   d3442c42    ubfx    x2, x2, #4, #8
   8c458:   b9004c02    str w2, [x0, #76]
   8c45c:   39402262    ldrb    w2, [x19, #8]
   8c460:   4b020062    sub w2, w3, w2
   8c464:   b9005802    str w2, [x0, #88]
   8c468:   39402661    ldrb    w1, [x19, #9]
   8c46c:   39402a62    ldrb    w2, [x19, #10]
   8c470:   2a022022    orr w2, w1, w2, lsl #8
   8c474:   d3442c42    ubfx    x2, x2, #4, #8
   8c478:   b9006402    str w2, [x0, #100]
   8c47c:   39402e61    ldrb    w1, [x19, #11]
   8c480:   f9400bf3    ldr x19, [sp, #16]
   8c484:   4b010063    sub w3, w3, w1
   8c488:   b9007003    str w3, [x0, #112]
   8c48c:   a8c27bfd    ldp x29, x30, [sp], #32
   8c490:   d65f03c0    ret
   8c494:   b9412c01    ldr w1, [x0, #300]
   8c498:   321c0021    orr w1, w1, #0x10
   8c49c:   b9012c01    str w1, [x0, #300]
   8c4a0:   39401262    ldrb    w2, [x19, #4]
   8c4a4:   3607f6a2    tbz w2, #0, 8c378 <CUSBGamePadSwitchProDevice::DecodeReport(unsigned char const*)+0x98>
   8c4a8:   17ffffb0    b   8c368 <CUSBGamePadSwitchProDevice::DecodeReport(unsigned char const*)+0x88>
   8c4ac:   b9412c01    ldr w1, [x0, #300]
   8c4b0:   321d0021    orr w1, w1, #0x8
   8c4b4:   b9012c01    str w1, [x0, #300]
   8c4b8:   17ffffe3    b   8c444 <CUSBGamePadSwitchProDevice::DecodeReport(unsigned char const*)+0x164>
   8c4bc:   94004c51    bl  9f600 <CLogger::Get()>
   8c4c0:   90000123    adrp    x3, b0000 <_etext+0xf9c>
   8c4c4:   90000141    adrp    x1, b4000 <From+0x140>
   8c4c8:   39400264    ldrb    w4, [x19]
   8c4cc:   91366063    add x3, x3, #0xd98
   8c4d0:   911a0021    add x1, x1, #0x680
   8c4d4:   f9400bf3    ldr x19, [sp, #16]
   8c4d8:   52800062    mov w2, #0x3
   8c4dc:   a8c27bfd    ldp x29, x30, [sp], #32
   8c4e0:   14004e30    b   9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8c4e4:   d503201f    nop
   8c4e8:   d503201f    nop
   8c4ec:   d503201f    nop

000000000008c4f0 <CUSBGamePadSwitchProDevice::SetLEDMode(TGamePadLEDMode)>:
   8c4f0:   a9b67bfd    stp x29, x30, [sp, #-160]!
   8c4f4:   910003fd    mov x29, sp
   8c4f8:   9101bfe4    add x4, sp, #0x6f
   8c4fc:   927ae484    and x4, x4, #0xffffffffffffffc0
   8c500:   d28001a2    mov x2, #0xd
   8c504:   a90153f3    stp x19, x20, [sp, #16]
   8c508:   90000154    adrp    x20, b4000 <From+0x140>
   8c50c:   911a0294    add x20, x20, #0x680
   8c510:   aa0003f3    mov x19, x0
   8c514:   aa0403e0    mov x0, x4
   8c518:   f90013f5    str x21, [sp, #32]
   8c51c:   2a0103f5    mov w21, w1
   8c520:   91004281    add x1, x20, #0x10
   8c524:   94006a15    bl  a6d78 <memcpy>
   8c528:   39456666    ldrb    w6, [x19, #345]
   8c52c:   4f000400    movi    v0.4s, #0x0
   8c530:   aa0003e4    mov x4, x0
   8c534:   91003405    add x5, x0, #0xd
   8c538:   aa0403e1    mov x1, x4
   8c53c:   aa1303e0    mov x0, x19
   8c540:   52800003    mov w3, #0x0
   8c544:   39002c95    strb    w21, [x4, #11]
   8c548:   52800182    mov w2, #0xc
   8c54c:   7803d09f    sturh   wzr, [x4, #61]
   8c550:   ad0000a0    stp q0, q0, [x5]
   8c554:   110004c7    add w7, w6, #0x1
   8c558:   12000cc6    and w6, w6, #0xf
   8c55c:   3d8008a0    str q0, [x5, #32]
   8c560:   3900fc9f    strb    wzr, [x4, #63]
   8c564:   39056667    strb    w7, [x19, #345]
   8c568:   39000486    strb    w6, [x4, #1]
   8c56c:   94000449    bl  8d690 <CUSBHIDDevice::SendToEndpointOut(void const*, unsigned int, unsigned int)>
   8c570:   2a0003f3    mov w19, w0
   8c574:   360000d3    tbz w19, #0, 8c58c <CUSBGamePadSwitchProDevice::SetLEDMode(TGamePadLEDMode)+0x9c>
   8c578:   f94013f5    ldr x21, [sp, #32]
   8c57c:   2a1303e0    mov w0, w19
   8c580:   a94153f3    ldp x19, x20, [sp, #16]
   8c584:   a8ca7bfd    ldp x29, x30, [sp], #160
   8c588:   d65f03c0    ret
   8c58c:   94004c1d    bl  9f600 <CLogger::Get()>
   8c590:   aa1403e1    mov x1, x20
   8c594:   52800022    mov w2, #0x1
   8c598:   90000123    adrp    x3, b0000 <_etext+0xf9c>
   8c59c:   9136e063    add x3, x3, #0xdb8
   8c5a0:   94004e00    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8c5a4:   f94013f5    ldr x21, [sp, #32]
   8c5a8:   2a1303e0    mov w0, w19
   8c5ac:   a94153f3    ldp x19, x20, [sp, #16]
   8c5b0:   a8ca7bfd    ldp x29, x30, [sp], #160
   8c5b4:   d65f03c0    ret
   8c5b8:   d503201f    nop
   8c5bc:   d503201f    nop

000000000008c5c0 <CUSBGamePadSwitchProDevice::CUSBGamePadSwitchProDevice(CUSBFunction*)>:
   8c5c0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8c5c4:   910003fd    mov x29, sp
   8c5c8:   f9000bf3    str x19, [sp, #16]
   8c5cc:   aa0003f3    mov x19, x0
   8c5d0:   94003620    bl  99e50 <CUSBGamePadDevice::CUSBGamePadDevice(CUSBFunction*)>
   8c5d4:   90000144    adrp    x4, b4000 <From+0x140>
   8c5d8:   91176084    add x4, x4, #0x5d8
   8c5dc:   aa1303e0    mov x0, x19
   8c5e0:   52800003    mov w3, #0x0
   8c5e4:   52800002    mov w2, #0x0
   8c5e8:   52800061    mov w1, #0x3
   8c5ec:   f9000264    str x4, [x19]
   8c5f0:   97fff804    bl  8a600 <CUSBFunction::SelectInterfaceByClass(unsigned char, unsigned char, unsigned char)>
   8c5f4:   39056260    strb    w0, [x19, #344]
   8c5f8:   3905667f    strb    wzr, [x19, #345]
   8c5fc:   f9400bf3    ldr x19, [sp, #16]
   8c600:   a8c27bfd    ldp x29, x30, [sp], #32
   8c604:   d65f03c0    ret
   8c608:   d503201f    nop
   8c60c:   d503201f    nop

000000000008c610 <CUSBGamePadSwitchProDevice::Configure()>:
   8c610:   a9ae7bfd    stp x29, x30, [sp, #-288]!
   8c614:   910003fd    mov x29, sp
   8c618:   9101bfa1    add x1, x29, #0x6f
   8c61c:   a90153f3    stp x19, x20, [sp, #16]
   8c620:   f90013f5    str x21, [sp, #32]
   8c624:   927ae435    and x21, x1, #0xffffffffffffffc0
   8c628:   39456001    ldrb    w1, [x0, #344]
   8c62c:   36000f21    tbz w1, #0, 8c810 <CUSBGamePadSwitchProDevice::Configure()+0x200>
   8c630:   52800801    mov w1, #0x40
   8c634:   aa0003f3    mov x19, x0
   8c638:   7902a001    strh    w1, [x0, #336]
   8c63c:   9400359d    bl  99cb0 <CUSBGamePadDevice::Configure()>
   8c640:   36001000    tbz w0, #0, 8c840 <CUSBGamePadSwitchProDevice::Configure()+0x230>
   8c644:   7942a262    ldrh    w2, [x19, #336]
   8c648:   52800081    mov w1, #0x4
   8c64c:   d2c01fe5    mov x5, #0xff00000000
   8c650:   52801fe4    mov w4, #0xff
   8c654:   528002a6    mov w6, #0x15
   8c658:   b9010e7f    str wzr, [x19, #268]
   8c65c:   b9004a61    str w1, [x19, #72]
   8c660:   52800003    mov w3, #0x0
   8c664:   aa1303e0    mov x0, x19
   8c668:   f9002a65    str x5, [x19, #80]
   8c66c:   290b927f    stp wzr, w4, [x19, #92]
   8c670:   2a0203e1    mov w1, w2
   8c674:   f9003665    str x5, [x19, #104]
   8c678:   d1000421    sub x1, x1, #0x1
   8c67c:   290e927f    stp wzr, w4, [x19, #116]
   8c680:   b2401421    orr x1, x1, #0x3f
   8c684:   b9012a66    str w6, [x19, #296]
   8c688:   91010021    add x1, x1, #0x40
   8c68c:   927cec21    and x1, x1, #0xfffffffffffffff0
   8c690:   cb2163ff    sub sp, sp, x1
   8c694:   9100fff4    add x20, sp, #0x3f
   8c698:   927ae694    and x20, x20, #0xffffffffffffffc0
   8c69c:   aa1403e1    mov x1, x20
   8c6a0:   94000464    bl  8d830 <CUSBHIDDevice::ReceiveFromEndpointIn(void*, unsigned int, unsigned int)>
   8c6a4:   d2807004    mov x4, #0x380
   8c6a8:   d2800005    mov x5, #0x0
   8c6ac:   a9097ebf    stp xzr, xzr, [x21, #144]
   8c6b0:   910202a1    add x1, x21, #0x80
   8c6b4:   aa1303e0    mov x0, x19
   8c6b8:   52800003    mov w3, #0x0
   8c6bc:   52800042    mov w2, #0x2
   8c6c0:   a9027c3f    stp xzr, xzr, [x1, #32]
   8c6c4:   a9037c3f    stp xzr, xzr, [x1, #48]
   8c6c8:   a90816a4    stp x4, x5, [x21, #128]
   8c6cc:   940003f1    bl  8d690 <CUSBHIDDevice::SendToEndpointOut(void const*, unsigned int, unsigned int)>
   8c6d0:   36000860    tbz w0, #0, 8c7dc <CUSBGamePadSwitchProDevice::Configure()+0x1cc>
   8c6d4:   7942a262    ldrh    w2, [x19, #336]
   8c6d8:   52800003    mov w3, #0x0
   8c6dc:   aa1403e1    mov x1, x20
   8c6e0:   aa1303e0    mov x0, x19
   8c6e4:   94000453    bl  8d830 <CUSBHIDDevice::ReceiveFromEndpointIn(void*, unsigned int, unsigned int)>
   8c6e8:   7100001f    cmp w0, #0x0
   8c6ec:   54000bad    b.le    8c860 <CUSBGamePadSwitchProDevice::Configure()+0x250>
   8c6f0:   39400280    ldrb    w0, [x20]
   8c6f4:   7102041f    cmp w0, #0x81
   8c6f8:   54000721    b.ne    8c7dc <CUSBGamePadSwitchProDevice::Configure()+0x1cc>
   8c6fc:   39400680    ldrb    w0, [x20, #1]
   8c700:   71000c1f    cmp w0, #0x3
   8c704:   540006c1    b.ne    8c7dc <CUSBGamePadSwitchProDevice::Configure()+0x1cc>
   8c708:   d2805004    mov x4, #0x280
   8c70c:   d2800005    mov x5, #0x0
   8c710:   a9057ebf    stp xzr, xzr, [x21, #80]
   8c714:   910102a1    add x1, x21, #0x40
   8c718:   52800003    mov w3, #0x0
   8c71c:   52800042    mov w2, #0x2
   8c720:   aa1303e0    mov x0, x19
   8c724:   a9027c3f    stp xzr, xzr, [x1, #32]
   8c728:   a9037c3f    stp xzr, xzr, [x1, #48]
   8c72c:   a90416a4    stp x4, x5, [x21, #64]
   8c730:   940003d8    bl  8d690 <CUSBHIDDevice::SendToEndpointOut(void const*, unsigned int, unsigned int)>
   8c734:   36000760    tbz w0, #0, 8c820 <CUSBGamePadSwitchProDevice::Configure()+0x210>
   8c738:   7942a262    ldrh    w2, [x19, #336]
   8c73c:   52800003    mov w3, #0x0
   8c740:   aa1403e1    mov x1, x20
   8c744:   aa1303e0    mov x0, x19
   8c748:   9400043a    bl  8d830 <CUSBHIDDevice::ReceiveFromEndpointIn(void*, unsigned int, unsigned int)>
   8c74c:   7100001f    cmp w0, #0x0
   8c750:   5400098d    b.le    8c880 <CUSBGamePadSwitchProDevice::Configure()+0x270>
   8c754:   39400280    ldrb    w0, [x20]
   8c758:   7102041f    cmp w0, #0x81
   8c75c:   54000621    b.ne    8c820 <CUSBGamePadSwitchProDevice::Configure()+0x210>
   8c760:   39400680    ldrb    w0, [x20, #1]
   8c764:   7100081f    cmp w0, #0x2
   8c768:   540005c1    b.ne    8c820 <CUSBGamePadSwitchProDevice::Configure()+0x210>
   8c76c:   d2809004    mov x4, #0x480
   8c770:   d2800005    mov x5, #0x0
   8c774:   a9017ebf    stp xzr, xzr, [x21, #16]
   8c778:   aa1503e1    mov x1, x21
   8c77c:   52800003    mov w3, #0x0
   8c780:   52800042    mov w2, #0x2
   8c784:   aa1303e0    mov x0, x19
   8c788:   a90016a4    stp x4, x5, [x21]
   8c78c:   a9027ebf    stp xzr, xzr, [x21, #32]
   8c790:   a9037ebf    stp xzr, xzr, [x21, #48]
   8c794:   940003bf    bl  8d690 <CUSBHIDDevice::SendToEndpointOut(void const*, unsigned int, unsigned int)>
   8c798:   36000940    tbz w0, #0, 8c8c0 <CUSBGamePadSwitchProDevice::Configure()+0x2b0>
   8c79c:   f9400262    ldr x2, [x19]
   8c7a0:   aa1303e0    mov x0, x19
   8c7a4:   b9415661    ldr w1, [x19, #340]
   8c7a8:   f9404042    ldr x2, [x2, #128]
   8c7ac:   d63f0040    blr x2
   8c7b0:   7942a262    ldrh    w2, [x19, #336]
   8c7b4:   aa1403e1    mov x1, x20
   8c7b8:   aa1303e0    mov x0, x19
   8c7bc:   52800003    mov w3, #0x0
   8c7c0:   9400041c    bl  8d830 <CUSBHIDDevice::ReceiveFromEndpointIn(void*, unsigned int, unsigned int)>
   8c7c4:   7100001f    cmp w0, #0x0
   8c7c8:   540006cd    b.le    8c8a0 <CUSBGamePadSwitchProDevice::Configure()+0x290>
   8c7cc:   aa1303e0    mov x0, x19
   8c7d0:   94000440    bl  8d8d0 <CUSBHIDDevice::StartRequest()>
   8c7d4:   12001c00    and w0, w0, #0xff
   8c7d8:   14000009    b   8c7fc <CUSBGamePadSwitchProDevice::Configure()+0x1ec>
   8c7dc:   94004b89    bl  9f600 <CLogger::Get()>
   8c7e0:   90000123    adrp    x3, b0000 <_etext+0xf9c>
   8c7e4:   90000141    adrp    x1, b4000 <From+0x140>
   8c7e8:   91374063    add x3, x3, #0xdd0
   8c7ec:   911a0021    add x1, x1, #0x680
   8c7f0:   52800022    mov w2, #0x1
   8c7f4:   94004d6b    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8c7f8:   52800000    mov w0, #0x0
   8c7fc:   910003bf    mov sp, x29
   8c800:   a94153f3    ldp x19, x20, [sp, #16]
   8c804:   f94013f5    ldr x21, [sp, #32]
   8c808:   a8d27bfd    ldp x29, x30, [sp], #288
   8c80c:   d65f03c0    ret
   8c810:   90000141    adrp    x1, b4000 <From+0x140>
   8c814:   911a0021    add x1, x1, #0x680
   8c818:   97fff766    bl  8a5b0 <CUSBFunction::ConfigurationError(char const*) const>
   8c81c:   17fffff7    b   8c7f8 <CUSBGamePadSwitchProDevice::Configure()+0x1e8>
   8c820:   94004b78    bl  9f600 <CLogger::Get()>
   8c824:   90000123    adrp    x3, b0000 <_etext+0xf9c>
   8c828:   90000141    adrp    x1, b4000 <From+0x140>
   8c82c:   91384063    add x3, x3, #0xe10
   8c830:   911a0021    add x1, x1, #0x680
   8c834:   52800022    mov w2, #0x1
   8c838:   94004d5a    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8c83c:   17ffffef    b   8c7f8 <CUSBGamePadSwitchProDevice::Configure()+0x1e8>
   8c840:   94004b70    bl  9f600 <CLogger::Get()>
   8c844:   90000123    adrp    x3, b0000 <_etext+0xf9c>
   8c848:   90000141    adrp    x1, b4000 <From+0x140>
   8c84c:   91314063    add x3, x3, #0xc50
   8c850:   911a0021    add x1, x1, #0x680
   8c854:   52800022    mov w2, #0x1
   8c858:   94004d52    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8c85c:   17ffffe7    b   8c7f8 <CUSBGamePadSwitchProDevice::Configure()+0x1e8>
   8c860:   94004b68    bl  9f600 <CLogger::Get()>
   8c864:   90000123    adrp    x3, b0000 <_etext+0xf9c>
   8c868:   90000141    adrp    x1, b4000 <From+0x140>
   8c86c:   9137c063    add x3, x3, #0xdf0
   8c870:   911a0021    add x1, x1, #0x680
   8c874:   52800022    mov w2, #0x1
   8c878:   94004d4a    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8c87c:   17ffffdf    b   8c7f8 <CUSBGamePadSwitchProDevice::Configure()+0x1e8>
   8c880:   94004b60    bl  9f600 <CLogger::Get()>
   8c884:   90000123    adrp    x3, b0000 <_etext+0xf9c>
   8c888:   90000141    adrp    x1, b4000 <From+0x140>
   8c88c:   9138c063    add x3, x3, #0xe30
   8c890:   911a0021    add x1, x1, #0x680
   8c894:   52800022    mov w2, #0x1
   8c898:   94004d42    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8c89c:   17ffffd7    b   8c7f8 <CUSBGamePadSwitchProDevice::Configure()+0x1e8>
   8c8a0:   94004b58    bl  9f600 <CLogger::Get()>
   8c8a4:   90000123    adrp    x3, b0000 <_etext+0xf9c>
   8c8a8:   90000141    adrp    x1, b4000 <From+0x140>
   8c8ac:   9139c063    add x3, x3, #0xe70
   8c8b0:   911a0021    add x1, x1, #0x680
   8c8b4:   52800022    mov w2, #0x1
   8c8b8:   94004d3a    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8c8bc:   17ffffc4    b   8c7cc <CUSBGamePadSwitchProDevice::Configure()+0x1bc>
   8c8c0:   94004b50    bl  9f600 <CLogger::Get()>
   8c8c4:   90000123    adrp    x3, b0000 <_etext+0xf9c>
   8c8c8:   90000141    adrp    x1, b4000 <From+0x140>
   8c8cc:   91394063    add x3, x3, #0xe50
   8c8d0:   911a0021    add x1, x1, #0x680
   8c8d4:   52800022    mov w2, #0x1
   8c8d8:   94004d32    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8c8dc:   17ffffc7    b   8c7f8 <CUSBGamePadSwitchProDevice::Configure()+0x1e8>

000000000008c8e0 <CUSBGamePadSwitchProDevice::GetProperties()>:
   8c8e0:   52800960    mov w0, #0x4b
   8c8e4:   d65f03c0    ret
    ...

000000000008c8f0 <CUSBGamePadXbox360Device::~CUSBGamePadXbox360Device()>:
   8c8f0:   90000141    adrp    x1, b4000 <From+0x140>
   8c8f4:   911ac021    add x1, x1, #0x6b0
   8c8f8:   f9000001    str x1, [x0]
   8c8fc:   14003569    b   99ea0 <CUSBGamePadDevice::~CUSBGamePadDevice()>

000000000008c900 <CUSBGamePadXbox360Device::~CUSBGamePadXbox360Device()>:
   8c900:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8c904:   90000141    adrp    x1, b4000 <From+0x140>
   8c908:   911ac021    add x1, x1, #0x6b0
   8c90c:   910003fd    mov x29, sp
   8c910:   f9000bf3    str x19, [sp, #16]
   8c914:   aa0003f3    mov x19, x0
   8c918:   f9000001    str x1, [x0]
   8c91c:   94003561    bl  99ea0 <CUSBGamePadDevice::~CUSBGamePadDevice()>
   8c920:   aa1303e0    mov x0, x19
   8c924:   f9400bf3    ldr x19, [sp, #16]
   8c928:   d2802b01    mov x1, #0x158
   8c92c:   a8c27bfd    ldp x29, x30, [sp], #32
   8c930:   14006bcc    b   a7860 <operator delete(void*, unsigned long)>
   8c934:   d503201f    nop
   8c938:   d503201f    nop
   8c93c:   d503201f    nop

000000000008c940 <CUSBGamePadXbox360Device::DecodeReport(unsigned char const*)>:
   8c940:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   8c944:   910003fd    mov x29, sp
   8c948:   b40008c1    cbz x1, 8ca60 <CUSBGamePadXbox360Device::DecodeReport(unsigned char const*)+0x120>
   8c94c:   52828003    mov w3, #0x1400
   8c950:   39400024    ldrb    w4, [x1]
   8c954:   39400422    ldrb    w2, [x1, #1]
   8c958:   2a022082    orr w2, w4, w2, lsl #8
   8c95c:   6b03005f    cmp w2, w3
   8c960:   540008c1    b.ne    8ca78 <CUSBGamePadXbox360Device::DecodeReport(unsigned char const*)+0x138>
   8c964:   39400824    ldrb    w4, [x1, #2]
   8c968:   90000146    adrp    x6, b4000 <From+0x140>
   8c96c:   911d40c7    add x7, x6, #0x750
   8c970:   aa0703e2    mov x2, x7
   8c974:   910100e5    add x5, x7, #0x40
   8c978:   39400c23    ldrb    w3, [x1, #3]
   8c97c:   b9012c1f    str wzr, [x0, #300]
   8c980:   2a032083    orr w3, w4, w3, lsl #8
   8c984:   d503201f    nop
   8c988:   360000a3    tbz w3, #0, 8c99c <CUSBGamePadXbox360Device::DecodeReport(unsigned char const*)+0x5c>
   8c98c:   b9412c04    ldr w4, [x0, #300]
   8c990:   b9400046    ldr w6, [x2]
   8c994:   2a060084    orr w4, w4, w6
   8c998:   b9012c04    str w4, [x0, #300]
   8c99c:   91001042    add x2, x2, #0x4
   8c9a0:   53017c63    lsr w3, w3, #1
   8c9a4:   eb0200bf    cmp x5, x2
   8c9a8:   54ffff01    b.ne    8c988 <CUSBGamePadXbox360Device::DecodeReport(unsigned char const*)+0x48>
   8c9ac:   910100e6    add x6, x7, #0x40
   8c9b0:   d2800005    mov x5, #0x0
   8c9b4:   52801fe7    mov w7, #0xff
   8c9b8:   8b254422    add x2, x1, w5, uxtw #1
   8c9bc:   39401843    ldrb    w3, [x2, #6]
   8c9c0:   39401c42    ldrb    w2, [x2, #7]
   8c9c4:   b86578c4    ldr w4, [x6, x5, lsl #2]
   8c9c8:   910004a5    add x5, x5, #0x1
   8c9cc:   aa022062    orr x2, x3, x2, lsl #8
   8c9d0:   d37f7c83    ubfiz   x3, x4, #1, #32
   8c9d4:   93403c42    sxth    x2, w2
   8c9d8:   8b244063    add x3, x3, w4, uxtw
   8c9dc:   8b030803    add x3, x0, x3, lsl #2
   8c9e0:   121e7884    and w4, w4, #0xfffffffd
   8c9e4:   11402042    add w2, w2, #0x8, lsl #12
   8c9e8:   7100049f    cmp w4, #0x1
   8c9ec:   53087c42    lsr w2, w2, #8
   8c9f0:   4b0200e4    sub w4, w7, w2
   8c9f4:   1a820082    csel    w2, w4, w2, eq
   8c9f8:   f10010bf    cmp x5, #0x4
   8c9fc:   b9004c62    str w2, [x3, #76]
   8ca00:   54fffdc1    b.ne    8c9b8 <CUSBGamePadXbox360Device::DecodeReport(unsigned char const*)+0x78>
   8ca04:   39401022    ldrb    w2, [x1, #4]
   8ca08:   b9007c02    str w2, [x0, #124]
   8ca0c:   39c01022    ldrsb   w2, [x1, #4]
   8ca10:   37f80182    tbnz    w2, #31, 8ca40 <CUSBGamePadXbox360Device::DecodeReport(unsigned char const*)+0x100>
   8ca14:   39401422    ldrb    w2, [x1, #5]
   8ca18:   b9008802    str w2, [x0, #136]
   8ca1c:   39c01421    ldrsb   w1, [x1, #5]
   8ca20:   37f80061    tbnz    w1, #31, 8ca2c <CUSBGamePadXbox360Device::DecodeReport(unsigned char const*)+0xec>
   8ca24:   a8c17bfd    ldp x29, x30, [sp], #16
   8ca28:   d65f03c0    ret
   8ca2c:   b9412c01    ldr w1, [x0, #300]
   8ca30:   321c0021    orr w1, w1, #0x10
   8ca34:   b9012c01    str w1, [x0, #300]
   8ca38:   a8c17bfd    ldp x29, x30, [sp], #16
   8ca3c:   d65f03c0    ret
   8ca40:   b9412c02    ldr w2, [x0, #300]
   8ca44:   321d0042    orr w2, w2, #0x8
   8ca48:   b9012c02    str w2, [x0, #300]
   8ca4c:   39401422    ldrb    w2, [x1, #5]
   8ca50:   b9008802    str w2, [x0, #136]
   8ca54:   39c01421    ldrsb   w1, [x1, #5]
   8ca58:   36fffe61    tbz w1, #31, 8ca24 <CUSBGamePadXbox360Device::DecodeReport(unsigned char const*)+0xe4>
   8ca5c:   17fffff4    b   8ca2c <CUSBGamePadXbox360Device::DecodeReport(unsigned char const*)+0xec>
   8ca60:   90000121    adrp    x1, b0000 <_etext+0xf9c>
   8ca64:   90000120    adrp    x0, b0000 <_etext+0xf9c>
   8ca68:   913a4021    add x1, x1, #0xe90
   8ca6c:   9132c000    add x0, x0, #0xcb0
   8ca70:   52800f02    mov w2, #0x78
   8ca74:   94004013    bl  9cac0 <assertion_failed>
   8ca78:   90000121    adrp    x1, b0000 <_etext+0xf9c>
   8ca7c:   90000120    adrp    x0, b0000 <_etext+0xf9c>
   8ca80:   913a4021    add x1, x1, #0xe90
   8ca84:   913aa000    add x0, x0, #0xea8
   8ca88:   52800f22    mov w2, #0x79
   8ca8c:   9400400d    bl  9cac0 <assertion_failed>

000000000008ca90 <CUSBGamePadXbox360Device::SetLEDMode(TGamePadLEDMode)>:
   8ca90:   a9b87bfd    stp x29, x30, [sp, #-128]!
   8ca94:   2a0103e2    mov w2, w1
   8ca98:   91013fe3    add x3, sp, #0x4f
   8ca9c:   927ae461    and x1, x3, #0xffffffffffffffc0
   8caa0:   93407c43    sxtw    x3, w2
   8caa4:   910003fd    mov x29, sp
   8caa8:   f100107f    cmp x3, #0x4
   8caac:   54000089    b.ls    8cabc <CUSBGamePadXbox360Device::SetLEDMode(TGamePadLEDMode)+0x2c>
   8cab0:   52800000    mov w0, #0x0
   8cab4:   a8c87bfd    ldp x29, x30, [sp], #128
   8cab8:   d65f03c0    ret
   8cabc:   90000143    adrp    x3, b4000 <From+0x140>
   8cac0:   911d4063    add x3, x3, #0x750
   8cac4:   91016063    add x3, x3, #0x58
   8cac8:   52806025    mov w5, #0x301
   8cacc:   3862c864    ldrb    w4, [x3, w2, sxtw]
   8cad0:   52800003    mov w3, #0x0
   8cad4:   52800062    mov w2, #0x3
   8cad8:   79000025    strh    w5, [x1]
   8cadc:   39000824    strb    w4, [x1, #2]
   8cae0:   940002ec    bl  8d690 <CUSBHIDDevice::SendToEndpointOut(void const*, unsigned int, unsigned int)>
   8cae4:   12001c00    and w0, w0, #0xff
   8cae8:   a8c87bfd    ldp x29, x30, [sp], #128
   8caec:   d65f03c0    ret

000000000008caf0 <CUSBGamePadXbox360Device::ReportHandler(unsigned char const*, unsigned int)>:
   8caf0:   f100003f    cmp x1, #0x0
   8caf4:   7a4e1840    ccmp    w2, #0xe, #0x0, ne
   8caf8:   540000c1    b.ne    8cb10 <CUSBGamePadXbox360Device::ReportHandler(unsigned char const*, unsigned int)+0x20>
   8cafc:   39400022    ldrb    w2, [x1]
   8cb00:   35000082    cbnz    w2, 8cb10 <CUSBGamePadXbox360Device::ReportHandler(unsigned char const*, unsigned int)+0x20>
   8cb04:   39400422    ldrb    w2, [x1, #1]
   8cb08:   7100505f    cmp w2, #0x14
   8cb0c:   54000040    b.eq    8cb14 <CUSBGamePadXbox360Device::ReportHandler(unsigned char const*, unsigned int)+0x24>
   8cb10:   d65f03c0    ret
   8cb14:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8cb18:   910003fd    mov x29, sp
   8cb1c:   f940a402    ldr x2, [x0, #328]
   8cb20:   a90153f3    stp x19, x20, [sp, #16]
   8cb24:   aa0003f3    mov x19, x0
   8cb28:   b40001a2    cbz x2, 8cb5c <CUSBGamePadXbox360Device::ReportHandler(unsigned char const*, unsigned int)+0x6c>
   8cb2c:   aa0003f4    mov x20, x0
   8cb30:   f8448682    ldr x2, [x20], #72
   8cb34:   f9404c42    ldr x2, [x2, #152]
   8cb38:   d63f0040    blr x2
   8cb3c:   f940a662    ldr x2, [x19, #328]
   8cb40:   aa1403e1    mov x1, x20
   8cb44:   b9415660    ldr w0, [x19, #340]
   8cb48:   a94153f3    ldp x19, x20, [sp, #16]
   8cb4c:   aa0203f0    mov x16, x2
   8cb50:   a8c27bfd    ldp x29, x30, [sp], #32
   8cb54:   51000400    sub w0, w0, #0x1
   8cb58:   d61f0200    br  x16
   8cb5c:   a94153f3    ldp x19, x20, [sp, #16]
   8cb60:   a8c27bfd    ldp x29, x30, [sp], #32
   8cb64:   d65f03c0    ret
   8cb68:   d503201f    nop
   8cb6c:   d503201f    nop

000000000008cb70 <CUSBGamePadXbox360Device::SetRumbleMode(TGamePadRumbleMode)>:
   8cb70:   a9b67bfd    stp x29, x30, [sp, #-160]!
   8cb74:   910003fd    mov x29, sp
   8cb78:   d2800102    mov x2, #0x8
   8cb7c:   a90153f3    stp x19, x20, [sp, #16]
   8cb80:   9101bff3    add x19, sp, #0x6f
   8cb84:   2a0103f4    mov w20, w1
   8cb88:   927ae673    and x19, x19, #0xffffffffffffffc0
   8cb8c:   52800001    mov w1, #0x0
   8cb90:   f90013f5    str x21, [sp, #32]
   8cb94:   aa0003f5    mov x21, x0
   8cb98:   aa1303e0    mov x0, x19
   8cb9c:   9400685f    bl  a6d18 <memset>
   8cba0:   52800100    mov w0, #0x8
   8cba4:   7100069f    cmp w20, #0x1
   8cba8:   39000660    strb    w0, [x19, #1]
   8cbac:   54000200    b.eq    8cbec <CUSBGamePadXbox360Device::SetRumbleMode(TGamePadRumbleMode)+0x7c>
   8cbb0:   71000a9f    cmp w20, #0x2
   8cbb4:   54000160    b.eq    8cbe0 <CUSBGamePadXbox360Device::SetRumbleMode(TGamePadRumbleMode)+0x70>
   8cbb8:   35000214    cbnz    w20, 8cbf8 <CUSBGamePadXbox360Device::SetRumbleMode(TGamePadRumbleMode)+0x88>
   8cbbc:   aa1303e1    mov x1, x19
   8cbc0:   aa1503e0    mov x0, x21
   8cbc4:   52800003    mov w3, #0x0
   8cbc8:   52800102    mov w2, #0x8
   8cbcc:   940002b1    bl  8d690 <CUSBHIDDevice::SendToEndpointOut(void const*, unsigned int, unsigned int)>
   8cbd0:   a94153f3    ldp x19, x20, [sp, #16]
   8cbd4:   f94013f5    ldr x21, [sp, #32]
   8cbd8:   a8ca7bfd    ldp x29, x30, [sp], #160
   8cbdc:   d65f03c0    ret
   8cbe0:   12800000    mov w0, #0xffffffff
   8cbe4:   39000e60    strb    w0, [x19, #3]
   8cbe8:   17fffff5    b   8cbbc <CUSBGamePadXbox360Device::SetRumbleMode(TGamePadRumbleMode)+0x4c>
   8cbec:   12800000    mov w0, #0xffffffff
   8cbf0:   39001260    strb    w0, [x19, #4]
   8cbf4:   17fffff2    b   8cbbc <CUSBGamePadXbox360Device::SetRumbleMode(TGamePadRumbleMode)+0x4c>
   8cbf8:   90000121    adrp    x1, b0000 <_etext+0xf9c>
   8cbfc:   90000120    adrp    x0, b0000 <_etext+0xf9c>
   8cc00:   913a4021    add x1, x1, #0xe90
   8cc04:   91106000    add x0, x0, #0x418
   8cc08:   52801cc2    mov w2, #0xe6
   8cc0c:   94003fad    bl  9cac0 <assertion_failed>

000000000008cc10 <CUSBGamePadXbox360Device::CUSBGamePadXbox360Device(CUSBFunction*)>:
   8cc10:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8cc14:   910003fd    mov x29, sp
   8cc18:   f9000bf3    str x19, [sp, #16]
   8cc1c:   aa0003f3    mov x19, x0
   8cc20:   9400348c    bl  99e50 <CUSBGamePadDevice::CUSBGamePadDevice(CUSBFunction*)>
   8cc24:   90000140    adrp    x0, b4000 <From+0x140>
   8cc28:   911ac000    add x0, x0, #0x6b0
   8cc2c:   f9000260    str x0, [x19]
   8cc30:   f9400bf3    ldr x19, [sp, #16]
   8cc34:   a8c27bfd    ldp x29, x30, [sp], #32
   8cc38:   d65f03c0    ret
   8cc3c:   d503201f    nop

000000000008cc40 <CUSBGamePadXbox360Device::Configure()>:
   8cc40:   a9b77bfd    stp x29, x30, [sp, #-144]!
   8cc44:   528001c2    mov w2, #0xe
   8cc48:   910003fd    mov x29, sp
   8cc4c:   91017fe1    add x1, sp, #0x5f
   8cc50:   a90153f3    stp x19, x20, [sp, #16]
   8cc54:   aa0003f3    mov x19, x0
   8cc58:   927ae434    and x20, x1, #0xffffffffffffffc0
   8cc5c:   7902a002    strh    w2, [x0, #336]
   8cc60:   94003414    bl  99cb0 <CUSBGamePadDevice::Configure()>
   8cc64:   360005c0    tbz w0, #0, 8cd1c <CUSBGamePadXbox360Device::Configure()+0xdc>
   8cc68:   f9400263    ldr x3, [x19]
   8cc6c:   d2c01fe2    mov x2, #0xff00000000
   8cc70:   52801fe0    mov w0, #0xff
   8cc74:   52800264    mov w4, #0x13
   8cc78:   528000c5    mov w5, #0x6
   8cc7c:   90000001    adrp    x1, 8c000 <CUSBGamePadStandardDevice::Configure()+0x40>
   8cc80:   912a4021    add x1, x1, #0xa90
   8cc84:   f9404063    ldr x3, [x3, #128]
   8cc88:   b9004a65    str w5, [x19, #72]
   8cc8c:   f9002a62    str x2, [x19, #80]
   8cc90:   290b827f    stp wzr, w0, [x19, #92]
   8cc94:   f9003662    str x2, [x19, #104]
   8cc98:   eb01007f    cmp x3, x1
   8cc9c:   290e827f    stp wzr, w0, [x19, #116]
   8cca0:   f9004262    str x2, [x19, #128]
   8cca4:   2911827f    stp wzr, w0, [x19, #140]
   8cca8:   b9010e7f    str wzr, [x19, #268]
   8ccac:   b9012a64    str w4, [x19, #296]
   8ccb0:   b9415661    ldr w1, [x19, #340]
   8ccb4:   540004c1    b.ne    8cd4c <CUSBGamePadXbox360Device::Configure()+0x10c>
   8ccb8:   93407c20    sxtw    x0, w1
   8ccbc:   f100101f    cmp x0, #0x4
   8ccc0:   540000a9    b.ls    8ccd4 <CUSBGamePadXbox360Device::Configure()+0x94>
   8ccc4:   a94153f3    ldp x19, x20, [sp, #16]
   8ccc8:   52800000    mov w0, #0x0
   8cccc:   a8c97bfd    ldp x29, x30, [sp], #144
   8ccd0:   d65f03c0    ret
   8ccd4:   90000140    adrp    x0, b4000 <From+0x140>
   8ccd8:   911d4000    add x0, x0, #0x750
   8ccdc:   91016000    add x0, x0, #0x58
   8cce0:   52806025    mov w5, #0x301
   8cce4:   3861c804    ldrb    w4, [x0, w1, sxtw]
   8cce8:   52800003    mov w3, #0x0
   8ccec:   aa1403e1    mov x1, x20
   8ccf0:   52800062    mov w2, #0x3
   8ccf4:   aa1303e0    mov x0, x19
   8ccf8:   79000285    strh    w5, [x20]
   8ccfc:   39000a84    strb    w4, [x20, #2]
   8cd00:   94000264    bl  8d690 <CUSBHIDDevice::SendToEndpointOut(void const*, unsigned int, unsigned int)>
   8cd04:   12001c00    and w0, w0, #0xff
   8cd08:   3607fde0    tbz w0, #0, 8ccc4 <CUSBGamePadXbox360Device::Configure()+0x84>
   8cd0c:   aa1303e0    mov x0, x19
   8cd10:   a94153f3    ldp x19, x20, [sp, #16]
   8cd14:   a8c97bfd    ldp x29, x30, [sp], #144
   8cd18:   140002ee    b   8d8d0 <CUSBHIDDevice::StartRequest()>
   8cd1c:   94004a39    bl  9f600 <CLogger::Get()>
   8cd20:   90000141    adrp    x1, b4000 <From+0x140>
   8cd24:   911d4021    add x1, x1, #0x750
   8cd28:   90000123    adrp    x3, b0000 <_etext+0xf9c>
   8cd2c:   91018021    add x1, x1, #0x60
   8cd30:   91314063    add x3, x3, #0xc50
   8cd34:   52800022    mov w2, #0x1
   8cd38:   94004c1a    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8cd3c:   a94153f3    ldp x19, x20, [sp, #16]
   8cd40:   52800000    mov w0, #0x0
   8cd44:   a8c97bfd    ldp x29, x30, [sp], #144
   8cd48:   d65f03c0    ret
   8cd4c:   aa1303e0    mov x0, x19
   8cd50:   d63f0060    blr x3
   8cd54:   12001c00    and w0, w0, #0xff
   8cd58:   17ffffec    b   8cd08 <CUSBGamePadXbox360Device::Configure()+0xc8>
   8cd5c:   00000000    udf #0

000000000008cd60 <CUSBGamePadXbox360Device::GetProperties()>:
   8cd60:   52800160    mov w0, #0xb
   8cd64:   d65f03c0    ret
    ...

000000000008cd70 <CUSBGamePadXboxOneDevice::DecodeReport(unsigned char const*)>:
   8cd70:   39401022    ldrb    w2, [x1, #4]
   8cd74:   d3420842    ubfx    x2, x2, #2, #1
   8cd78:   53124442    lsl w2, w2, #14
   8cd7c:   b9012c02    str w2, [x0, #300]
   8cd80:   39401023    ldrb    w3, [x1, #4]
   8cd84:   36180063    tbz w3, #3, 8cd90 <CUSBGamePadXboxOneDevice::DecodeReport(unsigned char const*)+0x20>
   8cd88:   32150042    orr w2, w2, #0x800
   8cd8c:   b9012c02    str w2, [x0, #300]
   8cd90:   36200083    tbz w3, #4, 8cda0 <CUSBGamePadXboxOneDevice::DecodeReport(unsigned char const*)+0x30>
   8cd94:   b9412c02    ldr w2, [x0, #300]
   8cd98:   32170042    orr w2, w2, #0x200
   8cd9c:   b9012c02    str w2, [x0, #300]
   8cda0:   36280083    tbz w3, #5, 8cdb0 <CUSBGamePadXboxOneDevice::DecodeReport(unsigned char const*)+0x40>
   8cda4:   b9412c02    ldr w2, [x0, #300]
   8cda8:   32180042    orr w2, w2, #0x100
   8cdac:   b9012c02    str w2, [x0, #300]
   8cdb0:   36300083    tbz w3, #6, 8cdc0 <CUSBGamePadXboxOneDevice::DecodeReport(unsigned char const*)+0x50>
   8cdb4:   b9412c02    ldr w2, [x0, #300]
   8cdb8:   32160042    orr w2, w2, #0x400
   8cdbc:   b9012c02    str w2, [x0, #300]
   8cdc0:   36380083    tbz w3, #7, 8cdd0 <CUSBGamePadXboxOneDevice::DecodeReport(unsigned char const*)+0x60>
   8cdc4:   b9412c02    ldr w2, [x0, #300]
   8cdc8:   32190042    orr w2, w2, #0x80
   8cdcc:   b9012c02    str w2, [x0, #300]
   8cdd0:   39401422    ldrb    w2, [x1, #5]
   8cdd4:   36000082    tbz w2, #0, 8cde4 <CUSBGamePadXboxOneDevice::DecodeReport(unsigned char const*)+0x74>
   8cdd8:   b9412c03    ldr w3, [x0, #300]
   8cddc:   32110063    orr w3, w3, #0x8000
   8cde0:   b9012c03    str w3, [x0, #300]
   8cde4:   36080082    tbz w2, #1, 8cdf4 <CUSBGamePadXboxOneDevice::DecodeReport(unsigned char const*)+0x84>
   8cde8:   b9412c03    ldr w3, [x0, #300]
   8cdec:   320f0063    orr w3, w3, #0x20000
   8cdf0:   b9012c03    str w3, [x0, #300]
   8cdf4:   36100082    tbz w2, #2, 8ce04 <CUSBGamePadXboxOneDevice::DecodeReport(unsigned char const*)+0x94>
   8cdf8:   b9412c03    ldr w3, [x0, #300]
   8cdfc:   320e0063    orr w3, w3, #0x40000
   8ce00:   b9012c03    str w3, [x0, #300]
   8ce04:   36180082    tbz w2, #3, 8ce14 <CUSBGamePadXboxOneDevice::DecodeReport(unsigned char const*)+0xa4>
   8ce08:   b9412c03    ldr w3, [x0, #300]
   8ce0c:   32100063    orr w3, w3, #0x10000
   8ce10:   b9012c03    str w3, [x0, #300]
   8ce14:   36200082    tbz w2, #4, 8ce24 <CUSBGamePadXboxOneDevice::DecodeReport(unsigned char const*)+0xb4>
   8ce18:   b9412c03    ldr w3, [x0, #300]
   8ce1c:   321b0063    orr w3, w3, #0x20
   8ce20:   b9012c03    str w3, [x0, #300]
   8ce24:   36280082    tbz w2, #5, 8ce34 <CUSBGamePadXboxOneDevice::DecodeReport(unsigned char const*)+0xc4>
   8ce28:   b9412c03    ldr w3, [x0, #300]
   8ce2c:   321a0063    orr w3, w3, #0x40
   8ce30:   b9012c03    str w3, [x0, #300]
   8ce34:   36300082    tbz w2, #6, 8ce44 <CUSBGamePadXboxOneDevice::DecodeReport(unsigned char const*)+0xd4>
   8ce38:   b9412c03    ldr w3, [x0, #300]
   8ce3c:   32140063    orr w3, w3, #0x1000
   8ce40:   b9012c03    str w3, [x0, #300]
   8ce44:   36380082    tbz w2, #7, 8ce54 <CUSBGamePadXboxOneDevice::DecodeReport(unsigned char const*)+0xe4>
   8ce48:   b9412c02    ldr w2, [x0, #300]
   8ce4c:   32130042    orr w2, w2, #0x2000
   8ce50:   b9012c02    str w2, [x0, #300]
   8ce54:   39401823    ldrb    w3, [x1, #6]
   8ce58:   39401c22    ldrb    w2, [x1, #7]
   8ce5c:   2a022062    orr w2, w3, w2, lsl #8
   8ce60:   53027c42    lsr w2, w2, #2
   8ce64:   7101fc5f    cmp w2, #0x7f
   8ce68:   b9007c02    str w2, [x0, #124]
   8ce6c:   54000089    b.ls    8ce7c <CUSBGamePadXboxOneDevice::DecodeReport(unsigned char const*)+0x10c>
   8ce70:   b9412c02    ldr w2, [x0, #300]
   8ce74:   321d0042    orr w2, w2, #0x8
   8ce78:   b9012c02    str w2, [x0, #300]
   8ce7c:   39402023    ldrb    w3, [x1, #8]
   8ce80:   39402422    ldrb    w2, [x1, #9]
   8ce84:   2a022062    orr w2, w3, w2, lsl #8
   8ce88:   53027c42    lsr w2, w2, #2
   8ce8c:   7101fc5f    cmp w2, #0x7f
   8ce90:   b9008802    str w2, [x0, #136]
   8ce94:   54000089    b.ls    8cea4 <CUSBGamePadXboxOneDevice::DecodeReport(unsigned char const*)+0x134>
   8ce98:   b9412c02    ldr w2, [x0, #300]
   8ce9c:   321c0042    orr w2, w2, #0x10
   8cea0:   b9012c02    str w2, [x0, #300]
   8cea4:   39402823    ldrb    w3, [x1, #10]
   8cea8:   39402c22    ldrb    w2, [x1, #11]
   8ceac:   aa022062    orr x2, x3, x2, lsl #8
   8ceb0:   93403c42    sxth    x2, w2
   8ceb4:   11402042    add w2, w2, #0x8, lsl #12
   8ceb8:   53087c42    lsr w2, w2, #8
   8cebc:   b9004c02    str w2, [x0, #76]
   8cec0:   39403023    ldrb    w3, [x1, #12]
   8cec4:   39403422    ldrb    w2, [x1, #13]
   8cec8:   aa022062    orr x2, x3, x2, lsl #8
   8cecc:   93403c42    sxth    x2, w2
   8ced0:   11402042    add w2, w2, #0x8, lsl #12
   8ced4:   53087c42    lsr w2, w2, #8
   8ced8:   52001c42    eor w2, w2, #0xff
   8cedc:   b9005802    str w2, [x0, #88]
   8cee0:   39403823    ldrb    w3, [x1, #14]
   8cee4:   39403c22    ldrb    w2, [x1, #15]
   8cee8:   aa022062    orr x2, x3, x2, lsl #8
   8ceec:   93403c42    sxth    x2, w2
   8cef0:   11402042    add w2, w2, #0x8, lsl #12
   8cef4:   53087c42    lsr w2, w2, #8
   8cef8:   b9006402    str w2, [x0, #100]
   8cefc:   39404022    ldrb    w2, [x1, #16]
   8cf00:   39404421    ldrb    w1, [x1, #17]
   8cf04:   aa012041    orr x1, x2, x1, lsl #8
   8cf08:   93403c21    sxth    x1, w1
   8cf0c:   11402021    add w1, w1, #0x8, lsl #12
   8cf10:   53087c21    lsr w1, w1, #8
   8cf14:   52001c21    eor w1, w1, #0xff
   8cf18:   b9007001    str w1, [x0, #112]
   8cf1c:   d65f03c0    ret

000000000008cf20 <CUSBGamePadXboxOneDevice::~CUSBGamePadXboxOneDevice()>:
   8cf20:   90000141    adrp    x1, b4000 <From+0x140>
   8cf24:   911f4021    add x1, x1, #0x7d0
   8cf28:   f9000001    str x1, [x0]
   8cf2c:   140033dd    b   99ea0 <CUSBGamePadDevice::~CUSBGamePadDevice()>

000000000008cf30 <CUSBGamePadXboxOneDevice::~CUSBGamePadXboxOneDevice()>:
   8cf30:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8cf34:   90000141    adrp    x1, b4000 <From+0x140>
   8cf38:   911f4021    add x1, x1, #0x7d0
   8cf3c:   910003fd    mov x29, sp
   8cf40:   f9000bf3    str x19, [sp, #16]
   8cf44:   aa0003f3    mov x19, x0
   8cf48:   f9000001    str x1, [x0]
   8cf4c:   940033d5    bl  99ea0 <CUSBGamePadDevice::~CUSBGamePadDevice()>
   8cf50:   aa1303e0    mov x0, x19
   8cf54:   f9400bf3    ldr x19, [sp, #16]
   8cf58:   d2802c01    mov x1, #0x160
   8cf5c:   a8c27bfd    ldp x29, x30, [sp], #32
   8cf60:   14006a40    b   a7860 <operator delete(void*, unsigned long)>
   8cf64:   d503201f    nop
   8cf68:   d503201f    nop
   8cf6c:   d503201f    nop

000000000008cf70 <CUSBGamePadXboxOneDevice::ReportHandler(unsigned char const*, unsigned int)>:
   8cf70:   b40007c1    cbz x1, 8d068 <CUSBGamePadXboxOneDevice::ReportHandler(unsigned char const*, unsigned int)+0xf8>
   8cf74:   a9b77bfd    stp x29, x30, [sp, #-144]!
   8cf78:   7100185f    cmp w2, #0x6
   8cf7c:   910003fd    mov x29, sp
   8cf80:   aa0103e3    mov x3, x1
   8cf84:   54000140    b.eq    8cfac <CUSBGamePadXboxOneDevice::ReportHandler(unsigned char const*, unsigned int)+0x3c>
   8cf88:   f940a404    ldr x4, [x0, #328]
   8cf8c:   a90153f3    stp x19, x20, [sp, #16]
   8cf90:   aa0003f3    mov x19, x0
   8cf94:   f100009f    cmp x4, #0x0
   8cf98:   7a521840    ccmp    w2, #0x12, #0x0, ne
   8cf9c:   54000480    b.eq    8d02c <CUSBGamePadXboxOneDevice::ReportHandler(unsigned char const*, unsigned int)+0xbc>
   8cfa0:   a94153f3    ldp x19, x20, [sp, #16]
   8cfa4:   a8c97bfd    ldp x29, x30, [sp], #144
   8cfa8:   d65f03c0    ret
   8cfac:   39400021    ldrb    w1, [x1]
   8cfb0:   71001c3f    cmp w1, #0x7
   8cfb4:   54ffff81    b.ne    8cfa4 <CUSBGamePadXboxOneDevice::ReportHandler(unsigned char const*, unsigned int)+0x34>
   8cfb8:   39400461    ldrb    w1, [x3, #1]
   8cfbc:   7100c03f    cmp w1, #0x30
   8cfc0:   54ffff21    b.ne    8cfa4 <CUSBGamePadXboxOneDevice::ReportHandler(unsigned char const*, unsigned int)+0x34>
   8cfc4:   39400865    ldrb    w5, [x3, #2]
   8cfc8:   91017fe4    add x4, sp, #0x5f
   8cfcc:   d2840026    mov x6, #0x2001
   8cfd0:   f2a12006    movk    x6, #0x900, lsl #16
   8cfd4:   927ae484    and x4, x4, #0xffffffffffffffc0
   8cfd8:   f2c0e006    movk    x6, #0x700, lsl #32
   8cfdc:   f2e04406    movk    x6, #0x220, lsl #48
   8cfe0:   d2800007    mov x7, #0x0
   8cfe4:   aa0403e1    mov x1, x4
   8cfe8:   a9017c9f    stp xzr, xzr, [x4, #16]
   8cfec:   52800003    mov w3, #0x0
   8cff0:   528001a2    mov w2, #0xd
   8cff4:   a9001c86    stp x6, x7, [x4]
   8cff8:   39000885    strb    w5, [x4, #2]
   8cffc:   a9027c9f    stp xzr, xzr, [x4, #32]
   8d000:   a9037c9f    stp xzr, xzr, [x4, #48]
   8d004:   940001cb    bl  8d730 <CUSBHIDDevice::SendToEndpointOutAsync(void const*, unsigned int, unsigned int)>
   8d008:   3707fce0    tbnz    w0, #0, 8cfa4 <CUSBGamePadXboxOneDevice::ReportHandler(unsigned char const*, unsigned int)+0x34>
   8d00c:   9400497d    bl  9f600 <CLogger::Get()>
   8d010:   f0000103    adrp    x3, b0000 <_etext+0xf9c>
   8d014:   f0000121    adrp    x1, b4000 <From+0x140>
   8d018:   913b4063    add x3, x3, #0xed0
   8d01c:   9121c021    add x1, x1, #0x870
   8d020:   52800022    mov w2, #0x1
   8d024:   94004b5f    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8d028:   17ffffdf    b   8cfa4 <CUSBGamePadXboxOneDevice::ReportHandler(unsigned char const*, unsigned int)+0x34>
   8d02c:   39400022    ldrb    w2, [x1]
   8d030:   7100805f    cmp w2, #0x20
   8d034:   54fffb61    b.ne    8cfa0 <CUSBGamePadXboxOneDevice::ReportHandler(unsigned char const*, unsigned int)+0x30>
   8d038:   aa0003f4    mov x20, x0
   8d03c:   f8448682    ldr x2, [x20], #72
   8d040:   f9404c42    ldr x2, [x2, #152]
   8d044:   d63f0040    blr x2
   8d048:   f940a662    ldr x2, [x19, #328]
   8d04c:   aa1403e1    mov x1, x20
   8d050:   b9415660    ldr w0, [x19, #340]
   8d054:   a94153f3    ldp x19, x20, [sp, #16]
   8d058:   aa0203f0    mov x16, x2
   8d05c:   a8c97bfd    ldp x29, x30, [sp], #144
   8d060:   51000400    sub w0, w0, #0x1
   8d064:   d61f0200    br  x16
   8d068:   d65f03c0    ret
   8d06c:   d503201f    nop

000000000008d070 <CUSBGamePadXboxOneDevice::SetRumbleMode(TGamePadRumbleMode)>:
   8d070:   a9b77bfd    stp x29, x30, [sp, #-144]!
   8d074:   91017fe4    add x4, sp, #0x5f
   8d078:   910003fd    mov x29, sp
   8d07c:   927ae484    and x4, x4, #0xffffffffffffffc0
   8d080:   f0000122    adrp    x2, b4000 <From+0x140>
   8d084:   9121c042    add x2, x2, #0x870
   8d088:   a90153f3    stp x19, x20, [sp, #16]
   8d08c:   2a0103f4    mov w20, w1
   8d090:   aa0003f3    mov x19, x0
   8d094:   91004041    add x1, x2, #0x10
   8d098:   aa0403e0    mov x0, x4
   8d09c:   d28001c2    mov x2, #0xe
   8d0a0:   94006736    bl  a6d78 <memcpy>
   8d0a4:   4f000400    movi    v0.4s, #0x0
   8d0a8:   aa0003e4    mov x4, x0
   8d0ac:   91003800    add x0, x0, #0xe
   8d0b0:   7100069f    cmp w20, #0x1
   8d0b4:   79007c9f    strh    wzr, [x4, #62]
   8d0b8:   ad000000    stp q0, q0, [x0]
   8d0bc:   3d800800    str q0, [x0, #32]
   8d0c0:   54000260    b.eq    8d10c <CUSBGamePadXboxOneDevice::SetRumbleMode(TGamePadRumbleMode)+0x9c>
   8d0c4:   71000a9f    cmp w20, #0x2
   8d0c8:   540001c0    b.eq    8d100 <CUSBGamePadXboxOneDevice::SetRumbleMode(TGamePadRumbleMode)+0x90>
   8d0cc:   35000274    cbnz    w20, 8d118 <CUSBGamePadXboxOneDevice::SetRumbleMode(TGamePadRumbleMode)+0xa8>
   8d0d0:   39456265    ldrb    w5, [x19, #344]
   8d0d4:   aa0403e1    mov x1, x4
   8d0d8:   aa1303e0    mov x0, x19
   8d0dc:   52800003    mov w3, #0x0
   8d0e0:   528001a2    mov w2, #0xd
   8d0e4:   110004a6    add w6, w5, #0x1
   8d0e8:   39000885    strb    w5, [x4, #2]
   8d0ec:   39056266    strb    w6, [x19, #344]
   8d0f0:   94000168    bl  8d690 <CUSBHIDDevice::SendToEndpointOut(void const*, unsigned int, unsigned int)>
   8d0f4:   a94153f3    ldp x19, x20, [sp, #16]
   8d0f8:   a8c97bfd    ldp x29, x30, [sp], #144
   8d0fc:   d65f03c0    ret
   8d100:   12800000    mov w0, #0xffffffff
   8d104:   39002080    strb    w0, [x4, #8]
   8d108:   17fffff2    b   8d0d0 <CUSBGamePadXboxOneDevice::SetRumbleMode(TGamePadRumbleMode)+0x60>
   8d10c:   12800000    mov w0, #0xffffffff
   8d110:   39002480    strb    w0, [x4, #9]
   8d114:   17ffffef    b   8d0d0 <CUSBGamePadXboxOneDevice::SetRumbleMode(TGamePadRumbleMode)+0x60>
   8d118:   f0000101    adrp    x1, b0000 <_etext+0xf9c>
   8d11c:   f0000100    adrp    x0, b0000 <_etext+0xf9c>
   8d120:   913ba021    add x1, x1, #0xee8
   8d124:   91106000    add x0, x0, #0x418
   8d128:   52801de2    mov w2, #0xef
   8d12c:   94003e65    bl  9cac0 <assertion_failed>

000000000008d130 <CUSBGamePadXboxOneDevice::CUSBGamePadXboxOneDevice(CUSBFunction*)>:
   8d130:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8d134:   910003fd    mov x29, sp
   8d138:   f9000bf3    str x19, [sp, #16]
   8d13c:   aa0003f3    mov x19, x0
   8d140:   94003344    bl  99e50 <CUSBGamePadDevice::CUSBGamePadDevice(CUSBFunction*)>
   8d144:   f0000120    adrp    x0, b4000 <From+0x140>
   8d148:   911f4000    add x0, x0, #0x7d0
   8d14c:   3905627f    strb    wzr, [x19, #344]
   8d150:   f9000260    str x0, [x19]
   8d154:   f9400bf3    ldr x19, [sp, #16]
   8d158:   a8c27bfd    ldp x29, x30, [sp], #32
   8d15c:   d65f03c0    ret

000000000008d160 <CUSBGamePadXboxOneDevice::Configure()>:
   8d160:   a9b77bfd    stp x29, x30, [sp, #-144]!
   8d164:   52800801    mov w1, #0x40
   8d168:   910003fd    mov x29, sp
   8d16c:   a90153f3    stp x19, x20, [sp, #16]
   8d170:   aa0003f3    mov x19, x0
   8d174:   7902a001    strh    w1, [x0, #336]
   8d178:   940032ce    bl  99cb0 <CUSBGamePadDevice::Configure()>
   8d17c:   360005c0    tbz w0, #0, 8d234 <CUSBGamePadXboxOneDevice::Configure()+0xd4>
   8d180:   d2c01fe5    mov x5, #0xff00000000
   8d184:   52801fe4    mov w4, #0xff
   8d188:   b9010e7f    str wzr, [x19, #268]
   8d18c:   528000c0    mov w0, #0x6
   8d190:   91017ff4    add x20, sp, #0x5f
   8d194:   52800268    mov w8, #0x13
   8d198:   927ae694    and x20, x20, #0xffffffffffffffc0
   8d19c:   f9002a65    str x5, [x19, #80]
   8d1a0:   d28400a6    mov x6, #0x2005
   8d1a4:   f2a02006    movk    x6, #0x100, lsl #16
   8d1a8:   b9004a60    str w0, [x19, #72]
   8d1ac:   d2800007    mov x7, #0x0
   8d1b0:   aa1403e1    mov x1, x20
   8d1b4:   290b927f    stp wzr, w4, [x19, #92]
   8d1b8:   52800003    mov w3, #0x0
   8d1bc:   528000a2    mov w2, #0x5
   8d1c0:   f9003665    str x5, [x19, #104]
   8d1c4:   aa1303e0    mov x0, x19
   8d1c8:   290e927f    stp wzr, w4, [x19, #116]
   8d1cc:   f9004265    str x5, [x19, #128]
   8d1d0:   2911927f    stp wzr, w4, [x19, #140]
   8d1d4:   b9012a68    str w8, [x19, #296]
   8d1d8:   a9001e86    stp x6, x7, [x20]
   8d1dc:   a9017e9f    stp xzr, xzr, [x20, #16]
   8d1e0:   a9027e9f    stp xzr, xzr, [x20, #32]
   8d1e4:   a9037e9f    stp xzr, xzr, [x20, #48]
   8d1e8:   9400012a    bl  8d690 <CUSBHIDDevice::SendToEndpointOut(void const*, unsigned int, unsigned int)>
   8d1ec:   360000e0    tbz w0, #0, 8d208 <CUSBGamePadXboxOneDevice::Configure()+0xa8>
   8d1f0:   aa1303e0    mov x0, x19
   8d1f4:   940001b7    bl  8d8d0 <CUSBHIDDevice::StartRequest()>
   8d1f8:   a94153f3    ldp x19, x20, [sp, #16]
   8d1fc:   12001c00    and w0, w0, #0xff
   8d200:   a8c97bfd    ldp x29, x30, [sp], #144
   8d204:   d65f03c0    ret
   8d208:   940048fe    bl  9f600 <CLogger::Get()>
   8d20c:   f0000103    adrp    x3, b0000 <_etext+0xf9c>
   8d210:   f0000121    adrp    x1, b4000 <From+0x140>
   8d214:   913c0063    add x3, x3, #0xf00
   8d218:   9121c021    add x1, x1, #0x870
   8d21c:   52800022    mov w2, #0x1
   8d220:   94004ae0    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8d224:   52800000    mov w0, #0x0
   8d228:   a94153f3    ldp x19, x20, [sp, #16]
   8d22c:   a8c97bfd    ldp x29, x30, [sp], #144
   8d230:   d65f03c0    ret
   8d234:   940048f3    bl  9f600 <CLogger::Get()>
   8d238:   f0000103    adrp    x3, b0000 <_etext+0xf9c>
   8d23c:   f0000121    adrp    x1, b4000 <From+0x140>
   8d240:   91314063    add x3, x3, #0xc50
   8d244:   9121c021    add x1, x1, #0x870
   8d248:   52800022    mov w2, #0x1
   8d24c:   94004ad5    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8d250:   52800000    mov w0, #0x0
   8d254:   17fffff5    b   8d228 <CUSBGamePadXboxOneDevice::Configure()+0xc8>
    ...

000000000008d260 <CUSBGamePadXboxOneDevice::GetProperties()>:
   8d260:   52800120    mov w0, #0x9
   8d264:   d65f03c0    ret
    ...

000000000008d270 <CUSBHIDDevice::SendCompletionRoutine(CUSBRequest*, void*, void*)>:
   8d270:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8d274:   910003fd    mov x29, sp
   8d278:   a90153f3    stp x19, x20, [sp, #16]
   8d27c:   b40002e0    cbz x0, 8d2d8 <CUSBHIDDevice::SendCompletionRoutine(CUSBRequest*, void*, void*)+0x68>
   8d280:   aa0003f3    mov x19, x0
   8d284:   aa0103f4    mov x20, x1
   8d288:   97ffd23a    bl  81b70 <CUSBRequest::GetStatus() const>
   8d28c:   34000160    cbz w0, 8d2b8 <CUSBHIDDevice::SendCompletionRoutine(CUSBRequest*, void*, void*)+0x48>
   8d290:   aa1303e0    mov x0, x19
   8d294:   97ffd21b    bl  81b00 <CUSBRequest::~CUSBRequest()>
   8d298:   aa1303e0    mov x0, x19
   8d29c:   d2801201    mov x1, #0x90
   8d2a0:   97ffd2f8    bl  81e80 <CUSBRequest::operator delete(void*, unsigned long)>
   8d2a4:   b4000274    cbz x20, 8d2f0 <CUSBHIDDevice::SendCompletionRoutine(CUSBRequest*, void*, void*)+0x80>
   8d2a8:   aa1403e0    mov x0, x20
   8d2ac:   a94153f3    ldp x19, x20, [sp, #16]
   8d2b0:   a8c27bfd    ldp x29, x30, [sp], #32
   8d2b4:   1400695f    b   a7830 <operator delete[](void*)>
   8d2b8:   940048d2    bl  9f600 <CLogger::Get()>
   8d2bc:   f0000103    adrp    x3, b0000 <_etext+0xf9c>
   8d2c0:   f0000121    adrp    x1, b4000 <From+0x140>
   8d2c4:   913cc063    add x3, x3, #0xf30
   8d2c8:   91242021    add x1, x1, #0x908
   8d2cc:   52800042    mov w2, #0x2
   8d2d0:   94004ab4    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8d2d4:   17ffffef    b   8d290 <CUSBHIDDevice::SendCompletionRoutine(CUSBRequest*, void*, void*)+0x20>
   8d2d8:   f0000101    adrp    x1, b0000 <_etext+0xf9c>
   8d2dc:   d0000100    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8d2e0:   913c6021    add x1, x1, #0xf18
   8d2e4:   9111c000    add x0, x0, #0x470
   8d2e8:   528015e2    mov w2, #0xaf
   8d2ec:   94003df5    bl  9cac0 <assertion_failed>
   8d2f0:   f0000101    adrp    x1, b0000 <_etext+0xf9c>
   8d2f4:   f0000100    adrp    x0, b0000 <_etext+0xf9c>
   8d2f8:   913c6021    add x1, x1, #0xf18
   8d2fc:   913d4000    add x0, x0, #0xf50
   8d300:   52801702    mov w2, #0xb8
   8d304:   94003def    bl  9cac0 <assertion_failed>
   8d308:   d503201f    nop
   8d30c:   d503201f    nop

000000000008d310 <CUSBHIDDevice::CUSBHIDDevice(CUSBFunction*, unsigned int)>:
   8d310:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8d314:   910003fd    mov x29, sp
   8d318:   a90153f3    stp x19, x20, [sp, #16]
   8d31c:   aa0003f3    mov x19, x0
   8d320:   2a0203f4    mov w20, w2
   8d324:   97fff40f    bl  8a360 <CUSBFunction::CUSBFunction(CUSBFunction*)>
   8d328:   f0000120    adrp    x0, b4000 <From+0x140>
   8d32c:   91228000    add x0, x0, #0x8a0
   8d330:   b9002a74    str w20, [x19, #40]
   8d334:   a9037e7f    stp xzr, xzr, [x19, #48]
   8d338:   f9000260    str x0, [x19]
   8d33c:   f900227f    str xzr, [x19, #64]
   8d340:   35000094    cbnz    w20, 8d350 <CUSBHIDDevice::CUSBHIDDevice(CUSBFunction*, unsigned int)+0x40>
   8d344:   a94153f3    ldp x19, x20, [sp, #16]
   8d348:   a8c27bfd    ldp x29, x30, [sp], #32
   8d34c:   d65f03c0    ret
   8d350:   2a1403e0    mov w0, w20
   8d354:   94006923    bl  a77e0 <operator new[](unsigned long)>
   8d358:   f9002260    str x0, [x19, #64]
   8d35c:   a94153f3    ldp x19, x20, [sp, #16]
   8d360:   a8c27bfd    ldp x29, x30, [sp], #32
   8d364:   d65f03c0    ret
   8d368:   d503201f    nop
   8d36c:   d503201f    nop

000000000008d370 <CUSBHIDDevice::~CUSBHIDDevice()>:
   8d370:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8d374:   910003fd    mov x29, sp
   8d378:   f0000121    adrp    x1, b4000 <From+0x140>
   8d37c:   91228021    add x1, x1, #0x8a0
   8d380:   a90153f3    stp x19, x20, [sp, #16]
   8d384:   aa0003f3    mov x19, x0
   8d388:   f9402000    ldr x0, [x0, #64]
   8d38c:   f9000261    str x1, [x19]
   8d390:   b4000040    cbz x0, 8d398 <CUSBHIDDevice::~CUSBHIDDevice()+0x28>
   8d394:   94006927    bl  a7830 <operator delete[](void*)>
   8d398:   f9401e74    ldr x20, [x19, #56]
   8d39c:   f900227f    str xzr, [x19, #64]
   8d3a0:   b40000d4    cbz x20, 8d3b8 <CUSBHIDDevice::~CUSBHIDDevice()+0x48>
   8d3a4:   aa1403e0    mov x0, x20
   8d3a8:   97fff2f6    bl  89f80 <CUSBEndpoint::~CUSBEndpoint()>
   8d3ac:   aa1403e0    mov x0, x20
   8d3b0:   d2800401    mov x1, #0x20
   8d3b4:   9400692b    bl  a7860 <operator delete(void*, unsigned long)>
   8d3b8:   f9401a74    ldr x20, [x19, #48]
   8d3bc:   f9001e7f    str xzr, [x19, #56]
   8d3c0:   b40000d4    cbz x20, 8d3d8 <CUSBHIDDevice::~CUSBHIDDevice()+0x68>
   8d3c4:   aa1403e0    mov x0, x20
   8d3c8:   97fff2ee    bl  89f80 <CUSBEndpoint::~CUSBEndpoint()>
   8d3cc:   aa1403e0    mov x0, x20
   8d3d0:   d2800401    mov x1, #0x20
   8d3d4:   94006923    bl  a7860 <operator delete(void*, unsigned long)>
   8d3d8:   aa1303e0    mov x0, x19
   8d3dc:   f9001a7f    str xzr, [x19, #48]
   8d3e0:   a94153f3    ldp x19, x20, [sp, #16]
   8d3e4:   a8c27bfd    ldp x29, x30, [sp], #32
   8d3e8:   17fff33a    b   8a0d0 <CUSBFunction::~CUSBFunction()>
   8d3ec:   d503201f    nop

000000000008d3f0 <CUSBHIDDevice::~CUSBHIDDevice()>:
   8d3f0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8d3f4:   910003fd    mov x29, sp
   8d3f8:   f9000bf3    str x19, [sp, #16]
   8d3fc:   aa0003f3    mov x19, x0
   8d400:   97ffffdc    bl  8d370 <CUSBHIDDevice::~CUSBHIDDevice()>
   8d404:   aa1303e0    mov x0, x19
   8d408:   f9400bf3    ldr x19, [sp, #16]
   8d40c:   d2800901    mov x1, #0x48
   8d410:   a8c27bfd    ldp x29, x30, [sp], #32
   8d414:   14006913    b   a7860 <operator delete(void*, unsigned long)>
   8d418:   d503201f    nop
   8d41c:   d503201f    nop

000000000008d420 <CUSBHIDDevice::ConfigureHID(unsigned int)>:
   8d420:   a9bb7bfd    stp x29, x30, [sp, #-80]!
   8d424:   910003fd    mov x29, sp
   8d428:   a90153f3    stp x19, x20, [sp, #16]
   8d42c:   aa0003f4    mov x20, x0
   8d430:   a9025bf5    stp x21, x22, [sp, #32]
   8d434:   2a0103f6    mov w22, w1
   8d438:   97fff422    bl  8a4c0 <CUSBFunction::GetNumEndpoints() const>
   8d43c:   72001c1f    tst w0, #0xff
   8d440:   540000c1    b.ne    8d458 <CUSBHIDDevice::ConfigureHID(unsigned int)+0x38>
   8d444:   14000048    b   8d564 <CUSBHIDDevice::ConfigureHID(unsigned int)+0x144>
   8d448:   39400e62    ldrb    w2, [x19, #3]
   8d44c:   12001442    and w2, w2, #0x3f
   8d450:   71000c5f    cmp w2, #0x3
   8d454:   540003e0    b.eq    8d4d0 <CUSBHIDDevice::ConfigureHID(unsigned int)+0xb0>
   8d458:   528000a1    mov w1, #0x5
   8d45c:   aa1403e0    mov x0, x20
   8d460:   97fff448    bl  8a580 <CUSBFunction::GetDescriptor(unsigned char)>
   8d464:   aa0003f3    mov x19, x0
   8d468:   b5ffff00    cbnz    x0, 8d448 <CUSBHIDDevice::ConfigureHID(unsigned int)+0x28>
   8d46c:   f9401a80    ldr x0, [x20, #48]
   8d470:   b40007a0    cbz x0, 8d564 <CUSBHIDDevice::ConfigureHID(unsigned int)+0x144>
   8d474:   aa1403e0    mov x0, x20
   8d478:   97fff34e    bl  8a1b0 <CUSBFunction::Configure()>
   8d47c:   12001c13    and w19, w0, #0xff
   8d480:   36000600    tbz w0, #0, 8d540 <CUSBHIDDevice::ConfigureHID(unsigned int)+0x120>
   8d484:   aa1403e0    mov x0, x20
   8d488:   97fff4a2    bl  8a710 <CUSBFunction::GetInterfaceClass() const>
   8d48c:   12001c00    and w0, w0, #0xff
   8d490:   71000c1f    cmp w0, #0x3
   8d494:   54000880    b.eq    8d5a4 <CUSBHIDDevice::ConfigureHID(unsigned int)+0x184>
   8d498:   b9402a80    ldr w0, [x20, #40]
   8d49c:   35000700    cbnz    w0, 8d57c <CUSBHIDDevice::ConfigureHID(unsigned int)+0x15c>
   8d4a0:   b9002a96    str w22, [x20, #40]
   8d4a4:   34000c16    cbz w22, 8d624 <CUSBHIDDevice::ConfigureHID(unsigned int)+0x204>
   8d4a8:   f9402280    ldr x0, [x20, #64]
   8d4ac:   b5000cc0    cbnz    x0, 8d644 <CUSBHIDDevice::ConfigureHID(unsigned int)+0x224>
   8d4b0:   2a1603e0    mov w0, w22
   8d4b4:   940068cb    bl  a77e0 <operator new[](unsigned long)>
   8d4b8:   f9002280    str x0, [x20, #64]
   8d4bc:   a9425bf5    ldp x21, x22, [sp, #32]
   8d4c0:   2a1303e0    mov w0, w19
   8d4c4:   a94153f3    ldp x19, x20, [sp, #16]
   8d4c8:   a8c57bfd    ldp x29, x30, [sp], #80
   8d4cc:   d65f03c0    ret
   8d4d0:   39c00a60    ldrsb   w0, [x19, #2]
   8d4d4:   37f801c0    tbnz    w0, #31, 8d50c <CUSBHIDDevice::ConfigureHID(unsigned int)+0xec>
   8d4d8:   f9401e80    ldr x0, [x20, #56]
   8d4dc:   b5000440    cbnz    x0, 8d564 <CUSBHIDDevice::ConfigureHID(unsigned int)+0x144>
   8d4e0:   d2800400    mov x0, #0x20
   8d4e4:   940068b7    bl  a77c0 <operator new(unsigned long)>
   8d4e8:   aa0003f5    mov x21, x0
   8d4ec:   aa1403e0    mov x0, x20
   8d4f0:   97fff400    bl  8a4f0 <CUSBFunction::GetDevice() const>
   8d4f4:   aa0003e1    mov x1, x0
   8d4f8:   aa1303e2    mov x2, x19
   8d4fc:   aa1503e0    mov x0, x21
   8d500:   97fff234    bl  89dd0 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   8d504:   f9001e95    str x21, [x20, #56]
   8d508:   17ffffd4    b   8d458 <CUSBHIDDevice::ConfigureHID(unsigned int)+0x38>
   8d50c:   f9401a80    ldr x0, [x20, #48]
   8d510:   b50002a0    cbnz    x0, 8d564 <CUSBHIDDevice::ConfigureHID(unsigned int)+0x144>
   8d514:   d2800400    mov x0, #0x20
   8d518:   940068aa    bl  a77c0 <operator new(unsigned long)>
   8d51c:   aa0003f5    mov x21, x0
   8d520:   aa1403e0    mov x0, x20
   8d524:   97fff3f3    bl  8a4f0 <CUSBFunction::GetDevice() const>
   8d528:   aa0003e1    mov x1, x0
   8d52c:   aa1303e2    mov x2, x19
   8d530:   aa1503e0    mov x0, x21
   8d534:   97fff227    bl  89dd0 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   8d538:   f9001a95    str x21, [x20, #48]
   8d53c:   17ffffc7    b   8d458 <CUSBHIDDevice::ConfigureHID(unsigned int)+0x38>
   8d540:   94004830    bl  9f600 <CLogger::Get()>
   8d544:   d0000103    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8d548:   f0000121    adrp    x1, b4000 <From+0x140>
   8d54c:   9119e063    add x3, x3, #0x678
   8d550:   91242021    add x1, x1, #0x908
   8d554:   52800022    mov w2, #0x1
   8d558:   52800013    mov w19, #0x0
   8d55c:   94004a11    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8d560:   17ffffd7    b   8d4bc <CUSBHIDDevice::ConfigureHID(unsigned int)+0x9c>
   8d564:   aa1403e0    mov x0, x20
   8d568:   f0000121    adrp    x1, b4000 <From+0x140>
   8d56c:   91242021    add x1, x1, #0x908
   8d570:   52800013    mov w19, #0x0
   8d574:   97fff40f    bl  8a5b0 <CUSBFunction::ConfigurationError(char const*) const>
   8d578:   17ffffd1    b   8d4bc <CUSBHIDDevice::ConfigureHID(unsigned int)+0x9c>
   8d57c:   f9402280    ldr x0, [x20, #64]
   8d580:   b5fff9e0    cbnz    x0, 8d4bc <CUSBHIDDevice::ConfigureHID(unsigned int)+0x9c>
   8d584:   f0000101    adrp    x1, b0000 <_etext+0xf9c>
   8d588:   f0000100    adrp    x0, b0000 <_etext+0xf9c>
   8d58c:   a90363f7    stp x23, x24, [sp, #48]
   8d590:   913c6021    add x1, x1, #0xf18
   8d594:   913ec000    add x0, x0, #0xfb0
   8d598:   52801042    mov w2, #0x82
   8d59c:   f90023f9    str x25, [sp, #64]
   8d5a0:   94003d48    bl  9cac0 <assertion_failed>
   8d5a4:   aa1403e0    mov x0, x20
   8d5a8:   97fff466    bl  8a740 <CUSBFunction::GetInterfaceSubClass() const>
   8d5ac:   12001c15    and w21, w0, #0xff
   8d5b0:   710006bf    cmp w21, #0x1
   8d5b4:   54fff721    b.ne    8d498 <CUSBHIDDevice::ConfigureHID(unsigned int)+0x78>
   8d5b8:   aa1403e0    mov x0, x20
   8d5bc:   a90363f7    stp x23, x24, [sp, #48]
   8d5c0:   f90023f9    str x25, [sp, #64]
   8d5c4:   97fff3e3    bl  8a550 <CUSBFunction::GetHost() const>
   8d5c8:   aa0003f8    mov x24, x0
   8d5cc:   aa1403e0    mov x0, x20
   8d5d0:   97fff3d4    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   8d5d4:   aa0003f9    mov x25, x0
   8d5d8:   aa1403e0    mov x0, x20
   8d5dc:   97fff465    bl  8a770 <CUSBFunction::GetInterfaceProtocol() const>
   8d5e0:   12001c17    and w23, w0, #0xff
   8d5e4:   aa1403e0    mov x0, x20
   8d5e8:   97fff43e    bl  8a6e0 <CUSBFunction::GetInterfaceNumber() const>
   8d5ec:   71000aff    cmp w23, #0x2
   8d5f0:   12001c05    and w5, w0, #0xff
   8d5f4:   1a9f17e4    cset    w4, eq
   8d5f8:   aa1903e1    mov x1, x25
   8d5fc:   aa1803e0    mov x0, x24
   8d600:   52800007    mov w7, #0x0
   8d604:   d2800006    mov x6, #0x0
   8d608:   52800163    mov w3, #0xb
   8d60c:   52800422    mov w2, #0x21
   8d610:   97ffce80    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   8d614:   37f80280    tbnz    w0, #31, 8d664 <CUSBHIDDevice::ConfigureHID(unsigned int)+0x244>
   8d618:   a94363f7    ldp x23, x24, [sp, #48]
   8d61c:   f94023f9    ldr x25, [sp, #64]
   8d620:   17ffff9e    b   8d498 <CUSBHIDDevice::ConfigureHID(unsigned int)+0x78>
   8d624:   f0000101    adrp    x1, b0000 <_etext+0xf9c>
   8d628:   f0000100    adrp    x0, b0000 <_etext+0xf9c>
   8d62c:   a90363f7    stp x23, x24, [sp, #48]
   8d630:   913c6021    add x1, x1, #0xf18
   8d634:   913e0000    add x0, x0, #0xf80
   8d638:   52800fa2    mov w2, #0x7d
   8d63c:   f90023f9    str x25, [sp, #64]
   8d640:   94003d20    bl  9cac0 <assertion_failed>
   8d644:   f0000101    adrp    x1, b0000 <_etext+0xf9c>
   8d648:   f0000100    adrp    x0, b0000 <_etext+0xf9c>
   8d64c:   a90363f7    stp x23, x24, [sp, #48]
   8d650:   913c6021    add x1, x1, #0xf18
   8d654:   913e6000    add x0, x0, #0xf98
   8d658:   52800fe2    mov w2, #0x7f
   8d65c:   f90023f9    str x25, [sp, #64]
   8d660:   94003d18    bl  9cac0 <assertion_failed>
   8d664:   940047e7    bl  9f600 <CLogger::Get()>
   8d668:   f0000103    adrp    x3, b0000 <_etext+0xf9c>
   8d66c:   f0000121    adrp    x1, b4000 <From+0x140>
   8d670:   2a1503e2    mov w2, w21
   8d674:   913da063    add x3, x3, #0xf68
   8d678:   91242021    add x1, x1, #0x908
   8d67c:   52800013    mov w19, #0x0
   8d680:   940049c8    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8d684:   a94363f7    ldp x23, x24, [sp, #48]
   8d688:   f94023f9    ldr x25, [sp, #64]
   8d68c:   17ffff8c    b   8d4bc <CUSBHIDDevice::ConfigureHID(unsigned int)+0x9c>

000000000008d690 <CUSBHIDDevice::SendToEndpointOut(void const*, unsigned int, unsigned int)>:
   8d690:   f9401c04    ldr x4, [x0, #56]
   8d694:   b40002e4    cbz x4, 8d6f0 <CUSBHIDDevice::SendToEndpointOut(void const*, unsigned int, unsigned int)+0x60>
   8d698:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   8d69c:   910003fd    mov x29, sp
   8d6a0:   a90153f3    stp x19, x20, [sp, #16]
   8d6a4:   aa0103f4    mov x20, x1
   8d6a8:   a9025bf5    stp x21, x22, [sp, #32]
   8d6ac:   b4000261    cbz x1, 8d6f8 <CUSBHIDDevice::SendToEndpointOut(void const*, unsigned int, unsigned int)+0x68>
   8d6b0:   2a0203f5    mov w21, w2
   8d6b4:   340002e2    cbz w2, 8d710 <CUSBHIDDevice::SendToEndpointOut(void const*, unsigned int, unsigned int)+0x80>
   8d6b8:   2a0303f6    mov w22, w3
   8d6bc:   aa0003f3    mov x19, x0
   8d6c0:   97fff3a4    bl  8a550 <CUSBFunction::GetHost() const>
   8d6c4:   f9401e61    ldr x1, [x19, #56]
   8d6c8:   2a1603e4    mov w4, w22
   8d6cc:   2a1503e3    mov w3, w21
   8d6d0:   aa1403e2    mov x2, x20
   8d6d4:   97ffcecb    bl  81200 <CUSBHostController::Transfer(CUSBEndpoint*, void*, unsigned int, unsigned int)>
   8d6d8:   2a2003e0    mvn w0, w0
   8d6dc:   a94153f3    ldp x19, x20, [sp, #16]
   8d6e0:   531f7c00    lsr w0, w0, #31
   8d6e4:   a9425bf5    ldp x21, x22, [sp, #32]
   8d6e8:   a8c37bfd    ldp x29, x30, [sp], #48
   8d6ec:   d65f03c0    ret
   8d6f0:   52800000    mov w0, #0x0
   8d6f4:   d65f03c0    ret
   8d6f8:   f0000101    adrp    x1, b0000 <_etext+0xf9c>
   8d6fc:   d0000100    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8d700:   913c6021    add x1, x1, #0xf18
   8d704:   91260000    add x0, x0, #0x980
   8d708:   528011c2    mov w2, #0x8e
   8d70c:   94003ced    bl  9cac0 <assertion_failed>
   8d710:   f0000101    adrp    x1, b0000 <_etext+0xf9c>
   8d714:   f0000100    adrp    x0, b0000 <_etext+0xf9c>
   8d718:   913c6021    add x1, x1, #0xf18
   8d71c:   913f2000    add x0, x0, #0xfc8
   8d720:   528011e2    mov w2, #0x8f
   8d724:   94003ce7    bl  9cac0 <assertion_failed>
   8d728:   d503201f    nop
   8d72c:   d503201f    nop

000000000008d730 <CUSBHIDDevice::SendToEndpointOutAsync(void const*, unsigned int, unsigned int)>:
   8d730:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   8d734:   910003fd    mov x29, sp
   8d738:   a90153f3    stp x19, x20, [sp, #16]
   8d73c:   aa0003f3    mov x19, x0
   8d740:   f9401c00    ldr x0, [x0, #56]
   8d744:   b4000520    cbz x0, 8d7e8 <CUSBHIDDevice::SendToEndpointOutAsync(void const*, unsigned int, unsigned int)+0xb8>
   8d748:   a9025bf5    stp x21, x22, [sp, #32]
   8d74c:   aa0103f5    mov x21, x1
   8d750:   f9001bf7    str x23, [sp, #48]
   8d754:   b4000521    cbz x1, 8d7f8 <CUSBHIDDevice::SendToEndpointOutAsync(void const*, unsigned int, unsigned int)+0xc8>
   8d758:   2a0203f4    mov w20, w2
   8d75c:   340005a2    cbz w2, 8d810 <CUSBHIDDevice::SendToEndpointOutAsync(void const*, unsigned int, unsigned int)+0xe0>
   8d760:   2a0203f7    mov w23, w2
   8d764:   2a0303f6    mov w22, w3
   8d768:   aa1703e0    mov x0, x23
   8d76c:   9400681d    bl  a77e0 <operator new[](unsigned long)>
   8d770:   aa1703e2    mov x2, x23
   8d774:   aa1503e1    mov x1, x21
   8d778:   aa0003f5    mov x21, x0
   8d77c:   9400657f    bl  a6d78 <memcpy>
   8d780:   d2801200    mov x0, #0x90
   8d784:   97ffd1a7    bl  81e20 <CUSBRequest::operator new(unsigned long)>
   8d788:   f9401e61    ldr x1, [x19, #56]
   8d78c:   d2800004    mov x4, #0x0
   8d790:   2a1403e3    mov w3, w20
   8d794:   aa1503e2    mov x2, x21
   8d798:   aa0003f4    mov x20, x0
   8d79c:   97ffd0b9    bl  81a80 <CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)>
   8d7a0:   90000001    adrp    x1, 8d000 <CUSBGamePadXboxOneDevice::ReportHandler(unsigned char const*, unsigned int)+0x90>
   8d7a4:   aa1503e2    mov x2, x21
   8d7a8:   aa1303e3    mov x3, x19
   8d7ac:   aa1403e0    mov x0, x20
   8d7b0:   9109c021    add x1, x1, #0x270
   8d7b4:   97ffd177    bl  81d90 <CUSBRequest::SetCompletionRoutine(void (*)(CUSBRequest*, void*, void*), void*, void*)>
   8d7b8:   aa1303e0    mov x0, x19
   8d7bc:   97fff365    bl  8a550 <CUSBFunction::GetHost() const>
   8d7c0:   f9400003    ldr x3, [x0]
   8d7c4:   2a1603e2    mov w2, w22
   8d7c8:   aa1403e1    mov x1, x20
   8d7cc:   a94153f3    ldp x19, x20, [sp, #16]
   8d7d0:   a9425bf5    ldp x21, x22, [sp, #32]
   8d7d4:   f9401463    ldr x3, [x3, #40]
   8d7d8:   f9401bf7    ldr x23, [sp, #48]
   8d7dc:   a8c47bfd    ldp x29, x30, [sp], #64
   8d7e0:   aa0303f0    mov x16, x3
   8d7e4:   d61f0200    br  x16
   8d7e8:   a94153f3    ldp x19, x20, [sp, #16]
   8d7ec:   52800000    mov w0, #0x0
   8d7f0:   a8c47bfd    ldp x29, x30, [sp], #64
   8d7f4:   d65f03c0    ret
   8d7f8:   f0000101    adrp    x1, b0000 <_etext+0xf9c>
   8d7fc:   d0000100    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8d800:   913c6021    add x1, x1, #0xf18
   8d804:   91260000    add x0, x0, #0x980
   8d808:   52801402    mov w2, #0xa0
   8d80c:   94003cad    bl  9cac0 <assertion_failed>
   8d810:   f0000101    adrp    x1, b0000 <_etext+0xf9c>
   8d814:   f0000100    adrp    x0, b0000 <_etext+0xf9c>
   8d818:   913c6021    add x1, x1, #0xf18
   8d81c:   913f2000    add x0, x0, #0xfc8
   8d820:   52801422    mov w2, #0xa1
   8d824:   94003ca7    bl  9cac0 <assertion_failed>
   8d828:   d503201f    nop
   8d82c:   d503201f    nop

000000000008d830 <CUSBHIDDevice::ReceiveFromEndpointIn(void*, unsigned int, unsigned int)>:
   8d830:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   8d834:   910003fd    mov x29, sp
   8d838:   f9401804    ldr x4, [x0, #48]
   8d83c:   a90153f3    stp x19, x20, [sp, #16]
   8d840:   a9025bf5    stp x21, x22, [sp, #32]
   8d844:   b4000204    cbz x4, 8d884 <CUSBHIDDevice::ReceiveFromEndpointIn(void*, unsigned int, unsigned int)+0x54>
   8d848:   aa0103f4    mov x20, x1
   8d84c:   b4000281    cbz x1, 8d89c <CUSBHIDDevice::ReceiveFromEndpointIn(void*, unsigned int, unsigned int)+0x6c>
   8d850:   2a0203f5    mov w21, w2
   8d854:   34000302    cbz w2, 8d8b4 <CUSBHIDDevice::ReceiveFromEndpointIn(void*, unsigned int, unsigned int)+0x84>
   8d858:   2a0303f6    mov w22, w3
   8d85c:   aa0003f3    mov x19, x0
   8d860:   97fff33c    bl  8a550 <CUSBFunction::GetHost() const>
   8d864:   f9401a61    ldr x1, [x19, #48]
   8d868:   2a1603e4    mov w4, w22
   8d86c:   2a1503e3    mov w3, w21
   8d870:   a9425bf5    ldp x21, x22, [sp, #32]
   8d874:   aa1403e2    mov x2, x20
   8d878:   a94153f3    ldp x19, x20, [sp, #16]
   8d87c:   a8c37bfd    ldp x29, x30, [sp], #48
   8d880:   17ffce60    b   81200 <CUSBHostController::Transfer(CUSBEndpoint*, void*, unsigned int, unsigned int)>
   8d884:   f0000101    adrp    x1, b0000 <_etext+0xf9c>
   8d888:   f0000100    adrp    x0, b0000 <_etext+0xf9c>
   8d88c:   913c6021    add x1, x1, #0xf18
   8d890:   913f6000    add x0, x0, #0xfd8
   8d894:   528017c2    mov w2, #0xbe
   8d898:   94003c8a    bl  9cac0 <assertion_failed>
   8d89c:   f0000101    adrp    x1, b0000 <_etext+0xf9c>
   8d8a0:   d0000100    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8d8a4:   913c6021    add x1, x1, #0xf18
   8d8a8:   91260000    add x0, x0, #0x980
   8d8ac:   528017e2    mov w2, #0xbf
   8d8b0:   94003c84    bl  9cac0 <assertion_failed>
   8d8b4:   f0000101    adrp    x1, b0000 <_etext+0xf9c>
   8d8b8:   f0000100    adrp    x0, b0000 <_etext+0xf9c>
   8d8bc:   913c6021    add x1, x1, #0xf18
   8d8c0:   913f2000    add x0, x0, #0xfc8
   8d8c4:   52801802    mov w2, #0xc0
   8d8c8:   94003c7e    bl  9cac0 <assertion_failed>
   8d8cc:   d503201f    nop

000000000008d8d0 <CUSBHIDDevice::StartRequest()>:
   8d8d0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8d8d4:   910003fd    mov x29, sp
   8d8d8:   a90153f3    stp x19, x20, [sp, #16]
   8d8dc:   aa0003f3    mov x19, x0
   8d8e0:   f9401800    ldr x0, [x0, #48]
   8d8e4:   b40003a0    cbz x0, 8d958 <CUSBHIDDevice::StartRequest()+0x88>
   8d8e8:   f9402260    ldr x0, [x19, #64]
   8d8ec:   b4000420    cbz x0, 8d970 <CUSBHIDDevice::StartRequest()+0xa0>
   8d8f0:   b9402a60    ldr w0, [x19, #40]
   8d8f4:   340004a0    cbz w0, 8d988 <CUSBHIDDevice::StartRequest()+0xb8>
   8d8f8:   d2801200    mov x0, #0x90
   8d8fc:   97ffd149    bl  81e20 <CUSBRequest::operator new(unsigned long)>
   8d900:   f9401a61    ldr x1, [x19, #48]
   8d904:   d2800004    mov x4, #0x0
   8d908:   aa0003f4    mov x20, x0
   8d90c:   f9402262    ldr x2, [x19, #64]
   8d910:   b9402a63    ldr w3, [x19, #40]
   8d914:   97ffd05b    bl  81a80 <CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)>
   8d918:   90000001    adrp    x1, 8d000 <CUSBGamePadXboxOneDevice::ReportHandler(unsigned char const*, unsigned int)+0x90>
   8d91c:   aa1403e0    mov x0, x20
   8d920:   aa1303e3    mov x3, x19
   8d924:   912b8021    add x1, x1, #0xae0
   8d928:   d2800002    mov x2, #0x0
   8d92c:   97ffd119    bl  81d90 <CUSBRequest::SetCompletionRoutine(void (*)(CUSBRequest*, void*, void*), void*, void*)>
   8d930:   aa1303e0    mov x0, x19
   8d934:   97fff307    bl  8a550 <CUSBFunction::GetHost() const>
   8d938:   f9400003    ldr x3, [x0]
   8d93c:   aa1403e1    mov x1, x20
   8d940:   52800002    mov w2, #0x0
   8d944:   a94153f3    ldp x19, x20, [sp, #16]
   8d948:   a8c27bfd    ldp x29, x30, [sp], #32
   8d94c:   f9401463    ldr x3, [x3, #40]
   8d950:   aa0303f0    mov x16, x3
   8d954:   d61f0200    br  x16
   8d958:   f0000101    adrp    x1, b0000 <_etext+0xf9c>
   8d95c:   f0000100    adrp    x0, b0000 <_etext+0xf9c>
   8d960:   913c6021    add x1, x1, #0xf18
   8d964:   913f6000    add x0, x0, #0xfd8
   8d968:   528018c2    mov w2, #0xc6
   8d96c:   94003c55    bl  9cac0 <assertion_failed>
   8d970:   f0000101    adrp    x1, b0000 <_etext+0xf9c>
   8d974:   f0000100    adrp    x0, b0000 <_etext+0xf9c>
   8d978:   913c6021    add x1, x1, #0xf18
   8d97c:   913ec000    add x0, x0, #0xfb0
   8d980:   528018e2    mov w2, #0xc7
   8d984:   94003c4f    bl  9cac0 <assertion_failed>
   8d988:   f0000101    adrp    x1, b0000 <_etext+0xf9c>
   8d98c:   f0000100    adrp    x0, b0000 <_etext+0xf9c>
   8d990:   913c6021    add x1, x1, #0xf18
   8d994:   913e0000    add x0, x0, #0xf80
   8d998:   52801922    mov w2, #0xc9
   8d99c:   94003c49    bl  9cac0 <assertion_failed>

000000000008d9a0 <CUSBHIDDevice::CompletionRoutine(CUSBRequest*)>:
   8d9a0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   8d9a4:   910003fd    mov x29, sp
   8d9a8:   a90153f3    stp x19, x20, [sp, #16]
   8d9ac:   b40007c1    cbz x1, 8daa4 <CUSBHIDDevice::CompletionRoutine(CUSBRequest*)+0x104>
   8d9b0:   aa0003f4    mov x20, x0
   8d9b4:   aa0103e0    mov x0, x1
   8d9b8:   aa0103f3    mov x19, x1
   8d9bc:   97ffd06d    bl  81b70 <CUSBRequest::GetStatus() const>
   8d9c0:   35000280    cbnz    w0, 8da10 <CUSBHIDDevice::CompletionRoutine(CUSBRequest*)+0x70>
   8d9c4:   97ffce2b    bl  81270 <CUSBHostController::IsPlugAndPlay()>
   8d9c8:   37000580    tbnz    w0, #0, 8da78 <CUSBHIDDevice::CompletionRoutine(CUSBRequest*)+0xd8>
   8d9cc:   f9400283    ldr x3, [x20]
   8d9d0:   d2800001    mov x1, #0x0
   8d9d4:   52800002    mov w2, #0x0
   8d9d8:   aa1403e0    mov x0, x20
   8d9dc:   f9403063    ldr x3, [x3, #96]
   8d9e0:   d63f0060    blr x3
   8d9e4:   aa1303e0    mov x0, x19
   8d9e8:   97ffd046    bl  81b00 <CUSBRequest::~CUSBRequest()>
   8d9ec:   aa1303e0    mov x0, x19
   8d9f0:   d2801201    mov x1, #0x90
   8d9f4:   97ffd123    bl  81e80 <CUSBRequest::operator delete(void*, unsigned long)>
   8d9f8:   aa1403e0    mov x0, x20
   8d9fc:   97ffffb5    bl  8d8d0 <CUSBHIDDevice::StartRequest()>
   8da00:   360002a0    tbz w0, #0, 8da54 <CUSBHIDDevice::CompletionRoutine(CUSBRequest*)+0xb4>
   8da04:   a94153f3    ldp x19, x20, [sp, #16]
   8da08:   a8c37bfd    ldp x29, x30, [sp], #48
   8da0c:   d65f03c0    ret
   8da10:   f9400281    ldr x1, [x20]
   8da14:   aa1303e0    mov x0, x19
   8da18:   a9025bf5    stp x21, x22, [sp, #32]
   8da1c:   f9402296    ldr x22, [x20, #64]
   8da20:   f9403035    ldr x21, [x1, #96]
   8da24:   97ffd057    bl  81b80 <CUSBRequest::GetResultLength() const>
   8da28:   2a0003e2    mov w2, w0
   8da2c:   aa1403e0    mov x0, x20
   8da30:   aa1603e1    mov x1, x22
   8da34:   d63f02a0    blr x21
   8da38:   aa1303e0    mov x0, x19
   8da3c:   97ffd031    bl  81b00 <CUSBRequest::~CUSBRequest()>
   8da40:   aa1303e0    mov x0, x19
   8da44:   d2801201    mov x1, #0x90
   8da48:   97ffd10e    bl  81e80 <CUSBRequest::operator delete(void*, unsigned long)>
   8da4c:   a9425bf5    ldp x21, x22, [sp, #32]
   8da50:   17ffffea    b   8d9f8 <CUSBHIDDevice::CompletionRoutine(CUSBRequest*)+0x58>
   8da54:   940046eb    bl  9f600 <CLogger::Get()>
   8da58:   d0000103    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8da5c:   f0000121    adrp    x1, b4000 <From+0x140>
   8da60:   a94153f3    ldp x19, x20, [sp, #16]
   8da64:   91206063    add x3, x3, #0x818
   8da68:   91242021    add x1, x1, #0x908
   8da6c:   52800022    mov w2, #0x1
   8da70:   a8c37bfd    ldp x29, x30, [sp], #48
   8da74:   140048cb    b   9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8da78:   aa1303e0    mov x0, x19
   8da7c:   97ffd04d    bl  81bb0 <CUSBRequest::GetUSBError() const>
   8da80:   71000c1f    cmp w0, #0x3
   8da84:   aa1303e0    mov x0, x19
   8da88:   540001c0    b.eq    8dac0 <CUSBHIDDevice::CompletionRoutine(CUSBRequest*)+0x120>
   8da8c:   97ffd01d    bl  81b00 <CUSBRequest::~CUSBRequest()>
   8da90:   aa1303e0    mov x0, x19
   8da94:   a94153f3    ldp x19, x20, [sp, #16]
   8da98:   d2801201    mov x1, #0x90
   8da9c:   a8c37bfd    ldp x29, x30, [sp], #48
   8daa0:   17ffd0f8    b   81e80 <CUSBRequest::operator delete(void*, unsigned long)>
   8daa4:   f0000101    adrp    x1, b0000 <_etext+0xf9c>
   8daa8:   d0000100    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8daac:   a9025bf5    stp x21, x22, [sp, #32]
   8dab0:   913c6021    add x1, x1, #0xf18
   8dab4:   9111c000    add x0, x0, #0x470
   8dab8:   52801a62    mov w2, #0xd3
   8dabc:   94003c01    bl  9cac0 <assertion_failed>
   8dac0:   97ffd010    bl  81b00 <CUSBRequest::~CUSBRequest()>
   8dac4:   aa1303e0    mov x0, x19
   8dac8:   d2801201    mov x1, #0x90
   8dacc:   97ffd0ed    bl  81e80 <CUSBRequest::operator delete(void*, unsigned long)>
   8dad0:   17ffffca    b   8d9f8 <CUSBHIDDevice::CompletionRoutine(CUSBRequest*)+0x58>
   8dad4:   d503201f    nop
   8dad8:   d503201f    nop
   8dadc:   d503201f    nop

000000000008dae0 <CUSBHIDDevice::CompletionStub(CUSBRequest*, void*, void*)>:
   8dae0:   b4000082    cbz x2, 8daf0 <CUSBHIDDevice::CompletionStub(CUSBRequest*, void*, void*)+0x10>
   8dae4:   aa0003e1    mov x1, x0
   8dae8:   aa0203e0    mov x0, x2
   8daec:   17ffffad    b   8d9a0 <CUSBHIDDevice::CompletionRoutine(CUSBRequest*)>
   8daf0:   f0000101    adrp    x1, b0000 <_etext+0xf9c>
   8daf4:   d0000100    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8daf8:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   8dafc:   913c6021    add x1, x1, #0xf18
   8db00:   910003fd    mov x29, sp
   8db04:   91128000    add x0, x0, #0x4a0
   8db08:   52801ec2    mov w2, #0xf6
   8db0c:   94003bed    bl  9cac0 <assertion_failed>

000000000008db10 <CUSBBulkOnlyMassStorageDevice::Seek(unsigned long)>:
   8db10:   aa0003e2    mov x2, x0
   8db14:   aa0103e0    mov x0, x1
   8db18:   f9002041    str x1, [x2, #64]
   8db1c:   d65f03c0    ret

000000000008db20 <CUSBBulkOnlyMassStorageDevice::~CUSBBulkOnlyMassStorageDevice()>:
   8db20:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8db24:   910003fd    mov x29, sp
   8db28:   f0000121    adrp    x1, b4000 <From+0x140>
   8db2c:   91248021    add x1, x1, #0x920
   8db30:   a90153f3    stp x19, x20, [sp, #16]
   8db34:   aa0003f3    mov x19, x0
   8db38:   b9405000    ldr w0, [x0, #80]
   8db3c:   f9000261    str x1, [x19]
   8db40:   350003a0    cbnz    w0, 8dbb4 <CUSBBulkOnlyMassStorageDevice::~CUSBBulkOnlyMassStorageDevice()+0x94>
   8db44:   f9402674    ldr x20, [x19, #72]
   8db48:   b40000d4    cbz x20, 8db60 <CUSBBulkOnlyMassStorageDevice::~CUSBBulkOnlyMassStorageDevice()+0x40>
   8db4c:   aa1403e0    mov x0, x20
   8db50:   94003a0c    bl  9c380 <CPartitionManager::~CPartitionManager()>
   8db54:   aa1403e0    mov x0, x20
   8db58:   d2800901    mov x1, #0x48
   8db5c:   94006741    bl  a7860 <operator delete(void*, unsigned long)>
   8db60:   f9401a74    ldr x20, [x19, #48]
   8db64:   f900267f    str xzr, [x19, #72]
   8db68:   b40000d4    cbz x20, 8db80 <CUSBBulkOnlyMassStorageDevice::~CUSBBulkOnlyMassStorageDevice()+0x60>
   8db6c:   aa1403e0    mov x0, x20
   8db70:   97fff104    bl  89f80 <CUSBEndpoint::~CUSBEndpoint()>
   8db74:   aa1403e0    mov x0, x20
   8db78:   d2800401    mov x1, #0x20
   8db7c:   94006739    bl  a7860 <operator delete(void*, unsigned long)>
   8db80:   f9401674    ldr x20, [x19, #40]
   8db84:   f9001a7f    str xzr, [x19, #48]
   8db88:   b40000d4    cbz x20, 8dba0 <CUSBBulkOnlyMassStorageDevice::~CUSBBulkOnlyMassStorageDevice()+0x80>
   8db8c:   aa1403e0    mov x0, x20
   8db90:   97fff0fc    bl  89f80 <CUSBEndpoint::~CUSBEndpoint()>
   8db94:   aa1403e0    mov x0, x20
   8db98:   d2800401    mov x1, #0x20
   8db9c:   94006731    bl  a7860 <operator delete(void*, unsigned long)>
   8dba0:   aa1303e0    mov x0, x19
   8dba4:   f900167f    str xzr, [x19, #40]
   8dba8:   a94153f3    ldp x19, x20, [sp, #16]
   8dbac:   a8c27bfd    ldp x29, x30, [sp], #32
   8dbb0:   17fff148    b   8a0d0 <CUSBFunction::~CUSBFunction()>
   8dbb4:   94003fab    bl  9da60 <CDeviceNameService::Get()>
   8dbb8:   b9405262    ldr w2, [x19, #80]
   8dbbc:   f0000121    adrp    x1, b4000 <From+0x140>
   8dbc0:   52800023    mov w3, #0x1
   8dbc4:   91260021    add x1, x1, #0x980
   8dbc8:   94003fd2    bl  9db10 <CDeviceNameService::RemoveDevice(char const*, unsigned int, bool)>
   8dbcc:   b9405261    ldr w1, [x19, #80]
   8dbd0:   b0000160    adrp    x0, ba000 <font_data+0x1080>
   8dbd4:   91230000    add x0, x0, #0x8c0
   8dbd8:   940068d2    bl  a7f20 <CNumberPool::FreeNumber(unsigned int)>
   8dbdc:   b900527f    str wzr, [x19, #80]
   8dbe0:   17ffffd9    b   8db44 <CUSBBulkOnlyMassStorageDevice::~CUSBBulkOnlyMassStorageDevice()+0x24>
   8dbe4:   d503201f    nop
   8dbe8:   d503201f    nop
   8dbec:   d503201f    nop

000000000008dbf0 <CUSBBulkOnlyMassStorageDevice::~CUSBBulkOnlyMassStorageDevice()>:
   8dbf0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8dbf4:   910003fd    mov x29, sp
   8dbf8:   f9000bf3    str x19, [sp, #16]
   8dbfc:   aa0003f3    mov x19, x0
   8dc00:   97ffffc8    bl  8db20 <CUSBBulkOnlyMassStorageDevice::~CUSBBulkOnlyMassStorageDevice()>
   8dc04:   aa1303e0    mov x0, x19
   8dc08:   f9400bf3    ldr x19, [sp, #16]
   8dc0c:   d2800b01    mov x1, #0x58
   8dc10:   a8c27bfd    ldp x29, x30, [sp], #32
   8dc14:   14006713    b   a7860 <operator delete(void*, unsigned long)>
   8dc18:   d503201f    nop
   8dc1c:   d503201f    nop

000000000008dc20 <CUSBBulkOnlyMassStorageDevice::GetSize() const>:
   8dc20:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   8dc24:   910003fd    mov x29, sp
   8dc28:   b9403c00    ldr w0, [x0, #60]
   8dc2c:   340000c0    cbz w0, 8dc44 <CUSBBulkOnlyMassStorageDevice::GetSize() const+0x24>
   8dc30:   3100041f    cmn w0, #0x1
   8dc34:   54000140    b.eq    8dc5c <CUSBBulkOnlyMassStorageDevice::GetSize() const+0x3c>
   8dc38:   d3777c00    ubfiz   x0, x0, #9, #32
   8dc3c:   a8c17bfd    ldp x29, x30, [sp], #16
   8dc40:   d65f03c0    ret
   8dc44:   f0000120    adrp    x0, b4000 <From+0x140>
   8dc48:   91260000    add x0, x0, #0x980
   8dc4c:   91002001    add x1, x0, #0x8
   8dc50:   52803c82    mov w2, #0x1e4
   8dc54:   91008000    add x0, x0, #0x20
   8dc58:   94003b9a    bl  9cac0 <assertion_failed>
   8dc5c:   f0000120    adrp    x0, b4000 <From+0x140>
   8dc60:   91260000    add x0, x0, #0x980
   8dc64:   91002001    add x1, x0, #0x8
   8dc68:   52803ca2    mov w2, #0x1e5
   8dc6c:   9100e000    add x0, x0, #0x38
   8dc70:   94003b94    bl  9cac0 <assertion_failed>
   8dc74:   d503201f    nop
   8dc78:   d503201f    nop
   8dc7c:   d503201f    nop

000000000008dc80 <CUSBBulkOnlyMassStorageDevice::CUSBBulkOnlyMassStorageDevice(CUSBFunction*)>:
   8dc80:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8dc84:   910003fd    mov x29, sp
   8dc88:   f9000bf3    str x19, [sp, #16]
   8dc8c:   aa0003f3    mov x19, x0
   8dc90:   97fff1b4    bl  8a360 <CUSBFunction::CUSBFunction(CUSBFunction*)>
   8dc94:   f0000120    adrp    x0, b4000 <From+0x140>
   8dc98:   91248000    add x0, x0, #0x920
   8dc9c:   a902fe7f    stp xzr, xzr, [x19, #40]
   8dca0:   f9000260    str x0, [x19]
   8dca4:   a903fe7f    stp xzr, xzr, [x19, #56]
   8dca8:   f900267f    str xzr, [x19, #72]
   8dcac:   b900527f    str wzr, [x19, #80]
   8dcb0:   f9400bf3    ldr x19, [sp, #16]
   8dcb4:   a8c27bfd    ldp x29, x30, [sp], #32
   8dcb8:   d65f03c0    ret
   8dcbc:   d503201f    nop

000000000008dcc0 <CUSBBulkOnlyMassStorageDevice::GetCapacity() const>:
   8dcc0:   b9403c00    ldr w0, [x0, #60]
   8dcc4:   d65f03c0    ret
   8dcc8:   d503201f    nop
   8dccc:   d503201f    nop

000000000008dcd0 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)>:
   8dcd0:   a9b07bfd    stp x29, x30, [sp, #-256]!
   8dcd4:   910003fd    mov x29, sp
   8dcd8:   a90153f3    stp x19, x20, [sp, #16]
   8dcdc:   a9025bf5    stp x21, x22, [sp, #32]
   8dce0:   a90363f7    stp x23, x24, [sp, #48]
   8dce4:   a9046bf9    stp x25, x26, [sp, #64]
   8dce8:   b40015c1    cbz x1, 8dfa0 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)+0x2d0>
   8dcec:   aa0003f3    mov x19, x0
   8dcf0:   d1001840    sub x0, x2, #0x6
   8dcf4:   f100281f    cmp x0, #0xa
   8dcf8:   aa0203f7    mov x23, x2
   8dcfc:   54001688    b.hi    8dfcc <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)+0x2fc>
   8dd00:   f100009f    cmp x4, #0x0
   8dd04:   aa0303f8    mov x24, x3
   8dd08:   fa401860    ccmp    x3, #0x0, #0x0, ne
   8dd0c:   aa0403f6    mov x22, x4
   8dd10:   540016a0    b.eq    8dfe4 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)+0x314>
   8dd14:   91023ff4    add x20, sp, #0x8f
   8dd18:   aa0103f9    mov x25, x1
   8dd1c:   927ae694    and x20, x20, #0xffffffffffffffc0
   8dd20:   d28003e2    mov x2, #0x1f
   8dd24:   91010295    add x21, x20, #0x40
   8dd28:   52800001    mov w1, #0x0
   8dd2c:   aa1503e0    mov x0, x21
   8dd30:   12001cba    and w26, w5, #0xff
   8dd34:   940063f9    bl  a6d18 <memset>
   8dd38:   528a6aa0    mov w0, #0x5355
   8dd3c:   72a86840    movk    w0, #0x4342, lsl #16
   8dd40:   b9403a63    ldr w3, [x19, #56]
   8dd44:   53190344    ubfiz   w4, w26, #7, #1
   8dd48:   aa1703e2    mov x2, x23
   8dd4c:   b9004280    str w0, [x20, #64]
   8dd50:   aa1903e1    mov x1, x25
   8dd54:   91013e80    add x0, x20, #0x4f
   8dd58:   39403aa5    ldrb    w5, [x21, #14]
   8dd5c:   390032a4    strb    w4, [x21, #12]
   8dd60:   394036a4    ldrb    w4, [x21, #13]
   8dd64:   11000463    add w3, w3, #0x1
   8dd68:   2900daa3    stp w3, w22, [x21, #4]
   8dd6c:   330012e5    bfxil   w5, w23, #0, #5
   8dd70:   b9003a63    str w3, [x19, #56]
   8dd74:   121c6c83    and w3, w4, #0xfffffff0
   8dd78:   39003aa5    strb    w5, [x21, #14]
   8dd7c:   390036a3    strb    w3, [x21, #13]
   8dd80:   940063fe    bl  a6d78 <memcpy>
   8dd84:   aa1303e0    mov x0, x19
   8dd88:   97fff1f2    bl  8a550 <CUSBFunction::GetHost() const>
   8dd8c:   aa0003f7    mov x23, x0
   8dd90:   b4001360    cbz x0, 8dffc <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)+0x32c>
   8dd94:   f9401a61    ldr x1, [x19, #48]
   8dd98:   aa1503e2    mov x2, x21
   8dd9c:   52800004    mov w4, #0x0
   8dda0:   528003e3    mov w3, #0x1f
   8dda4:   97ffcd17    bl  81200 <CUSBHostController::Transfer(CUSBEndpoint*, void*, unsigned int, unsigned int)>
   8dda8:   37f81860    tbnz    w0, #31, 8e0b4 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)+0x3e4>
   8ddac:   b40003b6    cbz x22, 8de20 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)+0x150>
   8ddb0:   b4001338    cbz x24, 8e014 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)+0x344>
   8ddb4:   aa160300    orr x0, x24, x22
   8ddb8:   f240141f    tst x0, #0x3f
   8ddbc:   54000b00    b.eq    8df1c <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)+0x24c>
   8ddc0:   52800001    mov w1, #0x0
   8ddc4:   aa1603e0    mov x0, x22
   8ddc8:   9400664a    bl  a76f0 <operator new[](unsigned long, int)>
   8ddcc:   aa0003f9    mov x25, x0
   8ddd0:   36000cda    tbz w26, #0, 8df68 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)+0x298>
   8ddd4:   f9401661    ldr x1, [x19, #40]
   8ddd8:   aa0003e2    mov x2, x0
   8dddc:   52800004    mov w4, #0x0
   8dde0:   2a1603e3    mov w3, w22
   8dde4:   aa1703e0    mov x0, x23
   8dde8:   97ffcd06    bl  81200 <CUSBHostController::Transfer(CUSBEndpoint*, void*, unsigned int, unsigned int)>
   8ddec:   2a0003f5    mov w21, w0
   8ddf0:   36f80e40    tbz w0, #31, 8dfb8 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)+0x2e8>
   8ddf4:   94004603    bl  9f600 <CLogger::Get()>
   8ddf8:   f0000121    adrp    x1, b4000 <From+0x140>
   8ddfc:   91260021    add x1, x1, #0x980
   8de00:   9103c023    add x3, x1, #0xf0
   8de04:   52800022    mov w2, #0x1
   8de08:   91036021    add x1, x1, #0xd8
   8de0c:   940047e5    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8de10:   aa1903e0    mov x0, x25
   8de14:   94006687    bl  a7830 <operator delete[](void*)>
   8de18:   12800015    mov w21, #0xffffffff
   8de1c:   14000039    b   8df00 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)+0x230>
   8de20:   52800015    mov w21, #0x0
   8de24:   f9401661    ldr x1, [x19, #40]
   8de28:   52800004    mov w4, #0x0
   8de2c:   528001a3    mov w3, #0xd
   8de30:   aa1403e2    mov x2, x20
   8de34:   aa1703e0    mov x0, x23
   8de38:   97ffccf2    bl  81200 <CUSBHostController::Transfer(CUSBEndpoint*, void*, unsigned int, unsigned int)>
   8de3c:   7100341f    cmp w0, #0xd
   8de40:   54000460    b.eq    8decc <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)+0x1fc>
   8de44:   f0000136    adrp    x22, b4000 <From+0x140>
   8de48:   912602d6    add x22, x22, #0x980
   8de4c:   940045ed    bl  9f600 <CLogger::Get()>
   8de50:   910362d9    add x25, x22, #0xd8
   8de54:   910422c3    add x3, x22, #0x108
   8de58:   aa1903e1    mov x1, x25
   8de5c:   52800022    mov w2, #0x1
   8de60:   940047d0    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8de64:   aa1303e0    mov x0, x19
   8de68:   97fff1ae    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   8de6c:   aa0003f8    mov x24, x0
   8de70:   f9401660    ldr x0, [x19, #40]
   8de74:   97fff05f    bl  89ff0 <CUSBEndpoint::GetNumber() const>
   8de78:   32196005    orr w5, w0, #0xffffff80
   8de7c:   aa1803e1    mov x1, x24
   8de80:   aa1703e0    mov x0, x23
   8de84:   12001ca5    and w5, w5, #0xff
   8de88:   52800007    mov w7, #0x0
   8de8c:   d2800006    mov x6, #0x0
   8de90:   52800004    mov w4, #0x0
   8de94:   52800023    mov w3, #0x1
   8de98:   52800042    mov w2, #0x2
   8de9c:   97ffcc5d    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   8dea0:   37f811c0    tbnz    w0, #31, 8e0d8 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)+0x408>
   8dea4:   f9401660    ldr x0, [x19, #40]
   8dea8:   97fff072    bl  8a070 <CUSBEndpoint::ResetPID()>
   8deac:   f9401661    ldr x1, [x19, #40]
   8deb0:   aa1403e2    mov x2, x20
   8deb4:   52800004    mov w4, #0x0
   8deb8:   aa1703e0    mov x0, x23
   8debc:   528001a3    mov w3, #0xd
   8dec0:   97ffccd0    bl  81200 <CUSBHostController::Transfer(CUSBEndpoint*, void*, unsigned int, unsigned int)>
   8dec4:   7100341f    cmp w0, #0xd
   8dec8:   54000e81    b.ne    8e098 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)+0x3c8>
   8decc:   b9400281    ldr w1, [x20]
   8ded0:   528a6aa0    mov w0, #0x5355
   8ded4:   72aa6840    movk    w0, #0x5342, lsl #16
   8ded8:   6b00003f    cmp w1, w0
   8dedc:   54000ba1    b.ne    8e050 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)+0x380>
   8dee0:   b9403a60    ldr w0, [x19, #56]
   8dee4:   b9400681    ldr w1, [x20, #4]
   8dee8:   6b00003f    cmp w1, w0
   8deec:   54000a01    b.ne    8e02c <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)+0x35c>
   8def0:   39403280    ldrb    w0, [x20, #12]
   8def4:   35fff920    cbnz    w0, 8de18 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)+0x148>
   8def8:   b9400a80    ldr w0, [x20, #8]
   8defc:   35000bc0    cbnz    w0, 8e074 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)+0x3a4>
   8df00:   a94153f3    ldp x19, x20, [sp, #16]
   8df04:   2a1503e0    mov w0, w21
   8df08:   a9425bf5    ldp x21, x22, [sp, #32]
   8df0c:   a94363f7    ldp x23, x24, [sp, #48]
   8df10:   a9446bf9    ldp x25, x26, [sp, #64]
   8df14:   a8d07bfd    ldp x29, x30, [sp], #256
   8df18:   d65f03c0    ret
   8df1c:   a9428665    ldp x5, x1, [x19, #40]
   8df20:   f240035f    tst x26, #0x1
   8df24:   2a1603e3    mov w3, w22
   8df28:   aa1803e2    mov x2, x24
   8df2c:   52800004    mov w4, #0x0
   8df30:   9a8110a1    csel    x1, x5, x1, ne
   8df34:   aa1703e0    mov x0, x23
   8df38:   97ffccb2    bl  81200 <CUSBHostController::Transfer(CUSBEndpoint*, void*, unsigned int, unsigned int)>
   8df3c:   2a0003f5    mov w21, w0
   8df40:   36fff720    tbz w0, #31, 8de24 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)+0x154>
   8df44:   940045af    bl  9f600 <CLogger::Get()>
   8df48:   f0000121    adrp    x1, b4000 <From+0x140>
   8df4c:   91260021    add x1, x1, #0x980
   8df50:   9103c023    add x3, x1, #0xf0
   8df54:   52800022    mov w2, #0x1
   8df58:   91036021    add x1, x1, #0xd8
   8df5c:   12800015    mov w21, #0xffffffff
   8df60:   94004790    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8df64:   17ffffe7    b   8df00 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)+0x230>
   8df68:   aa1803e1    mov x1, x24
   8df6c:   aa1603e2    mov x2, x22
   8df70:   94006382    bl  a6d78 <memcpy>
   8df74:   f9401a61    ldr x1, [x19, #48]
   8df78:   2a1603e3    mov w3, w22
   8df7c:   aa1903e2    mov x2, x25
   8df80:   aa1703e0    mov x0, x23
   8df84:   52800004    mov w4, #0x0
   8df88:   97ffcc9e    bl  81200 <CUSBHostController::Transfer(CUSBEndpoint*, void*, unsigned int, unsigned int)>
   8df8c:   2a0003f5    mov w21, w0
   8df90:   37fff320    tbnz    w0, #31, 8ddf4 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)+0x124>
   8df94:   aa1903e0    mov x0, x25
   8df98:   94006626    bl  a7830 <operator delete[](void*)>
   8df9c:   17ffffa2    b   8de24 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)+0x154>
   8dfa0:   f0000120    adrp    x0, b4000 <From+0x140>
   8dfa4:   91260000    add x0, x0, #0x980
   8dfa8:   91002001    add x1, x0, #0x8
   8dfac:   52804782    mov w2, #0x23c
   8dfb0:   91016000    add x0, x0, #0x58
   8dfb4:   94003ac3    bl  9cac0 <assertion_failed>
   8dfb8:   aa1603e2    mov x2, x22
   8dfbc:   aa1803e0    mov x0, x24
   8dfc0:   aa1903e1    mov x1, x25
   8dfc4:   9400636d    bl  a6d78 <memcpy>
   8dfc8:   17fffff3    b   8df94 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)+0x2c4>
   8dfcc:   f0000120    adrp    x0, b4000 <From+0x140>
   8dfd0:   91260000    add x0, x0, #0x980
   8dfd4:   91002001    add x1, x0, #0x8
   8dfd8:   528047a2    mov w2, #0x23d
   8dfdc:   9101a000    add x0, x0, #0x68
   8dfe0:   94003ab8    bl  9cac0 <assertion_failed>
   8dfe4:   f0000120    adrp    x0, b4000 <From+0x140>
   8dfe8:   91260000    add x0, x0, #0x980
   8dfec:   91002001    add x1, x0, #0x8
   8dff0:   528047c2    mov w2, #0x23e
   8dff4:   91024000    add x0, x0, #0x90
   8dff8:   94003ab2    bl  9cac0 <assertion_failed>
   8dffc:   f0000120    adrp    x0, b4000 <From+0x140>
   8e000:   91260000    add x0, x0, #0x980
   8e004:   91002001    add x1, x0, #0x8
   8e008:   528049c2    mov w2, #0x24e
   8e00c:   9102c000    add x0, x0, #0xb0
   8e010:   94003aac    bl  9cac0 <assertion_failed>
   8e014:   d0000120    adrp    x0, b4000 <From+0x140>
   8e018:   91260000    add x0, x0, #0x980
   8e01c:   91002001    add x1, x0, #0x8
   8e020:   52804b62    mov w2, #0x25b
   8e024:   91038000    add x0, x0, #0xe0
   8e028:   94003aa6    bl  9cac0 <assertion_failed>
   8e02c:   94004575    bl  9f600 <CLogger::Get()>
   8e030:   d0000121    adrp    x1, b4000 <From+0x140>
   8e034:   91260021    add x1, x1, #0x980
   8e038:   91060023    add x3, x1, #0x180
   8e03c:   52800022    mov w2, #0x1
   8e040:   91036021    add x1, x1, #0xd8
   8e044:   12800015    mov w21, #0xffffffff
   8e048:   94004756    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8e04c:   17ffffad    b   8df00 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)+0x230>
   8e050:   9400456c    bl  9f600 <CLogger::Get()>
   8e054:   d0000121    adrp    x1, b4000 <From+0x140>
   8e058:   91260021    add x1, x1, #0x980
   8e05c:   9105a023    add x3, x1, #0x168
   8e060:   52800022    mov w2, #0x1
   8e064:   91036021    add x1, x1, #0xd8
   8e068:   12800015    mov w21, #0xffffffff
   8e06c:   9400474d    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8e070:   17ffffa4    b   8df00 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)+0x230>
   8e074:   94004563    bl  9f600 <CLogger::Get()>
   8e078:   d0000121    adrp    x1, b4000 <From+0x140>
   8e07c:   91260021    add x1, x1, #0x980
   8e080:   91066023    add x3, x1, #0x198
   8e084:   52800022    mov w2, #0x1
   8e088:   91036021    add x1, x1, #0xd8
   8e08c:   12800015    mov w21, #0xffffffff
   8e090:   94004744    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8e094:   17ffff9b    b   8df00 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)+0x230>
   8e098:   9400455a    bl  9f600 <CLogger::Get()>
   8e09c:   910522c3    add x3, x22, #0x148
   8e0a0:   aa1903e1    mov x1, x25
   8e0a4:   52800022    mov w2, #0x1
   8e0a8:   12800015    mov w21, #0xffffffff
   8e0ac:   9400473d    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8e0b0:   17ffff94    b   8df00 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)+0x230>
   8e0b4:   94004553    bl  9f600 <CLogger::Get()>
   8e0b8:   d0000121    adrp    x1, b4000 <From+0x140>
   8e0bc:   91260021    add x1, x1, #0x980
   8e0c0:   91030023    add x3, x1, #0xc0
   8e0c4:   52800022    mov w2, #0x1
   8e0c8:   91036021    add x1, x1, #0xd8
   8e0cc:   12800015    mov w21, #0xffffffff
   8e0d0:   94004734    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8e0d4:   17ffff8b    b   8df00 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)+0x230>
   8e0d8:   9400454a    bl  9f600 <CLogger::Get()>
   8e0dc:   910482c3    add x3, x22, #0x120
   8e0e0:   aa1903e1    mov x1, x25
   8e0e4:   52800082    mov w2, #0x4
   8e0e8:   12800015    mov w21, #0xffffffff
   8e0ec:   9400472d    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8e0f0:   17ffff84    b   8df00 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)+0x230>
   8e0f4:   d503201f    nop
   8e0f8:   d503201f    nop
   8e0fc:   d503201f    nop

000000000008e100 <CUSBBulkOnlyMassStorageDevice::TryRead(void*, unsigned long)>:
   8e100:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   8e104:   910003fd    mov x29, sp
   8e108:   aa0103e3    mov x3, x1
   8e10c:   b40004a1    cbz x1, 8e1a0 <CUSBBulkOnlyMassStorageDevice::TryRead(void*, unsigned long)+0xa0>
   8e110:   b240a3e1    mov x1, #0x1ffffffffff
   8e114:   f9402005    ldr x5, [x0, #64]
   8e118:   f24020bf    tst x5, #0x1ff
   8e11c:   fa4100a2    ccmp    x5, x1, #0x2, eq
   8e120:   54000508    b.hi    8e1c0 <CUSBBulkOnlyMassStorageDevice::TryRead(void*, unsigned long)+0xc0>
   8e124:   f240205f    tst x2, #0x1ff
   8e128:   f9000bf3    str x19, [sp, #16]
   8e12c:   d349fca5    lsr x5, x5, #9
   8e130:   aa0203f3    mov x19, x2
   8e134:   54000441    b.ne    8e1bc <CUSBBulkOnlyMassStorageDevice::TryRead(void*, unsigned long)+0xbc>
   8e138:   d349fc47    lsr x7, x2, #9
   8e13c:   5ac008a1    rev w1, w5
   8e140:   39009bff    strb    wzr, [sp, #38]
   8e144:   5ac004e7    rev16   w7, w7
   8e148:   53107c21    lsr w1, w1, #16
   8e14c:   3900a7ff    strb    wzr, [sp, #41]
   8e150:   5ac008a6    rev w6, w5
   8e154:   d3483ce8    ubfx    x8, x7, #8, #8
   8e158:   52800509    mov w9, #0x28
   8e15c:   aa0203e4    mov x4, x2
   8e160:   79004be1    strh    w1, [sp, #36]
   8e164:   52800025    mov w5, #0x1
   8e168:   910083e1    add x1, sp, #0x20
   8e16c:   790047e6    strh    w6, [sp, #34]
   8e170:   d2800142    mov x2, #0xa
   8e174:   790043e9    strh    w9, [sp, #32]
   8e178:   39009fe7    strb    w7, [sp, #39]
   8e17c:   3900a3e8    strb    w8, [sp, #40]
   8e180:   97fffed4    bl  8dcd0 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)>
   8e184:   2a0003e1    mov w1, w0
   8e188:   2a1303e0    mov w0, w19
   8e18c:   6b13003f    cmp w1, w19
   8e190:   540001c1    b.ne    8e1c8 <CUSBBulkOnlyMassStorageDevice::TryRead(void*, unsigned long)+0xc8>
   8e194:   f9400bf3    ldr x19, [sp, #16]
   8e198:   a8c37bfd    ldp x29, x30, [sp], #48
   8e19c:   d65f03c0    ret
   8e1a0:   d0000120    adrp    x0, b4000 <From+0x140>
   8e1a4:   91260000    add x0, x0, #0x980
   8e1a8:   f9000bf3    str x19, [sp, #16]
   8e1ac:   91002001    add x1, x0, #0x8
   8e1b0:   52803e22    mov w2, #0x1f1
   8e1b4:   91038000    add x0, x0, #0xe0
   8e1b8:   94003a42    bl  9cac0 <assertion_failed>
   8e1bc:   f9400bf3    ldr x19, [sp, #16]
   8e1c0:   12800000    mov w0, #0xffffffff
   8e1c4:   17fffff5    b   8e198 <CUSBBulkOnlyMassStorageDevice::TryRead(void*, unsigned long)+0x98>
   8e1c8:   9400450e    bl  9f600 <CLogger::Get()>
   8e1cc:   d0000121    adrp    x1, b4000 <From+0x140>
   8e1d0:   91260021    add x1, x1, #0x980
   8e1d4:   9106c023    add x3, x1, #0x1b0
   8e1d8:   52800022    mov w2, #0x1
   8e1dc:   91036021    add x1, x1, #0xd8
   8e1e0:   940046f0    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8e1e4:   f9400bf3    ldr x19, [sp, #16]
   8e1e8:   12800000    mov w0, #0xffffffff
   8e1ec:   17ffffeb    b   8e198 <CUSBBulkOnlyMassStorageDevice::TryRead(void*, unsigned long)+0x98>

000000000008e1f0 <CUSBBulkOnlyMassStorageDevice::TryWrite(void const*, unsigned long)>:
   8e1f0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   8e1f4:   910003fd    mov x29, sp
   8e1f8:   aa0103e3    mov x3, x1
   8e1fc:   f9000bf3    str x19, [sp, #16]
   8e200:   b4000441    cbz x1, 8e288 <CUSBBulkOnlyMassStorageDevice::TryWrite(void const*, unsigned long)+0x98>
   8e204:   aa0203f3    mov x19, x2
   8e208:   f9402002    ldr x2, [x0, #64]
   8e20c:   b240a3e1    mov x1, #0x1ffffffffff
   8e210:   f240205f    tst x2, #0x1ff
   8e214:   fa410042    ccmp    x2, x1, #0x2, eq
   8e218:   54000548    b.hi    8e2c0 <CUSBBulkOnlyMassStorageDevice::TryWrite(void const*, unsigned long)+0xd0>
   8e21c:   f240227f    tst x19, #0x1ff
   8e220:   d349fc42    lsr x2, x2, #9
   8e224:   540004e1    b.ne    8e2c0 <CUSBBulkOnlyMassStorageDevice::TryWrite(void const*, unsigned long)+0xd0>
   8e228:   5ac00841    rev w1, w2
   8e22c:   d349fe66    lsr x6, x19, #9
   8e230:   39009bff    strb    wzr, [sp, #38]
   8e234:   5ac004c6    rev16   w6, w6
   8e238:   53107c21    lsr w1, w1, #16
   8e23c:   3900a7ff    strb    wzr, [sp, #41]
   8e240:   5ac00842    rev w2, w2
   8e244:   d3483cc7    ubfx    x7, x6, #8, #8
   8e248:   52810548    mov w8, #0x82a
   8e24c:   52800005    mov w5, #0x0
   8e250:   79004be1    strh    w1, [sp, #36]
   8e254:   aa1303e4    mov x4, x19
   8e258:   910083e1    add x1, sp, #0x20
   8e25c:   790047e2    strh    w2, [sp, #34]
   8e260:   d2800142    mov x2, #0xa
   8e264:   790043e8    strh    w8, [sp, #32]
   8e268:   39009fe6    strb    w6, [sp, #39]
   8e26c:   3900a3e7    strb    w7, [sp, #40]
   8e270:   97fffe98    bl  8dcd0 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)>
   8e274:   37f80160    tbnz    w0, #31, 8e2a0 <CUSBBulkOnlyMassStorageDevice::TryWrite(void const*, unsigned long)+0xb0>
   8e278:   2a1303e0    mov w0, w19
   8e27c:   f9400bf3    ldr x19, [sp, #16]
   8e280:   a8c37bfd    ldp x29, x30, [sp], #48
   8e284:   d65f03c0    ret
   8e288:   d0000120    adrp    x0, b4000 <From+0x140>
   8e28c:   91260000    add x0, x0, #0x980
   8e290:   91002001    add x1, x0, #0x8
   8e294:   528042c2    mov w2, #0x216
   8e298:   91038000    add x0, x0, #0xe0
   8e29c:   94003a09    bl  9cac0 <assertion_failed>
   8e2a0:   940044d8    bl  9f600 <CLogger::Get()>
   8e2a4:   d0000121    adrp    x1, b4000 <From+0x140>
   8e2a8:   91260021    add x1, x1, #0x980
   8e2ac:   91070023    add x3, x1, #0x1c0
   8e2b0:   52800022    mov w2, #0x1
   8e2b4:   91036021    add x1, x1, #0xd8
   8e2b8:   940046ba    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8e2bc:   d503201f    nop
   8e2c0:   12800013    mov w19, #0xffffffff
   8e2c4:   17ffffed    b   8e278 <CUSBBulkOnlyMassStorageDevice::TryWrite(void const*, unsigned long)+0x88>
   8e2c8:   d503201f    nop
   8e2cc:   d503201f    nop

000000000008e2d0 <CUSBBulkOnlyMassStorageDevice::Reset()>:
   8e2d0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   8e2d4:   910003fd    mov x29, sp
   8e2d8:   a90153f3    stp x19, x20, [sp, #16]
   8e2dc:   aa0003f3    mov x19, x0
   8e2e0:   f90013f5    str x21, [sp, #32]
   8e2e4:   97fff09b    bl  8a550 <CUSBFunction::GetHost() const>
   8e2e8:   b4000780    cbz x0, 8e3d8 <CUSBBulkOnlyMassStorageDevice::Reset()+0x108>
   8e2ec:   aa0003f4    mov x20, x0
   8e2f0:   aa1303e0    mov x0, x19
   8e2f4:   97fff08b    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   8e2f8:   aa0003f5    mov x21, x0
   8e2fc:   aa1303e0    mov x0, x19
   8e300:   97fff0f8    bl  8a6e0 <CUSBFunction::GetInterfaceNumber() const>
   8e304:   12001c05    and w5, w0, #0xff
   8e308:   aa1503e1    mov x1, x21
   8e30c:   aa1403e0    mov x0, x20
   8e310:   52800007    mov w7, #0x0
   8e314:   d2800006    mov x6, #0x0
   8e318:   52800004    mov w4, #0x0
   8e31c:   12800003    mov w3, #0xffffffff
   8e320:   52800422    mov w2, #0x21
   8e324:   97ffcb3b    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   8e328:   37f80640    tbnz    w0, #31, 8e3f0 <CUSBBulkOnlyMassStorageDevice::Reset()+0x120>
   8e32c:   940060d5    bl  a6680 <CTimer::Get()>
   8e330:   52800c80    mov w0, #0x64
   8e334:   94006077    bl  a6510 <CTimer::SimpleMsDelay(unsigned int)>
   8e338:   aa1303e0    mov x0, x19
   8e33c:   97fff079    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   8e340:   aa0003f5    mov x21, x0
   8e344:   f9401660    ldr x0, [x19, #40]
   8e348:   97ffef2a    bl  89ff0 <CUSBEndpoint::GetNumber() const>
   8e34c:   32196005    orr w5, w0, #0xffffff80
   8e350:   aa1503e1    mov x1, x21
   8e354:   aa1403e0    mov x0, x20
   8e358:   12001ca5    and w5, w5, #0xff
   8e35c:   52800007    mov w7, #0x0
   8e360:   d2800006    mov x6, #0x0
   8e364:   52800004    mov w4, #0x0
   8e368:   52800023    mov w3, #0x1
   8e36c:   52800042    mov w2, #0x2
   8e370:   97ffcb28    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   8e374:   37f80620    tbnz    w0, #31, 8e438 <CUSBBulkOnlyMassStorageDevice::Reset()+0x168>
   8e378:   aa1303e0    mov x0, x19
   8e37c:   97fff069    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   8e380:   aa0003f5    mov x21, x0
   8e384:   f9401a60    ldr x0, [x19, #48]
   8e388:   97ffef1a    bl  89ff0 <CUSBEndpoint::GetNumber() const>
   8e38c:   12001c05    and w5, w0, #0xff
   8e390:   aa1503e1    mov x1, x21
   8e394:   aa1403e0    mov x0, x20
   8e398:   52800007    mov w7, #0x0
   8e39c:   d2800006    mov x6, #0x0
   8e3a0:   52800004    mov w4, #0x0
   8e3a4:   52800023    mov w3, #0x1
   8e3a8:   52800042    mov w2, #0x2
   8e3ac:   97ffcb19    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   8e3b0:   37f80320    tbnz    w0, #31, 8e414 <CUSBBulkOnlyMassStorageDevice::Reset()+0x144>
   8e3b4:   f9401660    ldr x0, [x19, #40]
   8e3b8:   97ffef2e    bl  8a070 <CUSBEndpoint::ResetPID()>
   8e3bc:   f9401a60    ldr x0, [x19, #48]
   8e3c0:   97ffef2c    bl  8a070 <CUSBEndpoint::ResetPID()>
   8e3c4:   52800000    mov w0, #0x0
   8e3c8:   a94153f3    ldp x19, x20, [sp, #16]
   8e3cc:   f94013f5    ldr x21, [sp, #32]
   8e3d0:   a8c37bfd    ldp x29, x30, [sp], #48
   8e3d4:   d65f03c0    ret
   8e3d8:   d0000120    adrp    x0, b4000 <From+0x140>
   8e3dc:   91260000    add x0, x0, #0x980
   8e3e0:   91002001    add x1, x0, #0x8
   8e3e4:   52805762    mov w2, #0x2bb
   8e3e8:   9102c000    add x0, x0, #0xb0
   8e3ec:   940039b5    bl  9cac0 <assertion_failed>
   8e3f0:   94004484    bl  9f600 <CLogger::Get()>
   8e3f4:   d0000121    adrp    x1, b4000 <From+0x140>
   8e3f8:   91260021    add x1, x1, #0x980
   8e3fc:   91074023    add x3, x1, #0x1d0
   8e400:   52800082    mov w2, #0x4
   8e404:   91036021    add x1, x1, #0xd8
   8e408:   94004666    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8e40c:   12800000    mov w0, #0xffffffff
   8e410:   17ffffee    b   8e3c8 <CUSBBulkOnlyMassStorageDevice::Reset()+0xf8>
   8e414:   9400447b    bl  9f600 <CLogger::Get()>
   8e418:   d0000121    adrp    x1, b4000 <From+0x140>
   8e41c:   91260021    add x1, x1, #0x980
   8e420:   9107a023    add x3, x1, #0x1e8
   8e424:   52800082    mov w2, #0x4
   8e428:   91036021    add x1, x1, #0xd8
   8e42c:   9400465d    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8e430:   12800000    mov w0, #0xffffffff
   8e434:   17ffffe5    b   8e3c8 <CUSBBulkOnlyMassStorageDevice::Reset()+0xf8>
   8e438:   94004472    bl  9f600 <CLogger::Get()>
   8e43c:   d0000121    adrp    x1, b4000 <From+0x140>
   8e440:   91260021    add x1, x1, #0x980
   8e444:   91048023    add x3, x1, #0x120
   8e448:   52800082    mov w2, #0x4
   8e44c:   91036021    add x1, x1, #0xd8
   8e450:   94004654    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8e454:   12800000    mov w0, #0xffffffff
   8e458:   17ffffdc    b   8e3c8 <CUSBBulkOnlyMassStorageDevice::Reset()+0xf8>
   8e45c:   d503201f    nop

000000000008e460 <CUSBBulkOnlyMassStorageDevice::Read(void*, unsigned long)>:
   8e460:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   8e464:   910003fd    mov x29, sp
   8e468:   a90153f3    stp x19, x20, [sp, #16]
   8e46c:   aa0003f4    mov x20, x0
   8e470:   a9025bf5    stp x21, x22, [sp, #32]
   8e474:   2a0203f6    mov w22, w2
   8e478:   52800115    mov w21, #0x8
   8e47c:   a90363f7    stp x23, x24, [sp, #48]
   8e480:   aa0203f7    mov x23, x2
   8e484:   aa0103f8    mov x24, x1
   8e488:   aa1703e2    mov x2, x23
   8e48c:   aa1803e1    mov x1, x24
   8e490:   aa1403e0    mov x0, x20
   8e494:   97ffff1b    bl  8e100 <CUSBBulkOnlyMassStorageDevice::TryRead(void*, unsigned long)>
   8e498:   2a0003f3    mov w19, w0
   8e49c:   aa1403e0    mov x0, x20
   8e4a0:   6b16027f    cmp w19, w22
   8e4a4:   540000e1    b.ne    8e4c0 <CUSBBulkOnlyMassStorageDevice::Read(void*, unsigned long)+0x60>
   8e4a8:   a94153f3    ldp x19, x20, [sp, #16]
   8e4ac:   2a1603e0    mov w0, w22
   8e4b0:   a9425bf5    ldp x21, x22, [sp, #32]
   8e4b4:   a94363f7    ldp x23, x24, [sp, #48]
   8e4b8:   a8c47bfd    ldp x29, x30, [sp], #64
   8e4bc:   d65f03c0    ret
   8e4c0:   97ffff84    bl  8e2d0 <CUSBBulkOnlyMassStorageDevice::Reset()>
   8e4c4:   710006b5    subs    w21, w21, #0x1
   8e4c8:   35000120    cbnz    w0, 8e4ec <CUSBBulkOnlyMassStorageDevice::Read(void*, unsigned long)+0x8c>
   8e4cc:   54fffde1    b.ne    8e488 <CUSBBulkOnlyMassStorageDevice::Read(void*, unsigned long)+0x28>
   8e4d0:   2a1303f6    mov w22, w19
   8e4d4:   a94153f3    ldp x19, x20, [sp, #16]
   8e4d8:   2a1603e0    mov w0, w22
   8e4dc:   a9425bf5    ldp x21, x22, [sp, #32]
   8e4e0:   a94363f7    ldp x23, x24, [sp, #48]
   8e4e4:   a8c47bfd    ldp x29, x30, [sp], #64
   8e4e8:   d65f03c0    ret
   8e4ec:   2a0003f6    mov w22, w0
   8e4f0:   17ffffee    b   8e4a8 <CUSBBulkOnlyMassStorageDevice::Read(void*, unsigned long)+0x48>
   8e4f4:   d503201f    nop
   8e4f8:   d503201f    nop
   8e4fc:   d503201f    nop

000000000008e500 <CUSBBulkOnlyMassStorageDevice::Write(void const*, unsigned long)>:
   8e500:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   8e504:   910003fd    mov x29, sp
   8e508:   a90153f3    stp x19, x20, [sp, #16]
   8e50c:   aa0003f4    mov x20, x0
   8e510:   a9025bf5    stp x21, x22, [sp, #32]
   8e514:   2a0203f6    mov w22, w2
   8e518:   52800115    mov w21, #0x8
   8e51c:   a90363f7    stp x23, x24, [sp, #48]
   8e520:   aa0203f7    mov x23, x2
   8e524:   aa0103f8    mov x24, x1
   8e528:   aa1703e2    mov x2, x23
   8e52c:   aa1803e1    mov x1, x24
   8e530:   aa1403e0    mov x0, x20
   8e534:   97ffff2f    bl  8e1f0 <CUSBBulkOnlyMassStorageDevice::TryWrite(void const*, unsigned long)>
   8e538:   2a0003f3    mov w19, w0
   8e53c:   aa1403e0    mov x0, x20
   8e540:   6b16027f    cmp w19, w22
   8e544:   540000e1    b.ne    8e560 <CUSBBulkOnlyMassStorageDevice::Write(void const*, unsigned long)+0x60>
   8e548:   a94153f3    ldp x19, x20, [sp, #16]
   8e54c:   2a1603e0    mov w0, w22
   8e550:   a9425bf5    ldp x21, x22, [sp, #32]
   8e554:   a94363f7    ldp x23, x24, [sp, #48]
   8e558:   a8c47bfd    ldp x29, x30, [sp], #64
   8e55c:   d65f03c0    ret
   8e560:   97ffff5c    bl  8e2d0 <CUSBBulkOnlyMassStorageDevice::Reset()>
   8e564:   710006b5    subs    w21, w21, #0x1
   8e568:   35000120    cbnz    w0, 8e58c <CUSBBulkOnlyMassStorageDevice::Write(void const*, unsigned long)+0x8c>
   8e56c:   54fffde1    b.ne    8e528 <CUSBBulkOnlyMassStorageDevice::Write(void const*, unsigned long)+0x28>
   8e570:   2a1303f6    mov w22, w19
   8e574:   a94153f3    ldp x19, x20, [sp, #16]
   8e578:   2a1603e0    mov w0, w22
   8e57c:   a9425bf5    ldp x21, x22, [sp, #32]
   8e580:   a94363f7    ldp x23, x24, [sp, #48]
   8e584:   a8c47bfd    ldp x29, x30, [sp], #64
   8e588:   d65f03c0    ret
   8e58c:   2a0003f6    mov w22, w0
   8e590:   17ffffee    b   8e548 <CUSBBulkOnlyMassStorageDevice::Write(void const*, unsigned long)+0x48>
   8e594:   d503201f    nop
   8e598:   d503201f    nop
   8e59c:   d503201f    nop

000000000008e5a0 <CUSBBulkOnlyMassStorageDevice::Configure()>:
   8e5a0:   a9b67bfd    stp x29, x30, [sp, #-160]!
   8e5a4:   910003fd    mov x29, sp
   8e5a8:   a90153f3    stp x19, x20, [sp, #16]
   8e5ac:   aa0003f4    mov x20, x0
   8e5b0:   97ffefc4    bl  8a4c0 <CUSBFunction::GetNumEndpoints() const>
   8e5b4:   12001c00    and w0, w0, #0xff
   8e5b8:   7100041f    cmp w0, #0x1
   8e5bc:   540018e9    b.ls    8e8d8 <CUSBBulkOnlyMassStorageDevice::Configure()+0x338>
   8e5c0:   a9025bf5    stp x21, x22, [sp, #32]
   8e5c4:   14000005    b   8e5d8 <CUSBBulkOnlyMassStorageDevice::Configure()+0x38>
   8e5c8:   39400e61    ldrb    w1, [x19, #3]
   8e5cc:   12001421    and w1, w1, #0x3f
   8e5d0:   7100083f    cmp w1, #0x2
   8e5d4:   540005c0    b.eq    8e68c <CUSBBulkOnlyMassStorageDevice::Configure()+0xec>
   8e5d8:   528000a1    mov w1, #0x5
   8e5dc:   aa1403e0    mov x0, x20
   8e5e0:   97ffefe8    bl  8a580 <CUSBFunction::GetDescriptor(unsigned char)>
   8e5e4:   aa0003f3    mov x19, x0
   8e5e8:   b5ffff00    cbnz    x0, 8e5c8 <CUSBBulkOnlyMassStorageDevice::Configure()+0x28>
   8e5ec:   f9401680    ldr x0, [x20, #40]
   8e5f0:   b4001540    cbz x0, 8e898 <CUSBBulkOnlyMassStorageDevice::Configure()+0x2f8>
   8e5f4:   f9401a80    ldr x0, [x20, #48]
   8e5f8:   b4001500    cbz x0, 8e898 <CUSBBulkOnlyMassStorageDevice::Configure()+0x2f8>
   8e5fc:   aa1403e0    mov x0, x20
   8e600:   97ffeeec    bl  8a1b0 <CUSBFunction::Configure()>
   8e604:   36001580    tbz w0, #0, 8e8b4 <CUSBBulkOnlyMassStorageDevice::Configure()+0x314>
   8e608:   52800486    mov w6, #0x24
   8e60c:   52800255    mov w21, #0x12
   8e610:   52800025    mov w5, #0x1
   8e614:   d2800484    mov x4, #0x24
   8e618:   9101e3e3    add x3, sp, #0x78
   8e61c:   d28000c2    mov x2, #0x6
   8e620:   b9003bf5    str w21, [sp, #56]
   8e624:   9100e3e1    add x1, sp, #0x38
   8e628:   aa1403e0    mov x0, x20
   8e62c:   79007be6    strh    w6, [sp, #60]
   8e630:   97fffda8    bl  8dcd0 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)>
   8e634:   7100901f    cmp w0, #0x24
   8e638:   540015c1    b.ne    8e8f0 <CUSBBulkOnlyMassStorageDevice::Configure()+0x350>
   8e63c:   3941e3e0    ldrb    w0, [sp, #120]
   8e640:   52800c73    mov w19, #0x63
   8e644:   52800076    mov w22, #0x3
   8e648:   f240101f    tst x0, #0x1f
   8e64c:   54000560    b.eq    8e6f8 <CUSBBulkOnlyMassStorageDevice::Configure()+0x158>
   8e650:   940043ec    bl  9f600 <CLogger::Get()>
   8e654:   f9403fe4    ldr x4, [sp, #120]
   8e658:   d0000121    adrp    x1, b4000 <From+0x140>
   8e65c:   91260021    add x1, x1, #0x980
   8e660:   91090023    add x3, x1, #0x240
   8e664:   52800022    mov w2, #0x1
   8e668:   91036021    add x1, x1, #0xd8
   8e66c:   12001084    and w4, w4, #0x1f
   8e670:   940045cc    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8e674:   a9425bf5    ldp x21, x22, [sp, #32]
   8e678:   52800013    mov w19, #0x0
   8e67c:   2a1303e0    mov w0, w19
   8e680:   a94153f3    ldp x19, x20, [sp, #16]
   8e684:   a8ca7bfd    ldp x29, x30, [sp], #160
   8e688:   d65f03c0    ret
   8e68c:   39c00a60    ldrsb   w0, [x19, #2]
   8e690:   37f80ea0    tbnz    w0, #31, 8e864 <CUSBBulkOnlyMassStorageDevice::Configure()+0x2c4>
   8e694:   f9401a80    ldr x0, [x20, #48]
   8e698:   b5001000    cbnz    x0, 8e898 <CUSBBulkOnlyMassStorageDevice::Configure()+0x2f8>
   8e69c:   d2800400    mov x0, #0x20
   8e6a0:   94006448    bl  a77c0 <operator new(unsigned long)>
   8e6a4:   aa0003f5    mov x21, x0
   8e6a8:   aa1403e0    mov x0, x20
   8e6ac:   97ffef91    bl  8a4f0 <CUSBFunction::GetDevice() const>
   8e6b0:   aa0003e1    mov x1, x0
   8e6b4:   aa1303e2    mov x2, x19
   8e6b8:   aa1503e0    mov x0, x21
   8e6bc:   97ffedc5    bl  89dd0 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   8e6c0:   f9001a95    str x21, [x20, #48]
   8e6c4:   17ffffc5    b   8e5d8 <CUSBBulkOnlyMassStorageDevice::Configure()+0x38>
   8e6c8:   52800025    mov w5, #0x1
   8e6cc:   d2800244    mov x4, #0x12
   8e6d0:   b9004bf6    str w22, [sp, #72]
   8e6d4:   910163e3    add x3, sp, #0x58
   8e6d8:   d28000c2    mov x2, #0x6
   8e6dc:   79009bf5    strh    w21, [sp, #76]
   8e6e0:   910123e1    add x1, sp, #0x48
   8e6e4:   aa1403e0    mov x0, x20
   8e6e8:   97fffd7a    bl  8dcd0 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)>
   8e6ec:   37f81140    tbnz    w0, #31, 8e914 <CUSBBulkOnlyMassStorageDevice::Configure()+0x374>
   8e6f0:   71000673    subs    w19, w19, #0x1
   8e6f4:   54001360    b.eq    8e960 <CUSBBulkOnlyMassStorageDevice::Configure()+0x3c0>
   8e6f8:   94005fe2    bl  a6680 <CTimer::Get()>
   8e6fc:   52800c80    mov w0, #0x64
   8e700:   94005f84    bl  a6510 <CTimer::SimpleMsDelay(unsigned int)>
   8e704:   910103e1    add x1, sp, #0x40
   8e708:   aa1403e0    mov x0, x20
   8e70c:   b90043ff    str wzr, [sp, #64]
   8e710:   52800005    mov w5, #0x0
   8e714:   d2800004    mov x4, #0x0
   8e718:   79008bff    strh    wzr, [sp, #68]
   8e71c:   d2800003    mov x3, #0x0
   8e720:   d28000c2    mov x2, #0x6
   8e724:   97fffd6b    bl  8dcd0 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)>
   8e728:   37fffd00    tbnz    w0, #31, 8e6c8 <CUSBBulkOnlyMassStorageDevice::Configure()+0x128>
   8e72c:   d28004a0    mov x0, #0x25
   8e730:   910103e3    add x3, sp, #0x40
   8e734:   7900a3ff    strh    wzr, [sp, #80]
   8e738:   910123e1    add x1, sp, #0x48
   8e73c:   52800025    mov w5, #0x1
   8e740:   d2800104    mov x4, #0x8
   8e744:   d2800142    mov x2, #0xa
   8e748:   f90027e0    str x0, [sp, #72]
   8e74c:   aa1403e0    mov x0, x20
   8e750:   97fffd60    bl  8dcd0 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)>
   8e754:   7100201f    cmp w0, #0x8
   8e758:   54001161    b.ne    8e984 <CUSBBulkOnlyMassStorageDevice::Configure()+0x3e4>
   8e75c:   b94047f3    ldr w19, [sp, #68]
   8e760:   7140827f    cmp w19, #0x20, lsl #12
   8e764:   54000ea1    b.ne    8e938 <CUSBBulkOnlyMassStorageDevice::Configure()+0x398>
   8e768:   b94043e1    ldr w1, [sp, #64]
   8e76c:   5ac00820    rev w0, w1
   8e770:   3100043f    cmn w1, #0x1
   8e774:   b9003e80    str w0, [x20, #60]
   8e778:   54001220    b.eq    8e9bc <CUSBBulkOnlyMassStorageDevice::Configure()+0x41c>
   8e77c:   11000400    add w0, w0, #0x1
   8e780:   d0000133    adrp    x19, b4000 <From+0x140>
   8e784:   91260273    add x19, x19, #0x980
   8e788:   90000175    adrp    x21, ba000 <font_data+0x1080>
   8e78c:   912302b5    add x21, x21, #0x8c0
   8e790:   b9003e80    str w0, [x20, #60]
   8e794:   91036276    add x22, x19, #0xd8
   8e798:   9400439a    bl  9f600 <CLogger::Get()>
   8e79c:   b9403e84    ldr w4, [x20, #60]
   8e7a0:   910ba263    add x3, x19, #0x2e8
   8e7a4:   aa1603e1    mov x1, x22
   8e7a8:   52800082    mov w2, #0x4
   8e7ac:   530b7c84    lsr w4, w4, #11
   8e7b0:   9400457c    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8e7b4:   910c0262    add x2, x19, #0x300
   8e7b8:   aa1503e0    mov x0, x21
   8e7bc:   52800001    mov w1, #0x0
   8e7c0:   940065a8    bl  a7e60 <CNumberPool::AllocateNumber(bool, char const*)>
   8e7c4:   7101001f    cmp w0, #0x40
   8e7c8:   540010c0    b.eq    8e9e0 <CUSBBulkOnlyMassStorageDevice::Configure()+0x440>
   8e7cc:   b9405281    ldr w1, [x20, #80]
   8e7d0:   350011e1    cbnz    w1, 8ea0c <CUSBBulkOnlyMassStorageDevice::Configure()+0x46c>
   8e7d4:   b9005280    str w0, [x20, #80]
   8e7d8:   910163e0    add x0, sp, #0x58
   8e7dc:   9400553d    bl  a3cd0 <CString::CString()>
   8e7e0:   910163e0    add x0, sp, #0x58
   8e7e4:   b9405282    ldr w2, [x20, #80]
   8e7e8:   910ce261    add x1, x19, #0x338
   8e7ec:   94005b45    bl  a5500 <CString::Format(char const*, ...)>
   8e7f0:   f9402680    ldr x0, [x20, #72]
   8e7f4:   b5001040    cbnz    x0, 8e9fc <CUSBBulkOnlyMassStorageDevice::Configure()+0x45c>
   8e7f8:   d2800900    mov x0, #0x48
   8e7fc:   940063f1    bl  a77c0 <operator new(unsigned long)>
   8e800:   aa0003f3    mov x19, x0
   8e804:   910163e0    add x0, sp, #0x58
   8e808:   94005576    bl  a3de0 <CString::operator char const*() const>
   8e80c:   aa0003e2    mov x2, x0
   8e810:   aa1403e1    mov x1, x20
   8e814:   aa1303e0    mov x0, x19
   8e818:   940036ca    bl  9c340 <CPartitionManager::CPartitionManager(CDevice*, char const*)>
   8e81c:   aa1303e0    mov x0, x19
   8e820:   f9002693    str x19, [x20, #72]
   8e824:   9400370b    bl  9c450 <CPartitionManager::Initialize()>
   8e828:   12001c13    and w19, w0, #0xff
   8e82c:   36000be0    tbz w0, #0, 8e9a8 <CUSBBulkOnlyMassStorageDevice::Configure()+0x408>
   8e830:   94003c8c    bl  9da60 <CDeviceNameService::Get()>
   8e834:   aa0003f5    mov x21, x0
   8e838:   910163e0    add x0, sp, #0x58
   8e83c:   94005569    bl  a3de0 <CString::operator char const*() const>
   8e840:   aa0003e1    mov x1, x0
   8e844:   aa1403e2    mov x2, x20
   8e848:   aa1503e0    mov x0, x21
   8e84c:   52800023    mov w3, #0x1
   8e850:   94003b94    bl  9d6a0 <CDeviceNameService::AddDevice(char const*, CDevice*, bool)>
   8e854:   910163e0    add x0, sp, #0x58
   8e858:   940054e2    bl  a3be0 <CString::~CString()>
   8e85c:   a9425bf5    ldp x21, x22, [sp, #32]
   8e860:   17ffff87    b   8e67c <CUSBBulkOnlyMassStorageDevice::Configure()+0xdc>
   8e864:   f9401680    ldr x0, [x20, #40]
   8e868:   b5000180    cbnz    x0, 8e898 <CUSBBulkOnlyMassStorageDevice::Configure()+0x2f8>
   8e86c:   d2800400    mov x0, #0x20
   8e870:   940063d4    bl  a77c0 <operator new(unsigned long)>
   8e874:   aa0003f5    mov x21, x0
   8e878:   aa1403e0    mov x0, x20
   8e87c:   97ffef1d    bl  8a4f0 <CUSBFunction::GetDevice() const>
   8e880:   aa0003e1    mov x1, x0
   8e884:   aa1303e2    mov x2, x19
   8e888:   aa1503e0    mov x0, x21
   8e88c:   97ffed51    bl  89dd0 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   8e890:   f9001695    str x21, [x20, #40]
   8e894:   17ffff51    b   8e5d8 <CUSBBulkOnlyMassStorageDevice::Configure()+0x38>
   8e898:   d0000121    adrp    x1, b4000 <From+0x140>
   8e89c:   91260021    add x1, x1, #0x980
   8e8a0:   aa1403e0    mov x0, x20
   8e8a4:   91036021    add x1, x1, #0xd8
   8e8a8:   97ffef42    bl  8a5b0 <CUSBFunction::ConfigurationError(char const*) const>
   8e8ac:   a9425bf5    ldp x21, x22, [sp, #32]
   8e8b0:   17ffff72    b   8e678 <CUSBBulkOnlyMassStorageDevice::Configure()+0xd8>
   8e8b4:   94004353    bl  9f600 <CLogger::Get()>
   8e8b8:   d0000121    adrp    x1, b4000 <From+0x140>
   8e8bc:   91260021    add x1, x1, #0x980
   8e8c0:   91084023    add x3, x1, #0x210
   8e8c4:   52800022    mov w2, #0x1
   8e8c8:   91036021    add x1, x1, #0xd8
   8e8cc:   94004535    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8e8d0:   a9425bf5    ldp x21, x22, [sp, #32]
   8e8d4:   17ffff69    b   8e678 <CUSBBulkOnlyMassStorageDevice::Configure()+0xd8>
   8e8d8:   d0000121    adrp    x1, b4000 <From+0x140>
   8e8dc:   91260021    add x1, x1, #0x980
   8e8e0:   aa1403e0    mov x0, x20
   8e8e4:   91036021    add x1, x1, #0xd8
   8e8e8:   97ffef32    bl  8a5b0 <CUSBFunction::ConfigurationError(char const*) const>
   8e8ec:   17ffff63    b   8e678 <CUSBBulkOnlyMassStorageDevice::Configure()+0xd8>
   8e8f0:   94004344    bl  9f600 <CLogger::Get()>
   8e8f4:   d0000121    adrp    x1, b4000 <From+0x140>
   8e8f8:   91260021    add x1, x1, #0x980
   8e8fc:   9108a023    add x3, x1, #0x228
   8e900:   52800022    mov w2, #0x1
   8e904:   91036021    add x1, x1, #0xd8
   8e908:   94004526    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8e90c:   a9425bf5    ldp x21, x22, [sp, #32]
   8e910:   17ffff5a    b   8e678 <CUSBBulkOnlyMassStorageDevice::Configure()+0xd8>
   8e914:   9400433b    bl  9f600 <CLogger::Get()>
   8e918:   d0000121    adrp    x1, b4000 <From+0x140>
   8e91c:   91260021    add x1, x1, #0x980
   8e920:   91098023    add x3, x1, #0x260
   8e924:   52800022    mov w2, #0x1
   8e928:   91036021    add x1, x1, #0xd8
   8e92c:   9400451d    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8e930:   a9425bf5    ldp x21, x22, [sp, #32]
   8e934:   17ffff51    b   8e678 <CUSBBulkOnlyMassStorageDevice::Configure()+0xd8>
   8e938:   94004332    bl  9f600 <CLogger::Get()>
   8e93c:   d0000121    adrp    x1, b4000 <From+0x140>
   8e940:   91260021    add x1, x1, #0x980
   8e944:   910aa023    add x3, x1, #0x2a8
   8e948:   5ac00a64    rev w4, w19
   8e94c:   91036021    add x1, x1, #0xd8
   8e950:   52800022    mov w2, #0x1
   8e954:   94004513    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8e958:   a9425bf5    ldp x21, x22, [sp, #32]
   8e95c:   17ffff47    b   8e678 <CUSBBulkOnlyMassStorageDevice::Configure()+0xd8>
   8e960:   94004328    bl  9f600 <CLogger::Get()>
   8e964:   d0000121    adrp    x1, b4000 <From+0x140>
   8e968:   91260021    add x1, x1, #0x980
   8e96c:   9109e023    add x3, x1, #0x278
   8e970:   52800022    mov w2, #0x1
   8e974:   91036021    add x1, x1, #0xd8
   8e978:   9400450a    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8e97c:   a9425bf5    ldp x21, x22, [sp, #32]
   8e980:   17ffff3e    b   8e678 <CUSBBulkOnlyMassStorageDevice::Configure()+0xd8>
   8e984:   9400431f    bl  9f600 <CLogger::Get()>
   8e988:   d0000121    adrp    x1, b4000 <From+0x140>
   8e98c:   91260021    add x1, x1, #0x980
   8e990:   910a4023    add x3, x1, #0x290
   8e994:   52800022    mov w2, #0x1
   8e998:   91036021    add x1, x1, #0xd8
   8e99c:   94004501    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8e9a0:   a9425bf5    ldp x21, x22, [sp, #32]
   8e9a4:   17ffff35    b   8e678 <CUSBBulkOnlyMassStorageDevice::Configure()+0xd8>
   8e9a8:   b9405281    ldr w1, [x20, #80]
   8e9ac:   aa1503e0    mov x0, x21
   8e9b0:   9400655c    bl  a7f20 <CNumberPool::FreeNumber(unsigned int)>
   8e9b4:   b900529f    str wzr, [x20, #80]
   8e9b8:   17ffffa7    b   8e854 <CUSBBulkOnlyMassStorageDevice::Configure()+0x2b4>
   8e9bc:   94004311    bl  9f600 <CLogger::Get()>
   8e9c0:   d0000121    adrp    x1, b4000 <From+0x140>
   8e9c4:   91260021    add x1, x1, #0x980
   8e9c8:   910b2023    add x3, x1, #0x2c8
   8e9cc:   52800022    mov w2, #0x1
   8e9d0:   91036021    add x1, x1, #0xd8
   8e9d4:   940044f3    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8e9d8:   a9425bf5    ldp x21, x22, [sp, #32]
   8e9dc:   17ffff27    b   8e678 <CUSBBulkOnlyMassStorageDevice::Configure()+0xd8>
   8e9e0:   94004308    bl  9f600 <CLogger::Get()>
   8e9e4:   aa1603e1    mov x1, x22
   8e9e8:   910c2263    add x3, x19, #0x308
   8e9ec:   52800022    mov w2, #0x1
   8e9f0:   940044ec    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8e9f4:   a9425bf5    ldp x21, x22, [sp, #32]
   8e9f8:   17ffff20    b   8e678 <CUSBBulkOnlyMassStorageDevice::Configure()+0xd8>
   8e9fc:   52803322    mov w2, #0x199
   8ea00:   91002261    add x1, x19, #0x8
   8ea04:   910d0260    add x0, x19, #0x340
   8ea08:   9400382e    bl  9cac0 <assertion_failed>
   8ea0c:   52803262    mov w2, #0x193
   8ea10:   91002261    add x1, x19, #0x8
   8ea14:   910c8260    add x0, x19, #0x320
   8ea18:   9400382a    bl  9cac0 <assertion_failed>
   8ea1c:   00000000    udf #0

000000000008ea20 <_GLOBAL__sub_I__ZN29CUSBBulkOnlyMassStorageDevice18s_DeviceNumberPoolE>:
   8ea20:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8ea24:   910003fd    mov x29, sp
   8ea28:   528007e2    mov w2, #0x3f
   8ea2c:   52800021    mov w1, #0x1
   8ea30:   f9000bf3    str x19, [sp, #16]
   8ea34:   90000173    adrp    x19, ba000 <font_data+0x1080>
   8ea38:   91230273    add x19, x19, #0x8c0
   8ea3c:   aa1303e0    mov x0, x19
   8ea40:   940064ec    bl  a7df0 <CNumberPool::CNumberPool(unsigned int, unsigned int)>
   8ea44:   90000162    adrp    x2, ba000 <font_data+0x1080>
   8ea48:   b00000c0    adrp    x0, a7000 <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int, bool)+0xd0>
   8ea4c:   aa1303e1    mov x1, x19
   8ea50:   f9400bf3    ldr x19, [sp, #16]
   8ea54:   91278042    add x2, x2, #0x9e0
   8ea58:   a8c27bfd    ldp x29, x30, [sp], #32
   8ea5c:   91394000    add x0, x0, #0xe50
   8ea60:   14005acc    b   a5590 <__cxa_atexit>
    ...

000000000008ea70 <CUSBMIDIHostDevice::~CUSBMIDIHostDevice()>:
   8ea70:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8ea74:   910003fd    mov x29, sp
   8ea78:   d0000121    adrp    x1, b4000 <From+0x140>
   8ea7c:   9133c021    add x1, x1, #0xcf0
   8ea80:   a90153f3    stp x19, x20, [sp, #16]
   8ea84:   aa0003f3    mov x19, x0
   8ea88:   f9402800    ldr x0, [x0, #80]
   8ea8c:   f9000261    str x1, [x19]
   8ea90:   b50003e0    cbnz    x0, 8eb0c <CUSBMIDIHostDevice::~CUSBMIDIHostDevice()+0x9c>
   8ea94:   f9401660    ldr x0, [x19, #40]
   8ea98:   b4000080    cbz x0, 8eaa8 <CUSBMIDIHostDevice::~CUSBMIDIHostDevice()+0x38>
   8ea9c:   f9400001    ldr x1, [x0]
   8eaa0:   f9400421    ldr x1, [x1, #8]
   8eaa4:   d63f0020    blr x1
   8eaa8:   f9402660    ldr x0, [x19, #72]
   8eaac:   f900167f    str xzr, [x19, #40]
   8eab0:   b4000040    cbz x0, 8eab8 <CUSBMIDIHostDevice::~CUSBMIDIHostDevice()+0x48>
   8eab4:   9400635f    bl  a7830 <operator delete[](void*)>
   8eab8:   f9401a74    ldr x20, [x19, #48]
   8eabc:   f900267f    str xzr, [x19, #72]
   8eac0:   b40000d4    cbz x20, 8ead8 <CUSBMIDIHostDevice::~CUSBMIDIHostDevice()+0x68>
   8eac4:   aa1403e0    mov x0, x20
   8eac8:   97ffed2e    bl  89f80 <CUSBEndpoint::~CUSBEndpoint()>
   8eacc:   aa1403e0    mov x0, x20
   8ead0:   d2800401    mov x1, #0x20
   8ead4:   94006363    bl  a7860 <operator delete(void*, unsigned long)>
   8ead8:   f9401e74    ldr x20, [x19, #56]
   8eadc:   f9001a7f    str xzr, [x19, #48]
   8eae0:   b40000d4    cbz x20, 8eaf8 <CUSBMIDIHostDevice::~CUSBMIDIHostDevice()+0x88>
   8eae4:   aa1403e0    mov x0, x20
   8eae8:   97ffed26    bl  89f80 <CUSBEndpoint::~CUSBEndpoint()>
   8eaec:   aa1403e0    mov x0, x20
   8eaf0:   d2800401    mov x1, #0x20
   8eaf4:   9400635b    bl  a7860 <operator delete(void*, unsigned long)>
   8eaf8:   aa1303e0    mov x0, x19
   8eafc:   f9001e7f    str xzr, [x19, #56]
   8eb00:   a94153f3    ldp x19, x20, [sp, #16]
   8eb04:   a8c27bfd    ldp x29, x30, [sp], #32
   8eb08:   17ffed72    b   8a0d0 <CUSBFunction::~CUSBFunction()>
   8eb0c:   94005edd    bl  a6680 <CTimer::Get()>
   8eb10:   f9402a61    ldr x1, [x19, #80]
   8eb14:   94005d0f    bl  a5f50 <CTimer::CancelKernelTimer(unsigned long)>
   8eb18:   f9002a7f    str xzr, [x19, #80]
   8eb1c:   17ffffde    b   8ea94 <CUSBMIDIHostDevice::~CUSBMIDIHostDevice()+0x24>

000000000008eb20 <CUSBMIDIHostDevice::~CUSBMIDIHostDevice()>:
   8eb20:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8eb24:   910003fd    mov x29, sp
   8eb28:   f9000bf3    str x19, [sp, #16]
   8eb2c:   aa0003f3    mov x19, x0
   8eb30:   97ffffd0    bl  8ea70 <CUSBMIDIHostDevice::~CUSBMIDIHostDevice()>
   8eb34:   aa1303e0    mov x0, x19
   8eb38:   f9400bf3    ldr x19, [sp, #16]
   8eb3c:   d2800b01    mov x1, #0x58
   8eb40:   a8c27bfd    ldp x29, x30, [sp], #32
   8eb44:   14006347    b   a7860 <operator delete(void*, unsigned long)>
   8eb48:   d503201f    nop
   8eb4c:   d503201f    nop

000000000008eb50 <CUSBMIDIHostDevice::SendEventsHandler(unsigned char const*, unsigned int, void*)>:
   8eb50:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   8eb54:   910003fd    mov x29, sp
   8eb58:   a90153f3    stp x19, x20, [sp, #16]
   8eb5c:   f90013f5    str x21, [sp, #32]
   8eb60:   b4000482    cbz x2, 8ebf0 <CUSBMIDIHostDevice::SendEventsHandler(unsigned char const*, unsigned int, void*)+0xa0>
   8eb64:   aa0003e3    mov x3, x0
   8eb68:   b4000500    cbz x0, 8ec08 <CUSBMIDIHostDevice::SendEventsHandler(unsigned char const*, unsigned int, void*)+0xb8>
   8eb6c:   2a0103f4    mov w20, w1
   8eb70:   34000581    cbz w1, 8ec20 <CUSBMIDIHostDevice::SendEventsHandler(unsigned char const*, unsigned int, void*)+0xd0>
   8eb74:   f240069f    tst x20, #0x3
   8eb78:   54000601    b.ne    8ec38 <CUSBMIDIHostDevice::SendEventsHandler(unsigned char const*, unsigned int, void*)+0xe8>
   8eb7c:   f9401c41    ldr x1, [x2, #56]
   8eb80:   aa0203f3    mov x19, x2
   8eb84:   52800000    mov w0, #0x0
   8eb88:   b40002a1    cbz x1, 8ebdc <CUSBMIDIHostDevice::SendEventsHandler(unsigned char const*, unsigned int, void*)+0x8c>
   8eb8c:   2a1403e2    mov w2, w20
   8eb90:   aa0303e1    mov x1, x3
   8eb94:   d1000440    sub x0, x2, #0x1
   8eb98:   b2401400    orr x0, x0, #0x3f
   8eb9c:   91010000    add x0, x0, #0x40
   8eba0:   927cec00    and x0, x0, #0xfffffffffffffff0
   8eba4:   cb2063ff    sub sp, sp, x0
   8eba8:   9100fff5    add x21, sp, #0x3f
   8ebac:   927ae6b5    and x21, x21, #0xffffffffffffffc0
   8ebb0:   aa1503e0    mov x0, x21
   8ebb4:   94006071    bl  a6d78 <memcpy>
   8ebb8:   aa1303e0    mov x0, x19
   8ebbc:   97ffee65    bl  8a550 <CUSBFunction::GetHost() const>
   8ebc0:   f9401e61    ldr x1, [x19, #56]
   8ebc4:   2a1403e3    mov w3, w20
   8ebc8:   aa1503e2    mov x2, x21
   8ebcc:   52800004    mov w4, #0x0
   8ebd0:   97ffc98c    bl  81200 <CUSBHostController::Transfer(CUSBEndpoint*, void*, unsigned int, unsigned int)>
   8ebd4:   2a2003e0    mvn w0, w0
   8ebd8:   531f7c00    lsr w0, w0, #31
   8ebdc:   910003bf    mov sp, x29
   8ebe0:   a94153f3    ldp x19, x20, [sp, #16]
   8ebe4:   f94013f5    ldr x21, [sp, #32]
   8ebe8:   a8c37bfd    ldp x29, x30, [sp], #48
   8ebec:   d65f03c0    ret
   8ebf0:   d0000101    adrp    x1, b0000 <_etext+0xf9c>
   8ebf4:   f0000100    adrp    x0, b1000 <_etext+0x1f9c>
   8ebf8:   913fc021    add x1, x1, #0xff0
   8ebfc:   91000000    add x0, x0, #0x0
   8ec00:   52801562    mov w2, #0xab
   8ec04:   940037af    bl  9cac0 <assertion_failed>
   8ec08:   d0000101    adrp    x1, b0000 <_etext+0xf9c>
   8ec0c:   f0000100    adrp    x0, b1000 <_etext+0x1f9c>
   8ec10:   913fc021    add x1, x1, #0xff0
   8ec14:   91002000    add x0, x0, #0x8
   8ec18:   528015a2    mov w2, #0xad
   8ec1c:   940037a9    bl  9cac0 <assertion_failed>
   8ec20:   d0000101    adrp    x1, b0000 <_etext+0xf9c>
   8ec24:   f0000100    adrp    x0, b1000 <_etext+0x1f9c>
   8ec28:   913fc021    add x1, x1, #0xff0
   8ec2c:   91006000    add x0, x0, #0x18
   8ec30:   528015c2    mov w2, #0xae
   8ec34:   940037a3    bl  9cac0 <assertion_failed>
   8ec38:   d0000101    adrp    x1, b0000 <_etext+0xf9c>
   8ec3c:   f0000100    adrp    x0, b1000 <_etext+0x1f9c>
   8ec40:   913fc021    add x1, x1, #0xff0
   8ec44:   9100a000    add x0, x0, #0x28
   8ec48:   528015e2    mov w2, #0xaf
   8ec4c:   9400379d    bl  9cac0 <assertion_failed>

000000000008ec50 <CUSBMIDIHostDevice::CUSBMIDIHostDevice(CUSBFunction*)>:
   8ec50:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8ec54:   910003fd    mov x29, sp
   8ec58:   f9000bf3    str x19, [sp, #16]
   8ec5c:   aa0003f3    mov x19, x0
   8ec60:   97ffedc0    bl  8a360 <CUSBFunction::CUSBFunction(CUSBFunction*)>
   8ec64:   d0000120    adrp    x0, b4000 <From+0x140>
   8ec68:   9133c000    add x0, x0, #0xcf0
   8ec6c:   a902fe7f    stp xzr, xzr, [x19, #40]
   8ec70:   f9000260    str x0, [x19]
   8ec74:   f9001e7f    str xzr, [x19, #56]
   8ec78:   a904fe7f    stp xzr, xzr, [x19, #72]
   8ec7c:   f9400bf3    ldr x19, [sp, #16]
   8ec80:   a8c27bfd    ldp x29, x30, [sp], #32
   8ec84:   d65f03c0    ret
   8ec88:   d503201f    nop
   8ec8c:   d503201f    nop

000000000008ec90 <CUSBMIDIHostDevice::StartRequest()>:
   8ec90:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8ec94:   910003fd    mov x29, sp
   8ec98:   a90153f3    stp x19, x20, [sp, #16]
   8ec9c:   aa0003f3    mov x19, x0
   8eca0:   f9401800    ldr x0, [x0, #48]
   8eca4:   b40003e0    cbz x0, 8ed20 <CUSBMIDIHostDevice::StartRequest()+0x90>
   8eca8:   f9402660    ldr x0, [x19, #72]
   8ecac:   b4000460    cbz x0, 8ed38 <CUSBMIDIHostDevice::StartRequest()+0xa8>
   8ecb0:   79408260    ldrh    w0, [x19, #64]
   8ecb4:   340004e0    cbz w0, 8ed50 <CUSBMIDIHostDevice::StartRequest()+0xc0>
   8ecb8:   d2801200    mov x0, #0x90
   8ecbc:   97ffcc59    bl  81e20 <CUSBRequest::operator new(unsigned long)>
   8ecc0:   f9401a61    ldr x1, [x19, #48]
   8ecc4:   d2800004    mov x4, #0x0
   8ecc8:   aa0003f4    mov x20, x0
   8eccc:   f9402662    ldr x2, [x19, #72]
   8ecd0:   79408263    ldrh    w3, [x19, #64]
   8ecd4:   97ffcb6b    bl  81a80 <CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)>
   8ecd8:   90000001    adrp    x1, 8e000 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)+0x330>
   8ecdc:   d2800002    mov x2, #0x0
   8ece0:   aa1303e3    mov x3, x19
   8ece4:   913f8021    add x1, x1, #0xfe0
   8ece8:   aa1403e0    mov x0, x20
   8ecec:   97ffcc29    bl  81d90 <CUSBRequest::SetCompletionRoutine(void (*)(CUSBRequest*, void*, void*), void*, void*)>
   8ecf0:   aa1403e0    mov x0, x20
   8ecf4:   97ffcc43    bl  81e00 <CUSBRequest::SetCompleteOnNAK()>
   8ecf8:   aa1303e0    mov x0, x19
   8ecfc:   97ffee15    bl  8a550 <CUSBFunction::GetHost() const>
   8ed00:   f9400003    ldr x3, [x0]
   8ed04:   aa1403e1    mov x1, x20
   8ed08:   52800002    mov w2, #0x0
   8ed0c:   a94153f3    ldp x19, x20, [sp, #16]
   8ed10:   a8c27bfd    ldp x29, x30, [sp], #32
   8ed14:   f9401463    ldr x3, [x3, #40]
   8ed18:   aa0303f0    mov x16, x3
   8ed1c:   d61f0200    br  x16
   8ed20:   d0000101    adrp    x1, b0000 <_etext+0xf9c>
   8ed24:   f0000100    adrp    x0, b1000 <_etext+0x1f9c>
   8ed28:   913fc021    add x1, x1, #0xff0
   8ed2c:   91010000    add x0, x0, #0x40
   8ed30:   528017c2    mov w2, #0xbe
   8ed34:   94003763    bl  9cac0 <assertion_failed>
   8ed38:   d0000101    adrp    x1, b0000 <_etext+0xf9c>
   8ed3c:   f0000100    adrp    x0, b1000 <_etext+0x1f9c>
   8ed40:   913fc021    add x1, x1, #0xff0
   8ed44:   91016000    add x0, x0, #0x58
   8ed48:   528017e2    mov w2, #0xbf
   8ed4c:   9400375d    bl  9cac0 <assertion_failed>
   8ed50:   d0000101    adrp    x1, b0000 <_etext+0xf9c>
   8ed54:   f0000100    adrp    x0, b1000 <_etext+0x1f9c>
   8ed58:   913fc021    add x1, x1, #0xff0
   8ed5c:   9101c000    add x0, x0, #0x70
   8ed60:   52801822    mov w2, #0xc1
   8ed64:   94003757    bl  9cac0 <assertion_failed>
   8ed68:   d503201f    nop
   8ed6c:   d503201f    nop

000000000008ed70 <CUSBMIDIHostDevice::TimerStub(unsigned long, void*, void*)>:
   8ed70:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   8ed74:   910003fd    mov x29, sp
   8ed78:   b4000102    cbz x2, 8ed98 <CUSBMIDIHostDevice::TimerStub(unsigned long, void*, void*)+0x28>
   8ed7c:   f9402841    ldr x1, [x2, #80]
   8ed80:   eb01001f    cmp x0, x1
   8ed84:   54000161    b.ne    8edb0 <CUSBMIDIHostDevice::TimerStub(unsigned long, void*, void*)+0x40>
   8ed88:   aa0203e0    mov x0, x2
   8ed8c:   f900285f    str xzr, [x2, #80]
   8ed90:   a8c17bfd    ldp x29, x30, [sp], #16
   8ed94:   17ffffbf    b   8ec90 <CUSBMIDIHostDevice::StartRequest()>
   8ed98:   d0000101    adrp    x1, b0000 <_etext+0xf9c>
   8ed9c:   b0000100    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8eda0:   913fc021    add x1, x1, #0xff0
   8eda4:   91128000    add x0, x0, #0x4a0
   8eda8:   528020e2    mov w2, #0x107
   8edac:   94003745    bl  9cac0 <assertion_failed>
   8edb0:   d0000101    adrp    x1, b0000 <_etext+0xf9c>
   8edb4:   f0000100    adrp    x0, b1000 <_etext+0x1f9c>
   8edb8:   913fc021    add x1, x1, #0xff0
   8edbc:   91022000    add x0, x0, #0x88
   8edc0:   52801fc2    mov w2, #0xfe
   8edc4:   9400373f    bl  9cac0 <assertion_failed>
   8edc8:   d503201f    nop
   8edcc:   d503201f    nop

000000000008edd0 <CUSBMIDIHostDevice::CompletionRoutine(CUSBRequest*)>:
   8edd0:   a9bb7bfd    stp x29, x30, [sp, #-80]!
   8edd4:   910003fd    mov x29, sp
   8edd8:   b4000ba1    cbz x1, 8ef4c <CUSBMIDIHostDevice::CompletionRoutine(CUSBRequest*)+0x17c>
   8eddc:   a9025bf5    stp x21, x22, [sp, #32]
   8ede0:   aa0003f5    mov x21, x0
   8ede4:   f9401400    ldr x0, [x0, #40]
   8ede8:   a90153f3    stp x19, x20, [sp, #16]
   8edec:   b4000c20    cbz x0, 8ef70 <CUSBMIDIHostDevice::CompletionRoutine(CUSBRequest*)+0x1a0>
   8edf0:   aa0103e0    mov x0, x1
   8edf4:   aa0103f3    mov x19, x1
   8edf8:   97ffcb5e    bl  81b70 <CUSBRequest::GetStatus() const>
   8edfc:   34000340    cbz w0, 8ee64 <CUSBMIDIHostDevice::CompletionRoutine(CUSBRequest*)+0x94>
   8ee00:   aa1303e0    mov x0, x19
   8ee04:   97ffcb5f    bl  81b80 <CUSBRequest::GetResultLength() const>
   8ee08:   f240041f    tst x0, #0x3
   8ee0c:   540002c1    b.ne    8ee64 <CUSBMIDIHostDevice::CompletionRoutine(CUSBRequest*)+0x94>
   8ee10:   f94026b4    ldr x20, [x21, #72]
   8ee14:   b4000bd4    cbz x20, 8ef8c <CUSBMIDIHostDevice::CompletionRoutine(CUSBRequest*)+0x1bc>
   8ee18:   f94016b6    ldr x22, [x21, #40]
   8ee1c:   aa1303e0    mov x0, x19
   8ee20:   97ffcb58    bl  81b80 <CUSBRequest::GetResultLength() const>
   8ee24:   aa1403e1    mov x1, x20
   8ee28:   2a0003e2    mov w2, w0
   8ee2c:   aa1603e0    mov x0, x22
   8ee30:   94002dc8    bl  9a550 <CUSBMIDIDevice::CallPacketHandler(unsigned char*, unsigned int)>
   8ee34:   12001c14    and w20, w0, #0xff
   8ee38:   aa1303e0    mov x0, x19
   8ee3c:   97ffcb31    bl  81b00 <CUSBRequest::~CUSBRequest()>
   8ee40:   aa1303e0    mov x0, x19
   8ee44:   d2801201    mov x1, #0x90
   8ee48:   97ffcc0e    bl  81e80 <CUSBRequest::operator delete(void*, unsigned long)>
   8ee4c:   360001d4    tbz w20, #0, 8ee84 <CUSBMIDIHostDevice::CompletionRoutine(CUSBRequest*)+0xb4>
   8ee50:   a94153f3    ldp x19, x20, [sp, #16]
   8ee54:   aa1503e0    mov x0, x21
   8ee58:   a9425bf5    ldp x21, x22, [sp, #32]
   8ee5c:   a8c57bfd    ldp x29, x30, [sp], #80
   8ee60:   17ffff8c    b   8ec90 <CUSBMIDIHostDevice::StartRequest()>
   8ee64:   f94016a0    ldr x0, [x21, #40]
   8ee68:   94002e06    bl  9a680 <CUSBMIDIDevice::GetAllSoundOffOnUSBError() const>
   8ee6c:   37000300    tbnz    w0, #0, 8eecc <CUSBMIDIHostDevice::CompletionRoutine(CUSBRequest*)+0xfc>
   8ee70:   aa1303e0    mov x0, x19
   8ee74:   97ffcb23    bl  81b00 <CUSBRequest::~CUSBRequest()>
   8ee78:   aa1303e0    mov x0, x19
   8ee7c:   d2801201    mov x1, #0x90
   8ee80:   97ffcc00    bl  81e80 <CUSBRequest::operator delete(void*, unsigned long)>
   8ee84:   94003fdb    bl  9edf0 <CKernelOptions::Get()>
   8ee88:   94003f96    bl  9ece0 <CKernelOptions::GetUSBBoost() const>
   8ee8c:   3707fe20    tbnz    w0, #0, 8ee50 <CUSBMIDIHostDevice::CompletionRoutine(CUSBRequest*)+0x80>
   8ee90:   f9402aa0    ldr x0, [x21, #80]
   8ee94:   b50008a0    cbnz    x0, 8efa8 <CUSBMIDIHostDevice::CompletionRoutine(CUSBRequest*)+0x1d8>
   8ee98:   94005dfa    bl  a6680 <CTimer::Get()>
   8ee9c:   90000002    adrp    x2, 8e000 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)+0x330>
   8eea0:   aa1503e4    mov x4, x21
   8eea4:   9135c042    add x2, x2, #0xd70
   8eea8:   d2800003    mov x3, #0x0
   8eeac:   52800021    mov w1, #0x1
   8eeb0:   94005bcc    bl  a5de0 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned long, void*, void*), void*, void*)>
   8eeb4:   f9002aa0    str x0, [x21, #80]
   8eeb8:   b4000860    cbz x0, 8efc4 <CUSBMIDIHostDevice::CompletionRoutine(CUSBRequest*)+0x1f4>
   8eebc:   a94153f3    ldp x19, x20, [sp, #16]
   8eec0:   a9425bf5    ldp x21, x22, [sp, #32]
   8eec4:   a8c57bfd    ldp x29, x30, [sp], #80
   8eec8:   d65f03c0    ret
   8eecc:   aa1303e0    mov x0, x19
   8eed0:   97ffcb28    bl  81b70 <CUSBRequest::GetStatus() const>
   8eed4:   35fffce0    cbnz    w0, 8ee70 <CUSBMIDIHostDevice::CompletionRoutine(CUSBRequest*)+0xa0>
   8eed8:   aa1303e0    mov x0, x19
   8eedc:   97ffcb35    bl  81bb0 <CUSBRequest::GetUSBError() const>
   8eee0:   7100241f    cmp w0, #0x9
   8eee4:   54fffc60    b.eq    8ee70 <CUSBMIDIHostDevice::CompletionRoutine(CUSBRequest*)+0xa0>
   8eee8:   52800014    mov w20, #0x0
   8eeec:   128009f6    mov w22, #0xffffffb0
   8eef0:   a90363f7    stp x23, x24, [sp, #48]
   8eef4:   52800178    mov w24, #0xb
   8eef8:   52800f17    mov w23, #0x78
   8eefc:   d503201f    nop
   8ef00:   2a160283    orr w3, w20, w22
   8ef04:   52800082    mov w2, #0x4
   8ef08:   f94016a0    ldr x0, [x21, #40]
   8ef0c:   910123e1    add x1, sp, #0x48
   8ef10:   11000694    add w20, w20, #0x1
   8ef14:   12001e94    and w20, w20, #0xff
   8ef18:   390123f8    strb    w24, [sp, #72]
   8ef1c:   390127e3    strb    w3, [sp, #73]
   8ef20:   790097f7    strh    w23, [sp, #74]
   8ef24:   94002d8b    bl  9a550 <CUSBMIDIDevice::CallPacketHandler(unsigned char*, unsigned int)>
   8ef28:   7100429f    cmp w20, #0x10
   8ef2c:   54fffea1    b.ne    8ef00 <CUSBMIDIHostDevice::CompletionRoutine(CUSBRequest*)+0x130>
   8ef30:   aa1303e0    mov x0, x19
   8ef34:   97ffcaf3    bl  81b00 <CUSBRequest::~CUSBRequest()>
   8ef38:   aa1303e0    mov x0, x19
   8ef3c:   d2801201    mov x1, #0x90
   8ef40:   97ffcbd0    bl  81e80 <CUSBRequest::operator delete(void*, unsigned long)>
   8ef44:   a94363f7    ldp x23, x24, [sp, #48]
   8ef48:   17ffffcf    b   8ee84 <CUSBMIDIHostDevice::CompletionRoutine(CUSBRequest*)+0xb4>
   8ef4c:   d0000101    adrp    x1, b0000 <_etext+0xf9c>
   8ef50:   b0000100    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8ef54:   a90153f3    stp x19, x20, [sp, #16]
   8ef58:   913fc021    add x1, x1, #0xff0
   8ef5c:   9111c000    add x0, x0, #0x470
   8ef60:   528019a2    mov w2, #0xcd
   8ef64:   a9025bf5    stp x21, x22, [sp, #32]
   8ef68:   a90363f7    stp x23, x24, [sp, #48]
   8ef6c:   940036d5    bl  9cac0 <assertion_failed>
   8ef70:   d0000101    adrp    x1, b0000 <_etext+0xf9c>
   8ef74:   f0000100    adrp    x0, b1000 <_etext+0x1f9c>
   8ef78:   a90363f7    stp x23, x24, [sp, #48]
   8ef7c:   913fc021    add x1, x1, #0xff0
   8ef80:   91028000    add x0, x0, #0xa0
   8ef84:   528019c2    mov w2, #0xce
   8ef88:   940036ce    bl  9cac0 <assertion_failed>
   8ef8c:   d0000101    adrp    x1, b0000 <_etext+0xf9c>
   8ef90:   f0000100    adrp    x0, b1000 <_etext+0x1f9c>
   8ef94:   a90363f7    stp x23, x24, [sp, #48]
   8ef98:   913fc021    add x1, x1, #0xff0
   8ef9c:   91016000    add x0, x0, #0x58
   8efa0:   52801aa2    mov w2, #0xd5
   8efa4:   940036c7    bl  9cac0 <assertion_failed>
   8efa8:   d0000101    adrp    x1, b0000 <_etext+0xf9c>
   8efac:   f0000100    adrp    x0, b1000 <_etext+0x1f9c>
   8efb0:   a90363f7    stp x23, x24, [sp, #48]
   8efb4:   913fc021    add x1, x1, #0xff0
   8efb8:   9102e000    add x0, x0, #0xb8
   8efbc:   52801dc2    mov w2, #0xee
   8efc0:   940036c0    bl  9cac0 <assertion_failed>
   8efc4:   d0000101    adrp    x1, b0000 <_etext+0xf9c>
   8efc8:   f0000100    adrp    x0, b1000 <_etext+0x1f9c>
   8efcc:   a90363f7    stp x23, x24, [sp, #48]
   8efd0:   913fc021    add x1, x1, #0xff0
   8efd4:   91032000    add x0, x0, #0xc8
   8efd8:   52801e02    mov w2, #0xf0
   8efdc:   940036b9    bl  9cac0 <assertion_failed>

000000000008efe0 <CUSBMIDIHostDevice::CompletionStub(CUSBRequest*, void*, void*)>:
   8efe0:   b4000082    cbz x2, 8eff0 <CUSBMIDIHostDevice::CompletionStub(CUSBRequest*, void*, void*)+0x10>
   8efe4:   aa0003e1    mov x1, x0
   8efe8:   aa0203e0    mov x0, x2
   8efec:   17ffff79    b   8edd0 <CUSBMIDIHostDevice::CompletionRoutine(CUSBRequest*)>
   8eff0:   d0000101    adrp    x1, b0000 <_etext+0xf9c>
   8eff4:   b0000100    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8eff8:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   8effc:   913fc021    add x1, x1, #0xff0
   8f000:   910003fd    mov x29, sp
   8f004:   91128000    add x0, x0, #0x4a0
   8f008:   52801ee2    mov w2, #0xf7
   8f00c:   940036ad    bl  9cac0 <assertion_failed>

000000000008f010 <CUSBMIDIHostDevice::TimerHandler(unsigned long)>:
   8f010:   f9402803    ldr x3, [x0, #80]
   8f014:   eb01007f    cmp x3, x1
   8f018:   54000061    b.ne    8f024 <CUSBMIDIHostDevice::TimerHandler(unsigned long)+0x14>
   8f01c:   f900281f    str xzr, [x0, #80]
   8f020:   17ffff1c    b   8ec90 <CUSBMIDIHostDevice::StartRequest()>
   8f024:   b0000101    adrp    x1, b0000 <_etext+0xf9c>
   8f028:   d0000100    adrp    x0, b1000 <_etext+0x1f9c>
   8f02c:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   8f030:   913fc021    add x1, x1, #0xff0
   8f034:   910003fd    mov x29, sp
   8f038:   91022000    add x0, x0, #0x88
   8f03c:   52801fc2    mov w2, #0xfe
   8f040:   940036a0    bl  9cac0 <assertion_failed>
   8f044:   d503201f    nop
   8f048:   d503201f    nop
   8f04c:   d503201f    nop

000000000008f050 <CUSBMIDIHostDevice::Configure()>:
   8f050:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   8f054:   910003fd    mov x29, sp
   8f058:   a90153f3    stp x19, x20, [sp, #16]
   8f05c:   aa0003f4    mov x20, x0
   8f060:   97ffed18    bl  8a4c0 <CUSBFunction::GetNumEndpoints() const>
   8f064:   72001c1f    tst w0, #0xff
   8f068:   54000d00    b.eq    8f208 <CUSBMIDIHostDevice::Configure()+0x1b8>
   8f06c:   aa1403e0    mov x0, x20
   8f070:   a9025bf5    stp x21, x22, [sp, #32]
   8f074:   97ffed1f    bl  8a4f0 <CUSBFunction::GetDevice() const>
   8f078:   97ffe53e    bl  88570 <CUSBDevice::GetDeviceDescriptor() const>
   8f07c:   b4000f40    cbz x0, 8f264 <CUSBMIDIHostDevice::Configure()+0x214>
   8f080:   39402002    ldrb    w2, [x0, #8]
   8f084:   52800016    mov w22, #0x0
   8f088:   39402401    ldrb    w1, [x0, #9]
   8f08c:   2a012041    orr w1, w2, w1, lsl #8
   8f090:   7116083f    cmp w1, #0x582
   8f094:   54000ae0    b.eq    8f1f0 <CUSBMIDIHostDevice::Configure()+0x1a0>
   8f098:   120002d6    and w22, w22, #0x1
   8f09c:   d503201f    nop
   8f0a0:   528000a1    mov w1, #0x5
   8f0a4:   aa1403e0    mov x0, x20
   8f0a8:   97ffed36    bl  8a580 <CUSBFunction::GetDescriptor(unsigned char)>
   8f0ac:   aa0003f3    mov x19, x0
   8f0b0:   b4000320    cbz x0, 8f114 <CUSBMIDIHostDevice::Configure()+0xc4>
   8f0b4:   39400e61    ldrb    w1, [x19, #3]
   8f0b8:   121f1021    and w1, w1, #0x3e
   8f0bc:   7100083f    cmp w1, #0x2
   8f0c0:   54ffff01    b.ne    8f0a0 <CUSBMIDIHostDevice::Configure()+0x50>
   8f0c4:   34000556    cbz w22, 8f16c <CUSBMIDIHostDevice::Configure()+0x11c>
   8f0c8:   39c00a60    ldrsb   w0, [x19, #2]
   8f0cc:   37f80660    tbnz    w0, #31, 8f198 <CUSBMIDIHostDevice::Configure()+0x148>
   8f0d0:   f9401e80    ldr x0, [x20, #56]
   8f0d4:   b5000aa0    cbnz    x0, 8f228 <CUSBMIDIHostDevice::Configure()+0x1d8>
   8f0d8:   d2800400    mov x0, #0x20
   8f0dc:   940061b9    bl  a77c0 <operator new(unsigned long)>
   8f0e0:   aa0003f5    mov x21, x0
   8f0e4:   aa1403e0    mov x0, x20
   8f0e8:   97ffed02    bl  8a4f0 <CUSBFunction::GetDevice() const>
   8f0ec:   aa1303e2    mov x2, x19
   8f0f0:   aa0003e1    mov x1, x0
   8f0f4:   aa1503e0    mov x0, x21
   8f0f8:   97ffeb36    bl  89dd0 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   8f0fc:   528000a1    mov w1, #0x5
   8f100:   aa1403e0    mov x0, x20
   8f104:   f9001e95    str x21, [x20, #56]
   8f108:   97ffed1e    bl  8a580 <CUSBFunction::GetDescriptor(unsigned char)>
   8f10c:   aa0003f3    mov x19, x0
   8f110:   b5fffd20    cbnz    x0, 8f0b4 <CUSBMIDIHostDevice::Configure()+0x64>
   8f114:   f9401a80    ldr x0, [x20, #48]
   8f118:   b4000880    cbz x0, 8f228 <CUSBMIDIHostDevice::Configure()+0x1d8>
   8f11c:   aa1403e0    mov x0, x20
   8f120:   97ffec24    bl  8a1b0 <CUSBFunction::Configure()>
   8f124:   36000ac0    tbz w0, #0, 8f27c <CUSBMIDIHostDevice::Configure()+0x22c>
   8f128:   f9401680    ldr x0, [x20, #40]
   8f12c:   b5000ba0    cbnz    x0, 8f2a0 <CUSBMIDIHostDevice::Configure()+0x250>
   8f130:   d2800700    mov x0, #0x38
   8f134:   940061a3    bl  a77c0 <operator new(unsigned long)>
   8f138:   aa0003f3    mov x19, x0
   8f13c:   94002bd5    bl  9a090 <CUSBMIDIDevice::CUSBMIDIDevice()>
   8f140:   f0ffffe1    adrp    x1, 8e000 <CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned long, void*, unsigned long, bool)+0x330>
   8f144:   aa1303e0    mov x0, x19
   8f148:   f9001693    str x19, [x20, #40]
   8f14c:   aa1403e2    mov x2, x20
   8f150:   912d4021    add x1, x1, #0xb50
   8f154:   94002d33    bl  9a620 <CUSBMIDIDevice::RegisterSendEventsHandler(bool (*)(unsigned char const*, unsigned int, void*), void*)>
   8f158:   a9425bf5    ldp x21, x22, [sp, #32]
   8f15c:   aa1403e0    mov x0, x20
   8f160:   a94153f3    ldp x19, x20, [sp, #16]
   8f164:   a8c37bfd    ldp x29, x30, [sp], #48
   8f168:   17fffeca    b   8ec90 <CUSBMIDIHostDevice::StartRequest()>
   8f16c:   528004a1    mov w1, #0x25
   8f170:   aa1403e0    mov x0, x20
   8f174:   97ffed03    bl  8a580 <CUSBFunction::GetDescriptor(unsigned char)>
   8f178:   b4fff940    cbz x0, 8f0a0 <CUSBMIDIHostDevice::Configure()+0x50>
   8f17c:   39400261    ldrb    w1, [x19]
   8f180:   8b010261    add x1, x19, x1
   8f184:   eb01001f    cmp x0, x1
   8f188:   54fff8c1    b.ne    8f0a0 <CUSBMIDIHostDevice::Configure()+0x50>
   8f18c:   39c00a60    ldrsb   w0, [x19, #2]
   8f190:   36fffa00    tbz w0, #31, 8f0d0 <CUSBMIDIHostDevice::Configure()+0x80>
   8f194:   d503201f    nop
   8f198:   f9401a80    ldr x0, [x20, #48]
   8f19c:   b5000460    cbnz    x0, 8f228 <CUSBMIDIHostDevice::Configure()+0x1d8>
   8f1a0:   d2800400    mov x0, #0x20
   8f1a4:   94006187    bl  a77c0 <operator new(unsigned long)>
   8f1a8:   aa0003f5    mov x21, x0
   8f1ac:   aa1403e0    mov x0, x20
   8f1b0:   97ffecd0    bl  8a4f0 <CUSBFunction::GetDevice() const>
   8f1b4:   aa0003e1    mov x1, x0
   8f1b8:   aa1303e2    mov x2, x19
   8f1bc:   aa1503e0    mov x0, x21
   8f1c0:   97ffeb04    bl  89dd0 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   8f1c4:   f9001a95    str x21, [x20, #48]
   8f1c8:   39401262    ldrb    w2, [x19, #4]
   8f1cc:   39401660    ldrb    w0, [x19, #5]
   8f1d0:   f9402681    ldr x1, [x20, #72]
   8f1d4:   aa002040    orr x0, x2, x0, lsl #8
   8f1d8:   121e3400    and w0, w0, #0xfffc
   8f1dc:   79008280    strh    w0, [x20, #64]
   8f1e0:   b5000361    cbnz    x1, 8f24c <CUSBMIDIHostDevice::Configure()+0x1fc>
   8f1e4:   9400617f    bl  a77e0 <operator new[](unsigned long)>
   8f1e8:   f9002680    str x0, [x20, #72]
   8f1ec:   17ffffad    b   8f0a0 <CUSBMIDIHostDevice::Configure()+0x50>
   8f1f0:   39402801    ldrb    w1, [x0, #10]
   8f1f4:   39402c00    ldrb    w0, [x0, #11]
   8f1f8:   2a002020    orr w0, w1, w0, lsl #8
   8f1fc:   7104a81f    cmp w0, #0x12a
   8f200:   1a9f17f6    cset    w22, eq
   8f204:   17ffffa5    b   8f098 <CUSBMIDIHostDevice::Configure()+0x48>
   8f208:   b0000121    adrp    x1, b4000 <From+0x140>
   8f20c:   91354021    add x1, x1, #0xd50
   8f210:   aa1403e0    mov x0, x20
   8f214:   97ffece7    bl  8a5b0 <CUSBFunction::ConfigurationError(char const*) const>
   8f218:   a94153f3    ldp x19, x20, [sp, #16]
   8f21c:   52800000    mov w0, #0x0
   8f220:   a8c37bfd    ldp x29, x30, [sp], #48
   8f224:   d65f03c0    ret
   8f228:   aa1403e0    mov x0, x20
   8f22c:   b0000121    adrp    x1, b4000 <From+0x140>
   8f230:   91354021    add x1, x1, #0xd50
   8f234:   97ffecdf    bl  8a5b0 <CUSBFunction::ConfigurationError(char const*) const>
   8f238:   a94153f3    ldp x19, x20, [sp, #16]
   8f23c:   52800000    mov w0, #0x0
   8f240:   a9425bf5    ldp x21, x22, [sp, #32]
   8f244:   a8c37bfd    ldp x29, x30, [sp], #48
   8f248:   d65f03c0    ret
   8f24c:   b0000101    adrp    x1, b0000 <_etext+0xf9c>
   8f250:   d0000100    adrp    x0, b1000 <_etext+0x1f9c>
   8f254:   913fc021    add x1, x1, #0xff0
   8f258:   9103c000    add x0, x0, #0xf0
   8f25c:   52800fc2    mov w2, #0x7e
   8f260:   94003618    bl  9cac0 <assertion_failed>
   8f264:   b0000101    adrp    x1, b0000 <_etext+0xf9c>
   8f268:   d0000100    adrp    x0, b1000 <_etext+0x1f9c>
   8f26c:   913fc021    add x1, x1, #0xff0
   8f270:   91036000    add x0, x0, #0xd8
   8f274:   52800a02    mov w2, #0x50
   8f278:   94003612    bl  9cac0 <assertion_failed>
   8f27c:   940040e1    bl  9f600 <CLogger::Get()>
   8f280:   90000103    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8f284:   b0000121    adrp    x1, b4000 <From+0x140>
   8f288:   9119e063    add x3, x3, #0x678
   8f28c:   91354021    add x1, x1, #0xd50
   8f290:   52800022    mov w2, #0x1
   8f294:   940042c3    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8f298:   a9425bf5    ldp x21, x22, [sp, #32]
   8f29c:   17ffffdf    b   8f218 <CUSBMIDIHostDevice::Configure()+0x1c8>
   8f2a0:   b0000101    adrp    x1, b0000 <_etext+0xf9c>
   8f2a4:   d0000100    adrp    x0, b1000 <_etext+0x1f9c>
   8f2a8:   913fc021    add x1, x1, #0xff0
   8f2ac:   91042000    add x0, x0, #0x108
   8f2b0:   52801402    mov w2, #0xa0
   8f2b4:   94003603    bl  9cac0 <assertion_failed>
    ...

000000000008f2c0 <CUSBMouseDevice::~CUSBMouseDevice()>:
   8f2c0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8f2c4:   910003fd    mov x29, sp
   8f2c8:   b0000121    adrp    x1, b4000 <From+0x140>
   8f2cc:   9135c021    add x1, x1, #0xd70
   8f2d0:   f9000bf3    str x19, [sp, #16]
   8f2d4:   aa0003f3    mov x19, x0
   8f2d8:   f9402400    ldr x0, [x0, #72]
   8f2dc:   f9000261    str x1, [x19]
   8f2e0:   b4000080    cbz x0, 8f2f0 <CUSBMouseDevice::~CUSBMouseDevice()+0x30>
   8f2e4:   f9400001    ldr x1, [x0]
   8f2e8:   f9400421    ldr x1, [x1, #8]
   8f2ec:   d63f0020    blr x1
   8f2f0:   f9402a60    ldr x0, [x19, #80]
   8f2f4:   f900267f    str xzr, [x19, #72]
   8f2f8:   b4000040    cbz x0, 8f300 <CUSBMouseDevice::~CUSBMouseDevice()+0x40>
   8f2fc:   9400614d    bl  a7830 <operator delete[](void*)>
   8f300:   aa1303e0    mov x0, x19
   8f304:   f9002a7f    str xzr, [x19, #80]
   8f308:   f9400bf3    ldr x19, [sp, #16]
   8f30c:   a8c27bfd    ldp x29, x30, [sp], #32
   8f310:   17fff818    b   8d370 <CUSBHIDDevice::~CUSBHIDDevice()>
   8f314:   d503201f    nop
   8f318:   d503201f    nop
   8f31c:   d503201f    nop

000000000008f320 <CUSBMouseDevice::~CUSBMouseDevice()>:
   8f320:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8f324:   910003fd    mov x29, sp
   8f328:   f9000bf3    str x19, [sp, #16]
   8f32c:   aa0003f3    mov x19, x0
   8f330:   97ffffe4    bl  8f2c0 <CUSBMouseDevice::~CUSBMouseDevice()>
   8f334:   aa1303e0    mov x0, x19
   8f338:   f9400bf3    ldr x19, [sp, #16]
   8f33c:   d2801101    mov x1, #0x88
   8f340:   a8c27bfd    ldp x29, x30, [sp], #32
   8f344:   14006147    b   a7860 <operator delete(void*, unsigned long)>
   8f348:   d503201f    nop
   8f34c:   d503201f    nop

000000000008f350 <CUSBMouseDevice::CUSBMouseDevice(CUSBFunction*)>:
   8f350:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8f354:   52800002    mov w2, #0x0
   8f358:   910003fd    mov x29, sp
   8f35c:   f9000bf3    str x19, [sp, #16]
   8f360:   aa0003f3    mov x19, x0
   8f364:   97fff7eb    bl  8d310 <CUSBHIDDevice::CUSBHIDDevice(CUSBFunction*, unsigned int)>
   8f368:   b0000120    adrp    x0, b4000 <From+0x140>
   8f36c:   9135c000    add x0, x0, #0xd70
   8f370:   a904fe7f    stp xzr, xzr, [x19, #72]
   8f374:   f9000260    str x0, [x19]
   8f378:   f9400bf3    ldr x19, [sp, #16]
   8f37c:   a8c27bfd    ldp x29, x30, [sp], #32
   8f380:   d65f03c0    ret
   8f384:   d503201f    nop
   8f388:   d503201f    nop
   8f38c:   d503201f    nop

000000000008f390 <CUSBMouseDevice::ExtractUnsigned(void const*, unsigned int, unsigned int)>:
   8f390:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   8f394:   910003fd    mov x29, sp
   8f398:   b40003a1    cbz x1, 8f40c <CUSBMouseDevice::ExtractUnsigned(void const*, unsigned int, unsigned int)+0x7c>
   8f39c:   7100807f    cmp w3, #0x20
   8f3a0:   54000428    b.hi    8f424 <CUSBMouseDevice::ExtractUnsigned(void const*, unsigned int, unsigned int)+0x94>
   8f3a4:   52800000    mov w0, #0x0
   8f3a8:   34000223    cbz w3, 8f3ec <CUSBMouseDevice::ExtractUnsigned(void const*, unsigned int, unsigned int)+0x5c>
   8f3ac:   53037c40    lsr w0, w2, #3
   8f3b0:   12000844    and w4, w2, #0x7
   8f3b4:   b8604820    ldr w0, [x1, w0, uxtw]
   8f3b8:   53037c42    lsr w2, w2, #3
   8f3bc:   7100607f    cmp w3, #0x18
   8f3c0:   8b020021    add x1, x1, x2
   8f3c4:   1ac42400    lsr w0, w0, w4
   8f3c8:   54000169    b.ls    8f3f4 <CUSBMouseDevice::ExtractUnsigned(void const*, unsigned int, unsigned int)+0x64>
   8f3cc:   b8403022    ldur    w2, [x1, #3]
   8f3d0:   51006063    sub w3, w3, #0x18
   8f3d4:   52800021    mov w1, #0x1
   8f3d8:   1ac32021    lsl w1, w1, w3
   8f3dc:   51000421    sub w1, w1, #0x1
   8f3e0:   1ac42442    lsr w2, w2, w4
   8f3e4:   0a020021    and w1, w1, w2
   8f3e8:   33081c20    bfi w0, w1, #24, #8
   8f3ec:   a8c17bfd    ldp x29, x30, [sp], #16
   8f3f0:   d65f03c0    ret
   8f3f4:   52800021    mov w1, #0x1
   8f3f8:   a8c17bfd    ldp x29, x30, [sp], #16
   8f3fc:   1ac32021    lsl w1, w1, w3
   8f400:   51000421    sub w1, w1, #0x1
   8f404:   0a000020    and w0, w1, w0
   8f408:   d65f03c0    ret
   8f40c:   d0000101    adrp    x1, b1000 <_etext+0x1f9c>
   8f410:   b0000100    adrp    x0, b0000 <_etext+0xf9c>
   8f414:   91048021    add x1, x1, #0x120
   8f418:   9134a000    add x0, x0, #0xd28
   8f41c:   52801582    mov w2, #0xac
   8f420:   940035a8    bl  9cac0 <assertion_failed>
   8f424:   d0000101    adrp    x1, b1000 <_etext+0x1f9c>
   8f428:   b0000100    adrp    x0, b0000 <_etext+0xf9c>
   8f42c:   91048021    add x1, x1, #0x120
   8f430:   9134e000    add x0, x0, #0xd38
   8f434:   528015a2    mov w2, #0xad
   8f438:   940035a2    bl  9cac0 <assertion_failed>
   8f43c:   d503201f    nop

000000000008f440 <CUSBMouseDevice::ExtractSigned(void const*, unsigned int, unsigned int)>:
   8f440:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   8f444:   910003fd    mov x29, sp
   8f448:   b40005c1    cbz x1, 8f500 <CUSBMouseDevice::ExtractSigned(void const*, unsigned int, unsigned int)+0xc0>
   8f44c:   7100807f    cmp w3, #0x20
   8f450:   54000648    b.hi    8f518 <CUSBMouseDevice::ExtractSigned(void const*, unsigned int, unsigned int)+0xd8>
   8f454:   52800000    mov w0, #0x0
   8f458:   34000363    cbz w3, 8f4c4 <CUSBMouseDevice::ExtractSigned(void const*, unsigned int, unsigned int)+0x84>
   8f45c:   53037c40    lsr w0, w2, #3
   8f460:   12000844    and w4, w2, #0x7
   8f464:   b8604820    ldr w0, [x1, w0, uxtw]
   8f468:   53037c42    lsr w2, w2, #3
   8f46c:   7100607f    cmp w3, #0x18
   8f470:   8b020021    add x1, x1, x2
   8f474:   1ac42400    lsr w0, w0, w4
   8f478:   540002a9    b.ls    8f4cc <CUSBMouseDevice::ExtractSigned(void const*, unsigned int, unsigned int)+0x8c>
   8f47c:   b8403022    ldur    w2, [x1, #3]
   8f480:   51006065    sub w5, w3, #0x18
   8f484:   52800021    mov w1, #0x1
   8f488:   1ac52021    lsl w1, w1, w5
   8f48c:   7100807f    cmp w3, #0x20
   8f490:   51000421    sub w1, w1, #0x1
   8f494:   1ac42442    lsr w2, w2, w4
   8f498:   0a020021    and w1, w1, w2
   8f49c:   33081c20    bfi w0, w1, #24, #8
   8f4a0:   54000120    b.eq    8f4c4 <CUSBMouseDevice::ExtractSigned(void const*, unsigned int, unsigned int)+0x84>
   8f4a4:   52800021    mov w1, #0x1
   8f4a8:   51000462    sub w2, w3, #0x1
   8f4ac:   1ac32023    lsl w3, w1, w3
   8f4b0:   1ac22021    lsl w1, w1, w2
   8f4b4:   4b0303e3    neg w3, w3
   8f4b8:   6a00003f    tst w1, w0
   8f4bc:   2a030003    orr w3, w0, w3
   8f4c0:   1a801060    csel    w0, w3, w0, ne
   8f4c4:   a8c17bfd    ldp x29, x30, [sp], #16
   8f4c8:   d65f03c0    ret
   8f4cc:   52800021    mov w1, #0x1
   8f4d0:   51000462    sub w2, w3, #0x1
   8f4d4:   1ac32021    lsl w1, w1, w3
   8f4d8:   51000421    sub w1, w1, #0x1
   8f4dc:   0a000020    and w0, w1, w0
   8f4e0:   52800021    mov w1, #0x1
   8f4e4:   1ac32023    lsl w3, w1, w3
   8f4e8:   1ac22021    lsl w1, w1, w2
   8f4ec:   4b0303e3    neg w3, w3
   8f4f0:   6a00003f    tst w1, w0
   8f4f4:   2a030003    orr w3, w0, w3
   8f4f8:   1a801060    csel    w0, w3, w0, ne
   8f4fc:   17fffff2    b   8f4c4 <CUSBMouseDevice::ExtractSigned(void const*, unsigned int, unsigned int)+0x84>
   8f500:   d0000101    adrp    x1, b1000 <_etext+0x1f9c>
   8f504:   b0000100    adrp    x0, b0000 <_etext+0xf9c>
   8f508:   91048021    add x1, x1, #0x120
   8f50c:   9134a000    add x0, x0, #0xd28
   8f510:   528019e2    mov w2, #0xcf
   8f514:   9400356b    bl  9cac0 <assertion_failed>
   8f518:   d0000101    adrp    x1, b1000 <_etext+0x1f9c>
   8f51c:   b0000100    adrp    x0, b0000 <_etext+0xf9c>
   8f520:   91048021    add x1, x1, #0x120
   8f524:   9134e000    add x0, x0, #0xd38
   8f528:   52801a02    mov w2, #0xd0
   8f52c:   94003565    bl  9cac0 <assertion_failed>

000000000008f530 <CUSBMouseDevice::ReportHandler(unsigned char const*, unsigned int)>:
   8f530:   b40006e1    cbz x1, 8f60c <CUSBMouseDevice::ReportHandler(unsigned char const*, unsigned int)+0xdc>
   8f534:   a9bb7bfd    stp x29, x30, [sp, #-80]!
   8f538:   910003fd    mov x29, sp
   8f53c:   b9406003    ldr w3, [x0, #96]
   8f540:   a90153f3    stp x19, x20, [sp, #16]
   8f544:   aa0003f3    mov x19, x0
   8f548:   6b02007f    cmp w3, w2
   8f54c:   54000080    b.eq    8f55c <CUSBMouseDevice::ReportHandler(unsigned char const*, unsigned int)+0x2c>
   8f550:   a94153f3    ldp x19, x20, [sp, #16]
   8f554:   a8c57bfd    ldp x29, x30, [sp], #80
   8f558:   d65f03c0    ret
   8f55c:   a9025bf5    stp x21, x22, [sp, #32]
   8f560:   f9402416    ldr x22, [x0, #72]
   8f564:   b4000576    cbz x22, 8f610 <CUSBMouseDevice::ReportHandler(unsigned char const*, unsigned int)+0xe0>
   8f568:   294c8803    ldp w3, w2, [x0, #100]
   8f56c:   aa0103f4    mov x20, x1
   8f570:   a90363f7    stp x23, x24, [sp, #48]
   8f574:   52800ff8    mov w24, #0x7f
   8f578:   f90023f9    str x25, [sp, #64]
   8f57c:   12800fd9    mov w25, #0xffffff81
   8f580:   97ffff84    bl  8f390 <CUSBMouseDevice::ExtractUnsigned(void const*, unsigned int, unsigned int)>
   8f584:   294d8a63    ldp w3, w2, [x19, #108]
   8f588:   2a0003f7    mov w23, w0
   8f58c:   aa1403e1    mov x1, x20
   8f590:   aa1303e0    mov x0, x19
   8f594:   97ffffab    bl  8f440 <CUSBMouseDevice::ExtractSigned(void const*, unsigned int, unsigned int)>
   8f598:   2a0003f5    mov w21, w0
   8f59c:   294e8a63    ldp w3, w2, [x19, #116]
   8f5a0:   aa1403e1    mov x1, x20
   8f5a4:   3101febf    cmn w21, #0x7f
   8f5a8:   aa1303e0    mov x0, x19
   8f5ac:   1a99a2b5    csel    w21, w21, w25, ge
   8f5b0:   6b1802bf    cmp w21, w24
   8f5b4:   1a98d2b5    csel    w21, w21, w24, le
   8f5b8:   97ffffa2    bl  8f440 <CUSBMouseDevice::ExtractSigned(void const*, unsigned int, unsigned int)>
   8f5bc:   2a0003e4    mov w4, w0
   8f5c0:   294f8a63    ldp w3, w2, [x19, #124]
   8f5c4:   aa1403e1    mov x1, x20
   8f5c8:   6b19009f    cmp w4, w25
   8f5cc:   aa1303e0    mov x0, x19
   8f5d0:   1a99a099    csel    w25, w4, w25, ge
   8f5d4:   6b18033f    cmp w25, w24
   8f5d8:   1a98d339    csel    w25, w25, w24, le
   8f5dc:   97ffff99    bl  8f440 <CUSBMouseDevice::ExtractSigned(void const*, unsigned int, unsigned int)>
   8f5e0:   a94153f3    ldp x19, x20, [sp, #16]
   8f5e4:   2a0003e4    mov w4, w0
   8f5e8:   2a1903e3    mov w3, w25
   8f5ec:   2a1503e2    mov w2, w21
   8f5f0:   120012e1    and w1, w23, #0x1f
   8f5f4:   aa1603e0    mov x0, x22
   8f5f8:   a9425bf5    ldp x21, x22, [sp, #32]
   8f5fc:   a94363f7    ldp x23, x24, [sp, #48]
   8f600:   f94023f9    ldr x25, [sp, #64]
   8f604:   a8c57bfd    ldp x29, x30, [sp], #80
   8f608:   140030da    b   9b970 <CMouseDevice::ReportHandler(unsigned int, int, int, int)>
   8f60c:   d65f03c0    ret
   8f610:   a94153f3    ldp x19, x20, [sp, #16]
   8f614:   a9425bf5    ldp x21, x22, [sp, #32]
   8f618:   a8c57bfd    ldp x29, x30, [sp], #80
   8f61c:   d65f03c0    ret

000000000008f620 <CUSBMouseDevice::DecodeReport()>:
   8f620:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8f624:   910003fd    mov x29, sp
   8f628:   f9402808    ldr x8, [x0, #80]
   8f62c:   a9017fff    stp xzr, xzr, [sp, #16]
   8f630:   b40015a8    cbz x8, 8f8e4 <CUSBMouseDevice::DecodeReport()+0x2c4>
   8f634:   7940b002    ldrh    w2, [x0, #88]
   8f638:   34001622    cbz w2, 8f8fc <CUSBMouseDevice::DecodeReport()+0x2dc>
   8f63c:   5280000c    mov w12, #0x0
   8f640:   5280000a    mov w10, #0x0
   8f644:   d2800006    mov x6, #0x0
   8f648:   52800009    mov w9, #0x0
   8f64c:   5280000d    mov w13, #0x0
   8f650:   5280000f    mov w15, #0x0
   8f654:   5280000e    mov w14, #0x0
   8f658:   5280000b    mov w11, #0x0
   8f65c:   d503201f    nop
   8f660:   39c00101    ldrsb   w1, [x8]
   8f664:   12000423    and w3, w1, #0x3
   8f668:   7100047f    cmp w3, #0x1
   8f66c:   54000720    b.eq    8f750 <CUSBMouseDevice::DecodeReport()+0x130>
   8f670:   7100087f    cmp w3, #0x2
   8f674:   54000600    b.eq    8f734 <CUSBMouseDevice::DecodeReport()+0x114>
   8f678:   350003c3    cbnz    w3, 8f6f0 <CUSBMouseDevice::DecodeReport()+0xd0>
   8f67c:   51000442    sub w2, w2, #0x1
   8f680:   91000508    add x8, x8, #0x1
   8f684:   12003c42    and w2, w2, #0xffff
   8f688:   121e1421    and w1, w1, #0xfc
   8f68c:   7102803f    cmp w1, #0xa0
   8f690:   540004c0    b.eq    8f728 <CUSBMouseDevice::DecodeReport()+0x108>
   8f694:   5400022c    b.gt    8f6d8 <CUSBMouseDevice::DecodeReport()+0xb8>
   8f698:   7100203f    cmp w1, #0x8
   8f69c:   54000640    b.eq    8f764 <CUSBMouseDevice::DecodeReport()+0x144>
   8f6a0:   7102103f    cmp w1, #0x84
   8f6a4:   540008e1    b.ne    8f7c0 <CUSBMouseDevice::DecodeReport()+0x1a0>
   8f6a8:   340000cc    cbz w12, 8f6c0 <CUSBMouseDevice::DecodeReport()+0xa0>
   8f6ac:   35000b6d    cbnz    w13, 8f818 <CUSBMouseDevice::DecodeReport()+0x1f8>
   8f6b0:   2a0303ed    mov w13, w3
   8f6b4:   1100216b    add w11, w11, #0x8
   8f6b8:   2a0c03ea    mov w10, w12
   8f6bc:   d503201f    nop
   8f6c0:   35fffd02    cbnz    w2, 8f660 <CUSBMouseDevice::DecodeReport()+0x40>
   8f6c4:   11001d61    add w1, w11, #0x7
   8f6c8:   53037c21    lsr w1, w1, #3
   8f6cc:   290b840d    stp w13, w1, [x0, #92]
   8f6d0:   a8c27bfd    ldp x29, x30, [sp], #32
   8f6d4:   d65f03c0    ret
   8f6d8:   7103003f    cmp w1, #0xc0
   8f6dc:   54ffff21    b.ne    8f6c0 <CUSBMouseDevice::DecodeReport()+0xa0>
   8f6e0:   71000529    subs    w9, w9, #0x1
   8f6e4:   1a9f114a    csel    w10, w10, wzr, ne
   8f6e8:   35fffbc2    cbnz    w2, 8f660 <CUSBMouseDevice::DecodeReport()+0x40>
   8f6ec:   17fffff6    b   8f6c4 <CUSBMouseDevice::DecodeReport()+0xa4>
   8f6f0:   39c00d05    ldrsb   w5, [x8, #3]
   8f6f4:   121e1421    and w1, w1, #0xfc
   8f6f8:   51001442    sub w2, w2, #0x5
   8f6fc:   7102803f    cmp w1, #0xa0
   8f700:   12003c42    and w2, w2, #0xffff
   8f704:   39c00903    ldrsb   w3, [x8, #2]
   8f708:   91001508    add x8, x8, #0x5
   8f70c:   38dff104    ldursb  w4, [x8, #-1]
   8f710:   53103ca5    lsl w5, w5, #16
   8f714:   38dfc107    ldursb  w7, [x8, #-4]
   8f718:   2a0320a3    orr w3, w5, w3, lsl #8
   8f71c:   2a0460e4    orr w4, w7, w4, lsl #24
   8f720:   2a040063    orr w3, w3, w4
   8f724:   54fffb81    b.ne    8f694 <CUSBMouseDevice::DecodeReport()+0x74>
   8f728:   11000529    add w9, w9, #0x1
   8f72c:   35fff9a2    cbnz    w2, 8f660 <CUSBMouseDevice::DecodeReport()+0x40>
   8f730:   17ffffe5    b   8f6c4 <CUSBMouseDevice::DecodeReport()+0xa4>
   8f734:   39400504    ldrb    w4, [x8, #1]
   8f738:   51000c42    sub w2, w2, #0x3
   8f73c:   91000d08    add x8, x8, #0x3
   8f740:   12003c42    and w2, w2, #0xffff
   8f744:   38dff103    ldursb  w3, [x8, #-1]
   8f748:   2a032083    orr w3, w4, w3, lsl #8
   8f74c:   17ffffcf    b   8f688 <CUSBMouseDevice::DecodeReport()+0x68>
   8f750:   51000842    sub w2, w2, #0x2
   8f754:   39c00503    ldrsb   w3, [x8, #1]
   8f758:   91000908    add x8, x8, #0x2
   8f75c:   12003c42    and w2, w2, #0xffff
   8f760:   17ffffca    b   8f688 <CUSBMouseDevice::DecodeReport()+0x68>
   8f764:   7100087f    cmp w3, #0x2
   8f768:   54000520    b.eq    8f80c <CUSBMouseDevice::DecodeReport()+0x1ec>
   8f76c:   7100047f    cmp w3, #0x1
   8f770:   540005c0    b.eq    8f828 <CUSBMouseDevice::DecodeReport()+0x208>
   8f774:   3607fa6a    tbz w10, #0, 8f6c0 <CUSBMouseDevice::DecodeReport()+0xa0>
   8f778:   7100c47f    cmp w3, #0x31
   8f77c:   54000160    b.eq    8f7a8 <CUSBMouseDevice::DecodeReport()+0x188>
   8f780:   7100e07f    cmp w3, #0x38
   8f784:   540009e0    b.eq    8f8c0 <CUSBMouseDevice::DecodeReport()+0x2a0>
   8f788:   7100c07f    cmp w3, #0x30
   8f78c:   54fff9a1    b.ne    8f6c0 <CUSBMouseDevice::DecodeReport()+0xa0>
   8f790:   52800021    mov w1, #0x1
   8f794:   910043e4    add x4, sp, #0x10
   8f798:   b8265881    str w1, [x4, w6, uxtw #2]
   8f79c:   0b0100c6    add w6, w6, w1
   8f7a0:   35fff602    cbnz    w2, 8f660 <CUSBMouseDevice::DecodeReport()+0x40>
   8f7a4:   17ffffc8    b   8f6c4 <CUSBMouseDevice::DecodeReport()+0xa4>
   8f7a8:   910043e4    add x4, sp, #0x10
   8f7ac:   52800041    mov w1, #0x2
   8f7b0:   b8265881    str w1, [x4, w6, uxtw #2]
   8f7b4:   110004c6    add w6, w6, #0x1
   8f7b8:   35fff542    cbnz    w2, 8f660 <CUSBMouseDevice::DecodeReport()+0x40>
   8f7bc:   17ffffc2    b   8f6c4 <CUSBMouseDevice::DecodeReport()+0xa4>
   8f7c0:   3607f80a    tbz w10, #0, 8f6c0 <CUSBMouseDevice::DecodeReport()+0xa0>
   8f7c4:   7101d03f    cmp w1, #0x74
   8f7c8:   54000081    b.ne    8f7d8 <CUSBMouseDevice::DecodeReport()+0x1b8>
   8f7cc:   2a0303ee    mov w14, w3
   8f7d0:   35fff482    cbnz    w2, 8f660 <CUSBMouseDevice::DecodeReport()+0x40>
   8f7d4:   17ffffbc    b   8f6c4 <CUSBMouseDevice::DecodeReport()+0xa4>
   8f7d8:   5400030d    b.le    8f838 <CUSBMouseDevice::DecodeReport()+0x218>
   8f7dc:   7102003f    cmp w1, #0x80
   8f7e0:   540000a0    b.eq    8f7f4 <CUSBMouseDevice::DecodeReport()+0x1d4>
   8f7e4:   7102503f    cmp w1, #0x94
   8f7e8:   1a8311ef    csel    w15, w15, w3, ne
   8f7ec:   35fff3a2    cbnz    w2, 8f660 <CUSBMouseDevice::DecodeReport()+0x40>
   8f7f0:   17ffffb5    b   8f6c4 <CUSBMouseDevice::DecodeReport()+0xa4>
   8f7f4:   12000463    and w3, w3, #0x3
   8f7f8:   7100087f    cmp w3, #0x2
   8f7fc:   54000300    b.eq    8f85c <CUSBMouseDevice::DecodeReport()+0x23c>
   8f800:   1b0f2dcb    madd    w11, w14, w15, w11
   8f804:   35fff2e2    cbnz    w2, 8f660 <CUSBMouseDevice::DecodeReport()+0x40>
   8f808:   17ffffaf    b   8f6c4 <CUSBMouseDevice::DecodeReport()+0xa4>
   8f80c:   5280002c    mov w12, #0x1
   8f810:   35fff282    cbnz    w2, 8f660 <CUSBMouseDevice::DecodeReport()+0x40>
   8f814:   17ffffac    b   8f6c4 <CUSBMouseDevice::DecodeReport()+0xa4>
   8f818:   6b0d007f    cmp w3, w13
   8f81c:   1a9f17ea    cset    w10, eq
   8f820:   35fff202    cbnz    w2, 8f660 <CUSBMouseDevice::DecodeReport()+0x40>
   8f824:   17ffffa8    b   8f6c4 <CUSBMouseDevice::DecodeReport()+0xa4>
   8f828:   710001bf    cmp w13, #0x0
   8f82c:   1a83114a    csel    w10, w10, w3, ne
   8f830:   35fff182    cbnz    w2, 8f660 <CUSBMouseDevice::DecodeReport()+0x40>
   8f834:   17ffffa4    b   8f6c4 <CUSBMouseDevice::DecodeReport()+0xa4>
   8f838:   7100103f    cmp w1, #0x4
   8f83c:   54000721    b.ne    8f920 <CUSBMouseDevice::DecodeReport()+0x300>
   8f840:   7100247f    cmp w3, #0x9
   8f844:   54fff3e1    b.ne    8f6c0 <CUSBMouseDevice::DecodeReport()+0xa0>
   8f848:   910043e4    add x4, sp, #0x10
   8f84c:   b826589f    str wzr, [x4, w6, uxtw #2]
   8f850:   110004c6    add w6, w6, #0x1
   8f854:   35fff062    cbnz    w2, 8f660 <CUSBMouseDevice::DecodeReport()+0x40>
   8f858:   17ffff9b    b   8f6c4 <CUSBMouseDevice::DecodeReport()+0xa4>
   8f85c:   71000cdf    cmp w6, #0x3
   8f860:   54000548    b.hi    8f908 <CUSBMouseDevice::DecodeReport()+0x2e8>
   8f864:   2a0b03e5    mov w5, w11
   8f868:   d2800023    mov x3, #0x1
   8f86c:   910043e4    add x4, sp, #0x10
   8f870:   35000146    cbnz    w6, 8f898 <CUSBMouseDevice::DecodeReport()+0x278>
   8f874:   14000019    b   8f8d8 <CUSBMouseDevice::DecodeReport()+0x2b8>
   8f878:   7100003f    cmp w1, #0x0
   8f87c:   8b214c01    add x1, x0, w1, uxtw #3
   8f880:   1a8e01e7    csel    w7, w15, w14, eq
   8f884:   eb0300df    cmp x6, x3
   8f888:   290c9427    stp w7, w5, [x1, #100]
   8f88c:   91000463    add x3, x3, #0x1
   8f890:   0b0700a5    add w5, w5, w7
   8f894:   54000220    b.eq    8f8d8 <CUSBMouseDevice::DecodeReport()+0x2b8>
   8f898:   8b030881    add x1, x4, x3, lsl #2
   8f89c:   b85fc021    ldur    w1, [x1, #-4]
   8f8a0:   71000c3f    cmp w1, #0x3
   8f8a4:   54fffea9    b.ls    8f878 <CUSBMouseDevice::DecodeReport()+0x258>
   8f8a8:   d0000101    adrp    x1, b1000 <_etext+0x1f9c>
   8f8ac:   d0000100    adrp    x0, b1000 <_etext+0x1f9c>
   8f8b0:   91048021    add x1, x1, #0x120
   8f8b4:   91054000    add x0, x0, #0x150
   8f8b8:   52802d22    mov w2, #0x169
   8f8bc:   94003481    bl  9cac0 <assertion_failed>
   8f8c0:   910043e4    add x4, sp, #0x10
   8f8c4:   52800061    mov w1, #0x3
   8f8c8:   b8265881    str w1, [x4, w6, uxtw #2]
   8f8cc:   110004c6    add w6, w6, #0x1
   8f8d0:   35ffec82    cbnz    w2, 8f660 <CUSBMouseDevice::DecodeReport()+0x40>
   8f8d4:   17ffff7c    b   8f6c4 <CUSBMouseDevice::DecodeReport()+0xa4>
   8f8d8:   1b0f2dcb    madd    w11, w14, w15, w11
   8f8dc:   d2800006    mov x6, #0x0
   8f8e0:   17ffffc9    b   8f804 <CUSBMouseDevice::DecodeReport()+0x1e4>
   8f8e4:   d0000101    adrp    x1, b1000 <_etext+0x1f9c>
   8f8e8:   b0000100    adrp    x0, b0000 <_etext+0xf9c>
   8f8ec:   91048021    add x1, x1, #0x120
   8f8f0:   91352000    add x0, x0, #0xd48
   8f8f4:   52801d62    mov w2, #0xeb
   8f8f8:   94003472    bl  9cac0 <assertion_failed>
   8f8fc:   52800001    mov w1, #0x0
   8f900:   5280000d    mov w13, #0x0
   8f904:   17ffff72    b   8f6cc <CUSBMouseDevice::DecodeReport()+0xac>
   8f908:   d0000101    adrp    x1, b1000 <_etext+0x1f9c>
   8f90c:   d0000100    adrp    x0, b1000 <_etext+0x1f9c>
   8f910:   91048021    add x1, x1, #0x120
   8f914:   9104c000    add x0, x0, #0x130
   8f918:   52802ca2    mov w2, #0x165
   8f91c:   94003469    bl  9cac0 <assertion_failed>
   8f920:   5280002a    mov w10, #0x1
   8f924:   35ffe9e2    cbnz    w2, 8f660 <CUSBMouseDevice::DecodeReport()+0x40>
   8f928:   17ffff67    b   8f6c4 <CUSBMouseDevice::DecodeReport()+0xa4>
   8f92c:   d503201f    nop

000000000008f930 <CUSBMouseDevice::Configure()>:
   8f930:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   8f934:   52800421    mov w1, #0x21
   8f938:   910003fd    mov x29, sp
   8f93c:   a90153f3    stp x19, x20, [sp, #16]
   8f940:   aa0003f3    mov x19, x0
   8f944:   97ffeb0f    bl  8a580 <CUSBFunction::GetDescriptor(unsigned char)>
   8f948:   b40000c0    cbz x0, 8f960 <CUSBMouseDevice::Configure()+0x30>
   8f94c:   aa0003f4    mov x20, x0
   8f950:   39401c00    ldrb    w0, [x0, #7]
   8f954:   39402281    ldrb    w1, [x20, #8]
   8f958:   2a012001    orr w1, w0, w1, lsl #8
   8f95c:   35000121    cbnz    w1, 8f980 <CUSBMouseDevice::Configure()+0x50>
   8f960:   aa1303e0    mov x0, x19
   8f964:   b0000121    adrp    x1, b4000 <From+0x140>
   8f968:   91376021    add x1, x1, #0xdd8
   8f96c:   97ffeb11    bl  8a5b0 <CUSBFunction::ConfigurationError(char const*) const>
   8f970:   a94153f3    ldp x19, x20, [sp, #16]
   8f974:   52800000    mov w0, #0x0
   8f978:   a8c47bfd    ldp x29, x30, [sp], #64
   8f97c:   d65f03c0    ret
   8f980:   a9025bf5    stp x21, x22, [sp, #32]
   8f984:   92403c20    and x0, x1, #0xffff
   8f988:   a90363f7    stp x23, x24, [sp, #48]
   8f98c:   7900b261    strh    w1, [x19, #88]
   8f990:   94005f94    bl  a77e0 <operator new[](unsigned long)>
   8f994:   aa0003e1    mov x1, x0
   8f998:   aa1303e0    mov x0, x19
   8f99c:   f9002a61    str x1, [x19, #80]
   8f9a0:   97ffeaec    bl  8a550 <CUSBFunction::GetHost() const>
   8f9a4:   aa0003f5    mov x21, x0
   8f9a8:   aa1303e0    mov x0, x19
   8f9ac:   97ffeadd    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   8f9b0:   f9402a77    ldr x23, [x19, #80]
   8f9b4:   aa0003f6    mov x22, x0
   8f9b8:   aa1303e0    mov x0, x19
   8f9bc:   39401a94    ldrb    w20, [x20, #6]
   8f9c0:   7940b278    ldrh    w24, [x19, #88]
   8f9c4:   97ffeb47    bl  8a6e0 <CUSBFunction::GetInterfaceNumber() const>
   8f9c8:   12001c07    and w7, w0, #0xff
   8f9cc:   aa1603e1    mov x1, x22
   8f9d0:   aa1703e4    mov x4, x23
   8f9d4:   2a1403e2    mov w2, w20
   8f9d8:   aa1503e0    mov x0, x21
   8f9dc:   12800fc6    mov w6, #0xffffff81
   8f9e0:   2a1803e5    mov w5, w24
   8f9e4:   52800003    mov w3, #0x0
   8f9e8:   97ffc5d2    bl  81130 <CUSBHostController::GetDescriptor(CUSBEndpoint*, unsigned char, unsigned char, void*, unsigned int, unsigned char, unsigned short)>
   8f9ec:   7940b261    ldrh    w1, [x19, #88]
   8f9f0:   6b01001f    cmp w0, w1
   8f9f4:   540001c0    b.eq    8fa2c <CUSBMouseDevice::Configure()+0xfc>
   8f9f8:   94003f02    bl  9f600 <CLogger::Get()>
   8f9fc:   b0000103    adrp    x3, b0000 <_etext+0xf9c>
   8fa00:   b0000121    adrp    x1, b4000 <From+0x140>
   8fa04:   9121c063    add x3, x3, #0x870
   8fa08:   91376021    add x1, x1, #0xdd8
   8fa0c:   52800022    mov w2, #0x1
   8fa10:   940040e4    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8fa14:   a94153f3    ldp x19, x20, [sp, #16]
   8fa18:   52800000    mov w0, #0x0
   8fa1c:   a9425bf5    ldp x21, x22, [sp, #32]
   8fa20:   a94363f7    ldp x23, x24, [sp, #48]
   8fa24:   a8c47bfd    ldp x29, x30, [sp], #64
   8fa28:   d65f03c0    ret
   8fa2c:   aa1303e0    mov x0, x19
   8fa30:   97fffefc    bl  8f620 <CUSBMouseDevice::DecodeReport()>
   8fa34:   b9406261    ldr w1, [x19, #96]
   8fa38:   350000e1    cbnz    w1, 8fa54 <CUSBMouseDevice::Configure()+0x124>
   8fa3c:   a94153f3    ldp x19, x20, [sp, #16]
   8fa40:   52800000    mov w0, #0x0
   8fa44:   a9425bf5    ldp x21, x22, [sp, #32]
   8fa48:   a94363f7    ldp x23, x24, [sp, #48]
   8fa4c:   a8c47bfd    ldp x29, x30, [sp], #64
   8fa50:   d65f03c0    ret
   8fa54:   aa1303e0    mov x0, x19
   8fa58:   97fff672    bl  8d420 <CUSBHIDDevice::ConfigureHID(unsigned int)>
   8fa5c:   36000200    tbz w0, #0, 8fa9c <CUSBMouseDevice::Configure()+0x16c>
   8fa60:   d2800a00    mov x0, #0x50
   8fa64:   94005f57    bl  a77c0 <operator new(unsigned long)>
   8fa68:   b9407e62    ldr w2, [x19, #124]
   8fa6c:   aa0003f4    mov x20, x0
   8fa70:   b9406661    ldr w1, [x19, #100]
   8fa74:   7100005f    cmp w2, #0x0
   8fa78:   1a9f07e2    cset    w2, ne
   8fa7c:   94002f5d    bl  9b7f0 <CMouseDevice::CMouseDevice(unsigned int, bool)>
   8fa80:   a9425bf5    ldp x21, x22, [sp, #32]
   8fa84:   aa1303e0    mov x0, x19
   8fa88:   a94363f7    ldp x23, x24, [sp, #48]
   8fa8c:   f9002674    str x20, [x19, #72]
   8fa90:   a94153f3    ldp x19, x20, [sp, #16]
   8fa94:   a8c47bfd    ldp x29, x30, [sp], #64
   8fa98:   17fff78e    b   8d8d0 <CUSBHIDDevice::StartRequest()>
   8fa9c:   94003ed9    bl  9f600 <CLogger::Get()>
   8faa0:   90000103    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8faa4:   b0000121    adrp    x1, b4000 <From+0x140>
   8faa8:   9107c063    add x3, x3, #0x1f0
   8faac:   17ffffd7    b   8fa08 <CUSBMouseDevice::Configure()+0xd8>

000000000008fab0 <CUSBPrinterDevice::~CUSBPrinterDevice()>:
   8fab0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8fab4:   910003fd    mov x29, sp
   8fab8:   b0000121    adrp    x1, b4000 <From+0x140>
   8fabc:   9137c021    add x1, x1, #0xdf0
   8fac0:   a90153f3    stp x19, x20, [sp, #16]
   8fac4:   aa0003f3    mov x19, x0
   8fac8:   b9404000    ldr w0, [x0, #64]
   8facc:   f9000261    str x1, [x19]
   8fad0:   350002a0    cbnz    w0, 8fb24 <CUSBPrinterDevice::~CUSBPrinterDevice()+0x74>
   8fad4:   f9401e74    ldr x20, [x19, #56]
   8fad8:   b40000d4    cbz x20, 8faf0 <CUSBPrinterDevice::~CUSBPrinterDevice()+0x40>
   8fadc:   aa1403e0    mov x0, x20
   8fae0:   97ffe928    bl  89f80 <CUSBEndpoint::~CUSBEndpoint()>
   8fae4:   aa1403e0    mov x0, x20
   8fae8:   d2800401    mov x1, #0x20
   8faec:   94005f5d    bl  a7860 <operator delete(void*, unsigned long)>
   8faf0:   f9401a74    ldr x20, [x19, #48]
   8faf4:   f9001e7f    str xzr, [x19, #56]
   8faf8:   b40000d4    cbz x20, 8fb10 <CUSBPrinterDevice::~CUSBPrinterDevice()+0x60>
   8fafc:   aa1403e0    mov x0, x20
   8fb00:   97ffe920    bl  89f80 <CUSBEndpoint::~CUSBEndpoint()>
   8fb04:   aa1403e0    mov x0, x20
   8fb08:   d2800401    mov x1, #0x20
   8fb0c:   94005f55    bl  a7860 <operator delete(void*, unsigned long)>
   8fb10:   aa1303e0    mov x0, x19
   8fb14:   f9001a7f    str xzr, [x19, #48]
   8fb18:   a94153f3    ldp x19, x20, [sp, #16]
   8fb1c:   a8c27bfd    ldp x29, x30, [sp], #32
   8fb20:   17ffe96c    b   8a0d0 <CUSBFunction::~CUSBFunction()>
   8fb24:   940037cf    bl  9da60 <CDeviceNameService::Get()>
   8fb28:   b9404262    ldr w2, [x19, #64]
   8fb2c:   b0000121    adrp    x1, b4000 <From+0x140>
   8fb30:   52800003    mov w3, #0x0
   8fb34:   91394021    add x1, x1, #0xe50
   8fb38:   940037f6    bl  9db10 <CDeviceNameService::RemoveDevice(char const*, unsigned int, bool)>
   8fb3c:   b9404261    ldr w1, [x19, #64]
   8fb40:   f0000140    adrp    x0, ba000 <font_data+0x1080>
   8fb44:   91234000    add x0, x0, #0x8d0
   8fb48:   940060f6    bl  a7f20 <CNumberPool::FreeNumber(unsigned int)>
   8fb4c:   17ffffe2    b   8fad4 <CUSBPrinterDevice::~CUSBPrinterDevice()+0x24>

000000000008fb50 <CUSBPrinterDevice::~CUSBPrinterDevice()>:
   8fb50:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8fb54:   910003fd    mov x29, sp
   8fb58:   f9000bf3    str x19, [sp, #16]
   8fb5c:   aa0003f3    mov x19, x0
   8fb60:   97ffffd4    bl  8fab0 <CUSBPrinterDevice::~CUSBPrinterDevice()>
   8fb64:   aa1303e0    mov x0, x19
   8fb68:   f9400bf3    ldr x19, [sp, #16]
   8fb6c:   d2800901    mov x1, #0x48
   8fb70:   a8c27bfd    ldp x29, x30, [sp], #32
   8fb74:   14005f3b    b   a7860 <operator delete(void*, unsigned long)>
   8fb78:   d503201f    nop
   8fb7c:   d503201f    nop

000000000008fb80 <CUSBPrinterDevice::Write(void const*, unsigned long)>:
   8fb80:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   8fb84:   910003fd    mov x29, sp
   8fb88:   a90153f3    stp x19, x20, [sp, #16]
   8fb8c:   f90013f5    str x21, [sp, #32]
   8fb90:   b4000241    cbz x1, 8fbd8 <CUSBPrinterDevice::Write(void const*, unsigned long)+0x58>
   8fb94:   aa0203f3    mov x19, x2
   8fb98:   b40002c2    cbz x2, 8fbf0 <CUSBPrinterDevice::Write(void const*, unsigned long)+0x70>
   8fb9c:   aa0103f4    mov x20, x1
   8fba0:   aa0003f5    mov x21, x0
   8fba4:   97ffea6b    bl  8a550 <CUSBFunction::GetHost() const>
   8fba8:   b4000300    cbz x0, 8fc08 <CUSBPrinterDevice::Write(void const*, unsigned long)+0x88>
   8fbac:   f9401ea1    ldr x1, [x21, #56]
   8fbb0:   aa1403e2    mov x2, x20
   8fbb4:   2a1303e3    mov w3, w19
   8fbb8:   52800004    mov w4, #0x0
   8fbbc:   97ffc591    bl  81200 <CUSBHostController::Transfer(CUSBEndpoint*, void*, unsigned int, unsigned int)>
   8fbc0:   f94013f5    ldr x21, [sp, #32]
   8fbc4:   7100001f    cmp w0, #0x0
   8fbc8:   5a9fa260    csinv   w0, w19, wzr, ge
   8fbcc:   a94153f3    ldp x19, x20, [sp, #16]
   8fbd0:   a8c37bfd    ldp x29, x30, [sp], #48
   8fbd4:   d65f03c0    ret
   8fbd8:   d0000101    adrp    x1, b1000 <_etext+0x1f9c>
   8fbdc:   90000100    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8fbe0:   9105a021    add x1, x1, #0x168
   8fbe4:   91260000    add x0, x0, #0x980
   8fbe8:   52801102    mov w2, #0x88
   8fbec:   940033b5    bl  9cac0 <assertion_failed>
   8fbf0:   d0000101    adrp    x1, b1000 <_etext+0x1f9c>
   8fbf4:   d0000100    adrp    x0, b1000 <_etext+0x1f9c>
   8fbf8:   9105a021    add x1, x1, #0x168
   8fbfc:   9105e000    add x0, x0, #0x178
   8fc00:   52801122    mov w2, #0x89
   8fc04:   940033af    bl  9cac0 <assertion_failed>
   8fc08:   d0000101    adrp    x1, b1000 <_etext+0x1f9c>
   8fc0c:   90000100    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8fc10:   9105a021    add x1, x1, #0x168
   8fc14:   9113e000    add x0, x0, #0x4f8
   8fc18:   52801182    mov w2, #0x8c
   8fc1c:   940033a9    bl  9cac0 <assertion_failed>

000000000008fc20 <CUSBPrinterDevice::CUSBPrinterDevice(CUSBFunction*)>:
   8fc20:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8fc24:   910003fd    mov x29, sp
   8fc28:   f9000bf3    str x19, [sp, #16]
   8fc2c:   aa0003f3    mov x19, x0
   8fc30:   97ffe9cc    bl  8a360 <CUSBFunction::CUSBFunction(CUSBFunction*)>
   8fc34:   b0000120    adrp    x0, b4000 <From+0x140>
   8fc38:   9137c000    add x0, x0, #0xdf0
   8fc3c:   b9002a7f    str wzr, [x19, #40]
   8fc40:   a9037e7f    stp xzr, xzr, [x19, #48]
   8fc44:   f9000260    str x0, [x19]
   8fc48:   b900427f    str wzr, [x19, #64]
   8fc4c:   f9400bf3    ldr x19, [sp, #16]
   8fc50:   a8c27bfd    ldp x29, x30, [sp], #32
   8fc54:   d65f03c0    ret
   8fc58:   d503201f    nop
   8fc5c:   d503201f    nop

000000000008fc60 <CUSBPrinterDevice::Configure()>:
   8fc60:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   8fc64:   910003fd    mov x29, sp
   8fc68:   a90153f3    stp x19, x20, [sp, #16]
   8fc6c:   aa0003f4    mov x20, x0
   8fc70:   97ffeac0    bl  8a770 <CUSBFunction::GetInterfaceProtocol() const>
   8fc74:   72001c00    ands    w0, w0, #0xff
   8fc78:   321e73e1    mov w1, #0x7ffffffc
   8fc7c:   51000c02    sub w2, w0, #0x3
   8fc80:   7a411040    ccmp    w2, w1, #0x0, ne
   8fc84:   b9002a80    str w0, [x20, #40]
   8fc88:   54000869    b.ls    8fd94 <CUSBPrinterDevice::Configure()+0x134>
   8fc8c:   aa1403e0    mov x0, x20
   8fc90:   97ffea0c    bl  8a4c0 <CUSBFunction::GetNumEndpoints() const>
   8fc94:   b9402a81    ldr w1, [x20, #40]
   8fc98:   7100043f    cmp w1, #0x1
   8fc9c:   1a9f07e1    cset    w1, ne
   8fca0:   11000421    add w1, w1, #0x1
   8fca4:   6b20003f    cmp w1, w0, uxtb
   8fca8:   54000bcc    b.gt    8fe20 <CUSBPrinterDevice::Configure()+0x1c0>
   8fcac:   f90013f5    str x21, [sp, #32]
   8fcb0:   14000005    b   8fcc4 <CUSBPrinterDevice::Configure()+0x64>
   8fcb4:   39400e61    ldrb    w1, [x19, #3]
   8fcb8:   12001421    and w1, w1, #0x3f
   8fcbc:   7100083f    cmp w1, #0x2
   8fcc0:   540004c0    b.eq    8fd58 <CUSBPrinterDevice::Configure()+0xf8>
   8fcc4:   528000a1    mov w1, #0x5
   8fcc8:   aa1403e0    mov x0, x20
   8fccc:   97ffea2d    bl  8a580 <CUSBFunction::GetDescriptor(unsigned char)>
   8fcd0:   aa0003f3    mov x19, x0
   8fcd4:   b5ffff00    cbnz    x0, 8fcb4 <CUSBPrinterDevice::Configure()+0x54>
   8fcd8:   f9401e80    ldr x0, [x20, #56]
   8fcdc:   b4000780    cbz x0, 8fdcc <CUSBPrinterDevice::Configure()+0x16c>
   8fce0:   b9402a80    ldr w0, [x20, #40]
   8fce4:   7100041f    cmp w0, #0x1
   8fce8:   54000060    b.eq    8fcf4 <CUSBPrinterDevice::Configure()+0x94>
   8fcec:   f9401a80    ldr x0, [x20, #48]
   8fcf0:   b40006e0    cbz x0, 8fdcc <CUSBPrinterDevice::Configure()+0x16c>
   8fcf4:   aa1403e0    mov x0, x20
   8fcf8:   97ffe92e    bl  8a1b0 <CUSBFunction::Configure()>
   8fcfc:   12001c13    and w19, w0, #0xff
   8fd00:   360009e0    tbz w0, #0, 8fe3c <CUSBPrinterDevice::Configure()+0x1dc>
   8fd04:   b9404280    ldr w0, [x20, #64]
   8fd08:   35000b00    cbnz    w0, 8fe68 <CUSBPrinterDevice::Configure()+0x208>
   8fd0c:   b0000135    adrp    x21, b4000 <From+0x140>
   8fd10:   913942b5    add x21, x21, #0xe50
   8fd14:   f0000140    adrp    x0, ba000 <font_data+0x1080>
   8fd18:   910022a2    add x2, x21, #0x8
   8fd1c:   52800021    mov w1, #0x1
   8fd20:   91234000    add x0, x0, #0x8d0
   8fd24:   9400604f    bl  a7e60 <CNumberPool::AllocateNumber(bool, char const*)>
   8fd28:   b9004280    str w0, [x20, #64]
   8fd2c:   9400374d    bl  9da60 <CDeviceNameService::Get()>
   8fd30:   b9404282    ldr w2, [x20, #64]
   8fd34:   aa1503e1    mov x1, x21
   8fd38:   aa1403e3    mov x3, x20
   8fd3c:   52800004    mov w4, #0x0
   8fd40:   94003754    bl  9da90 <CDeviceNameService::AddDevice(char const*, unsigned int, CDevice*, bool)>
   8fd44:   f94013f5    ldr x21, [sp, #32]
   8fd48:   2a1303e0    mov w0, w19
   8fd4c:   a94153f3    ldp x19, x20, [sp, #16]
   8fd50:   a8c37bfd    ldp x29, x30, [sp], #48
   8fd54:   d65f03c0    ret
   8fd58:   39c00a60    ldrsb   w0, [x19, #2]
   8fd5c:   37f80480    tbnz    w0, #31, 8fdec <CUSBPrinterDevice::Configure()+0x18c>
   8fd60:   f9401e80    ldr x0, [x20, #56]
   8fd64:   b5000340    cbnz    x0, 8fdcc <CUSBPrinterDevice::Configure()+0x16c>
   8fd68:   d2800400    mov x0, #0x20
   8fd6c:   94005e95    bl  a77c0 <operator new(unsigned long)>
   8fd70:   aa0003f5    mov x21, x0
   8fd74:   aa1403e0    mov x0, x20
   8fd78:   97ffe9de    bl  8a4f0 <CUSBFunction::GetDevice() const>
   8fd7c:   aa0003e1    mov x1, x0
   8fd80:   aa1303e2    mov x2, x19
   8fd84:   aa1503e0    mov x0, x21
   8fd88:   97ffe812    bl  89dd0 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   8fd8c:   f9001e95    str x21, [x20, #56]
   8fd90:   17ffffcd    b   8fcc4 <CUSBPrinterDevice::Configure()+0x64>
   8fd94:   94003e1b    bl  9f600 <CLogger::Get()>
   8fd98:   b0000121    adrp    x1, b4000 <From+0x140>
   8fd9c:   91394021    add x1, x1, #0xe50
   8fda0:   b9402a84    ldr w4, [x20, #40]
   8fda4:   d0000103    adrp    x3, b1000 <_etext+0x1f9c>
   8fda8:   91002021    add x1, x1, #0x8
   8fdac:   91062063    add x3, x3, #0x188
   8fdb0:   52800022    mov w2, #0x1
   8fdb4:   52800013    mov w19, #0x0
   8fdb8:   94003ffa    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8fdbc:   2a1303e0    mov w0, w19
   8fdc0:   a94153f3    ldp x19, x20, [sp, #16]
   8fdc4:   a8c37bfd    ldp x29, x30, [sp], #48
   8fdc8:   d65f03c0    ret
   8fdcc:   b0000121    adrp    x1, b4000 <From+0x140>
   8fdd0:   91394021    add x1, x1, #0xe50
   8fdd4:   aa1403e0    mov x0, x20
   8fdd8:   91002021    add x1, x1, #0x8
   8fddc:   97ffe9f5    bl  8a5b0 <CUSBFunction::ConfigurationError(char const*) const>
   8fde0:   f94013f5    ldr x21, [sp, #32]
   8fde4:   52800013    mov w19, #0x0
   8fde8:   17fffff5    b   8fdbc <CUSBPrinterDevice::Configure()+0x15c>
   8fdec:   f9401a80    ldr x0, [x20, #48]
   8fdf0:   b5fffee0    cbnz    x0, 8fdcc <CUSBPrinterDevice::Configure()+0x16c>
   8fdf4:   d2800400    mov x0, #0x20
   8fdf8:   94005e72    bl  a77c0 <operator new(unsigned long)>
   8fdfc:   aa0003f5    mov x21, x0
   8fe00:   aa1403e0    mov x0, x20
   8fe04:   97ffe9bb    bl  8a4f0 <CUSBFunction::GetDevice() const>
   8fe08:   aa0003e1    mov x1, x0
   8fe0c:   aa1303e2    mov x2, x19
   8fe10:   aa1503e0    mov x0, x21
   8fe14:   97ffe7ef    bl  89dd0 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   8fe18:   f9001a95    str x21, [x20, #48]
   8fe1c:   17ffffaa    b   8fcc4 <CUSBPrinterDevice::Configure()+0x64>
   8fe20:   b0000121    adrp    x1, b4000 <From+0x140>
   8fe24:   91394021    add x1, x1, #0xe50
   8fe28:   aa1403e0    mov x0, x20
   8fe2c:   91002021    add x1, x1, #0x8
   8fe30:   52800013    mov w19, #0x0
   8fe34:   97ffe9df    bl  8a5b0 <CUSBFunction::ConfigurationError(char const*) const>
   8fe38:   17ffffe1    b   8fdbc <CUSBPrinterDevice::Configure()+0x15c>
   8fe3c:   94003df1    bl  9f600 <CLogger::Get()>
   8fe40:   b0000121    adrp    x1, b4000 <From+0x140>
   8fe44:   91394021    add x1, x1, #0xe50
   8fe48:   90000103    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8fe4c:   91002021    add x1, x1, #0x8
   8fe50:   9119e063    add x3, x3, #0x678
   8fe54:   52800022    mov w2, #0x1
   8fe58:   94003fd2    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   8fe5c:   f94013f5    ldr x21, [sp, #32]
   8fe60:   52800013    mov w19, #0x0
   8fe64:   17ffffd6    b   8fdbc <CUSBPrinterDevice::Configure()+0x15c>
   8fe68:   d0000101    adrp    x1, b1000 <_etext+0x1f9c>
   8fe6c:   d0000100    adrp    x0, b1000 <_etext+0x1f9c>
   8fe70:   9105a021    add x1, x1, #0x168
   8fe74:   9106a000    add x0, x0, #0x1a8
   8fe78:   52800fc2    mov w2, #0x7e
   8fe7c:   94003311    bl  9cac0 <assertion_failed>

000000000008fe80 <_GLOBAL__sub_I__ZN17CUSBPrinterDevice18s_DeviceNumberPoolE>:
   8fe80:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8fe84:   910003fd    mov x29, sp
   8fe88:   528007e2    mov w2, #0x3f
   8fe8c:   52800021    mov w1, #0x1
   8fe90:   f9000bf3    str x19, [sp, #16]
   8fe94:   f0000153    adrp    x19, ba000 <font_data+0x1080>
   8fe98:   91234273    add x19, x19, #0x8d0
   8fe9c:   aa1303e0    mov x0, x19
   8fea0:   94005fd4    bl  a7df0 <CNumberPool::CNumberPool(unsigned int, unsigned int)>
   8fea4:   f0000142    adrp    x2, ba000 <font_data+0x1080>
   8fea8:   900000c0    adrp    x0, a7000 <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int, bool)+0xd0>
   8feac:   aa1303e1    mov x1, x19
   8feb0:   f9400bf3    ldr x19, [sp, #16]
   8feb4:   91278042    add x2, x2, #0x9e0
   8feb8:   a8c27bfd    ldp x29, x30, [sp], #32
   8febc:   91394000    add x0, x0, #0xe50
   8fec0:   140055b4    b   a5590 <__cxa_atexit>
    ...

000000000008fed0 <CUSBString::CUSBString(CUSBDevice*)>:
   8fed0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   8fed4:   910003fd    mov x29, sp
   8fed8:   a90153f3    stp x19, x20, [sp, #16]
   8fedc:   aa0003f3    mov x19, x0
   8fee0:   d2800400    mov x0, #0x20
   8fee4:   a9007e61    stp x1, xzr, [x19]
   8fee8:   94005e36    bl  a77c0 <operator new(unsigned long)>
   8feec:   aa0003f4    mov x20, x0
   8fef0:   94004f78    bl  a3cd0 <CString::CString()>
   8fef4:   f9400260    ldr x0, [x19]
   8fef8:   f9000a74    str x20, [x19, #16]
   8fefc:   b4000080    cbz x0, 8ff0c <CUSBString::CUSBString(CUSBDevice*)+0x3c>
   8ff00:   a94153f3    ldp x19, x20, [sp, #16]
   8ff04:   a8c27bfd    ldp x29, x30, [sp], #32
   8ff08:   d65f03c0    ret
   8ff0c:   d0000101    adrp    x1, b1000 <_etext+0x1f9c>
   8ff10:   90000100    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   8ff14:   91070021    add x1, x1, #0x1c0
   8ff18:   9127a000    add x0, x0, #0x9e8
   8ff1c:   52800462    mov w2, #0x23
   8ff20:   940032e8    bl  9cac0 <assertion_failed>
   8ff24:   d503201f    nop
   8ff28:   d503201f    nop
   8ff2c:   d503201f    nop

000000000008ff30 <CUSBString::CUSBString(CUSBString*)>:
   8ff30:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   8ff34:   910003fd    mov x29, sp
   8ff38:   a90153f3    stp x19, x20, [sp, #16]
   8ff3c:   aa0003f3    mov x19, x0
   8ff40:   d2800400    mov x0, #0x20
   8ff44:   aa0103f4    mov x20, x1
   8ff48:   f90013f5    str x21, [sp, #32]
   8ff4c:   f900067f    str xzr, [x19, #8]
   8ff50:   94005e1c    bl  a77c0 <operator new(unsigned long)>
   8ff54:   aa0003f5    mov x21, x0
   8ff58:   94004f5e    bl  a3cd0 <CString::CString()>
   8ff5c:   f9000a75    str x21, [x19, #16]
   8ff60:   b4000334    cbz x20, 8ffc4 <CUSBString::CUSBString(CUSBString*)+0x94>
   8ff64:   a9400281    ldp x1, x0, [x20]
   8ff68:   f9000261    str x1, [x19]
   8ff6c:   b4000120    cbz x0, 8ff90 <CUSBString::CUSBString(CUSBString*)+0x60>
   8ff70:   39400000    ldrb    w0, [x0]
   8ff74:   94005e1b    bl  a77e0 <operator new[](unsigned long)>
   8ff78:   f9400681    ldr x1, [x20, #8]
   8ff7c:   f9000660    str x0, [x19, #8]
   8ff80:   39400022    ldrb    w2, [x1]
   8ff84:   94005b7d    bl  a6d78 <memcpy>
   8ff88:   f9400a60    ldr x0, [x19, #16]
   8ff8c:   b4000100    cbz x0, 8ffac <CUSBString::CUSBString(CUSBString*)+0x7c>
   8ff90:   f9400a80    ldr x0, [x20, #16]
   8ff94:   b4000240    cbz x0, 8ffdc <CUSBString::CUSBString(CUSBString*)+0xac>
   8ff98:   f94013f5    ldr x21, [sp, #32]
   8ff9c:   f9000a60    str x0, [x19, #16]
   8ffa0:   a94153f3    ldp x19, x20, [sp, #16]
   8ffa4:   a8c37bfd    ldp x29, x30, [sp], #48
   8ffa8:   d65f03c0    ret
   8ffac:   d0000101    adrp    x1, b1000 <_etext+0x1f9c>
   8ffb0:   d0000100    adrp    x0, b1000 <_etext+0x1f9c>
   8ffb4:   91070021    add x1, x1, #0x1c0
   8ffb8:   91074000    add x0, x0, #0x1d0
   8ffbc:   528006a2    mov w2, #0x35
   8ffc0:   940032c0    bl  9cac0 <assertion_failed>
   8ffc4:   d0000101    adrp    x1, b1000 <_etext+0x1f9c>
   8ffc8:   b0000100    adrp    x0, b0000 <_etext+0xf9c>
   8ffcc:   91070021    add x1, x1, #0x1c0
   8ffd0:   9122c000    add x0, x0, #0x8b0
   8ffd4:   52800562    mov w2, #0x2b
   8ffd8:   940032ba    bl  9cac0 <assertion_failed>
   8ffdc:   d0000101    adrp    x1, b1000 <_etext+0x1f9c>
   8ffe0:   d0000100    adrp    x0, b1000 <_etext+0x1f9c>
   8ffe4:   91070021    add x1, x1, #0x1c0
   8ffe8:   91078000    add x0, x0, #0x1e0
   8ffec:   528006c2    mov w2, #0x36
   8fff0:   940032b4    bl  9cac0 <assertion_failed>
   8fff4:   d503201f    nop
   8fff8:   d503201f    nop
   8fffc:   d503201f    nop

0000000000090000 <CUSBString::~CUSBString()>:
   90000:   a9be7bfd    stp x29, x30, [sp, #-32]!
   90004:   910003fd    mov x29, sp
   90008:   f9000bf3    str x19, [sp, #16]
   9000c:   aa0003f3    mov x19, x0
   90010:   f9400800    ldr x0, [x0, #16]
   90014:   b4000080    cbz x0, 90024 <CUSBString::~CUSBString()+0x24>
   90018:   f9400001    ldr x1, [x0]
   9001c:   f9400421    ldr x1, [x1, #8]
   90020:   d63f0020    blr x1
   90024:   f9400660    ldr x0, [x19, #8]
   90028:   f9000a7f    str xzr, [x19, #16]
   9002c:   b4000080    cbz x0, 9003c <CUSBString::~CUSBString()+0x3c>
   90030:   f9400bf3    ldr x19, [sp, #16]
   90034:   a8c27bfd    ldp x29, x30, [sp], #32
   90038:   14005dfe    b   a7830 <operator delete[](void*)>
   9003c:   f9400bf3    ldr x19, [sp, #16]
   90040:   a8c27bfd    ldp x29, x30, [sp], #32
   90044:   d65f03c0    ret
   90048:   d503201f    nop
   9004c:   d503201f    nop

0000000000090050 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)>:
   90050:   a9bb7bfd    stp x29, x30, [sp, #-80]!
   90054:   910003fd    mov x29, sp
   90058:   a90153f3    stp x19, x20, [sp, #16]
   9005c:   a9025bf5    stp x21, x22, [sp, #32]
   90060:   72001c35    ands    w21, w1, #0xff
   90064:   a90363f7    stp x23, x24, [sp, #48]
   90068:   540009c0    b.eq    901a0 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x150>
   9006c:   aa0003f3    mov x19, x0
   90070:   12003c56    and w22, w2, #0xffff
   90074:   f9400400    ldr x0, [x0, #8]
   90078:   b4000040    cbz x0, 90080 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x30>
   9007c:   94005ded    bl  a7830 <operator delete[](void*)>
   90080:   d2800080    mov x0, #0x4
   90084:   94005dd7    bl  a77e0 <operator new[](unsigned long)>
   90088:   f9400261    ldr x1, [x19]
   9008c:   f9000660    str x0, [x19, #8]
   90090:   b4000941    cbz x1, 901b8 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x168>
   90094:   aa0103e0    mov x0, x1
   90098:   97ffe12a    bl  88540 <CUSBDevice::GetHost() const>
   9009c:   aa0003f4    mov x20, x0
   900a0:   f9400260    ldr x0, [x19]
   900a4:   97ffe11b    bl  88510 <CUSBDevice::GetEndpoint0() const>
   900a8:   f9400664    ldr x4, [x19, #8]
   900ac:   aa0003e1    mov x1, x0
   900b0:   2a1603e7    mov w7, w22
   900b4:   aa1403e0    mov x0, x20
   900b8:   2a1503e3    mov w3, w21
   900bc:   12800fe6    mov w6, #0xffffff80
   900c0:   52800085    mov w5, #0x4
   900c4:   52800062    mov w2, #0x3
   900c8:   97ffc41a    bl  81130 <CUSBHostController::GetDescriptor(CUSBEndpoint*, unsigned char, unsigned char, void*, unsigned int, unsigned char, unsigned short)>
   900cc:   37f805c0    tbnz    w0, #31, 90184 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x134>
   900d0:   f9400660    ldr x0, [x19, #8]
   900d4:   39400014    ldrb    w20, [x0]
   900d8:   7100069f    cmp w20, #0x1
   900dc:   54000549    b.ls    90184 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x134>
   900e0:   37000534    tbnz    w20, #0, 90184 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x134>
   900e4:   39400417    ldrb    w23, [x0, #1]
   900e8:   71000eff    cmp w23, #0x3
   900ec:   540004c1    b.ne    90184 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x134>
   900f0:   7100129f    cmp w20, #0x4
   900f4:   540006e8    b.hi    901d0 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x180>
   900f8:   71000a9f    cmp w20, #0x2
   900fc:   54000b60    b.eq    90268 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x218>
   90100:   7100129f    cmp w20, #0x4
   90104:   d2800024    mov x4, #0x1
   90108:   910123b4    add x20, x29, #0x48
   9010c:   54000ba1    b.ne    90280 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x230>
   90110:   d2800003    mov x3, #0x0
   90114:   52800be1    mov w1, #0x5f
   90118:   8b234402    add x2, x0, w3, uxtw #1
   9011c:   39400845    ldrb    w5, [x2, #2]
   90120:   39400c42    ldrb    w2, [x2, #3]
   90124:   2a0220a2    orr w2, w5, w2, lsl #8
   90128:   51008045    sub w5, w2, #0x20
   9012c:   12003ca5    and w5, w5, #0xffff
   90130:   710178bf    cmp w5, #0x5e
   90134:   7a408844    ccmp    w2, #0x0, #0x4, hi
   90138:   1a810042    csel    w2, w2, w1, eq
   9013c:   38234a82    strb    w2, [x20, w3, uxtw]
   90140:   91000463    add x3, x3, #0x1
   90144:   eb04007f    cmp x3, x4
   90148:   54fffe81    b.ne    90118 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0xc8>
   9014c:   f9400a60    ldr x0, [x19, #16]
   90150:   38236a9f    strb    wzr, [x20, x3]
   90154:   b4000080    cbz x0, 90164 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x114>
   90158:   f9400001    ldr x1, [x0]
   9015c:   f9400421    ldr x1, [x1, #8]
   90160:   d63f0020    blr x1
   90164:   d2800400    mov x0, #0x20
   90168:   94005d96    bl  a77c0 <operator new(unsigned long)>
   9016c:   aa1403e1    mov x1, x20
   90170:   aa0003f4    mov x20, x0
   90174:   94004edf    bl  a3cf0 <CString::CString(char const*)>
   90178:   52800020    mov w0, #0x1
   9017c:   f9000a74    str x20, [x19, #16]
   90180:   14000002    b   90188 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x138>
   90184:   52800000    mov w0, #0x0
   90188:   910003bf    mov sp, x29
   9018c:   a94153f3    ldp x19, x20, [sp, #16]
   90190:   a9425bf5    ldp x21, x22, [sp, #32]
   90194:   a94363f7    ldp x23, x24, [sp, #48]
   90198:   a8c57bfd    ldp x29, x30, [sp], #80
   9019c:   d65f03c0    ret
   901a0:   b0000101    adrp    x1, b1000 <_etext+0x1f9c>
   901a4:   b0000100    adrp    x0, b1000 <_etext+0x1f9c>
   901a8:   91070021    add x1, x1, #0x1c0
   901ac:   9107e000    add x0, x0, #0x1f8
   901b0:   528008e2    mov w2, #0x47
   901b4:   94003243    bl  9cac0 <assertion_failed>
   901b8:   b0000101    adrp    x1, b1000 <_etext+0x1f9c>
   901bc:   f00000e0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   901c0:   91070021    add x1, x1, #0x1c0
   901c4:   9127a000    add x0, x0, #0x9e8
   901c8:   528009a2    mov w2, #0x4d
   901cc:   9400323d    bl  9cac0 <assertion_failed>
   901d0:   d2800041    mov x1, #0x2
   901d4:   94005da3    bl  a7860 <operator delete(void*, unsigned long)>
   901d8:   92401e80    and x0, x20, #0xff
   901dc:   94005d81    bl  a77e0 <operator new[](unsigned long)>
   901e0:   aa0003e1    mov x1, x0
   901e4:   f9400260    ldr x0, [x19]
   901e8:   f9000661    str x1, [x19, #8]
   901ec:   97ffe0d5    bl  88540 <CUSBDevice::GetHost() const>
   901f0:   aa0003f8    mov x24, x0
   901f4:   f9400260    ldr x0, [x19]
   901f8:   97ffe0c6    bl  88510 <CUSBDevice::GetEndpoint0() const>
   901fc:   f9400664    ldr x4, [x19, #8]
   90200:   aa0003e1    mov x1, x0
   90204:   2a1603e7    mov w7, w22
   90208:   2a1503e3    mov w3, w21
   9020c:   2a1703e2    mov w2, w23
   90210:   aa1803e0    mov x0, x24
   90214:   2a1403e5    mov w5, w20
   90218:   12800fe6    mov w6, #0xffffff80
   9021c:   97ffc3c5    bl  81130 <CUSBHostController::GetDescriptor(CUSBEndpoint*, unsigned char, unsigned char, void*, unsigned int, unsigned char, unsigned short)>
   90220:   6b14001f    cmp w0, w20
   90224:   54fffb01    b.ne    90184 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x134>
   90228:   f9400660    ldr x0, [x19, #8]
   9022c:   39400001    ldrb    w1, [x0]
   90230:   6b14003f    cmp w1, w20
   90234:   54fffa81    b.ne    90184 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x134>
   90238:   39400401    ldrb    w1, [x0, #1]
   9023c:   71000c3f    cmp w1, #0x3
   90240:   54fffa21    b.ne    90184 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x134>
   90244:   370001f4    tbnz    w20, #0, 90280 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0x230>
   90248:   51000a84    sub w4, w20, #0x2
   9024c:   13017c84    asr w4, w4, #1
   90250:   93407c84    sxtw    x4, w4
   90254:   91004081    add x1, x4, #0x10
   90258:   927cec21    and x1, x1, #0xfffffffffffffff0
   9025c:   cb2163ff    sub sp, sp, x1
   90260:   910003f4    mov x20, sp
   90264:   17ffffab    b   90110 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)+0xc0>
   90268:   b0000101    adrp    x1, b1000 <_etext+0x1f9c>
   9026c:   b0000100    adrp    x0, b1000 <_etext+0x1f9c>
   90270:   91070021    add x1, x1, #0x1c0
   90274:   91082000    add x0, x0, #0x208
   90278:   52800ea2    mov w2, #0x75
   9027c:   94003211    bl  9cac0 <assertion_failed>
   90280:   b0000101    adrp    x1, b1000 <_etext+0x1f9c>
   90284:   b0000100    adrp    x0, b1000 <_etext+0x1f9c>
   90288:   91070021    add x1, x1, #0x1c0
   9028c:   9108a000    add x0, x0, #0x228
   90290:   52800ec2    mov w2, #0x76
   90294:   9400320b    bl  9cac0 <assertion_failed>
   90298:   d503201f    nop
   9029c:   d503201f    nop

00000000000902a0 <CUSBString::Get() const>:
   902a0:   f9400800    ldr x0, [x0, #16]
   902a4:   14004ecf    b   a3de0 <CString::operator char const*() const>
   902a8:   d503201f    nop
   902ac:   d503201f    nop

00000000000902b0 <CUSBString::GetLanguageID()>:
   902b0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   902b4:   910003fd    mov x29, sp
   902b8:   a9025bf5    stp x21, x22, [sp, #32]
   902bc:   aa0003f5    mov x21, x0
   902c0:   d2800080    mov x0, #0x4
   902c4:   a90153f3    stp x19, x20, [sp, #16]
   902c8:   94005d46    bl  a77e0 <operator new[](unsigned long)>
   902cc:   f94002a1    ldr x1, [x21]
   902d0:   b4000ba1    cbz x1, 90444 <CUSBString::GetLanguageID()+0x194>
   902d4:   aa0003f3    mov x19, x0
   902d8:   aa0103e0    mov x0, x1
   902dc:   97ffe099    bl  88540 <CUSBDevice::GetHost() const>
   902e0:   aa0003f4    mov x20, x0
   902e4:   f94002a0    ldr x0, [x21]
   902e8:   97ffe08a    bl  88510 <CUSBDevice::GetEndpoint0() const>
   902ec:   aa0003e1    mov x1, x0
   902f0:   aa1303e4    mov x4, x19
   902f4:   aa1403e0    mov x0, x20
   902f8:   52800007    mov w7, #0x0
   902fc:   12800fe6    mov w6, #0xffffff80
   90300:   52800085    mov w5, #0x4
   90304:   52800003    mov w3, #0x0
   90308:   52800062    mov w2, #0x3
   9030c:   97ffc389    bl  81130 <CUSBHostController::GetDescriptor(CUSBEndpoint*, unsigned char, unsigned char, void*, unsigned int, unsigned char, unsigned short)>
   90310:   37f80300    tbnz    w0, #31, 90370 <CUSBString::GetLanguageID()+0xc0>
   90314:   39400274    ldrb    w20, [x19]
   90318:   71000e9f    cmp w20, #0x3
   9031c:   540002a9    b.ls    90370 <CUSBString::GetLanguageID()+0xc0>
   90320:   37000294    tbnz    w20, #0, 90370 <CUSBString::GetLanguageID()+0xc0>
   90324:   39400676    ldrb    w22, [x19, #1]
   90328:   71000edf    cmp w22, #0x3
   9032c:   54000221    b.ne    90370 <CUSBString::GetLanguageID()+0xc0>
   90330:   7100129f    cmp w20, #0x4
   90334:   540002e1    b.ne    90390 <CUSBString::GetLanguageID()+0xe0>
   90338:   51000a82    sub w2, w20, #0x2
   9033c:   d2800001    mov x1, #0x0
   90340:   13017c42    asr w2, w2, #1
   90344:   93407c42    sxtw    x2, w2
   90348:   14000004    b   90358 <CUSBString::GetLanguageID()+0xa8>
   9034c:   91000421    add x1, x1, #0x1
   90350:   eb01005f    cmp x2, x1
   90354:   54000640    b.eq    9041c <CUSBString::GetLanguageID()+0x16c>
   90358:   8b214660    add x0, x19, w1, uxtw #1
   9035c:   39400803    ldrb    w3, [x0, #2]
   90360:   39400c00    ldrb    w0, [x0, #3]
   90364:   2a002060    orr w0, w3, w0, lsl #8
   90368:   7110241f    cmp w0, #0x409
   9036c:   54ffff01    b.ne    9034c <CUSBString::GetLanguageID()+0x9c>
   90370:   aa1303e0    mov x0, x19
   90374:   52808133    mov w19, #0x409
   90378:   94005d2e    bl  a7830 <operator delete[](void*)>
   9037c:   a9425bf5    ldp x21, x22, [sp, #32]
   90380:   2a1303e0    mov w0, w19
   90384:   a94153f3    ldp x19, x20, [sp, #16]
   90388:   a8c37bfd    ldp x29, x30, [sp], #48
   9038c:   d65f03c0    ret
   90390:   aa1303e0    mov x0, x19
   90394:   94005d27    bl  a7830 <operator delete[](void*)>
   90398:   92401e80    and x0, x20, #0xff
   9039c:   94005d11    bl  a77e0 <operator new[](unsigned long)>
   903a0:   aa0003f3    mov x19, x0
   903a4:   f94002a0    ldr x0, [x21]
   903a8:   97ffe066    bl  88540 <CUSBDevice::GetHost() const>
   903ac:   aa0003e1    mov x1, x0
   903b0:   f94002a0    ldr x0, [x21]
   903b4:   aa0103f5    mov x21, x1
   903b8:   97ffe056    bl  88510 <CUSBDevice::GetEndpoint0() const>
   903bc:   aa0003e1    mov x1, x0
   903c0:   2a1603e2    mov w2, w22
   903c4:   aa1503e0    mov x0, x21
   903c8:   2a1403e5    mov w5, w20
   903cc:   aa1303e4    mov x4, x19
   903d0:   52800007    mov w7, #0x0
   903d4:   12800fe6    mov w6, #0xffffff80
   903d8:   52800003    mov w3, #0x0
   903dc:   97ffc355    bl  81130 <CUSBHostController::GetDescriptor(CUSBEndpoint*, unsigned char, unsigned char, void*, unsigned int, unsigned char, unsigned short)>
   903e0:   6b14001f    cmp w0, w20
   903e4:   54fffc61    b.ne    90370 <CUSBString::GetLanguageID()+0xc0>
   903e8:   39400260    ldrb    w0, [x19]
   903ec:   6b14001f    cmp w0, w20
   903f0:   54fffc01    b.ne    90370 <CUSBString::GetLanguageID()+0xc0>
   903f4:   39400660    ldrb    w0, [x19, #1]
   903f8:   71000c1f    cmp w0, #0x3
   903fc:   54fffba1    b.ne    90370 <CUSBString::GetLanguageID()+0xc0>
   90400:   3607f9d4    tbz w20, #0, 90338 <CUSBString::GetLanguageID()+0x88>
   90404:   b0000101    adrp    x1, b1000 <_etext+0x1f9c>
   90408:   b0000100    adrp    x0, b1000 <_etext+0x1f9c>
   9040c:   91070021    add x1, x1, #0x1c0
   90410:   91094000    add x0, x0, #0x250
   90414:   52801922    mov w2, #0xc9
   90418:   940031aa    bl  9cac0 <assertion_failed>
   9041c:   39400a61    ldrb    w1, [x19, #2]
   90420:   aa1303e0    mov x0, x19
   90424:   39400e73    ldrb    w19, [x19, #3]
   90428:   2a132033    orr w19, w1, w19, lsl #8
   9042c:   94005d01    bl  a7830 <operator delete[](void*)>
   90430:   a9425bf5    ldp x21, x22, [sp, #32]
   90434:   2a1303e0    mov w0, w19
   90438:   a94153f3    ldp x19, x20, [sp, #16]
   9043c:   a8c37bfd    ldp x29, x30, [sp], #48
   90440:   d65f03c0    ret
   90444:   b0000101    adrp    x1, b1000 <_etext+0x1f9c>
   90448:   f00000e0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   9044c:   91070021    add x1, x1, #0x1c0
   90450:   9127a000    add x0, x0, #0x9e8
   90454:   52801362    mov w2, #0x9b
   90458:   9400319a    bl  9cac0 <assertion_failed>
   9045c:   00000000    udf #0

0000000000090460 <CUSBSerialCH341Device::~CUSBSerialCH341Device()>:
   90460:   90000121    adrp    x1, b4000 <From+0x140>
   90464:   9139c021    add x1, x1, #0xe70
   90468:   f9000001    str x1, [x0]
   9046c:   140028a5    b   9a700 <CUSBSerialDevice::~CUSBSerialDevice()>

0000000000090470 <CUSBSerialCH341Device::~CUSBSerialCH341Device()>:
   90470:   a9be7bfd    stp x29, x30, [sp, #-32]!
   90474:   90000121    adrp    x1, b4000 <From+0x140>
   90478:   9139c021    add x1, x1, #0xe70
   9047c:   910003fd    mov x29, sp
   90480:   f9000bf3    str x19, [sp, #16]
   90484:   aa0003f3    mov x19, x0
   90488:   f9000001    str x1, [x0]
   9048c:   9400289d    bl  9a700 <CUSBSerialDevice::~CUSBSerialDevice()>
   90490:   aa1303e0    mov x0, x19
   90494:   f9400bf3    ldr x19, [sp, #16]
   90498:   d2800f01    mov x1, #0x78
   9049c:   a8c27bfd    ldp x29, x30, [sp], #32
   904a0:   14005cf0    b   a7860 <operator delete(void*, unsigned long)>
   904a4:   d503201f    nop
   904a8:   d503201f    nop
   904ac:   d503201f    nop

00000000000904b0 <CUSBSerialCH341Device::SetBaudRate(unsigned int)>:
   904b0:   529e0003    mov w3, #0xf000
   904b4:   72ab6b23    movk    w3, #0x5b59, lsl #16
   904b8:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   904bc:   529ffe04    mov w4, #0xfff0
   904c0:   910003fd    mov x29, sp
   904c4:   1ac10863    udiv    w3, w3, w1
   904c8:   52800062    mov w2, #0x3
   904cc:   a90153f3    stp x19, x20, [sp, #16]
   904d0:   aa0003f4    mov x20, x0
   904d4:   a9025bf5    stp x21, x22, [sp, #32]
   904d8:   2a0103f5    mov w21, w1
   904dc:   6b04007f    cmp w3, w4
   904e0:   54000129    b.ls    90504 <CUSBSerialCH341Device::SetBaudRate(unsigned int)+0x54>
   904e4:   d503201f    nop
   904e8:   51000442    sub w2, w2, #0x1
   904ec:   53037c63    lsr w3, w3, #3
   904f0:   72003c42    ands    w2, w2, #0xffff
   904f4:   7a441060    ccmp    w3, w4, #0x0, ne
   904f8:   54ffff88    b.hi    904e8 <CUSBSerialCH341Device::SetBaudRate(unsigned int)+0x38>
   904fc:   6b04007f    cmp w3, w4
   90500:   54000368    b.hi    9056c <CUSBSerialCH341Device::SetBaudRate(unsigned int)+0xbc>
   90504:   4b0303e5    neg w5, w3
   90508:   aa1403e0    mov x0, x20
   9050c:   12181ca5    and w5, w5, #0xff00
   90510:   2a0200a5    orr w5, w5, w2
   90514:   321900b3    orr w19, w5, #0x80
   90518:   97ffe80e    bl  8a550 <CUSBFunction::GetHost() const>
   9051c:   aa0003f6    mov x22, x0
   90520:   b40004a0    cbz x0, 905b4 <CUSBSerialCH341Device::SetBaudRate(unsigned int)+0x104>
   90524:   aa1403e0    mov x0, x20
   90528:   97ffe7fe    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   9052c:   aa0003e1    mov x1, x0
   90530:   2a1303e5    mov w5, w19
   90534:   aa1603e0    mov x0, x22
   90538:   52800007    mov w7, #0x0
   9053c:   d2800006    mov x6, #0x0
   90540:   52826244    mov w4, #0x1312
   90544:   12800ca3    mov w3, #0xffffff9a
   90548:   52800802    mov w2, #0x40
   9054c:   97ffc2b1    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   90550:   37f80200    tbnz    w0, #31, 90590 <CUSBSerialCH341Device::SetBaudRate(unsigned int)+0xe0>
   90554:   52800020    mov w0, #0x1
   90558:   b9002a95    str w21, [x20, #40]
   9055c:   a94153f3    ldp x19, x20, [sp, #16]
   90560:   a9425bf5    ldp x21, x22, [sp, #32]
   90564:   a8c37bfd    ldp x29, x30, [sp], #48
   90568:   d65f03c0    ret
   9056c:   94003c25    bl  9f600 <CLogger::Get()>
   90570:   b0000103    adrp    x3, b1000 <_etext+0x1f9c>
   90574:   90000121    adrp    x1, b4000 <From+0x140>
   90578:   9109e063    add x3, x3, #0x278
   9057c:   913b8021    add x1, x1, #0xee0
   90580:   52800022    mov w2, #0x1
   90584:   94003e07    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   90588:   52800000    mov w0, #0x0
   9058c:   17fffff4    b   9055c <CUSBSerialCH341Device::SetBaudRate(unsigned int)+0xac>
   90590:   94003c1c    bl  9f600 <CLogger::Get()>
   90594:   b0000103    adrp    x3, b1000 <_etext+0x1f9c>
   90598:   90000121    adrp    x1, b4000 <From+0x140>
   9059c:   910a8063    add x3, x3, #0x2a0
   905a0:   913b8021    add x1, x1, #0xee0
   905a4:   52800022    mov w2, #0x1
   905a8:   94003dfe    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   905ac:   52800000    mov w0, #0x0
   905b0:   17ffffeb    b   9055c <CUSBSerialCH341Device::SetBaudRate(unsigned int)+0xac>
   905b4:   b0000101    adrp    x1, b1000 <_etext+0x1f9c>
   905b8:   f00000e0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   905bc:   910a2021    add x1, x1, #0x288
   905c0:   9113e000    add x0, x0, #0x4f8
   905c4:   528010e2    mov w2, #0x87
   905c8:   9400313e    bl  9cac0 <assertion_failed>
   905cc:   d503201f    nop

00000000000905d0 <CUSBSerialCH341Device::CUSBSerialCH341Device(CUSBFunction*)>:
   905d0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   905d4:   d2800002    mov x2, #0x0
   905d8:   910003fd    mov x29, sp
   905dc:   f9000bf3    str x19, [sp, #16]
   905e0:   aa0003f3    mov x19, x0
   905e4:   9400295b    bl  9ab50 <CUSBSerialDevice::CUSBSerialDevice(CUSBFunction*, unsigned long)>
   905e8:   90000120    adrp    x0, b4000 <From+0x140>
   905ec:   9139c000    add x0, x0, #0xe70
   905f0:   f9000260    str x0, [x19]
   905f4:   f9400bf3    ldr x19, [sp, #16]
   905f8:   a8c27bfd    ldp x29, x30, [sp], #32
   905fc:   d65f03c0    ret

0000000000090600 <CUSBSerialCH341Device::GetDeviceIDTable()>:
   90600:   90000120    adrp    x0, b4000 <From+0x140>
   90604:   913b8000    add x0, x0, #0xee0
   90608:   91002000    add x0, x0, #0x8
   9060c:   d65f03c0    ret

0000000000090610 <CUSBSerialCH341Device::Configure()>:
   90610:   a9b67bfd    stp x29, x30, [sp, #-160]!
   90614:   910003fd    mov x29, sp
   90618:   a90153f3    stp x19, x20, [sp, #16]
   9061c:   aa0003f4    mov x20, x0
   90620:   940029b4    bl  9acf0 <CUSBSerialDevice::Configure()>
   90624:   36000980    tbz w0, #0, 90754 <CUSBSerialCH341Device::Configure()+0x144>
   90628:   aa1403e0    mov x0, x20
   9062c:   a9025bf5    stp x21, x22, [sp, #32]
   90630:   97ffe7c8    bl  8a550 <CUSBFunction::GetHost() const>
   90634:   aa0003f5    mov x21, x0
   90638:   b4000a20    cbz x0, 9077c <CUSBSerialCH341Device::Configure()+0x16c>
   9063c:   9101bff3    add x19, sp, #0x6f
   90640:   aa1403e0    mov x0, x20
   90644:   927ae673    and x19, x19, #0xffffffffffffffc0
   90648:   a9007e7f    stp xzr, xzr, [x19]
   9064c:   a9017e7f    stp xzr, xzr, [x19, #16]
   90650:   a9027e7f    stp xzr, xzr, [x19, #32]
   90654:   a9037e7f    stp xzr, xzr, [x19, #48]
   90658:   97ffe7b2    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   9065c:   aa0003e1    mov x1, x0
   90660:   aa1303e6    mov x6, x19
   90664:   aa1503e0    mov x0, x21
   90668:   52800047    mov w7, #0x2
   9066c:   52800005    mov w5, #0x0
   90670:   52800004    mov w4, #0x0
   90674:   52800be3    mov w3, #0x5f
   90678:   128007e2    mov w2, #0xffffffc0
   9067c:   97ffc265    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   90680:   7100081f    cmp w0, #0x2
   90684:   54000501    b.ne    90724 <CUSBSerialCH341Device::Configure()+0x114>
   90688:   94003bde    bl  9f600 <CLogger::Get()>
   9068c:   39400264    ldrb    w4, [x19]
   90690:   90000136    adrp    x22, b4000 <From+0x140>
   90694:   913b82d6    add x22, x22, #0xee0
   90698:   b0000103    adrp    x3, b1000 <_etext+0x1f9c>
   9069c:   aa1603e1    mov x1, x22
   906a0:   910be063    add x3, x3, #0x2f8
   906a4:   52800062    mov w2, #0x3
   906a8:   94003dbe    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   906ac:   aa1403e0    mov x0, x20
   906b0:   97ffe79c    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   906b4:   aa0003e1    mov x1, x0
   906b8:   52800007    mov w7, #0x0
   906bc:   aa1503e0    mov x0, x21
   906c0:   d2800006    mov x6, #0x0
   906c4:   52800005    mov w5, #0x0
   906c8:   52800004    mov w4, #0x0
   906cc:   12800bc3    mov w3, #0xffffffa1
   906d0:   52800802    mov w2, #0x40
   906d4:   97ffc24f    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   906d8:   37f805e0    tbnz    w0, #31, 90794 <CUSBSerialCH341Device::Configure()+0x184>
   906dc:   f9400282    ldr x2, [x20]
   906e0:   5284b001    mov w1, #0x2580
   906e4:   aa1403e0    mov x0, x20
   906e8:   f9403042    ldr x2, [x2, #96]
   906ec:   d63f0040    blr x2
   906f0:   36000420    tbz w0, #0, 90774 <CUSBSerialCH341Device::Configure()+0x164>
   906f4:   f9400284    ldr x4, [x20]
   906f8:   aa1403e0    mov x0, x20
   906fc:   52800023    mov w3, #0x1
   90700:   52800002    mov w2, #0x0
   90704:   52800101    mov w1, #0x8
   90708:   f9403484    ldr x4, [x4, #104]
   9070c:   d63f0080    blr x4
   90710:   a94153f3    ldp x19, x20, [sp, #16]
   90714:   12001c00    and w0, w0, #0xff
   90718:   a9425bf5    ldp x21, x22, [sp, #32]
   9071c:   a8ca7bfd    ldp x29, x30, [sp], #160
   90720:   d65f03c0    ret
   90724:   94003bb7    bl  9f600 <CLogger::Get()>
   90728:   b0000103    adrp    x3, b1000 <_etext+0x1f9c>
   9072c:   90000121    adrp    x1, b4000 <From+0x140>
   90730:   910b6063    add x3, x3, #0x2d8
   90734:   913b8021    add x1, x1, #0xee0
   90738:   52800022    mov w2, #0x1
   9073c:   94003d99    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   90740:   a9425bf5    ldp x21, x22, [sp, #32]
   90744:   52800000    mov w0, #0x0
   90748:   a94153f3    ldp x19, x20, [sp, #16]
   9074c:   a8ca7bfd    ldp x29, x30, [sp], #160
   90750:   d65f03c0    ret
   90754:   94003bab    bl  9f600 <CLogger::Get()>
   90758:   b0000103    adrp    x3, b1000 <_etext+0x1f9c>
   9075c:   90000121    adrp    x1, b4000 <From+0x140>
   90760:   910ae063    add x3, x3, #0x2b8
   90764:   913b8021    add x1, x1, #0xee0
   90768:   52800022    mov w2, #0x1
   9076c:   94003d8d    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   90770:   17fffff5    b   90744 <CUSBSerialCH341Device::Configure()+0x134>
   90774:   a9425bf5    ldp x21, x22, [sp, #32]
   90778:   17fffff3    b   90744 <CUSBSerialCH341Device::Configure()+0x134>
   9077c:   b0000101    adrp    x1, b1000 <_etext+0x1f9c>
   90780:   f00000e0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   90784:   910a2021    add x1, x1, #0x288
   90788:   9113e000    add x0, x0, #0x4f8
   9078c:   52800882    mov w2, #0x44
   90790:   940030cc    bl  9cac0 <assertion_failed>
   90794:   94003b9b    bl  9f600 <CLogger::Get()>
   90798:   aa1603e1    mov x1, x22
   9079c:   b0000103    adrp    x3, b1000 <_etext+0x1f9c>
   907a0:   910c4063    add x3, x3, #0x310
   907a4:   52800022    mov w2, #0x1
   907a8:   94003d7e    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   907ac:   a9425bf5    ldp x21, x22, [sp, #32]
   907b0:   17ffffe5    b   90744 <CUSBSerialCH341Device::Configure()+0x134>
   907b4:   d503201f    nop
   907b8:   d503201f    nop
   907bc:   d503201f    nop

00000000000907c0 <CUSBSerialCH341Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)>:
   907c0:   a9ba7bfd    stp x29, x30, [sp, #-96]!
   907c4:   910003fd    mov x29, sp
   907c8:   a90153f3    stp x19, x20, [sp, #16]
   907cc:   2a0103f3    mov w19, w1
   907d0:   a9025bf5    stp x21, x22, [sp, #32]
   907d4:   2a0203f6    mov w22, w2
   907d8:   a90363f7    stp x23, x24, [sp, #48]
   907dc:   2a0303f8    mov w24, w3
   907e0:   aa0003f7    mov x23, x0
   907e4:   97ffe75b    bl  8a550 <CUSBFunction::GetHost() const>
   907e8:   b4000f00    cbz x0, 909c8 <CUSBSerialCH341Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x208>
   907ec:   aa0003f4    mov x20, x0
   907f0:   910103e0    add x0, sp, #0x40
   907f4:   94004d37    bl  a3cd0 <CString::CString()>
   907f8:   51001660    sub w0, w19, #0x5
   907fc:   71000c1f    cmp w0, #0x3
   90800:   540004c8    b.hi    90898 <CUSBSerialCH341Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0xd8>
   90804:   b0000101    adrp    x1, b1000 <_etext+0x1f9c>
   90808:   2a1303e2    mov w2, w19
   9080c:   910ca021    add x1, x1, #0x328
   90810:   910103e0    add x0, sp, #0x40
   90814:   9400533b    bl  a5500 <CString::Format(char const*, ...)>
   90818:   51011675    sub w21, w19, #0x45
   9081c:   710006df    cmp w22, #0x1
   90820:   12001eb5    and w21, w21, #0xff
   90824:   54000760    b.eq    90910 <CUSBSerialCH341Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x150>
   90828:   71000adf    cmp w22, #0x2
   9082c:   540005a0    b.eq    908e0 <CUSBSerialCH341Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x120>
   90830:   35000476    cbnz    w22, 908bc <CUSBSerialCH341Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0xfc>
   90834:   b0000101    adrp    x1, b1000 <_etext+0x1f9c>
   90838:   910d2021    add x1, x1, #0x348
   9083c:   910103e0    add x0, sp, #0x40
   90840:   94004dbc    bl  a3f30 <CString::Append(char const*)>
   90844:   7100071f    cmp w24, #0x1
   90848:   540005a0    b.eq    908fc <CUSBSerialCH341Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x13c>
   9084c:   71000b1f    cmp w24, #0x2
   90850:   540006c0    b.eq    90928 <CUSBSerialCH341Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x168>
   90854:   94003b6b    bl  9f600 <CLogger::Get()>
   90858:   b0000103    adrp    x3, b1000 <_etext+0x1f9c>
   9085c:   90000121    adrp    x1, b4000 <From+0x140>
   90860:   2a1803e4    mov w4, w24
   90864:   910de063    add x3, x3, #0x378
   90868:   913b8021    add x1, x1, #0xee0
   9086c:   52800022    mov w2, #0x1
   90870:   94003d4c    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   90874:   910103e0    add x0, sp, #0x40
   90878:   52800014    mov w20, #0x0
   9087c:   94004cd9    bl  a3be0 <CString::~CString()>
   90880:   a9425bf5    ldp x21, x22, [sp, #32]
   90884:   2a1403e0    mov w0, w20
   90888:   a94153f3    ldp x19, x20, [sp, #16]
   9088c:   a94363f7    ldp x23, x24, [sp, #48]
   90890:   a8c67bfd    ldp x29, x30, [sp], #96
   90894:   d65f03c0    ret
   90898:   94003b5a    bl  9f600 <CLogger::Get()>
   9089c:   b0000103    adrp    x3, b1000 <_etext+0x1f9c>
   908a0:   90000121    adrp    x1, b4000 <From+0x140>
   908a4:   2a1303e4    mov w4, w19
   908a8:   910cc063    add x3, x3, #0x330
   908ac:   913b8021    add x1, x1, #0xee0
   908b0:   52800022    mov w2, #0x1
   908b4:   94003d3b    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   908b8:   17ffffef    b   90874 <CUSBSerialCH341Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0xb4>
   908bc:   94003b51    bl  9f600 <CLogger::Get()>
   908c0:   b0000103    adrp    x3, b1000 <_etext+0x1f9c>
   908c4:   90000121    adrp    x1, b4000 <From+0x140>
   908c8:   2a1603e4    mov w4, w22
   908cc:   910d8063    add x3, x3, #0x360
   908d0:   913b8021    add x1, x1, #0xee0
   908d4:   52800022    mov w2, #0x1
   908d8:   94003d32    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   908dc:   17ffffe6    b   90874 <CUSBSerialCH341Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0xb4>
   908e0:   b0000101    adrp    x1, b1000 <_etext+0x1f9c>
   908e4:   910d6021    add x1, x1, #0x358
   908e8:   910103e0    add x0, sp, #0x40
   908ec:   321d06b5    orr w21, w21, #0x18
   908f0:   94004d90    bl  a3f30 <CString::Append(char const*)>
   908f4:   7100071f    cmp w24, #0x1
   908f8:   54fffaa1    b.ne    9084c <CUSBSerialCH341Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x8c>
   908fc:   b0000101    adrp    x1, b1000 <_etext+0x1f9c>
   90900:   91374021    add x1, x1, #0xdd0
   90904:   910103e0    add x0, sp, #0x40
   90908:   94004d8a    bl  a3f30 <CString::Append(char const*)>
   9090c:   1400000c    b   9093c <CUSBSerialCH341Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x17c>
   90910:   b0000101    adrp    x1, b1000 <_etext+0x1f9c>
   90914:   910d4021    add x1, x1, #0x350
   90918:   910103e0    add x0, sp, #0x40
   9091c:   321d02b5    orr w21, w21, #0x8
   90920:   94004d84    bl  a3f30 <CString::Append(char const*)>
   90924:   17ffffc8    b   90844 <CUSBSerialCH341Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x84>
   90928:   b0000101    adrp    x1, b1000 <_etext+0x1f9c>
   9092c:   91088021    add x1, x1, #0x220
   90930:   910103e0    add x0, sp, #0x40
   90934:   321e02b5    orr w21, w21, #0x4
   90938:   94004d7e    bl  a3f30 <CString::Append(char const*)>
   9093c:   aa1703e0    mov x0, x23
   90940:   97ffe6f8    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   90944:   aa0003e1    mov x1, x0
   90948:   2a1503e5    mov w5, w21
   9094c:   aa1403e0    mov x0, x20
   90950:   52800007    mov w7, #0x0
   90954:   d2800006    mov x6, #0x0
   90958:   5284a304    mov w4, #0x2518
   9095c:   12800ca3    mov w3, #0xffffff9a
   90960:   52800802    mov w2, #0x40
   90964:   97ffc1ab    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   90968:   37f803c0    tbnz    w0, #31, 909e0 <CUSBSerialCH341Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x220>
   9096c:   aa1703e0    mov x0, x23
   90970:   97ffe6ec    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   90974:   aa0003e1    mov x1, x0
   90978:   52800007    mov w7, #0x0
   9097c:   aa1403e0    mov x0, x20
   90980:   d2800006    mov x6, #0x0
   90984:   52800005    mov w5, #0x0
   90988:   12800004    mov w4, #0xffffffff
   9098c:   12800b63    mov w3, #0xffffffa4
   90990:   52800802    mov w2, #0x40
   90994:   97ffc19f    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   90998:   37f80340    tbnz    w0, #31, 90a00 <CUSBSerialCH341Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x240>
   9099c:   910103e0    add x0, sp, #0x40
   909a0:   2905daf3    stp w19, w22, [x23, #44]
   909a4:   52800034    mov w20, #0x1
   909a8:   b90036f8    str w24, [x23, #52]
   909ac:   94004c8d    bl  a3be0 <CString::~CString()>
   909b0:   a9425bf5    ldp x21, x22, [sp, #32]
   909b4:   2a1403e0    mov w0, w20
   909b8:   a94153f3    ldp x19, x20, [sp, #16]
   909bc:   a94363f7    ldp x23, x24, [sp, #48]
   909c0:   a8c67bfd    ldp x29, x30, [sp], #96
   909c4:   d65f03c0    ret
   909c8:   b0000101    adrp    x1, b1000 <_etext+0x1f9c>
   909cc:   f00000e0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   909d0:   910a2021    add x1, x1, #0x288
   909d4:   9113e000    add x0, x0, #0x4f8
   909d8:   52801402    mov w2, #0xa0
   909dc:   94003039    bl  9cac0 <assertion_failed>
   909e0:   94003b08    bl  9f600 <CLogger::Get()>
   909e4:   b0000103    adrp    x3, b1000 <_etext+0x1f9c>
   909e8:   90000121    adrp    x1, b4000 <From+0x140>
   909ec:   910e4063    add x3, x3, #0x390
   909f0:   913b8021    add x1, x1, #0xee0
   909f4:   52800022    mov w2, #0x1
   909f8:   94003cea    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   909fc:   17ffff9e    b   90874 <CUSBSerialCH341Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0xb4>
   90a00:   94003b00    bl  9f600 <CLogger::Get()>
   90a04:   b0000103    adrp    x3, b1000 <_etext+0x1f9c>
   90a08:   90000121    adrp    x1, b4000 <From+0x140>
   90a0c:   910ec063    add x3, x3, #0x3b0
   90a10:   913b8021    add x1, x1, #0xee0
   90a14:   52800022    mov w2, #0x1
   90a18:   94003ce2    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   90a1c:   17ffff96    b   90874 <CUSBSerialCH341Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0xb4>

0000000000090a20 <CUSBSerialCP210xDevice::~CUSBSerialCP210xDevice()>:
   90a20:   90000121    adrp    x1, b4000 <From+0x140>
   90a24:   913c4021    add x1, x1, #0xf10
   90a28:   f9000001    str x1, [x0]
   90a2c:   14002735    b   9a700 <CUSBSerialDevice::~CUSBSerialDevice()>

0000000000090a30 <CUSBSerialCP210xDevice::~CUSBSerialCP210xDevice()>:
   90a30:   a9be7bfd    stp x29, x30, [sp, #-32]!
   90a34:   90000121    adrp    x1, b4000 <From+0x140>
   90a38:   913c4021    add x1, x1, #0xf10
   90a3c:   910003fd    mov x29, sp
   90a40:   f9000bf3    str x19, [sp, #16]
   90a44:   aa0003f3    mov x19, x0
   90a48:   f9000001    str x1, [x0]
   90a4c:   9400272d    bl  9a700 <CUSBSerialDevice::~CUSBSerialDevice()>
   90a50:   aa1303e0    mov x0, x19
   90a54:   f9400bf3    ldr x19, [sp, #16]
   90a58:   d2801001    mov x1, #0x80
   90a5c:   a8c27bfd    ldp x29, x30, [sp], #32
   90a60:   14005b80    b   a7860 <operator delete(void*, unsigned long)>
   90a64:   d503201f    nop
   90a68:   d503201f    nop
   90a6c:   d503201f    nop

0000000000090a70 <CUSBSerialCP210xDevice::SetBaudRate(unsigned int)>:
   90a70:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   90a74:   910003fd    mov x29, sp
   90a78:   f9403c02    ldr x2, [x0, #120]
   90a7c:   b9002fe1    str w1, [sp, #44]
   90a80:   b4000702    cbz x2, 90b60 <CUSBSerialCP210xDevice::SetBaudRate(unsigned int)+0xf0>
   90a84:   b9400442    ldr w2, [x2, #4]
   90a88:   6b01005f    cmp w2, w1
   90a8c:   54000403    b.cc    90b0c <CUSBSerialCP210xDevice::SetBaudRate(unsigned int)+0x9c>
   90a90:   a90153f3    stp x19, x20, [sp, #16]
   90a94:   aa0003f3    mov x19, x0
   90a98:   97ffe6ae    bl  8a550 <CUSBFunction::GetHost() const>
   90a9c:   aa0003f4    mov x20, x0
   90aa0:   b40006e0    cbz x0, 90b7c <CUSBSerialCP210xDevice::SetBaudRate(unsigned int)+0x10c>
   90aa4:   aa1303e0    mov x0, x19
   90aa8:   97ffe69e    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   90aac:   aa0003e1    mov x1, x0
   90ab0:   9100b3e6    add x6, sp, #0x2c
   90ab4:   aa1403e0    mov x0, x20
   90ab8:   52800087    mov w7, #0x4
   90abc:   52800005    mov w5, #0x0
   90ac0:   52800004    mov w4, #0x0
   90ac4:   528003c3    mov w3, #0x1e
   90ac8:   52800822    mov w2, #0x41
   90acc:   97ffc151    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   90ad0:   37f80340    tbnz    w0, #31, 90b38 <CUSBSerialCP210xDevice::SetBaudRate(unsigned int)+0xc8>
   90ad4:   b9402fe0    ldr w0, [sp, #44]
   90ad8:   b9002a60    str w0, [x19, #40]
   90adc:   94003ac9    bl  9f600 <CLogger::Get()>
   90ae0:   b0000103    adrp    x3, b1000 <_etext+0x1f9c>
   90ae4:   90000121    adrp    x1, b4000 <From+0x140>
   90ae8:   b9402a64    ldr w4, [x19, #40]
   90aec:   9110e063    add x3, x3, #0x438
   90af0:   913e0021    add x1, x1, #0xf80
   90af4:   52800082    mov w2, #0x4
   90af8:   94003caa    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   90afc:   a94153f3    ldp x19, x20, [sp, #16]
   90b00:   52800020    mov w0, #0x1
   90b04:   a8c37bfd    ldp x29, x30, [sp], #48
   90b08:   d65f03c0    ret
   90b0c:   94003abd    bl  9f600 <CLogger::Get()>
   90b10:   b0000103    adrp    x3, b1000 <_etext+0x1f9c>
   90b14:   90000121    adrp    x1, b4000 <From+0x140>
   90b18:   b9402fe4    ldr w4, [sp, #44]
   90b1c:   91100063    add x3, x3, #0x400
   90b20:   913e0021    add x1, x1, #0xf80
   90b24:   52800022    mov w2, #0x1
   90b28:   94003c9e    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   90b2c:   52800000    mov w0, #0x0
   90b30:   a8c37bfd    ldp x29, x30, [sp], #48
   90b34:   d65f03c0    ret
   90b38:   94003ab2    bl  9f600 <CLogger::Get()>
   90b3c:   b0000103    adrp    x3, b1000 <_etext+0x1f9c>
   90b40:   90000121    adrp    x1, b4000 <From+0x140>
   90b44:   91108063    add x3, x3, #0x420
   90b48:   913e0021    add x1, x1, #0xf80
   90b4c:   52800022    mov w2, #0x1
   90b50:   94003c94    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   90b54:   a94153f3    ldp x19, x20, [sp, #16]
   90b58:   52800000    mov w0, #0x0
   90b5c:   17fffff5    b   90b30 <CUSBSerialCP210xDevice::SetBaudRate(unsigned int)+0xc0>
   90b60:   b0000101    adrp    x1, b1000 <_etext+0x1f9c>
   90b64:   b0000100    adrp    x0, b1000 <_etext+0x1f9c>
   90b68:   a90153f3    stp x19, x20, [sp, #16]
   90b6c:   910f4021    add x1, x1, #0x3d0
   90b70:   910fa000    add x0, x0, #0x3e8
   90b74:   52801382    mov w2, #0x9c
   90b78:   94002fd2    bl  9cac0 <assertion_failed>
   90b7c:   b0000101    adrp    x1, b1000 <_etext+0x1f9c>
   90b80:   f00000e0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   90b84:   910f4021    add x1, x1, #0x3d0
   90b88:   9113e000    add x0, x0, #0x4f8
   90b8c:   528014c2    mov w2, #0xa6
   90b90:   94002fcc    bl  9cac0 <assertion_failed>
   90b94:   d503201f    nop
   90b98:   d503201f    nop
   90b9c:   d503201f    nop

0000000000090ba0 <CUSBSerialCP210xDevice::CUSBSerialCP210xDevice(CUSBFunction*)>:
   90ba0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   90ba4:   d2800002    mov x2, #0x0
   90ba8:   910003fd    mov x29, sp
   90bac:   f9000bf3    str x19, [sp, #16]
   90bb0:   aa0003f3    mov x19, x0
   90bb4:   940027e7    bl  9ab50 <CUSBSerialDevice::CUSBSerialDevice(CUSBFunction*, unsigned long)>
   90bb8:   90000120    adrp    x0, b4000 <From+0x140>
   90bbc:   913c4000    add x0, x0, #0xf10
   90bc0:   f9003e7f    str xzr, [x19, #120]
   90bc4:   f9000260    str x0, [x19]
   90bc8:   f9400bf3    ldr x19, [sp, #16]
   90bcc:   a8c27bfd    ldp x29, x30, [sp], #32
   90bd0:   d65f03c0    ret
   90bd4:   d503201f    nop
   90bd8:   d503201f    nop
   90bdc:   d503201f    nop

0000000000090be0 <CUSBSerialCP210xDevice::GetDeviceIDTable()>:
   90be0:   90000120    adrp    x0, b4000 <From+0x140>
   90be4:   913e0000    add x0, x0, #0xf80
   90be8:   91002000    add x0, x0, #0x8
   90bec:   d65f03c0    ret

0000000000090bf0 <CUSBSerialCP210xDevice::Configure()>:
   90bf0:   a9b67bfd    stp x29, x30, [sp, #-160]!
   90bf4:   910003fd    mov x29, sp
   90bf8:   a90153f3    stp x19, x20, [sp, #16]
   90bfc:   aa0003f3    mov x19, x0
   90c00:   9400283c    bl  9acf0 <CUSBSerialDevice::Configure()>
   90c04:   36000980    tbz w0, #0, 90d34 <CUSBSerialCP210xDevice::Configure()+0x144>
   90c08:   aa1303e0    mov x0, x19
   90c0c:   a9025bf5    stp x21, x22, [sp, #32]
   90c10:   97ffe650    bl  8a550 <CUSBFunction::GetHost() const>
   90c14:   aa0003f5    mov x21, x0
   90c18:   b4000cc0    cbz x0, 90db0 <CUSBSerialCP210xDevice::Configure()+0x1c0>
   90c1c:   9101bff4    add x20, sp, #0x6f
   90c20:   aa1303e0    mov x0, x19
   90c24:   927ae694    and x20, x20, #0xffffffffffffffc0
   90c28:   a9007e9f    stp xzr, xzr, [x20]
   90c2c:   a9017e9f    stp xzr, xzr, [x20, #16]
   90c30:   a9027e9f    stp xzr, xzr, [x20, #32]
   90c34:   a9037e9f    stp xzr, xzr, [x20, #48]
   90c38:   97ffe63a    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   90c3c:   aa0003e1    mov x1, x0
   90c40:   aa1403e6    mov x6, x20
   90c44:   aa1503e0    mov x0, x21
   90c48:   52800027    mov w7, #0x1
   90c4c:   52800005    mov w5, #0x0
   90c50:   5286e164    mov w4, #0x370b
   90c54:   12800003    mov w3, #0xffffffff
   90c58:   128007e2    mov w2, #0xffffffc0
   90c5c:   97ffc0ed    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   90c60:   7100041f    cmp w0, #0x1
   90c64:   540007e1    b.ne    90d60 <CUSBSerialCP210xDevice::Configure()+0x170>
   90c68:   90000136    adrp    x22, b4000 <From+0x140>
   90c6c:   913e02d6    add x22, x22, #0xf80
   90c70:   39400283    ldrb    w3, [x20]
   90c74:   910042c1    add x1, x22, #0x10
   90c78:   f9003e7f    str xzr, [x19, #120]
   90c7c:   14000004    b   90c8c <CUSBSerialCP210xDevice::Configure()+0x9c>
   90c80:   b9401c22    ldr w2, [x1, #28]
   90c84:   91006021    add x1, x1, #0x18
   90c88:   34000822    cbz w2, 90d8c <CUSBSerialCP210xDevice::Configure()+0x19c>
   90c8c:   39400022    ldrb    w2, [x1]
   90c90:   6b03005f    cmp w2, w3
   90c94:   54ffff61    b.ne    90c80 <CUSBSerialCP210xDevice::Configure()+0x90>
   90c98:   f9003e61    str x1, [x19, #120]
   90c9c:   94003a59    bl  9f600 <CLogger::Get()>
   90ca0:   f9403e64    ldr x4, [x19, #120]
   90ca4:   b0000103    adrp    x3, b1000 <_etext+0x1f9c>
   90ca8:   aa1603e1    mov x1, x22
   90cac:   9111a063    add x3, x3, #0x468
   90cb0:   52800062    mov w2, #0x3
   90cb4:   f9400884    ldr x4, [x4, #16]
   90cb8:   94003c3a    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   90cbc:   aa1303e0    mov x0, x19
   90cc0:   97ffe618    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   90cc4:   aa0003e1    mov x1, x0
   90cc8:   52800007    mov w7, #0x0
   90ccc:   aa1503e0    mov x0, x21
   90cd0:   d2800006    mov x6, #0x0
   90cd4:   52800005    mov w5, #0x0
   90cd8:   52800024    mov w4, #0x1
   90cdc:   52800003    mov w3, #0x0
   90ce0:   52800822    mov w2, #0x41
   90ce4:   97ffc0cb    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   90ce8:   37f80700    tbnz    w0, #31, 90dc8 <CUSBSerialCP210xDevice::Configure()+0x1d8>
   90cec:   f9400262    ldr x2, [x19]
   90cf0:   5284b001    mov w1, #0x2580
   90cf4:   aa1303e0    mov x0, x19
   90cf8:   f9403042    ldr x2, [x2, #96]
   90cfc:   d63f0040    blr x2
   90d00:   36000420    tbz w0, #0, 90d84 <CUSBSerialCP210xDevice::Configure()+0x194>
   90d04:   f9400264    ldr x4, [x19]
   90d08:   aa1303e0    mov x0, x19
   90d0c:   52800023    mov w3, #0x1
   90d10:   52800002    mov w2, #0x0
   90d14:   52800101    mov w1, #0x8
   90d18:   f9403484    ldr x4, [x4, #104]
   90d1c:   d63f0080    blr x4
   90d20:   a94153f3    ldp x19, x20, [sp, #16]
   90d24:   12001c00    and w0, w0, #0xff
   90d28:   a9425bf5    ldp x21, x22, [sp, #32]
   90d2c:   a8ca7bfd    ldp x29, x30, [sp], #160
   90d30:   d65f03c0    ret
   90d34:   94003a33    bl  9f600 <CLogger::Get()>
   90d38:   b0000103    adrp    x3, b1000 <_etext+0x1f9c>
   90d3c:   90000121    adrp    x1, b4000 <From+0x140>
   90d40:   910ae063    add x3, x3, #0x2b8
   90d44:   913e0021    add x1, x1, #0xf80
   90d48:   52800022    mov w2, #0x1
   90d4c:   94003c15    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   90d50:   a94153f3    ldp x19, x20, [sp, #16]
   90d54:   52800000    mov w0, #0x0
   90d58:   a8ca7bfd    ldp x29, x30, [sp], #160
   90d5c:   d65f03c0    ret
   90d60:   94003a28    bl  9f600 <CLogger::Get()>
   90d64:   b0000103    adrp    x3, b1000 <_etext+0x1f9c>
   90d68:   90000121    adrp    x1, b4000 <From+0x140>
   90d6c:   91112063    add x3, x3, #0x448
   90d70:   913e0021    add x1, x1, #0xf80
   90d74:   52800022    mov w2, #0x1
   90d78:   94003c0a    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   90d7c:   a9425bf5    ldp x21, x22, [sp, #32]
   90d80:   17fffff4    b   90d50 <CUSBSerialCP210xDevice::Configure()+0x160>
   90d84:   a9425bf5    ldp x21, x22, [sp, #32]
   90d88:   17fffff2    b   90d50 <CUSBSerialCP210xDevice::Configure()+0x160>
   90d8c:   94003a1d    bl  9f600 <CLogger::Get()>
   90d90:   b0000103    adrp    x3, b1000 <_etext+0x1f9c>
   90d94:   aa1603e1    mov x1, x22
   90d98:   39400284    ldrb    w4, [x20]
   90d9c:   9111e063    add x3, x3, #0x478
   90da0:   52800022    mov w2, #0x1
   90da4:   94003bff    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   90da8:   a9425bf5    ldp x21, x22, [sp, #32]
   90dac:   17ffffe9    b   90d50 <CUSBSerialCP210xDevice::Configure()+0x160>
   90db0:   b0000101    adrp    x1, b1000 <_etext+0x1f9c>
   90db4:   f00000e0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   90db8:   910f4021    add x1, x1, #0x3d0
   90dbc:   9113e000    add x0, x0, #0x4f8
   90dc0:   52800ba2    mov w2, #0x5d
   90dc4:   94002f3f    bl  9cac0 <assertion_failed>
   90dc8:   94003a0e    bl  9f600 <CLogger::Get()>
   90dcc:   aa1603e1    mov x1, x22
   90dd0:   b0000103    adrp    x3, b1000 <_etext+0x1f9c>
   90dd4:   91126063    add x3, x3, #0x498
   90dd8:   52800022    mov w2, #0x1
   90ddc:   94003bf1    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   90de0:   a9425bf5    ldp x21, x22, [sp, #32]
   90de4:   17ffffdb    b   90d50 <CUSBSerialCP210xDevice::Configure()+0x160>
   90de8:   d503201f    nop
   90dec:   d503201f    nop

0000000000090df0 <CUSBSerialCP210xDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)>:
   90df0:   a9ba7bfd    stp x29, x30, [sp, #-96]!
   90df4:   910003fd    mov x29, sp
   90df8:   f9403c05    ldr x5, [x0, #120]
   90dfc:   a90153f3    stp x19, x20, [sp, #16]
   90e00:   b4000c65    cbz x5, 90f8c <CUSBSerialCP210xDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x19c>
   90e04:   2a0103f3    mov w19, w1
   90e08:   b94008a1    ldr w1, [x5, #8]
   90e0c:   a90363f7    stp x23, x24, [sp, #48]
   90e10:   6b13003f    cmp w1, w19
   90e14:   54000aac    b.gt    90f68 <CUSBSerialCP210xDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x178>
   90e18:   b9400ca1    ldr w1, [x5, #12]
   90e1c:   2a0303f4    mov w20, w3
   90e20:   6b03003f    cmp w1, w3
   90e24:   5400050b    b.lt    90ec4 <CUSBSerialCP210xDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0xd4>
   90e28:   a9025bf5    stp x21, x22, [sp, #32]
   90e2c:   aa0003f6    mov x22, x0
   90e30:   2a0203f5    mov w21, w2
   90e34:   97ffe5c7    bl  8a550 <CUSBFunction::GetHost() const>
   90e38:   aa0003f7    mov x23, x0
   90e3c:   b4001020    cbz x0, 91040 <CUSBSerialCP210xDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x250>
   90e40:   910103e0    add x0, sp, #0x40
   90e44:   94004ba3    bl  a3cd0 <CString::CString()>
   90e48:   51001660    sub w0, w19, #0x5
   90e4c:   71000c1f    cmp w0, #0x3
   90e50:   54000568    b.hi    90efc <CUSBSerialCP210xDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x10c>
   90e54:   b0000101    adrp    x1, b1000 <_etext+0x1f9c>
   90e58:   2a1303e2    mov w2, w19
   90e5c:   910ca021    add x1, x1, #0x328
   90e60:   910103e0    add x0, sp, #0x40
   90e64:   940051a7    bl  a5500 <CString::Format(char const*, ...)>
   90e68:   710006bf    cmp w21, #0x1
   90e6c:   53181e78    ubfiz   w24, w19, #8, #8
   90e70:   54000580    b.eq    90f20 <CUSBSerialCP210xDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x130>
   90e74:   71000abf    cmp w21, #0x2
   90e78:   54000a40    b.eq    90fc0 <CUSBSerialCP210xDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x1d0>
   90e7c:   34000995    cbz w21, 90fac <CUSBSerialCP210xDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x1bc>
   90e80:   940039e0    bl  9f600 <CLogger::Get()>
   90e84:   b0000103    adrp    x3, b1000 <_etext+0x1f9c>
   90e88:   90000121    adrp    x1, b4000 <From+0x140>
   90e8c:   2a1503e4    mov w4, w21
   90e90:   910d8063    add x3, x3, #0x360
   90e94:   913e0021    add x1, x1, #0xf80
   90e98:   52800022    mov w2, #0x1
   90e9c:   94003bc1    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   90ea0:   52800017    mov w23, #0x0
   90ea4:   910103e0    add x0, sp, #0x40
   90ea8:   94004b4e    bl  a3be0 <CString::~CString()>
   90eac:   a94153f3    ldp x19, x20, [sp, #16]
   90eb0:   2a1703e0    mov w0, w23
   90eb4:   a9425bf5    ldp x21, x22, [sp, #32]
   90eb8:   a94363f7    ldp x23, x24, [sp, #48]
   90ebc:   a8c67bfd    ldp x29, x30, [sp], #96
   90ec0:   d65f03c0    ret
   90ec4:   940039cf    bl  9f600 <CLogger::Get()>
   90ec8:   b0000103    adrp    x3, b1000 <_etext+0x1f9c>
   90ecc:   90000121    adrp    x1, b4000 <From+0x140>
   90ed0:   2a1403e4    mov w4, w20
   90ed4:   91136063    add x3, x3, #0x4d8
   90ed8:   913e0021    add x1, x1, #0xf80
   90edc:   52800022    mov w2, #0x1
   90ee0:   94003bb0    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   90ee4:   52800017    mov w23, #0x0
   90ee8:   a94153f3    ldp x19, x20, [sp, #16]
   90eec:   2a1703e0    mov w0, w23
   90ef0:   a94363f7    ldp x23, x24, [sp, #48]
   90ef4:   a8c67bfd    ldp x29, x30, [sp], #96
   90ef8:   d65f03c0    ret
   90efc:   940039c1    bl  9f600 <CLogger::Get()>
   90f00:   b0000103    adrp    x3, b1000 <_etext+0x1f9c>
   90f04:   90000121    adrp    x1, b4000 <From+0x140>
   90f08:   2a1303e4    mov w4, w19
   90f0c:   910cc063    add x3, x3, #0x330
   90f10:   913e0021    add x1, x1, #0xf80
   90f14:   52800022    mov w2, #0x1
   90f18:   94003ba2    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   90f1c:   17ffffe1    b   90ea0 <CUSBSerialCP210xDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0xb0>
   90f20:   b0000101    adrp    x1, b1000 <_etext+0x1f9c>
   90f24:   910d4021    add x1, x1, #0x350
   90f28:   910103e0    add x0, sp, #0x40
   90f2c:   321c0318    orr w24, w24, #0x10
   90f30:   94004c00    bl  a3f30 <CString::Append(char const*)>
   90f34:   7100069f    cmp w20, #0x1
   90f38:   540007a0    b.eq    9102c <CUSBSerialCP210xDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x23c>
   90f3c:   71000a9f    cmp w20, #0x2
   90f40:   540004c0    b.eq    90fd8 <CUSBSerialCP210xDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x1e8>
   90f44:   940039af    bl  9f600 <CLogger::Get()>
   90f48:   b0000103    adrp    x3, b1000 <_etext+0x1f9c>
   90f4c:   90000121    adrp    x1, b4000 <From+0x140>
   90f50:   2a1403e4    mov w4, w20
   90f54:   910de063    add x3, x3, #0x378
   90f58:   913e0021    add x1, x1, #0xf80
   90f5c:   52800022    mov w2, #0x1
   90f60:   94003b90    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   90f64:   17ffffcf    b   90ea0 <CUSBSerialCP210xDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0xb0>
   90f68:   940039a6    bl  9f600 <CLogger::Get()>
   90f6c:   b0000103    adrp    x3, b1000 <_etext+0x1f9c>
   90f70:   90000121    adrp    x1, b4000 <From+0x140>
   90f74:   2a1303e4    mov w4, w19
   90f78:   9112e063    add x3, x3, #0x4b8
   90f7c:   913e0021    add x1, x1, #0xf80
   90f80:   52800022    mov w2, #0x1
   90f84:   94003b87    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   90f88:   17ffffd7    b   90ee4 <CUSBSerialCP210xDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0xf4>
   90f8c:   b0000101    adrp    x1, b1000 <_etext+0x1f9c>
   90f90:   b0000100    adrp    x0, b1000 <_etext+0x1f9c>
   90f94:   a9025bf5    stp x21, x22, [sp, #32]
   90f98:   910f4021    add x1, x1, #0x3d0
   90f9c:   910fa000    add x0, x0, #0x3e8
   90fa0:   528017c2    mov w2, #0xbe
   90fa4:   a90363f7    stp x23, x24, [sp, #48]
   90fa8:   94002ec6    bl  9cac0 <assertion_failed>
   90fac:   b0000101    adrp    x1, b1000 <_etext+0x1f9c>
   90fb0:   910d2021    add x1, x1, #0x348
   90fb4:   910103e0    add x0, sp, #0x40
   90fb8:   94004bde    bl  a3f30 <CString::Append(char const*)>
   90fbc:   17ffffde    b   90f34 <CUSBSerialCP210xDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x144>
   90fc0:   b0000101    adrp    x1, b1000 <_etext+0x1f9c>
   90fc4:   910d6021    add x1, x1, #0x358
   90fc8:   910103e0    add x0, sp, #0x40
   90fcc:   321b0318    orr w24, w24, #0x20
   90fd0:   94004bd8    bl  a3f30 <CString::Append(char const*)>
   90fd4:   17ffffd8    b   90f34 <CUSBSerialCP210xDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x144>
   90fd8:   b0000101    adrp    x1, b1000 <_etext+0x1f9c>
   90fdc:   91088021    add x1, x1, #0x220
   90fe0:   910103e0    add x0, sp, #0x40
   90fe4:   321f0318    orr w24, w24, #0x2
   90fe8:   94004bd2    bl  a3f30 <CString::Append(char const*)>
   90fec:   aa1603e0    mov x0, x22
   90ff0:   97ffe54c    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   90ff4:   aa0003e1    mov x1, x0
   90ff8:   2a1803e4    mov w4, w24
   90ffc:   aa1703e0    mov x0, x23
   91000:   52800007    mov w7, #0x0
   91004:   d2800006    mov x6, #0x0
   91008:   52800005    mov w5, #0x0
   9100c:   52800063    mov w3, #0x3
   91010:   52800822    mov w2, #0x41
   91014:   97ffbfff    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   91018:   37f80200    tbnz    w0, #31, 91058 <CUSBSerialCP210xDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x268>
   9101c:   52800037    mov w23, #0x1
   91020:   2905d6d3    stp w19, w21, [x22, #44]
   91024:   b90036d4    str w20, [x22, #52]
   91028:   17ffff9f    b   90ea4 <CUSBSerialCP210xDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0xb4>
   9102c:   90000101    adrp    x1, b1000 <_etext+0x1f9c>
   91030:   91374021    add x1, x1, #0xdd0
   91034:   910103e0    add x0, sp, #0x40
   91038:   94004bbe    bl  a3f30 <CString::Append(char const*)>
   9103c:   17ffffec    b   90fec <CUSBSerialCP210xDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x1fc>
   91040:   90000101    adrp    x1, b1000 <_etext+0x1f9c>
   91044:   d00000e0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   91048:   910f4021    add x1, x1, #0x3d0
   9104c:   9113e000    add x0, x0, #0x4f8
   91050:   528019c2    mov w2, #0xce
   91054:   94002e9b    bl  9cac0 <assertion_failed>
   91058:   9400396a    bl  9f600 <CLogger::Get()>
   9105c:   90000103    adrp    x3, b1000 <_etext+0x1f9c>
   91060:   f0000101    adrp    x1, b4000 <From+0x140>
   91064:   9113e063    add x3, x3, #0x4f8
   91068:   913e0021    add x1, x1, #0xf80
   9106c:   52800022    mov w2, #0x1
   91070:   94003b4c    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   91074:   17ffff8b    b   90ea0 <CUSBSerialCP210xDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0xb0>
    ...

0000000000091080 <CUSBSerialPL2303Device::~CUSBSerialPL2303Device()>:
   91080:   90000121    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   91084:   9102a021    add x1, x1, #0xa8
   91088:   f9000001    str x1, [x0]
   9108c:   1400259d    b   9a700 <CUSBSerialDevice::~CUSBSerialDevice()>

0000000000091090 <CUSBSerialPL2303Device::~CUSBSerialPL2303Device()>:
   91090:   a9be7bfd    stp x29, x30, [sp, #-32]!
   91094:   90000121    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   91098:   9102a021    add x1, x1, #0xa8
   9109c:   910003fd    mov x29, sp
   910a0:   f9000bf3    str x19, [sp, #16]
   910a4:   aa0003f3    mov x19, x0
   910a8:   f9000001    str x1, [x0]
   910ac:   94002595    bl  9a700 <CUSBSerialDevice::~CUSBSerialDevice()>
   910b0:   aa1303e0    mov x0, x19
   910b4:   f9400bf3    ldr x19, [sp, #16]
   910b8:   d2800f01    mov x1, #0x78
   910bc:   a8c27bfd    ldp x29, x30, [sp], #32
   910c0:   140059e8    b   a7860 <operator delete(void*, unsigned long)>
   910c4:   d503201f    nop
   910c8:   d503201f    nop
   910cc:   d503201f    nop

00000000000910d0 <CUSBSerialPL2303Device::SetBaudRate(unsigned int)>:
   910d0:   a9b57bfd    stp x29, x30, [sp, #-176]!
   910d4:   910003fd    mov x29, sp
   910d8:   a90153f3    stp x19, x20, [sp, #16]
   910dc:   a9025bf5    stp x21, x22, [sp, #32]
   910e0:   aa0003f5    mov x21, x0
   910e4:   b9003fe1    str w1, [sp, #60]
   910e8:   97ffe51a    bl  8a550 <CUSBFunction::GetHost() const>
   910ec:   b40006c0    cbz x0, 911c4 <CUSBSerialPL2303Device::SetBaudRate(unsigned int)+0xf4>
   910f0:   9101fff3    add x19, sp, #0x7f
   910f4:   aa0003f4    mov x20, x0
   910f8:   927ae673    and x19, x19, #0xffffffffffffffc0
   910fc:   aa1503e0    mov x0, x21
   91100:   a9007e7f    stp xzr, xzr, [x19]
   91104:   a9017e7f    stp xzr, xzr, [x19, #16]
   91108:   a9027e7f    stp xzr, xzr, [x19, #32]
   9110c:   a9037e7f    stp xzr, xzr, [x19, #48]
   91110:   97ffe504    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   91114:   aa0003e1    mov x1, x0
   91118:   aa1303e6    mov x6, x19
   9111c:   aa1403e0    mov x0, x20
   91120:   528000e7    mov w7, #0x7
   91124:   52800005    mov w5, #0x0
   91128:   52800004    mov w4, #0x0
   9112c:   52800423    mov w3, #0x21
   91130:   12800bc2    mov w2, #0xffffffa1
   91134:   97ffbfb7    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   91138:   71001c1f    cmp w0, #0x7
   9113c:   2a0003f6    mov w22, w0
   91140:   54000301    b.ne    911a0 <CUSBSerialPL2303Device::SetBaudRate(unsigned int)+0xd0>
   91144:   d2800082    mov x2, #0x4
   91148:   9100f3e1    add x1, sp, #0x3c
   9114c:   aa1303e0    mov x0, x19
   91150:   9400570a    bl  a6d78 <memcpy>
   91154:   aa1503e0    mov x0, x21
   91158:   97ffe4f2    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   9115c:   aa0003e1    mov x1, x0
   91160:   2a1603e7    mov w7, w22
   91164:   aa1303e6    mov x6, x19
   91168:   aa1403e0    mov x0, x20
   9116c:   52800005    mov w5, #0x0
   91170:   52800004    mov w4, #0x0
   91174:   52800403    mov w3, #0x20
   91178:   52800422    mov w2, #0x21
   9117c:   97ffbfa5    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   91180:   37f802e0    tbnz    w0, #31, 911dc <CUSBSerialPL2303Device::SetBaudRate(unsigned int)+0x10c>
   91184:   b9403fe1    ldr w1, [sp, #60]
   91188:   52800020    mov w0, #0x1
   9118c:   b9002aa1    str w1, [x21, #40]
   91190:   a94153f3    ldp x19, x20, [sp, #16]
   91194:   a9425bf5    ldp x21, x22, [sp, #32]
   91198:   a8cb7bfd    ldp x29, x30, [sp], #176
   9119c:   d65f03c0    ret
   911a0:   94003918    bl  9f600 <CLogger::Get()>
   911a4:   90000103    adrp    x3, b1000 <_etext+0x1f9c>
   911a8:   90000121    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   911ac:   9115c063    add x3, x3, #0x570
   911b0:   91046021    add x1, x1, #0x118
   911b4:   52800022    mov w2, #0x1
   911b8:   94003afa    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   911bc:   52800000    mov w0, #0x0
   911c0:   17fffff4    b   91190 <CUSBSerialPL2303Device::SetBaudRate(unsigned int)+0xc0>
   911c4:   90000101    adrp    x1, b1000 <_etext+0x1f9c>
   911c8:   d00000e0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   911cc:   91156021    add x1, x1, #0x558
   911d0:   9113e000    add x0, x0, #0x4f8
   911d4:   52801da2    mov w2, #0xed
   911d8:   94002e3a    bl  9cac0 <assertion_failed>
   911dc:   94003909    bl  9f600 <CLogger::Get()>
   911e0:   90000103    adrp    x3, b1000 <_etext+0x1f9c>
   911e4:   90000121    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   911e8:   91108063    add x3, x3, #0x420
   911ec:   91046021    add x1, x1, #0x118
   911f0:   52800022    mov w2, #0x1
   911f4:   94003aeb    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   911f8:   52800000    mov w0, #0x0
   911fc:   17ffffe5    b   91190 <CUSBSerialPL2303Device::SetBaudRate(unsigned int)+0xc0>

0000000000091200 <CUSBSerialPL2303Device::CUSBSerialPL2303Device(CUSBFunction*)>:
   91200:   a9be7bfd    stp x29, x30, [sp, #-32]!
   91204:   d2800002    mov x2, #0x0
   91208:   910003fd    mov x29, sp
   9120c:   f9000bf3    str x19, [sp, #16]
   91210:   aa0003f3    mov x19, x0
   91214:   9400264f    bl  9ab50 <CUSBSerialDevice::CUSBSerialDevice(CUSBFunction*, unsigned long)>
   91218:   90000120    adrp    x0, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9121c:   9102a000    add x0, x0, #0xa8
   91220:   f9000260    str x0, [x19]
   91224:   f9400bf3    ldr x19, [sp, #16]
   91228:   a8c27bfd    ldp x29, x30, [sp], #32
   9122c:   d65f03c0    ret

0000000000091230 <CUSBSerialPL2303Device::GetDeviceIDTable()>:
   91230:   90000120    adrp    x0, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   91234:   91046000    add x0, x0, #0x118
   91238:   91002000    add x0, x0, #0x8
   9123c:   d65f03c0    ret

0000000000091240 <CUSBSerialPL2303Device::Configure()>:
   91240:   a9b37bfd    stp x29, x30, [sp, #-208]!
   91244:   910003fd    mov x29, sp
   91248:   a90153f3    stp x19, x20, [sp, #16]
   9124c:   aa0003f4    mov x20, x0
   91250:   a9025bf5    stp x21, x22, [sp, #32]
   91254:   940026a7    bl  9acf0 <CUSBSerialDevice::Configure()>
   91258:   36000920    tbz w0, #0, 9137c <CUSBSerialPL2303Device::Configure()+0x13c>
   9125c:   aa1403e0    mov x0, x20
   91260:   a90363f7    stp x23, x24, [sp, #48]
   91264:   f00000f6    adrp    x22, b0000 <_etext+0xf9c>
   91268:   911062d6    add x22, x22, #0x418
   9126c:   91027ff3    add x19, sp, #0x9f
   91270:   927ae673    and x19, x19, #0xffffffffffffffc0
   91274:   97ffe49f    bl  8a4f0 <CUSBFunction::GetDevice() const>
   91278:   97ffdcbe    bl  88570 <CUSBDevice::GetDeviceDescriptor() const>
   9127c:   aa0003f5    mov x21, x0
   91280:   aa1603e1    mov x1, x22
   91284:   910103e0    add x0, sp, #0x40
   91288:   94004a9a    bl  a3cf0 <CString::CString(char const*)>
   9128c:   394012a2    ldrb    w2, [x21, #4]
   91290:   7100085f    cmp w2, #0x2
   91294:   540012a0    b.eq    914e8 <CUSBSerialPL2303Device::Configure()+0x2a8>
   91298:   39401ea0    ldrb    w0, [x21, #7]
   9129c:   7101001f    cmp w0, #0x40
   912a0:   54001100    b.eq    914c0 <CUSBSerialPL2303Device::Configure()+0x280>
   912a4:   51000442    sub w2, w2, #0x1
   912a8:   12001c42    and w2, w2, #0xff
   912ac:   7103f45f    cmp w2, #0xfd
   912b0:   54001128    b.hi    914d4 <CUSBSerialPL2303Device::Configure()+0x294>
   912b4:   940038d3    bl  9f600 <CLogger::Get()>
   912b8:   aa0003f5    mov x21, x0
   912bc:   910103e0    add x0, sp, #0x40
   912c0:   94004ac8    bl  a3de0 <CString::operator char const*() const>
   912c4:   90000137    adrp    x23, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   912c8:   910462f7    add x23, x23, #0x118
   912cc:   90000103    adrp    x3, b1000 <_etext+0x1f9c>
   912d0:   aa0003e4    mov x4, x0
   912d4:   aa1703e1    mov x1, x23
   912d8:   aa1503e0    mov x0, x21
   912dc:   91164063    add x3, x3, #0x590
   912e0:   52800062    mov w2, #0x3
   912e4:   94003aaf    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   912e8:   aa1403e0    mov x0, x20
   912ec:   97ffe499    bl  8a550 <CUSBFunction::GetHost() const>
   912f0:   aa0003f5    mov x21, x0
   912f4:   b4001100    cbz x0, 91514 <CUSBSerialPL2303Device::Configure()+0x2d4>
   912f8:   aa1403e0    mov x0, x20
   912fc:   a9007e7f    stp xzr, xzr, [x19]
   91300:   a9017e7f    stp xzr, xzr, [x19, #16]
   91304:   a9027e7f    stp xzr, xzr, [x19, #32]
   91308:   a9037e7f    stp xzr, xzr, [x19, #48]
   9130c:   97ffe485    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   91310:   52800027    mov w7, #0x1
   91314:   aa0003e1    mov x1, x0
   91318:   aa1303e6    mov x6, x19
   9131c:   aa1503e0    mov x0, x21
   91320:   2a0703e3    mov w3, w7
   91324:   52800005    mov w5, #0x0
   91328:   128f6f64    mov w4, #0xffff8484
   9132c:   128007e2    mov w2, #0xffffffc0
   91330:   97ffbf38    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   91334:   7100041f    cmp w0, #0x1
   91338:   2a0003f6    mov w22, w0
   9133c:   540003a0    b.eq    913b0 <CUSBSerialPL2303Device::Configure()+0x170>
   91340:   940038b0    bl  9f600 <CLogger::Get()>
   91344:   90000103    adrp    x3, b1000 <_etext+0x1f9c>
   91348:   9116c063    add x3, x3, #0x5b0
   9134c:   aa1703e1    mov x1, x23
   91350:   52800022    mov w2, #0x1
   91354:   94003a93    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   91358:   52800015    mov w21, #0x0
   9135c:   910103e0    add x0, sp, #0x40
   91360:   94004a20    bl  a3be0 <CString::~CString()>
   91364:   a94153f3    ldp x19, x20, [sp, #16]
   91368:   2a1503e0    mov w0, w21
   9136c:   a9425bf5    ldp x21, x22, [sp, #32]
   91370:   a94363f7    ldp x23, x24, [sp, #48]
   91374:   a8cd7bfd    ldp x29, x30, [sp], #208
   91378:   d65f03c0    ret
   9137c:   12001c15    and w21, w0, #0xff
   91380:   940038a0    bl  9f600 <CLogger::Get()>
   91384:   90000103    adrp    x3, b1000 <_etext+0x1f9c>
   91388:   90000121    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9138c:   910ae063    add x3, x3, #0x2b8
   91390:   91046021    add x1, x1, #0x118
   91394:   52800022    mov w2, #0x1
   91398:   94003a82    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   9139c:   a94153f3    ldp x19, x20, [sp, #16]
   913a0:   2a1503e0    mov w0, w21
   913a4:   a9425bf5    ldp x21, x22, [sp, #32]
   913a8:   a8cd7bfd    ldp x29, x30, [sp], #208
   913ac:   d65f03c0    ret
   913b0:   aa1403e0    mov x0, x20
   913b4:   97ffe45b    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   913b8:   aa0003e1    mov x1, x0
   913bc:   2a1603e3    mov w3, w22
   913c0:   aa1503e0    mov x0, x21
   913c4:   52800007    mov w7, #0x0
   913c8:   d2800006    mov x6, #0x0
   913cc:   52800005    mov w5, #0x0
   913d0:   52808084    mov w4, #0x404
   913d4:   52800802    mov w2, #0x40
   913d8:   97ffbf0e    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   913dc:   37f808e0    tbnz    w0, #31, 914f8 <CUSBSerialPL2303Device::Configure()+0x2b8>
   913e0:   aa1403e0    mov x0, x20
   913e4:   97ffe44f    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   913e8:   aa0003e1    mov x1, x0
   913ec:   2a1603e7    mov w7, w22
   913f0:   aa1303e6    mov x6, x19
   913f4:   2a1603e3    mov w3, w22
   913f8:   aa1503e0    mov x0, x21
   913fc:   52800005    mov w5, #0x0
   91400:   128f6f64    mov w4, #0xffff8484
   91404:   128007e2    mov w2, #0xffffffc0
   91408:   97ffbf02    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   9140c:   7100041f    cmp w0, #0x1
   91410:   2a0003f8    mov w24, w0
   91414:   54000481    b.ne    914a4 <CUSBSerialPL2303Device::Configure()+0x264>
   91418:   aa1403e0    mov x0, x20
   9141c:   97ffe441    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   91420:   aa0003e1    mov x1, x0
   91424:   2a1803e7    mov w7, w24
   91428:   aa1303e6    mov x6, x19
   9142c:   2a1803e3    mov w3, w24
   91430:   aa1503e0    mov x0, x21
   91434:   52800005    mov w5, #0x0
   91438:   128f8f84    mov w4, #0xffff8383
   9143c:   128007e2    mov w2, #0xffffffc0
   91440:   97ffbef4    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   91444:   7100041f    cmp w0, #0x1
   91448:   2a0003f6    mov w22, w0
   9144c:   54000100    b.eq    9146c <CUSBSerialPL2303Device::Configure()+0x22c>
   91450:   9400386c    bl  9f600 <CLogger::Get()>
   91454:   2a1803e2    mov w2, w24
   91458:   aa1703e1    mov x1, x23
   9145c:   90000103    adrp    x3, b1000 <_etext+0x1f9c>
   91460:   91178063    add x3, x3, #0x5e0
   91464:   94003a4f    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   91468:   17ffffbc    b   91358 <CUSBSerialPL2303Device::Configure()+0x118>
   9146c:   aa1403e0    mov x0, x20
   91470:   97ffe42c    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   91474:   aa0003e1    mov x1, x0
   91478:   2a1603e7    mov w7, w22
   9147c:   aa1303e6    mov x6, x19
   91480:   2a1603e3    mov w3, w22
   91484:   aa1503e0    mov x0, x21
   91488:   52800005    mov w5, #0x0
   9148c:   128f6f64    mov w4, #0xffff8484
   91490:   128007e2    mov w2, #0xffffffc0
   91494:   97ffbedf    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   91498:   7100041f    cmp w0, #0x1
   9149c:   2a0003f8    mov w24, w0
   914a0:   54000460    b.eq    9152c <CUSBSerialPL2303Device::Configure()+0x2ec>
   914a4:   94003857    bl  9f600 <CLogger::Get()>
   914a8:   2a1603e2    mov w2, w22
   914ac:   aa1703e1    mov x1, x23
   914b0:   90000103    adrp    x3, b1000 <_etext+0x1f9c>
   914b4:   9116c063    add x3, x3, #0x5b0
   914b8:   94003a3a    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   914bc:   17ffffa7    b   91358 <CUSBSerialPL2303Device::Configure()+0x118>
   914c0:   90000101    adrp    x1, b1000 <_etext+0x1f9c>
   914c4:   91162021    add x1, x1, #0x588
   914c8:   910103e0    add x0, sp, #0x40
   914cc:   94004a4d    bl  a3e00 <CString::operator=(char const*)>
   914d0:   17ffff79    b   912b4 <CUSBSerialPL2303Device::Configure()+0x74>
   914d4:   90000101    adrp    x1, b1000 <_etext+0x1f9c>
   914d8:   91374021    add x1, x1, #0xdd0
   914dc:   910103e0    add x0, sp, #0x40
   914e0:   94004a48    bl  a3e00 <CString::operator=(char const*)>
   914e4:   17ffff74    b   912b4 <CUSBSerialPL2303Device::Configure()+0x74>
   914e8:   aa1603e1    mov x1, x22
   914ec:   910103e0    add x0, sp, #0x40
   914f0:   94004a44    bl  a3e00 <CString::operator=(char const*)>
   914f4:   17ffff70    b   912b4 <CUSBSerialPL2303Device::Configure()+0x74>
   914f8:   94003842    bl  9f600 <CLogger::Get()>
   914fc:   2a1603e2    mov w2, w22
   91500:   aa1703e1    mov x1, x23
   91504:   90000103    adrp    x3, b1000 <_etext+0x1f9c>
   91508:   91172063    add x3, x3, #0x5c8
   9150c:   94003a25    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   91510:   17ffff92    b   91358 <CUSBSerialPL2303Device::Configure()+0x118>
   91514:   90000101    adrp    x1, b1000 <_etext+0x1f9c>
   91518:   d00000e0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   9151c:   91156021    add x1, x1, #0x558
   91520:   9113e000    add x0, x0, #0x4f8
   91524:   52800942    mov w2, #0x4a
   91528:   94002d66    bl  9cac0 <assertion_failed>
   9152c:   aa1403e0    mov x0, x20
   91530:   97ffe3fc    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   91534:   aa0003e1    mov x1, x0
   91538:   2a1803e5    mov w5, w24
   9153c:   2a1803e3    mov w3, w24
   91540:   aa1503e0    mov x0, x21
   91544:   52800007    mov w7, #0x0
   91548:   d2800006    mov x6, #0x0
   9154c:   52808084    mov w4, #0x404
   91550:   52800802    mov w2, #0x40
   91554:   97ffbeaf    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   91558:   37f80560    tbnz    w0, #31, 91604 <CUSBSerialPL2303Device::Configure()+0x3c4>
   9155c:   aa1403e0    mov x0, x20
   91560:   97ffe3f0    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   91564:   aa0003e1    mov x1, x0
   91568:   2a1803e7    mov w7, w24
   9156c:   aa1303e6    mov x6, x19
   91570:   2a1803e3    mov w3, w24
   91574:   aa1503e0    mov x0, x21
   91578:   52800005    mov w5, #0x0
   9157c:   128f6f64    mov w4, #0xffff8484
   91580:   128007e2    mov w2, #0xffffffc0
   91584:   97ffbea3    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   91588:   7100041f    cmp w0, #0x1
   9158c:   2a0003f6    mov w22, w0
   91590:   54000100    b.eq    915b0 <CUSBSerialPL2303Device::Configure()+0x370>
   91594:   9400381b    bl  9f600 <CLogger::Get()>
   91598:   2a1803e2    mov w2, w24
   9159c:   aa1703e1    mov x1, x23
   915a0:   90000103    adrp    x3, b1000 <_etext+0x1f9c>
   915a4:   9116c063    add x3, x3, #0x5b0
   915a8:   940039fe    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   915ac:   17ffff6b    b   91358 <CUSBSerialPL2303Device::Configure()+0x118>
   915b0:   aa1403e0    mov x0, x20
   915b4:   97ffe3db    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   915b8:   aa1303e6    mov x6, x19
   915bc:   aa0003e1    mov x1, x0
   915c0:   2a1603e7    mov w7, w22
   915c4:   2a1603e3    mov w3, w22
   915c8:   aa1503e0    mov x0, x21
   915cc:   52800005    mov w5, #0x0
   915d0:   128f8f84    mov w4, #0xffff8383
   915d4:   128007e2    mov w2, #0xffffffc0
   915d8:   97ffbe8e    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   915dc:   7100041f    cmp w0, #0x1
   915e0:   2a0003f3    mov w19, w0
   915e4:   540001e0    b.eq    91620 <CUSBSerialPL2303Device::Configure()+0x3e0>
   915e8:   94003806    bl  9f600 <CLogger::Get()>
   915ec:   2a1603e2    mov w2, w22
   915f0:   aa1703e1    mov x1, x23
   915f4:   90000103    adrp    x3, b1000 <_etext+0x1f9c>
   915f8:   91178063    add x3, x3, #0x5e0
   915fc:   940039e9    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   91600:   17ffff56    b   91358 <CUSBSerialPL2303Device::Configure()+0x118>
   91604:   940037ff    bl  9f600 <CLogger::Get()>
   91608:   2a1803e2    mov w2, w24
   9160c:   aa1703e1    mov x1, x23
   91610:   90000103    adrp    x3, b1000 <_etext+0x1f9c>
   91614:   91172063    add x3, x3, #0x5c8
   91618:   940039e2    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   9161c:   17ffff4f    b   91358 <CUSBSerialPL2303Device::Configure()+0x118>
   91620:   aa1403e0    mov x0, x20
   91624:   97ffe3bf    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   91628:   aa0003e1    mov x1, x0
   9162c:   2a1303e5    mov w5, w19
   91630:   2a1303e3    mov w3, w19
   91634:   aa1503e0    mov x0, x21
   91638:   52800007    mov w7, #0x0
   9163c:   d2800006    mov x6, #0x0
   91640:   52800004    mov w4, #0x0
   91644:   52800802    mov w2, #0x40
   91648:   97ffbe72    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   9164c:   37f80680    tbnz    w0, #31, 9171c <CUSBSerialPL2303Device::Configure()+0x4dc>
   91650:   aa1403e0    mov x0, x20
   91654:   97ffe3b3    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   91658:   52800024    mov w4, #0x1
   9165c:   aa0003e1    mov x1, x0
   91660:   2a0403e3    mov w3, w4
   91664:   aa1503e0    mov x0, x21
   91668:   52800007    mov w7, #0x0
   9166c:   d2800006    mov x6, #0x0
   91670:   52800005    mov w5, #0x0
   91674:   52800802    mov w2, #0x40
   91678:   97ffbe66    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   9167c:   37f805e0    tbnz    w0, #31, 91738 <CUSBSerialPL2303Device::Configure()+0x4f8>
   91680:   aa1403e0    mov x0, x20
   91684:   97ffe3a7    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   91688:   aa0003e1    mov x1, x0
   9168c:   52800007    mov w7, #0x0
   91690:   aa1503e0    mov x0, x21
   91694:   d2800006    mov x6, #0x0
   91698:   52800885    mov w5, #0x44
   9169c:   52800044    mov w4, #0x2
   916a0:   52800023    mov w3, #0x1
   916a4:   52800802    mov w2, #0x40
   916a8:   97ffbe5a    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   916ac:   37f80540    tbnz    w0, #31, 91754 <CUSBSerialPL2303Device::Configure()+0x514>
   916b0:   aa1403e0    mov x0, x20
   916b4:   97ffe39b    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   916b8:   aa0003e1    mov x1, x0
   916bc:   52800007    mov w7, #0x0
   916c0:   aa1503e0    mov x0, x21
   916c4:   d2800006    mov x6, #0x0
   916c8:   52800005    mov w5, #0x0
   916cc:   52800004    mov w4, #0x0
   916d0:   52800023    mov w3, #0x1
   916d4:   52800802    mov w2, #0x40
   916d8:   97ffbe4e    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   916dc:   37f80200    tbnz    w0, #31, 9171c <CUSBSerialPL2303Device::Configure()+0x4dc>
   916e0:   f9400282    ldr x2, [x20]
   916e4:   5284b001    mov w1, #0x2580
   916e8:   aa1403e0    mov x0, x20
   916ec:   f9403042    ldr x2, [x2, #96]
   916f0:   d63f0040    blr x2
   916f4:   3607e320    tbz w0, #0, 91358 <CUSBSerialPL2303Device::Configure()+0x118>
   916f8:   f9400284    ldr x4, [x20]
   916fc:   aa1403e0    mov x0, x20
   91700:   52800023    mov w3, #0x1
   91704:   52800002    mov w2, #0x0
   91708:   52800101    mov w1, #0x8
   9170c:   f9403484    ldr x4, [x4, #104]
   91710:   d63f0080    blr x4
   91714:   12001c15    and w21, w0, #0xff
   91718:   17ffff11    b   9135c <CUSBSerialPL2303Device::Configure()+0x11c>
   9171c:   940037b9    bl  9f600 <CLogger::Get()>
   91720:   aa1703e1    mov x1, x23
   91724:   90000103    adrp    x3, b1000 <_etext+0x1f9c>
   91728:   9117e063    add x3, x3, #0x5f8
   9172c:   52800022    mov w2, #0x1
   91730:   9400399c    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   91734:   17ffff09    b   91358 <CUSBSerialPL2303Device::Configure()+0x118>
   91738:   940037b2    bl  9f600 <CLogger::Get()>
   9173c:   aa1703e1    mov x1, x23
   91740:   90000103    adrp    x3, b1000 <_etext+0x1f9c>
   91744:   91182063    add x3, x3, #0x608
   91748:   52800022    mov w2, #0x1
   9174c:   94003995    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   91750:   17ffff02    b   91358 <CUSBSerialPL2303Device::Configure()+0x118>
   91754:   940037ab    bl  9f600 <CLogger::Get()>
   91758:   aa1703e1    mov x1, x23
   9175c:   90000103    adrp    x3, b1000 <_etext+0x1f9c>
   91760:   91186063    add x3, x3, #0x618
   91764:   52800022    mov w2, #0x1
   91768:   9400398e    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   9176c:   17fffefb    b   91358 <CUSBSerialPL2303Device::Configure()+0x118>

0000000000091770 <CUSBSerialPL2303Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)>:
   91770:   a9b37bfd    stp x29, x30, [sp, #-208]!
   91774:   910003fd    mov x29, sp
   91778:   a90153f3    stp x19, x20, [sp, #16]
   9177c:   a9025bf5    stp x21, x22, [sp, #32]
   91780:   2a0103f5    mov w21, w1
   91784:   aa0003f6    mov x22, x0
   91788:   a90363f7    stp x23, x24, [sp, #48]
   9178c:   2a0203f7    mov w23, w2
   91790:   2a0303f8    mov w24, w3
   91794:   97ffe36f    bl  8a550 <CUSBFunction::GetHost() const>
   91798:   b4000c40    cbz x0, 91920 <CUSBSerialPL2303Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x1b0>
   9179c:   91027ff3    add x19, sp, #0x9f
   917a0:   aa0003f4    mov x20, x0
   917a4:   927ae673    and x19, x19, #0xffffffffffffffc0
   917a8:   aa1603e0    mov x0, x22
   917ac:   a9007e7f    stp xzr, xzr, [x19]
   917b0:   a9017e7f    stp xzr, xzr, [x19, #16]
   917b4:   a9027e7f    stp xzr, xzr, [x19, #32]
   917b8:   a9037e7f    stp xzr, xzr, [x19, #48]
   917bc:   97ffe359    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   917c0:   aa0003e1    mov x1, x0
   917c4:   aa1303e6    mov x6, x19
   917c8:   aa1403e0    mov x0, x20
   917cc:   528000e7    mov w7, #0x7
   917d0:   52800005    mov w5, #0x0
   917d4:   52800004    mov w4, #0x0
   917d8:   52800423    mov w3, #0x21
   917dc:   12800bc2    mov w2, #0xffffffa1
   917e0:   97ffbe0c    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   917e4:   71001c1f    cmp w0, #0x7
   917e8:   540005e1    b.ne    918a4 <CUSBSerialPL2303Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x134>
   917ec:   910103e0    add x0, sp, #0x40
   917f0:   94004938    bl  a3cd0 <CString::CString()>
   917f4:   71001ebf    cmp w21, #0x7
   917f8:   540000c0    b.eq    91810 <CUSBSerialPL2303Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0xa0>
   917fc:   540007c8    b.hi    918f4 <CUSBSerialPL2303Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x184>
   91800:   710016bf    cmp w21, #0x5
   91804:   54000060    b.eq    91810 <CUSBSerialPL2303Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0xa0>
   91808:   71001abf    cmp w21, #0x6
   9180c:   54000781    b.ne    918fc <CUSBSerialPL2303Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x18c>
   91810:   90000101    adrp    x1, b1000 <_etext+0x1f9c>
   91814:   2a1503e2    mov w2, w21
   91818:   39001a75    strb    w21, [x19, #6]
   9181c:   910ca021    add x1, x1, #0x328
   91820:   910103e0    add x0, sp, #0x40
   91824:   94004f37    bl  a5500 <CString::Format(char const*, ...)>
   91828:   710006ff    cmp w23, #0x1
   9182c:   54000860    b.eq    91938 <CUSBSerialPL2303Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x1c8>
   91830:   71000aff    cmp w23, #0x2
   91834:   54000540    b.eq    918dc <CUSBSerialPL2303Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x16c>
   91838:   35000c37    cbnz    w23, 919bc <CUSBSerialPL2303Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x24c>
   9183c:   90000101    adrp    x1, b1000 <_etext+0x1f9c>
   91840:   910d2021    add x1, x1, #0x348
   91844:   3900167f    strb    wzr, [x19, #5]
   91848:   910103e0    add x0, sp, #0x40
   9184c:   940049b9    bl  a3f30 <CString::Append(char const*)>
   91850:   7100071f    cmp w24, #0x1
   91854:   54000a80    b.eq    919a4 <CUSBSerialPL2303Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x234>
   91858:   71000b1f    cmp w24, #0x2
   9185c:   540007a0    b.eq    91950 <CUSBSerialPL2303Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x1e0>
   91860:   94003768    bl  9f600 <CLogger::Get()>
   91864:   90000103    adrp    x3, b1000 <_etext+0x1f9c>
   91868:   90000121    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9186c:   2a1803e4    mov w4, w24
   91870:   910de063    add x3, x3, #0x378
   91874:   91046021    add x1, x1, #0x118
   91878:   52800022    mov w2, #0x1
   9187c:   94003949    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   91880:   52800013    mov w19, #0x0
   91884:   910103e0    add x0, sp, #0x40
   91888:   940048d6    bl  a3be0 <CString::~CString()>
   9188c:   a9425bf5    ldp x21, x22, [sp, #32]
   91890:   2a1303e0    mov w0, w19
   91894:   a94153f3    ldp x19, x20, [sp, #16]
   91898:   a94363f7    ldp x23, x24, [sp, #48]
   9189c:   a8cd7bfd    ldp x29, x30, [sp], #208
   918a0:   d65f03c0    ret
   918a4:   94003757    bl  9f600 <CLogger::Get()>
   918a8:   90000103    adrp    x3, b1000 <_etext+0x1f9c>
   918ac:   90000121    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   918b0:   9118a063    add x3, x3, #0x628
   918b4:   91046021    add x1, x1, #0x118
   918b8:   52800022    mov w2, #0x1
   918bc:   52800013    mov w19, #0x0
   918c0:   94003938    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   918c4:   a9425bf5    ldp x21, x22, [sp, #32]
   918c8:   2a1303e0    mov w0, w19
   918cc:   a94153f3    ldp x19, x20, [sp, #16]
   918d0:   a94363f7    ldp x23, x24, [sp, #48]
   918d4:   a8cd7bfd    ldp x29, x30, [sp], #208
   918d8:   d65f03c0    ret
   918dc:   90000101    adrp    x1, b1000 <_etext+0x1f9c>
   918e0:   910d6021    add x1, x1, #0x358
   918e4:   39001677    strb    w23, [x19, #5]
   918e8:   910103e0    add x0, sp, #0x40
   918ec:   94004991    bl  a3f30 <CString::Append(char const*)>
   918f0:   17ffffd8    b   91850 <CUSBSerialPL2303Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0xe0>
   918f4:   710022bf    cmp w21, #0x8
   918f8:   54fff8c0    b.eq    91810 <CUSBSerialPL2303Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0xa0>
   918fc:   94003741    bl  9f600 <CLogger::Get()>
   91900:   90000103    adrp    x3, b1000 <_etext+0x1f9c>
   91904:   90000121    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   91908:   2a1503e4    mov w4, w21
   9190c:   910cc063    add x3, x3, #0x330
   91910:   91046021    add x1, x1, #0x118
   91914:   52800022    mov w2, #0x1
   91918:   94003922    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   9191c:   17ffffd9    b   91880 <CUSBSerialPL2303Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x110>
   91920:   90000101    adrp    x1, b1000 <_etext+0x1f9c>
   91924:   d00000e0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   91928:   91156021    add x1, x1, #0x558
   9192c:   9113e000    add x0, x0, #0x4f8
   91930:   528022a2    mov w2, #0x115
   91934:   94002c63    bl  9cac0 <assertion_failed>
   91938:   90000101    adrp    x1, b1000 <_etext+0x1f9c>
   9193c:   910d4021    add x1, x1, #0x350
   91940:   39001677    strb    w23, [x19, #5]
   91944:   910103e0    add x0, sp, #0x40
   91948:   9400497a    bl  a3f30 <CString::Append(char const*)>
   9194c:   17ffffc1    b   91850 <CUSBSerialPL2303Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0xe0>
   91950:   90000101    adrp    x1, b1000 <_etext+0x1f9c>
   91954:   91088021    add x1, x1, #0x220
   91958:   39001278    strb    w24, [x19, #4]
   9195c:   910103e0    add x0, sp, #0x40
   91960:   94004974    bl  a3f30 <CString::Append(char const*)>
   91964:   aa1603e0    mov x0, x22
   91968:   97ffe2ee    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   9196c:   aa0003e1    mov x1, x0
   91970:   aa1303e6    mov x6, x19
   91974:   aa1403e0    mov x0, x20
   91978:   528000e7    mov w7, #0x7
   9197c:   52800005    mov w5, #0x0
   91980:   52800004    mov w4, #0x0
   91984:   52800403    mov w3, #0x20
   91988:   52800422    mov w2, #0x21
   9198c:   97ffbda1    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   91990:   37f80280    tbnz    w0, #31, 919e0 <CUSBSerialPL2303Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x270>
   91994:   52800033    mov w19, #0x1
   91998:   2905ded5    stp w21, w23, [x22, #44]
   9199c:   b90036d8    str w24, [x22, #52]
   919a0:   17ffffb9    b   91884 <CUSBSerialPL2303Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x114>
   919a4:   90000101    adrp    x1, b1000 <_etext+0x1f9c>
   919a8:   91374021    add x1, x1, #0xdd0
   919ac:   3900127f    strb    wzr, [x19, #4]
   919b0:   910103e0    add x0, sp, #0x40
   919b4:   9400495f    bl  a3f30 <CString::Append(char const*)>
   919b8:   17ffffeb    b   91964 <CUSBSerialPL2303Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x1f4>
   919bc:   94003711    bl  9f600 <CLogger::Get()>
   919c0:   90000103    adrp    x3, b1000 <_etext+0x1f9c>
   919c4:   90000121    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   919c8:   2a1703e4    mov w4, w23
   919cc:   910d8063    add x3, x3, #0x360
   919d0:   91046021    add x1, x1, #0x118
   919d4:   52800022    mov w2, #0x1
   919d8:   940038f2    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   919dc:   17ffffa9    b   91880 <CUSBSerialPL2303Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x110>
   919e0:   94003708    bl  9f600 <CLogger::Get()>
   919e4:   90000103    adrp    x3, b1000 <_etext+0x1f9c>
   919e8:   90000121    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   919ec:   9113e063    add x3, x3, #0x4f8
   919f0:   91046021    add x1, x1, #0x118
   919f4:   52800022    mov w2, #0x1
   919f8:   940038ea    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   919fc:   17ffffa1    b   91880 <CUSBSerialPL2303Device::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x110>

0000000000091a00 <CUSBSerialFT231XDevice::~CUSBSerialFT231XDevice()>:
   91a00:   90000121    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   91a04:   9104e021    add x1, x1, #0x138
   91a08:   f9000001    str x1, [x0]
   91a0c:   1400233d    b   9a700 <CUSBSerialDevice::~CUSBSerialDevice()>

0000000000091a10 <CUSBSerialFT231XDevice::~CUSBSerialFT231XDevice()>:
   91a10:   a9be7bfd    stp x29, x30, [sp, #-32]!
   91a14:   90000121    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   91a18:   9104e021    add x1, x1, #0x138
   91a1c:   910003fd    mov x29, sp
   91a20:   f9000bf3    str x19, [sp, #16]
   91a24:   aa0003f3    mov x19, x0
   91a28:   f9000001    str x1, [x0]
   91a2c:   94002335    bl  9a700 <CUSBSerialDevice::~CUSBSerialDevice()>
   91a30:   aa1303e0    mov x0, x19
   91a34:   f9400bf3    ldr x19, [sp, #16]
   91a38:   d2800f01    mov x1, #0x78
   91a3c:   a8c27bfd    ldp x29, x30, [sp], #32
   91a40:   14005788    b   a7860 <operator delete(void*, unsigned long)>
   91a44:   d503201f    nop
   91a48:   d503201f    nop
   91a4c:   d503201f    nop

0000000000091a50 <CUSBSerialFT231XDevice::SetBaudRate(unsigned int)>:
   91a50:   a9bb7bfd    stp x29, x30, [sp, #-80]!
   91a54:   910003fd    mov x29, sp
   91a58:   a90153f3    stp x19, x20, [sp, #16]
   91a5c:   aa0003f4    mov x20, x0
   91a60:   a9025bf5    stp x21, x22, [sp, #32]
   91a64:   2a0103f6    mov w22, w1
   91a68:   f9001bf7    str x23, [sp, #48]
   91a6c:   97ffe2b9    bl  8a550 <CUSBFunction::GetHost() const>
   91a70:   b4000880    cbz x0, 91b80 <CUSBSerialFT231XDevice::SetBaudRate(unsigned int)+0x130>
   91a74:   5286c005    mov w5, #0x3600
   91a78:   72a02dc5    movk    w5, #0x16e, lsl #16
   91a7c:   d2806001    mov x1, #0x300
   91a80:   f2a08041    movk    x1, #0x402, lsl #16
   91a84:   1ad608a5    udiv    w5, w5, w22
   91a88:   f2c0a021    movk    x1, #0x501, lsl #32
   91a8c:   f2e0e0c1    movk    x1, #0x706, lsl #48
   91a90:   aa0003f5    mov x21, x0
   91a94:   910123e0    add x0, sp, #0x48
   91a98:   f90027e1    str x1, [sp, #72]
   91a9c:   120008a1    and w1, w5, #0x7
   91aa0:   3861c800    ldrb    w0, [x0, w1, sxtw]
   91aa4:   53124400    lsl w0, w0, #14
   91aa8:   2a450c05    orr w5, w0, w5, lsr #3
   91aac:   710004bf    cmp w5, #0x1
   91ab0:   54000480    b.eq    91b40 <CUSBSerialFT231XDevice::SetBaudRate(unsigned int)+0xf0>
   91ab4:   52880020    mov w0, #0x4001
   91ab8:   6b0000bf    cmp w5, w0
   91abc:   540003c0    b.eq    91b34 <CUSBSerialFT231XDevice::SetBaudRate(unsigned int)+0xe4>
   91ac0:   12003cb7    and w23, w5, #0xffff
   91ac4:   53107cb3    lsr w19, w5, #16
   91ac8:   aa1403e0    mov x0, x20
   91acc:   97ffe295    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   91ad0:   aa0003e1    mov x1, x0
   91ad4:   2a1303e5    mov w5, w19
   91ad8:   2a1703e4    mov w4, w23
   91adc:   aa1503e0    mov x0, x21
   91ae0:   52800007    mov w7, #0x0
   91ae4:   d2800006    mov x6, #0x0
   91ae8:   52800063    mov w3, #0x3
   91aec:   52800802    mov w2, #0x40
   91af0:   97ffbd48    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   91af4:   37f802c0    tbnz    w0, #31, 91b4c <CUSBSerialFT231XDevice::SetBaudRate(unsigned int)+0xfc>
   91af8:   b9002a96    str w22, [x20, #40]
   91afc:   940036c1    bl  9f600 <CLogger::Get()>
   91b00:   90000103    adrp    x3, b1000 <_etext+0x1f9c>
   91b04:   90000121    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   91b08:   b9402a84    ldr w4, [x20, #40]
   91b0c:   9110e063    add x3, x3, #0x438
   91b10:   9106a021    add x1, x1, #0x1a8
   91b14:   52800082    mov w2, #0x4
   91b18:   940038a2    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   91b1c:   a94153f3    ldp x19, x20, [sp, #16]
   91b20:   52800020    mov w0, #0x1
   91b24:   a9425bf5    ldp x21, x22, [sp, #32]
   91b28:   f9401bf7    ldr x23, [sp, #48]
   91b2c:   a8c57bfd    ldp x29, x30, [sp], #80
   91b30:   d65f03c0    ret
   91b34:   52800013    mov w19, #0x0
   91b38:   52800037    mov w23, #0x1
   91b3c:   17ffffe3    b   91ac8 <CUSBSerialFT231XDevice::SetBaudRate(unsigned int)+0x78>
   91b40:   52800013    mov w19, #0x0
   91b44:   52800017    mov w23, #0x0
   91b48:   17ffffe0    b   91ac8 <CUSBSerialFT231XDevice::SetBaudRate(unsigned int)+0x78>
   91b4c:   940036ad    bl  9f600 <CLogger::Get()>
   91b50:   90000103    adrp    x3, b1000 <_etext+0x1f9c>
   91b54:   90000121    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   91b58:   91108063    add x3, x3, #0x420
   91b5c:   9106a021    add x1, x1, #0x1a8
   91b60:   52800022    mov w2, #0x1
   91b64:   9400388f    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   91b68:   a94153f3    ldp x19, x20, [sp, #16]
   91b6c:   52800000    mov w0, #0x0
   91b70:   a9425bf5    ldp x21, x22, [sp, #32]
   91b74:   f9401bf7    ldr x23, [sp, #48]
   91b78:   a8c57bfd    ldp x29, x30, [sp], #80
   91b7c:   d65f03c0    ret
   91b80:   90000101    adrp    x1, b1000 <_etext+0x1f9c>
   91b84:   d00000e0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   91b88:   91192021    add x1, x1, #0x648
   91b8c:   9113e000    add x0, x0, #0x4f8
   91b90:   52800f62    mov w2, #0x7b
   91b94:   94002bcb    bl  9cac0 <assertion_failed>
   91b98:   d503201f    nop
   91b9c:   d503201f    nop

0000000000091ba0 <CUSBSerialFT231XDevice::CUSBSerialFT231XDevice(CUSBFunction*)>:
   91ba0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   91ba4:   d2800042    mov x2, #0x2
   91ba8:   910003fd    mov x29, sp
   91bac:   f9000bf3    str x19, [sp, #16]
   91bb0:   aa0003f3    mov x19, x0
   91bb4:   940023e7    bl  9ab50 <CUSBSerialDevice::CUSBSerialDevice(CUSBFunction*, unsigned long)>
   91bb8:   90000120    adrp    x0, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   91bbc:   9104e000    add x0, x0, #0x138
   91bc0:   f9000260    str x0, [x19]
   91bc4:   f9400bf3    ldr x19, [sp, #16]
   91bc8:   a8c27bfd    ldp x29, x30, [sp], #32
   91bcc:   d65f03c0    ret

0000000000091bd0 <CUSBSerialFT231XDevice::GetDeviceIDTable()>:
   91bd0:   90000120    adrp    x0, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   91bd4:   9106a000    add x0, x0, #0x1a8
   91bd8:   91002000    add x0, x0, #0x8
   91bdc:   d65f03c0    ret

0000000000091be0 <CUSBSerialFT231XDevice::Configure()>:
   91be0:   a9bb7bfd    stp x29, x30, [sp, #-80]!
   91be4:   910003fd    mov x29, sp
   91be8:   a90153f3    stp x19, x20, [sp, #16]
   91bec:   aa0003f3    mov x19, x0
   91bf0:   94002440    bl  9acf0 <CUSBSerialDevice::Configure()>
   91bf4:   36000a60    tbz w0, #0, 91d40 <CUSBSerialFT231XDevice::Configure()+0x160>
   91bf8:   aa1303e0    mov x0, x19
   91bfc:   f90013f5    str x21, [sp, #32]
   91c00:   97ffe23c    bl  8a4f0 <CUSBFunction::GetDevice() const>
   91c04:   97ffda5b    bl  88570 <CUSBDevice::GetDeviceDescriptor() const>
   91c08:   90000101    adrp    x1, b1000 <_etext+0x1f9c>
   91c0c:   aa0003f4    mov x20, x0
   91c10:   91198021    add x1, x1, #0x660
   91c14:   9100c3e0    add x0, sp, #0x30
   91c18:   94004836    bl  a3cf0 <CString::CString(char const*)>
   91c1c:   39403281    ldrb    w1, [x20, #12]
   91c20:   39403680    ldrb    w0, [x20, #13]
   91c24:   2a002020    orr w0, w1, w0, lsl #8
   91c28:   7140041f    cmp w0, #0x1, lsl #12
   91c2c:   54000c60    b.eq    91db8 <CUSBSerialFT231XDevice::Configure()+0x1d8>
   91c30:   7118001f    cmp w0, #0x600
   91c34:   540009e0    b.eq    91d70 <CUSBSerialFT231XDevice::Configure()+0x190>
   91c38:   511c0000    sub w0, w0, #0x700
   91c3c:   529fbfe1    mov w1, #0xfdff
   91c40:   6a01001f    tst w0, w1
   91c44:   54000b00    b.eq    91da4 <CUSBSerialFT231XDevice::Configure()+0x1c4>
   91c48:   9400366e    bl  9f600 <CLogger::Get()>
   91c4c:   aa0003f4    mov x20, x0
   91c50:   9100c3e0    add x0, sp, #0x30
   91c54:   94004863    bl  a3de0 <CString::operator char const*() const>
   91c58:   90000135    adrp    x21, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   91c5c:   9106a2b5    add x21, x21, #0x1a8
   91c60:   90000103    adrp    x3, b1000 <_etext+0x1f9c>
   91c64:   aa0003e4    mov x4, x0
   91c68:   aa1503e1    mov x1, x21
   91c6c:   aa1403e0    mov x0, x20
   91c70:   9111a063    add x3, x3, #0x468
   91c74:   52800062    mov w2, #0x3
   91c78:   9400384a    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   91c7c:   aa1303e0    mov x0, x19
   91c80:   97ffe234    bl  8a550 <CUSBFunction::GetHost() const>
   91c84:   aa0003f4    mov x20, x0
   91c88:   b4000a20    cbz x0, 91dcc <CUSBSerialFT231XDevice::Configure()+0x1ec>
   91c8c:   aa1303e0    mov x0, x19
   91c90:   97ffe224    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   91c94:   aa0003e1    mov x1, x0
   91c98:   52800007    mov w7, #0x0
   91c9c:   aa1403e0    mov x0, x20
   91ca0:   d2800006    mov x6, #0x0
   91ca4:   52800005    mov w5, #0x0
   91ca8:   52800004    mov w4, #0x0
   91cac:   52800003    mov w3, #0x0
   91cb0:   52800802    mov w2, #0x40
   91cb4:   97ffbcd7    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   91cb8:   37f80660    tbnz    w0, #31, 91d84 <CUSBSerialFT231XDevice::Configure()+0x1a4>
   91cbc:   aa1303e0    mov x0, x19
   91cc0:   97ffe218    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   91cc4:   aa0003e1    mov x1, x0
   91cc8:   52800007    mov w7, #0x0
   91ccc:   aa1403e0    mov x0, x20
   91cd0:   d2800006    mov x6, #0x0
   91cd4:   52800005    mov w5, #0x0
   91cd8:   52800004    mov w4, #0x0
   91cdc:   52800043    mov w3, #0x2
   91ce0:   52800802    mov w2, #0x40
   91ce4:   97ffbccb    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   91ce8:   37f807e0    tbnz    w0, #31, 91de4 <CUSBSerialFT231XDevice::Configure()+0x204>
   91cec:   f9400262    ldr x2, [x19]
   91cf0:   5284b001    mov w1, #0x2580
   91cf4:   aa1303e0    mov x0, x19
   91cf8:   f9403042    ldr x2, [x2, #96]
   91cfc:   d63f0040    blr x2
   91d00:   360004e0    tbz w0, #0, 91d9c <CUSBSerialFT231XDevice::Configure()+0x1bc>
   91d04:   f9400264    ldr x4, [x19]
   91d08:   aa1303e0    mov x0, x19
   91d0c:   52800023    mov w3, #0x1
   91d10:   52800002    mov w2, #0x0
   91d14:   52800101    mov w1, #0x8
   91d18:   f9403484    ldr x4, [x4, #104]
   91d1c:   d63f0080    blr x4
   91d20:   12001c14    and w20, w0, #0xff
   91d24:   9100c3e0    add x0, sp, #0x30
   91d28:   940047ae    bl  a3be0 <CString::~CString()>
   91d2c:   f94013f5    ldr x21, [sp, #32]
   91d30:   2a1403e0    mov w0, w20
   91d34:   a94153f3    ldp x19, x20, [sp, #16]
   91d38:   a8c57bfd    ldp x29, x30, [sp], #80
   91d3c:   d65f03c0    ret
   91d40:   12001c14    and w20, w0, #0xff
   91d44:   9400362f    bl  9f600 <CLogger::Get()>
   91d48:   90000103    adrp    x3, b1000 <_etext+0x1f9c>
   91d4c:   90000121    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   91d50:   910ae063    add x3, x3, #0x2b8
   91d54:   9106a021    add x1, x1, #0x1a8
   91d58:   52800022    mov w2, #0x1
   91d5c:   94003811    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   91d60:   2a1403e0    mov w0, w20
   91d64:   a94153f3    ldp x19, x20, [sp, #16]
   91d68:   a8c57bfd    ldp x29, x30, [sp], #80
   91d6c:   d65f03c0    ret
   91d70:   90000101    adrp    x1, b1000 <_etext+0x1f9c>
   91d74:   9119c021    add x1, x1, #0x670
   91d78:   9100c3e0    add x0, sp, #0x30
   91d7c:   94004821    bl  a3e00 <CString::operator=(char const*)>
   91d80:   17ffffb2    b   91c48 <CUSBSerialFT231XDevice::Configure()+0x68>
   91d84:   9400361f    bl  9f600 <CLogger::Get()>
   91d88:   90000103    adrp    x3, b1000 <_etext+0x1f9c>
   91d8c:   911a0063    add x3, x3, #0x680
   91d90:   aa1503e1    mov x1, x21
   91d94:   52800022    mov w2, #0x1
   91d98:   94003802    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   91d9c:   52800014    mov w20, #0x0
   91da0:   17ffffe1    b   91d24 <CUSBSerialFT231XDevice::Configure()+0x144>
   91da4:   90000101    adrp    x1, b1000 <_etext+0x1f9c>
   91da8:   9119e021    add x1, x1, #0x678
   91dac:   9100c3e0    add x0, sp, #0x30
   91db0:   94004814    bl  a3e00 <CString::operator=(char const*)>
   91db4:   17ffffa5    b   91c48 <CUSBSerialFT231XDevice::Configure()+0x68>
   91db8:   90000101    adrp    x1, b1000 <_etext+0x1f9c>
   91dbc:   9119a021    add x1, x1, #0x668
   91dc0:   9100c3e0    add x0, sp, #0x30
   91dc4:   9400480f    bl  a3e00 <CString::operator=(char const*)>
   91dc8:   17ffffa0    b   91c48 <CUSBSerialFT231XDevice::Configure()+0x68>
   91dcc:   90000101    adrp    x1, b1000 <_etext+0x1f9c>
   91dd0:   d00000e0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   91dd4:   91192021    add x1, x1, #0x648
   91dd8:   9113e000    add x0, x0, #0x4f8
   91ddc:   52800a22    mov w2, #0x51
   91de0:   94002b38    bl  9cac0 <assertion_failed>
   91de4:   94003607    bl  9f600 <CLogger::Get()>
   91de8:   aa1503e1    mov x1, x21
   91dec:   90000103    adrp    x3, b1000 <_etext+0x1f9c>
   91df0:   911a6063    add x3, x3, #0x698
   91df4:   52800022    mov w2, #0x1
   91df8:   52800014    mov w20, #0x0
   91dfc:   940037e9    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   91e00:   17ffffc9    b   91d24 <CUSBSerialFT231XDevice::Configure()+0x144>
   91e04:   d503201f    nop
   91e08:   d503201f    nop
   91e0c:   d503201f    nop

0000000000091e10 <CUSBSerialFT231XDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)>:
   91e10:   a9ba7bfd    stp x29, x30, [sp, #-96]!
   91e14:   910003fd    mov x29, sp
   91e18:   a90153f3    stp x19, x20, [sp, #16]
   91e1c:   2a0103f3    mov w19, w1
   91e20:   2a0203f4    mov w20, w2
   91e24:   a9025bf5    stp x21, x22, [sp, #32]
   91e28:   a90363f7    stp x23, x24, [sp, #48]
   91e2c:   2a0303f8    mov w24, w3
   91e30:   aa0003f7    mov x23, x0
   91e34:   97ffe1c7    bl  8a550 <CUSBFunction::GetHost() const>
   91e38:   b4000f40    cbz x0, 92020 <CUSBSerialFT231XDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x210>
   91e3c:   aa0003f5    mov x21, x0
   91e40:   910103e0    add x0, sp, #0x40
   91e44:   940047a3    bl  a3cd0 <CString::CString()>
   91e48:   71001e7f    cmp w19, #0x7
   91e4c:   54000280    b.eq    91e9c <CUSBSerialFT231XDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x8c>
   91e50:   7100227f    cmp w19, #0x8
   91e54:   54000240    b.eq    91e9c <CUSBSerialFT231XDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x8c>
   91e58:   940035ea    bl  9f600 <CLogger::Get()>
   91e5c:   90000103    adrp    x3, b1000 <_etext+0x1f9c>
   91e60:   90000121    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   91e64:   2a1303e4    mov w4, w19
   91e68:   9112e063    add x3, x3, #0x4b8
   91e6c:   9106a021    add x1, x1, #0x1a8
   91e70:   52800022    mov w2, #0x1
   91e74:   940037cb    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   91e78:   910103e0    add x0, sp, #0x40
   91e7c:   52800013    mov w19, #0x0
   91e80:   94004758    bl  a3be0 <CString::~CString()>
   91e84:   a9425bf5    ldp x21, x22, [sp, #32]
   91e88:   2a1303e0    mov w0, w19
   91e8c:   a94153f3    ldp x19, x20, [sp, #16]
   91e90:   a94363f7    ldp x23, x24, [sp, #48]
   91e94:   a8c67bfd    ldp x29, x30, [sp], #96
   91e98:   d65f03c0    ret
   91e9c:   90000101    adrp    x1, b1000 <_etext+0x1f9c>
   91ea0:   2a1303e2    mov w2, w19
   91ea4:   910ca021    add x1, x1, #0x328
   91ea8:   910103e0    add x0, sp, #0x40
   91eac:   94004d95    bl  a5500 <CString::Format(char const*, ...)>
   91eb0:   7100069f    cmp w20, #0x1
   91eb4:   2a1303f6    mov w22, w19
   91eb8:   54000560    b.eq    91f64 <CUSBSerialFT231XDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x154>
   91ebc:   71000a9f    cmp w20, #0x2
   91ec0:   54000380    b.eq    91f30 <CUSBSerialFT231XDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x120>
   91ec4:   35000254    cbnz    w20, 91f0c <CUSBSerialFT231XDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0xfc>
   91ec8:   90000101    adrp    x1, b1000 <_etext+0x1f9c>
   91ecc:   910d2021    add x1, x1, #0x348
   91ed0:   910103e0    add x0, sp, #0x40
   91ed4:   94004817    bl  a3f30 <CString::Append(char const*)>
   91ed8:   7100071f    cmp w24, #0x1
   91edc:   540003a0    b.eq    91f50 <CUSBSerialFT231XDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x140>
   91ee0:   71000b1f    cmp w24, #0x2
   91ee4:   540004e0    b.eq    91f80 <CUSBSerialFT231XDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x170>
   91ee8:   940035c6    bl  9f600 <CLogger::Get()>
   91eec:   90000103    adrp    x3, b1000 <_etext+0x1f9c>
   91ef0:   90000121    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   91ef4:   2a1803e4    mov w4, w24
   91ef8:   910de063    add x3, x3, #0x378
   91efc:   9106a021    add x1, x1, #0x1a8
   91f00:   52800022    mov w2, #0x1
   91f04:   940037a7    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   91f08:   17ffffdc    b   91e78 <CUSBSerialFT231XDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x68>
   91f0c:   940035bd    bl  9f600 <CLogger::Get()>
   91f10:   90000103    adrp    x3, b1000 <_etext+0x1f9c>
   91f14:   90000121    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   91f18:   2a1403e4    mov w4, w20
   91f1c:   910d8063    add x3, x3, #0x360
   91f20:   9106a021    add x1, x1, #0x1a8
   91f24:   52800022    mov w2, #0x1
   91f28:   9400379e    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   91f2c:   17ffffd3    b   91e78 <CUSBSerialFT231XDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x68>
   91f30:   90000101    adrp    x1, b1000 <_etext+0x1f9c>
   91f34:   910d6021    add x1, x1, #0x358
   91f38:   910103e0    add x0, sp, #0x40
   91f3c:   32170276    orr w22, w19, #0x200
   91f40:   940047fc    bl  a3f30 <CString::Append(char const*)>
   91f44:   7100071f    cmp w24, #0x1
   91f48:   12003ed6    and w22, w22, #0xffff
   91f4c:   54fffca1    b.ne    91ee0 <CUSBSerialFT231XDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0xd0>
   91f50:   90000101    adrp    x1, b1000 <_etext+0x1f9c>
   91f54:   91374021    add x1, x1, #0xdd0
   91f58:   910103e0    add x0, sp, #0x40
   91f5c:   940047f5    bl  a3f30 <CString::Append(char const*)>
   91f60:   1400000d    b   91f94 <CUSBSerialFT231XDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x184>
   91f64:   32180276    orr w22, w19, #0x100
   91f68:   90000101    adrp    x1, b1000 <_etext+0x1f9c>
   91f6c:   910d4021    add x1, x1, #0x350
   91f70:   910103e0    add x0, sp, #0x40
   91f74:   12003ed6    and w22, w22, #0xffff
   91f78:   940047ee    bl  a3f30 <CString::Append(char const*)>
   91f7c:   17ffffd7    b   91ed8 <CUSBSerialFT231XDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0xc8>
   91f80:   90000101    adrp    x1, b1000 <_etext+0x1f9c>
   91f84:   91088021    add x1, x1, #0x220
   91f88:   910103e0    add x0, sp, #0x40
   91f8c:   321402d6    orr w22, w22, #0x1000
   91f90:   940047e8    bl  a3f30 <CString::Append(char const*)>
   91f94:   aa1703e0    mov x0, x23
   91f98:   97ffe162    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   91f9c:   aa0003e1    mov x1, x0
   91fa0:   2a1603e4    mov w4, w22
   91fa4:   aa1503e0    mov x0, x21
   91fa8:   52800007    mov w7, #0x0
   91fac:   d2800006    mov x6, #0x0
   91fb0:   52800005    mov w5, #0x0
   91fb4:   52800083    mov w3, #0x4
   91fb8:   52800802    mov w2, #0x40
   91fbc:   97ffbc15    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   91fc0:   37f803c0    tbnz    w0, #31, 92038 <CUSBSerialFT231XDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x228>
   91fc4:   2905d2f3    stp w19, w20, [x23, #44]
   91fc8:   b90036f8    str w24, [x23, #52]
   91fcc:   9400358d    bl  9f600 <CLogger::Get()>
   91fd0:   aa0003f3    mov x19, x0
   91fd4:   910103e0    add x0, sp, #0x40
   91fd8:   94004782    bl  a3de0 <CString::operator char const*() const>
   91fdc:   90000103    adrp    x3, b1000 <_etext+0x1f9c>
   91fe0:   90000121    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   91fe4:   aa0003e4    mov x4, x0
   91fe8:   911ae063    add x3, x3, #0x6b8
   91fec:   aa1303e0    mov x0, x19
   91ff0:   9106a021    add x1, x1, #0x1a8
   91ff4:   52800082    mov w2, #0x4
   91ff8:   52800033    mov w19, #0x1
   91ffc:   94003769    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   92000:   910103e0    add x0, sp, #0x40
   92004:   940046f7    bl  a3be0 <CString::~CString()>
   92008:   a9425bf5    ldp x21, x22, [sp, #32]
   9200c:   2a1303e0    mov w0, w19
   92010:   a94153f3    ldp x19, x20, [sp, #16]
   92014:   a94363f7    ldp x23, x24, [sp, #48]
   92018:   a8c67bfd    ldp x29, x30, [sp], #96
   9201c:   d65f03c0    ret
   92020:   f00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   92024:   b00000e0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   92028:   91192021    add x1, x1, #0x648
   9202c:   9113e000    add x0, x0, #0x4f8
   92030:   52801422    mov w2, #0xa1
   92034:   94002aa3    bl  9cac0 <assertion_failed>
   92038:   94003572    bl  9f600 <CLogger::Get()>
   9203c:   f00000e3    adrp    x3, b1000 <_etext+0x1f9c>
   92040:   f0000101    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   92044:   9113e063    add x3, x3, #0x4f8
   92048:   9106a021    add x1, x1, #0x1a8
   9204c:   52800022    mov w2, #0x1
   92050:   94003754    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   92054:   17ffff89    b   91e78 <CUSBSerialFT231XDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)+0x68>
    ...

0000000000092060 <CUSBSerialCDCDevice::~CUSBSerialCDCDevice()>:
   92060:   f0000101    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   92064:   91076021    add x1, x1, #0x1d8
   92068:   f9000001    str x1, [x0]
   9206c:   140021a5    b   9a700 <CUSBSerialDevice::~CUSBSerialDevice()>

0000000000092070 <CUSBSerialCDCDevice::~CUSBSerialCDCDevice()>:
   92070:   a9be7bfd    stp x29, x30, [sp, #-32]!
   92074:   f0000101    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   92078:   91076021    add x1, x1, #0x1d8
   9207c:   910003fd    mov x29, sp
   92080:   f9000bf3    str x19, [sp, #16]
   92084:   aa0003f3    mov x19, x0
   92088:   f9000001    str x1, [x0]
   9208c:   9400219d    bl  9a700 <CUSBSerialDevice::~CUSBSerialDevice()>
   92090:   aa1303e0    mov x0, x19
   92094:   f9400bf3    ldr x19, [sp, #16]
   92098:   d2800f01    mov x1, #0x78
   9209c:   a8c27bfd    ldp x29, x30, [sp], #32
   920a0:   140055f0    b   a7860 <operator delete(void*, unsigned long)>
   920a4:   d503201f    nop
   920a8:   d503201f    nop
   920ac:   d503201f    nop

00000000000920b0 <CUSBSerialCDCDevice::CUSBSerialCDCDevice(CUSBFunction*)>:
   920b0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   920b4:   d2800002    mov x2, #0x0
   920b8:   910003fd    mov x29, sp
   920bc:   f9000bf3    str x19, [sp, #16]
   920c0:   aa0003f3    mov x19, x0
   920c4:   940022a3    bl  9ab50 <CUSBSerialDevice::CUSBSerialDevice(CUSBFunction*, unsigned long)>
   920c8:   f0000101    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   920cc:   91076021    add x1, x1, #0x1d8
   920d0:   aa1303e0    mov x0, x19
   920d4:   f9000261    str x1, [x19]
   920d8:   97ffe182    bl  8a6e0 <CUSBFunction::GetInterfaceNumber() const>
   920dc:   2a0003e4    mov w4, w0
   920e0:   52800003    mov w3, #0x0
   920e4:   aa1303e0    mov x0, x19
   920e8:   52800002    mov w2, #0x0
   920ec:   52800141    mov w1, #0xa
   920f0:   3901d264    strb    w4, [x19, #116]
   920f4:   97ffe143    bl  8a600 <CUSBFunction::SelectInterfaceByClass(unsigned char, unsigned char, unsigned char)>
   920f8:   3901d660    strb    w0, [x19, #117]
   920fc:   f9400bf3    ldr x19, [sp, #16]
   92100:   a8c27bfd    ldp x29, x30, [sp], #32
   92104:   d65f03c0    ret
   92108:   d503201f    nop
   9210c:   d503201f    nop

0000000000092110 <CUSBSerialCDCDevice::SetLineCoding()>:
   92110:   a9b67bfd    stp x29, x30, [sp, #-160]!
   92114:   910003fd    mov x29, sp
   92118:   a90153f3    stp x19, x20, [sp, #16]
   9211c:   aa0003f3    mov x19, x0
   92120:   9101bff4    add x20, sp, #0x6f
   92124:   927ae694    and x20, x20, #0xffffffffffffffc0
   92128:   b9403400    ldr w0, [x0, #52]
   9212c:   29450a63    ldp w3, w2, [x19, #40]
   92130:   b9403261    ldr w1, [x19, #48]
   92134:   7100041f    cmp w0, #0x1
   92138:   1a9f07e0    cset    w0, ne
   9213c:   531f1800    ubfiz   w0, w0, #1, #7
   92140:   f90013f5    str x21, [sp, #32]
   92144:   b9000283    str w3, [x20]
   92148:   39001280    strb    w0, [x20, #4]
   9214c:   7100043f    cmp w1, #0x1
   92150:   39001a82    strb    w2, [x20, #6]
   92154:   54000160    b.eq    92180 <CUSBSerialCDCDevice::SetLineCoding()+0x70>
   92158:   7100083f    cmp w1, #0x2
   9215c:   54000120    b.eq    92180 <CUSBSerialCDCDevice::SetLineCoding()+0x70>
   92160:   52800002    mov w2, #0x0
   92164:   34000101    cbz w1, 92184 <CUSBSerialCDCDevice::SetLineCoding()+0x74>
   92168:   f00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   9216c:   d00000e0    adrp    x0, b0000 <_etext+0xf9c>
   92170:   911b2021    add x1, x1, #0x6c8
   92174:   91106000    add x0, x0, #0x418
   92178:   52800ee2    mov w2, #0x77
   9217c:   94002a51    bl  9cac0 <assertion_failed>
   92180:   2a0103e2    mov w2, w1
   92184:   aa1303e0    mov x0, x19
   92188:   39001682    strb    w2, [x20, #5]
   9218c:   97ffe0f1    bl  8a550 <CUSBFunction::GetHost() const>
   92190:   aa0003f5    mov x21, x0
   92194:   aa1303e0    mov x0, x19
   92198:   97ffe0e2    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   9219c:   aa0003e1    mov x1, x0
   921a0:   3941d265    ldrb    w5, [x19, #116]
   921a4:   aa1403e6    mov x6, x20
   921a8:   aa1503e0    mov x0, x21
   921ac:   528000e7    mov w7, #0x7
   921b0:   52800004    mov w4, #0x0
   921b4:   52800403    mov w3, #0x20
   921b8:   52800422    mov w2, #0x21
   921bc:   97ffbb95    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   921c0:   52800021    mov w1, #0x1
   921c4:   37f800c0    tbnz    w0, #31, 921dc <CUSBSerialCDCDevice::SetLineCoding()+0xcc>
   921c8:   a94153f3    ldp x19, x20, [sp, #16]
   921cc:   2a0103e0    mov w0, w1
   921d0:   f94013f5    ldr x21, [sp, #32]
   921d4:   a8ca7bfd    ldp x29, x30, [sp], #160
   921d8:   d65f03c0    ret
   921dc:   94003509    bl  9f600 <CLogger::Get()>
   921e0:   f00000e3    adrp    x3, b1000 <_etext+0x1f9c>
   921e4:   f0000101    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   921e8:   911b8063    add x3, x3, #0x6e0
   921ec:   91092021    add x1, x1, #0x248
   921f0:   52800042    mov w2, #0x2
   921f4:   940036eb    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   921f8:   52800001    mov w1, #0x0
   921fc:   a94153f3    ldp x19, x20, [sp, #16]
   92200:   2a0103e0    mov w0, w1
   92204:   f94013f5    ldr x21, [sp, #32]
   92208:   a8ca7bfd    ldp x29, x30, [sp], #160
   9220c:   d65f03c0    ret

0000000000092210 <CUSBSerialCDCDevice::SetBaudRate(unsigned int)>:
   92210:   b9002801    str w1, [x0, #40]
   92214:   17ffffbf    b   92110 <CUSBSerialCDCDevice::SetLineCoding()>
   92218:   d503201f    nop
   9221c:   d503201f    nop

0000000000092220 <CUSBSerialCDCDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)>:
   92220:   29058801    stp w1, w2, [x0, #44]
   92224:   b9003403    str w3, [x0, #52]
   92228:   17ffffba    b   92110 <CUSBSerialCDCDevice::SetLineCoding()>
   9222c:   d503201f    nop

0000000000092230 <CUSBSerialCDCDevice::Configure()>:
   92230:   a9be7bfd    stp x29, x30, [sp, #-32]!
   92234:   910003fd    mov x29, sp
   92238:   3941d401    ldrb    w1, [x0, #117]
   9223c:   36000281    tbz w1, #0, 9228c <CUSBSerialCDCDevice::Configure()+0x5c>
   92240:   f9000bf3    str x19, [sp, #16]
   92244:   aa0003f3    mov x19, x0
   92248:   940022aa    bl  9acf0 <CUSBSerialDevice::Configure()>
   9224c:   360000a0    tbz w0, #0, 92260 <CUSBSerialCDCDevice::Configure()+0x30>
   92250:   aa1303e0    mov x0, x19
   92254:   f9400bf3    ldr x19, [sp, #16]
   92258:   a8c27bfd    ldp x29, x30, [sp], #32
   9225c:   17ffffad    b   92110 <CUSBSerialCDCDevice::SetLineCoding()>
   92260:   940034e8    bl  9f600 <CLogger::Get()>
   92264:   f00000e3    adrp    x3, b1000 <_etext+0x1f9c>
   92268:   f0000101    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9226c:   910ae063    add x3, x3, #0x2b8
   92270:   91092021    add x1, x1, #0x248
   92274:   52800022    mov w2, #0x1
   92278:   940036ca    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   9227c:   f9400bf3    ldr x19, [sp, #16]
   92280:   52800000    mov w0, #0x0
   92284:   a8c27bfd    ldp x29, x30, [sp], #32
   92288:   d65f03c0    ret
   9228c:   f0000101    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   92290:   91092021    add x1, x1, #0x248
   92294:   97ffe0c7    bl  8a5b0 <CUSBFunction::ConfigurationError(char const*) const>
   92298:   52800000    mov w0, #0x0
   9229c:   a8c27bfd    ldp x29, x30, [sp], #32
   922a0:   d65f03c0    ret
    ...

00000000000922b0 <CUSBTouchScreenDevice::~CUSBTouchScreenDevice()>:
   922b0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   922b4:   910003fd    mov x29, sp
   922b8:   f0000101    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   922bc:   91098021    add x1, x1, #0x260
   922c0:   f9000bf3    str x19, [sp, #16]
   922c4:   aa0003f3    mov x19, x0
   922c8:   f9411400    ldr x0, [x0, #552]
   922cc:   f9000261    str x1, [x19]
   922d0:   b4000080    cbz x0, 922e0 <CUSBTouchScreenDevice::~CUSBTouchScreenDevice()+0x30>
   922d4:   f9400001    ldr x1, [x0]
   922d8:   f9400421    ldr x1, [x1, #8]
   922dc:   d63f0020    blr x1
   922e0:   aa1303e0    mov x0, x19
   922e4:   f901167f    str xzr, [x19, #552]
   922e8:   f9400bf3    ldr x19, [sp, #16]
   922ec:   a8c27bfd    ldp x29, x30, [sp], #32
   922f0:   17ffec20    b   8d370 <CUSBHIDDevice::~CUSBHIDDevice()>
   922f4:   d503201f    nop
   922f8:   d503201f    nop
   922fc:   d503201f    nop

0000000000092300 <CUSBTouchScreenDevice::~CUSBTouchScreenDevice()>:
   92300:   a9be7bfd    stp x29, x30, [sp, #-32]!
   92304:   910003fd    mov x29, sp
   92308:   f0000101    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9230c:   91098021    add x1, x1, #0x260
   92310:   f9000bf3    str x19, [sp, #16]
   92314:   aa0003f3    mov x19, x0
   92318:   f9411400    ldr x0, [x0, #552]
   9231c:   f9000261    str x1, [x19]
   92320:   b4000080    cbz x0, 92330 <CUSBTouchScreenDevice::~CUSBTouchScreenDevice()+0x30>
   92324:   f9400001    ldr x1, [x0]
   92328:   f9400421    ldr x1, [x1, #8]
   9232c:   d63f0020    blr x1
   92330:   aa1303e0    mov x0, x19
   92334:   f901167f    str xzr, [x19, #552]
   92338:   97ffec0e    bl  8d370 <CUSBHIDDevice::~CUSBHIDDevice()>
   9233c:   aa1303e0    mov x0, x19
   92340:   f9400bf3    ldr x19, [sp, #16]
   92344:   d2804601    mov x1, #0x230
   92348:   a8c27bfd    ldp x29, x30, [sp], #32
   9234c:   14005545    b   a7860 <operator delete(void*, unsigned long)>

0000000000092350 <CUSBTouchScreenDevice::CUSBTouchScreenDevice(CUSBFunction*)>:
   92350:   a9be7bfd    stp x29, x30, [sp, #-32]!
   92354:   52800002    mov w2, #0x0
   92358:   910003fd    mov x29, sp
   9235c:   f9000bf3    str x19, [sp, #16]
   92360:   aa0003f3    mov x19, x0
   92364:   97ffebeb    bl  8d310 <CUSBHIDDevice::CUSBHIDDevice(CUSBFunction*, unsigned int)>
   92368:   f0000103    adrp    x3, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9236c:   91098063    add x3, x3, #0x260
   92370:   f901167f    str xzr, [x19, #552]
   92374:   52800001    mov w1, #0x0
   92378:   91012260    add x0, x19, #0x48
   9237c:   d2803482    mov x2, #0x1a4
   92380:   f9000263    str x3, [x19]
   92384:   94005265    bl  a6d18 <memset>
   92388:   9107b261    add x1, x19, #0x1ec
   9238c:   9107da60    add x0, x19, #0x1f6
   92390:   3800143f    strb    wzr, [x1], #1
   92394:   eb00003f    cmp x1, x0
   92398:   54ffffc1    b.ne    92390 <CUSBTouchScreenDevice::CUSBTouchScreenDevice(CUSBFunction*)+0x40>
   9239c:   f9400bf3    ldr x19, [sp, #16]
   923a0:   a8c27bfd    ldp x29, x30, [sp], #32
   923a4:   d65f03c0    ret
   923a8:   d503201f    nop
   923ac:   d503201f    nop

00000000000923b0 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)>:
   923b0:   340011c2    cbz w2, 925e8 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x238>
   923b4:   5280000d    mov w13, #0x0
   923b8:   52800007    mov w7, #0x0
   923bc:   5280000a    mov w10, #0x0
   923c0:   52800009    mov w9, #0x0
   923c4:   5280000e    mov w14, #0x0
   923c8:   5280000b    mov w11, #0x0
   923cc:   52800008    mov w8, #0x0
   923d0:   5280000f    mov w15, #0x0
   923d4:   d503201f    nop
   923d8:   39400023    ldrb    w3, [x1]
   923dc:   12000464    and w4, w3, #0x3
   923e0:   7100089f    cmp w4, #0x2
   923e4:   54000940    b.eq    9250c <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x15c>
   923e8:   71000c9f    cmp w4, #0x3
   923ec:   540007c0    b.eq    924e4 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x134>
   923f0:   7100049f    cmp w4, #0x1
   923f4:   54000680    b.eq    924c4 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x114>
   923f8:   91000421    add x1, x1, #0x1
   923fc:   51000442    sub w2, w2, #0x1
   92400:   52800004    mov w4, #0x0
   92404:   121e1463    and w3, w3, #0xfc
   92408:   7101d07f    cmp w3, #0x74
   9240c:   54000680    b.eq    924dc <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x12c>
   92410:   54000448    b.hi    92498 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0xe8>
   92414:   7100107f    cmp w3, #0x4
   92418:   54000860    b.eq    92524 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x174>
   9241c:   7100207f    cmp w3, #0x8
   92420:   54000041    b.ne    92428 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x78>
   92424:   2a0403eb    mov w11, w4
   92428:   710005ff    cmp w15, #0x1
   9242c:   54000460    b.eq    924b8 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x108>
   92430:   710009ff    cmp w15, #0x2
   92434:   540000a0    b.eq    92448 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x98>
   92438:   7102007f    cmp w3, #0x80
   9243c:   5280000f    mov w15, #0x0
   92440:   54000041    b.ne    92448 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x98>
   92444:   1b091d47    madd    w7, w10, w9, w7
   92448:   35fffc82    cbnz    w2, 923d8 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x28>
   9244c:   11001ce2    add w2, w7, #0x7
   92450:   53037c42    lsr w2, w2, #3
   92454:   b9405003    ldr w3, [x0, #80]
   92458:   b9004802    str w2, [x0, #72]
   9245c:   7100047f    cmp w3, #0x1
   92460:   54000b89    b.ls    925d0 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x220>
   92464:   b9405801    ldr w1, [x0, #88]
   92468:   34000141    cbz w1, 92490 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0xe0>
   9246c:   9101a000    add x0, x0, #0x68
   92470:   52800502    mov w2, #0x28
   92474:   9ba20062    umaddl  x2, w3, w2, x0
   92478:   14000002    b   92480 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0xd0>
   9247c:   54000aa0    b.eq    925d0 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x220>
   92480:   b9400001    ldr w1, [x0]
   92484:   9100a000    add x0, x0, #0x28
   92488:   eb00005f    cmp x2, x0
   9248c:   35ffff81    cbnz    w1, 9247c <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0xcc>
   92490:   52800000    mov w0, #0x0
   92494:   d65f03c0    ret
   92498:   7102107f    cmp w3, #0x84
   9249c:   54000480    b.eq    9252c <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x17c>
   924a0:   7102507f    cmp w3, #0x94
   924a4:   54000501    b.ne    92544 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x194>
   924a8:   710005ff    cmp w15, #0x1
   924ac:   2a0403e9    mov w9, w4
   924b0:   54fffc01    b.ne    92430 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x80>
   924b4:   2a0403e9    mov w9, w4
   924b8:   5280002f    mov w15, #0x1
   924bc:   35fff8e2    cbnz    w2, 923d8 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x28>
   924c0:   17ffffe3    b   9244c <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x9c>
   924c4:   121e1463    and w3, w3, #0xfc
   924c8:   39400424    ldrb    w4, [x1, #1]
   924cc:   51000842    sub w2, w2, #0x2
   924d0:   7101d07f    cmp w3, #0x74
   924d4:   91000821    add x1, x1, #0x2
   924d8:   54fff9c1    b.ne    92410 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x60>
   924dc:   2a0403ea    mov w10, w4
   924e0:   17ffffd2    b   92428 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x78>
   924e4:   3940042c    ldrb    w12, [x1, #1]
   924e8:   51001442    sub w2, w2, #0x5
   924ec:   91001421    add x1, x1, #0x5
   924f0:   385fd026    ldurb   w6, [x1, #-3]
   924f4:   385fe025    ldurb   w5, [x1, #-2]
   924f8:   385ff024    ldurb   w4, [x1, #-1]
   924fc:   aa062186    orr x6, x12, x6, lsl #8
   92500:   aa0540c5    orr x5, x6, x5, lsl #16
   92504:   2a0460a4    orr w4, w5, w4, lsl #24
   92508:   17ffffbf    b   92404 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x54>
   9250c:   39400425    ldrb    w5, [x1, #1]
   92510:   51000c42    sub w2, w2, #0x3
   92514:   91000c21    add x1, x1, #0x3
   92518:   385ff024    ldurb   w4, [x1, #-1]
   9251c:   2a0420a4    orr w4, w5, w4, lsl #8
   92520:   17ffffb9    b   92404 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x54>
   92524:   2a0403e8    mov w8, w4
   92528:   17ffffc0    b   92428 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x78>
   9252c:   710005ff    cmp w15, #0x1
   92530:   2a0403ee    mov w14, w4
   92534:   54fff7e1    b.ne    92430 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x80>
   92538:   2a0903e4    mov w4, w9
   9253c:   2a0403e9    mov w9, w4
   92540:   17ffffde    b   924b8 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x108>
   92544:   710005ff    cmp w15, #0x1
   92548:   54000541    b.ne    925f0 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x240>
   9254c:   7102807f    cmp w3, #0xa0
   92550:   540001c1    b.ne    92588 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x1d8>
   92554:   7100089f    cmp w4, #0x2
   92558:   7a4d0900    ccmp    w8, #0xd, #0x0, eq
   9255c:   54fff761    b.ne    92448 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x98>
   92560:   7100897f    cmp w11, #0x22
   92564:   528001a8    mov w8, #0xd
   92568:   54fff701    b.ne    92448 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x98>
   9256c:   39413003    ldrb    w3, [x0, #76]
   92570:   5280004f    mov w15, #0x2
   92574:   35fff6a3    cbnz    w3, 92448 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x98>
   92578:   3901300e    strb    w14, [x0, #76]
   9257c:   110020e7    add w7, w7, #0x8
   92580:   35fff2c2    cbnz    w2, 923d8 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x28>
   92584:   17ffffb2    b   9244c <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x9c>
   92588:   7103007f    cmp w3, #0xc0
   9258c:   540001c0    b.eq    925c4 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x214>
   92590:   7102007f    cmp w3, #0x80
   92594:   54fff921    b.ne    924b8 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x108>
   92598:   12000484    and w4, w4, #0x3
   9259c:   7100089f    cmp w4, #0x2
   925a0:   54fff521    b.ne    92444 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x94>
   925a4:   7101517f    cmp w11, #0x54
   925a8:   7a4d0900    ccmp    w8, #0xd, #0x0, eq
   925ac:   54fff4c1    b.ne    92444 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x94>
   925b0:   7100053f    cmp w9, #0x1
   925b4:   54fff6e1    b.ne    92490 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0xe0>
   925b8:   290aa807    stp w7, w10, [x0, #84]
   925bc:   1b091d47    madd    w7, w10, w9, w7
   925c0:   17ffffa2    b   92448 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x98>
   925c4:   5280000f    mov w15, #0x0
   925c8:   35fff082    cbnz    w2, 923d8 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x28>
   925cc:   17ffffa0    b   9244c <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x9c>
   925d0:   710001ff    cmp w15, #0x0
   925d4:   1a9f17e0    cset    w0, eq
   925d8:   7100007f    cmp w3, #0x0
   925dc:   1a9f07e1    cset    w1, ne
   925e0:   0a010000    and w0, w0, w1
   925e4:   d65f03c0    ret
   925e8:   5280000f    mov w15, #0x0
   925ec:   17ffff9a    b   92454 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0xa4>
   925f0:   710009ff    cmp w15, #0x2
   925f4:   54000120    b.eq    92618 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x268>
   925f8:   7102807f    cmp w3, #0xa0
   925fc:   7a410880    ccmp    w4, #0x1, #0x0, eq
   92600:   54fff1c1    b.ne    92438 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x88>
   92604:   7100351f    cmp w8, #0xd
   92608:   7a440960    ccmp    w11, #0x4, #0x0, eq
   9260c:   1a9f17ef    cset    w15, eq
   92610:   35ffee42    cbnz    w2, 923d8 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x28>
   92614:   17ffff8e    b   9244c <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x9c>
   92618:   7102807f    cmp w3, #0xa0
   9261c:   54fff3a0    b.eq    92490 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0xe0>
   92620:   7103007f    cmp w3, #0xc0
   92624:   54000340    b.eq    9268c <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x2dc>
   92628:   7102007f    cmp w3, #0x80
   9262c:   54fff0e1    b.ne    92448 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x98>
   92630:   12000484    and w4, w4, #0x3
   92634:   7100089f    cmp w4, #0x2
   92638:   54fff061    b.ne    92444 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x94>
   9263c:   7100051f    cmp w8, #0x1
   92640:   54000380    b.eq    926b0 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x300>
   92644:   7100351f    cmp w8, #0xd
   92648:   54ffefe1    b.ne    92444 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x94>
   9264c:   7101097f    cmp w11, #0x42
   92650:   54000740    b.eq    92738 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x388>
   92654:   7101457f    cmp w11, #0x51
   92658:   540005c0    b.eq    92710 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x360>
   9265c:   7100c17f    cmp w11, #0x30
   92660:   54ffef21    b.ne    92444 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x94>
   92664:   7100053f    cmp w9, #0x1
   92668:   54fff141    b.ne    92490 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0xe0>
   9266c:   710025bf    cmp w13, #0x9
   92670:   54ffeea8    b.hi    92444 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x94>
   92674:   d37e7da3    ubfiz   x3, x13, #2, #32
   92678:   8b2d4063    add x3, x3, w13, uxtw
   9267c:   8b030c03    add x3, x0, x3, lsl #3
   92680:   290da867    stp w7, w10, [x3, #108]
   92684:   1b091d47    madd    w7, w10, w9, w7
   92688:   17ffff70    b   92448 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x98>
   9268c:   710025bf    cmp w13, #0x9
   92690:   5280002f    mov w15, #0x1
   92694:   54ffeda8    b.hi    92448 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x98>
   92698:   b9405003    ldr w3, [x0, #80]
   9269c:   0b0f01ad    add w13, w13, w15
   926a0:   0b0f0063    add w3, w3, w15
   926a4:   b9005003    str w3, [x0, #80]
   926a8:   35ffe982    cbnz    w2, 923d8 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x28>
   926ac:   17ffff68    b   9244c <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x9c>
   926b0:   7100c17f    cmp w11, #0x30
   926b4:   540001a0    b.eq    926e8 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x338>
   926b8:   7100c57f    cmp w11, #0x31
   926bc:   54ffec41    b.ne    92444 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x94>
   926c0:   7100053f    cmp w9, #0x1
   926c4:   54ffee61    b.ne    92490 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0xe0>
   926c8:   710025bf    cmp w13, #0x9
   926cc:   54ffebc8    b.hi    92444 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x94>
   926d0:   d37e7da3    ubfiz   x3, x13, #2, #32
   926d4:   8b2d4063    add x3, x3, w13, uxtw
   926d8:   8b030c03    add x3, x0, x3, lsl #3
   926dc:   290fa867    stp w7, w10, [x3, #124]
   926e0:   1b091d47    madd    w7, w10, w9, w7
   926e4:   17ffff59    b   92448 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x98>
   926e8:   7100053f    cmp w9, #0x1
   926ec:   54ffed21    b.ne    92490 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0xe0>
   926f0:   710025bf    cmp w13, #0x9
   926f4:   54ffea88    b.hi    92444 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x94>
   926f8:   d37e7da3    ubfiz   x3, x13, #2, #32
   926fc:   8b2d4063    add x3, x3, w13, uxtw
   92700:   8b030c03    add x3, x0, x3, lsl #3
   92704:   290ea867    stp w7, w10, [x3, #116]
   92708:   1b091d47    madd    w7, w10, w9, w7
   9270c:   17ffff4f    b   92448 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x98>
   92710:   7100053f    cmp w9, #0x1
   92714:   54ffebe1    b.ne    92490 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0xe0>
   92718:   710025bf    cmp w13, #0x9
   9271c:   54ffe948    b.hi    92444 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x94>
   92720:   d37e7da3    ubfiz   x3, x13, #2, #32
   92724:   8b2d4063    add x3, x3, w13, uxtw
   92728:   8b030c03    add x3, x0, x3, lsl #3
   9272c:   290ca867    stp w7, w10, [x3, #100]
   92730:   1b091d47    madd    w7, w10, w9, w7
   92734:   17ffff45    b   92448 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x98>
   92738:   7100053f    cmp w9, #0x1
   9273c:   54ffeaa1    b.ne    92490 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0xe0>
   92740:   710025bf    cmp w13, #0x9
   92744:   54ffe808    b.hi    92444 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x94>
   92748:   d37e7da3    ubfiz   x3, x13, #2, #32
   9274c:   8b2d4063    add x3, x3, w13, uxtw
   92750:   8b030c03    add x3, x0, x3, lsl #3
   92754:   290ba867    stp w7, w10, [x3, #92]
   92758:   1b091d47    madd    w7, w10, w9, w7
   9275c:   17ffff3b    b   92448 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)+0x98>

0000000000092760 <CUSBTouchScreenDevice::Configure()>:
   92760:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   92764:   910003fd    mov x29, sp
   92768:   52800421    mov w1, #0x21
   9276c:   a90153f3    stp x19, x20, [sp, #16]
   92770:   aa0003f4    mov x20, x0
   92774:   a9025bf5    stp x21, x22, [sp, #32]
   92778:   a90363f7    stp x23, x24, [sp, #48]
   9277c:   97ffdf81    bl  8a580 <CUSBFunction::GetDescriptor(unsigned char)>
   92780:   b40000c0    cbz x0, 92798 <CUSBTouchScreenDevice::Configure()+0x38>
   92784:   aa0003f3    mov x19, x0
   92788:   39401c00    ldrb    w0, [x0, #7]
   9278c:   39402275    ldrb    w21, [x19, #8]
   92790:   2a152015    orr w21, w0, w21, lsl #8
   92794:   350001b5    cbnz    w21, 927c8 <CUSBTouchScreenDevice::Configure()+0x68>
   92798:   f0000101    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9279c:   910b2021    add x1, x1, #0x2c8
   927a0:   aa1403e0    mov x0, x20
   927a4:   97ffdf83    bl  8a5b0 <CUSBFunction::ConfigurationError(char const*) const>
   927a8:   52800013    mov w19, #0x0
   927ac:   910003bf    mov sp, x29
   927b0:   2a1303e0    mov w0, w19
   927b4:   a94153f3    ldp x19, x20, [sp, #16]
   927b8:   a9425bf5    ldp x21, x22, [sp, #32]
   927bc:   a94363f7    ldp x23, x24, [sp, #48]
   927c0:   a8c47bfd    ldp x29, x30, [sp], #64
   927c4:   d65f03c0    ret
   927c8:   2a1503e1    mov w1, w21
   927cc:   aa1403e0    mov x0, x20
   927d0:   d1000421    sub x1, x1, #0x1
   927d4:   b2401421    orr x1, x1, #0x3f
   927d8:   91010021    add x1, x1, #0x40
   927dc:   927cec21    and x1, x1, #0xfffffffffffffff0
   927e0:   cb2163ff    sub sp, sp, x1
   927e4:   97ffdf5b    bl  8a550 <CUSBFunction::GetHost() const>
   927e8:   aa0003f7    mov x23, x0
   927ec:   aa1403e0    mov x0, x20
   927f0:   97ffdf4c    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   927f4:   39401a78    ldrb    w24, [x19, #6]
   927f8:   aa0003e1    mov x1, x0
   927fc:   9100fff6    add x22, sp, #0x3f
   92800:   aa1403e0    mov x0, x20
   92804:   aa0103f3    mov x19, x1
   92808:   927ae6d6    and x22, x22, #0xffffffffffffffc0
   9280c:   97ffdfb5    bl  8a6e0 <CUSBFunction::GetInterfaceNumber() const>
   92810:   12001c07    and w7, w0, #0xff
   92814:   aa1303e1    mov x1, x19
   92818:   2a1803e2    mov w2, w24
   9281c:   aa1703e0    mov x0, x23
   92820:   2a1503e5    mov w5, w21
   92824:   aa1603e4    mov x4, x22
   92828:   12800fc6    mov w6, #0xffffff81
   9282c:   52800003    mov w3, #0x0
   92830:   97ffba40    bl  81130 <CUSBHostController::GetDescriptor(CUSBEndpoint*, unsigned char, unsigned char, void*, unsigned int, unsigned char, unsigned short)>
   92834:   6b15001f    cmp w0, w21
   92838:   2a0003e2    mov w2, w0
   9283c:   54000120    b.eq    92860 <CUSBTouchScreenDevice::Configure()+0x100>
   92840:   94003370    bl  9f600 <CLogger::Get()>
   92844:   d00000e3    adrp    x3, b0000 <_etext+0xf9c>
   92848:   f0000101    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9284c:   9121c063    add x3, x3, #0x870
   92850:   910b2021    add x1, x1, #0x2c8
   92854:   52800022    mov w2, #0x1
   92858:   94003552    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   9285c:   17ffffd3    b   927a8 <CUSBTouchScreenDevice::Configure()+0x48>
   92860:   aa1603e1    mov x1, x22
   92864:   aa1403e0    mov x0, x20
   92868:   97fffed2    bl  923b0 <CUSBTouchScreenDevice::DecodeReportDescriptor(unsigned char const*, unsigned int)>
   9286c:   36000260    tbz w0, #0, 928b8 <CUSBTouchScreenDevice::Configure()+0x158>
   92870:   b9404a81    ldr w1, [x20, #72]
   92874:   aa1403e0    mov x0, x20
   92878:   97ffeaea    bl  8d420 <CUSBHIDDevice::ConfigureHID(unsigned int)>
   9287c:   360002e0    tbz w0, #0, 928d8 <CUSBTouchScreenDevice::Configure()+0x178>
   92880:   aa1403e0    mov x0, x20
   92884:   97ffec13    bl  8d8d0 <CUSBHIDDevice::StartRequest()>
   92888:   12001c13    and w19, w0, #0xff
   9288c:   3607f8e0    tbz w0, #0, 927a8 <CUSBTouchScreenDevice::Configure()+0x48>
   92890:   f9411680    ldr x0, [x20, #552]
   92894:   b5000320    cbnz    x0, 928f8 <CUSBTouchScreenDevice::Configure()+0x198>
   92898:   d2800900    mov x0, #0x48
   9289c:   940053c9    bl  a77c0 <operator new(unsigned long)>
   928a0:   aa0003f5    mov x21, x0
   928a4:   d2800002    mov x2, #0x0
   928a8:   d2800001    mov x1, #0x0
   928ac:   940024a1    bl  9bb30 <CTouchScreenDevice::CTouchScreenDevice(void (*)(void*), void*)>
   928b0:   f9011695    str x21, [x20, #552]
   928b4:   17ffffbe    b   927ac <CUSBTouchScreenDevice::Configure()+0x4c>
   928b8:   94003352    bl  9f600 <CLogger::Get()>
   928bc:   f00000e3    adrp    x3, b1000 <_etext+0x1f9c>
   928c0:   f0000101    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   928c4:   911be063    add x3, x3, #0x6f8
   928c8:   910b2021    add x1, x1, #0x2c8
   928cc:   52800022    mov w2, #0x1
   928d0:   94003534    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   928d4:   17ffffb5    b   927a8 <CUSBTouchScreenDevice::Configure()+0x48>
   928d8:   9400334a    bl  9f600 <CLogger::Get()>
   928dc:   b00000e3    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   928e0:   f0000101    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   928e4:   9107c063    add x3, x3, #0x1f0
   928e8:   910b2021    add x1, x1, #0x2c8
   928ec:   52800022    mov w2, #0x1
   928f0:   9400352c    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   928f4:   17ffffad    b   927a8 <CUSBTouchScreenDevice::Configure()+0x48>
   928f8:   f00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   928fc:   f00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   92900:   911c6021    add x1, x1, #0x718
   92904:   911cc000    add x0, x0, #0x730
   92908:   52800f42    mov w2, #0x7a
   9290c:   9400286d    bl  9cac0 <assertion_failed>

0000000000092910 <CUSBTouchScreenDevice::GetValue(void const*, CUSBTouchScreenDevice::TReportItem const&, unsigned int)>:
   92910:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   92914:   910003fd    mov x29, sp
   92918:   b4000400    cbz x0, 92998 <CUSBTouchScreenDevice::GetValue(void const*, CUSBTouchScreenDevice::TReportItem const&, unsigned int)+0x88>
   9291c:   b9400424    ldr w4, [x1, #4]
   92920:   7100809f    cmp w4, #0x20
   92924:   54000468    b.hi    929b0 <CUSBTouchScreenDevice::GetValue(void const*, CUSBTouchScreenDevice::TReportItem const&, unsigned int)+0xa0>
   92928:   aa0003e3    mov x3, x0
   9292c:   2a0203e0    mov w0, w2
   92930:   34000244    cbz w4, 92978 <CUSBTouchScreenDevice::GetValue(void const*, CUSBTouchScreenDevice::TReportItem const&, unsigned int)+0x68>
   92934:   b9400020    ldr w0, [x1]
   92938:   7100609f    cmp w4, #0x18
   9293c:   53037c01    lsr w1, w0, #3
   92940:   12000805    and w5, w0, #0x7
   92944:   b8614862    ldr w2, [x3, w1, uxtw]
   92948:   53037c00    lsr w0, w0, #3
   9294c:   8b000063    add x3, x3, x0
   92950:   1ac52440    lsr w0, w2, w5
   92954:   54000169    b.ls    92980 <CUSBTouchScreenDevice::GetValue(void const*, CUSBTouchScreenDevice::TReportItem const&, unsigned int)+0x70>
   92958:   b8403062    ldur    w2, [x3, #3]
   9295c:   51006084    sub w4, w4, #0x18
   92960:   52800021    mov w1, #0x1
   92964:   1ac42021    lsl w1, w1, w4
   92968:   51000421    sub w1, w1, #0x1
   9296c:   1ac52442    lsr w2, w2, w5
   92970:   0a020021    and w1, w1, w2
   92974:   33081c20    bfi w0, w1, #24, #8
   92978:   a8c17bfd    ldp x29, x30, [sp], #16
   9297c:   d65f03c0    ret
   92980:   52800021    mov w1, #0x1
   92984:   a8c17bfd    ldp x29, x30, [sp], #16
   92988:   1ac42021    lsl w1, w1, w4
   9298c:   51000421    sub w1, w1, #0x1
   92990:   0a000020    and w0, w1, w0
   92994:   d65f03c0    ret
   92998:   f00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   9299c:   b00000e0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   929a0:   911c6021    add x1, x1, #0x718
   929a4:   91260000    add x0, x0, #0x980
   929a8:   528036e2    mov w2, #0x1b7
   929ac:   94002845    bl  9cac0 <assertion_failed>
   929b0:   f00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   929b4:   f00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   929b8:   911c6021    add x1, x1, #0x718
   929bc:   911d0000    add x0, x0, #0x740
   929c0:   52803762    mov w2, #0x1bb
   929c4:   9400283f    bl  9cac0 <assertion_failed>
   929c8:   d503201f    nop
   929cc:   d503201f    nop

00000000000929d0 <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)>:
   929d0:   a9b87bfd    stp x29, x30, [sp, #-128]!
   929d4:   910003fd    mov x29, sp
   929d8:   a9025bf5    stp x21, x22, [sp, #32]
   929dc:   aa0003f5    mov x21, x0
   929e0:   f9411400    ldr x0, [x0, #552]
   929e4:   a90153f3    stp x19, x20, [sp, #16]
   929e8:   b4000fc0    cbz x0, 92be0 <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0x210>
   929ec:   aa0103f4    mov x20, x1
   929f0:   b4000521    cbz x1, 92a94 <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0xc4>
   929f4:   b9404aa0    ldr w0, [x21, #72]
   929f8:   6b02001f    cmp w0, w2
   929fc:   540004c1    b.ne    92a94 <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0xc4>
   92a00:   394132a0    ldrb    w0, [x21, #76]
   92a04:   34000080    cbz w0, 92a14 <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0x44>
   92a08:   39400021    ldrb    w1, [x1]
   92a0c:   6b00003f    cmp w1, w0
   92a10:   54000421    b.ne    92a94 <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0xc4>
   92a14:   52800022    mov w2, #0x1
   92a18:   910152a1    add x1, x21, #0x54
   92a1c:   a90363f7    stp x23, x24, [sp, #48]
   92a20:   aa1403e0    mov x0, x20
   92a24:   97ffffbb    bl  92910 <CUSBTouchScreenDevice::GetValue(void const*, CUSBTouchScreenDevice::TReportItem const&, unsigned int)>
   92a28:   7100281f    cmp w0, #0xa
   92a2c:   2a0003f7    mov w23, w0
   92a30:   54001268    b.hi    92c7c <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0x2ac>
   92a34:   34000240    cbz w0, 92a7c <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0xac>
   92a38:   910192b6    add x22, x21, #0x64
   92a3c:   a9046bf9    stp x25, x26, [sp, #64]
   92a40:   12800019    mov w25, #0xffffffff
   92a44:   9101c3f3    add x19, sp, #0x70
   92a48:   8b204278    add x24, x19, w0, uxtw
   92a4c:   d503201f    nop
   92a50:   52800022    mov w2, #0x1
   92a54:   d10022c1    sub x1, x22, #0x8
   92a58:   aa1403e0    mov x0, x20
   92a5c:   97ffffad    bl  92910 <CUSBTouchScreenDevice::GetValue(void const*, CUSBTouchScreenDevice::TReportItem const&, unsigned int)>
   92a60:   350004a0    cbnz    w0, 92af4 <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0x124>
   92a64:   39000279    strb    w25, [x19]
   92a68:   91000673    add x19, x19, #0x1
   92a6c:   9100a2d6    add x22, x22, #0x28
   92a70:   eb18027f    cmp x19, x24
   92a74:   54fffee1    b.ne    92a50 <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0x80>
   92a78:   a9446bf9    ldp x25, x26, [sp, #64]
   92a7c:   d2800013    mov x19, #0x0
   92a80:   9107b2b4    add x20, x21, #0x1ec
   92a84:   9107dab6    add x22, x21, #0x1f6
   92a88:   b94052a4    ldr w4, [x21, #80]
   92a8c:   350002e4    cbnz    w4, 92ae8 <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0x118>
   92a90:   a94363f7    ldp x23, x24, [sp, #48]
   92a94:   a94153f3    ldp x19, x20, [sp, #16]
   92a98:   a9425bf5    ldp x21, x22, [sp, #32]
   92a9c:   a8c87bfd    ldp x29, x30, [sp], #128
   92aa0:   d65f03c0    ret
   92aa4:   34000b17    cbz w23, 92c04 <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0x234>
   92aa8:   38736ac0    ldrb    w0, [x22, x19]
   92aac:   9101c3e2    add x2, sp, #0x70
   92ab0:   52800001    mov w1, #0x0
   92ab4:   14000005    b   92ac8 <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0xf8>
   92ab8:   11000421    add w1, w1, #0x1
   92abc:   91000442    add x2, x2, #0x1
   92ac0:   6b0102ff    cmp w23, w1
   92ac4:   54000a00    b.eq    92c04 <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0x234>
   92ac8:   39400043    ldrb    w3, [x2]
   92acc:   6b00007f    cmp w3, w0
   92ad0:   54ffff41    b.ne    92ab8 <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0xe8>
   92ad4:   6b0102ff    cmp w23, w1
   92ad8:   54000960    b.eq    92c04 <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0x234>
   92adc:   91000673    add x19, x19, #0x1
   92ae0:   6b13009f    cmp w4, w19
   92ae4:   54fffd69    b.ls    92a90 <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0xc0>
   92ae8:   38736a80    ldrb    w0, [x20, x19]
   92aec:   3607ff80    tbz w0, #0, 92adc <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0x10c>
   92af0:   17ffffed    b   92aa4 <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0xd4>
   92af4:   52800022    mov w2, #0x1
   92af8:   910022c1    add x1, x22, #0x8
   92afc:   aa1403e0    mov x0, x20
   92b00:   97ffff84    bl  92910 <CUSBTouchScreenDevice::GetValue(void const*, CUSBTouchScreenDevice::TReportItem const&, unsigned int)>
   92b04:   34fffb00    cbz w0, 92a64 <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0x94>
   92b08:   52800002    mov w2, #0x0
   92b0c:   aa1603e1    mov x1, x22
   92b10:   a90573fb    stp x27, x28, [sp, #80]
   92b14:   aa1403e0    mov x0, x20
   92b18:   97ffff7e    bl  92910 <CUSBTouchScreenDevice::GetValue(void const*, CUSBTouchScreenDevice::TReportItem const&, unsigned int)>
   92b1c:   12001c1b    and w27, w0, #0xff
   92b20:   910042c1    add x1, x22, #0x10
   92b24:   52800002    mov w2, #0x0
   92b28:   aa1403e0    mov x0, x20
   92b2c:   3900027b    strb    w27, [x19]
   92b30:   97ffff78    bl  92910 <CUSBTouchScreenDevice::GetValue(void const*, CUSBTouchScreenDevice::TReportItem const&, unsigned int)>
   92b34:   910062c1    add x1, x22, #0x18
   92b38:   52800002    mov w2, #0x0
   92b3c:   2a0003fa    mov w26, w0
   92b40:   aa1403e0    mov x0, x20
   92b44:   97ffff73    bl  92910 <CUSBTouchScreenDevice::GetValue(void const*, CUSBTouchScreenDevice::TReportItem const&, unsigned int)>
   92b48:   b94052a5    ldr w5, [x21, #80]
   92b4c:   9107daa1    add x1, x21, #0x1f6
   92b50:   2a0003e4    mov w4, w0
   92b54:   52800002    mov w2, #0x0
   92b58:   34000a25    cbz w5, 92c9c <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0x2cc>
   92b5c:   d503201f    nop
   92b60:   385f6023    ldurb   w3, [x1, #-10]
   92b64:   36000083    tbz w3, #0, 92b74 <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0x1a4>
   92b68:   39400023    ldrb    w3, [x1]
   92b6c:   6b1b007f    cmp w3, w27
   92b70:   540005c0    b.eq    92c28 <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0x258>
   92b74:   11000442    add w2, w2, #0x1
   92b78:   91000421    add x1, x1, #0x1
   92b7c:   6b0200bf    cmp w5, w2
   92b80:   54ffff01    b.ne    92b60 <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0x190>
   92b84:   710004a5    subs    w5, w5, #0x1
   92b88:   540008e0    b.eq    92ca4 <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0x2d4>
   92b8c:   9107b2a1    add x1, x21, #0x1ec
   92b90:   52800002    mov w2, #0x0
   92b94:   14000005    b   92ba8 <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0x1d8>
   92b98:   11000442    add w2, w2, #0x1
   92b9c:   91000421    add x1, x1, #0x1
   92ba0:   6b05005f    cmp w2, w5
   92ba4:   54000062    b.cs    92bb0 <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0x1e0>
   92ba8:   39400023    ldrb    w3, [x1]
   92bac:   3707ff63    tbnz    w3, #0, 92b98 <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0x1c8>
   92bb0:   f94116a0    ldr x0, [x21, #552]
   92bb4:   52800001    mov w1, #0x0
   92bb8:   2a1a03e3    mov w3, w26
   92bbc:   290d13e2    stp w2, w4, [sp, #104]
   92bc0:   94002448    bl  9bce0 <CTouchScreenDevice::ReportHandler(TTouchScreenEvent, unsigned int, unsigned int, unsigned int)>
   92bc4:   294d13e2    ldp w2, w4, [sp, #104]
   92bc8:   52800021    mov w1, #0x1
   92bcc:   2a0203fc    mov w28, w2
   92bd0:   8b1c02a0    add x0, x21, x28
   92bd4:   3907b001    strb    w1, [x0, #492]
   92bd8:   3907d81b    strb    w27, [x0, #502]
   92bdc:   14000023    b   92c68 <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0x298>
   92be0:   f00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   92be4:   b00000e0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   92be8:   a90363f7    stp x23, x24, [sp, #48]
   92bec:   911c6021    add x1, x1, #0x718
   92bf0:   9127a000    add x0, x0, #0x9e8
   92bf4:   52801062    mov w2, #0x83
   92bf8:   a9046bf9    stp x25, x26, [sp, #64]
   92bfc:   a90573fb    stp x27, x28, [sp, #80]
   92c00:   940027b0    bl  9cac0 <assertion_failed>
   92c04:   f94116a0    ldr x0, [x21, #552]
   92c08:   52800004    mov w4, #0x0
   92c0c:   52800003    mov w3, #0x0
   92c10:   2a1303e2    mov w2, w19
   92c14:   52800021    mov w1, #0x1
   92c18:   94002432    bl  9bce0 <CTouchScreenDevice::ReportHandler(TTouchScreenEvent, unsigned int, unsigned int, unsigned int)>
   92c1c:   b94052a4    ldr w4, [x21, #80]
   92c20:   38336a9f    strb    wzr, [x20, x19]
   92c24:   17ffffae    b   92adc <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0x10c>
   92c28:   6b05005f    cmp w2, w5
   92c2c:   54fffac0    b.eq    92b84 <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0x1b4>
   92c30:   8b2246a1    add x1, x21, w2, uxtw #1
   92c34:   79440020    ldrh    w0, [x1, #512]
   92c38:   2a0203fc    mov w28, w2
   92c3c:   6b00035f    cmp w26, w0
   92c40:   54000081    b.ne    92c50 <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0x280>
   92c44:   79442820    ldrh    w0, [x1, #532]
   92c48:   6b00009f    cmp w4, w0
   92c4c:   540000e0    b.eq    92c68 <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0x298>
   92c50:   f94116a0    ldr x0, [x21, #552]
   92c54:   2a1a03e3    mov w3, w26
   92c58:   52800041    mov w1, #0x2
   92c5c:   b9006be4    str w4, [sp, #104]
   92c60:   94002420    bl  9bce0 <CTouchScreenDevice::ReportHandler(TTouchScreenEvent, unsigned int, unsigned int, unsigned int)>
   92c64:   b9406be4    ldr w4, [sp, #104]
   92c68:   8b1c06a1    add x1, x21, x28, lsl #1
   92c6c:   7904003a    strh    w26, [x1, #512]
   92c70:   79042824    strh    w4, [x1, #532]
   92c74:   a94573fb    ldp x27, x28, [sp, #80]
   92c78:   17ffff7c    b   92a68 <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0x98>
   92c7c:   f00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   92c80:   f00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   92c84:   a9046bf9    stp x25, x26, [sp, #64]
   92c88:   911c6021    add x1, x1, #0x718
   92c8c:   911d4000    add x0, x0, #0x750
   92c90:   52801262    mov w2, #0x93
   92c94:   a90573fb    stp x27, x28, [sp, #80]
   92c98:   9400278a    bl  9cac0 <assertion_failed>
   92c9c:   12800005    mov w5, #0xffffffff
   92ca0:   17ffffbb    b   92b8c <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0x1bc>
   92ca4:   52800002    mov w2, #0x0
   92ca8:   17ffffc2    b   92bb0 <CUSBTouchScreenDevice::ReportHandler(unsigned char const*, unsigned int)+0x1e0>
   92cac:   00000000    udf #0

0000000000092cb0 <CXHCICommandManager::CXHCICommandManager(CXHCIDevice*)>:
   92cb0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   92cb4:   910003fd    mov x29, sp
   92cb8:   a90153f3    stp x19, x20, [sp, #16]
   92cbc:   aa0003f3    mov x19, x0
   92cc0:   aa0103e0    mov x0, x1
   92cc4:   aa0103f4    mov x20, x1
   92cc8:   f90013f5    str x21, [sp, #32]
   92ccc:   91004275    add x21, x19, #0x10
   92cd0:   f9000261    str x1, [x19]
   92cd4:   97ffc1d3    bl  83420 <CXHCIDevice::GetMMIOSpace()>
   92cd8:   aa0003e4    mov x4, x0
   92cdc:   52800041    mov w1, #0x2
   92ce0:   aa1503e0    mov x0, x21
   92ce4:   aa1403e3    mov x3, x20
   92ce8:   52800802    mov w2, #0x40
   92cec:   f9000664    str x4, [x19, #8]
   92cf0:   97ffcbf0    bl  85cb0 <CXHCIRing::CXHCIRing(TXHCIRingType, unsigned int, CXHCIDevice*)>
   92cf4:   52800021    mov w1, #0x1
   92cf8:   aa1503e0    mov x0, x21
   92cfc:   f900227f    str xzr, [x19, #64]
   92d00:   3900e261    strb    w1, [x19, #56]
   92d04:   97ffcc43    bl  85e10 <CXHCIRing::IsValid() const>
   92d08:   36000260    tbz w0, #0, 92d54 <CXHCICommandManager::CXHCICommandManager(CXHCIDevice*)+0xa4>
   92d0c:   f9400674    ldr x20, [x19, #8]
   92d10:   b40002b4    cbz x20, 92d64 <CXHCICommandManager::CXHCICommandManager(CXHCIDevice*)+0xb4>
   92d14:   aa1503e0    mov x0, x21
   92d18:   97ffcc4e    bl  85e50 <CXHCIRing::GetFirstTRB()>
   92d1c:   90000141    adrp    x1, ba000 <font_data+0x1080>
   92d20:   aa0003f3    mov x19, x0
   92d24:   aa1503e0    mov x0, x21
   92d28:   f9458835    ldr x21, [x1, #2832]
   92d2c:   97ffcd0d    bl  86160 <CXHCIRing::GetCycleState() const>
   92d30:   2a0003e3    mov w3, w0
   92d34:   52800301    mov w1, #0x18
   92d38:   aa030273    orr x19, x19, x3
   92d3c:   aa1403e0    mov x0, x20
   92d40:   aa150262    orr x2, x19, x21
   92d44:   a94153f3    ldp x19, x20, [sp, #16]
   92d48:   f94013f5    ldr x21, [sp, #32]
   92d4c:   a8c37bfd    ldp x29, x30, [sp], #48
   92d50:   17ffcb5c    b   85ac0 <CXHCIMMIOSpace::op_write64(unsigned int, unsigned long)>
   92d54:   a94153f3    ldp x19, x20, [sp, #16]
   92d58:   f94013f5    ldr x21, [sp, #32]
   92d5c:   a8c37bfd    ldp x29, x30, [sp], #48
   92d60:   d65f03c0    ret
   92d64:   f00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   92d68:   b00000e0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   92d6c:   911de021    add x1, x1, #0x778
   92d70:   912dc000    add x0, x0, #0xb70
   92d74:   52800502    mov w2, #0x28
   92d78:   94002752    bl  9cac0 <assertion_failed>
   92d7c:   d503201f    nop

0000000000092d80 <CXHCICommandManager::~CXHCICommandManager()>:
   92d80:   aa0003e1    mov x1, x0
   92d84:   3940e000    ldrb    w0, [x0, #56]
   92d88:   360000a0    tbz w0, #0, 92d9c <CXHCICommandManager::~CXHCICommandManager()+0x1c>
   92d8c:   aa0103e0    mov x0, x1
   92d90:   f900043f    str xzr, [x1, #8]
   92d94:   f801041f    str xzr, [x0], #16
   92d98:   17ffcc16    b   85df0 <CXHCIRing::~CXHCIRing()>
   92d9c:   f00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   92da0:   f00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   92da4:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   92da8:   911de021    add x1, x1, #0x778
   92dac:   910003fd    mov x29, sp
   92db0:   911e4000    add x0, x0, #0x790
   92db4:   528005e2    mov w2, #0x2f
   92db8:   94002742    bl  9cac0 <assertion_failed>
   92dbc:   d503201f    nop

0000000000092dc0 <CXHCICommandManager::IsValid()>:
   92dc0:   91004000    add x0, x0, #0x10
   92dc4:   17ffcc13    b   85e10 <CXHCIRing::IsValid() const>
   92dc8:   d503201f    nop
   92dcc:   d503201f    nop

0000000000092dd0 <CXHCICommandManager::DumpStatus()>:
   92dd0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   92dd4:   910003fd    mov x29, sp
   92dd8:   a90153f3    stp x19, x20, [sp, #16]
   92ddc:   aa0003f3    mov x19, x0
   92de0:   f0000114    adrp    x20, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   92de4:   910b4294    add x20, x20, #0x2d0
   92de8:   3940e000    ldrb    w0, [x0, #56]
   92dec:   360000c0    tbz w0, #0, 92e04 <CXHCICommandManager::DumpStatus()+0x34>
   92df0:   aa1403e1    mov x1, x20
   92df4:   91004260    add x0, x19, #0x10
   92df8:   a94153f3    ldp x19, x20, [sp, #16]
   92dfc:   a8c27bfd    ldp x29, x30, [sp], #32
   92e00:   17ffcce4    b   86190 <CXHCIRing::DumpStatus(char const*)>
   92e04:   940031ff    bl  9f600 <CLogger::Get()>
   92e08:   f9402265    ldr x5, [x19, #64]
   92e0c:   f00000e3    adrp    x3, b1000 <_etext+0x1f9c>
   92e10:   aa1403e1    mov x1, x20
   92e14:   911ea063    add x3, x3, #0x7a8
   92e18:   52800082    mov w2, #0x4
   92e1c:   394030a8    ldrb    w8, [x5, #12]
   92e20:   394034a6    ldrb    w6, [x5, #13]
   92e24:   394038a4    ldrb    w4, [x5, #14]
   92e28:   39403ca7    ldrb    w7, [x5, #15]
   92e2c:   aa062105    orr x5, x8, x6, lsl #8
   92e30:   aa0440a4    orr x4, x5, x4, lsl #16
   92e34:   2a076084    orr w4, w4, w7, lsl #24
   92e38:   940033da    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   92e3c:   aa1403e1    mov x1, x20
   92e40:   91004260    add x0, x19, #0x10
   92e44:   a94153f3    ldp x19, x20, [sp, #16]
   92e48:   a8c27bfd    ldp x29, x30, [sp], #32
   92e4c:   17ffccd1    b   86190 <CXHCIRing::DumpStatus(char const*)>

0000000000092e50 <CXHCICommandManager::DoCommand(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char*)>:
   92e50:   a9bb7bfd    stp x29, x30, [sp, #-80]!
   92e54:   910003fd    mov x29, sp
   92e58:   a90153f3    stp x19, x20, [sp, #16]
   92e5c:   aa0003f4    mov x20, x0
   92e60:   3940e000    ldrb    w0, [x0, #56]
   92e64:   a9025bf5    stp x21, x22, [sp, #32]
   92e68:   a90363f7    stp x23, x24, [sp, #48]
   92e6c:   a9046bf9    stp x25, x26, [sp, #64]
   92e70:   36000ac0    tbz w0, #0, 92fc8 <CXHCICommandManager::DoCommand(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char*)+0x178>
   92e74:   91004299    add x25, x20, #0x10
   92e78:   2a0103f8    mov w24, w1
   92e7c:   aa1903e0    mov x0, x25
   92e80:   2a0203f7    mov w23, w2
   92e84:   2a0303f5    mov w21, w3
   92e88:   2a0403fa    mov w26, w4
   92e8c:   aa0503f6    mov x22, x5
   92e90:   97ffcc18    bl  85ef0 <CXHCIRing::GetEnqueueTRB()>
   92e94:   aa0003f3    mov x19, x0
   92e98:   b4000a40    cbz x0, 92fe0 <CXHCICommandManager::DoCommand(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char*)+0x190>
   92e9c:   d3483ee1    ubfx    x1, x23, #8, #8
   92ea0:   d3505ee0    ubfx    x0, x23, #16, #8
   92ea4:   39000277    strb    w23, [x19]
   92ea8:   d3483ea4    ubfx    x4, x21, #8, #8
   92eac:   d3505ea3    ubfx    x3, x21, #16, #8
   92eb0:   39001275    strb    w21, [x19, #4]
   92eb4:   53187ef7    lsr w23, w23, #24
   92eb8:   53187eb5    lsr w21, w21, #24
   92ebc:   39000661    strb    w1, [x19, #1]
   92ec0:   d3483f42    ubfx    x2, x26, #8, #8
   92ec4:   d3505f41    ubfx    x1, x26, #16, #8
   92ec8:   39000a60    strb    w0, [x19, #2]
   92ecc:   53187f40    lsr w0, w26, #24
   92ed0:   39000e77    strb    w23, [x19, #3]
   92ed4:   39001664    strb    w4, [x19, #5]
   92ed8:   39001a63    strb    w3, [x19, #6]
   92edc:   39001e75    strb    w21, [x19, #7]
   92ee0:   3900227a    strb    w26, [x19, #8]
   92ee4:   39002662    strb    w2, [x19, #9]
   92ee8:   39002a61    strb    w1, [x19, #10]
   92eec:   39002e60    strb    w0, [x19, #11]
   92ef0:   370007d8    tbnz    w24, #0, 92fe8 <CXHCICommandManager::DoCommand(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char*)+0x198>
   92ef4:   aa1903e0    mov x0, x25
   92ef8:   97ffcc9a    bl  86160 <CXHCIRing::GetCycleState() const>
   92efc:   2a0003e2    mov w2, w0
   92f00:   aa1903e0    mov x0, x25
   92f04:   2a180041    orr w1, w2, w24
   92f08:   2a180042    orr w2, w2, w24
   92f0c:   d3483c24    ubfx    x4, x1, #8, #8
   92f10:   d3505c23    ubfx    x3, x1, #16, #8
   92f14:   53187c21    lsr w1, w1, #24
   92f18:   39003262    strb    w2, [x19, #12]
   92f1c:   39003664    strb    w4, [x19, #13]
   92f20:   39003a63    strb    w3, [x19, #14]
   92f24:   39003e61    strb    w1, [x19, #15]
   92f28:   3900e29f    strb    wzr, [x20, #56]
   92f2c:   f9002293    str x19, [x20, #64]
   92f30:   97ffcc44    bl  86040 <CXHCIRing::IncrementEnqueue()>
   92f34:   d5033f9f    dsb sy
   92f38:   f9400680    ldr x0, [x20, #8]
   92f3c:   52800002    mov w2, #0x0
   92f40:   52800001    mov w1, #0x0
   92f44:   97ffcaab    bl  859f0 <CXHCIMMIOSpace::db_write32(unsigned int, unsigned int)>
   92f48:   94004dce    bl  a6680 <CTimer::Get()>
   92f4c:   94004a95    bl  a59a0 <CTimer::GetTicks() const>
   92f50:   2a0003f3    mov w19, w0
   92f54:   14000006    b   92f6c <CXHCICommandManager::DoCommand(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char*)+0x11c>
   92f58:   94004dca    bl  a6680 <CTimer::Get()>
   92f5c:   94004a91    bl  a59a0 <CTimer::GetTicks() const>
   92f60:   4b130001    sub w1, w0, w19
   92f64:   7104ac3f    cmp w1, #0x12b
   92f68:   540001c8    b.hi    92fa0 <CXHCICommandManager::DoCommand(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char*)+0x150>
   92f6c:   3940e281    ldrb    w1, [x20, #56]
   92f70:   3607ff41    tbz w1, #0, 92f58 <CXHCICommandManager::DoCommand(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char*)+0x108>
   92f74:   d5033fbf    dmb sy
   92f78:   b4000076    cbz x22, 92f84 <CXHCICommandManager::DoCommand(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char*)+0x134>
   92f7c:   39412680    ldrb    w0, [x20, #73]
   92f80:   390002c0    strb    w0, [x22]
   92f84:   39412280    ldrb    w0, [x20, #72]
   92f88:   a94153f3    ldp x19, x20, [sp, #16]
   92f8c:   a9425bf5    ldp x21, x22, [sp, #32]
   92f90:   a94363f7    ldp x23, x24, [sp, #48]
   92f94:   a9446bf9    ldp x25, x26, [sp, #64]
   92f98:   a8c57bfd    ldp x29, x30, [sp], #80
   92f9c:   d65f03c0    ret
   92fa0:   52800021    mov w1, #0x1
   92fa4:   a9425bf5    ldp x21, x22, [sp, #32]
   92fa8:   12800020    mov w0, #0xfffffffe
   92fac:   a94363f7    ldp x23, x24, [sp, #48]
   92fb0:   a9446bf9    ldp x25, x26, [sp, #64]
   92fb4:   3900e281    strb    w1, [x20, #56]
   92fb8:   f900229f    str xzr, [x20, #64]
   92fbc:   a94153f3    ldp x19, x20, [sp, #16]
   92fc0:   a8c57bfd    ldp x29, x30, [sp], #80
   92fc4:   d65f03c0    ret
   92fc8:   f00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   92fcc:   f00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   92fd0:   911de021    add x1, x1, #0x778
   92fd4:   911e4000    add x0, x0, #0x790
   92fd8:   528013a2    mov w2, #0x9d
   92fdc:   940026b9    bl  9cac0 <assertion_failed>
   92fe0:   528001e0    mov w0, #0xf
   92fe4:   17ffffe9    b   92f88 <CXHCICommandManager::DoCommand(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char*)+0x138>
   92fe8:   f00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   92fec:   f00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   92ff0:   911de021    add x1, x1, #0x778
   92ff4:   911f4000    add x0, x0, #0x7d0
   92ff8:   52801522    mov w2, #0xa9
   92ffc:   940026b1    bl  9cac0 <assertion_failed>

0000000000093000 <CXHCICommandManager::EnableSlot(unsigned char*)>:
   93000:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   93004:   910003fd    mov x29, sp
   93008:   9100bfe5    add x5, sp, #0x2f
   9300c:   52800004    mov w4, #0x0
   93010:   52800003    mov w3, #0x0
   93014:   52800002    mov w2, #0x0
   93018:   f9000bf3    str x19, [sp, #16]
   9301c:   aa0103f3    mov x19, x1
   93020:   52848001    mov w1, #0x2400
   93024:   97ffff8b    bl  92e50 <CXHCICommandManager::DoCommand(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char*)>
   93028:   7100041f    cmp w0, #0x1
   9302c:   54000101    b.ne    9304c <CXHCICommandManager::EnableSlot(unsigned char*)+0x4c>
   93030:   3940bfe2    ldrb    w2, [sp, #47]
   93034:   51000441    sub w1, w2, #0x1
   93038:   12001c21    and w1, w1, #0xff
   9303c:   71007c3f    cmp w1, #0x1f
   93040:   540000c8    b.hi    93058 <CXHCICommandManager::EnableSlot(unsigned char*)+0x58>
   93044:   b4000133    cbz x19, 93068 <CXHCICommandManager::EnableSlot(unsigned char*)+0x68>
   93048:   39000262    strb    w2, [x19]
   9304c:   f9400bf3    ldr x19, [sp, #16]
   93050:   a8c37bfd    ldp x29, x30, [sp], #48
   93054:   d65f03c0    ret
   93058:   f9400bf3    ldr x19, [sp, #16]
   9305c:   52800120    mov w0, #0x9
   93060:   a8c37bfd    ldp x29, x30, [sp], #48
   93064:   d65f03c0    ret
   93068:   d00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   9306c:   d00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   93070:   911de021    add x1, x1, #0x778
   93074:   911fe000    add x0, x0, #0x7f8
   93078:   52800922    mov w2, #0x49
   9307c:   94002691    bl  9cac0 <assertion_failed>

0000000000093080 <CXHCICommandManager::DisableSlot(unsigned char)>:
   93080:   12001c21    and w1, w1, #0xff
   93084:   51000422    sub w2, w1, #0x1
   93088:   12001c42    and w2, w2, #0xff
   9308c:   71007c5f    cmp w2, #0x1f
   93090:   54000108    b.hi    930b0 <CXHCICommandManager::DisableSlot(unsigned char)+0x30>
   93094:   52850002    mov w2, #0x2800
   93098:   d2800005    mov x5, #0x0
   9309c:   2a016041    orr w1, w2, w1, lsl #24
   930a0:   52800004    mov w4, #0x0
   930a4:   52800003    mov w3, #0x0
   930a8:   52800002    mov w2, #0x0
   930ac:   17ffff69    b   92e50 <CXHCICommandManager::DoCommand(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char*)>
   930b0:   d00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   930b4:   b00000e0    adrp    x0, b0000 <_etext+0xf9c>
   930b8:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   930bc:   911de021    add x1, x1, #0x778
   930c0:   910003fd    mov x29, sp
   930c4:   91068000    add x0, x0, #0x1a0
   930c8:   52800a22    mov w2, #0x51
   930cc:   9400267d    bl  9cac0 <assertion_failed>

00000000000930d0 <CXHCICommandManager::AddressDevice(unsigned char, TXHCIInputContext*, bool)>:
   930d0:   12001c21    and w1, w1, #0xff
   930d4:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   930d8:   910003fd    mov x29, sp
   930dc:   51000424    sub w4, w1, #0x1
   930e0:   12001c84    and w4, w4, #0xff
   930e4:   71007c9f    cmp w4, #0x1f
   930e8:   54000268    b.hi    93134 <CXHCICommandManager::AddressDevice(unsigned char, TXHCIInputContext*, bool)+0x64>
   930ec:   12001c63    and w3, w3, #0xff
   930f0:   53081c21    lsl w1, w1, #24
   930f4:   f240007f    tst x3, #0x1
   930f8:   52858004    mov w4, #0x2c00
   930fc:   5285c003    mov w3, #0x2e00
   93100:   2a040024    orr w4, w1, w4
   93104:   2a030021    orr w1, w1, w3
   93108:   1a840021    csel    w1, w1, w4, eq
   9310c:   b4000202    cbz x2, 9314c <CXHCICommandManager::AddressDevice(unsigned char, TXHCIInputContext*, bool)+0x7c>
   93110:   f0000123    adrp    x3, ba000 <font_data+0x1080>
   93114:   a8c17bfd    ldp x29, x30, [sp], #16
   93118:   d2800005    mov x5, #0x0
   9311c:   52800004    mov w4, #0x0
   93120:   f9458866    ldr x6, [x3, #2832]
   93124:   aa060043    orr x3, x2, x6
   93128:   2a0200c2    orr w2, w6, w2
   9312c:   d360fc63    lsr x3, x3, #32
   93130:   17ffff48    b   92e50 <CXHCICommandManager::DoCommand(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char*)>
   93134:   d00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   93138:   b00000e0    adrp    x0, b0000 <_etext+0xf9c>
   9313c:   911de021    add x1, x1, #0x778
   93140:   91068000    add x0, x0, #0x1a0
   93144:   52800b42    mov w2, #0x5a
   93148:   9400265e    bl  9cac0 <assertion_failed>
   9314c:   d00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   93150:   900000e0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   93154:   911de021    add x1, x1, #0x778
   93158:   912a0000    add x0, x0, #0xa80
   9315c:   52800c42    mov w2, #0x62
   93160:   94002658    bl  9cac0 <assertion_failed>
   93164:   d503201f    nop
   93168:   d503201f    nop
   9316c:   d503201f    nop

0000000000093170 <CXHCICommandManager::ConfigureEndpoint(unsigned char, TXHCIInputContext*, bool)>:
   93170:   12001c21    and w1, w1, #0xff
   93174:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   93178:   910003fd    mov x29, sp
   9317c:   51000424    sub w4, w1, #0x1
   93180:   12001c84    and w4, w4, #0xff
   93184:   71007c9f    cmp w4, #0x1f
   93188:   54000248    b.hi    931d0 <CXHCICommandManager::ConfigureEndpoint(unsigned char, TXHCIInputContext*, bool)+0x60>
   9318c:   12001c63    and w3, w3, #0xff
   93190:   53081c21    lsl w1, w1, #24
   93194:   52864004    mov w4, #0x3200
   93198:   f240007f    tst x3, #0x1
   9319c:   32140423    orr w3, w1, #0x3000
   931a0:   2a040021    orr w1, w1, w4
   931a4:   1a831021    csel    w1, w1, w3, ne
   931a8:   b4000202    cbz x2, 931e8 <CXHCICommandManager::ConfigureEndpoint(unsigned char, TXHCIInputContext*, bool)+0x78>
   931ac:   f0000123    adrp    x3, ba000 <font_data+0x1080>
   931b0:   a8c17bfd    ldp x29, x30, [sp], #16
   931b4:   d2800005    mov x5, #0x0
   931b8:   52800004    mov w4, #0x0
   931bc:   f9458866    ldr x6, [x3, #2832]
   931c0:   aa060043    orr x3, x2, x6
   931c4:   2a0200c2    orr w2, w6, w2
   931c8:   d360fc63    lsr x3, x3, #32
   931cc:   17ffff21    b   92e50 <CXHCICommandManager::DoCommand(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char*)>
   931d0:   d00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   931d4:   b00000e0    adrp    x0, b0000 <_etext+0xf9c>
   931d8:   911de021    add x1, x1, #0x778
   931dc:   91068000    add x0, x0, #0x1a0
   931e0:   52800d22    mov w2, #0x69
   931e4:   94002637    bl  9cac0 <assertion_failed>
   931e8:   d00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   931ec:   900000e0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   931f0:   911de021    add x1, x1, #0x778
   931f4:   912a0000    add x0, x0, #0xa80
   931f8:   52800e22    mov w2, #0x71
   931fc:   94002631    bl  9cac0 <assertion_failed>

0000000000093200 <CXHCICommandManager::EvaluateContext(unsigned char, TXHCIInputContext*)>:
   93200:   12001c21    and w1, w1, #0xff
   93204:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   93208:   910003fd    mov x29, sp
   9320c:   51000423    sub w3, w1, #0x1
   93210:   12001c63    and w3, w3, #0xff
   93214:   71007c7f    cmp w3, #0x1f
   93218:   540001a8    b.hi    9324c <CXHCICommandManager::EvaluateContext(unsigned char, TXHCIInputContext*)+0x4c>
   9321c:   52868003    mov w3, #0x3400
   93220:   2a016061    orr w1, w3, w1, lsl #24
   93224:   b4000202    cbz x2, 93264 <CXHCICommandManager::EvaluateContext(unsigned char, TXHCIInputContext*)+0x64>
   93228:   f0000123    adrp    x3, ba000 <font_data+0x1080>
   9322c:   a8c17bfd    ldp x29, x30, [sp], #16
   93230:   d2800005    mov x5, #0x0
   93234:   52800004    mov w4, #0x0
   93238:   f9458866    ldr x6, [x3, #2832]
   9323c:   aa060043    orr x3, x2, x6
   93240:   2a0200c2    orr w2, w6, w2
   93244:   d360fc63    lsr x3, x3, #32
   93248:   17ffff02    b   92e50 <CXHCICommandManager::DoCommand(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char*)>
   9324c:   d00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   93250:   b00000e0    adrp    x0, b0000 <_etext+0xf9c>
   93254:   911de021    add x1, x1, #0x778
   93258:   91068000    add x0, x0, #0x1a0
   9325c:   52800ee2    mov w2, #0x77
   93260:   94002618    bl  9cac0 <assertion_failed>
   93264:   d00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   93268:   900000e0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   9326c:   911de021    add x1, x1, #0x778
   93270:   912a0000    add x0, x0, #0xa80
   93274:   52800f62    mov w2, #0x7b
   93278:   94002612    bl  9cac0 <assertion_failed>
   9327c:   d503201f    nop

0000000000093280 <CXHCICommandManager::NoOp()>:
   93280:   d2800005    mov x5, #0x0
   93284:   52800004    mov w4, #0x0
   93288:   52800003    mov w3, #0x0
   9328c:   52800002    mov w2, #0x0
   93290:   528b8001    mov w1, #0x5c00
   93294:   17fffeef    b   92e50 <CXHCICommandManager::DoCommand(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char*)>
   93298:   d503201f    nop
   9329c:   d503201f    nop

00000000000932a0 <CXHCICommandManager::CommandCompleted(TXHCITRB*, unsigned char, unsigned char)>:
   932a0:   b4000201    cbz x1, 932e0 <CXHCICommandManager::CommandCompleted(TXHCITRB*, unsigned char, unsigned char)+0x40>
   932a4:   3940e004    ldrb    w4, [x0, #56]
   932a8:   37000084    tbnz    w4, #0, 932b8 <CXHCICommandManager::CommandCompleted(TXHCITRB*, unsigned char, unsigned char)+0x18>
   932ac:   f9402004    ldr x4, [x0, #64]
   932b0:   eb01009f    cmp x4, x1
   932b4:   54000040    b.eq    932bc <CXHCICommandManager::CommandCompleted(TXHCITRB*, unsigned char, unsigned char)+0x1c>
   932b8:   d65f03c0    ret
   932bc:   12001c42    and w2, w2, #0xff
   932c0:   12001c63    and w3, w3, #0xff
   932c4:   f900201f    str xzr, [x0, #64]
   932c8:   39012002    strb    w2, [x0, #72]
   932cc:   39012403    strb    w3, [x0, #73]
   932d0:   d5033fbf    dmb sy
   932d4:   52800021    mov w1, #0x1
   932d8:   3900e001    strb    w1, [x0, #56]
   932dc:   d65f03c0    ret
   932e0:   d00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   932e4:   d00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   932e8:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   932ec:   911de021    add x1, x1, #0x778
   932f0:   910003fd    mov x29, sp
   932f4:   91202000    add x0, x0, #0x808
   932f8:   52801a62    mov w2, #0xd3
   932fc:   940025f1    bl  9cac0 <assertion_failed>

0000000000093300 <CUSBAudioControlDevice::~CUSBAudioControlDevice()>:
   93300:   a9be7bfd    stp x29, x30, [sp, #-32]!
   93304:   910003fd    mov x29, sp
   93308:   d0000101    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9330c:   910ba021    add x1, x1, #0x2e8
   93310:   f9000bf3    str x19, [sp, #16]
   93314:   aa0003f3    mov x19, x0
   93318:   b9483000    ldr w0, [x0, #2096]
   9331c:   f9000261    str x1, [x19]
   93320:   350000e0    cbnz    w0, 9333c <CUSBAudioControlDevice::~CUSBAudioControlDevice()+0x3c>
   93324:   9100a260    add x0, x19, #0x28
   93328:   94000c0a    bl  96350 <CUSBAudioFunctionTopology::~CUSBAudioFunctionTopology()>
   9332c:   aa1303e0    mov x0, x19
   93330:   f9400bf3    ldr x19, [sp, #16]
   93334:   a8c27bfd    ldp x29, x30, [sp], #32
   93338:   17ffdb66    b   8a0d0 <CUSBFunction::~CUSBFunction()>
   9333c:   940029c9    bl  9da60 <CDeviceNameService::Get()>
   93340:   d0000101    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   93344:   b9483262    ldr w2, [x19, #2096]
   93348:   52800003    mov w3, #0x0
   9334c:   910d2021    add x1, x1, #0x348
   93350:   940029f0    bl  9db10 <CDeviceNameService::RemoveDevice(char const*, unsigned int, bool)>
   93354:   b9483261    ldr w1, [x19, #2096]
   93358:   f0000120    adrp    x0, ba000 <font_data+0x1080>
   9335c:   91238000    add x0, x0, #0x8e0
   93360:   940052f0    bl  a7f20 <CNumberPool::FreeNumber(unsigned int)>
   93364:   9100a260    add x0, x19, #0x28
   93368:   94000bfa    bl  96350 <CUSBAudioFunctionTopology::~CUSBAudioFunctionTopology()>
   9336c:   aa1303e0    mov x0, x19
   93370:   f9400bf3    ldr x19, [sp, #16]
   93374:   a8c27bfd    ldp x29, x30, [sp], #32
   93378:   17ffdb56    b   8a0d0 <CUSBFunction::~CUSBFunction()>
   9337c:   d503201f    nop

0000000000093380 <CUSBAudioControlDevice::~CUSBAudioControlDevice()>:
   93380:   a9be7bfd    stp x29, x30, [sp, #-32]!
   93384:   910003fd    mov x29, sp
   93388:   f9000bf3    str x19, [sp, #16]
   9338c:   aa0003f3    mov x19, x0
   93390:   97ffffdc    bl  93300 <CUSBAudioControlDevice::~CUSBAudioControlDevice()>
   93394:   aa1303e0    mov x0, x19
   93398:   f9400bf3    ldr x19, [sp, #16]
   9339c:   d2810701    mov x1, #0x838
   933a0:   a8c27bfd    ldp x29, x30, [sp], #32
   933a4:   1400512f    b   a7860 <operator delete(void*, unsigned long)>
   933a8:   d503201f    nop
   933ac:   d503201f    nop

00000000000933b0 <CUSBAudioControlDevice::CUSBAudioControlDevice(CUSBFunction*)>:
   933b0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   933b4:   910003fd    mov x29, sp
   933b8:   f9000bf3    str x19, [sp, #16]
   933bc:   aa0003f3    mov x19, x0
   933c0:   97ffdbe8    bl  8a360 <CUSBFunction::CUSBFunction(CUSBFunction*)>
   933c4:   aa1303e0    mov x0, x19
   933c8:   d0000101    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   933cc:   910ba021    add x1, x1, #0x2e8
   933d0:   f8028401    str x1, [x0], #40
   933d4:   94000bdb    bl  96340 <CUSBAudioFunctionTopology::CUSBAudioFunctionTopology()>
   933d8:   d2c00020    mov x0, #0x100000000
   933dc:   f9041a60    str x0, [x19, #2096]
   933e0:   f9400bf3    ldr x19, [sp, #16]
   933e4:   a8c27bfd    ldp x29, x30, [sp], #32
   933e8:   d65f03c0    ret
   933ec:   d503201f    nop

00000000000933f0 <CUSBAudioControlDevice::GetDeviceNumber() const>:
   933f0:   b9483000    ldr w0, [x0, #2096]
   933f4:   34000040    cbz w0, 933fc <CUSBAudioControlDevice::GetDeviceNumber() const+0xc>
   933f8:   d65f03c0    ret
   933fc:   d00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   93400:   d00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   93404:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   93408:   91208021    add x1, x1, #0x820
   9340c:   910003fd    mov x29, sp
   93410:   9120e000    add x0, x0, #0x838
   93414:   52800a42    mov w2, #0x52
   93418:   940025aa    bl  9cac0 <assertion_failed>
   9341c:   d503201f    nop

0000000000093420 <CUSBAudioControlDevice::GetNextStreamingSubDeviceNumber()>:
   93420:   aa0003e1    mov x1, x0
   93424:   b9483400    ldr w0, [x0, #2100]
   93428:   11000402    add w2, w0, #0x1
   9342c:   b9083422    str w2, [x1, #2100]
   93430:   d65f03c0    ret
   93434:   d503201f    nop
   93438:   d503201f    nop
   9343c:   d503201f    nop

0000000000093440 <CUSBAudioControlDevice::GetTerminalType(unsigned char, bool) const>:
   93440:   a9be7bfd    stp x29, x30, [sp, #-32]!
   93444:   910003fd    mov x29, sp
   93448:   a90153f3    stp x19, x20, [sp, #16]
   9344c:   9100a013    add x19, x0, #0x28
   93450:   12001c54    and w20, w2, #0xff
   93454:   aa1303e0    mov x0, x19
   93458:   94000bce    bl  96390 <CUSBAudioFunctionTopology::GetEntity(unsigned char) const>
   9345c:   b4000140    cbz x0, 93484 <CUSBAudioControlDevice::GetTerminalType(unsigned char, bool) const+0x44>
   93460:   aa0003e2    mov x2, x0
   93464:   2a1403e3    mov w3, w20
   93468:   aa1303e0    mov x0, x19
   9346c:   52800001    mov w1, #0x0
   93470:   94000c38    bl  96550 <CUSBAudioFunctionTopology::FindEntity(CUSBAudioEntity::TEntityType, CUSBAudioEntity*, bool) const>
   93474:   b4000080    cbz x0, 93484 <CUSBAudioControlDevice::GetTerminalType(unsigned char, bool) const+0x44>
   93478:   a94153f3    ldp x19, x20, [sp, #16]
   9347c:   a8c27bfd    ldp x29, x30, [sp], #32
   93480:   14000998    b   95ae0 <CUSBAudioTerminal::GetTerminalType() const>
   93484:   a94153f3    ldp x19, x20, [sp, #16]
   93488:   52802000    mov w0, #0x100
   9348c:   a8c27bfd    ldp x29, x30, [sp], #32
   93490:   d65f03c0    ret
   93494:   d503201f    nop
   93498:   d503201f    nop
   9349c:   d503201f    nop

00000000000934a0 <CUSBAudioControlDevice::GetClockSourceID(unsigned char) const>:
   934a0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   934a4:   910003fd    mov x29, sp
   934a8:   a90153f3    stp x19, x20, [sp, #16]
   934ac:   9100a013    add x19, x0, #0x28
   934b0:   aa1303e0    mov x0, x19
   934b4:   94000bb7    bl  96390 <CUSBAudioFunctionTopology::GetEntity(unsigned char) const>
   934b8:   b4000080    cbz x0, 934c8 <CUSBAudioControlDevice::GetClockSourceID(unsigned char) const+0x28>
   934bc:   aa0003f4    mov x20, x0
   934c0:   94000898    bl  95720 <CUSBAudioEntity::GetEntityType() const>
   934c4:   340000c0    cbz w0, 934dc <CUSBAudioControlDevice::GetClockSourceID(unsigned char) const+0x3c>
   934c8:   52800013    mov w19, #0x0
   934cc:   2a1303e0    mov w0, w19
   934d0:   a94153f3    ldp x19, x20, [sp, #16]
   934d4:   a8c27bfd    ldp x29, x30, [sp], #32
   934d8:   d65f03c0    ret
   934dc:   aa1403e0    mov x0, x20
   934e0:   94000984    bl  95af0 <CUSBAudioTerminal::GetClockSourceID() const>
   934e4:   2a0003e1    mov w1, w0
   934e8:   aa1303e0    mov x0, x19
   934ec:   12001c33    and w19, w1, #0xff
   934f0:   94000ba8    bl  96390 <CUSBAudioFunctionTopology::GetEntity(unsigned char) const>
   934f4:   aa0003f4    mov x20, x0
   934f8:   b4fffe80    cbz x0, 934c8 <CUSBAudioControlDevice::GetClockSourceID(unsigned char) const+0x28>
   934fc:   94000889    bl  95720 <CUSBAudioEntity::GetEntityType() const>
   93500:   7100141f    cmp w0, #0x5
   93504:   54fffe41    b.ne    934cc <CUSBAudioControlDevice::GetClockSourceID(unsigned char) const+0x2c>
   93508:   aa1403e0    mov x0, x20
   9350c:   a94153f3    ldp x19, x20, [sp, #16]
   93510:   52800001    mov w1, #0x0
   93514:   a8c27bfd    ldp x29, x30, [sp], #32
   93518:   140008ce    b   95850 <CUSBAudioEntity::GetSourceID(unsigned int) const>
   9351c:   d503201f    nop

0000000000093520 <CUSBAudioControlDevice::GetSelectorUnitID(unsigned char) const>:
   93520:   a9be7bfd    stp x29, x30, [sp, #-32]!
   93524:   910003fd    mov x29, sp
   93528:   a90153f3    stp x19, x20, [sp, #16]
   9352c:   9100a013    add x19, x0, #0x28
   93530:   aa1303e0    mov x0, x19
   93534:   94000b97    bl  96390 <CUSBAudioFunctionTopology::GetEntity(unsigned char) const>
   93538:   b4000080    cbz x0, 93548 <CUSBAudioControlDevice::GetSelectorUnitID(unsigned char) const+0x28>
   9353c:   aa0003f4    mov x20, x0
   93540:   94000878    bl  95720 <CUSBAudioEntity::GetEntityType() const>
   93544:   340000a0    cbz w0, 93558 <CUSBAudioControlDevice::GetSelectorUnitID(unsigned char) const+0x38>
   93548:   a94153f3    ldp x19, x20, [sp, #16]
   9354c:   52800000    mov w0, #0x0
   93550:   a8c27bfd    ldp x29, x30, [sp], #32
   93554:   d65f03c0    ret
   93558:   aa1403e2    mov x2, x20
   9355c:   aa1303e0    mov x0, x19
   93560:   52800023    mov w3, #0x1
   93564:   52800041    mov w1, #0x2
   93568:   94000bfa    bl  96550 <CUSBAudioFunctionTopology::FindEntity(CUSBAudioEntity::TEntityType, CUSBAudioEntity*, bool) const>
   9356c:   b4fffee0    cbz x0, 93548 <CUSBAudioControlDevice::GetSelectorUnitID(unsigned char) const+0x28>
   93570:   a94153f3    ldp x19, x20, [sp, #16]
   93574:   a8c27bfd    ldp x29, x30, [sp], #32
   93578:   1400087a    b   95760 <CUSBAudioEntity::GetID() const>
   9357c:   d503201f    nop

0000000000093580 <CUSBAudioControlDevice::GetNumSources(unsigned char) const>:
   93580:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   93584:   9100a000    add x0, x0, #0x28
   93588:   910003fd    mov x29, sp
   9358c:   94000b81    bl  96390 <CUSBAudioFunctionTopology::GetEntity(unsigned char) const>
   93590:   b4000060    cbz x0, 9359c <CUSBAudioControlDevice::GetNumSources(unsigned char) const+0x1c>
   93594:   a8c17bfd    ldp x29, x30, [sp], #16
   93598:   140008aa    b   95840 <CUSBAudioEntity::GetNumSources() const>
   9359c:   52800000    mov w0, #0x0
   935a0:   a8c17bfd    ldp x29, x30, [sp], #16
   935a4:   d65f03c0    ret
   935a8:   d503201f    nop
   935ac:   d503201f    nop

00000000000935b0 <CUSBAudioControlDevice::GetSourceID(unsigned char, unsigned int) const>:
   935b0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   935b4:   9100a000    add x0, x0, #0x28
   935b8:   910003fd    mov x29, sp
   935bc:   f9000bf3    str x19, [sp, #16]
   935c0:   2a0203f3    mov w19, w2
   935c4:   94000b73    bl  96390 <CUSBAudioFunctionTopology::GetEntity(unsigned char) const>
   935c8:   b40000a0    cbz x0, 935dc <CUSBAudioControlDevice::GetSourceID(unsigned char, unsigned int) const+0x2c>
   935cc:   2a1303e1    mov w1, w19
   935d0:   f9400bf3    ldr x19, [sp, #16]
   935d4:   a8c27bfd    ldp x29, x30, [sp], #32
   935d8:   1400089e    b   95850 <CUSBAudioEntity::GetSourceID(unsigned int) const>
   935dc:   f9400bf3    ldr x19, [sp, #16]
   935e0:   52800000    mov w0, #0x0
   935e4:   a8c27bfd    ldp x29, x30, [sp], #32
   935e8:   d65f03c0    ret
   935ec:   d503201f    nop

00000000000935f0 <CUSBAudioControlDevice::GetFeatureUnitID(unsigned char, bool) const>:
   935f0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   935f4:   910003fd    mov x29, sp
   935f8:   a90153f3    stp x19, x20, [sp, #16]
   935fc:   9100a013    add x19, x0, #0x28
   93600:   aa1303e0    mov x0, x19
   93604:   a9025bf5    stp x21, x22, [sp, #32]
   93608:   12001c35    and w21, w1, #0xff
   9360c:   12001c56    and w22, w2, #0xff
   93610:   2a1503e1    mov w1, w21
   93614:   94000b5f    bl  96390 <CUSBAudioFunctionTopology::GetEntity(unsigned char) const>
   93618:   b40001e0    cbz x0, 93654 <CUSBAudioControlDevice::GetFeatureUnitID(unsigned char, bool) const+0x64>
   9361c:   aa0003f4    mov x20, x0
   93620:   94000840    bl  95720 <CUSBAudioEntity::GetEntityType() const>
   93624:   71000c1f    cmp w0, #0x3
   93628:   54000180    b.eq    93658 <CUSBAudioControlDevice::GetFeatureUnitID(unsigned char, bool) const+0x68>
   9362c:   2a1603e3    mov w3, w22
   93630:   aa1403e2    mov x2, x20
   93634:   aa1303e0    mov x0, x19
   93638:   52800061    mov w1, #0x3
   9363c:   94000bc5    bl  96550 <CUSBAudioFunctionTopology::FindEntity(CUSBAudioEntity::TEntityType, CUSBAudioEntity*, bool) const>
   93640:   b40000a0    cbz x0, 93654 <CUSBAudioControlDevice::GetFeatureUnitID(unsigned char, bool) const+0x64>
   93644:   a94153f3    ldp x19, x20, [sp, #16]
   93648:   a9425bf5    ldp x21, x22, [sp, #32]
   9364c:   a8c37bfd    ldp x29, x30, [sp], #48
   93650:   14000844    b   95760 <CUSBAudioEntity::GetID() const>
   93654:   52800015    mov w21, #0x0
   93658:   a94153f3    ldp x19, x20, [sp, #16]
   9365c:   2a1503e0    mov w0, w21
   93660:   a9425bf5    ldp x21, x22, [sp, #32]
   93664:   a8c37bfd    ldp x29, x30, [sp], #48
   93668:   d65f03c0    ret
   9366c:   d503201f    nop

0000000000093670 <CUSBAudioControlDevice::GetClockSelectorID(unsigned int)>:
   93670:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   93674:   2a0103e2    mov w2, w1
   93678:   910003fd    mov x29, sp
   9367c:   9100a000    add x0, x0, #0x28
   93680:   528000a1    mov w1, #0x5
   93684:   94000b47    bl  963a0 <CUSBAudioFunctionTopology::FindEntity(CUSBAudioEntity::TEntityType, unsigned int) const>
   93688:   b4000060    cbz x0, 93694 <CUSBAudioControlDevice::GetClockSelectorID(unsigned int)+0x24>
   9368c:   a8c17bfd    ldp x29, x30, [sp], #16
   93690:   14000834    b   95760 <CUSBAudioEntity::GetID() const>
   93694:   52800000    mov w0, #0x0
   93698:   a8c17bfd    ldp x29, x30, [sp], #16
   9369c:   d65f03c0    ret

00000000000936a0 <CUSBAudioControlDevice::IsControlSupported(unsigned char, unsigned int, CUSBAudioFeatureUnit::TControl) const>:
   936a0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   936a4:   9100a000    add x0, x0, #0x28
   936a8:   910003fd    mov x29, sp
   936ac:   a90153f3    stp x19, x20, [sp, #16]
   936b0:   2a0203f4    mov w20, w2
   936b4:   f90013f5    str x21, [sp, #32]
   936b8:   2a0303f5    mov w21, w3
   936bc:   94000b35    bl  96390 <CUSBAudioFunctionTopology::GetEntity(unsigned char) const>
   936c0:   b40000a0    cbz x0, 936d4 <CUSBAudioControlDevice::IsControlSupported(unsigned char, unsigned int, CUSBAudioFeatureUnit::TControl) const+0x34>
   936c4:   aa0003f3    mov x19, x0
   936c8:   94000816    bl  95720 <CUSBAudioEntity::GetEntityType() const>
   936cc:   71000c1f    cmp w0, #0x3
   936d0:   540000c0    b.eq    936e8 <CUSBAudioControlDevice::IsControlSupported(unsigned char, unsigned int, CUSBAudioFeatureUnit::TControl) const+0x48>
   936d4:   a94153f3    ldp x19, x20, [sp, #16]
   936d8:   52800000    mov w0, #0x0
   936dc:   f94013f5    ldr x21, [sp, #32]
   936e0:   a8c37bfd    ldp x29, x30, [sp], #48
   936e4:   d65f03c0    ret
   936e8:   2a1503e2    mov w2, w21
   936ec:   2a1403e1    mov w1, w20
   936f0:   aa1303e0    mov x0, x19
   936f4:   94000a73    bl  960c0 <CUSBAudioFeatureUnit::GetControlStatus(unsigned int, CUSBAudioFeatureUnit::TControl) const>
   936f8:   a94153f3    ldp x19, x20, [sp, #16]
   936fc:   71000c1f    cmp w0, #0x3
   93700:   1a9f17e0    cset    w0, eq
   93704:   f94013f5    ldr x21, [sp, #32]
   93708:   a8c37bfd    ldp x29, x30, [sp], #48
   9370c:   d65f03c0    ret

0000000000093710 <CUSBAudioControlDevice::Configure()>:
   93710:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   93714:   52800481    mov w1, #0x24
   93718:   910003fd    mov x29, sp
   9371c:   a90153f3    stp x19, x20, [sp, #16]
   93720:   aa0003f3    mov x19, x0
   93724:   a9025bf5    stp x21, x22, [sp, #32]
   93728:   97ffdb96    bl  8a580 <CUSBFunction::GetDescriptor(unsigned char)>
   9372c:   b4000080    cbz x0, 9373c <CUSBAudioControlDevice::Configure()+0x2c>
   93730:   39400814    ldrb    w20, [x0, #2]
   93734:   7100069f    cmp w20, #0x1
   93738:   540001e0    b.eq    93774 <CUSBAudioControlDevice::Configure()+0x64>
   9373c:   94002fb1    bl  9f600 <CLogger::Get()>
   93740:   d0000101    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   93744:   910d2021    add x1, x1, #0x348
   93748:   d00000e3    adrp    x3, b1000 <_etext+0x1f9c>
   9374c:   91004021    add x1, x1, #0x10
   93750:   91212063    add x3, x3, #0x848
   93754:   52800042    mov w2, #0x2
   93758:   94003192    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   9375c:   52800015    mov w21, #0x0
   93760:   a94153f3    ldp x19, x20, [sp, #16]
   93764:   2a1503e0    mov w0, w21
   93768:   a9425bf5    ldp x21, x22, [sp, #32]
   9376c:   a8c37bfd    ldp x29, x30, [sp], #48
   93770:   d65f03c0    ret
   93774:   aa0003e1    mov x1, x0
   93778:   9100a260    add x0, x19, #0x28
   9377c:   94000bf9    bl  96760 <CUSBAudioFunctionTopology::Parse(TUSBAudioControlInterfaceDescriptor const*)>
   93780:   3607fee0    tbz w0, #0, 9375c <CUSBAudioControlDevice::Configure()+0x4c>
   93784:   aa1303e0    mov x0, x19
   93788:   97ffda8a    bl  8a1b0 <CUSBFunction::Configure()>
   9378c:   12001c15    and w21, w0, #0xff
   93790:   360002c0    tbz w0, #0, 937e8 <CUSBAudioControlDevice::Configure()+0xd8>
   93794:   b9483260    ldr w0, [x19, #2096]
   93798:   350003a0    cbnz    w0, 9380c <CUSBAudioControlDevice::Configure()+0xfc>
   9379c:   d0000116    adrp    x22, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   937a0:   910d22d6    add x22, x22, #0x348
   937a4:   f0000120    adrp    x0, ba000 <font_data+0x1080>
   937a8:   2a1403e1    mov w1, w20
   937ac:   910042c2    add x2, x22, #0x10
   937b0:   91238000    add x0, x0, #0x8e0
   937b4:   940051ab    bl  a7e60 <CNumberPool::AllocateNumber(bool, char const*)>
   937b8:   b9083260    str w0, [x19, #2096]
   937bc:   940028a9    bl  9da60 <CDeviceNameService::Get()>
   937c0:   b9483262    ldr w2, [x19, #2096]
   937c4:   aa1603e1    mov x1, x22
   937c8:   aa1303e3    mov x3, x19
   937cc:   52800004    mov w4, #0x0
   937d0:   940028b0    bl  9da90 <CDeviceNameService::AddDevice(char const*, unsigned int, CDevice*, bool)>
   937d4:   a94153f3    ldp x19, x20, [sp, #16]
   937d8:   2a1503e0    mov w0, w21
   937dc:   a9425bf5    ldp x21, x22, [sp, #32]
   937e0:   a8c37bfd    ldp x29, x30, [sp], #48
   937e4:   d65f03c0    ret
   937e8:   94002f86    bl  9f600 <CLogger::Get()>
   937ec:   d0000101    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   937f0:   910d2021    add x1, x1, #0x348
   937f4:   900000e3    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   937f8:   91004021    add x1, x1, #0x10
   937fc:   9119e063    add x3, x3, #0x678
   93800:   52800042    mov w2, #0x2
   93804:   94003167    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   93808:   17ffffd5    b   9375c <CUSBAudioControlDevice::Configure()+0x4c>
   9380c:   d00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   93810:   d00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   93814:   91208021    add x1, x1, #0x820
   93818:   9106a000    add x0, x0, #0x1a8
   9381c:   52800902    mov w2, #0x48
   93820:   940024a8    bl  9cac0 <assertion_failed>
    ...

0000000000093830 <_GLOBAL__sub_I__ZN22CUSBAudioControlDevice18s_DeviceNumberPoolE>:
   93830:   a9be7bfd    stp x29, x30, [sp, #-32]!
   93834:   910003fd    mov x29, sp
   93838:   528007e2    mov w2, #0x3f
   9383c:   52800021    mov w1, #0x1
   93840:   f9000bf3    str x19, [sp, #16]
   93844:   f0000133    adrp    x19, ba000 <font_data+0x1080>
   93848:   91238273    add x19, x19, #0x8e0
   9384c:   aa1303e0    mov x0, x19
   93850:   94005168    bl  a7df0 <CNumberPool::CNumberPool(unsigned int, unsigned int)>
   93854:   f0000122    adrp    x2, ba000 <font_data+0x1080>
   93858:   900000a0    adrp    x0, a7000 <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int, bool)+0xd0>
   9385c:   aa1303e1    mov x1, x19
   93860:   f9400bf3    ldr x19, [sp, #16]
   93864:   91278042    add x2, x2, #0x9e0
   93868:   a8c27bfd    ldp x29, x30, [sp], #32
   9386c:   91394000    add x0, x0, #0xe50
   93870:   14004748    b   a5590 <__cxa_atexit>
    ...

0000000000093880 <CUSBAudioStreamingDevice::CompletionHandler(CUSBRequest*, void*, void*)>:
   93880:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   93884:   910003fd    mov x29, sp
   93888:   a90153f3    stp x19, x20, [sp, #16]
   9388c:   a9025bf5    stp x21, x22, [sp, #32]
   93890:   b4000420    cbz x0, 93914 <CUSBAudioStreamingDevice::CompletionHandler(CUSBRequest*, void*, void*)+0x94>
   93894:   aa0003f3    mov x19, x0
   93898:   aa0103f5    mov x21, x1
   9389c:   aa0203f4    mov x20, x2
   938a0:   52800016    mov w22, #0x0
   938a4:   97ffb8b3    bl  81b70 <CUSBRequest::GetStatus() const>
   938a8:   350001c0    cbnz    w0, 938e0 <CUSBAudioStreamingDevice::CompletionHandler(CUSBRequest*, void*, void*)+0x60>
   938ac:   aa1303e0    mov x0, x19
   938b0:   97ffb894    bl  81b00 <CUSBRequest::~CUSBRequest()>
   938b4:   aa1303e0    mov x0, x19
   938b8:   d2801201    mov x1, #0x90
   938bc:   97ffb971    bl  81e80 <CUSBRequest::operator delete(void*, unsigned long)>
   938c0:   b4000234    cbz x20, 93904 <CUSBAudioStreamingDevice::CompletionHandler(CUSBRequest*, void*, void*)+0x84>
   938c4:   aa1503e1    mov x1, x21
   938c8:   2a1603e0    mov w0, w22
   938cc:   a9425bf5    ldp x21, x22, [sp, #32]
   938d0:   aa1403f0    mov x16, x20
   938d4:   a94153f3    ldp x19, x20, [sp, #16]
   938d8:   a8c37bfd    ldp x29, x30, [sp], #48
   938dc:   d61f0200    br  x16
   938e0:   aa1303e0    mov x0, x19
   938e4:   97ffb8a7    bl  81b80 <CUSBRequest::GetResultLength() const>
   938e8:   2a0003f6    mov w22, w0
   938ec:   aa1303e0    mov x0, x19
   938f0:   97ffb884    bl  81b00 <CUSBRequest::~CUSBRequest()>
   938f4:   aa1303e0    mov x0, x19
   938f8:   d2801201    mov x1, #0x90
   938fc:   97ffb961    bl  81e80 <CUSBRequest::operator delete(void*, unsigned long)>
   93900:   b5fffe34    cbnz    x20, 938c4 <CUSBAudioStreamingDevice::CompletionHandler(CUSBRequest*, void*, void*)+0x44>
   93904:   a94153f3    ldp x19, x20, [sp, #16]
   93908:   a9425bf5    ldp x21, x22, [sp, #32]
   9390c:   a8c37bfd    ldp x29, x30, [sp], #48
   93910:   d65f03c0    ret
   93914:   d00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   93918:   d00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   9391c:   9121e021    add x1, x1, #0x878
   93920:   91224000    add x0, x0, #0x890
   93924:   52808242    mov w2, #0x412
   93928:   94002466    bl  9cac0 <assertion_failed>
   9392c:   d503201f    nop

0000000000093930 <CUSBAudioStreamingDevice::SyncCompletionHandler(CUSBRequest*, void*, void*)>:
   93930:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   93934:   910003fd    mov x29, sp
   93938:   a90153f3    stp x19, x20, [sp, #16]
   9393c:   b40008e2    cbz x2, 93a58 <CUSBAudioStreamingDevice::SyncCompletionHandler(CUSBRequest*, void*, void*)+0x128>
   93940:   aa0203f3    mov x19, x2
   93944:   39413041    ldrb    w1, [x2, #76]
   93948:   36000961    tbz w1, #0, 93a74 <CUSBAudioStreamingDevice::SyncCompletionHandler(CUSBRequest*, void*, void*)+0x144>
   9394c:   aa0003f4    mov x20, x0
   93950:   b4000a00    cbz x0, 93a90 <CUSBAudioStreamingDevice::SyncCompletionHandler(CUSBRequest*, void*, void*)+0x160>
   93954:   97ffb887    bl  81b70 <CUSBRequest::GetStatus() const>
   93958:   35000260    cbnz    w0, 939a4 <CUSBAudioStreamingDevice::SyncCompletionHandler(CUSBRequest*, void*, void*)+0x74>
   9395c:   aa1403e0    mov x0, x20
   93960:   97ffb868    bl  81b00 <CUSBRequest::~CUSBRequest()>
   93964:   aa1403e0    mov x0, x20
   93968:   d2801201    mov x1, #0x90
   9396c:   97ffb945    bl  81e80 <CUSBRequest::operator delete(void*, unsigned long)>
   93970:   39457260    ldrb    w0, [x19, #348]
   93974:   360000a0    tbz w0, #0, 93988 <CUSBAudioStreamingDevice::SyncCompletionHandler(CUSBRequest*, void*, void*)+0x58>
   93978:   3905727f    strb    wzr, [x19, #348]
   9397c:   a94153f3    ldp x19, x20, [sp, #16]
   93980:   a8c37bfd    ldp x29, x30, [sp], #48
   93984:   d65f03c0    ret
   93988:   f90013f5    str x21, [sp, #32]
   9398c:   d00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   93990:   d00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   93994:   9121e021    add x1, x1, #0x878
   93998:   9122c000    add x0, x0, #0x8b0
   9399c:   52808562    mov w2, #0x42b
   939a0:   94002448    bl  9cac0 <assertion_failed>
   939a4:   aa1403e0    mov x0, x20
   939a8:   97ffb876    bl  81b80 <CUSBRequest::GetResultLength() const>
   939ac:   7100081f    cmp w0, #0x2
   939b0:   54fffd69    b.ls    9395c <CUSBAudioStreamingDevice::SyncCompletionHandler(CUSBRequest*, void*, void*)+0x2c>
   939b4:   aa1403e0    mov x0, x20
   939b8:   f90013f5    str x21, [sp, #32]
   939bc:   97ffb871    bl  81b80 <CUSBRequest::GetResultLength() const>
   939c0:   2a0003f5    mov w21, w0
   939c4:   aa1403e0    mov x0, x20
   939c8:   97ffb84e    bl  81b00 <CUSBRequest::~CUSBRequest()>
   939cc:   aa1403e0    mov x0, x20
   939d0:   d2801201    mov x1, #0x90
   939d4:   97ffb92b    bl  81e80 <CUSBRequest::operator delete(void*, unsigned long)>
   939d8:   39457260    ldrb    w0, [x19, #348]
   939dc:   3607fd80    tbz w0, #0, 9398c <CUSBAudioStreamingDevice::SyncCompletionHandler(CUSBRequest*, void*, void*)+0x5c>
   939e0:   b9402e63    ldr w3, [x19, #44]
   939e4:   71000ebf    cmp w21, #0x3
   939e8:   b9405261    ldr w1, [x19, #80]
   939ec:   b9418260    ldr w0, [x19, #384]
   939f0:   b941c262    ldr w2, [x19, #448]
   939f4:   1b037c21    mul w1, w1, w3
   939f8:   540001a1    b.ne    93a2c <CUSBAudioStreamingDevice::SyncCompletionHandler(CUSBRequest*, void*, void*)+0xfc>
   939fc:   12005c00    and w0, w0, #0xffffff
   93a00:   f94013f5    ldr x21, [sp, #32]
   93a04:   0b020000    add w0, w0, w2
   93a08:   530e7c02    lsr w2, w0, #14
   93a0c:   12003400    and w0, w0, #0x3fff
   93a10:   1b017c41    mul w1, w2, w1
   93a14:   b901c260    str w0, [x19, #448]
   93a18:   b9011261    str w1, [x19, #272]
   93a1c:   3905727f    strb    wzr, [x19, #348]
   93a20:   a94153f3    ldp x19, x20, [sp, #16]
   93a24:   a8c37bfd    ldp x29, x30, [sp], #48
   93a28:   d65f03c0    ret
   93a2c:   0b020000    add w0, w0, w2
   93a30:   f94013f5    ldr x21, [sp, #32]
   93a34:   53107c02    lsr w2, w0, #16
   93a38:   12003c00    and w0, w0, #0xffff
   93a3c:   1b017c41    mul w1, w2, w1
   93a40:   b901c260    str w0, [x19, #448]
   93a44:   b9011261    str w1, [x19, #272]
   93a48:   3905727f    strb    wzr, [x19, #348]
   93a4c:   a94153f3    ldp x19, x20, [sp, #16]
   93a50:   a8c37bfd    ldp x29, x30, [sp], #48
   93a54:   d65f03c0    ret
   93a58:   d00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   93a5c:   d00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   93a60:   f90013f5    str x21, [sp, #32]
   93a64:   9121e021    add x1, x1, #0x878
   93a68:   91000000    add x0, x0, #0x0
   93a6c:   52808422    mov w2, #0x421
   93a70:   94002414    bl  9cac0 <assertion_failed>
   93a74:   d00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   93a78:   d00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   93a7c:   f90013f5    str x21, [sp, #32]
   93a80:   9121e021    add x1, x1, #0x878
   93a84:   91226000    add x0, x0, #0x898
   93a88:   52808462    mov w2, #0x423
   93a8c:   9400240d    bl  9cac0 <assertion_failed>
   93a90:   d00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   93a94:   d00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   93a98:   f90013f5    str x21, [sp, #32]
   93a9c:   9121e021    add x1, x1, #0x878
   93aa0:   91224000    add x0, x0, #0x890
   93aa4:   528084a2    mov w2, #0x425
   93aa8:   94002406    bl  9cac0 <assertion_failed>
   93aac:   d503201f    nop

0000000000093ab0 <CUSBAudioStreamingDevice::InitTerminalControlInfo(CUSBAudioControlDevice*) [clone .part.0]>:
   93ab0:   a9b37bfd    stp x29, x30, [sp, #-208]!
   93ab4:   910003fd    mov x29, sp
   93ab8:   a9025bf5    stp x21, x22, [sp, #32]
   93abc:   aa0003f5    mov x21, x0
   93ac0:   b9405400    ldr w0, [x0, #84]
   93ac4:   340009a0    cbz w0, 93bf8 <CUSBAudioStreamingDevice::InitTerminalControlInfo(CUSBAudioControlDevice*) [clone .part.0]+0x148>
   93ac8:   91027ff6    add x22, sp, #0x9f
   93acc:   a90153f3    stp x19, x20, [sp, #16]
   93ad0:   d2800014    mov x20, #0x0
   93ad4:   927ae6d6    and x22, x22, #0xffffffffffffffc0
   93ad8:   a90363f7    stp x23, x24, [sp, #48]
   93adc:   aa0103f7    mov x23, x1
   93ae0:   a9046bf9    stp x25, x26, [sp, #64]
   93ae4:   91071aba    add x26, x21, #0x1c6
   93ae8:   a90573fb    stp x27, x28, [sp, #80]
   93aec:   91033abc    add x28, x21, #0xce
   93af0:   38746b53    ldrb    w19, [x26, x20]
   93af4:   34000733    cbz w19, 93bd8 <CUSBAudioStreamingDevice::InitTerminalControlInfo(CUSBAudioControlDevice*) [clone .part.0]+0x128>
   93af8:   52800003    mov w3, #0x0
   93afc:   52800002    mov w2, #0x0
   93b00:   2a1303e1    mov w1, w19
   93b04:   aa1703e0    mov x0, x23
   93b08:   97fffee6    bl  936a0 <CUSBAudioControlDevice::IsControlSupported(unsigned char, unsigned int, CUSBAudioFeatureUnit::TControl) const>
   93b0c:   2a0003e4    mov w4, w0
   93b10:   52800023    mov w3, #0x1
   93b14:   2a1303e1    mov w1, w19
   93b18:   aa1703e0    mov x0, x23
   93b1c:   2a0303e2    mov w2, w3
   93b20:   39000384    strb    w4, [x28]
   93b24:   52804038    mov w24, #0x201
   93b28:   97fffede    bl  936a0 <CUSBAudioControlDevice::IsControlSupported(unsigned char, unsigned int, CUSBAudioFeatureUnit::TControl) const>
   93b2c:   52800039    mov w25, #0x1
   93b30:   360009a0    tbz w0, #0, 93c64 <CUSBAudioStreamingDevice::InitTerminalControlInfo(CUSBAudioControlDevice*) [clone .part.0]+0x1b4>
   93b34:   3940c2a0    ldrb    w0, [x21, #48]
   93b38:   53181e73    ubfiz   w19, w19, #8, #8
   93b3c:   37000660    tbnz    w0, #0, 93c08 <CUSBAudioStreamingDevice::InitTerminalControlInfo(CUSBAudioControlDevice*) [clone .part.0]+0x158>
   93b40:   aa1503e0    mov x0, x21
   93b44:   97ffda83    bl  8a550 <CUSBFunction::GetHost() const>
   93b48:   aa0003fb    mov x27, x0
   93b4c:   aa1503e0    mov x0, x21
   93b50:   97ffda74    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   93b54:   aa0003e1    mov x1, x0
   93b58:   aa1603e6    mov x6, x22
   93b5c:   aa1b03e0    mov x0, x27
   93b60:   2a1303e5    mov w5, w19
   93b64:   2a1803e4    mov w4, w24
   93b68:   52800047    mov w7, #0x2
   93b6c:   12800fa3    mov w3, #0xffffff82
   93b70:   12800bc2    mov w2, #0xffffffa1
   93b74:   97ffb527    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   93b78:   37f80880    tbnz    w0, #31, 93c88 <CUSBAudioStreamingDevice::InitTerminalControlInfo(CUSBAudioControlDevice*) [clone .part.0]+0x1d8>
   93b7c:   39c006c1    ldrsb   w1, [x22, #1]
   93b80:   aa1503e0    mov x0, x21
   93b84:   b8006381    stur    w1, [x28, #6]
   93b88:   97ffda72    bl  8a550 <CUSBFunction::GetHost() const>
   93b8c:   aa0003fb    mov x27, x0
   93b90:   aa1503e0    mov x0, x21
   93b94:   97ffda63    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   93b98:   aa0003e1    mov x1, x0
   93b9c:   2a1303e5    mov w5, w19
   93ba0:   2a1803e4    mov w4, w24
   93ba4:   aa1b03e0    mov x0, x27
   93ba8:   aa1603e6    mov x6, x22
   93bac:   52800047    mov w7, #0x2
   93bb0:   12800f83    mov w3, #0xffffff83
   93bb4:   12800bc2    mov w2, #0xffffffa1
   93bb8:   97ffb516    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   93bbc:   37f80900    tbnz    w0, #31, 93cdc <CUSBAudioStreamingDevice::InitTerminalControlInfo(CUSBAudioControlDevice*) [clone .part.0]+0x22c>
   93bc0:   39c006c0    ldrsb   w0, [x22, #1]
   93bc4:   b800a380    stur    w0, [x28, #10]
   93bc8:   52800020    mov w0, #0x1
   93bcc:   39000b99    strb    w25, [x28, #2]
   93bd0:   39000780    strb    w0, [x28, #1]
   93bd4:   b94056a0    ldr w0, [x21, #84]
   93bd8:   91000694    add x20, x20, #0x1
   93bdc:   9100439c    add x28, x28, #0x10
   93be0:   6b14001f    cmp w0, w20
   93be4:   54fff868    b.hi    93af0 <CUSBAudioStreamingDevice::InitTerminalControlInfo(CUSBAudioControlDevice*) [clone .part.0]+0x40>
   93be8:   a94153f3    ldp x19, x20, [sp, #16]
   93bec:   a94363f7    ldp x23, x24, [sp, #48]
   93bf0:   a9446bf9    ldp x25, x26, [sp, #64]
   93bf4:   a94573fb    ldp x27, x28, [sp, #80]
   93bf8:   52800020    mov w0, #0x1
   93bfc:   a9425bf5    ldp x21, x22, [sp, #32]
   93c00:   a8cd7bfd    ldp x29, x30, [sp], #208
   93c04:   d65f03c0    ret
   93c08:   aa1503e0    mov x0, x21
   93c0c:   97ffda51    bl  8a550 <CUSBFunction::GetHost() const>
   93c10:   aa0003fb    mov x27, x0
   93c14:   aa1503e0    mov x0, x21
   93c18:   97ffda42    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   93c1c:   aa0003e1    mov x1, x0
   93c20:   2a1303e5    mov w5, w19
   93c24:   2a1803e4    mov w4, w24
   93c28:   aa1b03e0    mov x0, x27
   93c2c:   aa1603e6    mov x6, x22
   93c30:   52800107    mov w7, #0x8
   93c34:   52800043    mov w3, #0x2
   93c38:   12800bc2    mov w2, #0xffffffa1
   93c3c:   97ffb4f5    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   93c40:   37f80400    tbnz    w0, #31, 93cc0 <CUSBAudioStreamingDevice::InitTerminalControlInfo(CUSBAudioControlDevice*) [clone .part.0]+0x210>
   93c44:   79c002c0    ldrsh   w0, [x22]
   93c48:   7100041f    cmp w0, #0x1
   93c4c:   54fffc41    b.ne    93bd4 <CUSBAudioStreamingDevice::InitTerminalControlInfo(CUSBAudioControlDevice*) [clone .part.0]+0x124>
   93c50:   39c00ec1    ldrsb   w1, [x22, #3]
   93c54:   39c016c0    ldrsb   w0, [x22, #5]
   93c58:   b8006381    stur    w1, [x28, #6]
   93c5c:   b800a380    stur    w0, [x28, #10]
   93c60:   17ffffda    b   93bc8 <CUSBAudioStreamingDevice::InitTerminalControlInfo(CUSBAudioControlDevice*) [clone .part.0]+0x118>
   93c64:   2a1903e3    mov w3, w25
   93c68:   52800002    mov w2, #0x0
   93c6c:   2a1303e1    mov w1, w19
   93c70:   aa1703e0    mov x0, x23
   93c74:   97fffe8b    bl  936a0 <CUSBAudioControlDevice::IsControlSupported(unsigned char, unsigned int, CUSBAudioFeatureUnit::TControl) const>
   93c78:   52804018    mov w24, #0x200
   93c7c:   52800019    mov w25, #0x0
   93c80:   3707f5a0    tbnz    w0, #0, 93b34 <CUSBAudioStreamingDevice::InitTerminalControlInfo(CUSBAudioControlDevice*) [clone .part.0]+0x84>
   93c84:   17ffffd4    b   93bd4 <CUSBAudioStreamingDevice::InitTerminalControlInfo(CUSBAudioControlDevice*) [clone .part.0]+0x124>
   93c88:   94002e5e    bl  9f600 <CLogger::Get()>
   93c8c:   f940faa1    ldr x1, [x21, #496]
   93c90:   d00000e3    adrp    x3, b1000 <_etext+0x1f9c>
   93c94:   91232063    add x3, x3, #0x8c8
   93c98:   52800042    mov w2, #0x2
   93c9c:   94003041    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   93ca0:   a94153f3    ldp x19, x20, [sp, #16]
   93ca4:   52800000    mov w0, #0x0
   93ca8:   a9425bf5    ldp x21, x22, [sp, #32]
   93cac:   a94363f7    ldp x23, x24, [sp, #48]
   93cb0:   a9446bf9    ldp x25, x26, [sp, #64]
   93cb4:   a94573fb    ldp x27, x28, [sp, #80]
   93cb8:   a8cd7bfd    ldp x29, x30, [sp], #208
   93cbc:   d65f03c0    ret
   93cc0:   94002e50    bl  9f600 <CLogger::Get()>
   93cc4:   f940faa1    ldr x1, [x21, #496]
   93cc8:   d00000e3    adrp    x3, b1000 <_etext+0x1f9c>
   93ccc:   91242063    add x3, x3, #0x908
   93cd0:   52800042    mov w2, #0x2
   93cd4:   94003033    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   93cd8:   17fffff2    b   93ca0 <CUSBAudioStreamingDevice::InitTerminalControlInfo(CUSBAudioControlDevice*) [clone .part.0]+0x1f0>
   93cdc:   94002e49    bl  9f600 <CLogger::Get()>
   93ce0:   f940faa1    ldr x1, [x21, #496]
   93ce4:   d00000e3    adrp    x3, b1000 <_etext+0x1f9c>
   93ce8:   9123a063    add x3, x3, #0x8e8
   93cec:   52800042    mov w2, #0x2
   93cf0:   9400302c    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   93cf4:   17ffffeb    b   93ca0 <CUSBAudioStreamingDevice::InitTerminalControlInfo(CUSBAudioControlDevice*) [clone .part.0]+0x1f0>
   93cf8:   d503201f    nop
   93cfc:   d503201f    nop

0000000000093d00 <CUSBAudioStreamingDevice::CUSBAudioStreamingDevice(CUSBFunction*)>:
   93d00:   a9be7bfd    stp x29, x30, [sp, #-32]!
   93d04:   910003fd    mov x29, sp
   93d08:   f9000bf3    str x19, [sp, #16]
   93d0c:   aa0003f3    mov x19, x0
   93d10:   97ffd994    bl  8a360 <CUSBFunction::CUSBFunction(CUSBFunction*)>
   93d14:   d0000100    adrp    x0, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   93d18:   910de000    add x0, x0, #0x378
   93d1c:   f9000260    str x0, [x19]
   93d20:   94002c34    bl  9edf0 <CKernelOptions::Get()>
   93d24:   94002bff    bl  9ed20 <CKernelOptions::GetSoundOption() const>
   93d28:   7100601f    cmp w0, #0x18
   93d2c:   2a0003e1    mov w1, w0
   93d30:   52800064    mov w4, #0x3
   93d34:   54000060    b.eq    93d40 <CUSBAudioStreamingDevice::CUSBAudioStreamingDevice(CUSBFunction*)+0x40>
   93d38:   52800044    mov w4, #0x2
   93d3c:   52800201    mov w1, #0x10
   93d40:   d2c00023    mov x3, #0x100000000
   93d44:   52800022    mov w2, #0x1
   93d48:   b901127f    str wzr, [x19, #272]
   93d4c:   91074260    add x0, x19, #0x1d0
   93d50:   29051261    stp w1, w4, [x19, #40]
   93d54:   a903fe7f    stp xzr, xzr, [x19, #56]
   93d58:   f9002a63    str x3, [x19, #80]
   93d5c:   b9005a7f    str wzr, [x19, #88]
   93d60:   b9010e7f    str wzr, [x19, #268]
   93d64:   b9011a7f    str wzr, [x19, #280]
   93d68:   3905727f    strb    wzr, [x19, #348]
   93d6c:   b901c27f    str wzr, [x19, #448]
   93d70:   79038a7f    strh    wzr, [x19, #452]
   93d74:   b901ce62    str w2, [x19, #460]
   93d78:   94003fd6    bl  a3cd0 <CString::CString()>
   93d7c:   d00000e3    adrp    x3, b1000 <_etext+0x1f9c>
   93d80:   91248063    add x3, x3, #0x920
   93d84:   79038e7f    strh    wzr, [x19, #454]
   93d88:   91017260    add x0, x19, #0x5c
   93d8c:   d2801602    mov x2, #0xb0
   93d90:   7903927f    strh    wzr, [x19, #456]
   93d94:   52800001    mov w1, #0x0
   93d98:   f900fa63    str x3, [x19, #496]
   93d9c:   f9400bf3    ldr x19, [sp, #16]
   93da0:   a8c27bfd    ldp x29, x30, [sp], #32
   93da4:   14004bdd    b   a6d18 <memset>
   93da8:   d503201f    nop
   93dac:   d503201f    nop

0000000000093db0 <CUSBAudioStreamingDevice::GetDeviceInfo() const>:
   93db0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   93db4:   91017001    add x1, x0, #0x5c
   93db8:   910003fd    mov x29, sp
   93dbc:   aa0803e0    mov x0, x8
   93dc0:   d2801602    mov x2, #0xb0
   93dc4:   94004bed    bl  a6d78 <memcpy>
   93dc8:   a8c17bfd    ldp x29, x30, [sp], #16
   93dcc:   d65f03c0    ret

0000000000093dd0 <CUSBAudioStreamingDevice::GetChunkSizeBytes() const>:
   93dd0:   b9411001    ldr w1, [x0, #272]
   93dd4:   34000061    cbz w1, 93de0 <CUSBAudioStreamingDevice::GetChunkSizeBytes() const+0x10>
   93dd8:   b9411000    ldr w0, [x0, #272]
   93ddc:   d65f03c0    ret
   93de0:   d00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   93de4:   d00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   93de8:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   93dec:   9121e021    add x1, x1, #0x878
   93df0:   910003fd    mov x29, sp
   93df4:   9124a000    add x0, x0, #0x928
   93df8:   52805c82    mov w2, #0x2e4
   93dfc:   94002331    bl  9cac0 <assertion_failed>

0000000000093e00 <CUSBAudioStreamingDevice::SelectInputTerminal(unsigned int)>:
   93e00:   a9b57bfd    stp x29, x30, [sp, #-176]!
   93e04:   910003fd    mov x29, sp
   93e08:   b9405402    ldr w2, [x0, #84]
   93e0c:   34000602    cbz w2, 93ecc <CUSBAudioStreamingDevice::SelectInputTerminal(unsigned int)+0xcc>
   93e10:   7100045f    cmp w2, #0x1
   93e14:   a9025bf5    stp x21, x22, [sp, #32]
   93e18:   54000440    b.eq    93ea0 <CUSBAudioStreamingDevice::SelectInputTerminal(unsigned int)+0xa0>
   93e1c:   39413016    ldrb    w22, [x0, #76]
   93e20:   a90153f3    stp x19, x20, [sp, #16]
   93e24:   aa0003f3    mov x19, x0
   93e28:   f9001bf7    str x23, [sp, #48]
   93e2c:   37000636    tbnz    w22, #0, 93ef0 <CUSBAudioStreamingDevice::SelectInputTerminal(unsigned int)+0xf0>
   93e30:   6b01005f    cmp w2, w1
   93e34:   2a0103f4    mov w20, w1
   93e38:   54000689    b.ls    93f08 <CUSBAudioStreamingDevice::SelectInputTerminal(unsigned int)+0x108>
   93e3c:   39471401    ldrb    w1, [x0, #453]
   93e40:   34000701    cbz w1, 93f20 <CUSBAudioStreamingDevice::SelectInputTerminal(unsigned int)+0x120>
   93e44:   9101fff5    add x21, sp, #0x7f
   93e48:   11000681    add w1, w20, #0x1
   93e4c:   927ae6b5    and x21, x21, #0xffffffffffffffc0
   93e50:   390002a1    strb    w1, [x21]
   93e54:   97ffd9bf    bl  8a550 <CUSBFunction::GetHost() const>
   93e58:   aa0003f7    mov x23, x0
   93e5c:   aa1303e0    mov x0, x19
   93e60:   97ffd9b0    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   93e64:   39471665    ldrb    w5, [x19, #453]
   93e68:   52800027    mov w7, #0x1
   93e6c:   aa0003e1    mov x1, x0
   93e70:   aa1503e6    mov x6, x21
   93e74:   aa1703e0    mov x0, x23
   93e78:   3940c264    ldrb    w4, [x19, #48]
   93e7c:   2a0703e3    mov w3, w7
   93e80:   52800422    mov w2, #0x21
   93e84:   53181ca5    ubfiz   w5, w5, #8, #8
   93e88:   53181c84    ubfiz   w4, w4, #8, #8
   93e8c:   97ffb461    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   93e90:   37f80120    tbnz    w0, #31, 93eb4 <CUSBAudioStreamingDevice::SelectInputTerminal(unsigned int)+0xb4>
   93e94:   f9401bf7    ldr x23, [sp, #48]
   93e98:   b9005a74    str w20, [x19, #88]
   93e9c:   a94153f3    ldp x19, x20, [sp, #16]
   93ea0:   52800036    mov w22, #0x1
   93ea4:   2a1603e0    mov w0, w22
   93ea8:   a9425bf5    ldp x21, x22, [sp, #32]
   93eac:   a8cb7bfd    ldp x29, x30, [sp], #176
   93eb0:   d65f03c0    ret
   93eb4:   a94153f3    ldp x19, x20, [sp, #16]
   93eb8:   2a1603e0    mov w0, w22
   93ebc:   a9425bf5    ldp x21, x22, [sp, #32]
   93ec0:   f9401bf7    ldr x23, [sp, #48]
   93ec4:   a8cb7bfd    ldp x29, x30, [sp], #176
   93ec8:   d65f03c0    ret
   93ecc:   d00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   93ed0:   d00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   93ed4:   a90153f3    stp x19, x20, [sp, #16]
   93ed8:   9121e021    add x1, x1, #0x878
   93edc:   91250000    add x0, x0, #0x940
   93ee0:   52806882    mov w2, #0x344
   93ee4:   a9025bf5    stp x21, x22, [sp, #32]
   93ee8:   f9001bf7    str x23, [sp, #48]
   93eec:   940022f5    bl  9cac0 <assertion_failed>
   93ef0:   d00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   93ef4:   d00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   93ef8:   9121e021    add x1, x1, #0x878
   93efc:   91254000    add x0, x0, #0x950
   93f00:   52806942    mov w2, #0x34a
   93f04:   940022ef    bl  9cac0 <assertion_failed>
   93f08:   d00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   93f0c:   d00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   93f10:   9121e021    add x1, x1, #0x878
   93f14:   91258000    add x0, x0, #0x960
   93f18:   52806962    mov w2, #0x34b
   93f1c:   940022e9    bl  9cac0 <assertion_failed>
   93f20:   d00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   93f24:   d00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   93f28:   9121e021    add x1, x1, #0x878
   93f2c:   9125e000    add x0, x0, #0x978
   93f30:   52806982    mov w2, #0x34c
   93f34:   940022e3    bl  9cac0 <assertion_failed>
   93f38:   d503201f    nop
   93f3c:   d503201f    nop

0000000000093f40 <CUSBAudioStreamingDevice::SetMute(bool)>:
   93f40:   a9b67bfd    stp x29, x30, [sp, #-160]!
   93f44:   910003fd    mov x29, sp
   93f48:   294a8803    ldp w3, w2, [x0, #84]
   93f4c:   a90153f3    stp x19, x20, [sp, #16]
   93f50:   6b03005f    cmp w2, w3
   93f54:   540004a2    b.cs    93fe8 <CUSBAudioStreamingDevice::SetMute(bool)+0xa8>
   93f58:   8b225003    add x3, x0, w2, uxtw #4
   93f5c:   39433863    ldrb    w3, [x3, #206]
   93f60:   aa0003f3    mov x19, x0
   93f64:   2a0203e2    mov w2, w2
   93f68:   36000383    tbz w3, #0, 93fd8 <CUSBAudioStreamingDevice::SetMute(bool)+0x98>
   93f6c:   8b020002    add x2, x0, x2
   93f70:   f90013f5    str x21, [sp, #32]
   93f74:   39471842    ldrb    w2, [x2, #454]
   93f78:   34000462    cbz w2, 94004 <CUSBAudioStreamingDevice::SetMute(bool)+0xc4>
   93f7c:   9101bff4    add x20, sp, #0x6f
   93f80:   12001c21    and w1, w1, #0xff
   93f84:   927ae694    and x20, x20, #0xffffffffffffffc0
   93f88:   39000281    strb    w1, [x20]
   93f8c:   97ffd971    bl  8a550 <CUSBFunction::GetHost() const>
   93f90:   aa0003f5    mov x21, x0
   93f94:   aa1303e0    mov x0, x19
   93f98:   97ffd962    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   93f9c:   b9405a65    ldr w5, [x19, #88]
   93fa0:   52800027    mov w7, #0x1
   93fa4:   aa0003e1    mov x1, x0
   93fa8:   2a0703e3    mov w3, w7
   93fac:   aa1503e0    mov x0, x21
   93fb0:   aa1403e6    mov x6, x20
   93fb4:   52802004    mov w4, #0x100
   93fb8:   52800422    mov w2, #0x21
   93fbc:   8b050273    add x19, x19, x5
   93fc0:   39471a65    ldrb    w5, [x19, #454]
   93fc4:   53181ca5    ubfiz   w5, w5, #8, #8
   93fc8:   97ffb412    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   93fcc:   f94013f5    ldr x21, [sp, #32]
   93fd0:   2a2003e3    mvn w3, w0
   93fd4:   531f7c63    lsr w3, w3, #31
   93fd8:   a94153f3    ldp x19, x20, [sp, #16]
   93fdc:   2a0303e0    mov w0, w3
   93fe0:   a8ca7bfd    ldp x29, x30, [sp], #160
   93fe4:   d65f03c0    ret
   93fe8:   d00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   93fec:   d00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   93ff0:   f90013f5    str x21, [sp, #32]
   93ff4:   9121e021    add x1, x1, #0x878
   93ff8:   9126c000    add x0, x0, #0x9b0
   93ffc:   52806c42    mov w2, #0x362
   94000:   940022b0    bl  9cac0 <assertion_failed>
   94004:   b00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   94008:   b00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   9400c:   9121e021    add x1, x1, #0x878
   94010:   91276000    add x0, x0, #0x9d8
   94014:   52806d22    mov w2, #0x369
   94018:   940022aa    bl  9cac0 <assertion_failed>
   9401c:   d503201f    nop

0000000000094020 <CUSBAudioStreamingDevice::SetVolume(unsigned int, int)>:
   94020:   a9b57bfd    stp x29, x30, [sp, #-176]!
   94024:   910003fd    mov x29, sp
   94028:   b9405003    ldr w3, [x0, #80]
   9402c:   a90153f3    stp x19, x20, [sp, #16]
   94030:   a9025bf5    stp x21, x22, [sp, #32]
   94034:   6b01007f    cmp w3, w1
   94038:   f9001bf7    str x23, [sp, #48]
   9403c:   54000ac3    b.cc    94194 <CUSBAudioStreamingDevice::SetVolume(unsigned int, int)+0x174>
   94040:   aa0003f3    mov x19, x0
   94044:   2a0103f5    mov w21, w1
   94048:   294a8001    ldp w1, w0, [x0, #84]
   9404c:   6b01001f    cmp w0, w1
   94050:   54000ae2    b.cs    941ac <CUSBAudioStreamingDevice::SetVolume(unsigned int, int)+0x18c>
   94054:   8b205261    add x1, x19, w0, uxtw #4
   94058:   39433c24    ldrb    w4, [x1, #207]
   9405c:   2a0003e0    mov w0, w0
   94060:   360004a4    tbz w4, #0, 940f4 <CUSBAudioStreamingDevice::SetVolume(unsigned int, int)+0xd4>
   94064:   8b000260    add x0, x19, x0
   94068:   39471800    ldrb    w0, [x0, #454]
   9406c:   34000880    cbz w0, 9417c <CUSBAudioStreamingDevice::SetVolume(unsigned int, int)+0x15c>
   94070:   9101fff4    add x20, sp, #0x7f
   94074:   53181c42    ubfiz   w2, w2, #8, #8
   94078:   39434037    ldrb    w23, [x1, #208]
   9407c:   927ae694    and x20, x20, #0xffffffffffffffc0
   94080:   79000282    strh    w2, [x20]
   94084:   36000377    tbz w23, #0, 940f0 <CUSBAudioStreamingDevice::SetVolume(unsigned int, int)+0xd0>
   94088:   34000455    cbz w21, 94110 <CUSBAudioStreamingDevice::SetVolume(unsigned int, int)+0xf0>
   9408c:   aa1303e0    mov x0, x19
   94090:   97ffd930    bl  8a550 <CUSBFunction::GetHost() const>
   94094:   aa0003f6    mov x22, x0
   94098:   aa1303e0    mov x0, x19
   9409c:   97ffd921    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   940a0:   b9405a65    ldr w5, [x19, #88]
   940a4:   aa0003e1    mov x1, x0
   940a8:   aa1403e6    mov x6, x20
   940ac:   321702a4    orr w4, w21, #0x200
   940b0:   aa1603e0    mov x0, x22
   940b4:   52800047    mov w7, #0x2
   940b8:   52800023    mov w3, #0x1
   940bc:   52800422    mov w2, #0x21
   940c0:   8b050273    add x19, x19, x5
   940c4:   39471a65    ldrb    w5, [x19, #454]
   940c8:   53181ca5    ubfiz   w5, w5, #8, #8
   940cc:   97ffb3d1    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   940d0:   2a2003f7    mvn w23, w0
   940d4:   531f7ef7    lsr w23, w23, #31
   940d8:   a94153f3    ldp x19, x20, [sp, #16]
   940dc:   2a1703e0    mov w0, w23
   940e0:   a9425bf5    ldp x21, x22, [sp, #32]
   940e4:   f9401bf7    ldr x23, [sp, #48]
   940e8:   a8cb7bfd    ldp x29, x30, [sp], #176
   940ec:   d65f03c0    ret
   940f0:   34fffcf5    cbz w21, 9408c <CUSBAudioStreamingDevice::SetVolume(unsigned int, int)+0x6c>
   940f4:   52800017    mov w23, #0x0
   940f8:   a94153f3    ldp x19, x20, [sp, #16]
   940fc:   2a1703e0    mov w0, w23
   94100:   a9425bf5    ldp x21, x22, [sp, #32]
   94104:   f9401bf7    ldr x23, [sp, #48]
   94108:   a8cb7bfd    ldp x29, x30, [sp], #176
   9410c:   d65f03c0    ret
   94110:   52800035    mov w21, #0x1
   94114:   350000c3    cbnz    w3, 9412c <CUSBAudioStreamingDevice::SetVolume(unsigned int, int)+0x10c>
   94118:   17fffff0    b   940d8 <CUSBAudioStreamingDevice::SetVolume(unsigned int, int)+0xb8>
   9411c:   b9405260    ldr w0, [x19, #80]
   94120:   110006b5    add w21, w21, #0x1
   94124:   6b15001f    cmp w0, w21
   94128:   54fffd83    b.cc    940d8 <CUSBAudioStreamingDevice::SetVolume(unsigned int, int)+0xb8>
   9412c:   aa1303e0    mov x0, x19
   94130:   97ffd908    bl  8a550 <CUSBFunction::GetHost() const>
   94134:   aa0003f6    mov x22, x0
   94138:   aa1303e0    mov x0, x19
   9413c:   97ffd8f9    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   94140:   b9405a65    ldr w5, [x19, #88]
   94144:   aa0003e1    mov x1, x0
   94148:   aa1403e6    mov x6, x20
   9414c:   aa1603e0    mov x0, x22
   94150:   321702a4    orr w4, w21, #0x200
   94154:   52800047    mov w7, #0x2
   94158:   52800023    mov w3, #0x1
   9415c:   52800422    mov w2, #0x21
   94160:   8b050265    add x5, x19, x5
   94164:   394718a5    ldrb    w5, [x5, #454]
   94168:   53181ca5    ubfiz   w5, w5, #8, #8
   9416c:   97ffb3a9    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   94170:   36fffd60    tbz w0, #31, 9411c <CUSBAudioStreamingDevice::SetVolume(unsigned int, int)+0xfc>
   94174:   52800017    mov w23, #0x0
   94178:   17ffffe0    b   940f8 <CUSBAudioStreamingDevice::SetVolume(unsigned int, int)+0xd8>
   9417c:   b00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   94180:   b00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   94184:   9121e021    add x1, x1, #0x878
   94188:   91276000    add x0, x0, #0x9d8
   9418c:   528070c2    mov w2, #0x386
   94190:   9400224c    bl  9cac0 <assertion_failed>
   94194:   b00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   94198:   b00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   9419c:   9121e021    add x1, x1, #0x878
   941a0:   91288000    add x0, x0, #0xa20
   941a4:   52806fc2    mov w2, #0x37e
   941a8:   94002246    bl  9cac0 <assertion_failed>
   941ac:   b00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   941b0:   b00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   941b4:   9121e021    add x1, x1, #0x878
   941b8:   9126c000    add x0, x0, #0x9b0
   941bc:   52806fe2    mov w2, #0x37f
   941c0:   94002240    bl  9cac0 <assertion_failed>
   941c4:   d503201f    nop
   941c8:   d503201f    nop
   941cc:   d503201f    nop

00000000000941d0 <CUSBAudioStreamingDevice::InitTerminalControlInfo(CUSBAudioControlDevice*)>:
   941d0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   941d4:   910003fd    mov x29, sp
   941d8:   b40000a1    cbz x1, 941ec <CUSBAudioStreamingDevice::InitTerminalControlInfo(CUSBAudioControlDevice*)+0x1c>
   941dc:   b9405402    ldr w2, [x0, #84]
   941e0:   34000122    cbz w2, 94204 <CUSBAudioStreamingDevice::InitTerminalControlInfo(CUSBAudioControlDevice*)+0x34>
   941e4:   a8c17bfd    ldp x29, x30, [sp], #16
   941e8:   17fffe32    b   93ab0 <CUSBAudioStreamingDevice::InitTerminalControlInfo(CUSBAudioControlDevice*) [clone .part.0]>
   941ec:   b00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   941f0:   b00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   941f4:   9121e021    add x1, x1, #0x878
   941f8:   9128e000    add x0, x0, #0xa38
   941fc:   52807682    mov w2, #0x3b4
   94200:   94002230    bl  9cac0 <assertion_failed>
   94204:   b00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   94208:   b00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   9420c:   9121e021    add x1, x1, #0x878
   94210:   91250000    add x0, x0, #0x940
   94214:   528076a2    mov w2, #0x3b5
   94218:   9400222a    bl  9cac0 <assertion_failed>
   9421c:   d503201f    nop

0000000000094220 <CUSBAudioStreamingDevice::UpdateChunkSize()>:
   94220:   a9be7bfd    stp x29, x30, [sp, #-32]!
   94224:   910003fd    mov x29, sp
   94228:   39445001    ldrb    w1, [x0, #276]
   9422c:   a90153f3    stp x19, x20, [sp, #16]
   94230:   360007c1    tbz w1, #0, 94328 <CUSBAudioStreamingDevice::UpdateChunkSize()+0x108>
   94234:   aa0003f4    mov x20, x0
   94238:   b9410c01    ldr w1, [x0, #268]
   9423c:   34000821    cbz w1, 94340 <CUSBAudioStreamingDevice::UpdateChunkSize()+0x120>
   94240:   97ffd8ac    bl  8a4f0 <CUSBFunction::GetDevice() const>
   94244:   97ffd09f    bl  884c0 <CUSBDevice::GetSpeed() const>
   94248:   b9404a81    ldr w1, [x20, #72]
   9424c:   7100041f    cmp w0, #0x1
   94250:   52807d00    mov w0, #0x3e8
   94254:   5283e813    mov w19, #0x1f40
   94258:   1a801273    csel    w19, w19, w0, ne
   9425c:   b941ce80    ldr w0, [x20, #460]
   94260:   1ac10a73    udiv    w19, w19, w1
   94264:   35000480    cbnz    w0, 942f4 <CUSBAudioStreamingDevice::UpdateChunkSize()+0xd4>
   94268:   5289ba66    mov w6, #0x4dd3
   9426c:   72a20c46    movk    w6, #0x1062, lsl #16
   94270:   710f9e7f    cmp w19, #0x3e7
   94274:   9ba67e66    umull   x6, w19, w6
   94278:   d366fcc6    lsr x6, x6, #38
   9427c:   b9011a86    str w6, [x20, #280]
   94280:   54000509    b.ls    94320 <CUSBAudioStreamingDevice::UpdateChunkSize()+0x100>
   94284:   b9402e82    ldr w2, [x20, #44]
   94288:   d2800003    mov x3, #0x0
   9428c:   52800005    mov w5, #0x0
   94290:   91047289    add x9, x20, #0x11c
   94294:   b9405287    ldr w7, [x20, #80]
   94298:   b9410e88    ldr w8, [x20, #268]
   9429c:   b941c281    ldr w1, [x20, #448]
   942a0:   1b027ce7    mul w7, w7, w2
   942a4:   12003ce7    and w7, w7, #0xffff
   942a8:   0b010101    add w1, w8, w1
   942ac:   1ad30824    udiv    w4, w1, w19
   942b0:   1b047ce2    mul w2, w7, w4
   942b4:   1b138481    msub    w1, w4, w19, w1
   942b8:   12003c42    and w2, w2, #0xffff
   942bc:   0b0200a5    add w5, w5, w2
   942c0:   78237922    strh    w2, [x9, x3, lsl #1]
   942c4:   91000463    add x3, x3, #0x1
   942c8:   6b0300df    cmp w6, w3
   942cc:   54fffee8    b.hi    942a8 <CUSBAudioStreamingDevice::UpdateChunkSize()+0x88>
   942d0:   b901c281    str w1, [x20, #448]
   942d4:   b9011285    str w5, [x20, #272]
   942d8:   35000080    cbnz    w0, 942e8 <CUSBAudioStreamingDevice::UpdateChunkSize()+0xc8>
   942dc:   a94153f3    ldp x19, x20, [sp, #16]
   942e0:   a8c27bfd    ldp x29, x30, [sp], #32
   942e4:   d65f03c0    ret
   942e8:   a94153f3    ldp x19, x20, [sp, #16]
   942ec:   a8c27bfd    ldp x29, x30, [sp], #32
   942f0:   14005110    b   a8730 <LeaveCritical>
   942f4:   940050df    bl  a8670 <EnterCritical>
   942f8:   5289ba66    mov w6, #0x4dd3
   942fc:   72a20c46    movk    w6, #0x1062, lsl #16
   94300:   b941ce80    ldr w0, [x20, #460]
   94304:   710f9e7f    cmp w19, #0x3e7
   94308:   9ba67e66    umull   x6, w19, w6
   9430c:   d366fcc6    lsr x6, x6, #38
   94310:   b9011a86    str w6, [x20, #280]
   94314:   54fffb88    b.hi    94284 <CUSBAudioStreamingDevice::UpdateChunkSize()+0x64>
   94318:   52800005    mov w5, #0x0
   9431c:   17ffffee    b   942d4 <CUSBAudioStreamingDevice::UpdateChunkSize()+0xb4>
   94320:   b901129f    str wzr, [x20, #272]
   94324:   17ffffee    b   942dc <CUSBAudioStreamingDevice::UpdateChunkSize()+0xbc>
   94328:   b00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   9432c:   b00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   94330:   9121e021    add x1, x1, #0x878
   94334:   91292000    add x0, x0, #0xa48
   94338:   528088c2    mov w2, #0x446
   9433c:   940021e1    bl  9cac0 <assertion_failed>
   94340:   b00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   94344:   b00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   94348:   9121e021    add x1, x1, #0x878
   9434c:   91298000    add x0, x0, #0xa60
   94350:   528088e2    mov w2, #0x447
   94354:   940021db    bl  9cac0 <assertion_failed>
   94358:   d503201f    nop
   9435c:   d503201f    nop

0000000000094360 <CUSBAudioStreamingDevice::Setup(unsigned int)>:
   94360:   a9b57bfd    stp x29, x30, [sp, #-176]!
   94364:   910003fd    mov x29, sp
   94368:   f9401c02    ldr x2, [x0, #56]
   9436c:   a90153f3    stp x19, x20, [sp, #16]
   94370:   a9025bf5    stp x21, x22, [sp, #32]
   94374:   b4001142    cbz x2, 9459c <CUSBAudioStreamingDevice::Setup(unsigned int)+0x23c>
   94378:   9101fff4    add x20, sp, #0x7f
   9437c:   aa0003f5    mov x21, x0
   94380:   b9406404    ldr w4, [x0, #100]
   94384:   2a0103f3    mov w19, w1
   94388:   927ae694    and x20, x20, #0xffffffffffffffc0
   9438c:   9101a002    add x2, x0, #0x68
   94390:   52800003    mov w3, #0x0
   94394:   34000164    cbz w4, 943c0 <CUSBAudioStreamingDevice::Setup(unsigned int)+0x60>
   94398:   b9400041    ldr w1, [x2]
   9439c:   6b13003f    cmp w1, w19
   943a0:   54000083    b.cc    943b0 <CUSBAudioStreamingDevice::Setup(unsigned int)+0x50>
   943a4:   b9400441    ldr w1, [x2, #4]
   943a8:   6b13003f    cmp w1, w19
   943ac:   540001c9    b.ls    943e4 <CUSBAudioStreamingDevice::Setup(unsigned int)+0x84>
   943b0:   11000463    add w3, w3, #0x1
   943b4:   91003042    add x2, x2, #0xc
   943b8:   6b03009f    cmp w4, w3
   943bc:   54fffee1    b.ne    94398 <CUSBAudioStreamingDevice::Setup(unsigned int)+0x38>
   943c0:   94002c90    bl  9f600 <CLogger::Get()>
   943c4:   b00000e3    adrp    x3, b1000 <_etext+0x1f9c>
   943c8:   f940faa1    ldr x1, [x21, #496]
   943cc:   2a1303e4    mov w4, w19
   943d0:   912a2063    add x3, x3, #0xa88
   943d4:   52800042    mov w2, #0x2
   943d8:   94002e72    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   943dc:   52800000    mov w0, #0x0
   943e0:   1400002f    b   9449c <CUSBAudioStreamingDevice::Setup(unsigned int)+0x13c>
   943e4:   6b03009f    cmp w4, w3
   943e8:   54fffec9    b.ls    943c0 <CUSBAudioStreamingDevice::Setup(unsigned int)+0x60>
   943ec:   7100049f    cmp w4, #0x1
   943f0:   a90363f7    stp x23, x24, [sp, #48]
   943f4:   54000081    b.ne    94404 <CUSBAudioStreamingDevice::Setup(unsigned int)+0xa4>
   943f8:   294d02a1    ldp w1, w0, [x21, #104]
   943fc:   6b00003f    cmp w1, w0
   94400:   540002c0    b.eq    94458 <CUSBAudioStreamingDevice::Setup(unsigned int)+0xf8>
   94404:   3940c2a0    ldrb    w0, [x21, #48]
   94408:   b9000293    str w19, [x20]
   9440c:   36000500    tbz w0, #0, 944ac <CUSBAudioStreamingDevice::Setup(unsigned int)+0x14c>
   94410:   394712a0    ldrb    w0, [x21, #452]
   94414:   34000d20    cbz w0, 945b8 <CUSBAudioStreamingDevice::Setup(unsigned int)+0x258>
   94418:   aa1503e0    mov x0, x21
   9441c:   97ffd84d    bl  8a550 <CUSBFunction::GetHost() const>
   94420:   aa0003f6    mov x22, x0
   94424:   aa1503e0    mov x0, x21
   94428:   97ffd83e    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   9442c:   394712a5    ldrb    w5, [x21, #452]
   94430:   aa0003e1    mov x1, x0
   94434:   aa1403e6    mov x6, x20
   94438:   aa1603e0    mov x0, x22
   9443c:   52800087    mov w7, #0x4
   94440:   52802004    mov w4, #0x100
   94444:   52800023    mov w3, #0x1
   94448:   52800422    mov w2, #0x21
   9444c:   53181ca5    ubfiz   w5, w5, #8, #8
   94450:   97ffb2f0    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   94454:   37f80580    tbnz    w0, #31, 94504 <CUSBAudioStreamingDevice::Setup(unsigned int)+0x1a4>
   94458:   394452a0    ldrb    w0, [x21, #276]
   9445c:   b9010eb3    str w19, [x21, #268]
   94460:   37000980    tbnz    w0, #0, 94590 <CUSBAudioStreamingDevice::Setup(unsigned int)+0x230>
   94464:   394132a0    ldrb    w0, [x21, #76]
   94468:   37000600    tbnz    w0, #0, 94528 <CUSBAudioStreamingDevice::Setup(unsigned int)+0x1c8>
   9446c:   f9401ea0    ldr x0, [x21, #56]
   94470:   97ffd6fc    bl  8a060 <CUSBEndpoint::GetMaxPacketSize() const>
   94474:   2a0003f3    mov w19, w0
   94478:   f9401ea0    ldr x0, [x21, #56]
   9447c:   97ffd6f9    bl  8a060 <CUSBEndpoint::GetMaxPacketSize() const>
   94480:   b9402ea2    ldr w2, [x21, #44]
   94484:   1ac20801    udiv    w1, w0, w2
   94488:   1b028021    msub    w1, w1, w2, w0
   9448c:   4b010273    sub w19, w19, w1
   94490:   b90112b3    str w19, [x21, #272]
   94494:   a94363f7    ldp x23, x24, [sp, #48]
   94498:   52800020    mov w0, #0x1
   9449c:   a94153f3    ldp x19, x20, [sp, #16]
   944a0:   a9425bf5    ldp x21, x22, [sp, #32]
   944a4:   a8cb7bfd    ldp x29, x30, [sp], #176
   944a8:   d65f03c0    ret
   944ac:   aa1503e0    mov x0, x21
   944b0:   97ffd828    bl  8a550 <CUSBFunction::GetHost() const>
   944b4:   aa0003f6    mov x22, x0
   944b8:   aa1503e0    mov x0, x21
   944bc:   97ffd819    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   944c0:   aa0003f8    mov x24, x0
   944c4:   f9401ea0    ldr x0, [x21, #56]
   944c8:   97ffd6ca    bl  89ff0 <CUSBEndpoint::GetNumber() const>
   944cc:   12001c17    and w23, w0, #0xff
   944d0:   f9401ea0    ldr x0, [x21, #56]
   944d4:   97ffd6cf    bl  8a010 <CUSBEndpoint::IsDirectionIn() const>
   944d8:   12001c05    and w5, w0, #0xff
   944dc:   aa1403e6    mov x6, x20
   944e0:   2a051ee5    orr w5, w23, w5, lsl #7
   944e4:   aa1803e1    mov x1, x24
   944e8:   aa1603e0    mov x0, x22
   944ec:   52800067    mov w7, #0x3
   944f0:   52802004    mov w4, #0x100
   944f4:   52800023    mov w3, #0x1
   944f8:   52800442    mov w2, #0x22
   944fc:   97ffb2c5    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   94500:   36fffac0    tbz w0, #31, 94458 <CUSBAudioStreamingDevice::Setup(unsigned int)+0xf8>
   94504:   94002c3f    bl  9f600 <CLogger::Get()>
   94508:   f940faa1    ldr x1, [x21, #496]
   9450c:   b00000e3    adrp    x3, b1000 <_etext+0x1f9c>
   94510:   912ac063    add x3, x3, #0xab0
   94514:   52800082    mov w2, #0x4
   94518:   94002e22    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   9451c:   a94363f7    ldp x23, x24, [sp, #48]
   94520:   52800000    mov w0, #0x0
   94524:   17ffffde    b   9449c <CUSBAudioStreamingDevice::Setup(unsigned int)+0x13c>
   94528:   aa1503e0    mov x0, x21
   9452c:   97ffd7f1    bl  8a4f0 <CUSBFunction::GetDevice() const>
   94530:   97ffcfe4    bl  884c0 <CUSBDevice::GetSpeed() const>
   94534:   b9404aa2    ldr w2, [x21, #72]
   94538:   7100041f    cmp w0, #0x1
   9453c:   52807d00    mov w0, #0x3e8
   94540:   5283e801    mov w1, #0x1f40
   94544:   1a801021    csel    w1, w1, w0, ne
   94548:   b9402ea3    ldr w3, [x21, #44]
   9454c:   b94052a0    ldr w0, [x21, #80]
   94550:   1ac20822    udiv    w2, w1, w2
   94554:   1b037c00    mul w0, w0, w3
   94558:   1b007e61    mul w1, w19, w0
   9455c:   1ac20821    udiv    w1, w1, w2
   94560:   b90112a1    str w1, [x21, #272]
   94564:   b94112a1    ldr w1, [x21, #272]
   94568:   51000421    sub w1, w1, #0x1
   9456c:   0b000021    add w1, w1, w0
   94570:   b90112a1    str w1, [x21, #272]
   94574:   b94112a1    ldr w1, [x21, #272]
   94578:   1ac00821    udiv    w1, w1, w0
   9457c:   b90112a1    str w1, [x21, #272]
   94580:   b94112a1    ldr w1, [x21, #272]
   94584:   1b007c20    mul w0, w1, w0
   94588:   b90112a0    str w0, [x21, #272]
   9458c:   17ffffc2    b   94494 <CUSBAudioStreamingDevice::Setup(unsigned int)+0x134>
   94590:   aa1503e0    mov x0, x21
   94594:   97ffff23    bl  94220 <CUSBAudioStreamingDevice::UpdateChunkSize()>
   94598:   17ffffbf    b   94494 <CUSBAudioStreamingDevice::Setup(unsigned int)+0x134>
   9459c:   b00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   945a0:   b00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   945a4:   a90363f7    stp x23, x24, [sp, #48]
   945a8:   9121e021    add x1, x1, #0x878
   945ac:   9129e000    add x0, x0, #0xa78
   945b0:   52805122    mov w2, #0x289
   945b4:   94002143    bl  9cac0 <assertion_failed>
   945b8:   b00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   945bc:   b00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   945c0:   9121e021    add x1, x1, #0x878
   945c4:   912b2000    add x0, x0, #0xac8
   945c8:   52805682    mov w2, #0x2b4
   945cc:   9400213d    bl  9cac0 <assertion_failed>

00000000000945d0 <CUSBAudioStreamingDevice::SendChunk(void const*, unsigned int, void (*)(unsigned int, void*), void*)>:
   945d0:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   945d4:   910003fd    mov x29, sp
   945d8:   a90153f3    stp x19, x20, [sp, #16]
   945dc:   a9025bf5    stp x21, x22, [sp, #32]
   945e0:   a90363f7    stp x23, x24, [sp, #48]
   945e4:   b4000e41    cbz x1, 947ac <CUSBAudioStreamingDevice::SendChunk(void const*, unsigned int, void (*)(unsigned int, void*), void*)+0x1dc>
   945e8:   aa0003f4    mov x20, x0
   945ec:   f9401c00    ldr x0, [x0, #56]
   945f0:   b4000ea0    cbz x0, 947c4 <CUSBAudioStreamingDevice::SendChunk(void const*, unsigned int, void (*)(unsigned int, void*), void*)+0x1f4>
   945f4:   d2801200    mov x0, #0x90
   945f8:   aa0103f3    mov x19, x1
   945fc:   2a0203f5    mov w21, w2
   94600:   aa0303f8    mov x24, x3
   94604:   aa0403f7    mov x23, x4
   94608:   97ffb606    bl  81e20 <CUSBRequest::operator new(unsigned long)>
   9460c:   f9401e81    ldr x1, [x20, #56]
   94610:   aa1303e2    mov x2, x19
   94614:   2a1503e3    mov w3, w21
   94618:   d2800004    mov x4, #0x0
   9461c:   aa0003f6    mov x22, x0
   94620:   97ffb518    bl  81a80 <CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)>
   94624:   39445280    ldrb    w0, [x20, #276]
   94628:   36000500    tbz w0, #0, 946c8 <CUSBAudioStreamingDevice::SendChunk(void const*, unsigned int, void (*)(unsigned int, void*), void*)+0xf8>
   9462c:   b9411a80    ldr w0, [x20, #280]
   94630:   d2800013    mov x19, #0x0
   94634:   91047295    add x21, x20, #0x11c
   94638:   34000ae0    cbz w0, 94794 <CUSBAudioStreamingDevice::SendChunk(void const*, unsigned int, void (*)(unsigned int, void*), void*)+0x1c4>
   9463c:   d503201f    nop
   94640:   78737aa1    ldrh    w1, [x21, x19, lsl #1]
   94644:   aa1603e0    mov x0, x22
   94648:   91000673    add x19, x19, #0x1
   9464c:   97ffb591    bl  81c90 <CUSBRequest::AddIsoPacket(unsigned short)>
   94650:   b9411a85    ldr w5, [x20, #280]
   94654:   6b1300bf    cmp w5, w19
   94658:   54ffff48    b.hi    94640 <CUSBAudioStreamingDevice::SendChunk(void const*, unsigned int, void (*)(unsigned int, void*), void*)+0x70>
   9465c:   f0ffffe1    adrp    x1, 93000 <CXHCICommandManager::EnableSlot(unsigned char*)>
   94660:   aa1803e3    mov x3, x24
   94664:   aa1703e2    mov x2, x23
   94668:   91220021    add x1, x1, #0x880
   9466c:   aa1603e0    mov x0, x22
   94670:   97ffb5c8    bl  81d90 <CUSBRequest::SetCompletionRoutine(void (*)(CUSBRequest*, void*, void*), void*, void*)>
   94674:   aa1403e0    mov x0, x20
   94678:   97ffd7b6    bl  8a550 <CUSBFunction::GetHost() const>
   9467c:   f9400003    ldr x3, [x0]
   94680:   aa1603e1    mov x1, x22
   94684:   52800002    mov w2, #0x0
   94688:   f9401463    ldr x3, [x3, #40]
   9468c:   d63f0060    blr x3
   94690:   2a0003f3    mov w19, w0
   94694:   360000f3    tbz w19, #0, 946b0 <CUSBAudioStreamingDevice::SendChunk(void const*, unsigned int, void (*)(unsigned int, void*), void*)+0xe0>
   94698:   f9402280    ldr x0, [x20, #64]
   9469c:   b4000060    cbz x0, 946a8 <CUSBAudioStreamingDevice::SendChunk(void const*, unsigned int, void (*)(unsigned int, void*), void*)+0xd8>
   946a0:   39457280    ldrb    w0, [x20, #348]
   946a4:   360002a0    tbz w0, #0, 946f8 <CUSBAudioStreamingDevice::SendChunk(void const*, unsigned int, void (*)(unsigned int, void*), void*)+0x128>
   946a8:   39445280    ldrb    w0, [x20, #276]
   946ac:   37000160    tbnz    w0, #0, 946d8 <CUSBAudioStreamingDevice::SendChunk(void const*, unsigned int, void (*)(unsigned int, void*), void*)+0x108>
   946b0:   a9425bf5    ldp x21, x22, [sp, #32]
   946b4:   2a1303e0    mov w0, w19
   946b8:   a94153f3    ldp x19, x20, [sp, #16]
   946bc:   a94363f7    ldp x23, x24, [sp, #48]
   946c0:   a8c47bfd    ldp x29, x30, [sp], #64
   946c4:   d65f03c0    ret
   946c8:   2a1503e1    mov w1, w21
   946cc:   aa1603e0    mov x0, x22
   946d0:   97ffb570    bl  81c90 <CUSBRequest::AddIsoPacket(unsigned short)>
   946d4:   17ffffe2    b   9465c <CUSBAudioStreamingDevice::SendChunk(void const*, unsigned int, void (*)(unsigned int, void*), void*)+0x8c>
   946d8:   aa1403e0    mov x0, x20
   946dc:   97fffed1    bl  94220 <CUSBAudioStreamingDevice::UpdateChunkSize()>
   946e0:   a9425bf5    ldp x21, x22, [sp, #32]
   946e4:   2a1303e0    mov w0, w19
   946e8:   a94153f3    ldp x19, x20, [sp, #16]
   946ec:   a94363f7    ldp x23, x24, [sp, #48]
   946f0:   a8c47bfd    ldp x29, x30, [sp], #64
   946f4:   d65f03c0    ret
   946f8:   52800021    mov w1, #0x1
   946fc:   aa1403e0    mov x0, x20
   94700:   39057281    strb    w1, [x20, #348]
   94704:   97ffd77b    bl  8a4f0 <CUSBFunction::GetDevice() const>
   94708:   97ffcf6e    bl  884c0 <CUSBDevice::GetSpeed() const>
   9470c:   f9402281    ldr x1, [x20, #64]
   94710:   7100041f    cmp w0, #0x1
   94714:   1a9f07f5    cset    w21, ne
   94718:   11000eb5    add w21, w21, #0x3
   9471c:   b4000601    cbz x1, 947dc <CUSBAudioStreamingDevice::SendChunk(void const*, unsigned int, void (*)(unsigned int, void*), void*)+0x20c>
   94720:   d2801200    mov x0, #0x90
   94724:   97ffb5bf    bl  81e20 <CUSBRequest::operator new(unsigned long)>
   94728:   f9402281    ldr x1, [x20, #64]
   9472c:   d2800004    mov x4, #0x0
   94730:   2a1503e3    mov w3, w21
   94734:   91060282    add x2, x20, #0x180
   94738:   aa0003f3    mov x19, x0
   9473c:   97ffb4d1    bl  81a80 <CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)>
   94740:   2a1503e1    mov w1, w21
   94744:   aa1303e0    mov x0, x19
   94748:   97ffb552    bl  81c90 <CUSBRequest::AddIsoPacket(unsigned short)>
   9474c:   f0ffffe1    adrp    x1, 93000 <CXHCICommandManager::EnableSlot(unsigned char*)>
   94750:   aa1403e3    mov x3, x20
   94754:   aa1303e0    mov x0, x19
   94758:   9124c021    add x1, x1, #0x930
   9475c:   d2800002    mov x2, #0x0
   94760:   97ffb58c    bl  81d90 <CUSBRequest::SetCompletionRoutine(void (*)(CUSBRequest*, void*, void*), void*, void*)>
   94764:   aa1403e0    mov x0, x20
   94768:   97ffd77a    bl  8a550 <CUSBFunction::GetHost() const>
   9476c:   f9400003    ldr x3, [x0]
   94770:   aa1303e1    mov x1, x19
   94774:   52800002    mov w2, #0x0
   94778:   a94153f3    ldp x19, x20, [sp, #16]
   9477c:   a9425bf5    ldp x21, x22, [sp, #32]
   94780:   a94363f7    ldp x23, x24, [sp, #48]
   94784:   a8c47bfd    ldp x29, x30, [sp], #64
   94788:   f9401463    ldr x3, [x3, #40]
   9478c:   aa0303f0    mov x16, x3
   94790:   d61f0200    br  x16
   94794:   b00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   94798:   b00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   9479c:   9121e021    add x1, x1, #0x878
   947a0:   912c2000    add x0, x0, #0xb08
   947a4:   52805e62    mov w2, #0x2f3
   947a8:   940020c6    bl  9cac0 <assertion_failed>
   947ac:   b00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   947b0:   b00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   947b4:   9121e021    add x1, x1, #0x878
   947b8:   912c0000    add x0, x0, #0xb00
   947bc:   52805d62    mov w2, #0x2eb
   947c0:   940020c0    bl  9cac0 <assertion_failed>
   947c4:   b00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   947c8:   b00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   947cc:   9121e021    add x1, x1, #0x878
   947d0:   9129e000    add x0, x0, #0xa78
   947d4:   52805da2    mov w2, #0x2ed
   947d8:   940020ba    bl  9cac0 <assertion_failed>
   947dc:   b00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   947e0:   b00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   947e4:   9121e021    add x1, x1, #0x878
   947e8:   912c8000    add x0, x0, #0xb20
   947ec:   52806142    mov w2, #0x30a
   947f0:   940020b4    bl  9cac0 <assertion_failed>
   947f4:   d503201f    nop
   947f8:   d503201f    nop
   947fc:   d503201f    nop

0000000000094800 <CUSBAudioStreamingDevice::ReceiveChunk(void*, unsigned int, void (*)(unsigned int, void*), void*)>:
   94800:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   94804:   910003fd    mov x29, sp
   94808:   a90153f3    stp x19, x20, [sp, #16]
   9480c:   a9025bf5    stp x21, x22, [sp, #32]
   94810:   a90363f7    stp x23, x24, [sp, #48]
   94814:   b4000861    cbz x1, 94920 <CUSBAudioStreamingDevice::ReceiveChunk(void*, unsigned int, void (*)(unsigned int, void*), void*)+0x120>
   94818:   aa0003f4    mov x20, x0
   9481c:   f9401c00    ldr x0, [x0, #56]
   94820:   b40008c0    cbz x0, 94938 <CUSBAudioStreamingDevice::ReceiveChunk(void*, unsigned int, void (*)(unsigned int, void*), void*)+0x138>
   94824:   d2801200    mov x0, #0x90
   94828:   aa0103f3    mov x19, x1
   9482c:   2a0203f5    mov w21, w2
   94830:   aa0303f8    mov x24, x3
   94834:   aa0403f7    mov x23, x4
   94838:   97ffb57a    bl  81e20 <CUSBRequest::operator new(unsigned long)>
   9483c:   f9401e81    ldr x1, [x20, #56]
   94840:   aa1303e2    mov x2, x19
   94844:   2a1503e3    mov w3, w21
   94848:   d2800004    mov x4, #0x0
   9484c:   aa0003f6    mov x22, x0
   94850:   97ffb48c    bl  81a80 <CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)>
   94854:   f9402280    ldr x0, [x20, #64]
   94858:   b50007c0    cbnz    x0, 94950 <CUSBAudioStreamingDevice::ReceiveChunk(void*, unsigned int, void (*)(unsigned int, void*), void*)+0x150>
   9485c:   39445280    ldrb    w0, [x20, #276]
   94860:   36000480    tbz w0, #0, 948f0 <CUSBAudioStreamingDevice::ReceiveChunk(void*, unsigned int, void (*)(unsigned int, void*), void*)+0xf0>
   94864:   b9411a80    ldr w0, [x20, #280]
   94868:   d2800013    mov x19, #0x0
   9486c:   91047295    add x21, x20, #0x11c
   94870:   340007c0    cbz w0, 94968 <CUSBAudioStreamingDevice::ReceiveChunk(void*, unsigned int, void (*)(unsigned int, void*), void*)+0x168>
   94874:   d503201f    nop
   94878:   78737aa1    ldrh    w1, [x21, x19, lsl #1]
   9487c:   aa1603e0    mov x0, x22
   94880:   91000673    add x19, x19, #0x1
   94884:   97ffb503    bl  81c90 <CUSBRequest::AddIsoPacket(unsigned short)>
   94888:   b9411a85    ldr w5, [x20, #280]
   9488c:   6b1300bf    cmp w5, w19
   94890:   54ffff48    b.hi    94878 <CUSBAudioStreamingDevice::ReceiveChunk(void*, unsigned int, void (*)(unsigned int, void*), void*)+0x78>
   94894:   f0ffffe1    adrp    x1, 93000 <CXHCICommandManager::EnableSlot(unsigned char*)>
   94898:   aa1803e3    mov x3, x24
   9489c:   aa1703e2    mov x2, x23
   948a0:   91220021    add x1, x1, #0x880
   948a4:   aa1603e0    mov x0, x22
   948a8:   97ffb53a    bl  81d90 <CUSBRequest::SetCompletionRoutine(void (*)(CUSBRequest*, void*, void*), void*, void*)>
   948ac:   aa1403e0    mov x0, x20
   948b0:   97ffd728    bl  8a550 <CUSBFunction::GetHost() const>
   948b4:   f9400003    ldr x3, [x0]
   948b8:   aa1603e1    mov x1, x22
   948bc:   52800002    mov w2, #0x0
   948c0:   f9401463    ldr x3, [x3, #40]
   948c4:   d63f0060    blr x3
   948c8:   2a0003f3    mov w19, w0
   948cc:   36000073    tbz w19, #0, 948d8 <CUSBAudioStreamingDevice::ReceiveChunk(void*, unsigned int, void (*)(unsigned int, void*), void*)+0xd8>
   948d0:   39445280    ldrb    w0, [x20, #276]
   948d4:   37000160    tbnz    w0, #0, 94900 <CUSBAudioStreamingDevice::ReceiveChunk(void*, unsigned int, void (*)(unsigned int, void*), void*)+0x100>
   948d8:   a9425bf5    ldp x21, x22, [sp, #32]
   948dc:   2a1303e0    mov w0, w19
   948e0:   a94153f3    ldp x19, x20, [sp, #16]
   948e4:   a94363f7    ldp x23, x24, [sp, #48]
   948e8:   a8c47bfd    ldp x29, x30, [sp], #64
   948ec:   d65f03c0    ret
   948f0:   2a1503e1    mov w1, w21
   948f4:   aa1603e0    mov x0, x22
   948f8:   97ffb4e6    bl  81c90 <CUSBRequest::AddIsoPacket(unsigned short)>
   948fc:   17ffffe6    b   94894 <CUSBAudioStreamingDevice::ReceiveChunk(void*, unsigned int, void (*)(unsigned int, void*), void*)+0x94>
   94900:   aa1403e0    mov x0, x20
   94904:   97fffe47    bl  94220 <CUSBAudioStreamingDevice::UpdateChunkSize()>
   94908:   a9425bf5    ldp x21, x22, [sp, #32]
   9490c:   2a1303e0    mov w0, w19
   94910:   a94153f3    ldp x19, x20, [sp, #16]
   94914:   a94363f7    ldp x23, x24, [sp, #48]
   94918:   a8c47bfd    ldp x29, x30, [sp], #64
   9491c:   d65f03c0    ret
   94920:   b00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   94924:   b00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   94928:   9121e021    add x1, x1, #0x878
   9492c:   912c0000    add x0, x0, #0xb00
   94930:   52806422    mov w2, #0x321
   94934:   94002063    bl  9cac0 <assertion_failed>
   94938:   b00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   9493c:   b00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   94940:   9121e021    add x1, x1, #0x878
   94944:   9129e000    add x0, x0, #0xa78
   94948:   52806462    mov w2, #0x323
   9494c:   9400205d    bl  9cac0 <assertion_failed>
   94950:   b00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   94954:   b00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   94958:   9121e021    add x1, x1, #0x878
   9495c:   912cc000    add x0, x0, #0xb30
   94960:   528064e2    mov w2, #0x327
   94964:   94002057    bl  9cac0 <assertion_failed>
   94968:   b00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   9496c:   b00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   94970:   9121e021    add x1, x1, #0x878
   94974:   912c2000    add x0, x0, #0xb08
   94978:   52806542    mov w2, #0x32a
   9497c:   94002051    bl  9cac0 <assertion_failed>

0000000000094980 <CUSBAudioStreamingDevice::~CUSBAudioStreamingDevice()>:
   94980:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   94984:   910003fd    mov x29, sp
   94988:   b0000101    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9498c:   910de021    add x1, x1, #0x378
   94990:   a90153f3    stp x19, x20, [sp, #16]
   94994:   aa0003f3    mov x19, x0
   94998:   91074014    add x20, x0, #0x1d0
   9499c:   aa1403e0    mov x0, x20
   949a0:   f90013f5    str x21, [sp, #32]
   949a4:   f9000261    str x1, [x19]
   949a8:   94003d5a    bl  a3f10 <CString::GetLength() const>
   949ac:   b5000300    cbnz    x0, 94a0c <CUSBAudioStreamingDevice::~CUSBAudioStreamingDevice()+0x8c>
   949b0:   f9402275    ldr x21, [x19, #64]
   949b4:   b40000d5    cbz x21, 949cc <CUSBAudioStreamingDevice::~CUSBAudioStreamingDevice()+0x4c>
   949b8:   aa1503e0    mov x0, x21
   949bc:   97ffd571    bl  89f80 <CUSBEndpoint::~CUSBEndpoint()>
   949c0:   aa1503e0    mov x0, x21
   949c4:   d2800401    mov x1, #0x20
   949c8:   94004ba6    bl  a7860 <operator delete(void*, unsigned long)>
   949cc:   f9401e75    ldr x21, [x19, #56]
   949d0:   f900227f    str xzr, [x19, #64]
   949d4:   b40000d5    cbz x21, 949ec <CUSBAudioStreamingDevice::~CUSBAudioStreamingDevice()+0x6c>
   949d8:   aa1503e0    mov x0, x21
   949dc:   97ffd569    bl  89f80 <CUSBEndpoint::~CUSBEndpoint()>
   949e0:   aa1503e0    mov x0, x21
   949e4:   d2800401    mov x1, #0x20
   949e8:   94004b9e    bl  a7860 <operator delete(void*, unsigned long)>
   949ec:   aa1403e0    mov x0, x20
   949f0:   f9001e7f    str xzr, [x19, #56]
   949f4:   94003c7b    bl  a3be0 <CString::~CString()>
   949f8:   f94013f5    ldr x21, [sp, #32]
   949fc:   aa1303e0    mov x0, x19
   94a00:   a94153f3    ldp x19, x20, [sp, #16]
   94a04:   a8c37bfd    ldp x29, x30, [sp], #48
   94a08:   17ffd5b2    b   8a0d0 <CUSBFunction::~CUSBFunction()>
   94a0c:   94002415    bl  9da60 <CDeviceNameService::Get()>
   94a10:   aa0003f5    mov x21, x0
   94a14:   aa1403e0    mov x0, x20
   94a18:   94003cf2    bl  a3de0 <CString::operator char const*() const>
   94a1c:   aa0003e1    mov x1, x0
   94a20:   52800002    mov w2, #0x0
   94a24:   aa1503e0    mov x0, x21
   94a28:   9400235a    bl  9d790 <CDeviceNameService::RemoveDevice(char const*, bool)>
   94a2c:   17ffffe1    b   949b0 <CUSBAudioStreamingDevice::~CUSBAudioStreamingDevice()+0x30>

0000000000094a30 <CUSBAudioStreamingDevice::~CUSBAudioStreamingDevice()>:
   94a30:   a9be7bfd    stp x29, x30, [sp, #-32]!
   94a34:   910003fd    mov x29, sp
   94a38:   f9000bf3    str x19, [sp, #16]
   94a3c:   aa0003f3    mov x19, x0
   94a40:   97ffffd0    bl  94980 <CUSBAudioStreamingDevice::~CUSBAudioStreamingDevice()>
   94a44:   aa1303e0    mov x0, x19
   94a48:   f9400bf3    ldr x19, [sp, #16]
   94a4c:   d2804001    mov x1, #0x200
   94a50:   a8c27bfd    ldp x29, x30, [sp], #32
   94a54:   14004b83    b   a7860 <operator delete(void*, unsigned long)>
   94a58:   d503201f    nop
   94a5c:   d503201f    nop

0000000000094a60 <CUSBAudioStreamingDevice::Initialize()>:
   94a60:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   94a64:   910003fd    mov x29, sp
   94a68:   a90153f3    stp x19, x20, [sp, #16]
   94a6c:   aa0003f4    mov x20, x0
   94a70:   97ffd590    bl  8a0b0 <CUSBFunction::Initialize()>
   94a74:   370000c0    tbnz    w0, #0, 94a8c <CUSBAudioStreamingDevice::Initialize()+0x2c>
   94a78:   52800013    mov w19, #0x0
   94a7c:   2a1303e0    mov w0, w19
   94a80:   a94153f3    ldp x19, x20, [sp, #16]
   94a84:   a8c47bfd    ldp x29, x30, [sp], #64
   94a88:   d65f03c0    ret
   94a8c:   12001c13    and w19, w0, #0xff
   94a90:   aa1403e0    mov x0, x20
   94a94:   97ffd68b    bl  8a4c0 <CUSBFunction::GetNumEndpoints() const>
   94a98:   72001c1f    tst w0, #0xff
   94a9c:   54fffee0    b.eq    94a78 <CUSBAudioStreamingDevice::Initialize()+0x18>
   94aa0:   aa1403e0    mov x0, x20
   94aa4:   a9025bf5    stp x21, x22, [sp, #32]
   94aa8:   97ffd73e    bl  8a7a0 <CUSBFunction::GetInterfaceDescriptor() const>
   94aac:   39400001    ldrb    w1, [x0]
   94ab0:   8b010015    add x21, x0, x1
   94ab4:   394006a2    ldrb    w2, [x21, #1]
   94ab8:   7100905f    cmp w2, #0x24
   94abc:   54000301    b.ne    94b1c <CUSBAudioStreamingDevice::Initialize()+0xbc>
   94ac0:   39400aa2    ldrb    w2, [x21, #2]
   94ac4:   7100045f    cmp w2, #0x1
   94ac8:   540002a1    b.ne    94b1c <CUSBAudioStreamingDevice::Initialize()+0xbc>
   94acc:   38616800    ldrb    w0, [x0, x1]
   94ad0:   8b0002b6    add x22, x21, x0
   94ad4:   394006c1    ldrb    w1, [x22, #1]
   94ad8:   7100903f    cmp w1, #0x24
   94adc:   54000201    b.ne    94b1c <CUSBAudioStreamingDevice::Initialize()+0xbc>
   94ae0:   39400ac1    ldrb    w1, [x22, #2]
   94ae4:   7100083f    cmp w1, #0x2
   94ae8:   540001a1    b.ne    94b1c <CUSBAudioStreamingDevice::Initialize()+0xbc>
   94aec:   39400ec1    ldrb    w1, [x22, #3]
   94af0:   7100043f    cmp w1, #0x1
   94af4:   54000141    b.ne    94b1c <CUSBAudioStreamingDevice::Initialize()+0xbc>
   94af8:   f9001bf7    str x23, [sp, #48]
   94afc:   38606ab7    ldrb    w23, [x21, x0]
   94b00:   8b1702d7    add x23, x22, x23
   94b04:   394006e0    ldrb    w0, [x23, #1]
   94b08:   7100141f    cmp w0, #0x5
   94b0c:   540000c0    b.eq    94b24 <CUSBAudioStreamingDevice::Initialize()+0xc4>
   94b10:   a9425bf5    ldp x21, x22, [sp, #32]
   94b14:   f9401bf7    ldr x23, [sp, #48]
   94b18:   17ffffd8    b   94a78 <CUSBAudioStreamingDevice::Initialize()+0x18>
   94b1c:   a9425bf5    ldp x21, x22, [sp, #32]
   94b20:   17ffffd6    b   94a78 <CUSBAudioStreamingDevice::Initialize()+0x18>
   94b24:   940028b3    bl  9edf0 <CKernelOptions::Get()>
   94b28:   94002876    bl  9ed00 <CKernelOptions::GetUSBSoundChannels() const>
   94b2c:   aa0003e1    mov x1, x0
   94b30:   b40007c0    cbz x0, 94c28 <CUSBAudioStreamingDevice::Initialize()+0x1c8>
   94b34:   39c00ae3    ldrsb   w3, [x23, #2]
   94b38:   91001022    add x2, x1, #0x4
   94b3c:   aa1403e0    mov x0, x20
   94b40:   7100007f    cmp w3, #0x0
   94b44:   9a81b041    csel    x1, x2, x1, lt
   94b48:   b9400037    ldr w23, [x1]
   94b4c:   97ffd709    bl  8a770 <CUSBFunction::GetInterfaceProtocol() const>
   94b50:   12001c00    and w0, w0, #0xff
   94b54:   7100801f    cmp w0, #0x20
   94b58:   54000380    b.eq    94bc8 <CUSBAudioStreamingDevice::Initialize()+0x168>
   94b5c:   34000097    cbz w23, 94b6c <CUSBAudioStreamingDevice::Initialize()+0x10c>
   94b60:   394012c0    ldrb    w0, [x22, #4]
   94b64:   6b17001f    cmp w0, w23
   94b68:   54000181    b.ne    94b98 <CUSBAudioStreamingDevice::Initialize()+0x138>
   94b6c:   394016c1    ldrb    w1, [x22, #5]
   94b70:   b9402e80    ldr w0, [x20, #44]
   94b74:   6b00003f    cmp w1, w0
   94b78:   54000101    b.ne    94b98 <CUSBAudioStreamingDevice::Initialize()+0x138>
   94b7c:   39401ac1    ldrb    w1, [x22, #6]
   94b80:   b9402a80    ldr w0, [x20, #40]
   94b84:   6b00003f    cmp w1, w0
   94b88:   54000081    b.ne    94b98 <CUSBAudioStreamingDevice::Initialize()+0x138>
   94b8c:   a9425bf5    ldp x21, x22, [sp, #32]
   94b90:   f9401bf7    ldr x23, [sp, #48]
   94b94:   17ffffba    b   94a7c <CUSBAudioStreamingDevice::Initialize()+0x1c>
   94b98:   94002a9a    bl  9f600 <CLogger::Get()>
   94b9c:   b00000e3    adrp    x3, b1000 <_etext+0x1f9c>
   94ba0:   f940fa81    ldr x1, [x20, #496]
   94ba4:   52800082    mov w2, #0x4
   94ba8:   912d6063    add x3, x3, #0xb58
   94bac:   394016c6    ldrb    w6, [x22, #5]
   94bb0:   39401ac5    ldrb    w5, [x22, #6]
   94bb4:   394012c4    ldrb    w4, [x22, #4]
   94bb8:   94002c7a    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   94bbc:   a9425bf5    ldp x21, x22, [sp, #32]
   94bc0:   f9401bf7    ldr x23, [sp, #48]
   94bc4:   17ffffad    b   94a78 <CUSBAudioStreamingDevice::Initialize()+0x18>
   94bc8:   34000097    cbz w23, 94bd8 <CUSBAudioStreamingDevice::Initialize()+0x178>
   94bcc:   39402aa0    ldrb    w0, [x21, #10]
   94bd0:   6b17001f    cmp w0, w23
   94bd4:   54000121    b.ne    94bf8 <CUSBAudioStreamingDevice::Initialize()+0x198>
   94bd8:   394012c1    ldrb    w1, [x22, #4]
   94bdc:   b9402e80    ldr w0, [x20, #44]
   94be0:   6b00003f    cmp w1, w0
   94be4:   540000a1    b.ne    94bf8 <CUSBAudioStreamingDevice::Initialize()+0x198>
   94be8:   394016c1    ldrb    w1, [x22, #5]
   94bec:   b9402a80    ldr w0, [x20, #40]
   94bf0:   6b00003f    cmp w1, w0
   94bf4:   54fffcc0    b.eq    94b8c <CUSBAudioStreamingDevice::Initialize()+0x12c>
   94bf8:   94002a82    bl  9f600 <CLogger::Get()>
   94bfc:   b00000e3    adrp    x3, b1000 <_etext+0x1f9c>
   94c00:   f940fa81    ldr x1, [x20, #496]
   94c04:   52800082    mov w2, #0x4
   94c08:   912d6063    add x3, x3, #0xb58
   94c0c:   39402aa4    ldrb    w4, [x21, #10]
   94c10:   394012c6    ldrb    w6, [x22, #4]
   94c14:   394016c5    ldrb    w5, [x22, #5]
   94c18:   94002c62    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   94c1c:   a9425bf5    ldp x21, x22, [sp, #32]
   94c20:   f9401bf7    ldr x23, [sp, #48]
   94c24:   17ffff95    b   94a78 <CUSBAudioStreamingDevice::Initialize()+0x18>
   94c28:   b00000e1    adrp    x1, b1000 <_etext+0x1f9c>
   94c2c:   b00000e0    adrp    x0, b1000 <_etext+0x1f9c>
   94c30:   9121e021    add x1, x1, #0x878
   94c34:   912d2000    add x0, x0, #0xb48
   94c38:   52801a22    mov w2, #0xd1
   94c3c:   94001fa1    bl  9cac0 <assertion_failed>

0000000000094c40 <CUSBAudioStreamingDevice::Configure()>:
   94c40:   a9ad7bfd    stp x29, x30, [sp, #-304]!
   94c44:   910003fd    mov x29, sp
   94c48:   9103ffa1    add x1, x29, #0xff
   94c4c:   a90153f3    stp x19, x20, [sp, #16]
   94c50:   aa0003f4    mov x20, x0
   94c54:   a9025bf5    stp x21, x22, [sp, #32]
   94c58:   927ae436    and x22, x1, #0xffffffffffffffc0
   94c5c:   a90363f7    stp x23, x24, [sp, #48]
   94c60:   a9046bf9    stp x25, x26, [sp, #64]
   94c64:   f9002bfb    str x27, [sp, #80]
   94c68:   97ffd616    bl  8a4c0 <CUSBFunction::GetNumEndpoints() const>
   94c6c:   72001c1f    tst w0, #0xff
   94c70:   54002020    b.eq    95074 <CUSBAudioStreamingDevice::Configure()+0x434>
   94c74:   aa1403e0    mov x0, x20
   94c78:   97ffd6be    bl  8a770 <CUSBFunction::GetInterfaceProtocol() const>
   94c7c:   12001c00    and w0, w0, #0xff
   94c80:   7100801f    cmp w0, #0x20
   94c84:   1a9f17e0    cset    w0, eq
   94c88:   3900c280    strb    w0, [x20, #48]
   94c8c:   14000004    b   94c9c <CUSBAudioStreamingDevice::Configure()+0x5c>
   94c90:   39400a60    ldrb    w0, [x19, #2]
   94c94:   7100041f    cmp w0, #0x1
   94c98:   540002c0    b.eq    94cf0 <CUSBAudioStreamingDevice::Configure()+0xb0>
   94c9c:   52800481    mov w1, #0x24
   94ca0:   aa1403e0    mov x0, x20
   94ca4:   97ffd637    bl  8a580 <CUSBFunction::GetDescriptor(unsigned char)>
   94ca8:   aa0003f3    mov x19, x0
   94cac:   b5ffff20    cbnz    x0, 94c90 <CUSBAudioStreamingDevice::Configure()+0x50>
   94cb0:   94002a54    bl  9f600 <CLogger::Get()>
   94cb4:   f940fa81    ldr x1, [x20, #496]
   94cb8:   b00000e3    adrp    x3, b1000 <_etext+0x1f9c>
   94cbc:   912ec063    add x3, x3, #0xbb0
   94cc0:   52800042    mov w2, #0x2
   94cc4:   94002c37    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   94cc8:   52800013    mov w19, #0x0
   94ccc:   910003bf    mov sp, x29
   94cd0:   2a1303e0    mov w0, w19
   94cd4:   a94153f3    ldp x19, x20, [sp, #16]
   94cd8:   a9425bf5    ldp x21, x22, [sp, #32]
   94cdc:   a94363f7    ldp x23, x24, [sp, #48]
   94ce0:   a9446bf9    ldp x25, x26, [sp, #64]
   94ce4:   f9402bfb    ldr x27, [sp, #80]
   94ce8:   a8d37bfd    ldp x29, x30, [sp], #304
   94cec:   d65f03c0    ret
   94cf0:   52800481    mov w1, #0x24
   94cf4:   aa1403e0    mov x0, x20
   94cf8:   97ffd622    bl  8a580 <CUSBFunction::GetDescriptor(unsigned char)>
   94cfc:   aa0003f5    mov x21, x0
   94d00:   b4000080    cbz x0, 94d10 <CUSBAudioStreamingDevice::Configure()+0xd0>
   94d04:   39400800    ldrb    w0, [x0, #2]
   94d08:   7100081f    cmp w0, #0x2
   94d0c:   54000100    b.eq    94d2c <CUSBAudioStreamingDevice::Configure()+0xec>
   94d10:   94002a3c    bl  9f600 <CLogger::Get()>
   94d14:   f940fa81    ldr x1, [x20, #496]
   94d18:   b00000e3    adrp    x3, b1000 <_etext+0x1f9c>
   94d1c:   912f4063    add x3, x3, #0xbd0
   94d20:   52800042    mov w2, #0x2
   94d24:   94002c1f    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   94d28:   17ffffe8    b   94cc8 <CUSBAudioStreamingDevice::Configure()+0x88>
   94d2c:   528000a1    mov w1, #0x5
   94d30:   aa1403e0    mov x0, x20
   94d34:   97ffd613    bl  8a580 <CUSBFunction::GetDescriptor(unsigned char)>
   94d38:   aa0003f7    mov x23, x0
   94d3c:   b40018e0    cbz x0, 95058 <CUSBAudioStreamingDevice::Configure()+0x418>
   94d40:   39400c01    ldrb    w1, [x0, #3]
   94d44:   52800660    mov w0, #0x33
   94d48:   0a010000    and w0, w0, w1
   94d4c:   7100041f    cmp w0, #0x1
   94d50:   54001841    b.ne    95058 <CUSBAudioStreamingDevice::Configure()+0x418>
   94d54:   39c00ae1    ldrsb   w1, [x23, #2]
   94d58:   3940c282    ldrb    w2, [x20, #48]
   94d5c:   2a2103e0    mvn w0, w1
   94d60:   531f7c00    lsr w0, w0, #31
   94d64:   39013280    strb    w0, [x20, #76]
   94d68:   39400ea0    ldrb    w0, [x21, #3]
   94d6c:   36001902    tbz w2, #0, 9508c <CUSBAudioStreamingDevice::Configure()+0x44c>
   94d70:   7100041f    cmp w0, #0x1
   94d74:   54001ba1    b.ne    950e8 <CUSBAudioStreamingDevice::Configure()+0x4a8>
   94d78:   394012a2    ldrb    w2, [x21, #4]
   94d7c:   b9402e80    ldr w0, [x20, #44]
   94d80:   6b00005f    cmp w2, w0
   94d84:   54001b21    b.ne    950e8 <CUSBAudioStreamingDevice::Configure()+0x4a8>
   94d88:   394016a2    ldrb    w2, [x21, #5]
   94d8c:   b9402a80    ldr w0, [x20, #40]
   94d90:   6b00005f    cmp w2, w0
   94d94:   54001aa1    b.ne    950e8 <CUSBAudioStreamingDevice::Configure()+0x4a8>
   94d98:   39402a60    ldrb    w0, [x19, #10]
   94d9c:   34001a60    cbz w0, 950e8 <CUSBAudioStreamingDevice::Configure()+0x4a8>
   94da0:   b9005280    str w0, [x20, #80]
   94da4:   37f81ce1    tbnz    w1, #31, 95140 <CUSBAudioStreamingDevice::Configure()+0x500>
   94da8:   7100041f    cmp w0, #0x1
   94dac:   540022c0    b.eq    95204 <CUSBAudioStreamingDevice::Configure()+0x5c4>
   94db0:   39400ee0    ldrb    w0, [x23, #3]
   94db4:   121e0400    and w0, w0, #0xc
   94db8:   7100101f    cmp w0, #0x4
   94dbc:   54001f40    b.eq    951a4 <CUSBAudioStreamingDevice::Configure()+0x564>
   94dc0:   7100301f    cmp w0, #0xc
   94dc4:   d2800400    mov x0, #0x20
   94dc8:   1a9f17e1    cset    w1, eq
   94dcc:   39045281    strb    w1, [x20, #276]
   94dd0:   94004a7c    bl  a77c0 <operator new(unsigned long)>
   94dd4:   aa0003f8    mov x24, x0
   94dd8:   aa1403e0    mov x0, x20
   94ddc:   97ffd5c5    bl  8a4f0 <CUSBFunction::GetDevice() const>
   94de0:   aa0003e1    mov x1, x0
   94de4:   aa1703e2    mov x2, x23
   94de8:   aa1803e0    mov x0, x24
   94dec:   97ffd3f9    bl  89dd0 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   94df0:   f9001e98    str x24, [x20, #56]
   94df4:   39401ae0    ldrb    w0, [x23, #6]
   94df8:   34001fa0    cbz w0, 951ec <CUSBAudioStreamingDevice::Configure()+0x5ac>
   94dfc:   51000400    sub w0, w0, #0x1
   94e00:   52800021    mov w1, #0x1
   94e04:   1ac02021    lsl w1, w1, w0
   94e08:   aa1403e0    mov x0, x20
   94e0c:   12800018    mov w24, #0xffffffff
   94e10:   b9004a81    str w1, [x20, #72]
   94e14:   97ffd4e7    bl  8a1b0 <CUSBFunction::Configure()>
   94e18:   36001b80    tbz w0, #0, 95188 <CUSBAudioStreamingDevice::Configure()+0x548>
   94e1c:   aa1403e0    mov x0, x20
   94e20:   11000718    add w24, w24, #0x1
   94e24:   97ffd5b3    bl  8a4f0 <CUSBFunction::GetDevice() const>
   94e28:   2a1803e1    mov w1, w24
   94e2c:   97ffce01    bl  88630 <CUSBDevice::GetFunction(unsigned int)>
   94e30:   aa0003f7    mov x23, x0
   94e34:   b40018c0    cbz x0, 9514c <CUSBAudioStreamingDevice::Configure()+0x50c>
   94e38:   97ffd636    bl  8a710 <CUSBFunction::GetInterfaceClass() const>
   94e3c:   12001c00    and w0, w0, #0xff
   94e40:   7100041f    cmp w0, #0x1
   94e44:   54fffec1    b.ne    94e1c <CUSBAudioStreamingDevice::Configure()+0x1dc>
   94e48:   aa1703e0    mov x0, x23
   94e4c:   97ffd63d    bl  8a740 <CUSBFunction::GetInterfaceSubClass() const>
   94e50:   12001c1b    and w27, w0, #0xff
   94e54:   7100077f    cmp w27, #0x1
   94e58:   54fffe21    b.ne    94e1c <CUSBAudioStreamingDevice::Configure()+0x1dc>
   94e5c:   39413282    ldrb    w2, [x20, #76]
   94e60:   b9405281    ldr w1, [x20, #80]
   94e64:   3940c280    ldrb    w0, [x20, #48]
   94e68:   39017282    strb    w2, [x20, #92]
   94e6c:   b9006281    str w1, [x20, #96]
   94e70:   37001d80    tbnz    w0, #0, 95220 <CUSBAudioStreamingDevice::Configure()+0x5e0>
   94e74:   39401ea0    ldrb    w0, [x21, #7]
   94e78:   35003460    cbnz    w0, 95504 <CUSBAudioStreamingDevice::Configure()+0x8c4>
   94e7c:   b900669b    str w27, [x20, #100]
   94e80:   39402aa1    ldrb    w1, [x21, #10]
   94e84:   394026a0    ldrb    w0, [x21, #9]
   94e88:   394022a2    ldrb    w2, [x21, #8]
   94e8c:   53103c21    lsl w1, w1, #16
   94e90:   2a002020    orr w0, w1, w0, lsl #8
   94e94:   2a020000    orr w0, w0, w2
   94e98:   b9006a80    str w0, [x20, #104]
   94e9c:   394036a1    ldrb    w1, [x21, #13]
   94ea0:   394032a0    ldrb    w0, [x21, #12]
   94ea4:   39402ea2    ldrb    w2, [x21, #11]
   94ea8:   53103c21    lsl w1, w1, #16
   94eac:   2a002020    orr w0, w1, w0, lsl #8
   94eb0:   2a020000    orr w0, w0, w2
   94eb4:   b9006e80    str w0, [x20, #108]
   94eb8:   39400e73    ldrb    w19, [x19, #3]
   94ebc:   340034d3    cbz w19, 95554 <CUSBAudioStreamingDevice::Configure()+0x914>
   94ec0:   39413280    ldrb    w0, [x20, #76]
   94ec4:   36002f20    tbz w0, #0, 954a8 <CUSBAudioStreamingDevice::Configure()+0x868>
   94ec8:   b9405680    ldr w0, [x20, #84]
   94ecc:   7100041f    cmp w0, #0x1
   94ed0:   54003d21    b.ne    95674 <CUSBAudioStreamingDevice::Configure()+0xa34>
   94ed4:   52800002    mov w2, #0x0
   94ed8:   2a1303e1    mov w1, w19
   94edc:   aa1703e0    mov x0, x23
   94ee0:   97fff958    bl  93440 <CUSBAudioControlDevice::GetTerminalType(unsigned char, bool) const>
   94ee4:   12003c03    and w3, w0, #0xffff
   94ee8:   52806022    mov w2, #0x301
   94eec:   2a1303e1    mov w1, w19
   94ef0:   7104007f    cmp w3, #0x100
   94ef4:   1a821063    csel    w3, w3, w2, ne
   94ef8:   aa1703e0    mov x0, x23
   94efc:   52800002    mov w2, #0x0
   94f00:   79019a83    strh    w3, [x20, #204]
   94f04:   97fff9bb    bl  935f0 <CUSBAudioControlDevice::GetFeatureUnitID(unsigned char, bool) const>
   94f08:   b9405681    ldr w1, [x20, #84]
   94f0c:   39071a80    strb    w0, [x20, #454]
   94f10:   b900ca81    str w1, [x20, #200]
   94f14:   34003a41    cbz w1, 9565c <CUSBAudioStreamingDevice::Configure()+0xa1c>
   94f18:   aa1703e1    mov x1, x23
   94f1c:   aa1403e0    mov x0, x20
   94f20:   97fffae4    bl  93ab0 <CUSBAudioStreamingDevice::InitTerminalControlInfo(CUSBAudioControlDevice*) [clone .part.0]>
   94f24:   12001c13    and w19, w0, #0xff
   94f28:   3607ed00    tbz w0, #0, 94cc8 <CUSBAudioStreamingDevice::Configure()+0x88>
   94f2c:   39413280    ldrb    w0, [x20, #76]
   94f30:   370000a0    tbnz    w0, #0, 94f44 <CUSBAudioStreamingDevice::Configure()+0x304>
   94f34:   52800001    mov w1, #0x0
   94f38:   aa1403e0    mov x0, x20
   94f3c:   97fffbb1    bl  93e00 <CUSBAudioStreamingDevice::SelectInputTerminal(unsigned int)>
   94f40:   36003160    tbz w0, #0, 9556c <CUSBAudioStreamingDevice::Configure()+0x92c>
   94f44:   910183a0    add x0, x29, #0x60
   94f48:   94003b62    bl  a3cd0 <CString::CString()>
   94f4c:   b9406680    ldr w0, [x20, #100]
   94f50:   340003e0    cbz w0, 94fcc <CUSBAudioStreamingDevice::Configure()+0x38c>
   94f54:   b00000fa    adrp    x26, b1000 <_etext+0x1f9c>
   94f58:   9138435a    add x26, x26, #0xe10
   94f5c:   b00000f9    adrp    x25, b1000 <_etext+0x1f9c>
   94f60:   91380339    add x25, x25, #0xe00
   94f64:   9101a296    add x22, x20, #0x68
   94f68:   52800018    mov w24, #0x0
   94f6c:   910283b5    add x21, x29, #0xa0
   94f70:   900000fb    adrp    x27, b0000 <_etext+0xf9c>
   94f74:   aa1503e0    mov x0, x21
   94f78:   94003b56    bl  a3cd0 <CString::CString()>
   94f7c:   29400ec2    ldp w2, w3, [x22]
   94f80:   6b03005f    cmp w2, w3
   94f84:   54000fa0    b.eq    95178 <CUSBAudioStreamingDevice::Configure()+0x538>
   94f88:   b9400ac4    ldr w4, [x22, #8]
   94f8c:   aa1903e1    mov x1, x25
   94f90:   aa1503e0    mov x0, x21
   94f94:   9400415b    bl  a5500 <CString::Format(char const*, ...)>
   94f98:   35000e98    cbnz    w24, 95168 <CUSBAudioStreamingDevice::Configure()+0x528>
   94f9c:   aa1503e0    mov x0, x21
   94fa0:   11000718    add w24, w24, #0x1
   94fa4:   94003b8f    bl  a3de0 <CString::operator char const*() const>
   94fa8:   aa0003e1    mov x1, x0
   94fac:   910183a0    add x0, x29, #0x60
   94fb0:   94003be0    bl  a3f30 <CString::Append(char const*)>
   94fb4:   aa1503e0    mov x0, x21
   94fb8:   910032d6    add x22, x22, #0xc
   94fbc:   94003b09    bl  a3be0 <CString::~CString()>
   94fc0:   b9406680    ldr w0, [x20, #100]
   94fc4:   6b18001f    cmp w0, w24
   94fc8:   54fffd68    b.hi    94f74 <CUSBAudioStreamingDevice::Configure()+0x334>
   94fcc:   910203a0    add x0, x29, #0x80
   94fd0:   94003b40    bl  a3cd0 <CString::CString()>
   94fd4:   b9405680    ldr w0, [x20, #84]
   94fd8:   34001e80    cbz w0, 953a8 <CUSBAudioStreamingDevice::Configure()+0x768>
   94fdc:   b00000fa    adrp    x26, b1000 <_etext+0x1f9c>
   94fe0:   9138635a    add x26, x26, #0xe18
   94fe4:   900000f9    adrp    x25, b0000 <_etext+0xf9c>
   94fe8:   9112c339    add x25, x25, #0x4b0
   94fec:   91033298    add x24, x20, #0xcc
   94ff0:   52800016    mov w22, #0x0
   94ff4:   910283b5    add x21, x29, #0xa0
   94ff8:   1400000d    b   9502c <CUSBAudioStreamingDevice::Configure()+0x3ec>
   94ffc:   aa1503e0    mov x0, x21
   95000:   110006d6    add w22, w22, #0x1
   95004:   94003b77    bl  a3de0 <CString::operator char const*() const>
   95008:   aa0003e1    mov x1, x0
   9500c:   910203a0    add x0, x29, #0x80
   95010:   94003bc8    bl  a3f30 <CString::Append(char const*)>
   95014:   aa1503e0    mov x0, x21
   95018:   91004318    add x24, x24, #0x10
   9501c:   94003af1    bl  a3be0 <CString::~CString()>
   95020:   b9405680    ldr w0, [x20, #84]
   95024:   6b16001f    cmp w0, w22
   95028:   54001c09    b.ls    953a8 <CUSBAudioStreamingDevice::Configure()+0x768>
   9502c:   aa1503e0    mov x0, x21
   95030:   94003b28    bl  a3cd0 <CString::CString()>
   95034:   79400302    ldrh    w2, [x24]
   95038:   aa1a03e1    mov x1, x26
   9503c:   aa1503e0    mov x0, x21
   95040:   94004130    bl  a5500 <CString::Format(char const*, ...)>
   95044:   34fffdd6    cbz w22, 94ffc <CUSBAudioStreamingDevice::Configure()+0x3bc>
   95048:   aa1903e1    mov x1, x25
   9504c:   910203a0    add x0, x29, #0x80
   95050:   94003bb8    bl  a3f30 <CString::Append(char const*)>
   95054:   17ffffea    b   94ffc <CUSBAudioStreamingDevice::Configure()+0x3bc>
   95058:   9400296a    bl  9f600 <CLogger::Get()>
   9505c:   f940fa81    ldr x1, [x20, #496]
   95060:   900000e3    adrp    x3, b1000 <_etext+0x1f9c>
   95064:   912fc063    add x3, x3, #0xbf0
   95068:   52800082    mov w2, #0x4
   9506c:   94002b4d    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   95070:   17ffff16    b   94cc8 <CUSBAudioStreamingDevice::Configure()+0x88>
   95074:   900000e1    adrp    x1, b1000 <_etext+0x1f9c>
   95078:   900000e0    adrp    x0, b1000 <_etext+0x1f9c>
   9507c:   9121e021    add x1, x1, #0x878
   95080:   912e6000    add x0, x0, #0xb98
   95084:   52801f02    mov w2, #0xf8
   95088:   94001e8e    bl  9cac0 <assertion_failed>
   9508c:   7100041f    cmp w0, #0x1
   95090:   54000161    b.ne    950bc <CUSBAudioStreamingDevice::Configure()+0x47c>
   95094:   394012a0    ldrb    w0, [x21, #4]
   95098:   34000120    cbz w0, 950bc <CUSBAudioStreamingDevice::Configure()+0x47c>
   9509c:   394016a3    ldrb    w3, [x21, #5]
   950a0:   b9402e82    ldr w2, [x20, #44]
   950a4:   6b02007f    cmp w3, w2
   950a8:   540000a1    b.ne    950bc <CUSBAudioStreamingDevice::Configure()+0x47c>
   950ac:   39401aa3    ldrb    w3, [x21, #6]
   950b0:   b9402a82    ldr w2, [x20, #40]
   950b4:   6b02007f    cmp w3, w2
   950b8:   54ffe740    b.eq    94da0 <CUSBAudioStreamingDevice::Configure()+0x160>
   950bc:   94002951    bl  9f600 <CLogger::Get()>
   950c0:   f940fa81    ldr x1, [x20, #496]
   950c4:   52800042    mov w2, #0x2
   950c8:   900000e3    adrp    x3, b1000 <_etext+0x1f9c>
   950cc:   91304063    add x3, x3, #0xc10
   950d0:   94002b34    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   950d4:   f940fa82    ldr x2, [x20, #496]
   950d8:   aa1503e0    mov x0, x21
   950dc:   394002a1    ldrb    w1, [x21]
   950e0:   94002044    bl  9d1f0 <debug_hexdump(void const*, unsigned int, char const*)>
   950e4:   17fffef9    b   94cc8 <CUSBAudioStreamingDevice::Configure()+0x88>
   950e8:   94002946    bl  9f600 <CLogger::Get()>
   950ec:   39402a64    ldrb    w4, [x19, #10]
   950f0:   900000e3    adrp    x3, b1000 <_etext+0x1f9c>
   950f4:   52800042    mov w2, #0x2
   950f8:   9130c063    add x3, x3, #0xc30
   950fc:   f940fa81    ldr x1, [x20, #496]
   95100:   94002b28    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   95104:   f940fa82    ldr x2, [x20, #496]
   95108:   aa1503e0    mov x0, x21
   9510c:   394002a1    ldrb    w1, [x21]
   95110:   94002038    bl  9d1f0 <debug_hexdump(void const*, unsigned int, char const*)>
   95114:   17fffeed    b   94cc8 <CUSBAudioStreamingDevice::Configure()+0x88>
   95118:   d2800400    mov x0, #0x20
   9511c:   940049a9    bl  a77c0 <operator new(unsigned long)>
   95120:   aa0003f9    mov x25, x0
   95124:   aa1403e0    mov x0, x20
   95128:   97ffd4f2    bl  8a4f0 <CUSBFunction::GetDevice() const>
   9512c:   aa0003e1    mov x1, x0
   95130:   aa1803e2    mov x2, x24
   95134:   aa1903e0    mov x0, x25
   95138:   97ffd326    bl  89dd0 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   9513c:   f9002299    str x25, [x20, #64]
   95140:   39400ee0    ldrb    w0, [x23, #3]
   95144:   121e0400    and w0, w0, #0xc
   95148:   17ffff1e    b   94dc0 <CUSBAudioStreamingDevice::Configure()+0x180>
   9514c:   9400292d    bl  9f600 <CLogger::Get()>
   95150:   f940fa81    ldr x1, [x20, #496]
   95154:   900000e3    adrp    x3, b1000 <_etext+0x1f9c>
   95158:   91330063    add x3, x3, #0xcc0
   9515c:   52800042    mov w2, #0x2
   95160:   94002b10    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   95164:   17fffed9    b   94cc8 <CUSBAudioStreamingDevice::Configure()+0x88>
   95168:   9112c361    add x1, x27, #0x4b0
   9516c:   910183a0    add x0, x29, #0x60
   95170:   94003b70    bl  a3f30 <CString::Append(char const*)>
   95174:   17ffff8a    b   94f9c <CUSBAudioStreamingDevice::Configure()+0x35c>
   95178:   aa1a03e1    mov x1, x26
   9517c:   aa1503e0    mov x0, x21
   95180:   940040e0    bl  a5500 <CString::Format(char const*, ...)>
   95184:   17ffff85    b   94f98 <CUSBAudioStreamingDevice::Configure()+0x358>
   95188:   9400291e    bl  9f600 <CLogger::Get()>
   9518c:   f940fa81    ldr x1, [x20, #496]
   95190:   d00000c3    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   95194:   9119e063    add x3, x3, #0x678
   95198:   52800042    mov w2, #0x2
   9519c:   94002b01    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   951a0:   17fffeca    b   94cc8 <CUSBAudioStreamingDevice::Configure()+0x88>
   951a4:   528000a1    mov w1, #0x5
   951a8:   aa1403e0    mov x0, x20
   951ac:   97ffd4f5    bl  8a580 <CUSBFunction::GetDescriptor(unsigned char)>
   951b0:   aa0003f8    mov x24, x0
   951b4:   b40000e0    cbz x0, 951d0 <CUSBAudioStreamingDevice::Configure()+0x590>
   951b8:   39400c00    ldrb    w0, [x0, #3]
   951bc:   12001400    and w0, w0, #0x3f
   951c0:   7100441f    cmp w0, #0x11
   951c4:   54000061    b.ne    951d0 <CUSBAudioStreamingDevice::Configure()+0x590>
   951c8:   39c00b00    ldrsb   w0, [x24, #2]
   951cc:   37fffa60    tbnz    w0, #31, 95118 <CUSBAudioStreamingDevice::Configure()+0x4d8>
   951d0:   9400290c    bl  9f600 <CLogger::Get()>
   951d4:   f940fa81    ldr x1, [x20, #496]
   951d8:   900000e3    adrp    x3, b1000 <_etext+0x1f9c>
   951dc:   9131e063    add x3, x3, #0xc78
   951e0:   52800042    mov w2, #0x2
   951e4:   94002aef    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   951e8:   17fffeb8    b   94cc8 <CUSBAudioStreamingDevice::Configure()+0x88>
   951ec:   900000e1    adrp    x1, b1000 <_etext+0x1f9c>
   951f0:   900000e0    adrp    x0, b1000 <_etext+0x1f9c>
   951f4:   9121e021    add x1, x1, #0x878
   951f8:   91328000    add x0, x0, #0xca0
   951fc:   52802de2    mov w2, #0x16f
   95200:   94001e30    bl  9cac0 <assertion_failed>
   95204:   940028ff    bl  9f600 <CLogger::Get()>
   95208:   f940fa81    ldr x1, [x20, #496]
   9520c:   900000e3    adrp    x3, b1000 <_etext+0x1f9c>
   95210:   91316063    add x3, x3, #0xc58
   95214:   52800042    mov w2, #0x2
   95218:   94002ae2    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   9521c:   17fffeab    b   94cc8 <CUSBAudioStreamingDevice::Configure()+0x88>
   95220:   52800001    mov w1, #0x0
   95224:   aa1703e0    mov x0, x23
   95228:   97fff912    bl  93670 <CUSBAudioControlDevice::GetClockSelectorID(unsigned int)>
   9522c:   72001c15    ands    w21, w0, #0xff
   95230:   910003f8    mov x24, sp
   95234:   54000220    b.eq    95278 <CUSBAudioStreamingDevice::Configure()+0x638>
   95238:   aa1403e0    mov x0, x20
   9523c:   390002db    strb    w27, [x22]
   95240:   97ffd4c4    bl  8a550 <CUSBFunction::GetHost() const>
   95244:   aa0003fa    mov x26, x0
   95248:   aa1403e0    mov x0, x20
   9524c:   97ffd4b5    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   95250:   aa0003e1    mov x1, x0
   95254:   2a1b03e7    mov w7, w27
   95258:   aa1603e6    mov x6, x22
   9525c:   53181ea5    ubfiz   w5, w21, #8, #8
   95260:   2a1b03e3    mov w3, w27
   95264:   aa1a03e0    mov x0, x26
   95268:   52802004    mov w4, #0x100
   9526c:   52800422    mov w2, #0x21
   95270:   97ffaf68    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   95274:   37f81e40    tbnz    w0, #31, 9563c <CUSBAudioStreamingDevice::Configure()+0x9fc>
   95278:   39400e61    ldrb    w1, [x19, #3]
   9527c:   aa1703e0    mov x0, x23
   95280:   97fff888    bl  934a0 <CUSBAudioControlDevice::GetClockSourceID(unsigned char) const>
   95284:   72001c1f    tst w0, #0xff
   95288:   39071280    strb    w0, [x20, #452]
   9528c:   54002200    b.eq    956cc <CUSBAudioStreamingDevice::Configure()+0xa8c>
   95290:   aa1403e0    mov x0, x20
   95294:   97ffd4af    bl  8a550 <CUSBFunction::GetHost() const>
   95298:   aa0003f5    mov x21, x0
   9529c:   aa1403e0    mov x0, x20
   952a0:   97ffd4a0    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   952a4:   39471285    ldrb    w5, [x20, #452]
   952a8:   52800047    mov w7, #0x2
   952ac:   aa0003e1    mov x1, x0
   952b0:   aa1603e6    mov x6, x22
   952b4:   aa1503e0    mov x0, x21
   952b8:   2a0703e3    mov w3, w7
   952bc:   52802004    mov w4, #0x100
   952c0:   12800bc2    mov w2, #0xffffffa1
   952c4:   53181ca5    ubfiz   w5, w5, #8, #8
   952c8:   97ffaf52    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   952cc:   37f81f00    tbnz    w0, #31, 956ac <CUSBAudioStreamingDevice::Configure()+0xa6c>
   952d0:   794002d9    ldrh    w25, [x22]
   952d4:   52800196    mov w22, #0xc
   952d8:   aa1403e0    mov x0, x20
   952dc:   1b167f36    mul w22, w25, w22
   952e0:   11000ac1    add w1, w22, #0x2
   952e4:   aa0103f6    mov x22, x1
   952e8:   d1000421    sub x1, x1, #0x1
   952ec:   b2401421    orr x1, x1, #0x3f
   952f0:   91010021    add x1, x1, #0x40
   952f4:   927cec21    and x1, x1, #0xfffffffffffffff0
   952f8:   cb2163ff    sub sp, sp, x1
   952fc:   97ffd495    bl  8a550 <CUSBFunction::GetHost() const>
   95300:   aa0003fa    mov x26, x0
   95304:   aa1403e0    mov x0, x20
   95308:   97ffd486    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   9530c:   39471285    ldrb    w5, [x20, #452]
   95310:   9100fff5    add x21, sp, #0x3f
   95314:   aa0003e1    mov x1, x0
   95318:   927ae6b5    and x21, x21, #0xffffffffffffffc0
   9531c:   2a1603e7    mov w7, w22
   95320:   aa1a03e0    mov x0, x26
   95324:   aa1503e6    mov x6, x21
   95328:   52802004    mov w4, #0x100
   9532c:   52800043    mov w3, #0x2
   95330:   12800bc2    mov w2, #0xffffffa1
   95334:   53181ca5    ubfiz   w5, w5, #8, #8
   95338:   97ffaf36    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   9533c:   37f81a80    tbnz    w0, #31, 9568c <CUSBAudioStreamingDevice::Configure()+0xa4c>
   95340:   7100233f    cmp w25, #0x8
   95344:   52800102    mov w2, #0x8
   95348:   1a829322    csel    w2, w25, w2, ls
   9534c:   b9006682    str w2, [x20, #100]
   95350:   91000aa0    add x0, x21, #0x2
   95354:   34000259    cbz w25, 9539c <CUSBAudioStreamingDevice::Configure()+0x75c>
   95358:   9101a281    add x1, x20, #0x68
   9535c:   52800003    mov w3, #0x0
   95360:   79400008    ldrh    w8, [x0]
   95364:   aa0003e4    mov x4, x0
   95368:   11000463    add w3, w3, #0x1
   9536c:   6b03005f    cmp w2, w3
   95370:   91003000    add x0, x0, #0xc
   95374:   785f6006    ldurh   w6, [x0, #-10]
   95378:   785f8007    ldurh   w7, [x0, #-8]
   9537c:   785fa005    ldurh   w5, [x0, #-6]
   95380:   aa064106    orr x6, x8, x6, lsl #16
   95384:   aa0540e5    orr x5, x7, x5, lsl #16
   95388:   29001426    stp w6, w5, [x1]
   9538c:   91003021    add x1, x1, #0xc
   95390:   b9400884    ldr w4, [x4, #8]
   95394:   b81fc024    stur    w4, [x1, #-4]
   95398:   54fffe48    b.hi    95360 <CUSBAudioStreamingDevice::Configure()+0x720>
   9539c:   39400e73    ldrb    w19, [x19, #3]
   953a0:   9100031f    mov sp, x24
   953a4:   17fffec6    b   94ebc <CUSBAudioStreamingDevice::Configure()+0x27c>
   953a8:   aa1703e0    mov x0, x23
   953ac:   91074296    add x22, x20, #0x1d0
   953b0:   97fff810    bl  933f0 <CUSBAudioControlDevice::GetDeviceNumber() const>
   953b4:   2a0003f5    mov w21, w0
   953b8:   aa1703e0    mov x0, x23
   953bc:   97fff819    bl  93420 <CUSBAudioControlDevice::GetNextStreamingSubDeviceNumber()>
   953c0:   90000101    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   953c4:   2a1503e2    mov w2, w21
   953c8:   2a0003e3    mov w3, w0
   953cc:   910f6021    add x1, x1, #0x3d8
   953d0:   aa1603e0    mov x0, x22
   953d4:   9400404b    bl  a5500 <CString::Format(char const*, ...)>
   953d8:   940021a2    bl  9da60 <CDeviceNameService::Get()>
   953dc:   aa0003f5    mov x21, x0
   953e0:   aa1603e0    mov x0, x22
   953e4:   94003a7f    bl  a3de0 <CString::operator char const*() const>
   953e8:   aa0003e1    mov x1, x0
   953ec:   aa1403e2    mov x2, x20
   953f0:   52800003    mov w3, #0x0
   953f4:   aa1503e0    mov x0, x21
   953f8:   940020aa    bl  9d6a0 <CDeviceNameService::AddDevice(char const*, CDevice*, bool)>
   953fc:   aa1603e0    mov x0, x22
   95400:   900000f5    adrp    x21, b1000 <_etext+0x1f9c>
   95404:   912e42b5    add x21, x21, #0xb90
   95408:   94003a76    bl  a3de0 <CString::operator char const*() const>
   9540c:   f900fa80    str x0, [x20, #496]
   95410:   9400287c    bl  9f600 <CLogger::Get()>
   95414:   39413281    ldrb    w1, [x20, #76]
   95418:   aa0003f6    mov x22, x0
   9541c:   900000e2    adrp    x2, b1000 <_etext+0x1f9c>
   95420:   912e2042    add x2, x2, #0xb88
   95424:   910203a0    add x0, x29, #0x80
   95428:   f940fa97    ldr x23, [x20, #496]
   9542c:   f240003f    tst x1, #0x1
   95430:   9a8202b5    csel    x21, x21, x2, eq
   95434:   94003a6b    bl  a3de0 <CString::operator char const*() const>
   95438:   b9402a87    ldr w7, [x20, #40]
   9543c:   900000e3    adrp    x3, b1000 <_etext+0x1f9c>
   95440:   aa0003e5    mov x5, x0
   95444:   aa1503e4    mov x4, x21
   95448:   aa1703e1    mov x1, x23
   9544c:   b9405286    ldr w6, [x20, #80]
   95450:   91388063    add x3, x3, #0xe20
   95454:   aa1603e0    mov x0, x22
   95458:   52800062    mov w2, #0x3
   9545c:   94002a51    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   95460:   94002868    bl  9f600 <CLogger::Get()>
   95464:   f940fa95    ldr x21, [x20, #496]
   95468:   aa0003e2    mov x2, x0
   9546c:   910183a0    add x0, x29, #0x60
   95470:   aa0203f4    mov x20, x2
   95474:   94003a5b    bl  a3de0 <CString::operator char const*() const>
   95478:   900000e3    adrp    x3, b1000 <_etext+0x1f9c>
   9547c:   aa0003e4    mov x4, x0
   95480:   91394063    add x3, x3, #0xe50
   95484:   aa1403e0    mov x0, x20
   95488:   aa1503e1    mov x1, x21
   9548c:   52800062    mov w2, #0x3
   95490:   94002a44    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   95494:   910203a0    add x0, x29, #0x80
   95498:   940039d2    bl  a3be0 <CString::~CString()>
   9549c:   910183a0    add x0, x29, #0x60
   954a0:   940039d0    bl  a3be0 <CString::~CString()>
   954a4:   17fffe0a    b   94ccc <CUSBAudioStreamingDevice::Configure()+0x8c>
   954a8:   2a1303e1    mov w1, w19
   954ac:   aa1703e0    mov x0, x23
   954b0:   97fff81c    bl  93520 <CUSBAudioControlDevice::GetSelectorUnitID(unsigned char) const>
   954b4:   72001c1f    tst w0, #0xff
   954b8:   39071680    strb    w0, [x20, #453]
   954bc:   2a0003e1    mov w1, w0
   954c0:   54000701    b.ne    955a0 <CUSBAudioStreamingDevice::Configure()+0x960>
   954c4:   b9405695    ldr w21, [x20, #84]
   954c8:   710006bf    cmp w21, #0x1
   954cc:   540005e1    b.ne    95588 <CUSBAudioStreamingDevice::Configure()+0x948>
   954d0:   2a1503e2    mov w2, w21
   954d4:   2a1303e1    mov w1, w19
   954d8:   aa1703e0    mov x0, x23
   954dc:   97fff7d9    bl  93440 <CUSBAudioControlDevice::GetTerminalType(unsigned char, bool) const>
   954e0:   2a0003e3    mov w3, w0
   954e4:   2a1303e1    mov w1, w19
   954e8:   2a1503e2    mov w2, w21
   954ec:   aa1703e0    mov x0, x23
   954f0:   79019a83    strh    w3, [x20, #204]
   954f4:   97fff83f    bl  935f0 <CUSBAudioControlDevice::GetFeatureUnitID(unsigned char, bool) const>
   954f8:   b9405681    ldr w1, [x20, #84]
   954fc:   39071a80    strb    w0, [x20, #454]
   95500:   17fffe84    b   94f10 <CUSBAudioStreamingDevice::Configure()+0x2d0>
   95504:   910022b5    add x21, x21, #0x8
   95508:   52800062    mov w2, #0x3
   9550c:   52800101    mov w1, #0x8
   95510:   7100201f    cmp w0, #0x8
   95514:   1a819000    csel    w0, w0, w1, ls
   95518:   9ba25402    umaddl  x2, w0, w2, x21
   9551c:   9101a281    add x1, x20, #0x68
   95520:   b9006680    str w0, [x20, #100]
   95524:   39400aa3    ldrb    w3, [x21, #2]
   95528:   394006a0    ldrb    w0, [x21, #1]
   9552c:   384036a4    ldrb    w4, [x21], #3
   95530:   53103c63    lsl w3, w3, #16
   95534:   2a002060    orr w0, w3, w0, lsl #8
   95538:   2a040000    orr w0, w0, w4
   9553c:   eb15005f    cmp x2, x21
   95540:   b9000420    str w0, [x1, #4]
   95544:   b800c420    str w0, [x1], #12
   95548:   54fffee1    b.ne    95524 <CUSBAudioStreamingDevice::Configure()+0x8e4>
   9554c:   39400e73    ldrb    w19, [x19, #3]
   95550:   17fffe5b    b   94ebc <CUSBAudioStreamingDevice::Configure()+0x27c>
   95554:   900000e1    adrp    x1, b1000 <_etext+0x1f9c>
   95558:   900000e0    adrp    x0, b1000 <_etext+0x1f9c>
   9555c:   9121e021    add x1, x1, #0x878
   95560:   91364000    add x0, x0, #0xd90
   95564:   52804062    mov w2, #0x203
   95568:   94001d56    bl  9cac0 <assertion_failed>
   9556c:   94002825    bl  9f600 <CLogger::Get()>
   95570:   f940fa81    ldr x1, [x20, #496]
   95574:   900000e3    adrp    x3, b1000 <_etext+0x1f9c>
   95578:   91376063    add x3, x3, #0xdd8
   9557c:   52800042    mov w2, #0x2
   95580:   94002a08    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   95584:   17fffdd1    b   94cc8 <CUSBAudioStreamingDevice::Configure()+0x88>
   95588:   900000e1    adrp    x1, b1000 <_etext+0x1f9c>
   9558c:   900000e0    adrp    x0, b1000 <_etext+0x1f9c>
   95590:   9121e021    add x1, x1, #0x878
   95594:   91370000    add x0, x0, #0xdc0
   95598:   52804342    mov w2, #0x21a
   9559c:   94001d49    bl  9cac0 <assertion_failed>
   955a0:   aa1703e0    mov x0, x23
   955a4:   97fff7f7    bl  93580 <CUSBAudioControlDevice::GetNumSources(unsigned char) const>
   955a8:   b9005680    str w0, [x20, #84]
   955ac:   340003c0    cbz w0, 95624 <CUSBAudioStreamingDevice::Configure()+0x9e4>
   955b0:   7100101f    cmp w0, #0x4
   955b4:   54000069    b.ls    955c0 <CUSBAudioStreamingDevice::Configure()+0x980>
   955b8:   52800080    mov w0, #0x4
   955bc:   b9005680    str w0, [x20, #84]
   955c0:   d2800013    mov x19, #0x0
   955c4:   91033298    add x24, x20, #0xcc
   955c8:   91071a96    add x22, x20, #0x1c6
   955cc:   2a1303e2    mov w2, w19
   955d0:   39471681    ldrb    w1, [x20, #453]
   955d4:   aa1703e0    mov x0, x23
   955d8:   97fff7f6    bl  935b0 <CUSBAudioControlDevice::GetSourceID(unsigned char, unsigned int) const>
   955dc:   2a0003f5    mov w21, w0
   955e0:   52800022    mov w2, #0x1
   955e4:   2a1503e1    mov w1, w21
   955e8:   aa1703e0    mov x0, x23
   955ec:   97fff795    bl  93440 <CUSBAudioControlDevice::GetTerminalType(unsigned char, bool) const>
   955f0:   2a0003e4    mov w4, w0
   955f4:   d37cee63    lsl x3, x19, #4
   955f8:   2a1503e1    mov w1, w21
   955fc:   aa1703e0    mov x0, x23
   95600:   52800022    mov w2, #0x1
   95604:   78236b04    strh    w4, [x24, x3]
   95608:   97fff7fa    bl  935f0 <CUSBAudioControlDevice::GetFeatureUnitID(unsigned char, bool) const>
   9560c:   38336ac0    strb    w0, [x22, x19]
   95610:   91000673    add x19, x19, #0x1
   95614:   b9405681    ldr w1, [x20, #84]
   95618:   6b13003f    cmp w1, w19
   9561c:   54fffd88    b.hi    955cc <CUSBAudioStreamingDevice::Configure()+0x98c>
   95620:   17fffe3c    b   94f10 <CUSBAudioStreamingDevice::Configure()+0x2d0>
   95624:   900000e1    adrp    x1, b1000 <_etext+0x1f9c>
   95628:   900000e0    adrp    x0, b1000 <_etext+0x1f9c>
   9562c:   9121e021    add x1, x1, #0x878
   95630:   91250000    add x0, x0, #0x940
   95634:   528044a2    mov w2, #0x225
   95638:   94001d22    bl  9cac0 <assertion_failed>
   9563c:   940027f1    bl  9f600 <CLogger::Get()>
   95640:   f940fa81    ldr x1, [x20, #496]
   95644:   900000e3    adrp    x3, b1000 <_etext+0x1f9c>
   95648:   9133a063    add x3, x3, #0xce8
   9564c:   52800082    mov w2, #0x4
   95650:   940029d4    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   95654:   9100031f    mov sp, x24
   95658:   17fffd9c    b   94cc8 <CUSBAudioStreamingDevice::Configure()+0x88>
   9565c:   900000e1    adrp    x1, b1000 <_etext+0x1f9c>
   95660:   900000e0    adrp    x0, b1000 <_etext+0x1f9c>
   95664:   9121e021    add x1, x1, #0x878
   95668:   91250000    add x0, x0, #0x940
   9566c:   528076a2    mov w2, #0x3b5
   95670:   94001d14    bl  9cac0 <assertion_failed>
   95674:   900000e1    adrp    x1, b1000 <_etext+0x1f9c>
   95678:   900000e0    adrp    x0, b1000 <_etext+0x1f9c>
   9567c:   9121e021    add x1, x1, #0x878
   95680:   91370000    add x0, x0, #0xdc0
   95684:   528040c2    mov w2, #0x206
   95688:   94001d0e    bl  9cac0 <assertion_failed>
   9568c:   940027dd    bl  9f600 <CLogger::Get()>
   95690:   f940fa81    ldr x1, [x20, #496]
   95694:   900000e3    adrp    x3, b1000 <_etext+0x1f9c>
   95698:   9135a063    add x3, x3, #0xd68
   9569c:   52800042    mov w2, #0x2
   956a0:   940029c0    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   956a4:   9100031f    mov sp, x24
   956a8:   17fffd88    b   94cc8 <CUSBAudioStreamingDevice::Configure()+0x88>
   956ac:   940027d5    bl  9f600 <CLogger::Get()>
   956b0:   f940fa81    ldr x1, [x20, #496]
   956b4:   900000e3    adrp    x3, b1000 <_etext+0x1f9c>
   956b8:   9134c063    add x3, x3, #0xd30
   956bc:   52800042    mov w2, #0x2
   956c0:   940029b8    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   956c4:   9100031f    mov sp, x24
   956c8:   17fffd80    b   94cc8 <CUSBAudioStreamingDevice::Configure()+0x88>
   956cc:   940027cd    bl  9f600 <CLogger::Get()>
   956d0:   900000e3    adrp    x3, b1000 <_etext+0x1f9c>
   956d4:   f940fa81    ldr x1, [x20, #496]
   956d8:   52800042    mov w2, #0x2
   956dc:   91342063    add x3, x3, #0xd08
   956e0:   39400e64    ldrb    w4, [x19, #3]
   956e4:   940029af    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   956e8:   9100031f    mov sp, x24
   956ec:   17fffd77    b   94cc8 <CUSBAudioStreamingDevice::Configure()+0x88>

00000000000956f0 <CUSBAudioEntity::CUSBAudioEntity(CUSBAudioEntity::TEntityType)>:
   956f0:   aa0003e3    mov x3, x0
   956f4:   2a0103e4    mov w4, w1
   956f8:   d2800142    mov x2, #0xa
   956fc:   91003000    add x0, x0, #0xc
   95700:   52800001    mov w1, #0x0
   95704:   b9000064    str w4, [x3]
   95708:   3900107f    strb    wzr, [x3, #4]
   9570c:   b900087f    str wzr, [x3, #8]
   95710:   b900187f    str wzr, [x3, #24]
   95714:   14004581    b   a6d18 <memset>
   95718:   d503201f    nop
   9571c:   d503201f    nop

0000000000095720 <CUSBAudioEntity::GetEntityType() const>:
   95720:   b9400000    ldr w0, [x0]
   95724:   d65f03c0    ret
   95728:   d503201f    nop
   9572c:   d503201f    nop

0000000000095730 <CUSBAudioEntity::SetID(unsigned char)>:
   95730:   72001c21    ands    w1, w1, #0xff
   95734:   54000060    b.eq    95740 <CUSBAudioEntity::SetID(unsigned char)+0x10>
   95738:   39001001    strb    w1, [x0, #4]
   9573c:   d65f03c0    ret
   95740:   900000e1    adrp    x1, b1000 <_etext+0x1f9c>
   95744:   900000e0    adrp    x0, b1000 <_etext+0x1f9c>
   95748:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   9574c:   9139c021    add x1, x1, #0xe70
   95750:   910003fd    mov x29, sp
   95754:   913a4000    add x0, x0, #0xe90
   95758:   52800602    mov w2, #0x30
   9575c:   94001cd9    bl  9cac0 <assertion_failed>

0000000000095760 <CUSBAudioEntity::GetID() const>:
   95760:   39401000    ldrb    w0, [x0, #4]
   95764:   d65f03c0    ret
   95768:   d503201f    nop
   9576c:   d503201f    nop

0000000000095770 <CUSBAudioEntity::SetNumSources(unsigned int)>:
   95770:   7100283f    cmp w1, #0xa
   95774:   54000068    b.hi    95780 <CUSBAudioEntity::SetNumSources(unsigned int)+0x10>
   95778:   b9000801    str w1, [x0, #8]
   9577c:   d65f03c0    ret
   95780:   900000e1    adrp    x1, b1000 <_etext+0x1f9c>
   95784:   900000e0    adrp    x0, b1000 <_etext+0x1f9c>
   95788:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   9578c:   9139c021    add x1, x1, #0xe70
   95790:   910003fd    mov x29, sp
   95794:   913aa000    add x0, x0, #0xea8
   95798:   52800782    mov w2, #0x3c
   9579c:   94001cc9    bl  9cac0 <assertion_failed>

00000000000957a0 <CUSBAudioEntity::SetSourceID(unsigned int, unsigned char)>:
   957a0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   957a4:   910003fd    mov x29, sp
   957a8:   b9400803    ldr w3, [x0, #8]
   957ac:   6b01007f    cmp w3, w1
   957b0:   54000103    b.cc    957d0 <CUSBAudioEntity::SetSourceID(unsigned int, unsigned char)+0x30>
   957b4:   8b214001    add x1, x0, w1, uxtw
   957b8:   39403020    ldrb    w0, [x1, #12]
   957bc:   35000160    cbnz    w0, 957e8 <CUSBAudioEntity::SetSourceID(unsigned int, unsigned char)+0x48>
   957c0:   12001c42    and w2, w2, #0xff
   957c4:   39003022    strb    w2, [x1, #12]
   957c8:   a8c17bfd    ldp x29, x30, [sp], #16
   957cc:   d65f03c0    ret
   957d0:   900000e1    adrp    x1, b1000 <_etext+0x1f9c>
   957d4:   900000e0    adrp    x0, b1000 <_etext+0x1f9c>
   957d8:   9139c021    add x1, x1, #0xe70
   957dc:   913b4000    add x0, x0, #0xed0
   957e0:   52800862    mov w2, #0x43
   957e4:   94001cb7    bl  9cac0 <assertion_failed>
   957e8:   900000e1    adrp    x1, b1000 <_etext+0x1f9c>
   957ec:   900000e0    adrp    x0, b1000 <_etext+0x1f9c>
   957f0:   9139c021    add x1, x1, #0xe70
   957f4:   913ba000    add x0, x0, #0xee8
   957f8:   52800882    mov w2, #0x44
   957fc:   94001cb1    bl  9cac0 <assertion_failed>

0000000000095800 <CUSBAudioEntity::SetSourceID(unsigned char)>:
   95800:   52800023    mov w3, #0x1
   95804:   39403002    ldrb    w2, [x0, #12]
   95808:   b9000803    str w3, [x0, #8]
   9580c:   35000082    cbnz    w2, 9581c <CUSBAudioEntity::SetSourceID(unsigned char)+0x1c>
   95810:   12001c21    and w1, w1, #0xff
   95814:   39003001    strb    w1, [x0, #12]
   95818:   d65f03c0    ret
   9581c:   900000e1    adrp    x1, b1000 <_etext+0x1f9c>
   95820:   900000e0    adrp    x0, b1000 <_etext+0x1f9c>
   95824:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   95828:   9139c021    add x1, x1, #0xe70
   9582c:   910003fd    mov x29, sp
   95830:   913ba000    add x0, x0, #0xee8
   95834:   52800882    mov w2, #0x44
   95838:   94001ca2    bl  9cac0 <assertion_failed>
   9583c:   d503201f    nop

0000000000095840 <CUSBAudioEntity::GetNumSources() const>:
   95840:   b9400800    ldr w0, [x0, #8]
   95844:   d65f03c0    ret
   95848:   d503201f    nop
   9584c:   d503201f    nop

0000000000095850 <CUSBAudioEntity::GetSourceID(unsigned int) const>:
   95850:   b9400802    ldr w2, [x0, #8]
   95854:   6b01005f    cmp w2, w1
   95858:   54000083    b.cc    95868 <CUSBAudioEntity::GetSourceID(unsigned int) const+0x18>
   9585c:   8b214001    add x1, x0, w1, uxtw
   95860:   39403020    ldrb    w0, [x1, #12]
   95864:   d65f03c0    ret
   95868:   900000e1    adrp    x1, b1000 <_etext+0x1f9c>
   9586c:   900000e0    adrp    x0, b1000 <_etext+0x1f9c>
   95870:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   95874:   9139c021    add x1, x1, #0xe70
   95878:   910003fd    mov x29, sp
   9587c:   913b4000    add x0, x0, #0xed0
   95880:   52800ac2    mov w2, #0x56
   95884:   94001c8f    bl  9cac0 <assertion_failed>
   95888:   d503201f    nop
   9588c:   d503201f    nop

0000000000095890 <CUSBAudioEntity::SetNumChannels(unsigned int)>:
   95890:   7101903f    cmp w1, #0x64
   95894:   54000068    b.hi    958a0 <CUSBAudioEntity::SetNumChannels(unsigned int)+0x10>
   95898:   b9001801    str w1, [x0, #24]
   9589c:   d65f03c0    ret
   958a0:   900000e1    adrp    x1, b1000 <_etext+0x1f9c>
   958a4:   900000e0    adrp    x0, b1000 <_etext+0x1f9c>
   958a8:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   958ac:   9139c021    add x1, x1, #0xe70
   958b0:   910003fd    mov x29, sp
   958b4:   913c4000    add x0, x0, #0xf10
   958b8:   52800ba2    mov w2, #0x5d
   958bc:   94001c81    bl  9cac0 <assertion_failed>

00000000000958c0 <CUSBAudioEntity::GetNumChannels() const>:
   958c0:   b9401800    ldr w0, [x0, #24]
   958c4:   7101901f    cmp w0, #0x64
   958c8:   54000048    b.hi    958d0 <CUSBAudioEntity::GetNumChannels() const+0x10>
   958cc:   d65f03c0    ret
   958d0:   900000e1    adrp    x1, b1000 <_etext+0x1f9c>
   958d4:   900000e0    adrp    x0, b1000 <_etext+0x1f9c>
   958d8:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   958dc:   9139c021    add x1, x1, #0xe70
   958e0:   910003fd    mov x29, sp
   958e4:   913ce000    add x0, x0, #0xf38
   958e8:   52800c82    mov w2, #0x64
   958ec:   94001c75    bl  9cac0 <assertion_failed>

00000000000958f0 <CUSBAudioTerminal::CUSBAudioTerminal(TUSBAudioControlInterfaceDescriptor const*, bool)>:
   958f0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   958f4:   910003fd    mov x29, sp
   958f8:   a90153f3    stp x19, x20, [sp, #16]
   958fc:   aa0003f3    mov x19, x0
   95900:   aa0103f4    mov x20, x1
   95904:   91003000    add x0, x0, #0xc
   95908:   52800001    mov w1, #0x0
   9590c:   f90013f5    str x21, [sp, #32]
   95910:   12001c55    and w21, w2, #0xff
   95914:   d2800142    mov x2, #0xa
   95918:   b900027f    str wzr, [x19]
   9591c:   3900127f    strb    wzr, [x19, #4]
   95920:   b9000a7f    str wzr, [x19, #8]
   95924:   b9001a7f    str wzr, [x19, #24]
   95928:   940044fc    bl  a6d18 <memset>
   9592c:   3900827f    strb    wzr, [x19, #32]
   95930:   b4000a14    cbz x20, 95a70 <CUSBAudioTerminal::CUSBAudioTerminal(TUSBAudioControlInterfaceDescriptor const*, bool)+0x180>
   95934:   39400a80    ldrb    w0, [x20, #2]
   95938:   7100081f    cmp w0, #0x2
   9593c:   1a9f17e1    cset    w1, eq
   95940:   39007261    strb    w1, [x19, #28]
   95944:   540004e0    b.eq    959e0 <CUSBAudioTerminal::CUSBAudioTerminal(TUSBAudioControlInterfaceDescriptor const*, bool)+0xf0>
   95948:   71000c1f    cmp w0, #0x3
   9594c:   54000aa1    b.ne    95aa0 <CUSBAudioTerminal::CUSBAudioTerminal(TUSBAudioControlInterfaceDescriptor const*, bool)+0x1b0>
   95950:   39400e80    ldrb    w0, [x20, #3]
   95954:   36000275    tbz w21, #0, 959a0 <CUSBAudioTerminal::CUSBAudioTerminal(TUSBAudioControlInterfaceDescriptor const*, bool)+0xb0>
   95958:   34000980    cbz w0, 95a88 <CUSBAudioTerminal::CUSBAudioTerminal(TUSBAudioControlInterfaceDescriptor const*, bool)+0x198>
   9595c:   52800022    mov w2, #0x1
   95960:   39403261    ldrb    w1, [x19, #12]
   95964:   39001260    strb    w0, [x19, #4]
   95968:   b9000a62    str w2, [x19, #8]
   9596c:   39401e80    ldrb    w0, [x20, #7]
   95970:   35000a41    cbnz    w1, 95ab8 <CUSBAudioTerminal::CUSBAudioTerminal(TUSBAudioControlInterfaceDescriptor const*, bool)+0x1c8>
   95974:   39003260    strb    w0, [x19, #12]
   95978:   39401282    ldrb    w2, [x20, #4]
   9597c:   39401680    ldrb    w0, [x20, #5]
   95980:   39402281    ldrb    w1, [x20, #8]
   95984:   aa002040    orr x0, x2, x0, lsl #8
   95988:   39008261    strb    w1, [x19, #32]
   9598c:   79003e60    strh    w0, [x19, #30]
   95990:   a94153f3    ldp x19, x20, [sp, #16]
   95994:   f94013f5    ldr x21, [sp, #32]
   95998:   a8c37bfd    ldp x29, x30, [sp], #48
   9599c:   d65f03c0    ret
   959a0:   34000740    cbz w0, 95a88 <CUSBAudioTerminal::CUSBAudioTerminal(TUSBAudioControlInterfaceDescriptor const*, bool)+0x198>
   959a4:   52800022    mov w2, #0x1
   959a8:   39403261    ldrb    w1, [x19, #12]
   959ac:   39001260    strb    w0, [x19, #4]
   959b0:   b9000a62    str w2, [x19, #8]
   959b4:   39401e80    ldrb    w0, [x20, #7]
   959b8:   35000801    cbnz    w1, 95ab8 <CUSBAudioTerminal::CUSBAudioTerminal(TUSBAudioControlInterfaceDescriptor const*, bool)+0x1c8>
   959bc:   39003260    strb    w0, [x19, #12]
   959c0:   39401281    ldrb    w1, [x20, #4]
   959c4:   39401680    ldrb    w0, [x20, #5]
   959c8:   f94013f5    ldr x21, [sp, #32]
   959cc:   aa002020    orr x0, x1, x0, lsl #8
   959d0:   79003e60    strh    w0, [x19, #30]
   959d4:   a94153f3    ldp x19, x20, [sp, #16]
   959d8:   a8c37bfd    ldp x29, x30, [sp], #48
   959dc:   d65f03c0    ret
   959e0:   39400e80    ldrb    w0, [x20, #3]
   959e4:   37000255    tbnz    w21, #0, 95a2c <CUSBAudioTerminal::CUSBAudioTerminal(TUSBAudioControlInterfaceDescriptor const*, bool)+0x13c>
   959e8:   34000500    cbz w0, 95a88 <CUSBAudioTerminal::CUSBAudioTerminal(TUSBAudioControlInterfaceDescriptor const*, bool)+0x198>
   959ec:   39001260    strb    w0, [x19, #4]
   959f0:   39401282    ldrb    w2, [x20, #4]
   959f4:   39401681    ldrb    w1, [x20, #5]
   959f8:   39401e80    ldrb    w0, [x20, #7]
   959fc:   aa012041    orr x1, x2, x1, lsl #8
   95a00:   7101901f    cmp w0, #0x64
   95a04:   79003e61    strh    w1, [x19, #30]
   95a08:   54000288    b.hi    95a58 <CUSBAudioTerminal::CUSBAudioTerminal(TUSBAudioControlInterfaceDescriptor const*, bool)+0x168>
   95a0c:   b9001a60    str w0, [x19, #24]
   95a10:   35fffc00    cbnz    w0, 95990 <CUSBAudioTerminal::CUSBAudioTerminal(TUSBAudioControlInterfaceDescriptor const*, bool)+0xa0>
   95a14:   79403e60    ldrh    w0, [x19, #30]
   95a18:   7104041f    cmp w0, #0x101
   95a1c:   54fffba1    b.ne    95990 <CUSBAudioTerminal::CUSBAudioTerminal(TUSBAudioControlInterfaceDescriptor const*, bool)+0xa0>
   95a20:   52800040    mov w0, #0x2
   95a24:   b9001a60    str w0, [x19, #24]
   95a28:   17ffffda    b   95990 <CUSBAudioTerminal::CUSBAudioTerminal(TUSBAudioControlInterfaceDescriptor const*, bool)+0xa0>
   95a2c:   340002e0    cbz w0, 95a88 <CUSBAudioTerminal::CUSBAudioTerminal(TUSBAudioControlInterfaceDescriptor const*, bool)+0x198>
   95a30:   39001260    strb    w0, [x19, #4]
   95a34:   39401283    ldrb    w3, [x20, #4]
   95a38:   39401681    ldrb    w1, [x20, #5]
   95a3c:   39401e82    ldrb    w2, [x20, #7]
   95a40:   39402280    ldrb    w0, [x20, #8]
   95a44:   aa012061    orr x1, x3, x1, lsl #8
   95a48:   39008262    strb    w2, [x19, #32]
   95a4c:   79003e61    strh    w1, [x19, #30]
   95a50:   7101901f    cmp w0, #0x64
   95a54:   54fffdc9    b.ls    95a0c <CUSBAudioTerminal::CUSBAudioTerminal(TUSBAudioControlInterfaceDescriptor const*, bool)+0x11c>
   95a58:   900000e1    adrp    x1, b1000 <_etext+0x1f9c>
   95a5c:   900000e0    adrp    x0, b1000 <_etext+0x1f9c>
   95a60:   9139c021    add x1, x1, #0xe70
   95a64:   913c4000    add x0, x0, #0xf10
   95a68:   52800ba2    mov w2, #0x5d
   95a6c:   94001c15    bl  9cac0 <assertion_failed>
   95a70:   900000e1    adrp    x1, b1000 <_etext+0x1f9c>
   95a74:   900000e0    adrp    x0, b1000 <_etext+0x1f9c>
   95a78:   9139c021    add x1, x1, #0xe70
   95a7c:   913d8000    add x0, x0, #0xf60
   95a80:   52801122    mov w2, #0x89
   95a84:   94001c0f    bl  9cac0 <assertion_failed>
   95a88:   900000e1    adrp    x1, b1000 <_etext+0x1f9c>
   95a8c:   900000e0    adrp    x0, b1000 <_etext+0x1f9c>
   95a90:   9139c021    add x1, x1, #0xe70
   95a94:   913a4000    add x0, x0, #0xe90
   95a98:   52800602    mov w2, #0x30
   95a9c:   94001c09    bl  9cac0 <assertion_failed>
   95aa0:   900000e1    adrp    x1, b1000 <_etext+0x1f9c>
   95aa4:   900000e0    adrp    x0, b1000 <_etext+0x1f9c>
   95aa8:   9139c021    add x1, x1, #0xe70
   95aac:   913da000    add x0, x0, #0xf68
   95ab0:   52801522    mov w2, #0xa9
   95ab4:   94001c03    bl  9cac0 <assertion_failed>
   95ab8:   900000e1    adrp    x1, b1000 <_etext+0x1f9c>
   95abc:   900000e0    adrp    x0, b1000 <_etext+0x1f9c>
   95ac0:   9139c021    add x1, x1, #0xe70
   95ac4:   913ba000    add x0, x0, #0xee8
   95ac8:   52800882    mov w2, #0x44
   95acc:   94001bfd    bl  9cac0 <assertion_failed>

0000000000095ad0 <CUSBAudioTerminal::IsInput() const>:
   95ad0:   39407000    ldrb    w0, [x0, #28]
   95ad4:   d65f03c0    ret
   95ad8:   d503201f    nop
   95adc:   d503201f    nop

0000000000095ae0 <CUSBAudioTerminal::GetTerminalType() const>:
   95ae0:   79403c00    ldrh    w0, [x0, #30]
   95ae4:   d65f03c0    ret
   95ae8:   d503201f    nop
   95aec:   d503201f    nop

0000000000095af0 <CUSBAudioTerminal::GetClockSourceID() const>:
   95af0:   39408000    ldrb    w0, [x0, #32]
   95af4:   d65f03c0    ret
   95af8:   d503201f    nop
   95afc:   d503201f    nop

0000000000095b00 <CUSBAudioMixerUnit::CUSBAudioMixerUnit(TUSBAudioControlInterfaceDescriptor const*, bool)>:
   95b00:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   95b04:   910003fd    mov x29, sp
   95b08:   52800023    mov w3, #0x1
   95b0c:   a90153f3    stp x19, x20, [sp, #16]
   95b10:   aa0003f3    mov x19, x0
   95b14:   aa0103f4    mov x20, x1
   95b18:   52800001    mov w1, #0x0
   95b1c:   a9025bf5    stp x21, x22, [sp, #32]
   95b20:   91003015    add x21, x0, #0xc
   95b24:   12001c56    and w22, w2, #0xff
   95b28:   aa1503e0    mov x0, x21
   95b2c:   d2800142    mov x2, #0xa
   95b30:   b9000263    str w3, [x19]
   95b34:   3900127f    strb    wzr, [x19, #4]
   95b38:   b9000a7f    str wzr, [x19, #8]
   95b3c:   b9001a7f    str wzr, [x19, #24]
   95b40:   94004476    bl  a6d18 <memset>
   95b44:   b4000714    cbz x20, 95c24 <CUSBAudioMixerUnit::CUSBAudioMixerUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x124>
   95b48:   39400a80    ldrb    w0, [x20, #2]
   95b4c:   7100101f    cmp w0, #0x4
   95b50:   54000761    b.ne    95c3c <CUSBAudioMixerUnit::CUSBAudioMixerUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x13c>
   95b54:   39400e80    ldrb    w0, [x20, #3]
   95b58:   36000356    tbz w22, #0, 95bc0 <CUSBAudioMixerUnit::CUSBAudioMixerUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0xc0>
   95b5c:   340007c0    cbz w0, 95c54 <CUSBAudioMixerUnit::CUSBAudioMixerUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x154>
   95b60:   39401282    ldrb    w2, [x20, #4]
   95b64:   39001260    strb    w0, [x19, #4]
   95b68:   7100285f    cmp w2, #0xa
   95b6c:   54000808    b.hi    95c6c <CUSBAudioMixerUnit::CUSBAudioMixerUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x16c>
   95b70:   b9000a62    str w2, [x19, #8]
   95b74:   d2800000    mov x0, #0x0
   95b78:   91001681    add x1, x20, #0x5
   95b7c:   34000102    cbz w2, 95b9c <CUSBAudioMixerUnit::CUSBAudioMixerUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x9c>
   95b80:   38606aa3    ldrb    w3, [x21, x0]
   95b84:   38606824    ldrb    w4, [x1, x0]
   95b88:   35000423    cbnz    w3, 95c0c <CUSBAudioMixerUnit::CUSBAudioMixerUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x10c>
   95b8c:   38206aa4    strb    w4, [x21, x0]
   95b90:   91000400    add x0, x0, #0x1
   95b94:   6b00005f    cmp w2, w0
   95b98:   54ffff48    b.hi    95b80 <CUSBAudioMixerUnit::CUSBAudioMixerUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x80>
   95b9c:   8b220282    add x2, x20, w2, uxtb
   95ba0:   39401440    ldrb    w0, [x2, #5]
   95ba4:   7101901f    cmp w0, #0x64
   95ba8:   540006e8    b.hi    95c84 <CUSBAudioMixerUnit::CUSBAudioMixerUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x184>
   95bac:   a9425bf5    ldp x21, x22, [sp, #32]
   95bb0:   b9001a60    str w0, [x19, #24]
   95bb4:   a94153f3    ldp x19, x20, [sp, #16]
   95bb8:   a8c37bfd    ldp x29, x30, [sp], #48
   95bbc:   d65f03c0    ret
   95bc0:   340004a0    cbz w0, 95c54 <CUSBAudioMixerUnit::CUSBAudioMixerUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x154>
   95bc4:   39401282    ldrb    w2, [x20, #4]
   95bc8:   39001260    strb    w0, [x19, #4]
   95bcc:   7100285f    cmp w2, #0xa
   95bd0:   540004e8    b.hi    95c6c <CUSBAudioMixerUnit::CUSBAudioMixerUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x16c>
   95bd4:   b9000a62    str w2, [x19, #8]
   95bd8:   d2800000    mov x0, #0x0
   95bdc:   91001681    add x1, x20, #0x5
   95be0:   34fffde2    cbz w2, 95b9c <CUSBAudioMixerUnit::CUSBAudioMixerUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x9c>
   95be4:   38606aa3    ldrb    w3, [x21, x0]
   95be8:   38606824    ldrb    w4, [x1, x0]
   95bec:   35000103    cbnz    w3, 95c0c <CUSBAudioMixerUnit::CUSBAudioMixerUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x10c>
   95bf0:   38206aa4    strb    w4, [x21, x0]
   95bf4:   91000400    add x0, x0, #0x1
   95bf8:   6b00005f    cmp w2, w0
   95bfc:   54fffd09    b.ls    95b9c <CUSBAudioMixerUnit::CUSBAudioMixerUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x9c>
   95c00:   38606aa3    ldrb    w3, [x21, x0]
   95c04:   38606824    ldrb    w4, [x1, x0]
   95c08:   34ffff43    cbz w3, 95bf0 <CUSBAudioMixerUnit::CUSBAudioMixerUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0xf0>
   95c0c:   900000e1    adrp    x1, b1000 <_etext+0x1f9c>
   95c10:   900000e0    adrp    x0, b1000 <_etext+0x1f9c>
   95c14:   9139c021    add x1, x1, #0xe70
   95c18:   913ba000    add x0, x0, #0xee8
   95c1c:   52800882    mov w2, #0x44
   95c20:   94001ba8    bl  9cac0 <assertion_failed>
   95c24:   900000e1    adrp    x1, b1000 <_etext+0x1f9c>
   95c28:   900000e0    adrp    x0, b1000 <_etext+0x1f9c>
   95c2c:   9139c021    add x1, x1, #0xe70
   95c30:   913d8000    add x0, x0, #0xf60
   95c34:   52801a42    mov w2, #0xd2
   95c38:   94001ba2    bl  9cac0 <assertion_failed>
   95c3c:   900000e1    adrp    x1, b1000 <_etext+0x1f9c>
   95c40:   900000e0    adrp    x0, b1000 <_etext+0x1f9c>
   95c44:   9139c021    add x1, x1, #0xe70
   95c48:   913ee000    add x0, x0, #0xfb8
   95c4c:   52801a62    mov w2, #0xd3
   95c50:   94001b9c    bl  9cac0 <assertion_failed>
   95c54:   900000e1    adrp    x1, b1000 <_etext+0x1f9c>
   95c58:   900000e0    adrp    x0, b1000 <_etext+0x1f9c>
   95c5c:   9139c021    add x1, x1, #0xe70
   95c60:   913a4000    add x0, x0, #0xe90
   95c64:   52800602    mov w2, #0x30
   95c68:   94001b96    bl  9cac0 <assertion_failed>
   95c6c:   900000e1    adrp    x1, b1000 <_etext+0x1f9c>
   95c70:   900000e0    adrp    x0, b1000 <_etext+0x1f9c>
   95c74:   9139c021    add x1, x1, #0xe70
   95c78:   913aa000    add x0, x0, #0xea8
   95c7c:   52800782    mov w2, #0x3c
   95c80:   94001b90    bl  9cac0 <assertion_failed>
   95c84:   900000e1    adrp    x1, b1000 <_etext+0x1f9c>
   95c88:   900000e0    adrp    x0, b1000 <_etext+0x1f9c>
   95c8c:   9139c021    add x1, x1, #0xe70
   95c90:   913c4000    add x0, x0, #0xf10
   95c94:   52800ba2    mov w2, #0x5d
   95c98:   94001b8a    bl  9cac0 <assertion_failed>
   95c9c:   d503201f    nop

0000000000095ca0 <CUSBAudioSelectorUnit::CUSBAudioSelectorUnit(TUSBAudioControlInterfaceDescriptor const*, bool)>:
   95ca0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   95ca4:   910003fd    mov x29, sp
   95ca8:   52800043    mov w3, #0x2
   95cac:   a90153f3    stp x19, x20, [sp, #16]
   95cb0:   aa0003f4    mov x20, x0
   95cb4:   aa0103f3    mov x19, x1
   95cb8:   52800001    mov w1, #0x0
   95cbc:   a9025bf5    stp x21, x22, [sp, #32]
   95cc0:   91003015    add x21, x0, #0xc
   95cc4:   12001c56    and w22, w2, #0xff
   95cc8:   aa1503e0    mov x0, x21
   95ccc:   d2800142    mov x2, #0xa
   95cd0:   b9000283    str w3, [x20]
   95cd4:   3900129f    strb    wzr, [x20, #4]
   95cd8:   b9000a9f    str wzr, [x20, #8]
   95cdc:   b9001a9f    str wzr, [x20, #24]
   95ce0:   9400440e    bl  a6d18 <memset>
   95ce4:   b4000673    cbz x19, 95db0 <CUSBAudioSelectorUnit::CUSBAudioSelectorUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x110>
   95ce8:   39400a60    ldrb    w0, [x19, #2]
   95cec:   7100141f    cmp w0, #0x5
   95cf0:   540006c1    b.ne    95dc8 <CUSBAudioSelectorUnit::CUSBAudioSelectorUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x128>
   95cf4:   39400e60    ldrb    w0, [x19, #3]
   95cf8:   370002b6    tbnz    w22, #0, 95d4c <CUSBAudioSelectorUnit::CUSBAudioSelectorUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0xac>
   95cfc:   34000720    cbz w0, 95de0 <CUSBAudioSelectorUnit::CUSBAudioSelectorUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x140>
   95d00:   39401261    ldrb    w1, [x19, #4]
   95d04:   39001280    strb    w0, [x20, #4]
   95d08:   7100283f    cmp w1, #0xa
   95d0c:   54000768    b.hi    95df8 <CUSBAudioSelectorUnit::CUSBAudioSelectorUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x158>
   95d10:   b9000a81    str w1, [x20, #8]
   95d14:   34000141    cbz w1, 95d3c <CUSBAudioSelectorUnit::CUSBAudioSelectorUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x9c>
   95d18:   91001673    add x19, x19, #0x5
   95d1c:   d2800000    mov x0, #0x0
   95d20:   38606aa2    ldrb    w2, [x21, x0]
   95d24:   38606a63    ldrb    w3, [x19, x0]
   95d28:   35000382    cbnz    w2, 95d98 <CUSBAudioSelectorUnit::CUSBAudioSelectorUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0xf8>
   95d2c:   38206aa3    strb    w3, [x21, x0]
   95d30:   91000400    add x0, x0, #0x1
   95d34:   6b00003f    cmp w1, w0
   95d38:   54ffff48    b.hi    95d20 <CUSBAudioSelectorUnit::CUSBAudioSelectorUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x80>
   95d3c:   a94153f3    ldp x19, x20, [sp, #16]
   95d40:   a9425bf5    ldp x21, x22, [sp, #32]
   95d44:   a8c37bfd    ldp x29, x30, [sp], #48
   95d48:   d65f03c0    ret
   95d4c:   340004a0    cbz w0, 95de0 <CUSBAudioSelectorUnit::CUSBAudioSelectorUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x140>
   95d50:   39401261    ldrb    w1, [x19, #4]
   95d54:   39001280    strb    w0, [x20, #4]
   95d58:   7100283f    cmp w1, #0xa
   95d5c:   540004e8    b.hi    95df8 <CUSBAudioSelectorUnit::CUSBAudioSelectorUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x158>
   95d60:   b9000a81    str w1, [x20, #8]
   95d64:   91001673    add x19, x19, #0x5
   95d68:   d2800000    mov x0, #0x0
   95d6c:   34fffe81    cbz w1, 95d3c <CUSBAudioSelectorUnit::CUSBAudioSelectorUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x9c>
   95d70:   38606aa2    ldrb    w2, [x21, x0]
   95d74:   38606a63    ldrb    w3, [x19, x0]
   95d78:   35000102    cbnz    w2, 95d98 <CUSBAudioSelectorUnit::CUSBAudioSelectorUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0xf8>
   95d7c:   38206aa3    strb    w3, [x21, x0]
   95d80:   91000400    add x0, x0, #0x1
   95d84:   6b00003f    cmp w1, w0
   95d88:   54fffda9    b.ls    95d3c <CUSBAudioSelectorUnit::CUSBAudioSelectorUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x9c>
   95d8c:   38606aa2    ldrb    w2, [x21, x0]
   95d90:   38606a63    ldrb    w3, [x19, x0]
   95d94:   34ffff42    cbz w2, 95d7c <CUSBAudioSelectorUnit::CUSBAudioSelectorUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0xdc>
   95d98:   900000e1    adrp    x1, b1000 <_etext+0x1f9c>
   95d9c:   900000e0    adrp    x0, b1000 <_etext+0x1f9c>
   95da0:   9139c021    add x1, x1, #0xe70
   95da4:   913ba000    add x0, x0, #0xee8
   95da8:   52800882    mov w2, #0x44
   95dac:   94001b45    bl  9cac0 <assertion_failed>
   95db0:   900000e1    adrp    x1, b1000 <_etext+0x1f9c>
   95db4:   900000e0    adrp    x0, b1000 <_etext+0x1f9c>
   95db8:   9139c021    add x1, x1, #0xe70
   95dbc:   913d8000    add x0, x0, #0xf60
   95dc0:   52801fa2    mov w2, #0xfd
   95dc4:   94001b3f    bl  9cac0 <assertion_failed>
   95dc8:   900000e1    adrp    x1, b1000 <_etext+0x1f9c>
   95dcc:   b00000e0    adrp    x0, b2000 <_etext+0x2f9c>
   95dd0:   9139c021    add x1, x1, #0xe70
   95dd4:   91000000    add x0, x0, #0x0
   95dd8:   52801fc2    mov w2, #0xfe
   95ddc:   94001b39    bl  9cac0 <assertion_failed>
   95de0:   900000e1    adrp    x1, b1000 <_etext+0x1f9c>
   95de4:   900000e0    adrp    x0, b1000 <_etext+0x1f9c>
   95de8:   9139c021    add x1, x1, #0xe70
   95dec:   913a4000    add x0, x0, #0xe90
   95df0:   52800602    mov w2, #0x30
   95df4:   94001b33    bl  9cac0 <assertion_failed>
   95df8:   900000e1    adrp    x1, b1000 <_etext+0x1f9c>
   95dfc:   900000e0    adrp    x0, b1000 <_etext+0x1f9c>
   95e00:   9139c021    add x1, x1, #0xe70
   95e04:   913aa000    add x0, x0, #0xea8
   95e08:   52800782    mov w2, #0x3c
   95e0c:   94001b2d    bl  9cac0 <assertion_failed>

0000000000095e10 <CUSBAudioFeatureUnit::CUSBAudioFeatureUnit(TUSBAudioControlInterfaceDescriptor const*, bool)>:
   95e10:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   95e14:   910003fd    mov x29, sp
   95e18:   a90153f3    stp x19, x20, [sp, #16]
   95e1c:   52800074    mov w20, #0x3
   95e20:   aa0103f3    mov x19, x1
   95e24:   52800001    mov w1, #0x0
   95e28:   a9025bf5    stp x21, x22, [sp, #32]
   95e2c:   aa0003f5    mov x21, x0
   95e30:   12001c56    and w22, w2, #0xff
   95e34:   91003000    add x0, x0, #0xc
   95e38:   d2800142    mov x2, #0xa
   95e3c:   b90002b4    str w20, [x21]
   95e40:   390012bf    strb    wzr, [x21, #4]
   95e44:   b9000abf    str wzr, [x21, #8]
   95e48:   b9001abf    str wzr, [x21, #24]
   95e4c:   940043b3    bl  a6d18 <memset>
   95e50:   b4000c73    cbz x19, 95fdc <CUSBAudioFeatureUnit::CUSBAudioFeatureUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x1cc>
   95e54:   39400a60    ldrb    w0, [x19, #2]
   95e58:   7100181f    cmp w0, #0x6
   95e5c:   54000cc1    b.ne    95ff4 <CUSBAudioFeatureUnit::CUSBAudioFeatureUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x1e4>
   95e60:   39400e60    ldrb    w0, [x19, #3]
   95e64:   37000636    tbnz    w22, #0, 95f28 <CUSBAudioFeatureUnit::CUSBAudioFeatureUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x118>
   95e68:   34000d20    cbz w0, 9600c <CUSBAudioFeatureUnit::CUSBAudioFeatureUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x1fc>
   95e6c:   52800022    mov w2, #0x1
   95e70:   394032a1    ldrb    w1, [x21, #12]
   95e74:   390012a0    strb    w0, [x21, #4]
   95e78:   b9000aa2    str w2, [x21, #8]
   95e7c:   39401260    ldrb    w0, [x19, #4]
   95e80:   35000d21    cbnz    w1, 96024 <CUSBAudioFeatureUnit::CUSBAudioFeatureUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x214>
   95e84:   390032a0    strb    w0, [x21, #12]
   95e88:   39401665    ldrb    w5, [x19, #5]
   95e8c:   710040bf    cmp w5, #0x10
   95e90:   54000d68    b.hi    9603c <CUSBAudioFeatureUnit::CUSBAudioFeatureUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x22c>
   95e94:   39400260    ldrb    w0, [x19]
   95e98:   11001ca1    add w1, w5, #0x7
   95e9c:   6b01001f    cmp w0, w1
   95ea0:   54000f23    b.cc    96084 <CUSBAudioFeatureUnit::CUSBAudioFeatureUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x274>
   95ea4:   51001c08    sub w8, w0, #0x7
   95ea8:   4b050108    sub w8, w8, w5
   95eac:   1ac50908    udiv    w8, w8, w5
   95eb0:   7101911f    cmp w8, #0x64
   95eb4:   54000f48    b.hi    9609c <CUSBAudioFeatureUnit::CUSBAudioFeatureUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x28c>
   95eb8:   91001a61    add x1, x19, #0x6
   95ebc:   531d70a5    lsl w5, w5, #3
   95ec0:   b9001aa8    str w8, [x21, #24]
   95ec4:   910072a9    add x9, x21, #0x1c
   95ec8:   aa0103e6    mov x6, x1
   95ecc:   d2800007    mov x7, #0x0
   95ed0:   52800003    mov w3, #0x0
   95ed4:   52800004    mov w4, #0x0
   95ed8:   35000185    cbnz    w5, 95f08 <CUSBAudioFeatureUnit::CUSBAudioFeatureUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0xf8>
   95edc:   14000037    b   95fb8 <CUSBAudioFeatureUnit::CUSBAudioFeatureUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x1a8>
   95ee0:   38676820    ldrb    w0, [x1, x7]
   95ee4:   1ac32400    lsr w0, w0, w3
   95ee8:   531f7862    lsl w2, w3, #1
   95eec:   f240001f    tst x0, #0x1
   95ef0:   11000463    add w3, w3, #0x1
   95ef4:   1ac22280    lsl w0, w20, w2
   95ef8:   2a000080    orr w0, w4, w0
   95efc:   1a841004    csel    w4, w0, w4, ne
   95f00:   6b0300bf    cmp w5, w3
   95f04:   540005a0    b.eq    95fb8 <CUSBAudioFeatureUnit::CUSBAudioFeatureUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x1a8>
   95f08:   710020bf    cmp w5, #0x8
   95f0c:   54fffea9    b.ls    95ee0 <CUSBAudioFeatureUnit::CUSBAudioFeatureUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0xd0>
   95f10:   394004c0    ldrb    w0, [x6, #1]
   95f14:   394000c2    ldrb    w2, [x6]
   95f18:   53181c00    ubfiz   w0, w0, #8, #8
   95f1c:   2a020000    orr w0, w0, w2
   95f20:   12003c00    and w0, w0, #0xffff
   95f24:   17fffff0    b   95ee4 <CUSBAudioFeatureUnit::CUSBAudioFeatureUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0xd4>
   95f28:   34000720    cbz w0, 9600c <CUSBAudioFeatureUnit::CUSBAudioFeatureUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x1fc>
   95f2c:   52800022    mov w2, #0x1
   95f30:   394032a1    ldrb    w1, [x21, #12]
   95f34:   390012a0    strb    w0, [x21, #4]
   95f38:   b9000aa2    str w2, [x21, #8]
   95f3c:   39401262    ldrb    w2, [x19, #4]
   95f40:   35000721    cbnz    w1, 96024 <CUSBAudioFeatureUnit::CUSBAudioFeatureUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x214>
   95f44:   390032a2    strb    w2, [x21, #12]
   95f48:   39400260    ldrb    w0, [x19]
   95f4c:   7100241f    cmp w0, #0x9
   95f50:   54000829    b.ls    96054 <CUSBAudioFeatureUnit::CUSBAudioFeatureUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x244>
   95f54:   51002800    sub w0, w0, #0xa
   95f58:   f240041f    tst x0, #0x3
   95f5c:   54000881    b.ne    9606c <CUSBAudioFeatureUnit::CUSBAudioFeatureUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x25c>
   95f60:   13027c01    asr w1, w0, #2
   95f64:   910072a9    add x9, x21, #0x1c
   95f68:   11000425    add w5, w1, #0x1
   95f6c:   d2800000    mov x0, #0x0
   95f70:   93407ca5    sxtw    x5, w5
   95f74:   b9001aa1    str w1, [x21, #24]
   95f78:   8b204a61    add x1, x19, w0, uxtw #2
   95f7c:   39401424    ldrb    w4, [x1, #5]
   95f80:   39401823    ldrb    w3, [x1, #6]
   95f84:   39401c22    ldrb    w2, [x1, #7]
   95f88:   39402021    ldrb    w1, [x1, #8]
   95f8c:   aa032083    orr x3, x4, x3, lsl #8
   95f90:   aa024062    orr x2, x3, x2, lsl #16
   95f94:   aa016041    orr x1, x2, x1, lsl #24
   95f98:   b8207921    str w1, [x9, x0, lsl #2]
   95f9c:   91000400    add x0, x0, #0x1
   95fa0:   eb0000bf    cmp x5, x0
   95fa4:   54fffea1    b.ne    95f78 <CUSBAudioFeatureUnit::CUSBAudioFeatureUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0x168>
   95fa8:   a94153f3    ldp x19, x20, [sp, #16]
   95fac:   a9425bf5    ldp x21, x22, [sp, #32]
   95fb0:   a8c37bfd    ldp x29, x30, [sp], #48
   95fb4:   d65f03c0    ret
   95fb8:   eb07011f    cmp x8, x7
   95fbc:   b8277924    str w4, [x9, x7, lsl #2]
   95fc0:   910008c6    add x6, x6, #0x2
   95fc4:   910004e7    add x7, x7, #0x1
   95fc8:   54fff841    b.ne    95ed0 <CUSBAudioFeatureUnit::CUSBAudioFeatureUnit(TUSBAudioControlInterfaceDescriptor const*, bool)+0xc0>
   95fcc:   a94153f3    ldp x19, x20, [sp, #16]
   95fd0:   a9425bf5    ldp x21, x22, [sp, #32]
   95fd4:   a8c37bfd    ldp x29, x30, [sp], #48
   95fd8:   d65f03c0    ret
   95fdc:   900000e1    adrp    x1, b1000 <_etext+0x1f9c>
   95fe0:   900000e0    adrp    x0, b1000 <_etext+0x1f9c>
   95fe4:   9139c021    add x1, x1, #0xe70
   95fe8:   913d8000    add x0, x0, #0xf60
   95fec:   52802382    mov w2, #0x11c
   95ff0:   94001ab4    bl  9cac0 <assertion_failed>
   95ff4:   900000e1    adrp    x1, b1000 <_etext+0x1f9c>
   95ff8:   b00000e0    adrp    x0, b2000 <_etext+0x2f9c>
   95ffc:   9139c021    add x1, x1, #0xe70
   96000:   91012000    add x0, x0, #0x48
   96004:   528023a2    mov w2, #0x11d
   96008:   94001aae    bl  9cac0 <assertion_failed>
   9600c:   f00000c1    adrp    x1, b1000 <_etext+0x1f9c>
   96010:   f00000c0    adrp    x0, b1000 <_etext+0x1f9c>
   96014:   9139c021    add x1, x1, #0xe70
   96018:   913a4000    add x0, x0, #0xe90
   9601c:   52800602    mov w2, #0x30
   96020:   94001aa8    bl  9cac0 <assertion_failed>
   96024:   f00000c1    adrp    x1, b1000 <_etext+0x1f9c>
   96028:   f00000c0    adrp    x0, b1000 <_etext+0x1f9c>
   9602c:   9139c021    add x1, x1, #0xe70
   96030:   913ba000    add x0, x0, #0xee8
   96034:   52800882    mov w2, #0x44
   96038:   94001aa2    bl  9cac0 <assertion_failed>
   9603c:   f00000c1    adrp    x1, b1000 <_etext+0x1f9c>
   96040:   900000e0    adrp    x0, b2000 <_etext+0x2f9c>
   96044:   9139c021    add x1, x1, #0xe70
   96048:   91032000    add x0, x0, #0xc8
   9604c:   52802662    mov w2, #0x133
   96050:   94001a9c    bl  9cac0 <assertion_failed>
   96054:   f00000c1    adrp    x1, b1000 <_etext+0x1f9c>
   96058:   900000e0    adrp    x0, b2000 <_etext+0x2f9c>
   9605c:   9139c021    add x1, x1, #0xe70
   96060:   91024000    add x0, x0, #0x90
   96064:   52802482    mov w2, #0x124
   96068:   94001a96    bl  9cac0 <assertion_failed>
   9606c:   f00000c1    adrp    x1, b1000 <_etext+0x1f9c>
   96070:   900000e0    adrp    x0, b2000 <_etext+0x2f9c>
   96074:   9139c021    add x1, x1, #0xe70
   96078:   9102a000    add x0, x0, #0xa8
   9607c:   528024a2    mov w2, #0x125
   96080:   94001a90    bl  9cac0 <assertion_failed>
   96084:   f00000c1    adrp    x1, b1000 <_etext+0x1f9c>
   96088:   900000e0    adrp    x0, b2000 <_etext+0x2f9c>
   9608c:   9139c021    add x1, x1, #0xe70
   96090:   9103a000    add x0, x0, #0xe8
   96094:   528026a2    mov w2, #0x135
   96098:   94001a8a    bl  9cac0 <assertion_failed>
   9609c:   f00000c1    adrp    x1, b1000 <_etext+0x1f9c>
   960a0:   f00000c0    adrp    x0, b1000 <_etext+0x1f9c>
   960a4:   9139c021    add x1, x1, #0xe70
   960a8:   913c4000    add x0, x0, #0xf10
   960ac:   52800ba2    mov w2, #0x5d
   960b0:   94001a84    bl  9cac0 <assertion_failed>
   960b4:   d503201f    nop
   960b8:   d503201f    nop
   960bc:   d503201f    nop

00000000000960c0 <CUSBAudioFeatureUnit::GetControlStatus(unsigned int, CUSBAudioFeatureUnit::TControl) const>:
   960c0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   960c4:   7101903f    cmp w1, #0x64
   960c8:   910003fd    mov x29, sp
   960cc:   54000148    b.hi    960f4 <CUSBAudioFeatureUnit::GetControlStatus(unsigned int, CUSBAudioFeatureUnit::TControl) const+0x34>
   960d0:   71003c5f    cmp w2, #0xf
   960d4:   540001cc    b.gt    9610c <CUSBAudioFeatureUnit::GetControlStatus(unsigned int, CUSBAudioFeatureUnit::TControl) const+0x4c>
   960d8:   8b214801    add x1, x0, w1, uxtw #2
   960dc:   b9401c20    ldr w0, [x1, #28]
   960e0:   531f7842    lsl w2, w2, #1
   960e4:   a8c17bfd    ldp x29, x30, [sp], #16
   960e8:   1ac22400    lsr w0, w0, w2
   960ec:   12000400    and w0, w0, #0x3
   960f0:   d65f03c0    ret
   960f4:   f00000c1    adrp    x1, b1000 <_etext+0x1f9c>
   960f8:   900000e0    adrp    x0, b2000 <_etext+0x2f9c>
   960fc:   9139c021    add x1, x1, #0xe70
   96100:   91044000    add x0, x0, #0x110
   96104:   52802b02    mov w2, #0x158
   96108:   94001a6e    bl  9cac0 <assertion_failed>
   9610c:   f00000c1    adrp    x1, b1000 <_etext+0x1f9c>
   96110:   900000e0    adrp    x0, b2000 <_etext+0x2f9c>
   96114:   9139c021    add x1, x1, #0xe70
   96118:   9104c000    add x0, x0, #0x130
   9611c:   52802b22    mov w2, #0x159
   96120:   94001a68    bl  9cac0 <assertion_failed>
   96124:   d503201f    nop
   96128:   d503201f    nop
   9612c:   d503201f    nop

0000000000096130 <CUSBAudioClockSource::CUSBAudioClockSource(TUSBAudioControlInterfaceDescriptor const*, bool)>:
   96130:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   96134:   910003fd    mov x29, sp
   96138:   52800083    mov w3, #0x4
   9613c:   a90153f3    stp x19, x20, [sp, #16]
   96140:   aa0003f3    mov x19, x0
   96144:   aa0103f4    mov x20, x1
   96148:   91003000    add x0, x0, #0xc
   9614c:   52800001    mov w1, #0x0
   96150:   f90013f5    str x21, [sp, #32]
   96154:   12001c55    and w21, w2, #0xff
   96158:   d2800142    mov x2, #0xa
   9615c:   b9000263    str w3, [x19]
   96160:   3900127f    strb    wzr, [x19, #4]
   96164:   b9000a7f    str wzr, [x19, #8]
   96168:   b9001a7f    str wzr, [x19, #24]
   9616c:   940042eb    bl  a6d18 <memset>
   96170:   b4000194    cbz x20, 961a0 <CUSBAudioClockSource::CUSBAudioClockSource(TUSBAudioControlInterfaceDescriptor const*, bool)+0x70>
   96174:   39400a80    ldrb    w0, [x20, #2]
   96178:   7100281f    cmp w0, #0xa
   9617c:   540001e1    b.ne    961b8 <CUSBAudioClockSource::CUSBAudioClockSource(TUSBAudioControlInterfaceDescriptor const*, bool)+0x88>
   96180:   36000295    tbz w21, #0, 961d0 <CUSBAudioClockSource::CUSBAudioClockSource(TUSBAudioControlInterfaceDescriptor const*, bool)+0xa0>
   96184:   39400e80    ldrb    w0, [x20, #3]
   96188:   34000300    cbz w0, 961e8 <CUSBAudioClockSource::CUSBAudioClockSource(TUSBAudioControlInterfaceDescriptor const*, bool)+0xb8>
   9618c:   39001260    strb    w0, [x19, #4]
   96190:   a94153f3    ldp x19, x20, [sp, #16]
   96194:   f94013f5    ldr x21, [sp, #32]
   96198:   a8c37bfd    ldp x29, x30, [sp], #48
   9619c:   d65f03c0    ret
   961a0:   f00000c1    adrp    x1, b1000 <_etext+0x1f9c>
   961a4:   f00000c0    adrp    x0, b1000 <_etext+0x1f9c>
   961a8:   9139c021    add x1, x1, #0xe70
   961ac:   913d8000    add x0, x0, #0xf60
   961b0:   52802c82    mov w2, #0x164
   961b4:   94001a43    bl  9cac0 <assertion_failed>
   961b8:   f00000c1    adrp    x1, b1000 <_etext+0x1f9c>
   961bc:   900000e0    adrp    x0, b2000 <_etext+0x2f9c>
   961c0:   9139c021    add x1, x1, #0xe70
   961c4:   91054000    add x0, x0, #0x150
   961c8:   52802ca2    mov w2, #0x165
   961cc:   94001a3d    bl  9cac0 <assertion_failed>
   961d0:   f00000c1    adrp    x1, b1000 <_etext+0x1f9c>
   961d4:   900000e0    adrp    x0, b2000 <_etext+0x2f9c>
   961d8:   9139c021    add x1, x1, #0xe70
   961dc:   91066000    add x0, x0, #0x198
   961e0:   52802cc2    mov w2, #0x166
   961e4:   94001a37    bl  9cac0 <assertion_failed>
   961e8:   f00000c1    adrp    x1, b1000 <_etext+0x1f9c>
   961ec:   f00000c0    adrp    x0, b1000 <_etext+0x1f9c>
   961f0:   9139c021    add x1, x1, #0xe70
   961f4:   913a4000    add x0, x0, #0xe90
   961f8:   52800602    mov w2, #0x30
   961fc:   94001a31    bl  9cac0 <assertion_failed>

0000000000096200 <CUSBAudioClockSelector::CUSBAudioClockSelector(TUSBAudioControlInterfaceDescriptor const*, bool)>:
   96200:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   96204:   910003fd    mov x29, sp
   96208:   528000a3    mov w3, #0x5
   9620c:   a90153f3    stp x19, x20, [sp, #16]
   96210:   aa0003f3    mov x19, x0
   96214:   aa0103f4    mov x20, x1
   96218:   52800001    mov w1, #0x0
   9621c:   a9025bf5    stp x21, x22, [sp, #32]
   96220:   91003015    add x21, x0, #0xc
   96224:   12001c56    and w22, w2, #0xff
   96228:   aa1503e0    mov x0, x21
   9622c:   d2800142    mov x2, #0xa
   96230:   b9000263    str w3, [x19]
   96234:   3900127f    strb    wzr, [x19, #4]
   96238:   b9000a7f    str wzr, [x19, #8]
   9623c:   b9001a7f    str wzr, [x19, #24]
   96240:   940042b6    bl  a6d18 <memset>
   96244:   b4000414    cbz x20, 962c4 <CUSBAudioClockSelector::CUSBAudioClockSelector(TUSBAudioControlInterfaceDescriptor const*, bool)+0xc4>
   96248:   39400a80    ldrb    w0, [x20, #2]
   9624c:   71002c1f    cmp w0, #0xb
   96250:   54000461    b.ne    962dc <CUSBAudioClockSelector::CUSBAudioClockSelector(TUSBAudioControlInterfaceDescriptor const*, bool)+0xdc>
   96254:   36000516    tbz w22, #0, 962f4 <CUSBAudioClockSelector::CUSBAudioClockSelector(TUSBAudioControlInterfaceDescriptor const*, bool)+0xf4>
   96258:   39400e80    ldrb    w0, [x20, #3]
   9625c:   34000580    cbz w0, 9630c <CUSBAudioClockSelector::CUSBAudioClockSelector(TUSBAudioControlInterfaceDescriptor const*, bool)+0x10c>
   96260:   39401281    ldrb    w1, [x20, #4]
   96264:   39001260    strb    w0, [x19, #4]
   96268:   7100283f    cmp w1, #0xa
   9626c:   540005c8    b.hi    96324 <CUSBAudioClockSelector::CUSBAudioClockSelector(TUSBAudioControlInterfaceDescriptor const*, bool)+0x124>
   96270:   b9000a61    str w1, [x19, #8]
   96274:   34000141    cbz w1, 9629c <CUSBAudioClockSelector::CUSBAudioClockSelector(TUSBAudioControlInterfaceDescriptor const*, bool)+0x9c>
   96278:   91001694    add x20, x20, #0x5
   9627c:   d2800000    mov x0, #0x0
   96280:   38606aa2    ldrb    w2, [x21, x0]
   96284:   38606a83    ldrb    w3, [x20, x0]
   96288:   35000122    cbnz    w2, 962ac <CUSBAudioClockSelector::CUSBAudioClockSelector(TUSBAudioControlInterfaceDescriptor const*, bool)+0xac>
   9628c:   38206aa3    strb    w3, [x21, x0]
   96290:   91000400    add x0, x0, #0x1
   96294:   6b00003f    cmp w1, w0
   96298:   54ffff48    b.hi    96280 <CUSBAudioClockSelector::CUSBAudioClockSelector(TUSBAudioControlInterfaceDescriptor const*, bool)+0x80>
   9629c:   a94153f3    ldp x19, x20, [sp, #16]
   962a0:   a9425bf5    ldp x21, x22, [sp, #32]
   962a4:   a8c37bfd    ldp x29, x30, [sp], #48
   962a8:   d65f03c0    ret
   962ac:   f00000c1    adrp    x1, b1000 <_etext+0x1f9c>
   962b0:   f00000c0    adrp    x0, b1000 <_etext+0x1f9c>
   962b4:   9139c021    add x1, x1, #0xe70
   962b8:   913ba000    add x0, x0, #0xee8
   962bc:   52800882    mov w2, #0x44
   962c0:   94001a00    bl  9cac0 <assertion_failed>
   962c4:   f00000c1    adrp    x1, b1000 <_etext+0x1f9c>
   962c8:   f00000c0    adrp    x0, b1000 <_etext+0x1f9c>
   962cc:   9139c021    add x1, x1, #0xe70
   962d0:   913d8000    add x0, x0, #0xf60
   962d4:   52802e22    mov w2, #0x171
   962d8:   940019fa    bl  9cac0 <assertion_failed>
   962dc:   f00000c1    adrp    x1, b1000 <_etext+0x1f9c>
   962e0:   900000e0    adrp    x0, b2000 <_etext+0x2f9c>
   962e4:   9139c021    add x1, x1, #0xe70
   962e8:   91068000    add x0, x0, #0x1a0
   962ec:   52802e42    mov w2, #0x172
   962f0:   940019f4    bl  9cac0 <assertion_failed>
   962f4:   f00000c1    adrp    x1, b1000 <_etext+0x1f9c>
   962f8:   900000e0    adrp    x0, b2000 <_etext+0x2f9c>
   962fc:   9139c021    add x1, x1, #0xe70
   96300:   91066000    add x0, x0, #0x198
   96304:   52802e62    mov w2, #0x173
   96308:   940019ee    bl  9cac0 <assertion_failed>
   9630c:   f00000c1    adrp    x1, b1000 <_etext+0x1f9c>
   96310:   f00000c0    adrp    x0, b1000 <_etext+0x1f9c>
   96314:   9139c021    add x1, x1, #0xe70
   96318:   913a4000    add x0, x0, #0xe90
   9631c:   52800602    mov w2, #0x30
   96320:   940019e8    bl  9cac0 <assertion_failed>
   96324:   f00000c1    adrp    x1, b1000 <_etext+0x1f9c>
   96328:   f00000c0    adrp    x0, b1000 <_etext+0x1f9c>
   9632c:   9139c021    add x1, x1, #0xe70
   96330:   913aa000    add x0, x0, #0xea8
   96334:   52800782    mov w2, #0x3c
   96338:   940019e2    bl  9cac0 <assertion_failed>
   9633c:   d503201f    nop

0000000000096340 <CUSBAudioFunctionTopology::CUSBAudioFunctionTopology()>:
   96340:   d2810002    mov x2, #0x800
   96344:   91002000    add x0, x0, #0x8
   96348:   52800001    mov w1, #0x0
   9634c:   14004273    b   a6d18 <memset>

0000000000096350 <CUSBAudioFunctionTopology::~CUSBAudioFunctionTopology()>:
   96350:   a9be7bfd    stp x29, x30, [sp, #-32]!
   96354:   910003fd    mov x29, sp
   96358:   a90153f3    stp x19, x20, [sp, #16]
   9635c:   91002013    add x19, x0, #0x8
   96360:   91202014    add x20, x0, #0x808
   96364:   d503201f    nop
   96368:   d2800381    mov x1, #0x1c
   9636c:   f9400260    ldr x0, [x19]
   96370:   b4000040    cbz x0, 96378 <CUSBAudioFunctionTopology::~CUSBAudioFunctionTopology()+0x28>
   96374:   9400453b    bl  a7860 <operator delete(void*, unsigned long)>
   96378:   f800867f    str xzr, [x19], #8
   9637c:   eb14027f    cmp x19, x20
   96380:   54ffff41    b.ne    96368 <CUSBAudioFunctionTopology::~CUSBAudioFunctionTopology()+0x18>
   96384:   a94153f3    ldp x19, x20, [sp, #16]
   96388:   a8c27bfd    ldp x29, x30, [sp], #32
   9638c:   d65f03c0    ret

0000000000096390 <CUSBAudioFunctionTopology::GetEntity(unsigned char) const>:
   96390:   8b210c00    add x0, x0, w1, uxtb #3
   96394:   f9400400    ldr x0, [x0, #8]
   96398:   d65f03c0    ret
   9639c:   d503201f    nop

00000000000963a0 <CUSBAudioFunctionTopology::FindEntity(CUSBAudioEntity::TEntityType, unsigned int) const>:
   963a0:   91002003    add x3, x0, #0x8
   963a4:   91202006    add x6, x0, #0x808
   963a8:   14000004    b   963b8 <CUSBAudioFunctionTopology::FindEntity(CUSBAudioEntity::TEntityType, unsigned int) const+0x18>
   963ac:   2a0503e2    mov w2, w5
   963b0:   eb06007f    cmp x3, x6
   963b4:   54000140    b.eq    963dc <CUSBAudioFunctionTopology::FindEntity(CUSBAudioEntity::TEntityType, unsigned int) const+0x3c>
   963b8:   f9400060    ldr x0, [x3]
   963bc:   51000445    sub w5, w2, #0x1
   963c0:   91002063    add x3, x3, #0x8
   963c4:   b4ffff60    cbz x0, 963b0 <CUSBAudioFunctionTopology::FindEntity(CUSBAudioEntity::TEntityType, unsigned int) const+0x10>
   963c8:   b9400004    ldr w4, [x0]
   963cc:   6b01009f    cmp w4, w1
   963d0:   54ffff01    b.ne    963b0 <CUSBAudioFunctionTopology::FindEntity(CUSBAudioEntity::TEntityType, unsigned int) const+0x10>
   963d4:   35fffec2    cbnz    w2, 963ac <CUSBAudioFunctionTopology::FindEntity(CUSBAudioEntity::TEntityType, unsigned int) const+0xc>
   963d8:   d65f03c0    ret
   963dc:   d2800000    mov x0, #0x0
   963e0:   d65f03c0    ret
   963e4:   d503201f    nop
   963e8:   d503201f    nop
   963ec:   d503201f    nop

00000000000963f0 <CUSBAudioFunctionTopology::FindUpstream(CUSBAudioEntity*, CUSBAudioEntity*) const>:
   963f0:   a9bb7bfd    stp x29, x30, [sp, #-80]!
   963f4:   910003fd    mov x29, sp
   963f8:   b4000781    cbz x1, 964e8 <CUSBAudioFunctionTopology::FindUpstream(CUSBAudioEntity*, CUSBAudioEntity*) const+0xf8>
   963fc:   a90153f3    stp x19, x20, [sp, #16]
   96400:   a9025bf5    stp x21, x22, [sp, #32]
   96404:   aa0203f5    mov x21, x2
   96408:   b4000842    cbz x2, 96510 <CUSBAudioFunctionTopology::FindUpstream(CUSBAudioEntity*, CUSBAudioEntity*) const+0x120>
   9640c:   aa0003f6    mov x22, x0
   96410:   aa0103f4    mov x20, x1
   96414:   b9400820    ldr w0, [x1, #8]
   96418:   d2800013    mov x19, #0x0
   9641c:   f90023f9    str x25, [sp, #64]
   96420:   91003039    add x25, x1, #0xc
   96424:   34000480    cbz w0, 964b4 <CUSBAudioFunctionTopology::FindUpstream(CUSBAudioEntity*, CUSBAudioEntity*) const+0xc4>
   96428:   a90363f7    stp x23, x24, [sp, #48]
   9642c:   900000f8    adrp    x24, b2000 <_etext+0x2f9c>
   96430:   91082318    add x24, x24, #0x208
   96434:   f00000f7    adrp    x23, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   96438:   910fa2f7    add x23, x23, #0x3e8
   9643c:   1400000b    b   96468 <CUSBAudioFunctionTopology::FindUpstream(CUSBAudioEntity*, CUSBAudioEntity*) const+0x78>
   96440:   eb0102bf    cmp x21, x1
   96444:   54000440    b.eq    964cc <CUSBAudioFunctionTopology::FindUpstream(CUSBAudioEntity*, CUSBAudioEntity*) const+0xdc>
   96448:   aa1503e2    mov x2, x21
   9644c:   aa1603e0    mov x0, x22
   96450:   97ffffe8    bl  963f0 <CUSBAudioFunctionTopology::FindUpstream(CUSBAudioEntity*, CUSBAudioEntity*) const>
   96454:   370003c0    tbnz    w0, #0, 964cc <CUSBAudioFunctionTopology::FindUpstream(CUSBAudioEntity*, CUSBAudioEntity*) const+0xdc>
   96458:   b9400a80    ldr w0, [x20, #8]
   9645c:   91000673    add x19, x19, #0x1
   96460:   6b13001f    cmp w0, w19
   96464:   54000269    b.ls    964b0 <CUSBAudioFunctionTopology::FindUpstream(CUSBAudioEntity*, CUSBAudioEntity*) const+0xc0>
   96468:   38736b23    ldrb    w3, [x25, x19]
   9646c:   8b030ec3    add x3, x22, x3, lsl #3
   96470:   f9400461    ldr x1, [x3, #8]
   96474:   b5fffe61    cbnz    x1, 96440 <CUSBAudioFunctionTopology::FindUpstream(CUSBAudioEntity*, CUSBAudioEntity*) const+0x50>
   96478:   94002462    bl  9f600 <CLogger::Get()>
   9647c:   b9400a81    ldr w1, [x20, #8]
   96480:   6b13003f    cmp w1, w19
   96484:   54000563    b.cc    96530 <CUSBAudioFunctionTopology::FindUpstream(CUSBAudioEntity*, CUSBAudioEntity*) const+0x140>
   96488:   38736b24    ldrb    w4, [x25, x19]
   9648c:   aa1803e3    mov x3, x24
   96490:   52800042    mov w2, #0x2
   96494:   aa1703e1    mov x1, x23
   96498:   91000673    add x19, x19, #0x1
   9649c:   94002641    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   964a0:   b9400a80    ldr w0, [x20, #8]
   964a4:   6b13001f    cmp w0, w19
   964a8:   54fffe08    b.hi    96468 <CUSBAudioFunctionTopology::FindUpstream(CUSBAudioEntity*, CUSBAudioEntity*) const+0x78>
   964ac:   d503201f    nop
   964b0:   a94363f7    ldp x23, x24, [sp, #48]
   964b4:   52800000    mov w0, #0x0
   964b8:   a94153f3    ldp x19, x20, [sp, #16]
   964bc:   a9425bf5    ldp x21, x22, [sp, #32]
   964c0:   f94023f9    ldr x25, [sp, #64]
   964c4:   a8c57bfd    ldp x29, x30, [sp], #80
   964c8:   d65f03c0    ret
   964cc:   a94153f3    ldp x19, x20, [sp, #16]
   964d0:   52800020    mov w0, #0x1
   964d4:   a9425bf5    ldp x21, x22, [sp, #32]
   964d8:   a94363f7    ldp x23, x24, [sp, #48]
   964dc:   f94023f9    ldr x25, [sp, #64]
   964e0:   a8c57bfd    ldp x29, x30, [sp], #80
   964e4:   d65f03c0    ret
   964e8:   f00000c1    adrp    x1, b1000 <_etext+0x1f9c>
   964ec:   900000e0    adrp    x0, b2000 <_etext+0x2f9c>
   964f0:   a90153f3    stp x19, x20, [sp, #16]
   964f4:   9139c021    add x1, x1, #0xe70
   964f8:   9107a000    add x0, x0, #0x1e8
   964fc:   528044e2    mov w2, #0x227
   96500:   a9025bf5    stp x21, x22, [sp, #32]
   96504:   a90363f7    stp x23, x24, [sp, #48]
   96508:   f90023f9    str x25, [sp, #64]
   9650c:   9400196d    bl  9cac0 <assertion_failed>
   96510:   f00000c1    adrp    x1, b1000 <_etext+0x1f9c>
   96514:   900000e0    adrp    x0, b2000 <_etext+0x2f9c>
   96518:   a90363f7    stp x23, x24, [sp, #48]
   9651c:   9139c021    add x1, x1, #0xe70
   96520:   9107e000    add x0, x0, #0x1f8
   96524:   52804502    mov w2, #0x228
   96528:   f90023f9    str x25, [sp, #64]
   9652c:   94001965    bl  9cac0 <assertion_failed>
   96530:   f00000c1    adrp    x1, b1000 <_etext+0x1f9c>
   96534:   f00000c0    adrp    x0, b1000 <_etext+0x1f9c>
   96538:   9139c021    add x1, x1, #0xe70
   9653c:   913b4000    add x0, x0, #0xed0
   96540:   52800ac2    mov w2, #0x56
   96544:   9400195f    bl  9cac0 <assertion_failed>
   96548:   d503201f    nop
   9654c:   d503201f    nop

0000000000096550 <CUSBAudioFunctionTopology::FindEntity(CUSBAudioEntity::TEntityType, CUSBAudioEntity*, bool) const>:
   96550:   a9bb7bfd    stp x29, x30, [sp, #-80]!
   96554:   910003fd    mov x29, sp
   96558:   a90153f3    stp x19, x20, [sp, #16]
   9655c:   a9025bf5    stp x21, x22, [sp, #32]
   96560:   a90363f7    stp x23, x24, [sp, #48]
   96564:   f90023f9    str x25, [sp, #64]
   96568:   b4000562    cbz x2, 96614 <CUSBAudioFunctionTopology::FindEntity(CUSBAudioEntity::TEntityType, CUSBAudioEntity*, bool) const+0xc4>
   9656c:   12001c63    and w3, w3, #0xff
   96570:   aa0003f6    mov x22, x0
   96574:   aa0203f7    mov x23, x2
   96578:   2a0103f5    mov w21, w1
   9657c:   12000078    and w24, w3, #0x1
   96580:   91002014    add x20, x0, #0x8
   96584:   d2800013    mov x19, #0x0
   96588:   14000009    b   965ac <CUSBAudioFunctionTopology::FindEntity(CUSBAudioEntity::TEntityType, CUSBAudioEntity*, bool) const+0x5c>
   9658c:   aa0103e2    mov x2, x1
   96590:   aa1603e0    mov x0, x22
   96594:   aa1703e1    mov x1, x23
   96598:   97ffff96    bl  963f0 <CUSBAudioFunctionTopology::FindUpstream(CUSBAudioEntity*, CUSBAudioEntity*) const>
   9659c:   370001e0    tbnz    w0, #0, 965d8 <CUSBAudioFunctionTopology::FindEntity(CUSBAudioEntity::TEntityType, CUSBAudioEntity*, bool) const+0x88>
   965a0:   91000673    add x19, x19, #0x1
   965a4:   f104027f    cmp x19, #0x100
   965a8:   54000280    b.eq    965f8 <CUSBAudioFunctionTopology::FindEntity(CUSBAudioEntity::TEntityType, CUSBAudioEntity*, bool) const+0xa8>
   965ac:   f8737a81    ldr x1, [x20, x19, lsl #3]
   965b0:   b4ffff81    cbz x1, 965a0 <CUSBAudioFunctionTopology::FindEntity(CUSBAudioEntity::TEntityType, CUSBAudioEntity*, bool) const+0x50>
   965b4:   b9400023    ldr w3, [x1]
   965b8:   6b15007f    cmp w3, w21
   965bc:   54ffff21    b.ne    965a0 <CUSBAudioFunctionTopology::FindEntity(CUSBAudioEntity::TEntityType, CUSBAudioEntity*, bool) const+0x50>
   965c0:   2a1303f9    mov w25, w19
   965c4:   35fffe58    cbnz    w24, 9658c <CUSBAudioFunctionTopology::FindEntity(CUSBAudioEntity::TEntityType, CUSBAudioEntity*, bool) const+0x3c>
   965c8:   aa1703e2    mov x2, x23
   965cc:   aa1603e0    mov x0, x22
   965d0:   97ffff88    bl  963f0 <CUSBAudioFunctionTopology::FindUpstream(CUSBAudioEntity*, CUSBAudioEntity*) const>
   965d4:   3607fe60    tbz w0, #0, 965a0 <CUSBAudioFunctionTopology::FindEntity(CUSBAudioEntity::TEntityType, CUSBAudioEntity*, bool) const+0x50>
   965d8:   8b394ed9    add x25, x22, w25, uxtw #3
   965dc:   f9400720    ldr x0, [x25, #8]
   965e0:   a94153f3    ldp x19, x20, [sp, #16]
   965e4:   a9425bf5    ldp x21, x22, [sp, #32]
   965e8:   a94363f7    ldp x23, x24, [sp, #48]
   965ec:   f94023f9    ldr x25, [sp, #64]
   965f0:   a8c57bfd    ldp x29, x30, [sp], #80
   965f4:   d65f03c0    ret
   965f8:   a94153f3    ldp x19, x20, [sp, #16]
   965fc:   d2800000    mov x0, #0x0
   96600:   a9425bf5    ldp x21, x22, [sp, #32]
   96604:   a94363f7    ldp x23, x24, [sp, #48]
   96608:   f94023f9    ldr x25, [sp, #64]
   9660c:   a8c57bfd    ldp x29, x30, [sp], #80
   96610:   d65f03c0    ret
   96614:   f00000c1    adrp    x1, b1000 <_etext+0x1f9c>
   96618:   900000e0    adrp    x0, b2000 <_etext+0x2f9c>
   9661c:   9139c021    add x1, x1, #0xe70
   96620:   9108a000    add x0, x0, #0x228
   96624:   52803e62    mov w2, #0x1f3
   96628:   94001926    bl  9cac0 <assertion_failed>
   9662c:   d503201f    nop

0000000000096630 <CUSBAudioEntity::Dump()>:
   96630:   a9b87bfd    stp x29, x30, [sp, #-128]!
   96634:   900000e1    adrp    x1, b2000 <_etext+0x2f9c>
   96638:   910003fd    mov x29, sp
   9663c:   91090021    add x1, x1, #0x240
   96640:   a90153f3    stp x19, x20, [sp, #16]
   96644:   aa0003f4    mov x20, x0
   96648:   910103e0    add x0, sp, #0x40
   9664c:   a9025bf5    stp x21, x22, [sp, #32]
   96650:   940035a8    bl  a3cf0 <CString::CString(char const*)>
   96654:   b9400a80    ldr w0, [x20, #8]
   96658:   34000400    cbz w0, 966d8 <CUSBAudioEntity::Dump()+0xa8>
   9665c:   f00000d5    adrp    x21, b1000 <_etext+0x1f9c>
   96660:   913842b5    add x21, x21, #0xe10
   96664:   f9001bf7    str x23, [sp, #48]
   96668:   d2800013    mov x19, #0x0
   9666c:   d00000d7    adrp    x23, b0000 <_etext+0xf9c>
   96670:   9112c2f7    add x23, x23, #0x4b0
   96674:   91003296    add x22, x20, #0xc
   96678:   1400000c    b   966a8 <CUSBAudioEntity::Dump()+0x78>
   9667c:   910183e0    add x0, sp, #0x60
   96680:   91000673    add x19, x19, #0x1
   96684:   940035d7    bl  a3de0 <CString::operator char const*() const>
   96688:   aa0003e1    mov x1, x0
   9668c:   910103e0    add x0, sp, #0x40
   96690:   94003628    bl  a3f30 <CString::Append(char const*)>
   96694:   910183e0    add x0, sp, #0x60
   96698:   94003552    bl  a3be0 <CString::~CString()>
   9669c:   b9400a81    ldr w1, [x20, #8]
   966a0:   6b13003f    cmp w1, w19
   966a4:   54000189    b.ls    966d4 <CUSBAudioEntity::Dump()+0xa4>
   966a8:   910183e0    add x0, sp, #0x60
   966ac:   94003589    bl  a3cd0 <CString::CString()>
   966b0:   38736ac2    ldrb    w2, [x22, x19]
   966b4:   aa1503e1    mov x1, x21
   966b8:   910183e0    add x0, sp, #0x60
   966bc:   94003b91    bl  a5500 <CString::Format(char const*, ...)>
   966c0:   b4fffdf3    cbz x19, 9667c <CUSBAudioEntity::Dump()+0x4c>
   966c4:   aa1703e1    mov x1, x23
   966c8:   910103e0    add x0, sp, #0x40
   966cc:   94003619    bl  a3f30 <CString::Append(char const*)>
   966d0:   17ffffeb    b   9667c <CUSBAudioEntity::Dump()+0x4c>
   966d4:   f9401bf7    ldr x23, [sp, #48]
   966d8:   910103e0    add x0, sp, #0x40
   966dc:   9400360d    bl  a3f10 <CString::GetLength() const>
   966e0:   f100181f    cmp x0, #0x6
   966e4:   54000329    b.ls    96748 <CUSBAudioEntity::Dump()+0x118>
   966e8:   940023c6    bl  9f600 <CLogger::Get()>
   966ec:   b9400295    ldr w21, [x20]
   966f0:   aa0003f3    mov x19, x0
   966f4:   910103e0    add x0, sp, #0x40
   966f8:   b9401a96    ldr w22, [x20, #24]
   966fc:   39401294    ldrb    w20, [x20, #4]
   96700:   940035b8    bl  a3de0 <CString::operator char const*() const>
   96704:   900000e3    adrp    x3, b2000 <_etext+0x2f9c>
   96708:   f00000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9670c:   aa0003e7    mov x7, x0
   96710:   2a1603e6    mov w6, w22
   96714:   2a1503e5    mov w5, w21
   96718:   aa1303e0    mov x0, x19
   9671c:   2a1403e4    mov w4, w20
   96720:   91092063    add x3, x3, #0x248
   96724:   910fa021    add x1, x1, #0x3e8
   96728:   52800082    mov w2, #0x4
   9672c:   9400259d    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   96730:   910103e0    add x0, sp, #0x40
   96734:   9400352b    bl  a3be0 <CString::~CString()>
   96738:   a94153f3    ldp x19, x20, [sp, #16]
   9673c:   a9425bf5    ldp x21, x22, [sp, #32]
   96740:   a8c87bfd    ldp x29, x30, [sp], #128
   96744:   d65f03c0    ret
   96748:   d00000c1    adrp    x1, b0000 <_etext+0xf9c>
   9674c:   913b8021    add x1, x1, #0xee0
   96750:   910103e0    add x0, sp, #0x40
   96754:   940035ab    bl  a3e00 <CString::operator=(char const*)>
   96758:   17ffffe4    b   966e8 <CUSBAudioEntity::Dump()+0xb8>
   9675c:   d503201f    nop

0000000000096760 <CUSBAudioFunctionTopology::Parse(TUSBAudioControlInterfaceDescriptor const*)>:
   96760:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   96764:   910003fd    mov x29, sp
   96768:   a90153f3    stp x19, x20, [sp, #16]
   9676c:   a9025bf5    stp x21, x22, [sp, #32]
   96770:   b40011a1    cbz x1, 969a4 <CUSBAudioFunctionTopology::Parse(TUSBAudioControlInterfaceDescriptor const*)+0x244>
   96774:   aa0003f5    mov x21, x0
   96778:   aa0103f3    mov x19, x1
   9677c:   39400420    ldrb    w0, [x1, #1]
   96780:   7100901f    cmp w0, #0x24
   96784:   540007c1    b.ne    9687c <CUSBAudioFunctionTopology::Parse(TUSBAudioControlInterfaceDescriptor const*)+0x11c>
   96788:   f00000f6    adrp    x22, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9678c:   910fa2d6    add x22, x22, #0x3e8
   96790:   f9001bf7    str x23, [sp, #48]
   96794:   900000f7    adrp    x23, b2000 <_etext+0x2f9c>
   96798:   910a62f7    add x23, x23, #0x298
   9679c:   1400001c    b   9680c <CUSBAudioFunctionTopology::Parse(TUSBAudioControlInterfaceDescriptor const*)+0xac>
   967a0:   7100101f    cmp w0, #0x4
   967a4:   54000b20    b.eq    96908 <CUSBAudioFunctionTopology::Parse(TUSBAudioControlInterfaceDescriptor const*)+0x1a8>
   967a8:   7100041f    cmp w0, #0x1
   967ac:   54000a08    b.hi    968ec <CUSBAudioFunctionTopology::Parse(TUSBAudioControlInterfaceDescriptor const*)+0x18c>
   967b0:   54000ba1    b.ne    96924 <CUSBAudioFunctionTopology::Parse(TUSBAudioControlInterfaceDescriptor const*)+0x1c4>
   967b4:   39400e61    ldrb    w1, [x19, #3]
   967b8:   39401260    ldrb    w0, [x19, #4]
   967bc:   2a002020    orr w0, w1, w0, lsl #8
   967c0:   7108001f    cmp w0, #0x200
   967c4:   1a9f17e0    cset    w0, eq
   967c8:   390002a0    strb    w0, [x21]
   967cc:   54000e40    b.eq    96994 <CUSBAudioFunctionTopology::Parse(TUSBAudioControlInterfaceDescriptor const*)+0x234>
   967d0:   39400e61    ldrb    w1, [x19, #3]
   967d4:   39401260    ldrb    w0, [x19, #4]
   967d8:   2a002020    orr w0, w1, w0, lsl #8
   967dc:   7104001f    cmp w0, #0x100
   967e0:   54000f01    b.ne    969c0 <CUSBAudioFunctionTopology::Parse(TUSBAudioControlInterfaceDescriptor const*)+0x260>
   967e4:   39401660    ldrb    w0, [x19, #5]
   967e8:   39401a61    ldrb    w1, [x19, #6]
   967ec:   2a012001    orr w1, w0, w1, lsl #8
   967f0:   39400260    ldrb    w0, [x19]
   967f4:   6b01001f    cmp w0, w1
   967f8:   5400074a    b.ge    968e0 <CUSBAudioFunctionTopology::Parse(TUSBAudioControlInterfaceDescriptor const*)+0x180>
   967fc:   8b200273    add x19, x19, w0, uxtb
   96800:   39400660    ldrb    w0, [x19, #1]
   96804:   7100901f    cmp w0, #0x24
   96808:   54000381    b.ne    96878 <CUSBAudioFunctionTopology::Parse(TUSBAudioControlInterfaceDescriptor const*)+0x118>
   9680c:   39400a60    ldrb    w0, [x19, #2]
   96810:   7100141f    cmp w0, #0x5
   96814:   540003e0    b.eq    96890 <CUSBAudioFunctionTopology::Parse(TUSBAudioControlInterfaceDescriptor const*)+0x130>
   96818:   54fffc49    b.ls    967a0 <CUSBAudioFunctionTopology::Parse(TUSBAudioControlInterfaceDescriptor const*)+0x40>
   9681c:   7100281f    cmp w0, #0xa
   96820:   54000a00    b.eq    96960 <CUSBAudioFunctionTopology::Parse(TUSBAudioControlInterfaceDescriptor const*)+0x200>
   96824:   71002c1f    cmp w0, #0xb
   96828:   540008e0    b.eq    96944 <CUSBAudioFunctionTopology::Parse(TUSBAudioControlInterfaceDescriptor const*)+0x1e4>
   9682c:   7100181f    cmp w0, #0x6
   96830:   540007a1    b.ne    96924 <CUSBAudioFunctionTopology::Parse(TUSBAudioControlInterfaceDescriptor const*)+0x1c4>
   96834:   d2803600    mov x0, #0x1b0
   96838:   940043e2    bl  a77c0 <operator new(unsigned long)>
   9683c:   394002a2    ldrb    w2, [x21]
   96840:   aa1303e1    mov x1, x19
   96844:   aa0003f4    mov x20, x0
   96848:   97fffd72    bl  95e10 <CUSBAudioFeatureUnit::CUSBAudioFeatureUnit(TUSBAudioControlInterfaceDescriptor const*, bool)>
   9684c:   39401281    ldrb    w1, [x20, #4]
   96850:   34000301    cbz w1, 968b0 <CUSBAudioFunctionTopology::Parse(TUSBAudioControlInterfaceDescriptor const*)+0x150>
   96854:   8b210ea1    add x1, x21, w1, uxtb #3
   96858:   f9400420    ldr x0, [x1, #8]
   9685c:   b5000900    cbnz    x0, 9697c <CUSBAudioFunctionTopology::Parse(TUSBAudioControlInterfaceDescriptor const*)+0x21c>
   96860:   f9000434    str x20, [x1, #8]
   96864:   39400260    ldrb    w0, [x19]
   96868:   8b200273    add x19, x19, w0, uxtb
   9686c:   39400660    ldrb    w0, [x19, #1]
   96870:   7100901f    cmp w0, #0x24
   96874:   54fffcc0    b.eq    9680c <CUSBAudioFunctionTopology::Parse(TUSBAudioControlInterfaceDescriptor const*)+0xac>
   96878:   f9401bf7    ldr x23, [sp, #48]
   9687c:   52800020    mov w0, #0x1
   96880:   a94153f3    ldp x19, x20, [sp, #16]
   96884:   a9425bf5    ldp x21, x22, [sp, #32]
   96888:   a8c47bfd    ldp x29, x30, [sp], #64
   9688c:   d65f03c0    ret
   96890:   d2800380    mov x0, #0x1c
   96894:   940043cb    bl  a77c0 <operator new(unsigned long)>
   96898:   aa1303e1    mov x1, x19
   9689c:   394002a2    ldrb    w2, [x21]
   968a0:   aa0003f4    mov x20, x0
   968a4:   97fffcff    bl  95ca0 <CUSBAudioSelectorUnit::CUSBAudioSelectorUnit(TUSBAudioControlInterfaceDescriptor const*, bool)>
   968a8:   39401281    ldrb    w1, [x20, #4]
   968ac:   35fffd41    cbnz    w1, 96854 <CUSBAudioFunctionTopology::Parse(TUSBAudioControlInterfaceDescriptor const*)+0xf4>
   968b0:   94002354    bl  9f600 <CLogger::Get()>
   968b4:   900000e3    adrp    x3, b2000 <_etext+0x2f9c>
   968b8:   f00000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   968bc:   910fa021    add x1, x1, #0x3e8
   968c0:   910ac063    add x3, x3, #0x2b0
   968c4:   52800042    mov w2, #0x2
   968c8:   94002536    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   968cc:   aa1403e0    mov x0, x20
   968d0:   97ffff58    bl  96630 <CUSBAudioEntity::Dump()>
   968d4:   aa1403e0    mov x0, x20
   968d8:   d2800381    mov x1, #0x1c
   968dc:   940043e1    bl  a7860 <operator delete(void*, unsigned long)>
   968e0:   f9401bf7    ldr x23, [sp, #48]
   968e4:   52800000    mov w0, #0x0
   968e8:   17ffffe6    b   96880 <CUSBAudioFunctionTopology::Parse(TUSBAudioControlInterfaceDescriptor const*)+0x120>
   968ec:   d2800480    mov x0, #0x24
   968f0:   940043b4    bl  a77c0 <operator new(unsigned long)>
   968f4:   394002a2    ldrb    w2, [x21]
   968f8:   aa1303e1    mov x1, x19
   968fc:   aa0003f4    mov x20, x0
   96900:   97fffbfc    bl  958f0 <CUSBAudioTerminal::CUSBAudioTerminal(TUSBAudioControlInterfaceDescriptor const*, bool)>
   96904:   17ffffd2    b   9684c <CUSBAudioFunctionTopology::Parse(TUSBAudioControlInterfaceDescriptor const*)+0xec>
   96908:   d2800380    mov x0, #0x1c
   9690c:   940043ad    bl  a77c0 <operator new(unsigned long)>
   96910:   394002a2    ldrb    w2, [x21]
   96914:   aa1303e1    mov x1, x19
   96918:   aa0003f4    mov x20, x0
   9691c:   97fffc79    bl  95b00 <CUSBAudioMixerUnit::CUSBAudioMixerUnit(TUSBAudioControlInterfaceDescriptor const*, bool)>
   96920:   17ffffcb    b   9684c <CUSBAudioFunctionTopology::Parse(TUSBAudioControlInterfaceDescriptor const*)+0xec>
   96924:   94002337    bl  9f600 <CLogger::Get()>
   96928:   39400a64    ldrb    w4, [x19, #2]
   9692c:   aa1703e3    mov x3, x23
   96930:   aa1603e1    mov x1, x22
   96934:   52800042    mov w2, #0x2
   96938:   9400251a    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   9693c:   39400260    ldrb    w0, [x19]
   96940:   17ffffaf    b   967fc <CUSBAudioFunctionTopology::Parse(TUSBAudioControlInterfaceDescriptor const*)+0x9c>
   96944:   d2800380    mov x0, #0x1c
   96948:   9400439e    bl  a77c0 <operator new(unsigned long)>
   9694c:   394002a2    ldrb    w2, [x21]
   96950:   aa1303e1    mov x1, x19
   96954:   aa0003f4    mov x20, x0
   96958:   97fffe2a    bl  96200 <CUSBAudioClockSelector::CUSBAudioClockSelector(TUSBAudioControlInterfaceDescriptor const*, bool)>
   9695c:   17ffffbc    b   9684c <CUSBAudioFunctionTopology::Parse(TUSBAudioControlInterfaceDescriptor const*)+0xec>
   96960:   d2800380    mov x0, #0x1c
   96964:   94004397    bl  a77c0 <operator new(unsigned long)>
   96968:   394002a2    ldrb    w2, [x21]
   9696c:   aa1303e1    mov x1, x19
   96970:   aa0003f4    mov x20, x0
   96974:   97fffdef    bl  96130 <CUSBAudioClockSource::CUSBAudioClockSource(TUSBAudioControlInterfaceDescriptor const*, bool)>
   96978:   17ffffb5    b   9684c <CUSBAudioFunctionTopology::Parse(TUSBAudioControlInterfaceDescriptor const*)+0xec>
   9697c:   f00000c1    adrp    x1, b1000 <_etext+0x1f9c>
   96980:   900000e0    adrp    x0, b2000 <_etext+0x2f9c>
   96984:   9139c021    add x1, x1, #0xe70
   96988:   910b2000    add x0, x0, #0x2c8
   9698c:   52803bc2    mov w2, #0x1de
   96990:   9400184c    bl  9cac0 <assertion_failed>
   96994:   39401a60    ldrb    w0, [x19, #6]
   96998:   39401e61    ldrb    w1, [x19, #7]
   9699c:   2a012001    orr w1, w0, w1, lsl #8
   969a0:   17ffff94    b   967f0 <CUSBAudioFunctionTopology::Parse(TUSBAudioControlInterfaceDescriptor const*)+0x90>
   969a4:   f00000c1    adrp    x1, b1000 <_etext+0x1f9c>
   969a8:   f00000c0    adrp    x0, b1000 <_etext+0x1f9c>
   969ac:   f9001bf7    str x23, [sp, #48]
   969b0:   9139c021    add x1, x1, #0xe70
   969b4:   913d8000    add x0, x0, #0xf60
   969b8:   52803262    mov w2, #0x193
   969bc:   94001841    bl  9cac0 <assertion_failed>
   969c0:   94002310    bl  9f600 <CLogger::Get()>
   969c4:   900000e3    adrp    x3, b2000 <_etext+0x2f9c>
   969c8:   f00000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   969cc:   9109c063    add x3, x3, #0x270
   969d0:   910fa021    add x1, x1, #0x3e8
   969d4:   52800042    mov w2, #0x2
   969d8:   940024f2    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   969dc:   17ffffc1    b   968e0 <CUSBAudioFunctionTopology::Parse(TUSBAudioControlInterfaceDescriptor const*)+0x180>

00000000000969e0 <CUSBAudioFunctionTopology::Dump()>:
   969e0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   969e4:   910003fd    mov x29, sp
   969e8:   a90153f3    stp x19, x20, [sp, #16]
   969ec:   aa0003f4    mov x20, x0
   969f0:   91002293    add x19, x20, #0x8
   969f4:   91202294    add x20, x20, #0x808
   969f8:   94002302    bl  9f600 <CLogger::Get()>
   969fc:   900000e3    adrp    x3, b2000 <_etext+0x2f9c>
   96a00:   f00000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   96a04:   910b6063    add x3, x3, #0x2d8
   96a08:   910fa021    add x1, x1, #0x3e8
   96a0c:   52800082    mov w2, #0x4
   96a10:   940024e4    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   96a14:   d503201f    nop
   96a18:   f9400260    ldr x0, [x19]
   96a1c:   b4000040    cbz x0, 96a24 <CUSBAudioFunctionTopology::Dump()+0x44>
   96a20:   97ffff04    bl  96630 <CUSBAudioEntity::Dump()>
   96a24:   91002273    add x19, x19, #0x8
   96a28:   eb14027f    cmp x19, x20
   96a2c:   54ffff61    b.ne    96a18 <CUSBAudioFunctionTopology::Dump()+0x38>
   96a30:   a94153f3    ldp x19, x20, [sp, #16]
   96a34:   a8c27bfd    ldp x29, x30, [sp], #32
   96a38:   d65f03c0    ret
   96a3c:   00000000    udf #0

0000000000096a40 <CLAN7800Device::GetMACAddress() const>:
   96a40:   91010000    add x0, x0, #0x40
   96a44:   d65f03c0    ret
   96a48:   d503201f    nop
   96a4c:   d503201f    nop

0000000000096a50 <CLAN7800Device::~CLAN7800Device()>:
   96a50:   a9be7bfd    stp x29, x30, [sp, #-32]!
   96a54:   f00000e2    adrp    x2, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   96a58:   91102042    add x2, x2, #0x408
   96a5c:   910003fd    mov x29, sp
   96a60:   f00000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   96a64:   91128021    add x1, x1, #0x4a0
   96a68:   a90153f3    stp x19, x20, [sp, #16]
   96a6c:   aa0003f3    mov x19, x0
   96a70:   f9401c14    ldr x20, [x0, #56]
   96a74:   f9000002    str x2, [x0]
   96a78:   f9001401    str x1, [x0, #40]
   96a7c:   b40000d4    cbz x20, 96a94 <CLAN7800Device::~CLAN7800Device()+0x44>
   96a80:   aa1403e0    mov x0, x20
   96a84:   97ffcd3f    bl  89f80 <CUSBEndpoint::~CUSBEndpoint()>
   96a88:   aa1403e0    mov x0, x20
   96a8c:   d2800401    mov x1, #0x20
   96a90:   94004374    bl  a7860 <operator delete(void*, unsigned long)>
   96a94:   f9401a74    ldr x20, [x19, #48]
   96a98:   f9001e7f    str xzr, [x19, #56]
   96a9c:   b40000d4    cbz x20, 96ab4 <CLAN7800Device::~CLAN7800Device()+0x64>
   96aa0:   aa1403e0    mov x0, x20
   96aa4:   97ffcd37    bl  89f80 <CUSBEndpoint::~CUSBEndpoint()>
   96aa8:   aa1403e0    mov x0, x20
   96aac:   d2800401    mov x1, #0x20
   96ab0:   9400436c    bl  a7860 <operator delete(void*, unsigned long)>
   96ab4:   91010260    add x0, x19, #0x40
   96ab8:   f9001a7f    str xzr, [x19, #48]
   96abc:   940041c9    bl  a71e0 <CMACAddress::~CMACAddress()>
   96ac0:   aa1303e0    mov x0, x19
   96ac4:   a94153f3    ldp x19, x20, [sp, #16]
   96ac8:   a8c27bfd    ldp x29, x30, [sp], #32
   96acc:   17ffcd81    b   8a0d0 <CUSBFunction::~CUSBFunction()>

0000000000096ad0 <non-virtual thunk to CLAN7800Device::~CLAN7800Device()>:
   96ad0:   d100a000    sub x0, x0, #0x28
   96ad4:   17ffffdf    b   96a50 <CLAN7800Device::~CLAN7800Device()>
   96ad8:   d503201f    nop
   96adc:   d503201f    nop

0000000000096ae0 <CLAN7800Device::~CLAN7800Device()>:
   96ae0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   96ae4:   910003fd    mov x29, sp
   96ae8:   f9000bf3    str x19, [sp, #16]
   96aec:   aa0003f3    mov x19, x0
   96af0:   97ffffd8    bl  96a50 <CLAN7800Device::~CLAN7800Device()>
   96af4:   aa1303e0    mov x0, x19
   96af8:   f9400bf3    ldr x19, [sp, #16]
   96afc:   d2800901    mov x1, #0x48
   96b00:   a8c27bfd    ldp x29, x30, [sp], #32
   96b04:   14004357    b   a7860 <operator delete(void*, unsigned long)>
   96b08:   d503201f    nop
   96b0c:   d503201f    nop

0000000000096b10 <CLAN7800Device::ReceiveFrame(void*, unsigned int*)>:
   96b10:   a9b47bfd    stp x29, x30, [sp, #-192]!
   96b14:   910003fd    mov x29, sp
   96b18:   a90153f3    stp x19, x20, [sp, #16]
   96b1c:   aa0103f3    mov x19, x1
   96b20:   f9401801    ldr x1, [x0, #48]
   96b24:   a9025bf5    stp x21, x22, [sp, #32]
   96b28:   b40006a1    cbz x1, 96bfc <CLAN7800Device::ReceiveFrame(void*, unsigned int*)+0xec>
   96b2c:   b4000753    cbz x19, 96c14 <CLAN7800Device::ReceiveFrame(void*, unsigned int*)+0x104>
   96b30:   aa0003f4    mov x20, x0
   96b34:   d2800004    mov x4, #0x0
   96b38:   5280c803    mov w3, #0x640
   96b3c:   9100c3e0    add x0, sp, #0x30
   96b40:   aa0203f5    mov x21, x2
   96b44:   aa1303e2    mov x2, x19
   96b48:   97ffabce    bl  81a80 <CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)>
   96b4c:   aa1403e0    mov x0, x20
   96b50:   97ffce80    bl  8a550 <CUSBFunction::GetHost() const>
   96b54:   f9400003    ldr x3, [x0]
   96b58:   9100c3e1    add x1, sp, #0x30
   96b5c:   52800002    mov w2, #0x0
   96b60:   f9401063    ldr x3, [x3, #32]
   96b64:   d63f0060    blr x3
   96b68:   12001c14    and w20, w0, #0xff
   96b6c:   37000120    tbnz    w0, #0, 96b90 <CLAN7800Device::ReceiveFrame(void*, unsigned int*)+0x80>
   96b70:   9100c3e0    add x0, sp, #0x30
   96b74:   52800014    mov w20, #0x0
   96b78:   97ffabe2    bl  81b00 <CUSBRequest::~CUSBRequest()>
   96b7c:   a9425bf5    ldp x21, x22, [sp, #32]
   96b80:   2a1403e0    mov w0, w20
   96b84:   a94153f3    ldp x19, x20, [sp, #16]
   96b88:   a8cc7bfd    ldp x29, x30, [sp], #192
   96b8c:   d65f03c0    ret
   96b90:   9100c3e0    add x0, sp, #0x30
   96b94:   97ffabfb    bl  81b80 <CUSBRequest::GetResultLength() const>
   96b98:   7100241f    cmp w0, #0x9
   96b9c:   2a0003e3    mov w3, w0
   96ba0:   54fffe89    b.ls    96b70 <CLAN7800Device::ReceiveFrame(void*, unsigned int*)+0x60>
   96ba4:   b9400276    ldr w22, [x19]
   96ba8:   37b00436    tbnz    w22, #22, 96c2c <CLAN7800Device::ReceiveFrame(void*, unsigned int*)+0x11c>
   96bac:   120036d6    and w22, w22, #0x3fff
   96bb0:   51002800    sub w0, w0, #0xa
   96bb4:   6b16001f    cmp w0, w22
   96bb8:   540004c1    b.ne    96c50 <CLAN7800Device::ReceiveFrame(void*, unsigned int*)+0x140>
   96bbc:   7100101f    cmp w0, #0x4
   96bc0:   54000549    b.ls    96c68 <CLAN7800Device::ReceiveFrame(void*, unsigned int*)+0x158>
   96bc4:   91002a61    add x1, x19, #0xa
   96bc8:   aa1303e0    mov x0, x19
   96bcc:   51003862    sub w2, w3, #0xe
   96bd0:   51003873    sub w19, w3, #0xe
   96bd4:   94004069    bl  a6d78 <memcpy>
   96bd8:   b4000555    cbz x21, 96c80 <CLAN7800Device::ReceiveFrame(void*, unsigned int*)+0x170>
   96bdc:   9100c3e0    add x0, sp, #0x30
   96be0:   b90002b3    str w19, [x21]
   96be4:   97ffabc7    bl  81b00 <CUSBRequest::~CUSBRequest()>
   96be8:   a9425bf5    ldp x21, x22, [sp, #32]
   96bec:   2a1403e0    mov w0, w20
   96bf0:   a94153f3    ldp x19, x20, [sp, #16]
   96bf4:   a8cc7bfd    ldp x29, x30, [sp], #192
   96bf8:   d65f03c0    ret
   96bfc:   900000e1    adrp    x1, b2000 <_etext+0x2f9c>
   96c00:   900000e0    adrp    x0, b2000 <_etext+0x2f9c>
   96c04:   910ba021    add x1, x1, #0x2e8
   96c08:   910be000    add x0, x0, #0x2f8
   96c0c:   52803802    mov w2, #0x1c0
   96c10:   940017ac    bl  9cac0 <assertion_failed>
   96c14:   900000e1    adrp    x1, b2000 <_etext+0x2f9c>
   96c18:   b00000c0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   96c1c:   910ba021    add x1, x1, #0x2e8
   96c20:   91260000    add x0, x0, #0x980
   96c24:   52803822    mov w2, #0x1c1
   96c28:   940017a6    bl  9cac0 <assertion_failed>
   96c2c:   94002275    bl  9f600 <CLogger::Get()>
   96c30:   900000e3    adrp    x3, b2000 <_etext+0x2f9c>
   96c34:   f00000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   96c38:   2a1603e4    mov w4, w22
   96c3c:   910c4063    add x3, x3, #0x310
   96c40:   9113c021    add x1, x1, #0x4f0
   96c44:   52800042    mov w2, #0x2
   96c48:   94002456    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   96c4c:   17ffffc9    b   96b70 <CLAN7800Device::ReceiveFrame(void*, unsigned int*)+0x60>
   96c50:   900000e1    adrp    x1, b2000 <_etext+0x2f9c>
   96c54:   900000e0    adrp    x0, b2000 <_etext+0x2f9c>
   96c58:   910ba021    add x1, x1, #0x2e8
   96c5c:   910ca000    add x0, x0, #0x328
   96c60:   52803b02    mov w2, #0x1d8
   96c64:   94001797    bl  9cac0 <assertion_failed>
   96c68:   900000e1    adrp    x1, b2000 <_etext+0x2f9c>
   96c6c:   900000e0    adrp    x0, b2000 <_etext+0x2f9c>
   96c70:   910ba021    add x1, x1, #0x2e8
   96c74:   910d6000    add x0, x0, #0x358
   96c78:   52803b22    mov w2, #0x1d9
   96c7c:   94001791    bl  9cac0 <assertion_failed>
   96c80:   900000e1    adrp    x1, b2000 <_etext+0x2f9c>
   96c84:   900000e0    adrp    x0, b2000 <_etext+0x2f9c>
   96c88:   910ba021    add x1, x1, #0x2e8
   96c8c:   910dc000    add x0, x0, #0x370
   96c90:   52803c82    mov w2, #0x1e4
   96c94:   9400178b    bl  9cac0 <assertion_failed>
   96c98:   d503201f    nop
   96c9c:   d503201f    nop

0000000000096ca0 <non-virtual thunk to CLAN7800Device::ReceiveFrame(void*, unsigned int*)>:
   96ca0:   d100a000    sub x0, x0, #0x28
   96ca4:   17ffff9b    b   96b10 <CLAN7800Device::ReceiveFrame(void*, unsigned int*)>
   96ca8:   d503201f    nop
   96cac:   d503201f    nop

0000000000096cb0 <CLAN7800Device::SendFrame(void const*, unsigned int) [clone .part.0]>:
   96cb0:   d11b83ff    sub sp, sp, #0x6e0
   96cb4:   2a0203e2    mov w2, w2
   96cb8:   a9007bfd    stp x29, x30, [sp]
   96cbc:   910003fd    mov x29, sp
   96cc0:   a90153f3    stp x19, x20, [sp, #16]
   96cc4:   9101bff3    add x19, sp, #0x6f
   96cc8:   aa0203f4    mov x20, x2
   96ccc:   927ae673    and x19, x19, #0xffffffffffffffc0
   96cd0:   f90013f5    str x21, [sp, #32]
   96cd4:   aa0003f5    mov x21, x0
   96cd8:   91002260    add x0, x19, #0x8
   96cdc:   94004027    bl  a6d78 <memcpy>
   96ce0:   320a0281    orr w1, w20, #0x400000
   96ce4:   f9401ea0    ldr x0, [x21, #56]
   96ce8:   29007e61    stp w1, wzr, [x19]
   96cec:   b40001e0    cbz x0, 96d28 <CLAN7800Device::SendFrame(void const*, unsigned int) [clone .part.0]+0x78>
   96cf0:   aa1503e0    mov x0, x21
   96cf4:   97ffce17    bl  8a550 <CUSBFunction::GetHost() const>
   96cf8:   f9401ea1    ldr x1, [x21, #56]
   96cfc:   11002283    add w3, w20, #0x8
   96d00:   aa1303e2    mov x2, x19
   96d04:   52800004    mov w4, #0x0
   96d08:   97ffa93e    bl  81200 <CUSBHostController::Transfer(CUSBEndpoint*, void*, unsigned int, unsigned int)>
   96d0c:   2a2003e0    mvn w0, w0
   96d10:   a9407bfd    ldp x29, x30, [sp]
   96d14:   531f7c00    lsr w0, w0, #31
   96d18:   a94153f3    ldp x19, x20, [sp, #16]
   96d1c:   f94013f5    ldr x21, [sp, #32]
   96d20:   911b83ff    add sp, sp, #0x6e0
   96d24:   d65f03c0    ret
   96d28:   900000e1    adrp    x1, b2000 <_etext+0x2f9c>
   96d2c:   900000e0    adrp    x0, b2000 <_etext+0x2f9c>
   96d30:   910ba021    add x1, x1, #0x2e8
   96d34:   910e2000    add x0, x0, #0x388
   96d38:   52803742    mov w2, #0x1ba
   96d3c:   94001761    bl  9cac0 <assertion_failed>

0000000000096d40 <CLAN7800Device::SendFrame(void const*, unsigned int)>:
   96d40:   7119005f    cmp w2, #0x640
   96d44:   54000068    b.hi    96d50 <CLAN7800Device::SendFrame(void const*, unsigned int)+0x10>
   96d48:   b4000081    cbz x1, 96d58 <CLAN7800Device::SendFrame(void const*, unsigned int)+0x18>
   96d4c:   17ffffd9    b   96cb0 <CLAN7800Device::SendFrame(void const*, unsigned int) [clone .part.0]>
   96d50:   52800000    mov w0, #0x0
   96d54:   d65f03c0    ret
   96d58:   900000e1    adrp    x1, b2000 <_etext+0x2f9c>
   96d5c:   b00000c0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   96d60:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   96d64:   910ba021    add x1, x1, #0x2e8
   96d68:   910003fd    mov x29, sp
   96d6c:   91260000    add x0, x0, #0x980
   96d70:   52803662    mov w2, #0x1b3
   96d74:   94001753    bl  9cac0 <assertion_failed>
   96d78:   d503201f    nop
   96d7c:   d503201f    nop

0000000000096d80 <non-virtual thunk to CLAN7800Device::GetMACAddress() const>:
   96d80:   91006000    add x0, x0, #0x18
   96d84:   d65f03c0    ret
   96d88:   d503201f    nop
   96d8c:   d503201f    nop

0000000000096d90 <non-virtual thunk to CLAN7800Device::~CLAN7800Device()>:
   96d90:   a9be7bfd    stp x29, x30, [sp, #-32]!
   96d94:   910003fd    mov x29, sp
   96d98:   f9000bf3    str x19, [sp, #16]
   96d9c:   d100a013    sub x19, x0, #0x28
   96da0:   aa1303e0    mov x0, x19
   96da4:   97ffff2b    bl  96a50 <CLAN7800Device::~CLAN7800Device()>
   96da8:   aa1303e0    mov x0, x19
   96dac:   f9400bf3    ldr x19, [sp, #16]
   96db0:   d2800901    mov x1, #0x48
   96db4:   a8c27bfd    ldp x29, x30, [sp], #32
   96db8:   140042aa    b   a7860 <operator delete(void*, unsigned long)>
   96dbc:   d503201f    nop

0000000000096dc0 <non-virtual thunk to CLAN7800Device::SendFrame(void const*, unsigned int)>:
   96dc0:   7119005f    cmp w2, #0x640
   96dc4:   54000088    b.hi    96dd4 <non-virtual thunk to CLAN7800Device::SendFrame(void const*, unsigned int)+0x14>
   96dc8:   b40000a1    cbz x1, 96ddc <non-virtual thunk to CLAN7800Device::SendFrame(void const*, unsigned int)+0x1c>
   96dcc:   d100a000    sub x0, x0, #0x28
   96dd0:   17ffffb8    b   96cb0 <CLAN7800Device::SendFrame(void const*, unsigned int) [clone .part.0]>
   96dd4:   52800000    mov w0, #0x0
   96dd8:   d65f03c0    ret
   96ddc:   900000e1    adrp    x1, b2000 <_etext+0x2f9c>
   96de0:   b00000c0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   96de4:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   96de8:   910ba021    add x1, x1, #0x2e8
   96dec:   910003fd    mov x29, sp
   96df0:   91260000    add x0, x0, #0x980
   96df4:   52803662    mov w2, #0x1b3
   96df8:   94001732    bl  9cac0 <assertion_failed>
   96dfc:   d503201f    nop

0000000000096e00 <CLAN7800Device::CLAN7800Device(CUSBFunction*)>:
   96e00:   a9be7bfd    stp x29, x30, [sp, #-32]!
   96e04:   910003fd    mov x29, sp
   96e08:   f9000bf3    str x19, [sp, #16]
   96e0c:   aa0003f3    mov x19, x0
   96e10:   97ffcd54    bl  8a360 <CUSBFunction::CUSBFunction(CUSBFunction*)>
   96e14:   f00000e2    adrp    x2, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   96e18:   91102042    add x2, x2, #0x408
   96e1c:   f9001e7f    str xzr, [x19, #56]
   96e20:   f00000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   96e24:   91128021    add x1, x1, #0x4a0
   96e28:   91010260    add x0, x19, #0x40
   96e2c:   f9000262    str x2, [x19]
   96e30:   a902fe61    stp x1, xzr, [x19, #40]
   96e34:   f9400bf3    ldr x19, [sp, #16]
   96e38:   a8c27bfd    ldp x29, x30, [sp], #32
   96e3c:   140040d1    b   a7180 <CMACAddress::CMACAddress()>

0000000000096e40 <CLAN7800Device::WriteReg(unsigned int, unsigned int)>:
   96e40:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   96e44:   910003fd    mov x29, sp
   96e48:   a90153f3    stp x19, x20, [sp, #16]
   96e4c:   2a0103f3    mov w19, w1
   96e50:   f90013f5    str x21, [sp, #32]
   96e54:   aa0003f5    mov x21, x0
   96e58:   b9003fe2    str w2, [sp, #60]
   96e5c:   97ffcdbd    bl  8a550 <CUSBFunction::GetHost() const>
   96e60:   aa0003f4    mov x20, x0
   96e64:   aa1503e0    mov x0, x21
   96e68:   97ffcdae    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   96e6c:   aa0003e1    mov x1, x0
   96e70:   9100f3e6    add x6, sp, #0x3c
   96e74:   aa1403e0    mov x0, x20
   96e78:   2a1303e5    mov w5, w19
   96e7c:   52800087    mov w7, #0x4
   96e80:   52800004    mov w4, #0x0
   96e84:   12800be3    mov w3, #0xffffffa0
   96e88:   52800802    mov w2, #0x40
   96e8c:   97ffa861    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   96e90:   37f800c0    tbnz    w0, #31, 96ea8 <CLAN7800Device::WriteReg(unsigned int, unsigned int)+0x68>
   96e94:   a94153f3    ldp x19, x20, [sp, #16]
   96e98:   52800020    mov w0, #0x1
   96e9c:   f94013f5    ldr x21, [sp, #32]
   96ea0:   a8c47bfd    ldp x29, x30, [sp], #64
   96ea4:   d65f03c0    ret
   96ea8:   940021d6    bl  9f600 <CLogger::Get()>
   96eac:   900000e3    adrp    x3, b2000 <_etext+0x2f9c>
   96eb0:   f00000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   96eb4:   2a1303e4    mov w4, w19
   96eb8:   910e8063    add x3, x3, #0x3a0
   96ebc:   9113c021    add x1, x1, #0x4f0
   96ec0:   52800042    mov w2, #0x2
   96ec4:   940023b7    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   96ec8:   a94153f3    ldp x19, x20, [sp, #16]
   96ecc:   52800000    mov w0, #0x0
   96ed0:   f94013f5    ldr x21, [sp, #32]
   96ed4:   a8c47bfd    ldp x29, x30, [sp], #64
   96ed8:   d65f03c0    ret
   96edc:   d503201f    nop

0000000000096ee0 <CLAN7800Device::ReadReg(unsigned int, unsigned int*)>:
   96ee0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   96ee4:   910003fd    mov x29, sp
   96ee8:   a90153f3    stp x19, x20, [sp, #16]
   96eec:   2a0103f3    mov w19, w1
   96ef0:   a9025bf5    stp x21, x22, [sp, #32]
   96ef4:   aa0203f5    mov x21, x2
   96ef8:   aa0003f6    mov x22, x0
   96efc:   97ffcd95    bl  8a550 <CUSBFunction::GetHost() const>
   96f00:   aa0003f4    mov x20, x0
   96f04:   aa1603e0    mov x0, x22
   96f08:   97ffcd86    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   96f0c:   aa0003e1    mov x1, x0
   96f10:   aa1503e6    mov x6, x21
   96f14:   aa1403e0    mov x0, x20
   96f18:   2a1303e5    mov w5, w19
   96f1c:   52800087    mov w7, #0x4
   96f20:   52800004    mov w4, #0x0
   96f24:   12800bc3    mov w3, #0xffffffa1
   96f28:   128007e2    mov w2, #0xffffffc0
   96f2c:   97ffa839    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   96f30:   7100101f    cmp w0, #0x4
   96f34:   540000c1    b.ne    96f4c <CLAN7800Device::ReadReg(unsigned int, unsigned int*)+0x6c>
   96f38:   a94153f3    ldp x19, x20, [sp, #16]
   96f3c:   52800020    mov w0, #0x1
   96f40:   a9425bf5    ldp x21, x22, [sp, #32]
   96f44:   a8c37bfd    ldp x29, x30, [sp], #48
   96f48:   d65f03c0    ret
   96f4c:   940021ad    bl  9f600 <CLogger::Get()>
   96f50:   900000e3    adrp    x3, b2000 <_etext+0x2f9c>
   96f54:   f00000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   96f58:   2a1303e4    mov w4, w19
   96f5c:   910f0063    add x3, x3, #0x3c0
   96f60:   9113c021    add x1, x1, #0x4f0
   96f64:   52800042    mov w2, #0x2
   96f68:   9400238e    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   96f6c:   a94153f3    ldp x19, x20, [sp, #16]
   96f70:   52800000    mov w0, #0x0
   96f74:   a9425bf5    ldp x21, x22, [sp, #32]
   96f78:   a8c37bfd    ldp x29, x30, [sp], #48
   96f7c:   d65f03c0    ret

0000000000096f80 <CLAN7800Device::WaitReg(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)>:
   96f80:   a9ba7bfd    stp x29, x30, [sp, #-96]!
   96f84:   910003fd    mov x29, sp
   96f88:   a90153f3    stp x19, x20, [sp, #16]
   96f8c:   2a0403f3    mov w19, w4
   96f90:   a9025bf5    stp x21, x22, [sp, #32]
   96f94:   2a0503f5    mov w21, w5
   96f98:   a90363f7    stp x23, x24, [sp, #48]
   96f9c:   aa0003f7    mov x23, x0
   96fa0:   2a0103f8    mov w24, w1
   96fa4:   a9046bf9    stp x25, x26, [sp, #64]
   96fa8:   2a0203f9    mov w25, w2
   96fac:   2a0303fa    mov w26, w3
   96fb0:   94003db4    bl  a6680 <CTimer::Get()>
   96fb4:   b4000560    cbz x0, 97060 <CLAN7800Device::WaitReg(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)+0xe0>
   96fb8:   aa0003f4    mov x20, x0
   96fbc:   94003a79    bl  a59a0 <CTimer::GetTicks() const>
   96fc0:   2a0003f6    mov w22, w0
   96fc4:   d503201f    nop
   96fc8:   350002f3    cbnz    w19, 97024 <CLAN7800Device::WaitReg(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)+0xa4>
   96fcc:   aa1403e0    mov x0, x20
   96fd0:   94003a74    bl  a59a0 <CTimer::GetTicks() const>
   96fd4:   4b160006    sub w6, w0, w22
   96fd8:   6b1500df    cmp w6, w21
   96fdc:   54000322    b.cs    97040 <CLAN7800Device::WaitReg(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)+0xc0>
   96fe0:   910173e2    add x2, sp, #0x5c
   96fe4:   2a1803e1    mov w1, w24
   96fe8:   aa1703e0    mov x0, x23
   96fec:   97ffffbd    bl  96ee0 <CLAN7800Device::ReadReg(unsigned int, unsigned int*)>
   96ff0:   12001c02    and w2, w0, #0xff
   96ff4:   36000260    tbz w0, #0, 97040 <CLAN7800Device::WaitReg(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)+0xc0>
   96ff8:   b9405fe1    ldr w1, [sp, #92]
   96ffc:   0a010321    and w1, w25, w1
   97000:   6b1a003f    cmp w1, w26
   97004:   54fffe21    b.ne    96fc8 <CLAN7800Device::WaitReg(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)+0x48>
   97008:   a94153f3    ldp x19, x20, [sp, #16]
   9700c:   2a0203e0    mov w0, w2
   97010:   a9425bf5    ldp x21, x22, [sp, #32]
   97014:   a94363f7    ldp x23, x24, [sp, #48]
   97018:   a9446bf9    ldp x25, x26, [sp, #64]
   9701c:   a8c67bfd    ldp x29, x30, [sp], #96
   97020:   d65f03c0    ret
   97024:   2a1303e0    mov w0, w19
   97028:   94003d52    bl  a6570 <CTimer::SimpleusDelay(unsigned int)>
   9702c:   aa1403e0    mov x0, x20
   97030:   94003a5c    bl  a59a0 <CTimer::GetTicks() const>
   97034:   4b160006    sub w6, w0, w22
   97038:   6b1500df    cmp w6, w21
   9703c:   54fffd23    b.cc    96fe0 <CLAN7800Device::WaitReg(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)+0x60>
   97040:   52800002    mov w2, #0x0
   97044:   a94153f3    ldp x19, x20, [sp, #16]
   97048:   2a0203e0    mov w0, w2
   9704c:   a9425bf5    ldp x21, x22, [sp, #32]
   97050:   a94363f7    ldp x23, x24, [sp, #48]
   97054:   a9446bf9    ldp x25, x26, [sp, #64]
   97058:   a8c67bfd    ldp x29, x30, [sp], #96
   9705c:   d65f03c0    ret
   97060:   f00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   97064:   f00000c0    adrp    x0, b2000 <_etext+0x2f9c>
   97068:   910ba021    add x1, x1, #0x2e8
   9706c:   910f8000    add x0, x0, #0x3e0
   97070:   528051e2    mov w2, #0x28f
   97074:   94001693    bl  9cac0 <assertion_failed>
   97078:   d503201f    nop
   9707c:   d503201f    nop

0000000000097080 <CLAN7800Device::PHYWrite(unsigned char, unsigned short)>:
   97080:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   97084:   910003fd    mov x29, sp
   97088:   a90153f3    stp x19, x20, [sp, #16]
   9708c:   12001c34    and w20, w1, #0xff
   97090:   71007e9f    cmp w20, #0x1f
   97094:   f90013f5    str x21, [sp, #32]
   97098:   54000488    b.hi    97128 <CLAN7800Device::PHYWrite(unsigned char, unsigned short)+0xa8>
   9709c:   12003c55    and w21, w2, #0xffff
   970a0:   52800c85    mov w5, #0x64
   970a4:   52800004    mov w4, #0x0
   970a8:   52800003    mov w3, #0x0
   970ac:   52800022    mov w2, #0x1
   970b0:   52802401    mov w1, #0x120
   970b4:   aa0003f3    mov x19, x0
   970b8:   97ffffb2    bl  96f80 <CLAN7800Device::WaitReg(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)>
   970bc:   370000c0    tbnz    w0, #0, 970d4 <CLAN7800Device::PHYWrite(unsigned char, unsigned short)+0x54>
   970c0:   a94153f3    ldp x19, x20, [sp, #16]
   970c4:   52800000    mov w0, #0x0
   970c8:   f94013f5    ldr x21, [sp, #32]
   970cc:   a8c37bfd    ldp x29, x30, [sp], #48
   970d0:   d65f03c0    ret
   970d4:   2a1503e2    mov w2, w21
   970d8:   52802481    mov w1, #0x124
   970dc:   aa1303e0    mov x0, x19
   970e0:   97ffff58    bl  96e40 <CLAN7800Device::WriteReg(unsigned int, unsigned int)>
   970e4:   3607fee0    tbz w0, #0, 970c0 <CLAN7800Device::PHYWrite(unsigned char, unsigned short)+0x40>
   970e8:   52810062    mov w2, #0x803
   970ec:   52802401    mov w1, #0x120
   970f0:   2a141842    orr w2, w2, w20, lsl #6
   970f4:   aa1303e0    mov x0, x19
   970f8:   97ffff52    bl  96e40 <CLAN7800Device::WriteReg(unsigned int, unsigned int)>
   970fc:   3607fe20    tbz w0, #0, 970c0 <CLAN7800Device::PHYWrite(unsigned char, unsigned short)+0x40>
   97100:   f94013f5    ldr x21, [sp, #32]
   97104:   aa1303e0    mov x0, x19
   97108:   52800c85    mov w5, #0x64
   9710c:   a94153f3    ldp x19, x20, [sp, #16]
   97110:   52800004    mov w4, #0x0
   97114:   52800003    mov w3, #0x0
   97118:   52800022    mov w2, #0x1
   9711c:   52802401    mov w1, #0x120
   97120:   a8c37bfd    ldp x29, x30, [sp], #48
   97124:   17ffff97    b   96f80 <CLAN7800Device::WaitReg(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)>
   97128:   f00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9712c:   f00000c0    adrp    x0, b2000 <_etext+0x2f9c>
   97130:   910ba021    add x1, x1, #0x2e8
   97134:   910fc000    add x0, x0, #0x3f0
   97138:   52804b42    mov w2, #0x25a
   9713c:   94001661    bl  9cac0 <assertion_failed>

0000000000097140 <CLAN7800Device::PHYRead(unsigned char, unsigned short*)>:
   97140:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   97144:   910003fd    mov x29, sp
   97148:   a90153f3    stp x19, x20, [sp, #16]
   9714c:   12001c34    and w20, w1, #0xff
   97150:   71007e9f    cmp w20, #0x1f
   97154:   f90013f5    str x21, [sp, #32]
   97158:   54000508    b.hi    971f8 <CLAN7800Device::PHYRead(unsigned char, unsigned short*)+0xb8>
   9715c:   aa0203f5    mov x21, x2
   97160:   52800c85    mov w5, #0x64
   97164:   52800004    mov w4, #0x0
   97168:   52800003    mov w3, #0x0
   9716c:   52800022    mov w2, #0x1
   97170:   52802401    mov w1, #0x120
   97174:   aa0003f3    mov x19, x0
   97178:   97ffff82    bl  96f80 <CLAN7800Device::WaitReg(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)>
   9717c:   370000c0    tbnz    w0, #0, 97194 <CLAN7800Device::PHYRead(unsigned char, unsigned short*)+0x54>
   97180:   52800000    mov w0, #0x0
   97184:   a94153f3    ldp x19, x20, [sp, #16]
   97188:   f94013f5    ldr x21, [sp, #32]
   9718c:   a8c47bfd    ldp x29, x30, [sp], #64
   97190:   d65f03c0    ret
   97194:   52810022    mov w2, #0x801
   97198:   52802401    mov w1, #0x120
   9719c:   2a141842    orr w2, w2, w20, lsl #6
   971a0:   aa1303e0    mov x0, x19
   971a4:   97ffff27    bl  96e40 <CLAN7800Device::WriteReg(unsigned int, unsigned int)>
   971a8:   3607fec0    tbz w0, #0, 97180 <CLAN7800Device::PHYRead(unsigned char, unsigned short*)+0x40>
   971ac:   52800c85    mov w5, #0x64
   971b0:   52800004    mov w4, #0x0
   971b4:   52800003    mov w3, #0x0
   971b8:   52800022    mov w2, #0x1
   971bc:   52802401    mov w1, #0x120
   971c0:   aa1303e0    mov x0, x19
   971c4:   97ffff6f    bl  96f80 <CLAN7800Device::WaitReg(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)>
   971c8:   3607fdc0    tbz w0, #0, 97180 <CLAN7800Device::PHYRead(unsigned char, unsigned short*)+0x40>
   971cc:   52802481    mov w1, #0x124
   971d0:   aa1303e0    mov x0, x19
   971d4:   9100f3e2    add x2, sp, #0x3c
   971d8:   97ffff42    bl  96ee0 <CLAN7800Device::ReadReg(unsigned int, unsigned int*)>
   971dc:   2a0003e1    mov w1, w0
   971e0:   12001c00    and w0, w0, #0xff
   971e4:   3607fce1    tbz w1, #0, 97180 <CLAN7800Device::PHYRead(unsigned char, unsigned short*)+0x40>
   971e8:   b4000155    cbz x21, 97210 <CLAN7800Device::PHYRead(unsigned char, unsigned short*)+0xd0>
   971ec:   b9403fe1    ldr w1, [sp, #60]
   971f0:   790002a1    strh    w1, [x21]
   971f4:   17ffffe4    b   97184 <CLAN7800Device::PHYRead(unsigned char, unsigned short*)+0x44>
   971f8:   f00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   971fc:   f00000c0    adrp    x0, b2000 <_etext+0x2f9c>
   97200:   910ba021    add x1, x1, #0x2e8
   97204:   910fc000    add x0, x0, #0x3f0
   97208:   52804e22    mov w2, #0x271
   9720c:   9400162d    bl  9cac0 <assertion_failed>
   97210:   f00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   97214:   f00000c0    adrp    x0, b2000 <_etext+0x2f9c>
   97218:   910ba021    add x1, x1, #0x2e8
   9721c:   91100000    add x0, x0, #0x400
   97220:   528050a2    mov w2, #0x285
   97224:   94001627    bl  9cac0 <assertion_failed>
   97228:   d503201f    nop
   9722c:   d503201f    nop

0000000000097230 <CLAN7800Device::IsLinkUp()>:
   97230:   a9be7bfd    stp x29, x30, [sp, #-32]!
   97234:   52800021    mov w1, #0x1
   97238:   910003fd    mov x29, sp
   9723c:   91007be2    add x2, sp, #0x1e
   97240:   97ffffc0    bl  97140 <CLAN7800Device::PHYRead(unsigned char, unsigned short*)>
   97244:   12001c01    and w1, w0, #0xff
   97248:   36000060    tbz w0, #0, 97254 <CLAN7800Device::IsLinkUp()+0x24>
   9724c:   79403fe1    ldrh    w1, [sp, #30]
   97250:   d3420821    ubfx    x1, x1, #2, #1
   97254:   2a0103e0    mov w0, w1
   97258:   a8c27bfd    ldp x29, x30, [sp], #32
   9725c:   d65f03c0    ret

0000000000097260 <CLAN7800Device::GetLinkSpeed()>:
   97260:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   97264:   52800002    mov w2, #0x0
   97268:   910003fd    mov x29, sp
   9726c:   528003e1    mov w1, #0x1f
   97270:   f9000bf3    str x19, [sp, #16]
   97274:   aa0003f3    mov x19, x0
   97278:   97ffff82    bl  97080 <CLAN7800Device::PHYWrite(unsigned char, unsigned short)>
   9727c:   360003e0    tbz w0, #0, 972f8 <CLAN7800Device::GetLinkSpeed()+0x98>
   97280:   aa1303e0    mov x0, x19
   97284:   9100bbe2    add x2, sp, #0x2e
   97288:   52800381    mov w1, #0x1c
   9728c:   97ffffad    bl  97140 <CLAN7800Device::PHYRead(unsigned char, unsigned short*)>
   97290:   36000340    tbz w0, #0, 972f8 <CLAN7800Device::GetLinkSpeed()+0x98>
   97294:   79405fe0    ldrh    w0, [sp, #46]
   97298:   37700340    tbnz    w0, #14, 97300 <CLAN7800Device::GetLinkSpeed()+0xa0>
   9729c:   367802e0    tbz w0, #15, 972f8 <CLAN7800Device::GetLinkSpeed()+0x98>
   972a0:   d3431401    ubfx    x1, x0, #3, #3
   972a4:   7100103f    cmp w1, #0x4
   972a8:   54000380    b.eq    97318 <CLAN7800Device::GetLinkSpeed()+0xb8>
   972ac:   54000188    b.hi    972dc <CLAN7800Device::GetLinkSpeed()+0x7c>
   972b0:   7100043f    cmp w1, #0x1
   972b4:   52800040    mov w0, #0x2
   972b8:   540000c0    b.eq    972d0 <CLAN7800Device::GetLinkSpeed()+0x70>
   972bc:   6b00003f    cmp w1, w0
   972c0:   52800080    mov w0, #0x4
   972c4:   54000060    b.eq    972d0 <CLAN7800Device::GetLinkSpeed()+0x70>
   972c8:   52800000    mov w0, #0x0
   972cc:   35000161    cbnz    w1, 972f8 <CLAN7800Device::GetLinkSpeed()+0x98>
   972d0:   f9400bf3    ldr x19, [sp, #16]
   972d4:   a8c37bfd    ldp x29, x30, [sp], #48
   972d8:   d65f03c0    ret
   972dc:   7100143f    cmp w1, #0x5
   972e0:   52800060    mov w0, #0x3
   972e4:   54ffff60    b.eq    972d0 <CLAN7800Device::GetLinkSpeed()+0x70>
   972e8:   7100183f    cmp w1, #0x6
   972ec:   528000a0    mov w0, #0x5
   972f0:   54ffff00    b.eq    972d0 <CLAN7800Device::GetLinkSpeed()+0x70>
   972f4:   d503201f    nop
   972f8:   528000c0    mov w0, #0x6
   972fc:   17fffff5    b   972d0 <CLAN7800Device::GetLinkSpeed()+0x70>
   97300:   f00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   97304:   f00000c0    adrp    x0, b2000 <_etext+0x2f9c>
   97308:   910ba021    add x1, x1, #0x2e8
   9730c:   91104000    add x0, x0, #0x410
   97310:   52804082    mov w2, #0x204
   97314:   940015eb    bl  9cac0 <assertion_failed>
   97318:   52800020    mov w0, #0x1
   9731c:   17ffffed    b   972d0 <CLAN7800Device::GetLinkSpeed()+0x70>

0000000000097320 <non-virtual thunk to CLAN7800Device::GetLinkSpeed()>:
   97320:   d100a000    sub x0, x0, #0x28
   97324:   17ffffcf    b   97260 <CLAN7800Device::GetLinkSpeed()>
   97328:   d503201f    nop
   9732c:   d503201f    nop

0000000000097330 <CLAN7800Device::InitPHY()>:
   97330:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   97334:   52800002    mov w2, #0x0
   97338:   910003fd    mov x29, sp
   9733c:   528003e1    mov w1, #0x1f
   97340:   f9000bf3    str x19, [sp, #16]
   97344:   aa0003f3    mov x19, x0
   97348:   97ffff4e    bl  97080 <CLAN7800Device::PHYWrite(unsigned char, unsigned short)>
   9734c:   370000a0    tbnz    w0, #0, 97360 <CLAN7800Device::InitPHY()+0x30>
   97350:   f9400bf3    ldr x19, [sp, #16]
   97354:   52800000    mov w0, #0x0
   97358:   a8c37bfd    ldp x29, x30, [sp], #48
   9735c:   d65f03c0    ret
   97360:   9100bbe2    add x2, sp, #0x2e
   97364:   528003a1    mov w1, #0x1d
   97368:   aa1303e0    mov x0, x19
   9736c:   97ffff75    bl  97140 <CLAN7800Device::PHYRead(unsigned char, unsigned short*)>
   97370:   3607ff00    tbz w0, #0, 97350 <CLAN7800Device::InitPHY()+0x20>
   97374:   79405fe2    ldrh    w2, [sp, #46]
   97378:   52800c23    mov w3, #0x61
   9737c:   aa1303e0    mov x0, x19
   97380:   528003a1    mov w1, #0x1d
   97384:   f9400bf3    ldr x19, [sp, #16]
   97388:   a8c37bfd    ldp x29, x30, [sp], #48
   9738c:   12185c42    and w2, w2, #0xffffff00
   97390:   2a030042    orr w2, w2, w3
   97394:   17ffff3b    b   97080 <CLAN7800Device::PHYWrite(unsigned char, unsigned short)>
   97398:   d503201f    nop
   9739c:   d503201f    nop

00000000000973a0 <non-virtual thunk to CLAN7800Device::IsLinkUp()>:
   973a0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   973a4:   52800021    mov w1, #0x1
   973a8:   910003fd    mov x29, sp
   973ac:   91007be2    add x2, sp, #0x1e
   973b0:   d100a000    sub x0, x0, #0x28
   973b4:   97ffff63    bl  97140 <CLAN7800Device::PHYRead(unsigned char, unsigned short*)>
   973b8:   12001c01    and w1, w0, #0xff
   973bc:   36000060    tbz w0, #0, 973c8 <non-virtual thunk to CLAN7800Device::IsLinkUp()+0x28>
   973c0:   79403fe1    ldrh    w1, [sp, #30]
   973c4:   d3420821    ubfx    x1, x1, #2, #1
   973c8:   2a0103e0    mov w0, w1
   973cc:   a8c27bfd    ldp x29, x30, [sp], #32
   973d0:   d65f03c0    ret
   973d4:   d503201f    nop
   973d8:   d503201f    nop
   973dc:   d503201f    nop

00000000000973e0 <CLAN7800Device::ReadWriteReg(unsigned int, unsigned int, unsigned int)>:
   973e0:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   973e4:   910003fd    mov x29, sp
   973e8:   a9025bf5    stp x21, x22, [sp, #32]
   973ec:   2a0203f6    mov w22, w2
   973f0:   9100f3e2    add x2, sp, #0x3c
   973f4:   2a0103f5    mov w21, w1
   973f8:   a90153f3    stp x19, x20, [sp, #16]
   973fc:   2a0303f3    mov w19, w3
   97400:   aa0003f4    mov x20, x0
   97404:   97fffeb7    bl  96ee0 <CLAN7800Device::ReadReg(unsigned int, unsigned int*)>
   97408:   12001c01    and w1, w0, #0xff
   9740c:   36000120    tbz w0, #0, 97430 <CLAN7800Device::ReadWriteReg(unsigned int, unsigned int, unsigned int)+0x50>
   97410:   b9403fe2    ldr w2, [sp, #60]
   97414:   2a1503e1    mov w1, w21
   97418:   aa1403e0    mov x0, x20
   9741c:   0a020263    and w3, w19, w2
   97420:   2a160062    orr w2, w3, w22
   97424:   b9003fe2    str w2, [sp, #60]
   97428:   97fffe86    bl  96e40 <CLAN7800Device::WriteReg(unsigned int, unsigned int)>
   9742c:   12001c01    and w1, w0, #0xff
   97430:   a94153f3    ldp x19, x20, [sp, #16]
   97434:   2a0103e0    mov w0, w1
   97438:   a9425bf5    ldp x21, x22, [sp, #32]
   9743c:   a8c47bfd    ldp x29, x30, [sp], #64
   97440:   d65f03c0    ret
   97444:   d503201f    nop
   97448:   d503201f    nop
   9744c:   d503201f    nop

0000000000097450 <CLAN7800Device::InitMACAddress()>:
   97450:   a9b97bfd    stp x29, x30, [sp, #-112]!
   97454:   910003fd    mov x29, sp
   97458:   52800001    mov w1, #0x0
   9745c:   a90153f3    stp x19, x20, [sp, #16]
   97460:   aa0003f3    mov x19, x0
   97464:   9100c3e0    add x0, sp, #0x30
   97468:   940015ba    bl  9cb50 <CBcmPropertyTags::CBcmPropertyTags(bool)>
   9746c:   52800061    mov w1, #0x3
   97470:   72a00021    movk    w1, #0x1, lsl #16
   97474:   9100e3e2    add x2, sp, #0x38
   97478:   9100c3e0    add x0, sp, #0x30
   9747c:   52800004    mov w4, #0x0
   97480:   52800283    mov w3, #0x14
   97484:   94001613    bl  9ccd0 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   97488:   37000100    tbnz    w0, #0, 974a8 <CLAN7800Device::InitMACAddress()+0x58>
   9748c:   52800013    mov w19, #0x0
   97490:   9100c3e0    add x0, sp, #0x30
   97494:   940015b3    bl  9cb60 <CBcmPropertyTags::~CBcmPropertyTags()>
   97498:   2a1303e0    mov w0, w19
   9749c:   a94153f3    ldp x19, x20, [sp, #16]
   974a0:   a8c77bfd    ldp x29, x30, [sp], #112
   974a4:   d65f03c0    ret
   974a8:   a9025bf5    stp x21, x22, [sp, #32]
   974ac:   91010275    add x21, x19, #0x40
   974b0:   910113e1    add x1, sp, #0x44
   974b4:   aa1503e0    mov x0, x21
   974b8:   94003f86    bl  a72d0 <CMACAddress::Set(unsigned char const*)>
   974bc:   b94047f4    ldr w20, [sp, #68]
   974c0:   aa1303e0    mov x0, x19
   974c4:   52802381    mov w1, #0x11c
   974c8:   794093f6    ldrh    w22, [sp, #72]
   974cc:   2a1403e2    mov w2, w20
   974d0:   97fffe5c    bl  96e40 <CLAN7800Device::WriteReg(unsigned int, unsigned int)>
   974d4:   360000c0    tbz w0, #0, 974ec <CLAN7800Device::InitMACAddress()+0x9c>
   974d8:   2a1603e2    mov w2, w22
   974dc:   52802301    mov w1, #0x118
   974e0:   aa1303e0    mov x0, x19
   974e4:   97fffe57    bl  96e40 <CLAN7800Device::WriteReg(unsigned int, unsigned int)>
   974e8:   37000060    tbnz    w0, #0, 974f4 <CLAN7800Device::InitMACAddress()+0xa4>
   974ec:   a9425bf5    ldp x21, x22, [sp, #32]
   974f0:   17ffffe7    b   9748c <CLAN7800Device::InitMACAddress()+0x3c>
   974f4:   2a1403e2    mov w2, w20
   974f8:   52808081    mov w1, #0x404
   974fc:   aa1303e0    mov x0, x19
   97500:   97fffe50    bl  96e40 <CLAN7800Device::WriteReg(unsigned int, unsigned int)>
   97504:   3607ff40    tbz w0, #0, 974ec <CLAN7800Device::InitMACAddress()+0x9c>
   97508:   aa1303e0    mov x0, x19
   9750c:   320102c2    orr w2, w22, #0x80000000
   97510:   52808001    mov w1, #0x400
   97514:   97fffe4b    bl  96e40 <CLAN7800Device::WriteReg(unsigned int, unsigned int)>
   97518:   12001c13    and w19, w0, #0xff
   9751c:   3607fe80    tbz w0, #0, 974ec <CLAN7800Device::InitMACAddress()+0x9c>
   97520:   910143e0    add x0, sp, #0x50
   97524:   940031eb    bl  a3cd0 <CString::CString()>
   97528:   910143e1    add x1, sp, #0x50
   9752c:   aa1503e0    mov x0, x21
   97530:   94003fcc    bl  a7460 <CMACAddress::Format(CString*) const>
   97534:   94002033    bl  9f600 <CLogger::Get()>
   97538:   aa0003f4    mov x20, x0
   9753c:   910143e0    add x0, sp, #0x50
   97540:   94003228    bl  a3de0 <CString::operator char const*() const>
   97544:   f00000c3    adrp    x3, b2000 <_etext+0x2f9c>
   97548:   d00000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9754c:   aa0003e4    mov x4, x0
   97550:   9110e063    add x3, x3, #0x438
   97554:   aa1403e0    mov x0, x20
   97558:   9113c021    add x1, x1, #0x4f0
   9755c:   52800082    mov w2, #0x4
   97560:   94002210    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   97564:   910143e0    add x0, sp, #0x50
   97568:   9400319e    bl  a3be0 <CString::~CString()>
   9756c:   a9425bf5    ldp x21, x22, [sp, #32]
   97570:   17ffffc8    b   97490 <CLAN7800Device::InitMACAddress()+0x40>
   97574:   d503201f    nop
   97578:   d503201f    nop
   9757c:   d503201f    nop

0000000000097580 <CLAN7800Device::Configure()>:
   97580:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   97584:   910003fd    mov x29, sp
   97588:   a90153f3    stp x19, x20, [sp, #16]
   9758c:   aa0003f4    mov x20, x0
   97590:   97ffcbcc    bl  8a4c0 <CUSBFunction::GetNumEndpoints() const>
   97594:   12001c00    and w0, w0, #0xff
   97598:   71000c1f    cmp w0, #0x3
   9759c:   540000c0    b.eq    975b4 <CLAN7800Device::Configure()+0x34>
   975a0:   14000027    b   9763c <CLAN7800Device::Configure()+0xbc>
   975a4:   39400e61    ldrb    w1, [x19, #3]
   975a8:   12001421    and w1, w1, #0x3f
   975ac:   7100083f    cmp w1, #0x2
   975b0:   54000500    b.eq    97650 <CLAN7800Device::Configure()+0xd0>
   975b4:   528000a1    mov w1, #0x5
   975b8:   aa1403e0    mov x0, x20
   975bc:   97ffcbf1    bl  8a580 <CUSBFunction::GetDescriptor(unsigned char)>
   975c0:   aa0003f3    mov x19, x0
   975c4:   b5ffff00    cbnz    x0, 975a4 <CLAN7800Device::Configure()+0x24>
   975c8:   f9401a80    ldr x0, [x20, #48]
   975cc:   b4000380    cbz x0, 9763c <CLAN7800Device::Configure()+0xbc>
   975d0:   f9401e80    ldr x0, [x20, #56]
   975d4:   b4000340    cbz x0, 9763c <CLAN7800Device::Configure()+0xbc>
   975d8:   aa1403e0    mov x0, x20
   975dc:   97ffcaf5    bl  8a1b0 <CUSBFunction::Configure()>
   975e0:   36000900    tbz w0, #0, 97700 <CLAN7800Device::Configure()+0x180>
   975e4:   9100e3e2    add x2, sp, #0x38
   975e8:   52800001    mov w1, #0x0
   975ec:   aa1403e0    mov x0, x20
   975f0:   97fffe3c    bl  96ee0 <CLAN7800Device::ReadReg(unsigned int, unsigned int*)>
   975f4:   360000a0    tbz w0, #0, 97608 <CLAN7800Device::Configure()+0x88>
   975f8:   794077e1    ldrh    w1, [sp, #58]
   975fc:   528f0000    mov w0, #0x7800
   97600:   6b00003f    cmp w1, w0
   97604:   54000640    b.eq    976cc <CLAN7800Device::Configure()+0x14c>
   97608:   94001ffe    bl  9f600 <CLogger::Get()>
   9760c:   f00000c3    adrp    x3, b2000 <_etext+0x2f9c>
   97610:   d00000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   97614:   794077e4    ldrh    w4, [sp, #58]
   97618:   91114063    add x3, x3, #0x450
   9761c:   9113c021    add x1, x1, #0x4f0
   97620:   52800022    mov w2, #0x1
   97624:   940021df    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   97628:   52800013    mov w19, #0x0
   9762c:   2a1303e0    mov w0, w19
   97630:   a94153f3    ldp x19, x20, [sp, #16]
   97634:   a8c47bfd    ldp x29, x30, [sp], #64
   97638:   d65f03c0    ret
   9763c:   aa1403e0    mov x0, x20
   97640:   d00000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   97644:   9113c021    add x1, x1, #0x4f0
   97648:   97ffcbda    bl  8a5b0 <CUSBFunction::ConfigurationError(char const*) const>
   9764c:   17fffff7    b   97628 <CLAN7800Device::Configure()+0xa8>
   97650:   39c00a61    ldrsb   w1, [x19, #2]
   97654:   d2800400    mov x0, #0x20
   97658:   37f801e1    tbnz    w1, #31, 97694 <CLAN7800Device::Configure()+0x114>
   9765c:   f9401e81    ldr x1, [x20, #56]
   97660:   b5fffee1    cbnz    x1, 9763c <CLAN7800Device::Configure()+0xbc>
   97664:   f90013f5    str x21, [sp, #32]
   97668:   94004056    bl  a77c0 <operator new(unsigned long)>
   9766c:   aa0003f5    mov x21, x0
   97670:   aa1403e0    mov x0, x20
   97674:   97ffcb9f    bl  8a4f0 <CUSBFunction::GetDevice() const>
   97678:   aa0003e1    mov x1, x0
   9767c:   aa1303e2    mov x2, x19
   97680:   aa1503e0    mov x0, x21
   97684:   97ffc9d3    bl  89dd0 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   97688:   f9001e95    str x21, [x20, #56]
   9768c:   f94013f5    ldr x21, [sp, #32]
   97690:   17ffffc9    b   975b4 <CLAN7800Device::Configure()+0x34>
   97694:   f9401a81    ldr x1, [x20, #48]
   97698:   b5fffd21    cbnz    x1, 9763c <CLAN7800Device::Configure()+0xbc>
   9769c:   f90013f5    str x21, [sp, #32]
   976a0:   94004048    bl  a77c0 <operator new(unsigned long)>
   976a4:   aa0003f5    mov x21, x0
   976a8:   aa1403e0    mov x0, x20
   976ac:   97ffcb91    bl  8a4f0 <CUSBFunction::GetDevice() const>
   976b0:   aa0003e1    mov x1, x0
   976b4:   aa1303e2    mov x2, x19
   976b8:   aa1503e0    mov x0, x21
   976bc:   97ffc9c5    bl  89dd0 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   976c0:   f9001a95    str x21, [x20, #48]
   976c4:   f94013f5    ldr x21, [sp, #32]
   976c8:   17ffffbb    b   975b4 <CLAN7800Device::Configure()+0x34>
   976cc:   52800201    mov w1, #0x10
   976d0:   9100f3e2    add x2, sp, #0x3c
   976d4:   aa1403e0    mov x0, x20
   976d8:   97fffe02    bl  96ee0 <CLAN7800Device::ReadReg(unsigned int, unsigned int*)>
   976dc:   37000220    tbnz    w0, #0, 97720 <CLAN7800Device::Configure()+0x1a0>
   976e0:   94001fc8    bl  9f600 <CLogger::Get()>
   976e4:   f00000c3    adrp    x3, b2000 <_etext+0x2f9c>
   976e8:   d00000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   976ec:   9111a063    add x3, x3, #0x468
   976f0:   9113c021    add x1, x1, #0x4f0
   976f4:   52800022    mov w2, #0x1
   976f8:   940021aa    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   976fc:   17ffffcb    b   97628 <CLAN7800Device::Configure()+0xa8>
   97700:   94001fc0    bl  9f600 <CLogger::Get()>
   97704:   900000c3    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   97708:   d00000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9770c:   9119e063    add x3, x3, #0x678
   97710:   9113c021    add x1, x1, #0x4f0
   97714:   52800022    mov w2, #0x1
   97718:   940021a2    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   9771c:   17ffffc3    b   97628 <CLAN7800Device::Configure()+0xa8>
   97720:   b9403fe2    ldr w2, [sp, #60]
   97724:   52800201    mov w1, #0x10
   97728:   aa1403e0    mov x0, x20
   9772c:   321f0042    orr w2, w2, #0x2
   97730:   b9003fe2    str w2, [sp, #60]
   97734:   97fffdc3    bl  96e40 <CLAN7800Device::WriteReg(unsigned int, unsigned int)>
   97738:   3607fd40    tbz w0, #0, 976e0 <CLAN7800Device::Configure()+0x160>
   9773c:   52800c85    mov w5, #0x64
   97740:   52807d04    mov w4, #0x3e8
   97744:   52800003    mov w3, #0x0
   97748:   52800042    mov w2, #0x2
   9774c:   52800201    mov w1, #0x10
   97750:   aa1403e0    mov x0, x20
   97754:   97fffe0b    bl  96f80 <CLAN7800Device::WaitReg(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)>
   97758:   3607fc40    tbz w0, #0, 976e0 <CLAN7800Device::Configure()+0x160>
   9775c:   aa1403e0    mov x0, x20
   97760:   97ffff3c    bl  97450 <CLAN7800Device::InitMACAddress()>
   97764:   36000fa0    tbz w0, #0, 97958 <CLAN7800Device::Configure()+0x3d8>
   97768:   52800302    mov w2, #0x18
   9776c:   52801201    mov w1, #0x90
   97770:   aa1403e0    mov x0, x20
   97774:   97fffdb3    bl  96e40 <CLAN7800Device::WriteReg(unsigned int, unsigned int)>
   97778:   3607f580    tbz w0, #0, 97628 <CLAN7800Device::Configure()+0xa8>
   9777c:   52810002    mov w2, #0x800
   97780:   52801281    mov w1, #0x94
   97784:   aa1403e0    mov x0, x20
   97788:   97fffdae    bl  96e40 <CLAN7800Device::WriteReg(unsigned int, unsigned int)>
   9778c:   3607f4e0    tbz w0, #0, 97628 <CLAN7800Device::Configure()+0xa8>
   97790:   9100f3e2    add x2, sp, #0x3c
   97794:   52800201    mov w1, #0x10
   97798:   aa1403e0    mov x0, x20
   9779c:   97fffdd1    bl  96ee0 <CLAN7800Device::ReadReg(unsigned int, unsigned int*)>
   977a0:   3607f440    tbz w0, #0, 97628 <CLAN7800Device::Configure()+0xa8>
   977a4:   b9403fe2    ldr w2, [sp, #60]
   977a8:   52800201    mov w1, #0x10
   977ac:   aa1403e0    mov x0, x20
   977b0:   121b7842    and w2, w2, #0xffffffef
   977b4:   320c0442    orr w2, w2, #0x300000
   977b8:   b9003fe2    str w2, [sp, #60]
   977bc:   97fffda1    bl  96e40 <CLAN7800Device::WriteReg(unsigned int, unsigned int)>
   977c0:   3607f340    tbz w0, #0, 97628 <CLAN7800Device::Configure()+0xa8>
   977c4:   9100f3e2    add x2, sp, #0x3c
   977c8:   52801001    mov w1, #0x80
   977cc:   aa1403e0    mov x0, x20
   977d0:   97fffdc4    bl  96ee0 <CLAN7800Device::ReadReg(unsigned int, unsigned int*)>
   977d4:   3607f2a0    tbz w0, #0, 97628 <CLAN7800Device::Configure()+0xa8>
   977d8:   b9403fe2    ldr w2, [sp, #60]
   977dc:   52801001    mov w1, #0x80
   977e0:   aa1403e0    mov x0, x20
   977e4:   12197842    and w2, w2, #0xffffffbf
   977e8:   321b0042    orr w2, w2, #0x20
   977ec:   b9003fe2    str w2, [sp, #60]
   977f0:   97fffd94    bl  96e40 <CLAN7800Device::WriteReg(unsigned int, unsigned int)>
   977f4:   3607f1a0    tbz w0, #0, 97628 <CLAN7800Device::Configure()+0xa8>
   977f8:   528002e2    mov w2, #0x17
   977fc:   52801901    mov w1, #0xc8
   97800:   aa1403e0    mov x0, x20
   97804:   97fffd8f    bl  96e40 <CLAN7800Device::WriteReg(unsigned int, unsigned int)>
   97808:   3607f100    tbz w0, #0, 97628 <CLAN7800Device::Configure()+0xa8>
   9780c:   528002e2    mov w2, #0x17
   97810:   52801981    mov w1, #0xcc
   97814:   aa1403e0    mov x0, x20
   97818:   97fffd8a    bl  96e40 <CLAN7800Device::WriteReg(unsigned int, unsigned int)>
   9781c:   3607f060    tbz w0, #0, 97628 <CLAN7800Device::Configure()+0xa8>
   97820:   52800002    mov w2, #0x0
   97824:   52801301    mov w1, #0x98
   97828:   aa1403e0    mov x0, x20
   9782c:   97fffd85    bl  96e40 <CLAN7800Device::WriteReg(unsigned int, unsigned int)>
   97830:   3607efc0    tbz w0, #0, 97628 <CLAN7800Device::Configure()+0xa8>
   97834:   12800002    mov w2, #0xffffffff
   97838:   52800181    mov w1, #0xc
   9783c:   aa1403e0    mov x0, x20
   97840:   97fffd80    bl  96e40 <CLAN7800Device::WriteReg(unsigned int, unsigned int)>
   97844:   3607ef20    tbz w0, #0, 97628 <CLAN7800Device::Configure()+0xa8>
   97848:   52800002    mov w2, #0x0
   9784c:   52802181    mov w1, #0x10c
   97850:   aa1403e0    mov x0, x20
   97854:   97fffd7b    bl  96e40 <CLAN7800Device::WriteReg(unsigned int, unsigned int)>
   97858:   3607ee80    tbz w0, #0, 97628 <CLAN7800Device::Configure()+0xa8>
   9785c:   52800002    mov w2, #0x0
   97860:   52801a01    mov w1, #0xd0
   97864:   aa1403e0    mov x0, x20
   97868:   97fffd76    bl  96e40 <CLAN7800Device::WriteReg(unsigned int, unsigned int)>
   9786c:   3607ede0    tbz w0, #0, 97628 <CLAN7800Device::Configure()+0xa8>
   97870:   12800003    mov w3, #0xffffffff
   97874:   52808042    mov w2, #0x402
   97878:   52801601    mov w1, #0xb0
   9787c:   aa1403e0    mov x0, x20
   97880:   97fffed8    bl  973e0 <CLAN7800Device::ReadWriteReg(unsigned int, unsigned int, unsigned int)>
   97884:   3607ed20    tbz w0, #0, 97628 <CLAN7800Device::Configure()+0xa8>
   97888:   12800003    mov w3, #0xffffffff
   9788c:   52800202    mov w2, #0x10
   97890:   52800281    mov w1, #0x14
   97894:   aa1403e0    mov x0, x20
   97898:   97fffed2    bl  973e0 <CLAN7800Device::ReadWriteReg(unsigned int, unsigned int, unsigned int)>
   9789c:   360007e0    tbz w0, #0, 97998 <CLAN7800Device::Configure()+0x418>
   978a0:   52800c85    mov w5, #0x64
   978a4:   52807d04    mov w4, #0x3e8
   978a8:   52801003    mov w3, #0x80
   978ac:   52801202    mov w2, #0x90
   978b0:   52800281    mov w1, #0x14
   978b4:   aa1403e0    mov x0, x20
   978b8:   97fffdb2    bl  96f80 <CLAN7800Device::WaitReg(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)>
   978bc:   360006e0    tbz w0, #0, 97998 <CLAN7800Device::Configure()+0x418>
   978c0:   12800003    mov w3, #0xffffffff
   978c4:   52830002    mov w2, #0x1800
   978c8:   52802001    mov w1, #0x100
   978cc:   aa1403e0    mov x0, x20
   978d0:   97fffec4    bl  973e0 <CLAN7800Device::ReadWriteReg(unsigned int, unsigned int, unsigned int)>
   978d4:   3607eaa0    tbz w0, #0, 97628 <CLAN7800Device::Configure()+0xa8>
   978d8:   12800003    mov w3, #0xffffffff
   978dc:   52800022    mov w2, #0x1
   978e0:   52802101    mov w1, #0x108
   978e4:   aa1403e0    mov x0, x20
   978e8:   97fffebe    bl  973e0 <CLAN7800Device::ReadWriteReg(unsigned int, unsigned int, unsigned int)>
   978ec:   3607e9e0    tbz w0, #0, 97628 <CLAN7800Device::Configure()+0xa8>
   978f0:   12800003    mov w3, #0xffffffff
   978f4:   52b00002    mov w2, #0x80000000
   978f8:   52801881    mov w1, #0xc4
   978fc:   aa1403e0    mov x0, x20
   97900:   97fffeb8    bl  973e0 <CLAN7800Device::ReadWriteReg(unsigned int, unsigned int, unsigned int)>
   97904:   3607e920    tbz w0, #0, 97628 <CLAN7800Device::Configure()+0xa8>
   97908:   52800022    mov w2, #0x1
   9790c:   72a0bdc2    movk    w2, #0x5ee, lsl #16
   97910:   12a7ffe3    mov w3, #0xc000ffff
   97914:   52802081    mov w1, #0x104
   97918:   aa1403e0    mov x0, x20
   9791c:   97fffeb1    bl  973e0 <CLAN7800Device::ReadWriteReg(unsigned int, unsigned int, unsigned int)>
   97920:   3607e840    tbz w0, #0, 97628 <CLAN7800Device::Configure()+0xa8>
   97924:   12800003    mov w3, #0xffffffff
   97928:   52b00002    mov w2, #0x80000000
   9792c:   52801801    mov w1, #0xc0
   97930:   aa1403e0    mov x0, x20
   97934:   97fffeab    bl  973e0 <CLAN7800Device::ReadWriteReg(unsigned int, unsigned int, unsigned int)>
   97938:   3607e780    tbz w0, #0, 97628 <CLAN7800Device::Configure()+0xa8>
   9793c:   aa1403e0    mov x0, x20
   97940:   97fffe7c    bl  97330 <CLAN7800Device::InitPHY()>
   97944:   12001c13    and w19, w0, #0xff
   97948:   36000180    tbz w0, #0, 97978 <CLAN7800Device::Configure()+0x3f8>
   9794c:   9100a280    add x0, x20, #0x28
   97950:   94003ee4    bl  a74e0 <CNetDevice::AddNetDevice()>
   97954:   17ffff36    b   9762c <CLAN7800Device::Configure()+0xac>
   97958:   94001f2a    bl  9f600 <CLogger::Get()>
   9795c:   f00000c3    adrp    x3, b2000 <_etext+0x2f9c>
   97960:   d00000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   97964:   9111e063    add x3, x3, #0x478
   97968:   9113c021    add x1, x1, #0x4f0
   9796c:   52800022    mov w2, #0x1
   97970:   9400210c    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   97974:   17ffff2d    b   97628 <CLAN7800Device::Configure()+0xa8>
   97978:   94001f22    bl  9f600 <CLogger::Get()>
   9797c:   f00000c3    adrp    x3, b2000 <_etext+0x2f9c>
   97980:   d00000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   97984:   9112a063    add x3, x3, #0x4a8
   97988:   9113c021    add x1, x1, #0x4f0
   9798c:   52800022    mov w2, #0x1
   97990:   94002104    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   97994:   17ffff25    b   97628 <CLAN7800Device::Configure()+0xa8>
   97998:   94001f1a    bl  9f600 <CLogger::Get()>
   9799c:   f00000c3    adrp    x3, b2000 <_etext+0x2f9c>
   979a0:   d00000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   979a4:   91124063    add x3, x3, #0x490
   979a8:   9113c021    add x1, x1, #0x4f0
   979ac:   52800022    mov w2, #0x1
   979b0:   940020fc    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   979b4:   17ffff1d    b   97628 <CLAN7800Device::Configure()+0xa8>
    ...

00000000000979c0 <CNetDevice::GetType()>:
   979c0:   52800000    mov w0, #0x0
   979c4:   d65f03c0    ret
    ...

00000000000979d0 <CNetDevice::IsSendFrameAdvisable()>:
   979d0:   52800020    mov w0, #0x1
   979d4:   d65f03c0    ret
    ...

00000000000979e0 <CNetDevice::UpdatePHY()>:
   979e0:   52800000    mov w0, #0x0
   979e4:   d65f03c0    ret
    ...

00000000000979f0 <CSMSC951xDevice::GetMACAddress() const>:
   979f0:   91010000    add x0, x0, #0x40
   979f4:   d65f03c0    ret
   979f8:   d503201f    nop
   979fc:   d503201f    nop

0000000000097a00 <CSMSC951xDevice::~CSMSC951xDevice()>:
   97a00:   a9be7bfd    stp x29, x30, [sp, #-32]!
   97a04:   d00000e2    adrp    x2, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   97a08:   91142042    add x2, x2, #0x508
   97a0c:   910003fd    mov x29, sp
   97a10:   d00000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   97a14:   91168021    add x1, x1, #0x5a0
   97a18:   a90153f3    stp x19, x20, [sp, #16]
   97a1c:   aa0003f3    mov x19, x0
   97a20:   f9401c14    ldr x20, [x0, #56]
   97a24:   f9000002    str x2, [x0]
   97a28:   f9001401    str x1, [x0, #40]
   97a2c:   b40000d4    cbz x20, 97a44 <CSMSC951xDevice::~CSMSC951xDevice()+0x44>
   97a30:   aa1403e0    mov x0, x20
   97a34:   97ffc953    bl  89f80 <CUSBEndpoint::~CUSBEndpoint()>
   97a38:   aa1403e0    mov x0, x20
   97a3c:   d2800401    mov x1, #0x20
   97a40:   94003f88    bl  a7860 <operator delete(void*, unsigned long)>
   97a44:   f9401a74    ldr x20, [x19, #48]
   97a48:   f9001e7f    str xzr, [x19, #56]
   97a4c:   b40000d4    cbz x20, 97a64 <CSMSC951xDevice::~CSMSC951xDevice()+0x64>
   97a50:   aa1403e0    mov x0, x20
   97a54:   97ffc94b    bl  89f80 <CUSBEndpoint::~CUSBEndpoint()>
   97a58:   aa1403e0    mov x0, x20
   97a5c:   d2800401    mov x1, #0x20
   97a60:   94003f80    bl  a7860 <operator delete(void*, unsigned long)>
   97a64:   91010260    add x0, x19, #0x40
   97a68:   f9001a7f    str xzr, [x19, #48]
   97a6c:   94003ddd    bl  a71e0 <CMACAddress::~CMACAddress()>
   97a70:   aa1303e0    mov x0, x19
   97a74:   a94153f3    ldp x19, x20, [sp, #16]
   97a78:   a8c27bfd    ldp x29, x30, [sp], #32
   97a7c:   17ffc995    b   8a0d0 <CUSBFunction::~CUSBFunction()>

0000000000097a80 <non-virtual thunk to CSMSC951xDevice::~CSMSC951xDevice()>:
   97a80:   d100a000    sub x0, x0, #0x28
   97a84:   17ffffdf    b   97a00 <CSMSC951xDevice::~CSMSC951xDevice()>
   97a88:   d503201f    nop
   97a8c:   d503201f    nop

0000000000097a90 <CSMSC951xDevice::~CSMSC951xDevice()>:
   97a90:   a9be7bfd    stp x29, x30, [sp, #-32]!
   97a94:   910003fd    mov x29, sp
   97a98:   f9000bf3    str x19, [sp, #16]
   97a9c:   aa0003f3    mov x19, x0
   97aa0:   97ffffd8    bl  97a00 <CSMSC951xDevice::~CSMSC951xDevice()>
   97aa4:   aa1303e0    mov x0, x19
   97aa8:   f9400bf3    ldr x19, [sp, #16]
   97aac:   d2800901    mov x1, #0x48
   97ab0:   a8c27bfd    ldp x29, x30, [sp], #32
   97ab4:   14003f6b    b   a7860 <operator delete(void*, unsigned long)>
   97ab8:   d503201f    nop
   97abc:   d503201f    nop

0000000000097ac0 <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)>:
   97ac0:   a9b47bfd    stp x29, x30, [sp, #-192]!
   97ac4:   910003fd    mov x29, sp
   97ac8:   a90153f3    stp x19, x20, [sp, #16]
   97acc:   aa0103f3    mov x19, x1
   97ad0:   f9401801    ldr x1, [x0, #48]
   97ad4:   a9025bf5    stp x21, x22, [sp, #32]
   97ad8:   b40006e1    cbz x1, 97bb4 <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0xf4>
   97adc:   b4000793    cbz x19, 97bcc <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x10c>
   97ae0:   aa0003f4    mov x20, x0
   97ae4:   d2800004    mov x4, #0x0
   97ae8:   5280c803    mov w3, #0x640
   97aec:   9100c3e0    add x0, sp, #0x30
   97af0:   aa0203f5    mov x21, x2
   97af4:   aa1303e2    mov x2, x19
   97af8:   97ffa7e2    bl  81a80 <CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)>
   97afc:   aa1403e0    mov x0, x20
   97b00:   97ffca94    bl  8a550 <CUSBFunction::GetHost() const>
   97b04:   f9400003    ldr x3, [x0]
   97b08:   9100c3e1    add x1, sp, #0x30
   97b0c:   52800002    mov w2, #0x0
   97b10:   f9401063    ldr x3, [x3, #32]
   97b14:   d63f0060    blr x3
   97b18:   12001c14    and w20, w0, #0xff
   97b1c:   37000120    tbnz    w0, #0, 97b40 <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x80>
   97b20:   9100c3e0    add x0, sp, #0x30
   97b24:   52800014    mov w20, #0x0
   97b28:   97ffa7f6    bl  81b00 <CUSBRequest::~CUSBRequest()>
   97b2c:   a9425bf5    ldp x21, x22, [sp, #32]
   97b30:   2a1403e0    mov w0, w20
   97b34:   a94153f3    ldp x19, x20, [sp, #16]
   97b38:   a8cc7bfd    ldp x29, x30, [sp], #192
   97b3c:   d65f03c0    ret
   97b40:   9100c3e0    add x0, sp, #0x30
   97b44:   97ffa80f    bl  81b80 <CUSBRequest::GetResultLength() const>
   97b48:   71000c1f    cmp w0, #0x3
   97b4c:   54fffea9    b.ls    97b20 <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x60>
   97b50:   b9400276    ldr w22, [x19]
   97b54:   52921bc1    mov w1, #0x90de
   97b58:   72a80001    movk    w1, #0x4000, lsl #16
   97b5c:   6a0102df    tst w22, w1
   97b60:   54000421    b.ne    97be4 <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x124>
   97b64:   d35076d6    ubfx    x22, x22, #16, #14
   97b68:   51001003    sub w3, w0, #0x4
   97b6c:   6b16007f    cmp w3, w22
   97b70:   540004c1    b.ne    97c08 <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x148>
   97b74:   7100107f    cmp w3, #0x4
   97b78:   54000549    b.ls    97c20 <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x160>
   97b7c:   91001261    add x1, x19, #0x4
   97b80:   aa1303e0    mov x0, x19
   97b84:   51001062    sub w2, w3, #0x4
   97b88:   51001073    sub w19, w3, #0x4
   97b8c:   94003c7b    bl  a6d78 <memcpy>
   97b90:   b4000555    cbz x21, 97c38 <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x178>
   97b94:   9100c3e0    add x0, sp, #0x30
   97b98:   b90002b3    str w19, [x21]
   97b9c:   97ffa7d9    bl  81b00 <CUSBRequest::~CUSBRequest()>
   97ba0:   a9425bf5    ldp x21, x22, [sp, #32]
   97ba4:   2a1403e0    mov w0, w20
   97ba8:   a94153f3    ldp x19, x20, [sp, #16]
   97bac:   a8cc7bfd    ldp x29, x30, [sp], #192
   97bb0:   d65f03c0    ret
   97bb4:   f00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   97bb8:   f00000c0    adrp    x0, b2000 <_etext+0x2f9c>
   97bbc:   9112e021    add x1, x1, #0x4b8
   97bc0:   910be000    add x0, x0, #0x2f8
   97bc4:   52802282    mov w2, #0x114
   97bc8:   940013be    bl  9cac0 <assertion_failed>
   97bcc:   f00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   97bd0:   900000c0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   97bd4:   9112e021    add x1, x1, #0x4b8
   97bd8:   91260000    add x0, x0, #0x980
   97bdc:   528022a2    mov w2, #0x115
   97be0:   940013b8    bl  9cac0 <assertion_failed>
   97be4:   94001e87    bl  9f600 <CLogger::Get()>
   97be8:   f00000c3    adrp    x3, b2000 <_etext+0x2f9c>
   97bec:   d00000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   97bf0:   2a1603e4    mov w4, w22
   97bf4:   910c4063    add x3, x3, #0x310
   97bf8:   9117c021    add x1, x1, #0x5f0
   97bfc:   52800042    mov w2, #0x2
   97c00:   94002068    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   97c04:   17ffffc7    b   97b20 <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)+0x60>
   97c08:   f00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   97c0c:   f00000c0    adrp    x0, b2000 <_etext+0x2f9c>
   97c10:   9112e021    add x1, x1, #0x4b8
   97c14:   91132000    add x0, x0, #0x4c8
   97c18:   52802582    mov w2, #0x12c
   97c1c:   940013a9    bl  9cac0 <assertion_failed>
   97c20:   f00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   97c24:   f00000c0    adrp    x0, b2000 <_etext+0x2f9c>
   97c28:   9112e021    add x1, x1, #0x4b8
   97c2c:   910d6000    add x0, x0, #0x358
   97c30:   528025a2    mov w2, #0x12d
   97c34:   940013a3    bl  9cac0 <assertion_failed>
   97c38:   f00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   97c3c:   f00000c0    adrp    x0, b2000 <_etext+0x2f9c>
   97c40:   9112e021    add x1, x1, #0x4b8
   97c44:   910dc000    add x0, x0, #0x370
   97c48:   52802702    mov w2, #0x138
   97c4c:   9400139d    bl  9cac0 <assertion_failed>

0000000000097c50 <non-virtual thunk to CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)>:
   97c50:   d100a000    sub x0, x0, #0x28
   97c54:   17ffff9b    b   97ac0 <CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)>
   97c58:   d503201f    nop
   97c5c:   d503201f    nop

0000000000097c60 <CSMSC951xDevice::SendFrame(void const*, unsigned int) [clone .part.0]>:
   97c60:   d11b83ff    sub sp, sp, #0x6e0
   97c64:   2a0203e2    mov w2, w2
   97c68:   a9007bfd    stp x29, x30, [sp]
   97c6c:   910003fd    mov x29, sp
   97c70:   a90153f3    stp x19, x20, [sp, #16]
   97c74:   9101bff3    add x19, sp, #0x6f
   97c78:   aa0203f4    mov x20, x2
   97c7c:   927ae673    and x19, x19, #0xffffffffffffffc0
   97c80:   f90013f5    str x21, [sp, #32]
   97c84:   aa0003f5    mov x21, x0
   97c88:   91002260    add x0, x19, #0x8
   97c8c:   94003c3b    bl  a6d78 <memcpy>
   97c90:   32140681    orr w1, w20, #0x3000
   97c94:   f9401ea0    ldr x0, [x21, #56]
   97c98:   29005261    stp w1, w20, [x19]
   97c9c:   b40001e0    cbz x0, 97cd8 <CSMSC951xDevice::SendFrame(void const*, unsigned int) [clone .part.0]+0x78>
   97ca0:   aa1503e0    mov x0, x21
   97ca4:   97ffca2b    bl  8a550 <CUSBFunction::GetHost() const>
   97ca8:   f9401ea1    ldr x1, [x21, #56]
   97cac:   11002283    add w3, w20, #0x8
   97cb0:   aa1303e2    mov x2, x19
   97cb4:   52800004    mov w4, #0x0
   97cb8:   97ffa552    bl  81200 <CUSBHostController::Transfer(CUSBEndpoint*, void*, unsigned int, unsigned int)>
   97cbc:   2a2003e0    mvn w0, w0
   97cc0:   a9407bfd    ldp x29, x30, [sp]
   97cc4:   531f7c00    lsr w0, w0, #31
   97cc8:   a94153f3    ldp x19, x20, [sp, #16]
   97ccc:   f94013f5    ldr x21, [sp, #32]
   97cd0:   911b83ff    add sp, sp, #0x6e0
   97cd4:   d65f03c0    ret
   97cd8:   f00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   97cdc:   f00000c0    adrp    x0, b2000 <_etext+0x2f9c>
   97ce0:   9112e021    add x1, x1, #0x4b8
   97ce4:   910e2000    add x0, x0, #0x388
   97ce8:   528021c2    mov w2, #0x10e
   97cec:   94001375    bl  9cac0 <assertion_failed>

0000000000097cf0 <CSMSC951xDevice::SendFrame(void const*, unsigned int)>:
   97cf0:   7119005f    cmp w2, #0x640
   97cf4:   54000068    b.hi    97d00 <CSMSC951xDevice::SendFrame(void const*, unsigned int)+0x10>
   97cf8:   b4000081    cbz x1, 97d08 <CSMSC951xDevice::SendFrame(void const*, unsigned int)+0x18>
   97cfc:   17ffffd9    b   97c60 <CSMSC951xDevice::SendFrame(void const*, unsigned int) [clone .part.0]>
   97d00:   52800000    mov w0, #0x0
   97d04:   d65f03c0    ret
   97d08:   f00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   97d0c:   900000c0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   97d10:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   97d14:   9112e021    add x1, x1, #0x4b8
   97d18:   910003fd    mov x29, sp
   97d1c:   91260000    add x0, x0, #0x980
   97d20:   528020e2    mov w2, #0x107
   97d24:   94001367    bl  9cac0 <assertion_failed>
   97d28:   d503201f    nop
   97d2c:   d503201f    nop

0000000000097d30 <non-virtual thunk to CSMSC951xDevice::GetMACAddress() const>:
   97d30:   91006000    add x0, x0, #0x18
   97d34:   d65f03c0    ret
   97d38:   d503201f    nop
   97d3c:   d503201f    nop

0000000000097d40 <non-virtual thunk to CSMSC951xDevice::~CSMSC951xDevice()>:
   97d40:   a9be7bfd    stp x29, x30, [sp, #-32]!
   97d44:   910003fd    mov x29, sp
   97d48:   f9000bf3    str x19, [sp, #16]
   97d4c:   d100a013    sub x19, x0, #0x28
   97d50:   aa1303e0    mov x0, x19
   97d54:   97ffff2b    bl  97a00 <CSMSC951xDevice::~CSMSC951xDevice()>
   97d58:   aa1303e0    mov x0, x19
   97d5c:   f9400bf3    ldr x19, [sp, #16]
   97d60:   d2800901    mov x1, #0x48
   97d64:   a8c27bfd    ldp x29, x30, [sp], #32
   97d68:   14003ebe    b   a7860 <operator delete(void*, unsigned long)>
   97d6c:   d503201f    nop

0000000000097d70 <non-virtual thunk to CSMSC951xDevice::SendFrame(void const*, unsigned int)>:
   97d70:   7119005f    cmp w2, #0x640
   97d74:   54000088    b.hi    97d84 <non-virtual thunk to CSMSC951xDevice::SendFrame(void const*, unsigned int)+0x14>
   97d78:   b40000a1    cbz x1, 97d8c <non-virtual thunk to CSMSC951xDevice::SendFrame(void const*, unsigned int)+0x1c>
   97d7c:   d100a000    sub x0, x0, #0x28
   97d80:   17ffffb8    b   97c60 <CSMSC951xDevice::SendFrame(void const*, unsigned int) [clone .part.0]>
   97d84:   52800000    mov w0, #0x0
   97d88:   d65f03c0    ret
   97d8c:   f00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   97d90:   900000c0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   97d94:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   97d98:   9112e021    add x1, x1, #0x4b8
   97d9c:   910003fd    mov x29, sp
   97da0:   91260000    add x0, x0, #0x980
   97da4:   528020e2    mov w2, #0x107
   97da8:   94001346    bl  9cac0 <assertion_failed>
   97dac:   d503201f    nop

0000000000097db0 <CSMSC951xDevice::CSMSC951xDevice(CUSBFunction*)>:
   97db0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   97db4:   910003fd    mov x29, sp
   97db8:   f9000bf3    str x19, [sp, #16]
   97dbc:   aa0003f3    mov x19, x0
   97dc0:   97ffc968    bl  8a360 <CUSBFunction::CUSBFunction(CUSBFunction*)>
   97dc4:   d00000e2    adrp    x2, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   97dc8:   91142042    add x2, x2, #0x508
   97dcc:   f9001e7f    str xzr, [x19, #56]
   97dd0:   d00000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   97dd4:   91168021    add x1, x1, #0x5a0
   97dd8:   91010260    add x0, x19, #0x40
   97ddc:   f9000262    str x2, [x19]
   97de0:   a902fe61    stp x1, xzr, [x19, #40]
   97de4:   f9400bf3    ldr x19, [sp, #16]
   97de8:   a8c27bfd    ldp x29, x30, [sp], #32
   97dec:   14003ce5    b   a7180 <CMACAddress::CMACAddress()>

0000000000097df0 <CSMSC951xDevice::PHYWaitNotBusy()>:
   97df0:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   97df4:   910003fd    mov x29, sp
   97df8:   a90153f3    stp x19, x20, [sp, #16]
   97dfc:   aa0003f4    mov x20, x0
   97e00:   a9025bf5    stp x21, x22, [sp, #32]
   97e04:   94003a1f    bl  a6680 <CTimer::Get()>
   97e08:   b40004c0    cbz x0, 97ea0 <CSMSC951xDevice::PHYWaitNotBusy()+0xb0>
   97e0c:   aa0003f5    mov x21, x0
   97e10:   940036e4    bl  a59a0 <CTimer::GetTicks() const>
   97e14:   2a0003f6    mov w22, w0
   97e18:   14000013    b   97e64 <CSMSC951xDevice::PHYWaitNotBusy()+0x74>
   97e1c:   aa1403e0    mov x0, x20
   97e20:   97ffc9cc    bl  8a550 <CUSBFunction::GetHost() const>
   97e24:   aa0003f3    mov x19, x0
   97e28:   aa1403e0    mov x0, x20
   97e2c:   97ffc9bd    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   97e30:   aa0003e1    mov x1, x0
   97e34:   9100f3e6    add x6, sp, #0x3c
   97e38:   aa1303e0    mov x0, x19
   97e3c:   52800087    mov w7, #0x4
   97e40:   52802285    mov w5, #0x114
   97e44:   52800004    mov w4, #0x0
   97e48:   12800bc3    mov w3, #0xffffffa1
   97e4c:   128007e2    mov w2, #0xffffffc0
   97e50:   97ffa470    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   97e54:   7100101f    cmp w0, #0x4
   97e58:   54000101    b.ne    97e78 <CSMSC951xDevice::PHYWaitNotBusy()+0x88>
   97e5c:   b9403fe1    ldr w1, [sp, #60]
   97e60:   36000161    tbz w1, #0, 97e8c <CSMSC951xDevice::PHYWaitNotBusy()+0x9c>
   97e64:   aa1503e0    mov x0, x21
   97e68:   940036ce    bl  a59a0 <CTimer::GetTicks() const>
   97e6c:   4b160001    sub w1, w0, w22
   97e70:   71018c3f    cmp w1, #0x63
   97e74:   54fffd49    b.ls    97e1c <CSMSC951xDevice::PHYWaitNotBusy()+0x2c>
   97e78:   a94153f3    ldp x19, x20, [sp, #16]
   97e7c:   52800000    mov w0, #0x0
   97e80:   a9425bf5    ldp x21, x22, [sp, #32]
   97e84:   a8c47bfd    ldp x29, x30, [sp], #64
   97e88:   d65f03c0    ret
   97e8c:   a94153f3    ldp x19, x20, [sp, #16]
   97e90:   52800020    mov w0, #0x1
   97e94:   a9425bf5    ldp x21, x22, [sp, #32]
   97e98:   a8c47bfd    ldp x29, x30, [sp], #64
   97e9c:   d65f03c0    ret
   97ea0:   f00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   97ea4:   f00000c0    adrp    x0, b2000 <_etext+0x2f9c>
   97ea8:   9112e021    add x1, x1, #0x4b8
   97eac:   910f8000    add x0, x0, #0x3e0
   97eb0:   528031e2    mov w2, #0x18f
   97eb4:   94001303    bl  9cac0 <assertion_failed>
   97eb8:   d503201f    nop
   97ebc:   d503201f    nop

0000000000097ec0 <CSMSC951xDevice::PHYWrite(unsigned char, unsigned short)>:
   97ec0:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   97ec4:   910003fd    mov x29, sp
   97ec8:   a90153f3    stp x19, x20, [sp, #16]
   97ecc:   12001c34    and w20, w1, #0xff
   97ed0:   71007e9f    cmp w20, #0x1f
   97ed4:   f90013f5    str x21, [sp, #32]
   97ed8:   54000628    b.hi    97f9c <CSMSC951xDevice::PHYWrite(unsigned char, unsigned short)+0xdc>
   97edc:   12003c55    and w21, w2, #0xffff
   97ee0:   aa0003f3    mov x19, x0
   97ee4:   97ffffc3    bl  97df0 <CSMSC951xDevice::PHYWaitNotBusy()>
   97ee8:   370000c0    tbnz    w0, #0, 97f00 <CSMSC951xDevice::PHYWrite(unsigned char, unsigned short)+0x40>
   97eec:   a94153f3    ldp x19, x20, [sp, #16]
   97ef0:   52800000    mov w0, #0x0
   97ef4:   f94013f5    ldr x21, [sp, #32]
   97ef8:   a8c47bfd    ldp x29, x30, [sp], #64
   97efc:   d65f03c0    ret
   97f00:   aa1303e0    mov x0, x19
   97f04:   b9003ff5    str w21, [sp, #60]
   97f08:   97ffc992    bl  8a550 <CUSBFunction::GetHost() const>
   97f0c:   aa0003f5    mov x21, x0
   97f10:   aa1303e0    mov x0, x19
   97f14:   97ffc983    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   97f18:   aa0003e1    mov x1, x0
   97f1c:   9100f3e6    add x6, sp, #0x3c
   97f20:   aa1503e0    mov x0, x21
   97f24:   52800087    mov w7, #0x4
   97f28:   52802305    mov w5, #0x118
   97f2c:   52800004    mov w4, #0x0
   97f30:   12800be3    mov w3, #0xffffffa0
   97f34:   52800802    mov w2, #0x40
   97f38:   97ffa436    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   97f3c:   37fffd80    tbnz    w0, #31, 97eec <CSMSC951xDevice::PHYWrite(unsigned char, unsigned short)+0x2c>
   97f40:   52810061    mov w1, #0x803
   97f44:   aa1303e0    mov x0, x19
   97f48:   2a141834    orr w20, w1, w20, lsl #6
   97f4c:   b9003ff4    str w20, [sp, #60]
   97f50:   97ffc980    bl  8a550 <CUSBFunction::GetHost() const>
   97f54:   aa0003f4    mov x20, x0
   97f58:   aa1303e0    mov x0, x19
   97f5c:   97ffc971    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   97f60:   aa0003e1    mov x1, x0
   97f64:   9100f3e6    add x6, sp, #0x3c
   97f68:   aa1403e0    mov x0, x20
   97f6c:   52800087    mov w7, #0x4
   97f70:   52802285    mov w5, #0x114
   97f74:   52800004    mov w4, #0x0
   97f78:   12800be3    mov w3, #0xffffffa0
   97f7c:   52800802    mov w2, #0x40
   97f80:   97ffa424    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   97f84:   37fffb40    tbnz    w0, #31, 97eec <CSMSC951xDevice::PHYWrite(unsigned char, unsigned short)+0x2c>
   97f88:   f94013f5    ldr x21, [sp, #32]
   97f8c:   aa1303e0    mov x0, x19
   97f90:   a94153f3    ldp x19, x20, [sp, #16]
   97f94:   a8c47bfd    ldp x29, x30, [sp], #64
   97f98:   17ffff96    b   97df0 <CSMSC951xDevice::PHYWaitNotBusy()>
   97f9c:   f00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   97fa0:   f00000c0    adrp    x0, b2000 <_etext+0x2f9c>
   97fa4:   9112e021    add x1, x1, #0x4b8
   97fa8:   910fc000    add x0, x0, #0x3f0
   97fac:   52802c62    mov w2, #0x163
   97fb0:   940012c4    bl  9cac0 <assertion_failed>
   97fb4:   d503201f    nop
   97fb8:   d503201f    nop
   97fbc:   d503201f    nop

0000000000097fc0 <CSMSC951xDevice::PHYRead(unsigned char, unsigned short*)>:
   97fc0:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   97fc4:   910003fd    mov x29, sp
   97fc8:   a90153f3    stp x19, x20, [sp, #16]
   97fcc:   12001c34    and w20, w1, #0xff
   97fd0:   71007e9f    cmp w20, #0x1f
   97fd4:   f90013f5    str x21, [sp, #32]
   97fd8:   540006c8    b.hi    980b0 <CSMSC951xDevice::PHYRead(unsigned char, unsigned short*)+0xf0>
   97fdc:   aa0203f5    mov x21, x2
   97fe0:   aa0003f3    mov x19, x0
   97fe4:   97ffff83    bl  97df0 <CSMSC951xDevice::PHYWaitNotBusy()>
   97fe8:   370000e0    tbnz    w0, #0, 98004 <CSMSC951xDevice::PHYRead(unsigned char, unsigned short*)+0x44>
   97fec:   52800014    mov w20, #0x0
   97ff0:   f94013f5    ldr x21, [sp, #32]
   97ff4:   2a1403e0    mov w0, w20
   97ff8:   a94153f3    ldp x19, x20, [sp, #16]
   97ffc:   a8c47bfd    ldp x29, x30, [sp], #64
   98000:   d65f03c0    ret
   98004:   52810021    mov w1, #0x801
   98008:   aa1303e0    mov x0, x19
   9800c:   2a141834    orr w20, w1, w20, lsl #6
   98010:   b9003ff4    str w20, [sp, #60]
   98014:   97ffc94f    bl  8a550 <CUSBFunction::GetHost() const>
   98018:   aa0003f4    mov x20, x0
   9801c:   aa1303e0    mov x0, x19
   98020:   97ffc940    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   98024:   aa0003e1    mov x1, x0
   98028:   9100f3e6    add x6, sp, #0x3c
   9802c:   aa1403e0    mov x0, x20
   98030:   52800087    mov w7, #0x4
   98034:   52802285    mov w5, #0x114
   98038:   52800004    mov w4, #0x0
   9803c:   12800be3    mov w3, #0xffffffa0
   98040:   52800802    mov w2, #0x40
   98044:   97ffa3f3    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   98048:   37fffd20    tbnz    w0, #31, 97fec <CSMSC951xDevice::PHYRead(unsigned char, unsigned short*)+0x2c>
   9804c:   aa1303e0    mov x0, x19
   98050:   97ffff68    bl  97df0 <CSMSC951xDevice::PHYWaitNotBusy()>
   98054:   12001c14    and w20, w0, #0xff
   98058:   3607fca0    tbz w0, #0, 97fec <CSMSC951xDevice::PHYRead(unsigned char, unsigned short*)+0x2c>
   9805c:   aa1303e0    mov x0, x19
   98060:   97ffc93c    bl  8a550 <CUSBFunction::GetHost() const>
   98064:   aa0003e1    mov x1, x0
   98068:   aa1303e0    mov x0, x19
   9806c:   aa0103f3    mov x19, x1
   98070:   97ffc92c    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   98074:   aa0003e1    mov x1, x0
   98078:   9100f3e6    add x6, sp, #0x3c
   9807c:   aa1303e0    mov x0, x19
   98080:   52800087    mov w7, #0x4
   98084:   52802305    mov w5, #0x118
   98088:   52800004    mov w4, #0x0
   9808c:   12800bc3    mov w3, #0xffffffa1
   98090:   128007e2    mov w2, #0xffffffc0
   98094:   97ffa3df    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   98098:   7100101f    cmp w0, #0x4
   9809c:   54fffa81    b.ne    97fec <CSMSC951xDevice::PHYRead(unsigned char, unsigned short*)+0x2c>
   980a0:   b4000155    cbz x21, 980c8 <CSMSC951xDevice::PHYRead(unsigned char, unsigned short*)+0x108>
   980a4:   b9403fe0    ldr w0, [sp, #60]
   980a8:   790002a0    strh    w0, [x21]
   980ac:   17ffffd1    b   97ff0 <CSMSC951xDevice::PHYRead(unsigned char, unsigned short*)+0x30>
   980b0:   d00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   980b4:   d00000c0    adrp    x0, b2000 <_etext+0x2f9c>
   980b8:   9112e021    add x1, x1, #0x4b8
   980bc:   910fc000    add x0, x0, #0x3f0
   980c0:   52802ec2    mov w2, #0x176
   980c4:   9400127f    bl  9cac0 <assertion_failed>
   980c8:   d00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   980cc:   d00000c0    adrp    x0, b2000 <_etext+0x2f9c>
   980d0:   9112e021    add x1, x1, #0x4b8
   980d4:   91100000    add x0, x0, #0x400
   980d8:   528030c2    mov w2, #0x186
   980dc:   94001279    bl  9cac0 <assertion_failed>

00000000000980e0 <CSMSC951xDevice::IsLinkUp()>:
   980e0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   980e4:   910003fd    mov x29, sp
   980e8:   a90153f3    stp x19, x20, [sp, #16]
   980ec:   aa0003f3    mov x19, x0
   980f0:   97ffff40    bl  97df0 <CSMSC951xDevice::PHYWaitNotBusy()>
   980f4:   370000a0    tbnz    w0, #0, 98108 <CSMSC951xDevice::IsLinkUp()+0x28>
   980f8:   a94153f3    ldp x19, x20, [sp, #16]
   980fc:   52800000    mov w0, #0x0
   98100:   a8c37bfd    ldp x29, x30, [sp], #48
   98104:   d65f03c0    ret
   98108:   52810821    mov w1, #0x841
   9810c:   aa1303e0    mov x0, x19
   98110:   b9002fe1    str w1, [sp, #44]
   98114:   97ffc90f    bl  8a550 <CUSBFunction::GetHost() const>
   98118:   aa0003f4    mov x20, x0
   9811c:   aa1303e0    mov x0, x19
   98120:   97ffc900    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   98124:   aa0003e1    mov x1, x0
   98128:   9100b3e6    add x6, sp, #0x2c
   9812c:   aa1403e0    mov x0, x20
   98130:   52800087    mov w7, #0x4
   98134:   52802285    mov w5, #0x114
   98138:   52800004    mov w4, #0x0
   9813c:   12800be3    mov w3, #0xffffffa0
   98140:   52800802    mov w2, #0x40
   98144:   97ffa3b3    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   98148:   37fffd80    tbnz    w0, #31, 980f8 <CSMSC951xDevice::IsLinkUp()+0x18>
   9814c:   aa1303e0    mov x0, x19
   98150:   97ffff28    bl  97df0 <CSMSC951xDevice::PHYWaitNotBusy()>
   98154:   3607fd20    tbz w0, #0, 980f8 <CSMSC951xDevice::IsLinkUp()+0x18>
   98158:   aa1303e0    mov x0, x19
   9815c:   97ffc8fd    bl  8a550 <CUSBFunction::GetHost() const>
   98160:   aa0003e1    mov x1, x0
   98164:   aa1303e0    mov x0, x19
   98168:   aa0103f3    mov x19, x1
   9816c:   97ffc8ed    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   98170:   aa0003e1    mov x1, x0
   98174:   9100b3e6    add x6, sp, #0x2c
   98178:   aa1303e0    mov x0, x19
   9817c:   52800087    mov w7, #0x4
   98180:   52802305    mov w5, #0x118
   98184:   52800004    mov w4, #0x0
   98188:   12800bc3    mov w3, #0xffffffa1
   9818c:   128007e2    mov w2, #0xffffffc0
   98190:   97ffa3a0    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   98194:   7100101f    cmp w0, #0x4
   98198:   54fffb01    b.ne    980f8 <CSMSC951xDevice::IsLinkUp()+0x18>
   9819c:   b9402fe0    ldr w0, [sp, #44]
   981a0:   a94153f3    ldp x19, x20, [sp, #16]
   981a4:   a8c37bfd    ldp x29, x30, [sp], #48
   981a8:   d3420800    ubfx    x0, x0, #2, #1
   981ac:   d65f03c0    ret

00000000000981b0 <non-virtual thunk to CSMSC951xDevice::IsLinkUp()>:
   981b0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   981b4:   910003fd    mov x29, sp
   981b8:   a90153f3    stp x19, x20, [sp, #16]
   981bc:   d100a013    sub x19, x0, #0x28
   981c0:   aa1303e0    mov x0, x19
   981c4:   97ffff0b    bl  97df0 <CSMSC951xDevice::PHYWaitNotBusy()>
   981c8:   370000a0    tbnz    w0, #0, 981dc <non-virtual thunk to CSMSC951xDevice::IsLinkUp()+0x2c>
   981cc:   a94153f3    ldp x19, x20, [sp, #16]
   981d0:   52800000    mov w0, #0x0
   981d4:   a8c37bfd    ldp x29, x30, [sp], #48
   981d8:   d65f03c0    ret
   981dc:   52810821    mov w1, #0x841
   981e0:   aa1303e0    mov x0, x19
   981e4:   b9002fe1    str w1, [sp, #44]
   981e8:   97ffc8da    bl  8a550 <CUSBFunction::GetHost() const>
   981ec:   aa0003f4    mov x20, x0
   981f0:   aa1303e0    mov x0, x19
   981f4:   97ffc8cb    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   981f8:   aa0003e1    mov x1, x0
   981fc:   9100b3e6    add x6, sp, #0x2c
   98200:   aa1403e0    mov x0, x20
   98204:   52800087    mov w7, #0x4
   98208:   52802285    mov w5, #0x114
   9820c:   52800004    mov w4, #0x0
   98210:   12800be3    mov w3, #0xffffffa0
   98214:   52800802    mov w2, #0x40
   98218:   97ffa37e    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   9821c:   37fffd80    tbnz    w0, #31, 981cc <non-virtual thunk to CSMSC951xDevice::IsLinkUp()+0x1c>
   98220:   aa1303e0    mov x0, x19
   98224:   97fffef3    bl  97df0 <CSMSC951xDevice::PHYWaitNotBusy()>
   98228:   3607fd20    tbz w0, #0, 981cc <non-virtual thunk to CSMSC951xDevice::IsLinkUp()+0x1c>
   9822c:   aa1303e0    mov x0, x19
   98230:   97ffc8c8    bl  8a550 <CUSBFunction::GetHost() const>
   98234:   aa0003e1    mov x1, x0
   98238:   aa1303e0    mov x0, x19
   9823c:   aa0103f3    mov x19, x1
   98240:   97ffc8b8    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   98244:   aa0003e1    mov x1, x0
   98248:   9100b3e6    add x6, sp, #0x2c
   9824c:   aa1303e0    mov x0, x19
   98250:   52800087    mov w7, #0x4
   98254:   52802305    mov w5, #0x118
   98258:   52800004    mov w4, #0x0
   9825c:   12800bc3    mov w3, #0xffffffa1
   98260:   128007e2    mov w2, #0xffffffc0
   98264:   97ffa36b    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   98268:   7100101f    cmp w0, #0x4
   9826c:   54fffb01    b.ne    981cc <non-virtual thunk to CSMSC951xDevice::IsLinkUp()+0x1c>
   98270:   b9402fe0    ldr w0, [sp, #44]
   98274:   a94153f3    ldp x19, x20, [sp, #16]
   98278:   a8c37bfd    ldp x29, x30, [sp], #48
   9827c:   d3420800    ubfx    x0, x0, #2, #1
   98280:   d65f03c0    ret
   98284:   d503201f    nop
   98288:   d503201f    nop
   9828c:   d503201f    nop

0000000000098290 <CSMSC951xDevice::GetLinkSpeed()>:
   98290:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   98294:   910003fd    mov x29, sp
   98298:   a90153f3    stp x19, x20, [sp, #16]
   9829c:   aa0003f3    mov x19, x0
   982a0:   97fffed4    bl  97df0 <CSMSC951xDevice::PHYWaitNotBusy()>
   982a4:   370000a0    tbnz    w0, #0, 982b8 <CSMSC951xDevice::GetLinkSpeed()+0x28>
   982a8:   528000c0    mov w0, #0x6
   982ac:   a94153f3    ldp x19, x20, [sp, #16]
   982b0:   a8c37bfd    ldp x29, x30, [sp], #48
   982b4:   d65f03c0    ret
   982b8:   5281f821    mov w1, #0xfc1
   982bc:   aa1303e0    mov x0, x19
   982c0:   b9002fe1    str w1, [sp, #44]
   982c4:   97ffc8a3    bl  8a550 <CUSBFunction::GetHost() const>
   982c8:   aa0003f4    mov x20, x0
   982cc:   aa1303e0    mov x0, x19
   982d0:   97ffc894    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   982d4:   aa0003e1    mov x1, x0
   982d8:   9100b3e6    add x6, sp, #0x2c
   982dc:   aa1403e0    mov x0, x20
   982e0:   52800087    mov w7, #0x4
   982e4:   52802285    mov w5, #0x114
   982e8:   52800004    mov w4, #0x0
   982ec:   12800be3    mov w3, #0xffffffa0
   982f0:   52800802    mov w2, #0x40
   982f4:   97ffa347    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   982f8:   37fffd80    tbnz    w0, #31, 982a8 <CSMSC951xDevice::GetLinkSpeed()+0x18>
   982fc:   aa1303e0    mov x0, x19
   98300:   97fffebc    bl  97df0 <CSMSC951xDevice::PHYWaitNotBusy()>
   98304:   3607fd20    tbz w0, #0, 982a8 <CSMSC951xDevice::GetLinkSpeed()+0x18>
   98308:   aa1303e0    mov x0, x19
   9830c:   97ffc891    bl  8a550 <CUSBFunction::GetHost() const>
   98310:   aa0003e1    mov x1, x0
   98314:   aa1303e0    mov x0, x19
   98318:   aa0103f3    mov x19, x1
   9831c:   97ffc881    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   98320:   aa0003e1    mov x1, x0
   98324:   9100b3e6    add x6, sp, #0x2c
   98328:   aa1303e0    mov x0, x19
   9832c:   52800087    mov w7, #0x4
   98330:   52802305    mov w5, #0x118
   98334:   52800004    mov w4, #0x0
   98338:   12800bc3    mov w3, #0xffffffa1
   9833c:   128007e2    mov w2, #0xffffffc0
   98340:   97ffa334    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   98344:   7100101f    cmp w0, #0x4
   98348:   54fffb01    b.ne    982a8 <CSMSC951xDevice::GetLinkSpeed()+0x18>
   9834c:   79405be0    ldrh    w0, [sp, #44]
   98350:   3667fac0    tbz w0, #12, 982a8 <CSMSC951xDevice::GetLinkSpeed()+0x18>
   98354:   d3421001    ubfx    x1, x0, #2, #3
   98358:   7100143f    cmp w1, #0x5
   9835c:   54000220    b.eq    983a0 <CSMSC951xDevice::GetLinkSpeed()+0x110>
   98360:   54000148    b.hi    98388 <CSMSC951xDevice::GetLinkSpeed()+0xf8>
   98364:   7100043f    cmp w1, #0x1
   98368:   52800000    mov w0, #0x0
   9836c:   54fffa00    b.eq    982ac <CSMSC951xDevice::GetLinkSpeed()+0x1c>
   98370:   7100083f    cmp w1, #0x2
   98374:   52800040    mov w0, #0x2
   98378:   54fff981    b.ne    982a8 <CSMSC951xDevice::GetLinkSpeed()+0x18>
   9837c:   a94153f3    ldp x19, x20, [sp, #16]
   98380:   a8c37bfd    ldp x29, x30, [sp], #48
   98384:   d65f03c0    ret
   98388:   7100183f    cmp w1, #0x6
   9838c:   52800060    mov w0, #0x3
   98390:   54fff8c1    b.ne    982a8 <CSMSC951xDevice::GetLinkSpeed()+0x18>
   98394:   a94153f3    ldp x19, x20, [sp, #16]
   98398:   a8c37bfd    ldp x29, x30, [sp], #48
   9839c:   d65f03c0    ret
   983a0:   a94153f3    ldp x19, x20, [sp, #16]
   983a4:   52800020    mov w0, #0x1
   983a8:   a8c37bfd    ldp x29, x30, [sp], #48
   983ac:   d65f03c0    ret

00000000000983b0 <non-virtual thunk to CSMSC951xDevice::GetLinkSpeed()>:
   983b0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   983b4:   910003fd    mov x29, sp
   983b8:   a90153f3    stp x19, x20, [sp, #16]
   983bc:   d100a013    sub x19, x0, #0x28
   983c0:   aa1303e0    mov x0, x19
   983c4:   97fffe8b    bl  97df0 <CSMSC951xDevice::PHYWaitNotBusy()>
   983c8:   370000a0    tbnz    w0, #0, 983dc <non-virtual thunk to CSMSC951xDevice::GetLinkSpeed()+0x2c>
   983cc:   528000c0    mov w0, #0x6
   983d0:   a94153f3    ldp x19, x20, [sp, #16]
   983d4:   a8c37bfd    ldp x29, x30, [sp], #48
   983d8:   d65f03c0    ret
   983dc:   5281f821    mov w1, #0xfc1
   983e0:   aa1303e0    mov x0, x19
   983e4:   b9002fe1    str w1, [sp, #44]
   983e8:   97ffc85a    bl  8a550 <CUSBFunction::GetHost() const>
   983ec:   aa0003f4    mov x20, x0
   983f0:   aa1303e0    mov x0, x19
   983f4:   97ffc84b    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   983f8:   aa0003e1    mov x1, x0
   983fc:   9100b3e6    add x6, sp, #0x2c
   98400:   aa1403e0    mov x0, x20
   98404:   52800087    mov w7, #0x4
   98408:   52802285    mov w5, #0x114
   9840c:   52800004    mov w4, #0x0
   98410:   12800be3    mov w3, #0xffffffa0
   98414:   52800802    mov w2, #0x40
   98418:   97ffa2fe    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   9841c:   37fffd80    tbnz    w0, #31, 983cc <non-virtual thunk to CSMSC951xDevice::GetLinkSpeed()+0x1c>
   98420:   aa1303e0    mov x0, x19
   98424:   97fffe73    bl  97df0 <CSMSC951xDevice::PHYWaitNotBusy()>
   98428:   3607fd20    tbz w0, #0, 983cc <non-virtual thunk to CSMSC951xDevice::GetLinkSpeed()+0x1c>
   9842c:   aa1303e0    mov x0, x19
   98430:   97ffc848    bl  8a550 <CUSBFunction::GetHost() const>
   98434:   aa0003e1    mov x1, x0
   98438:   aa1303e0    mov x0, x19
   9843c:   aa0103f3    mov x19, x1
   98440:   97ffc838    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   98444:   aa0003e1    mov x1, x0
   98448:   9100b3e6    add x6, sp, #0x2c
   9844c:   aa1303e0    mov x0, x19
   98450:   52800087    mov w7, #0x4
   98454:   52802305    mov w5, #0x118
   98458:   52800004    mov w4, #0x0
   9845c:   12800bc3    mov w3, #0xffffffa1
   98460:   128007e2    mov w2, #0xffffffc0
   98464:   97ffa2eb    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   98468:   7100101f    cmp w0, #0x4
   9846c:   54fffb01    b.ne    983cc <non-virtual thunk to CSMSC951xDevice::GetLinkSpeed()+0x1c>
   98470:   79405be0    ldrh    w0, [sp, #44]
   98474:   3667fac0    tbz w0, #12, 983cc <non-virtual thunk to CSMSC951xDevice::GetLinkSpeed()+0x1c>
   98478:   d3421001    ubfx    x1, x0, #2, #3
   9847c:   7100143f    cmp w1, #0x5
   98480:   54000220    b.eq    984c4 <non-virtual thunk to CSMSC951xDevice::GetLinkSpeed()+0x114>
   98484:   54000148    b.hi    984ac <non-virtual thunk to CSMSC951xDevice::GetLinkSpeed()+0xfc>
   98488:   7100043f    cmp w1, #0x1
   9848c:   52800000    mov w0, #0x0
   98490:   54fffa00    b.eq    983d0 <non-virtual thunk to CSMSC951xDevice::GetLinkSpeed()+0x20>
   98494:   7100083f    cmp w1, #0x2
   98498:   52800040    mov w0, #0x2
   9849c:   54fff981    b.ne    983cc <non-virtual thunk to CSMSC951xDevice::GetLinkSpeed()+0x1c>
   984a0:   a94153f3    ldp x19, x20, [sp, #16]
   984a4:   a8c37bfd    ldp x29, x30, [sp], #48
   984a8:   d65f03c0    ret
   984ac:   7100183f    cmp w1, #0x6
   984b0:   52800060    mov w0, #0x3
   984b4:   54fff8c1    b.ne    983cc <non-virtual thunk to CSMSC951xDevice::GetLinkSpeed()+0x1c>
   984b8:   a94153f3    ldp x19, x20, [sp, #16]
   984bc:   a8c37bfd    ldp x29, x30, [sp], #48
   984c0:   d65f03c0    ret
   984c4:   a94153f3    ldp x19, x20, [sp, #16]
   984c8:   52800020    mov w0, #0x1
   984cc:   a8c37bfd    ldp x29, x30, [sp], #48
   984d0:   d65f03c0    ret
   984d4:   d503201f    nop
   984d8:   d503201f    nop
   984dc:   d503201f    nop

00000000000984e0 <CSMSC951xDevice::WriteReg(unsigned int, unsigned int)>:
   984e0:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   984e4:   910003fd    mov x29, sp
   984e8:   a90153f3    stp x19, x20, [sp, #16]
   984ec:   2a0103f4    mov w20, w1
   984f0:   f90013f5    str x21, [sp, #32]
   984f4:   aa0003f5    mov x21, x0
   984f8:   b9003fe2    str w2, [sp, #60]
   984fc:   97ffc815    bl  8a550 <CUSBFunction::GetHost() const>
   98500:   aa0003f3    mov x19, x0
   98504:   aa1503e0    mov x0, x21
   98508:   97ffc806    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   9850c:   aa0003e1    mov x1, x0
   98510:   2a1403e5    mov w5, w20
   98514:   9100f3e6    add x6, sp, #0x3c
   98518:   aa1303e0    mov x0, x19
   9851c:   52800087    mov w7, #0x4
   98520:   52800004    mov w4, #0x0
   98524:   12800be3    mov w3, #0xffffffa0
   98528:   52800802    mov w2, #0x40
   9852c:   97ffa2b9    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   98530:   2a2003e0    mvn w0, w0
   98534:   a94153f3    ldp x19, x20, [sp, #16]
   98538:   531f7c00    lsr w0, w0, #31
   9853c:   f94013f5    ldr x21, [sp, #32]
   98540:   a8c47bfd    ldp x29, x30, [sp], #64
   98544:   d65f03c0    ret
   98548:   d503201f    nop
   9854c:   d503201f    nop

0000000000098550 <CSMSC951xDevice::ReadReg(unsigned int, unsigned int*)>:
   98550:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   98554:   910003fd    mov x29, sp
   98558:   a90153f3    stp x19, x20, [sp, #16]
   9855c:   2a0103f4    mov w20, w1
   98560:   a9025bf5    stp x21, x22, [sp, #32]
   98564:   aa0203f5    mov x21, x2
   98568:   aa0003f6    mov x22, x0
   9856c:   97ffc7f9    bl  8a550 <CUSBFunction::GetHost() const>
   98570:   aa0003f3    mov x19, x0
   98574:   aa1603e0    mov x0, x22
   98578:   97ffc7ea    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   9857c:   aa0003e1    mov x1, x0
   98580:   aa1503e6    mov x6, x21
   98584:   2a1403e5    mov w5, w20
   98588:   aa1303e0    mov x0, x19
   9858c:   52800087    mov w7, #0x4
   98590:   52800004    mov w4, #0x0
   98594:   12800bc3    mov w3, #0xffffffa1
   98598:   128007e2    mov w2, #0xffffffc0
   9859c:   97ffa29d    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   985a0:   a94153f3    ldp x19, x20, [sp, #16]
   985a4:   7100101f    cmp w0, #0x4
   985a8:   1a9f17e0    cset    w0, eq
   985ac:   a9425bf5    ldp x21, x22, [sp, #32]
   985b0:   a8c37bfd    ldp x29, x30, [sp], #48
   985b4:   d65f03c0    ret
   985b8:   d503201f    nop
   985bc:   d503201f    nop

00000000000985c0 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>:
   985c0:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   985c4:   910003fd    mov x29, sp
   985c8:   a90153f3    stp x19, x20, [sp, #16]
   985cc:   2a0203f4    mov w20, w2
   985d0:   a9025bf5    stp x21, x22, [sp, #32]
   985d4:   aa0103f6    mov x22, x1
   985d8:   aa0003f5    mov x21, x0
   985dc:   97ffc7dd    bl  8a550 <CUSBFunction::GetHost() const>
   985e0:   aa0003f3    mov x19, x0
   985e4:   aa1503e0    mov x0, x21
   985e8:   97ffc7ce    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   985ec:   aa0003e1    mov x1, x0
   985f0:   9100f3e6    add x6, sp, #0x3c
   985f4:   aa1303e0    mov x0, x19
   985f8:   2a1403e5    mov w5, w20
   985fc:   52800087    mov w7, #0x4
   98600:   52800004    mov w4, #0x0
   98604:   12800bc3    mov w3, #0xffffffa1
   98608:   128007e2    mov w2, #0xffffffc0
   9860c:   97ffa281    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   98610:   7100101f    cmp w0, #0x4
   98614:   540001e1    b.ne    98650 <CSMSC951xDevice::DumpReg(char const*, unsigned int)+0x90>
   98618:   2a0003f3    mov w19, w0
   9861c:   94001bf9    bl  9f600 <CLogger::Get()>
   98620:   d00000c3    adrp    x3, b2000 <_etext+0x2f9c>
   98624:   b00000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   98628:   b9403fe4    ldr w4, [sp, #60]
   9862c:   aa1603e5    mov x5, x22
   98630:   2a1303e2    mov w2, w19
   98634:   9113a063    add x3, x3, #0x4e8
   98638:   9117c021    add x1, x1, #0x5f0
   9863c:   94001dd9    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   98640:   a94153f3    ldp x19, x20, [sp, #16]
   98644:   a9425bf5    ldp x21, x22, [sp, #32]
   98648:   a8c47bfd    ldp x29, x30, [sp], #64
   9864c:   d65f03c0    ret
   98650:   94001bec    bl  9f600 <CLogger::Get()>
   98654:   d00000c3    adrp    x3, b2000 <_etext+0x2f9c>
   98658:   b00000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9865c:   2a1403e4    mov w4, w20
   98660:   910f0063    add x3, x3, #0x3c0
   98664:   9117c021    add x1, x1, #0x5f0
   98668:   52800022    mov w2, #0x1
   9866c:   94001dcd    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   98670:   a94153f3    ldp x19, x20, [sp, #16]
   98674:   a9425bf5    ldp x21, x22, [sp, #32]
   98678:   a8c47bfd    ldp x29, x30, [sp], #64
   9867c:   d65f03c0    ret

0000000000098680 <CSMSC951xDevice::DumpRegs()>:
   98680:   a9be7bfd    stp x29, x30, [sp, #-32]!
   98684:   52800002    mov w2, #0x0
   98688:   910003fd    mov x29, sp
   9868c:   d00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   98690:   9113c021    add x1, x1, #0x4f0
   98694:   f9000bf3    str x19, [sp, #16]
   98698:   aa0003f3    mov x19, x0
   9869c:   97ffffc9    bl  985c0 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   986a0:   d00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   986a4:   aa1303e0    mov x0, x19
   986a8:   9113e021    add x1, x1, #0x4f8
   986ac:   52800102    mov w2, #0x8
   986b0:   97ffffc4    bl  985c0 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   986b4:   d00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   986b8:   aa1303e0    mov x0, x19
   986bc:   91140021    add x1, x1, #0x500
   986c0:   52800182    mov w2, #0xc
   986c4:   97ffffbf    bl  985c0 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   986c8:   d00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   986cc:   aa1303e0    mov x0, x19
   986d0:   91142021    add x1, x1, #0x508
   986d4:   52800202    mov w2, #0x10
   986d8:   97ffffba    bl  985c0 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   986dc:   d00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   986e0:   aa1303e0    mov x0, x19
   986e4:   91144021    add x1, x1, #0x510
   986e8:   52800282    mov w2, #0x14
   986ec:   97ffffb5    bl  985c0 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   986f0:   d00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   986f4:   aa1303e0    mov x0, x19
   986f8:   91146021    add x1, x1, #0x518
   986fc:   52800302    mov w2, #0x18
   98700:   97ffffb0    bl  985c0 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   98704:   d00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   98708:   aa1303e0    mov x0, x19
   9870c:   9114a021    add x1, x1, #0x528
   98710:   52800402    mov w2, #0x20
   98714:   97ffffab    bl  985c0 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   98718:   d00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9871c:   aa1303e0    mov x0, x19
   98720:   9114c021    add x1, x1, #0x530
   98724:   52800482    mov w2, #0x24
   98728:   97ffffa6    bl  985c0 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   9872c:   d00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   98730:   aa1303e0    mov x0, x19
   98734:   91150021    add x1, x1, #0x540
   98738:   52800502    mov w2, #0x28
   9873c:   97ffffa1    bl  985c0 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   98740:   d00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   98744:   aa1303e0    mov x0, x19
   98748:   91154021    add x1, x1, #0x550
   9874c:   52800582    mov w2, #0x2c
   98750:   97ffff9c    bl  985c0 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   98754:   d00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   98758:   aa1303e0    mov x0, x19
   9875c:   91156021    add x1, x1, #0x558
   98760:   52800702    mov w2, #0x38
   98764:   97ffff97    bl  985c0 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   98768:   d00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9876c:   aa1303e0    mov x0, x19
   98770:   9115a021    add x1, x1, #0x568
   98774:   52800d02    mov w2, #0x68
   98778:   97ffff92    bl  985c0 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   9877c:   d00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   98780:   aa1303e0    mov x0, x19
   98784:   9115e021    add x1, x1, #0x578
   98788:   52800d82    mov w2, #0x6c
   9878c:   97ffff8d    bl  985c0 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   98790:   d00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   98794:   aa1303e0    mov x0, x19
   98798:   91162021    add x1, x1, #0x588
   9879c:   52802002    mov w2, #0x100
   987a0:   97ffff88    bl  985c0 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   987a4:   d00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   987a8:   aa1303e0    mov x0, x19
   987ac:   91164021    add x1, x1, #0x590
   987b0:   52802082    mov w2, #0x104
   987b4:   97ffff83    bl  985c0 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   987b8:   d00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   987bc:   aa1303e0    mov x0, x19
   987c0:   91166021    add x1, x1, #0x598
   987c4:   52802102    mov w2, #0x108
   987c8:   97ffff7e    bl  985c0 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   987cc:   d00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   987d0:   aa1303e0    mov x0, x19
   987d4:   91168021    add x1, x1, #0x5a0
   987d8:   52802182    mov w2, #0x10c
   987dc:   97ffff79    bl  985c0 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   987e0:   d00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   987e4:   aa1303e0    mov x0, x19
   987e8:   9116a021    add x1, x1, #0x5a8
   987ec:   52802202    mov w2, #0x110
   987f0:   97ffff74    bl  985c0 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   987f4:   d00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   987f8:   aa1303e0    mov x0, x19
   987fc:   9116c021    add x1, x1, #0x5b0
   98800:   52802382    mov w2, #0x11c
   98804:   97ffff6f    bl  985c0 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   98808:   d00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9880c:   aa1303e0    mov x0, x19
   98810:   f9400bf3    ldr x19, [sp, #16]
   98814:   9116e021    add x1, x1, #0x5b8
   98818:   a8c27bfd    ldp x29, x30, [sp], #32
   9881c:   52802582    mov w2, #0x12c
   98820:   17ffff68    b   985c0 <CSMSC951xDevice::DumpReg(char const*, unsigned int)>
   98824:   d503201f    nop
   98828:   d503201f    nop
   9882c:   d503201f    nop

0000000000098830 <CSMSC951xDevice::Configure()>:
   98830:   a9b77bfd    stp x29, x30, [sp, #-144]!
   98834:   910003fd    mov x29, sp
   98838:   52800001    mov w1, #0x0
   9883c:   a90153f3    stp x19, x20, [sp, #16]
   98840:   aa0003f4    mov x20, x0
   98844:   910143e0    add x0, sp, #0x50
   98848:   940010c2    bl  9cb50 <CBcmPropertyTags::CBcmPropertyTags(bool)>
   9884c:   52800061    mov w1, #0x3
   98850:   72a00021    movk    w1, #0x1, lsl #16
   98854:   910163e2    add x2, sp, #0x58
   98858:   910143e0    add x0, sp, #0x50
   9885c:   52800004    mov w4, #0x0
   98860:   52800283    mov w3, #0x14
   98864:   9400111b    bl  9ccd0 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   98868:   36001520    tbz w0, #0, 98b0c <CSMSC951xDevice::Configure()+0x2dc>
   9886c:   a9025bf5    stp x21, x22, [sp, #32]
   98870:   91010296    add x22, x20, #0x40
   98874:   910193e1    add x1, sp, #0x64
   98878:   aa1603e0    mov x0, x22
   9887c:   b00000f5    adrp    x21, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   98880:   9117c2b5    add x21, x21, #0x5f0
   98884:   94003a93    bl  a72d0 <CMACAddress::Set(unsigned char const*)>
   98888:   9101c3e0    add x0, sp, #0x70
   9888c:   94002d11    bl  a3cd0 <CString::CString()>
   98890:   9101c3e1    add x1, sp, #0x70
   98894:   aa1603e0    mov x0, x22
   98898:   94003af2    bl  a7460 <CMACAddress::Format(CString*) const>
   9889c:   94001b59    bl  9f600 <CLogger::Get()>
   988a0:   aa0003f3    mov x19, x0
   988a4:   9101c3e0    add x0, sp, #0x70
   988a8:   94002d4e    bl  a3de0 <CString::operator char const*() const>
   988ac:   d00000c3    adrp    x3, b2000 <_etext+0x2f9c>
   988b0:   aa0003e4    mov x4, x0
   988b4:   aa1503e1    mov x1, x21
   988b8:   aa1303e0    mov x0, x19
   988bc:   9110e063    add x3, x3, #0x438
   988c0:   52800082    mov w2, #0x4
   988c4:   94001d37    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   988c8:   aa1403e0    mov x0, x20
   988cc:   97ffc6fd    bl  8a4c0 <CUSBFunction::GetNumEndpoints() const>
   988d0:   12001c00    and w0, w0, #0xff
   988d4:   71000c1f    cmp w0, #0x3
   988d8:   54000e21    b.ne    98a9c <CSMSC951xDevice::Configure()+0x26c>
   988dc:   f9001bf7    str x23, [sp, #48]
   988e0:   14000005    b   988f4 <CSMSC951xDevice::Configure()+0xc4>
   988e4:   39400e61    ldrb    w1, [x19, #3]
   988e8:   12001421    and w1, w1, #0x3f
   988ec:   7100083f    cmp w1, #0x2
   988f0:   54000f00    b.eq    98ad0 <CSMSC951xDevice::Configure()+0x2a0>
   988f4:   528000a1    mov w1, #0x5
   988f8:   aa1403e0    mov x0, x20
   988fc:   97ffc721    bl  8a580 <CUSBFunction::GetDescriptor(unsigned char)>
   98900:   aa0003f3    mov x19, x0
   98904:   b5ffff00    cbnz    x0, 988e4 <CSMSC951xDevice::Configure()+0xb4>
   98908:   f9401a80    ldr x0, [x20, #48]
   9890c:   b40012c0    cbz x0, 98b64 <CSMSC951xDevice::Configure()+0x334>
   98910:   f9401e80    ldr x0, [x20, #56]
   98914:   b4001280    cbz x0, 98b64 <CSMSC951xDevice::Configure()+0x334>
   98918:   aa1403e0    mov x0, x20
   9891c:   97ffc625    bl  8a1b0 <CUSBFunction::Configure()>
   98920:   12001c13    and w19, w0, #0xff
   98924:   36001100    tbz w0, #0, 98b44 <CSMSC951xDevice::Configure()+0x314>
   98928:   aa1603e0    mov x0, x22
   9892c:   910123e1    add x1, sp, #0x48
   98930:   94003a98    bl  a7390 <CMACAddress::CopyTo(unsigned char*) const>
   98934:   79409be1    ldrh    w1, [sp, #76]
   98938:   aa1403e0    mov x0, x20
   9893c:   b9404bf7    ldr w23, [sp, #72]
   98940:   b90047e1    str w1, [sp, #68]
   98944:   97ffc703    bl  8a550 <CUSBFunction::GetHost() const>
   98948:   aa0003f6    mov x22, x0
   9894c:   aa1403e0    mov x0, x20
   98950:   97ffc6f4    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   98954:   aa0003e1    mov x1, x0
   98958:   910113e6    add x6, sp, #0x44
   9895c:   aa1603e0    mov x0, x22
   98960:   52800087    mov w7, #0x4
   98964:   52802085    mov w5, #0x104
   98968:   52800004    mov w4, #0x0
   9896c:   12800be3    mov w3, #0xffffffa0
   98970:   52800802    mov w2, #0x40
   98974:   97ffa1a7    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   98978:   37f81180    tbnz    w0, #31, 98ba8 <CSMSC951xDevice::Configure()+0x378>
   9897c:   aa1403e0    mov x0, x20
   98980:   b90047f7    str w23, [sp, #68]
   98984:   97ffc6f3    bl  8a550 <CUSBFunction::GetHost() const>
   98988:   aa0003f6    mov x22, x0
   9898c:   aa1403e0    mov x0, x20
   98990:   97ffc6e4    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   98994:   aa0003e1    mov x1, x0
   98998:   910113e6    add x6, sp, #0x44
   9899c:   aa1603e0    mov x0, x22
   989a0:   52800087    mov w7, #0x4
   989a4:   52802105    mov w5, #0x108
   989a8:   52800004    mov w4, #0x0
   989ac:   12800be3    mov w3, #0xffffffa0
   989b0:   52800802    mov w2, #0x40
   989b4:   97ffa197    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   989b8:   37f80f80    tbnz    w0, #31, 98ba8 <CSMSC951xDevice::Configure()+0x378>
   989bc:   52a02221    mov w1, #0x1110000
   989c0:   aa1403e0    mov x0, x20
   989c4:   b90047e1    str w1, [sp, #68]
   989c8:   97ffc6e2    bl  8a550 <CUSBFunction::GetHost() const>
   989cc:   aa0003f6    mov x22, x0
   989d0:   aa1403e0    mov x0, x20
   989d4:   97ffc6d3    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   989d8:   aa0003e1    mov x1, x0
   989dc:   910113e6    add x6, sp, #0x44
   989e0:   aa1603e0    mov x0, x22
   989e4:   52800087    mov w7, #0x4
   989e8:   52800485    mov w5, #0x24
   989ec:   52800004    mov w4, #0x0
   989f0:   12800be3    mov w3, #0xffffffa0
   989f4:   52800802    mov w2, #0x40
   989f8:   97ffa186    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   989fc:   37f80e60    tbnz    w0, #31, 98bc8 <CSMSC951xDevice::Configure()+0x398>
   98a00:   52800181    mov w1, #0xc
   98a04:   72a01001    movk    w1, #0x80, lsl #16
   98a08:   aa1403e0    mov x0, x20
   98a0c:   b90047e1    str w1, [sp, #68]
   98a10:   97ffc6d0    bl  8a550 <CUSBFunction::GetHost() const>
   98a14:   aa0003f6    mov x22, x0
   98a18:   aa1403e0    mov x0, x20
   98a1c:   97ffc6c1    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   98a20:   aa0003e1    mov x1, x0
   98a24:   910113e6    add x6, sp, #0x44
   98a28:   aa1603e0    mov x0, x22
   98a2c:   52800087    mov w7, #0x4
   98a30:   52802005    mov w5, #0x100
   98a34:   52800004    mov w4, #0x0
   98a38:   12800be3    mov w3, #0xffffffa0
   98a3c:   52800802    mov w2, #0x40
   98a40:   97ffa174    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   98a44:   37f80c20    tbnz    w0, #31, 98bc8 <CSMSC951xDevice::Configure()+0x398>
   98a48:   52800097    mov w23, #0x4
   98a4c:   aa1403e0    mov x0, x20
   98a50:   b90047f7    str w23, [sp, #68]
   98a54:   97ffc6bf    bl  8a550 <CUSBFunction::GetHost() const>
   98a58:   aa0003f6    mov x22, x0
   98a5c:   aa1403e0    mov x0, x20
   98a60:   97ffc6b0    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   98a64:   aa0003e1    mov x1, x0
   98a68:   2a1703e7    mov w7, w23
   98a6c:   910113e6    add x6, sp, #0x44
   98a70:   aa1603e0    mov x0, x22
   98a74:   52800205    mov w5, #0x10
   98a78:   52800004    mov w4, #0x0
   98a7c:   12800be3    mov w3, #0xffffffa0
   98a80:   52800802    mov w2, #0x40
   98a84:   97ffa163    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   98a88:   37f80a00    tbnz    w0, #31, 98bc8 <CSMSC951xDevice::Configure()+0x398>
   98a8c:   9100a280    add x0, x20, #0x28
   98a90:   94003a94    bl  a74e0 <CNetDevice::AddNetDevice()>
   98a94:   f9401bf7    ldr x23, [sp, #48]
   98a98:   14000005    b   98aac <CSMSC951xDevice::Configure()+0x27c>
   98a9c:   aa1503e1    mov x1, x21
   98aa0:   aa1403e0    mov x0, x20
   98aa4:   97ffc6c3    bl  8a5b0 <CUSBFunction::ConfigurationError(char const*) const>
   98aa8:   52800013    mov w19, #0x0
   98aac:   9101c3e0    add x0, sp, #0x70
   98ab0:   94002c4c    bl  a3be0 <CString::~CString()>
   98ab4:   910143e0    add x0, sp, #0x50
   98ab8:   a9425bf5    ldp x21, x22, [sp, #32]
   98abc:   94001029    bl  9cb60 <CBcmPropertyTags::~CBcmPropertyTags()>
   98ac0:   2a1303e0    mov w0, w19
   98ac4:   a94153f3    ldp x19, x20, [sp, #16]
   98ac8:   a8c97bfd    ldp x29, x30, [sp], #144
   98acc:   d65f03c0    ret
   98ad0:   39c00a61    ldrsb   w1, [x19, #2]
   98ad4:   d2800400    mov x0, #0x20
   98ad8:   37f80501    tbnz    w1, #31, 98b78 <CSMSC951xDevice::Configure()+0x348>
   98adc:   f9401e81    ldr x1, [x20, #56]
   98ae0:   b5000421    cbnz    x1, 98b64 <CSMSC951xDevice::Configure()+0x334>
   98ae4:   94003b37    bl  a77c0 <operator new(unsigned long)>
   98ae8:   aa0003f7    mov x23, x0
   98aec:   aa1403e0    mov x0, x20
   98af0:   97ffc680    bl  8a4f0 <CUSBFunction::GetDevice() const>
   98af4:   aa0003e1    mov x1, x0
   98af8:   aa1303e2    mov x2, x19
   98afc:   aa1703e0    mov x0, x23
   98b00:   97ffc4b4    bl  89dd0 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   98b04:   f9001e97    str x23, [x20, #56]
   98b08:   17ffff7b    b   988f4 <CSMSC951xDevice::Configure()+0xc4>
   98b0c:   12001c13    and w19, w0, #0xff
   98b10:   94001abc    bl  9f600 <CLogger::Get()>
   98b14:   d00000c3    adrp    x3, b2000 <_etext+0x2f9c>
   98b18:   b00000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   98b1c:   91170063    add x3, x3, #0x5c0
   98b20:   9117c021    add x1, x1, #0x5f0
   98b24:   52800022    mov w2, #0x1
   98b28:   94001c9e    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   98b2c:   910143e0    add x0, sp, #0x50
   98b30:   9400100c    bl  9cb60 <CBcmPropertyTags::~CBcmPropertyTags()>
   98b34:   2a1303e0    mov w0, w19
   98b38:   a94153f3    ldp x19, x20, [sp, #16]
   98b3c:   a8c97bfd    ldp x29, x30, [sp], #144
   98b40:   d65f03c0    ret
   98b44:   94001aaf    bl  9f600 <CLogger::Get()>
   98b48:   aa1503e1    mov x1, x21
   98b4c:   f00000a3    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   98b50:   9119e063    add x3, x3, #0x678
   98b54:   52800022    mov w2, #0x1
   98b58:   94001c92    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   98b5c:   f9401bf7    ldr x23, [sp, #48]
   98b60:   17ffffd2    b   98aa8 <CSMSC951xDevice::Configure()+0x278>
   98b64:   aa1503e1    mov x1, x21
   98b68:   aa1403e0    mov x0, x20
   98b6c:   97ffc691    bl  8a5b0 <CUSBFunction::ConfigurationError(char const*) const>
   98b70:   f9401bf7    ldr x23, [sp, #48]
   98b74:   17ffffcd    b   98aa8 <CSMSC951xDevice::Configure()+0x278>
   98b78:   f9401a81    ldr x1, [x20, #48]
   98b7c:   b5ffff41    cbnz    x1, 98b64 <CSMSC951xDevice::Configure()+0x334>
   98b80:   94003b10    bl  a77c0 <operator new(unsigned long)>
   98b84:   aa0003f7    mov x23, x0
   98b88:   aa1403e0    mov x0, x20
   98b8c:   97ffc659    bl  8a4f0 <CUSBFunction::GetDevice() const>
   98b90:   aa0003e1    mov x1, x0
   98b94:   aa1303e2    mov x2, x19
   98b98:   aa1703e0    mov x0, x23
   98b9c:   97ffc48d    bl  89dd0 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   98ba0:   f9001a97    str x23, [x20, #48]
   98ba4:   17ffff54    b   988f4 <CSMSC951xDevice::Configure()+0xc4>
   98ba8:   94001a96    bl  9f600 <CLogger::Get()>
   98bac:   aa1503e1    mov x1, x21
   98bb0:   d00000c3    adrp    x3, b2000 <_etext+0x2f9c>
   98bb4:   91176063    add x3, x3, #0x5d8
   98bb8:   52800022    mov w2, #0x1
   98bbc:   94001c79    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   98bc0:   f9401bf7    ldr x23, [sp, #48]
   98bc4:   17ffffb9    b   98aa8 <CSMSC951xDevice::Configure()+0x278>
   98bc8:   94001a8e    bl  9f600 <CLogger::Get()>
   98bcc:   aa1503e1    mov x1, x21
   98bd0:   d00000c3    adrp    x3, b2000 <_etext+0x2f9c>
   98bd4:   9117c063    add x3, x3, #0x5f0
   98bd8:   52800022    mov w2, #0x1
   98bdc:   94001c71    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   98be0:   f9401bf7    ldr x23, [sp, #48]
   98be4:   17ffffb1    b   98aa8 <CSMSC951xDevice::Configure()+0x278>
    ...

0000000000098bf0 <CUSBBluetoothDevice::~CUSBBluetoothDevice()>:
   98bf0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   98bf4:   910003fd    mov x29, sp
   98bf8:   b00000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   98bfc:   91184021    add x1, x1, #0x610
   98c00:   a90153f3    stp x19, x20, [sp, #16]
   98c04:   aa0003f3    mov x19, x0
   98c08:   b9405000    ldr w0, [x0, #80]
   98c0c:   f9000261    str x1, [x19]
   98c10:   f900267f    str xzr, [x19, #72]
   98c14:   35000420    cbnz    w0, 98c98 <CUSBBluetoothDevice::~CUSBBluetoothDevice()+0xa8>
   98c18:   f9402260    ldr x0, [x19, #64]
   98c1c:   b4000040    cbz x0, 98c24 <CUSBBluetoothDevice::~CUSBBluetoothDevice()+0x34>
   98c20:   94003b04    bl  a7830 <operator delete[](void*)>
   98c24:   f9401e74    ldr x20, [x19, #56]
   98c28:   f900227f    str xzr, [x19, #64]
   98c2c:   b40000d4    cbz x20, 98c44 <CUSBBluetoothDevice::~CUSBBluetoothDevice()+0x54>
   98c30:   aa1403e0    mov x0, x20
   98c34:   97ffc4d3    bl  89f80 <CUSBEndpoint::~CUSBEndpoint()>
   98c38:   aa1403e0    mov x0, x20
   98c3c:   d2800401    mov x1, #0x20
   98c40:   94003b08    bl  a7860 <operator delete(void*, unsigned long)>
   98c44:   f9401a74    ldr x20, [x19, #48]
   98c48:   f9001e7f    str xzr, [x19, #56]
   98c4c:   b40000d4    cbz x20, 98c64 <CUSBBluetoothDevice::~CUSBBluetoothDevice()+0x74>
   98c50:   aa1403e0    mov x0, x20
   98c54:   97ffc4cb    bl  89f80 <CUSBEndpoint::~CUSBEndpoint()>
   98c58:   aa1403e0    mov x0, x20
   98c5c:   d2800401    mov x1, #0x20
   98c60:   94003b00    bl  a7860 <operator delete(void*, unsigned long)>
   98c64:   f9401674    ldr x20, [x19, #40]
   98c68:   f9001a7f    str xzr, [x19, #48]
   98c6c:   b40000d4    cbz x20, 98c84 <CUSBBluetoothDevice::~CUSBBluetoothDevice()+0x94>
   98c70:   aa1403e0    mov x0, x20
   98c74:   97ffc4c3    bl  89f80 <CUSBEndpoint::~CUSBEndpoint()>
   98c78:   aa1403e0    mov x0, x20
   98c7c:   d2800401    mov x1, #0x20
   98c80:   94003af8    bl  a7860 <operator delete(void*, unsigned long)>
   98c84:   aa1303e0    mov x0, x19
   98c88:   f900167f    str xzr, [x19, #40]
   98c8c:   a94153f3    ldp x19, x20, [sp, #16]
   98c90:   a8c27bfd    ldp x29, x30, [sp], #32
   98c94:   17ffc50f    b   8a0d0 <CUSBFunction::~CUSBFunction()>
   98c98:   94001372    bl  9da60 <CDeviceNameService::Get()>
   98c9c:   b9405262    ldr w2, [x19, #80]
   98ca0:   b00000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   98ca4:   52800003    mov w3, #0x0
   98ca8:   9119c021    add x1, x1, #0x670
   98cac:   94001399    bl  9db10 <CDeviceNameService::RemoveDevice(char const*, unsigned int, bool)>
   98cb0:   b9405261    ldr w1, [x19, #80]
   98cb4:   d0000100    adrp    x0, ba000 <font_data+0x1080>
   98cb8:   9123c000    add x0, x0, #0x8f0
   98cbc:   94003c99    bl  a7f20 <CNumberPool::FreeNumber(unsigned int)>
   98cc0:   17ffffd6    b   98c18 <CUSBBluetoothDevice::~CUSBBluetoothDevice()+0x28>
   98cc4:   d503201f    nop
   98cc8:   d503201f    nop
   98ccc:   d503201f    nop

0000000000098cd0 <CUSBBluetoothDevice::~CUSBBluetoothDevice()>:
   98cd0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   98cd4:   910003fd    mov x29, sp
   98cd8:   f9000bf3    str x19, [sp, #16]
   98cdc:   aa0003f3    mov x19, x0
   98ce0:   97ffffc4    bl  98bf0 <CUSBBluetoothDevice::~CUSBBluetoothDevice()>
   98ce4:   aa1303e0    mov x0, x19
   98ce8:   f9400bf3    ldr x19, [sp, #16]
   98cec:   d2800b01    mov x1, #0x58
   98cf0:   a8c27bfd    ldp x29, x30, [sp], #32
   98cf4:   14003adb    b   a7860 <operator delete(void*, unsigned long)>
   98cf8:   d503201f    nop
   98cfc:   d503201f    nop

0000000000098d00 <CUSBBluetoothDevice::CUSBBluetoothDevice(CUSBFunction*)>:
   98d00:   a9be7bfd    stp x29, x30, [sp, #-32]!
   98d04:   910003fd    mov x29, sp
   98d08:   f9000bf3    str x19, [sp, #16]
   98d0c:   aa0003f3    mov x19, x0
   98d10:   97ffc594    bl  8a360 <CUSBFunction::CUSBFunction(CUSBFunction*)>
   98d14:   b00000e0    adrp    x0, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   98d18:   91184000    add x0, x0, #0x610
   98d1c:   a902fe7f    stp xzr, xzr, [x19, #40]
   98d20:   f9000260    str x0, [x19]
   98d24:   a903fe7f    stp xzr, xzr, [x19, #56]
   98d28:   f900267f    str xzr, [x19, #72]
   98d2c:   b900527f    str wzr, [x19, #80]
   98d30:   f9400bf3    ldr x19, [sp, #16]
   98d34:   a8c27bfd    ldp x29, x30, [sp], #32
   98d38:   d65f03c0    ret
   98d3c:   d503201f    nop

0000000000098d40 <CUSBBluetoothDevice::SendHCICommand(void const*, unsigned int)>:
   98d40:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   98d44:   910003fd    mov x29, sp
   98d48:   a90153f3    stp x19, x20, [sp, #16]
   98d4c:   aa0103f4    mov x20, x1
   98d50:   a9025bf5    stp x21, x22, [sp, #32]
   98d54:   2a0203f5    mov w21, w2
   98d58:   aa0003f6    mov x22, x0
   98d5c:   97ffc5fd    bl  8a550 <CUSBFunction::GetHost() const>
   98d60:   aa0003f3    mov x19, x0
   98d64:   aa1603e0    mov x0, x22
   98d68:   97ffc5ee    bl  8a520 <CUSBFunction::GetEndpoint0() const>
   98d6c:   aa0003e1    mov x1, x0
   98d70:   2a1503e7    mov w7, w21
   98d74:   aa1403e6    mov x6, x20
   98d78:   aa1303e0    mov x0, x19
   98d7c:   52800005    mov w5, #0x0
   98d80:   52800004    mov w4, #0x0
   98d84:   52800003    mov w3, #0x0
   98d88:   52800402    mov w2, #0x20
   98d8c:   97ffa0a1    bl  81010 <CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)>
   98d90:   2a2003e0    mvn w0, w0
   98d94:   a94153f3    ldp x19, x20, [sp, #16]
   98d98:   531f7c00    lsr w0, w0, #31
   98d9c:   a9425bf5    ldp x21, x22, [sp, #32]
   98da0:   a8c37bfd    ldp x29, x30, [sp], #48
   98da4:   d65f03c0    ret
   98da8:   d503201f    nop
   98dac:   d503201f    nop

0000000000098db0 <CUSBBluetoothDevice::StartRequest()>:
   98db0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   98db4:   910003fd    mov x29, sp
   98db8:   a90153f3    stp x19, x20, [sp, #16]
   98dbc:   aa0003f3    mov x19, x0
   98dc0:   f9401400    ldr x0, [x0, #40]
   98dc4:   a9025bf5    stp x21, x22, [sp, #32]
   98dc8:   b4000420    cbz x0, 98e4c <CUSBBluetoothDevice::StartRequest()+0x9c>
   98dcc:   f9402260    ldr x0, [x19, #64]
   98dd0:   b40004a0    cbz x0, 98e64 <CUSBBluetoothDevice::StartRequest()+0xb4>
   98dd4:   d2801200    mov x0, #0x90
   98dd8:   97ffa412    bl  81e20 <CUSBRequest::operator new(unsigned long)>
   98ddc:   f9401675    ldr x21, [x19, #40]
   98de0:   aa0003f4    mov x20, x0
   98de4:   f9402276    ldr x22, [x19, #64]
   98de8:   aa1503e0    mov x0, x21
   98dec:   97ffc49d    bl  8a060 <CUSBEndpoint::GetMaxPacketSize() const>
   98df0:   d2800004    mov x4, #0x0
   98df4:   aa1603e2    mov x2, x22
   98df8:   aa1503e1    mov x1, x21
   98dfc:   2a0003e3    mov w3, w0
   98e00:   aa1403e0    mov x0, x20
   98e04:   97ffa31f    bl  81a80 <CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)>
   98e08:   90000001    adrp    x1, 98000 <CSMSC951xDevice::PHYRead(unsigned char, unsigned short*)+0x40>
   98e0c:   aa1303e3    mov x3, x19
   98e10:   aa1403e0    mov x0, x20
   98e14:   913f8021    add x1, x1, #0xfe0
   98e18:   d2800002    mov x2, #0x0
   98e1c:   97ffa3dd    bl  81d90 <CUSBRequest::SetCompletionRoutine(void (*)(CUSBRequest*, void*, void*), void*, void*)>
   98e20:   aa1303e0    mov x0, x19
   98e24:   97ffc5cb    bl  8a550 <CUSBFunction::GetHost() const>
   98e28:   f9400003    ldr x3, [x0]
   98e2c:   aa1403e1    mov x1, x20
   98e30:   52800002    mov w2, #0x0
   98e34:   a94153f3    ldp x19, x20, [sp, #16]
   98e38:   a9425bf5    ldp x21, x22, [sp, #32]
   98e3c:   a8c37bfd    ldp x29, x30, [sp], #48
   98e40:   f9401463    ldr x3, [x3, #40]
   98e44:   aa0303f0    mov x16, x3
   98e48:   d61f0200    br  x16
   98e4c:   d00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   98e50:   d00000c0    adrp    x0, b2000 <_etext+0x2f9c>
   98e54:   91182021    add x1, x1, #0x608
   98e58:   91188000    add x0, x0, #0x620
   98e5c:   52801582    mov w2, #0xac
   98e60:   94000f18    bl  9cac0 <assertion_failed>
   98e64:   d00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   98e68:   d00000c0    adrp    x0, b2000 <_etext+0x2f9c>
   98e6c:   91182021    add x1, x1, #0x608
   98e70:   91190000    add x0, x0, #0x640
   98e74:   528015a2    mov w2, #0xad
   98e78:   94000f12    bl  9cac0 <assertion_failed>
   98e7c:   d503201f    nop

0000000000098e80 <CUSBBluetoothDevice::RegisterHCIEventHandler(void (*)(void const*, unsigned int))>:
   98e80:   f9002401    str x1, [x0, #72]
   98e84:   b4000041    cbz x1, 98e8c <CUSBBluetoothDevice::RegisterHCIEventHandler(void (*)(void const*, unsigned int))+0xc>
   98e88:   17ffffca    b   98db0 <CUSBBluetoothDevice::StartRequest()>
   98e8c:   d00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   98e90:   d00000c0    adrp    x0, b2000 <_etext+0x2f9c>
   98e94:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   98e98:   91182021    add x1, x1, #0x608
   98e9c:   910003fd    mov x29, sp
   98ea0:   91196000    add x0, x0, #0x658
   98ea4:   528014a2    mov w2, #0xa5
   98ea8:   94000f06    bl  9cac0 <assertion_failed>
   98eac:   d503201f    nop

0000000000098eb0 <CUSBBluetoothDevice::CompletionRoutine(CUSBRequest*)>:
   98eb0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   98eb4:   910003fd    mov x29, sp
   98eb8:   a90153f3    stp x19, x20, [sp, #16]
   98ebc:   b4000621    cbz x1, 98f80 <CUSBBluetoothDevice::CompletionRoutine(CUSBRequest*)+0xd0>
   98ec0:   aa0003f4    mov x20, x0
   98ec4:   aa0103e0    mov x0, x1
   98ec8:   aa0103f3    mov x19, x1
   98ecc:   97ffa329    bl  81b70 <CUSBRequest::GetStatus() const>
   98ed0:   340002e0    cbz w0, 98f2c <CUSBBluetoothDevice::CompletionRoutine(CUSBRequest*)+0x7c>
   98ed4:   a9025bf5    stp x21, x22, [sp, #32]
   98ed8:   f9402695    ldr x21, [x20, #72]
   98edc:   b4000775    cbz x21, 98fc8 <CUSBBluetoothDevice::CompletionRoutine(CUSBRequest*)+0x118>
   98ee0:   f9402296    ldr x22, [x20, #64]
   98ee4:   b4000436    cbz x22, 98f68 <CUSBBluetoothDevice::CompletionRoutine(CUSBRequest*)+0xb8>
   98ee8:   aa1303e0    mov x0, x19
   98eec:   97ffa325    bl  81b80 <CUSBRequest::GetResultLength() const>
   98ef0:   2a0003e1    mov w1, w0
   98ef4:   aa1603e0    mov x0, x22
   98ef8:   d63f02a0    blr x21
   98efc:   aa1303e0    mov x0, x19
   98f00:   97ffa300    bl  81b00 <CUSBRequest::~CUSBRequest()>
   98f04:   aa1303e0    mov x0, x19
   98f08:   d2801201    mov x1, #0x90
   98f0c:   97ffa3dd    bl  81e80 <CUSBRequest::operator delete(void*, unsigned long)>
   98f10:   aa1403e0    mov x0, x20
   98f14:   97ffffa7    bl  98db0 <CUSBBluetoothDevice::StartRequest()>
   98f18:   36000420    tbz w0, #0, 98f9c <CUSBBluetoothDevice::CompletionRoutine(CUSBRequest*)+0xec>
   98f1c:   a94153f3    ldp x19, x20, [sp, #16]
   98f20:   a9425bf5    ldp x21, x22, [sp, #32]
   98f24:   a8c37bfd    ldp x29, x30, [sp], #48
   98f28:   d65f03c0    ret
   98f2c:   940019b5    bl  9f600 <CLogger::Get()>
   98f30:   b00000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   98f34:   9119c021    add x1, x1, #0x670
   98f38:   d00000c3    adrp    x3, b2000 <_etext+0x2f9c>
   98f3c:   91002021    add x1, x1, #0x8
   98f40:   9119c063    add x3, x3, #0x670
   98f44:   52800042    mov w2, #0x2
   98f48:   94001b96    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   98f4c:   aa1303e0    mov x0, x19
   98f50:   97ffa2ec    bl  81b00 <CUSBRequest::~CUSBRequest()>
   98f54:   aa1303e0    mov x0, x19
   98f58:   a94153f3    ldp x19, x20, [sp, #16]
   98f5c:   d2801201    mov x1, #0x90
   98f60:   a8c37bfd    ldp x29, x30, [sp], #48
   98f64:   17ffa3c7    b   81e80 <CUSBRequest::operator delete(void*, unsigned long)>
   98f68:   d00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   98f6c:   d00000c0    adrp    x0, b2000 <_etext+0x2f9c>
   98f70:   91182021    add x1, x1, #0x608
   98f74:   91190000    add x0, x0, #0x640
   98f78:   52801822    mov w2, #0xc1
   98f7c:   94000ed1    bl  9cac0 <assertion_failed>
   98f80:   d00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   98f84:   f00000a0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   98f88:   a9025bf5    stp x21, x22, [sp, #32]
   98f8c:   91182021    add x1, x1, #0x608
   98f90:   9111c000    add x0, x0, #0x470
   98f94:   52801742    mov w2, #0xba
   98f98:   94000eca    bl  9cac0 <assertion_failed>
   98f9c:   94001999    bl  9f600 <CLogger::Get()>
   98fa0:   b00000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   98fa4:   9119c021    add x1, x1, #0x670
   98fa8:   a94153f3    ldp x19, x20, [sp, #16]
   98fac:   f00000a3    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   98fb0:   91002021    add x1, x1, #0x8
   98fb4:   91206063    add x3, x3, #0x818
   98fb8:   52800022    mov w2, #0x1
   98fbc:   a9425bf5    ldp x21, x22, [sp, #32]
   98fc0:   a8c37bfd    ldp x29, x30, [sp], #48
   98fc4:   14001b77    b   9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   98fc8:   d00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   98fcc:   d00000c0    adrp    x0, b2000 <_etext+0x2f9c>
   98fd0:   91182021    add x1, x1, #0x608
   98fd4:   91196000    add x0, x0, #0x658
   98fd8:   52801802    mov w2, #0xc0
   98fdc:   94000eb9    bl  9cac0 <assertion_failed>

0000000000098fe0 <CUSBBluetoothDevice::CompletionStub(CUSBRequest*, void*, void*)>:
   98fe0:   b4000082    cbz x2, 98ff0 <CUSBBluetoothDevice::CompletionStub(CUSBRequest*, void*, void*)+0x10>
   98fe4:   aa0003e1    mov x1, x0
   98fe8:   aa0203e0    mov x0, x2
   98fec:   17ffffb1    b   98eb0 <CUSBBluetoothDevice::CompletionRoutine(CUSBRequest*)>
   98ff0:   d00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   98ff4:   f00000a0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   98ff8:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   98ffc:   91182021    add x1, x1, #0x608
   99000:   910003fd    mov x29, sp
   99004:   91128000    add x0, x0, #0x4a0
   99008:   52801ae2    mov w2, #0xd7
   9900c:   94000ead    bl  9cac0 <assertion_failed>

0000000000099010 <CUSBBluetoothDevice::Configure()>:
   99010:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   99014:   910003fd    mov x29, sp
   99018:   a90153f3    stp x19, x20, [sp, #16]
   9901c:   aa0003f4    mov x20, x0
   99020:   97ffc5b0    bl  8a6e0 <CUSBFunction::GetInterfaceNumber() const>
   99024:   72001c1f    tst w0, #0xff
   99028:   54000d61    b.ne    991d4 <CUSBBluetoothDevice::Configure()+0x1c4>
   9902c:   aa1403e0    mov x0, x20
   99030:   97ffc524    bl  8a4c0 <CUSBFunction::GetNumEndpoints() const>
   99034:   12001c00    and w0, w0, #0xff
   99038:   71000c1f    cmp w0, #0x3
   9903c:   54000801    b.ne    9913c <CUSBBluetoothDevice::Configure()+0x12c>
   99040:   f90013f5    str x21, [sp, #32]
   99044:   d503201f    nop
   99048:   528000a1    mov w1, #0x5
   9904c:   aa1403e0    mov x0, x20
   99050:   97ffc54c    bl  8a580 <CUSBFunction::GetDescriptor(unsigned char)>
   99054:   aa0003f3    mov x19, x0
   99058:   b4000300    cbz x0, 990b8 <CUSBBluetoothDevice::Configure()+0xa8>
   9905c:   39400e61    ldrb    w1, [x19, #3]
   99060:   12001421    and w1, w1, #0x3f
   99064:   7100083f    cmp w1, #0x2
   99068:   540007e0    b.eq    99164 <CUSBBluetoothDevice::Configure()+0x154>
   9906c:   71000c3f    cmp w1, #0x3
   99070:   54fffec1    b.ne    99048 <CUSBBluetoothDevice::Configure()+0x38>
   99074:   f9401680    ldr x0, [x20, #40]
   99078:   b5000c00    cbnz    x0, 991f8 <CUSBBluetoothDevice::Configure()+0x1e8>
   9907c:   d2800400    mov x0, #0x20
   99080:   940039d0    bl  a77c0 <operator new(unsigned long)>
   99084:   aa0003f5    mov x21, x0
   99088:   aa1403e0    mov x0, x20
   9908c:   97ffc519    bl  8a4f0 <CUSBFunction::GetDevice() const>
   99090:   aa1303e2    mov x2, x19
   99094:   aa0003e1    mov x1, x0
   99098:   aa1503e0    mov x0, x21
   9909c:   97ffc34d    bl  89dd0 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   990a0:   528000a1    mov w1, #0x5
   990a4:   aa1403e0    mov x0, x20
   990a8:   f9001695    str x21, [x20, #40]
   990ac:   97ffc535    bl  8a580 <CUSBFunction::GetDescriptor(unsigned char)>
   990b0:   aa0003f3    mov x19, x0
   990b4:   b5fffd40    cbnz    x0, 9905c <CUSBBluetoothDevice::Configure()+0x4c>
   990b8:   f9401a80    ldr x0, [x20, #48]
   990bc:   b40009e0    cbz x0, 991f8 <CUSBBluetoothDevice::Configure()+0x1e8>
   990c0:   f9401e80    ldr x0, [x20, #56]
   990c4:   b40009a0    cbz x0, 991f8 <CUSBBluetoothDevice::Configure()+0x1e8>
   990c8:   f9401680    ldr x0, [x20, #40]
   990cc:   b4000960    cbz x0, 991f8 <CUSBBluetoothDevice::Configure()+0x1e8>
   990d0:   aa1403e0    mov x0, x20
   990d4:   97ffc437    bl  8a1b0 <CUSBFunction::Configure()>
   990d8:   12001c13    and w19, w0, #0xff
   990dc:   360009c0    tbz w0, #0, 99214 <CUSBBluetoothDevice::Configure()+0x204>
   990e0:   f9401680    ldr x0, [x20, #40]
   990e4:   97ffc3df    bl  8a060 <CUSBEndpoint::GetMaxPacketSize() const>
   990e8:   2a0003e0    mov w0, w0
   990ec:   940039bd    bl  a77e0 <operator new[](unsigned long)>
   990f0:   b9405281    ldr w1, [x20, #80]
   990f4:   f9002280    str x0, [x20, #64]
   990f8:   35000a21    cbnz    w1, 9923c <CUSBBluetoothDevice::Configure()+0x22c>
   990fc:   900000f5    adrp    x21, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   99100:   9119c2b5    add x21, x21, #0x670
   99104:   b0000100    adrp    x0, ba000 <font_data+0x1080>
   99108:   910022a2    add x2, x21, #0x8
   9910c:   52800021    mov w1, #0x1
   99110:   9123c000    add x0, x0, #0x8f0
   99114:   94003b53    bl  a7e60 <CNumberPool::AllocateNumber(bool, char const*)>
   99118:   b9005280    str w0, [x20, #80]
   9911c:   94001251    bl  9da60 <CDeviceNameService::Get()>
   99120:   aa1503e1    mov x1, x21
   99124:   b9405282    ldr w2, [x20, #80]
   99128:   aa1403e3    mov x3, x20
   9912c:   52800004    mov w4, #0x0
   99130:   94001258    bl  9da90 <CDeviceNameService::AddDevice(char const*, unsigned int, CDevice*, bool)>
   99134:   f94013f5    ldr x21, [sp, #32]
   99138:   14000007    b   99154 <CUSBBluetoothDevice::Configure()+0x144>
   9913c:   900000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   99140:   9119c021    add x1, x1, #0x670
   99144:   aa1403e0    mov x0, x20
   99148:   91002021    add x1, x1, #0x8
   9914c:   97ffc519    bl  8a5b0 <CUSBFunction::ConfigurationError(char const*) const>
   99150:   52800013    mov w19, #0x0
   99154:   2a1303e0    mov w0, w19
   99158:   a94153f3    ldp x19, x20, [sp, #16]
   9915c:   a8c37bfd    ldp x29, x30, [sp], #48
   99160:   d65f03c0    ret
   99164:   39c00a60    ldrsb   w0, [x19, #2]
   99168:   37f801c0    tbnz    w0, #31, 991a0 <CUSBBluetoothDevice::Configure()+0x190>
   9916c:   f9401e80    ldr x0, [x20, #56]
   99170:   b5000440    cbnz    x0, 991f8 <CUSBBluetoothDevice::Configure()+0x1e8>
   99174:   d2800400    mov x0, #0x20
   99178:   94003992    bl  a77c0 <operator new(unsigned long)>
   9917c:   aa0003f5    mov x21, x0
   99180:   aa1403e0    mov x0, x20
   99184:   97ffc4db    bl  8a4f0 <CUSBFunction::GetDevice() const>
   99188:   aa0003e1    mov x1, x0
   9918c:   aa1303e2    mov x2, x19
   99190:   aa1503e0    mov x0, x21
   99194:   97ffc30f    bl  89dd0 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   99198:   f9001e95    str x21, [x20, #56]
   9919c:   17ffffab    b   99048 <CUSBBluetoothDevice::Configure()+0x38>
   991a0:   f9401a80    ldr x0, [x20, #48]
   991a4:   b50002a0    cbnz    x0, 991f8 <CUSBBluetoothDevice::Configure()+0x1e8>
   991a8:   d2800400    mov x0, #0x20
   991ac:   94003985    bl  a77c0 <operator new(unsigned long)>
   991b0:   aa0003f5    mov x21, x0
   991b4:   aa1403e0    mov x0, x20
   991b8:   97ffc4ce    bl  8a4f0 <CUSBFunction::GetDevice() const>
   991bc:   aa0003e1    mov x1, x0
   991c0:   aa1303e2    mov x2, x19
   991c4:   aa1503e0    mov x0, x21
   991c8:   97ffc302    bl  89dd0 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   991cc:   f9001a95    str x21, [x20, #48]
   991d0:   17ffff9e    b   99048 <CUSBBluetoothDevice::Configure()+0x38>
   991d4:   9400190b    bl  9f600 <CLogger::Get()>
   991d8:   900000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   991dc:   9119c021    add x1, x1, #0x670
   991e0:   b00000c3    adrp    x3, b2000 <_etext+0x2f9c>
   991e4:   91002021    add x1, x1, #0x8
   991e8:   911a0063    add x3, x3, #0x680
   991ec:   52800042    mov w2, #0x2
   991f0:   94001aec    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   991f4:   17ffffd7    b   99150 <CUSBBluetoothDevice::Configure()+0x140>
   991f8:   900000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   991fc:   9119c021    add x1, x1, #0x670
   99200:   aa1403e0    mov x0, x20
   99204:   91002021    add x1, x1, #0x8
   99208:   97ffc4ea    bl  8a5b0 <CUSBFunction::ConfigurationError(char const*) const>
   9920c:   f94013f5    ldr x21, [sp, #32]
   99210:   17ffffd0    b   99150 <CUSBBluetoothDevice::Configure()+0x140>
   99214:   940018fb    bl  9f600 <CLogger::Get()>
   99218:   900000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9921c:   9119c021    add x1, x1, #0x670
   99220:   d00000a3    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   99224:   91002021    add x1, x1, #0x8
   99228:   9119e063    add x3, x3, #0x678
   9922c:   52800022    mov w2, #0x1
   99230:   94001adc    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   99234:   f94013f5    ldr x21, [sp, #32]
   99238:   17ffffc6    b   99150 <CUSBBluetoothDevice::Configure()+0x140>
   9923c:   b00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   99240:   900000c0    adrp    x0, b1000 <_etext+0x1f9c>
   99244:   91182021    add x1, x1, #0x608
   99248:   9106a000    add x0, x0, #0x1a8
   9924c:   528011e2    mov w2, #0x8f
   99250:   94000e1c    bl  9cac0 <assertion_failed>
    ...

0000000000099260 <_GLOBAL__sub_I__ZN19CUSBBluetoothDevice18s_DeviceNumberPoolE>:
   99260:   a9be7bfd    stp x29, x30, [sp, #-32]!
   99264:   910003fd    mov x29, sp
   99268:   528007e2    mov w2, #0x3f
   9926c:   52800021    mov w1, #0x1
   99270:   f9000bf3    str x19, [sp, #16]
   99274:   b0000113    adrp    x19, ba000 <font_data+0x1080>
   99278:   9123c273    add x19, x19, #0x8f0
   9927c:   aa1303e0    mov x0, x19
   99280:   94003adc    bl  a7df0 <CNumberPool::CNumberPool(unsigned int, unsigned int)>
   99284:   b0000102    adrp    x2, ba000 <font_data+0x1080>
   99288:   d0000060    adrp    x0, a7000 <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int, bool)+0xd0>
   9928c:   aa1303e1    mov x1, x19
   99290:   f9400bf3    ldr x19, [sp, #16]
   99294:   91278042    add x2, x2, #0x9e0
   99298:   a8c27bfd    ldp x29, x30, [sp], #32
   9929c:   91394000    add x0, x0, #0xe50
   992a0:   140030bc    b   a5590 <__cxa_atexit>
    ...

00000000000992b0 <CUSBCDCEthernetDevice::GetMACAddress() const>:
   992b0:   91010000    add x0, x0, #0x40
   992b4:   d65f03c0    ret
   992b8:   d503201f    nop
   992bc:   d503201f    nop

00000000000992c0 <CUSBCDCEthernetDevice::~CUSBCDCEthernetDevice()>:
   992c0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   992c4:   900000e2    adrp    x2, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   992c8:   911a4042    add x2, x2, #0x690
   992cc:   910003fd    mov x29, sp
   992d0:   900000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   992d4:   911c6021    add x1, x1, #0x718
   992d8:   a90153f3    stp x19, x20, [sp, #16]
   992dc:   aa0003f3    mov x19, x0
   992e0:   f9401c14    ldr x20, [x0, #56]
   992e4:   f9000002    str x2, [x0]
   992e8:   f9001401    str x1, [x0, #40]
   992ec:   b40000d4    cbz x20, 99304 <CUSBCDCEthernetDevice::~CUSBCDCEthernetDevice()+0x44>
   992f0:   aa1403e0    mov x0, x20
   992f4:   97ffc323    bl  89f80 <CUSBEndpoint::~CUSBEndpoint()>
   992f8:   aa1403e0    mov x0, x20
   992fc:   d2800401    mov x1, #0x20
   99300:   94003958    bl  a7860 <operator delete(void*, unsigned long)>
   99304:   f9401a74    ldr x20, [x19, #48]
   99308:   f9001e7f    str xzr, [x19, #56]
   9930c:   b40000d4    cbz x20, 99324 <CUSBCDCEthernetDevice::~CUSBCDCEthernetDevice()+0x64>
   99310:   aa1403e0    mov x0, x20
   99314:   97ffc31b    bl  89f80 <CUSBEndpoint::~CUSBEndpoint()>
   99318:   aa1403e0    mov x0, x20
   9931c:   d2800401    mov x1, #0x20
   99320:   94003950    bl  a7860 <operator delete(void*, unsigned long)>
   99324:   91010260    add x0, x19, #0x40
   99328:   f9001a7f    str xzr, [x19, #48]
   9932c:   940037ad    bl  a71e0 <CMACAddress::~CMACAddress()>
   99330:   aa1303e0    mov x0, x19
   99334:   a94153f3    ldp x19, x20, [sp, #16]
   99338:   a8c27bfd    ldp x29, x30, [sp], #32
   9933c:   17ffc365    b   8a0d0 <CUSBFunction::~CUSBFunction()>

0000000000099340 <non-virtual thunk to CUSBCDCEthernetDevice::~CUSBCDCEthernetDevice()>:
   99340:   d100a000    sub x0, x0, #0x28
   99344:   17ffffdf    b   992c0 <CUSBCDCEthernetDevice::~CUSBCDCEthernetDevice()>
   99348:   d503201f    nop
   9934c:   d503201f    nop

0000000000099350 <CUSBCDCEthernetDevice::~CUSBCDCEthernetDevice()>:
   99350:   a9be7bfd    stp x29, x30, [sp, #-32]!
   99354:   910003fd    mov x29, sp
   99358:   f9000bf3    str x19, [sp, #16]
   9935c:   aa0003f3    mov x19, x0
   99360:   97ffffd8    bl  992c0 <CUSBCDCEthernetDevice::~CUSBCDCEthernetDevice()>
   99364:   aa1303e0    mov x0, x19
   99368:   f9400bf3    ldr x19, [sp, #16]
   9936c:   d2800901    mov x1, #0x48
   99370:   a8c27bfd    ldp x29, x30, [sp], #32
   99374:   1400393b    b   a7860 <operator delete(void*, unsigned long)>
   99378:   d503201f    nop
   9937c:   d503201f    nop

0000000000099380 <CUSBCDCEthernetDevice::SendFrame(void const*, unsigned int)>:
   99380:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   99384:   910003fd    mov x29, sp
   99388:   f9401c03    ldr x3, [x0, #56]
   9938c:   a90153f3    stp x19, x20, [sp, #16]
   99390:   f90013f5    str x21, [sp, #32]
   99394:   b4000263    cbz x3, 993e0 <CUSBCDCEthernetDevice::SendFrame(void const*, unsigned int)+0x60>
   99398:   aa0103f4    mov x20, x1
   9939c:   b40002e1    cbz x1, 993f8 <CUSBCDCEthernetDevice::SendFrame(void const*, unsigned int)+0x78>
   993a0:   7119005f    cmp w2, #0x640
   993a4:   2a0203f5    mov w21, w2
   993a8:   54000348    b.hi    99410 <CUSBCDCEthernetDevice::SendFrame(void const*, unsigned int)+0x90>
   993ac:   aa0003f3    mov x19, x0
   993b0:   97ffc468    bl  8a550 <CUSBFunction::GetHost() const>
   993b4:   f9401e61    ldr x1, [x19, #56]
   993b8:   2a1503e3    mov w3, w21
   993bc:   aa1403e2    mov x2, x20
   993c0:   52800004    mov w4, #0x0
   993c4:   97ff9f8f    bl  81200 <CUSBHostController::Transfer(CUSBEndpoint*, void*, unsigned int, unsigned int)>
   993c8:   2a2003e0    mvn w0, w0
   993cc:   a94153f3    ldp x19, x20, [sp, #16]
   993d0:   531f7c00    lsr w0, w0, #31
   993d4:   f94013f5    ldr x21, [sp, #32]
   993d8:   a8c37bfd    ldp x29, x30, [sp], #48
   993dc:   d65f03c0    ret
   993e0:   b00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   993e4:   b00000c0    adrp    x0, b2000 <_etext+0x2f9c>
   993e8:   911aa021    add x1, x1, #0x6a8
   993ec:   910e2000    add x0, x0, #0x388
   993f0:   52801542    mov w2, #0xaa
   993f4:   94000db3    bl  9cac0 <assertion_failed>
   993f8:   b00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   993fc:   d00000a0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   99400:   911aa021    add x1, x1, #0x6a8
   99404:   91260000    add x0, x0, #0x980
   99408:   52801562    mov w2, #0xab
   9940c:   94000dad    bl  9cac0 <assertion_failed>
   99410:   b00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   99414:   b00000c0    adrp    x0, b2000 <_etext+0x2f9c>
   99418:   911aa021    add x1, x1, #0x6a8
   9941c:   911b0000    add x0, x0, #0x6c0
   99420:   52801582    mov w2, #0xac
   99424:   94000da7    bl  9cac0 <assertion_failed>
   99428:   d503201f    nop
   9942c:   d503201f    nop

0000000000099430 <non-virtual thunk to CUSBCDCEthernetDevice::SendFrame(void const*, unsigned int)>:
   99430:   d100a000    sub x0, x0, #0x28
   99434:   17ffffd3    b   99380 <CUSBCDCEthernetDevice::SendFrame(void const*, unsigned int)>
   99438:   d503201f    nop
   9943c:   d503201f    nop

0000000000099440 <CUSBCDCEthernetDevice::ReceiveFrame(void*, unsigned int*)>:
   99440:   a9b57bfd    stp x29, x30, [sp, #-176]!
   99444:   910003fd    mov x29, sp
   99448:   f9401803    ldr x3, [x0, #48]
   9944c:   a90153f3    stp x19, x20, [sp, #16]
   99450:   b40004e3    cbz x3, 994ec <CUSBCDCEthernetDevice::ReceiveFrame(void*, unsigned int*)+0xac>
   99454:   b4000581    cbz x1, 99504 <CUSBCDCEthernetDevice::ReceiveFrame(void*, unsigned int*)+0xc4>
   99458:   d2800004    mov x4, #0x0
   9945c:   aa0003f3    mov x19, x0
   99460:   aa0203f4    mov x20, x2
   99464:   910083e0    add x0, sp, #0x20
   99468:   aa0103e2    mov x2, x1
   9946c:   aa0303e1    mov x1, x3
   99470:   5280c803    mov w3, #0x640
   99474:   97ffa183    bl  81a80 <CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)>
   99478:   910083e0    add x0, sp, #0x20
   9947c:   97ffa261    bl  81e00 <CUSBRequest::SetCompleteOnNAK()>
   99480:   aa1303e0    mov x0, x19
   99484:   97ffc433    bl  8a550 <CUSBFunction::GetHost() const>
   99488:   f9400003    ldr x3, [x0]
   9948c:   910083e1    add x1, sp, #0x20
   99490:   52800002    mov w2, #0x0
   99494:   f9401063    ldr x3, [x3, #32]
   99498:   d63f0060    blr x3
   9949c:   12001c13    and w19, w0, #0xff
   994a0:   37000100    tbnz    w0, #0, 994c0 <CUSBCDCEthernetDevice::ReceiveFrame(void*, unsigned int*)+0x80>
   994a4:   910083e0    add x0, sp, #0x20
   994a8:   52800013    mov w19, #0x0
   994ac:   97ffa195    bl  81b00 <CUSBRequest::~CUSBRequest()>
   994b0:   2a1303e0    mov w0, w19
   994b4:   a94153f3    ldp x19, x20, [sp, #16]
   994b8:   a8cb7bfd    ldp x29, x30, [sp], #176
   994bc:   d65f03c0    ret
   994c0:   910083e0    add x0, sp, #0x20
   994c4:   97ffa1af    bl  81b80 <CUSBRequest::GetResultLength() const>
   994c8:   34fffee0    cbz w0, 994a4 <CUSBCDCEthernetDevice::ReceiveFrame(void*, unsigned int*)+0x64>
   994cc:   b4000294    cbz x20, 9951c <CUSBCDCEthernetDevice::ReceiveFrame(void*, unsigned int*)+0xdc>
   994d0:   b9000280    str w0, [x20]
   994d4:   910083e0    add x0, sp, #0x20
   994d8:   97ffa18a    bl  81b00 <CUSBRequest::~CUSBRequest()>
   994dc:   2a1303e0    mov w0, w19
   994e0:   a94153f3    ldp x19, x20, [sp, #16]
   994e4:   a8cb7bfd    ldp x29, x30, [sp], #176
   994e8:   d65f03c0    ret
   994ec:   b00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   994f0:   b00000c0    adrp    x0, b2000 <_etext+0x2f9c>
   994f4:   911aa021    add x1, x1, #0x6a8
   994f8:   910be000    add x0, x0, #0x2f8
   994fc:   52801642    mov w2, #0xb2
   99500:   94000d70    bl  9cac0 <assertion_failed>
   99504:   b00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   99508:   d00000a0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   9950c:   911aa021    add x1, x1, #0x6a8
   99510:   91260000    add x0, x0, #0x980
   99514:   52801662    mov w2, #0xb3
   99518:   94000d6a    bl  9cac0 <assertion_failed>
   9951c:   b00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   99520:   b00000c0    adrp    x0, b2000 <_etext+0x2f9c>
   99524:   911aa021    add x1, x1, #0x6a8
   99528:   910dc000    add x0, x0, #0x370
   9952c:   52801862    mov w2, #0xc3
   99530:   94000d64    bl  9cac0 <assertion_failed>
   99534:   d503201f    nop
   99538:   d503201f    nop
   9953c:   d503201f    nop

0000000000099540 <non-virtual thunk to CUSBCDCEthernetDevice::ReceiveFrame(void*, unsigned int*)>:
   99540:   d100a000    sub x0, x0, #0x28
   99544:   17ffffbf    b   99440 <CUSBCDCEthernetDevice::ReceiveFrame(void*, unsigned int*)>
   99548:   d503201f    nop
   9954c:   d503201f    nop

0000000000099550 <non-virtual thunk to CUSBCDCEthernetDevice::GetMACAddress() const>:
   99550:   91006000    add x0, x0, #0x18
   99554:   d65f03c0    ret
   99558:   d503201f    nop
   9955c:   d503201f    nop

0000000000099560 <non-virtual thunk to CUSBCDCEthernetDevice::~CUSBCDCEthernetDevice()>:
   99560:   a9be7bfd    stp x29, x30, [sp, #-32]!
   99564:   910003fd    mov x29, sp
   99568:   f9000bf3    str x19, [sp, #16]
   9956c:   d100a013    sub x19, x0, #0x28
   99570:   aa1303e0    mov x0, x19
   99574:   97ffff53    bl  992c0 <CUSBCDCEthernetDevice::~CUSBCDCEthernetDevice()>
   99578:   aa1303e0    mov x0, x19
   9957c:   f9400bf3    ldr x19, [sp, #16]
   99580:   d2800901    mov x1, #0x48
   99584:   a8c27bfd    ldp x29, x30, [sp], #32
   99588:   140038b6    b   a7860 <operator delete(void*, unsigned long)>
   9958c:   d503201f    nop

0000000000099590 <CUSBCDCEthernetDevice::CUSBCDCEthernetDevice(CUSBFunction*)>:
   99590:   a9be7bfd    stp x29, x30, [sp, #-32]!
   99594:   910003fd    mov x29, sp
   99598:   f9000bf3    str x19, [sp, #16]
   9959c:   aa0003f3    mov x19, x0
   995a0:   97ffc370    bl  8a360 <CUSBFunction::CUSBFunction(CUSBFunction*)>
   995a4:   900000e2    adrp    x2, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   995a8:   911a4042    add x2, x2, #0x690
   995ac:   f9001e7f    str xzr, [x19, #56]
   995b0:   900000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   995b4:   911c6021    add x1, x1, #0x718
   995b8:   91010260    add x0, x19, #0x40
   995bc:   f9000262    str x2, [x19]
   995c0:   a902fe61    stp x1, xzr, [x19, #40]
   995c4:   f9400bf3    ldr x19, [sp, #16]
   995c8:   a8c27bfd    ldp x29, x30, [sp], #32
   995cc:   140036ed    b   a7180 <CMACAddress::CMACAddress()>

00000000000995d0 <CUSBCDCEthernetDevice::InitMACAddress(unsigned char)>:
   995d0:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   995d4:   910003fd    mov x29, sp
   995d8:   a90153f3    stp x19, x20, [sp, #16]
   995dc:   12001c34    and w20, w1, #0xff
   995e0:   aa0003f3    mov x19, x0
   995e4:   97ffc3c3    bl  8a4f0 <CUSBFunction::GetDevice() const>
   995e8:   aa0003e1    mov x1, x0
   995ec:   9100a3e0    add x0, sp, #0x28
   995f0:   97ffda38    bl  8fed0 <CUSBString::CUSBString(CUSBDevice*)>
   995f4:   35000114    cbnz    w20, 99614 <CUSBCDCEthernetDevice::InitMACAddress(unsigned char)+0x44>
   995f8:   9100a3e0    add x0, sp, #0x28
   995fc:   52800014    mov w20, #0x0
   99600:   97ffda80    bl  90000 <CUSBString::~CUSBString()>
   99604:   2a1403e0    mov w0, w20
   99608:   a94153f3    ldp x19, x20, [sp, #16]
   9960c:   a8c47bfd    ldp x29, x30, [sp], #64
   99610:   d65f03c0    ret
   99614:   9100a3e0    add x0, sp, #0x28
   99618:   97ffdb26    bl  902b0 <CUSBString::GetLanguageID()>
   9961c:   2a0003e2    mov w2, w0
   99620:   2a1403e1    mov w1, w20
   99624:   9100a3e0    add x0, sp, #0x28
   99628:   97ffda8a    bl  90050 <CUSBString::GetFromDescriptor(unsigned char, unsigned short)>
   9962c:   12001c14    and w20, w0, #0xff
   99630:   3607fe40    tbz w0, #0, 995f8 <CUSBCDCEthernetDevice::InitMACAddress(unsigned char)+0x28>
   99634:   9100a3e0    add x0, sp, #0x28
   99638:   97ffdb1a    bl  902a0 <CUSBString::Get() const>
   9963c:   910083e4    add x4, sp, #0x20
   99640:   91003005    add x5, x0, #0xc
   99644:   b4000480    cbz x0, 996d4 <CUSBCDCEthernetDevice::InitMACAddress(unsigned char)+0x104>
   99648:   39c00002    ldrsb   w2, [x0]
   9964c:   12001c41    and w1, w2, #0xff
   99650:   7100e85f    cmp w2, #0x3a
   99654:   51001c22    sub w2, w1, #0x7
   99658:   12001c42    and w2, w2, #0xff
   9965c:   1a82b021    csel    w1, w1, w2, lt
   99660:   5100c021    sub w1, w1, #0x30
   99664:   12001c21    and w1, w1, #0xff
   99668:   71003c3f    cmp w1, #0xf
   9966c:   54fffc68    b.hi    995f8 <CUSBCDCEthernetDevice::InitMACAddress(unsigned char)+0x28>
   99670:   39c00403    ldrsb   w3, [x0, #1]
   99674:   91000800    add x0, x0, #0x2
   99678:   12001c62    and w2, w3, #0xff
   9967c:   7100e87f    cmp w3, #0x3a
   99680:   51001c43    sub w3, w2, #0x7
   99684:   12001c63    and w3, w3, #0xff
   99688:   1a83b042    csel    w2, w2, w3, lt
   9968c:   5100c042    sub w2, w2, #0x30
   99690:   12001c42    and w2, w2, #0xff
   99694:   71003c5f    cmp w2, #0xf
   99698:   54fffb08    b.hi    995f8 <CUSBCDCEthernetDevice::InitMACAddress(unsigned char)+0x28>
   9969c:   531c0c21    ubfiz   w1, w1, #4, #4
   996a0:   eb0000bf    cmp x5, x0
   996a4:   2a010042    orr w2, w2, w1
   996a8:   38001482    strb    w2, [x4], #1
   996ac:   54fffce1    b.ne    99648 <CUSBCDCEthernetDevice::InitMACAddress(unsigned char)+0x78>
   996b0:   910083e1    add x1, sp, #0x20
   996b4:   91010260    add x0, x19, #0x40
   996b8:   94003706    bl  a72d0 <CMACAddress::Set(unsigned char const*)>
   996bc:   9100a3e0    add x0, sp, #0x28
   996c0:   97ffda50    bl  90000 <CUSBString::~CUSBString()>
   996c4:   2a1403e0    mov w0, w20
   996c8:   a94153f3    ldp x19, x20, [sp, #16]
   996cc:   a8c47bfd    ldp x29, x30, [sp], #64
   996d0:   d65f03c0    ret
   996d4:   b00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   996d8:   b00000c0    adrp    x0, b2000 <_etext+0x2f9c>
   996dc:   911aa021    add x1, x1, #0x6a8
   996e0:   911b8000    add x0, x0, #0x6e0
   996e4:   52801a62    mov w2, #0xd3
   996e8:   94000cf6    bl  9cac0 <assertion_failed>
   996ec:   d503201f    nop

00000000000996f0 <CUSBCDCEthernetDevice::Configure()>:
   996f0:   a9bb7bfd    stp x29, x30, [sp, #-80]!
   996f4:   910003fd    mov x29, sp
   996f8:   a90153f3    stp x19, x20, [sp, #16]
   996fc:   aa0003f4    mov x20, x0
   99700:   14000004    b   99710 <CUSBCDCEthernetDevice::Configure()+0x20>
   99704:   39400a60    ldrb    w0, [x19, #2]
   99708:   71003c1f    cmp w0, #0xf
   9970c:   540002e0    b.eq    99768 <CUSBCDCEthernetDevice::Configure()+0x78>
   99710:   52800481    mov w1, #0x24
   99714:   aa1403e0    mov x0, x20
   99718:   97ffc39a    bl  8a580 <CUSBFunction::GetDescriptor(unsigned char)>
   9971c:   aa0003f3    mov x19, x0
   99720:   b5ffff20    cbnz    x0, 99704 <CUSBCDCEthernetDevice::Configure()+0x14>
   99724:   900000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   99728:   911da021    add x1, x1, #0x768
   9972c:   aa1403e0    mov x0, x20
   99730:   97ffc3a0    bl  8a5b0 <CUSBFunction::ConfigurationError(char const*) const>
   99734:   52800013    mov w19, #0x0
   99738:   2a1303e0    mov w0, w19
   9973c:   a94153f3    ldp x19, x20, [sp, #16]
   99740:   a8c57bfd    ldp x29, x30, [sp], #80
   99744:   d65f03c0    ret
   99748:   39401801    ldrb    w1, [x0, #6]
   9974c:   350000e1    cbnz    w1, 99768 <CUSBCDCEthernetDevice::Configure()+0x78>
   99750:   39401c01    ldrb    w1, [x0, #7]
   99754:   350000a1    cbnz    w1, 99768 <CUSBCDCEthernetDevice::Configure()+0x78>
   99758:   39401000    ldrb    w0, [x0, #4]
   9975c:   7100041f    cmp w0, #0x1
   99760:   54000148    b.hi    99788 <CUSBCDCEthernetDevice::Configure()+0x98>
   99764:   d503201f    nop
   99768:   52800081    mov w1, #0x4
   9976c:   aa1403e0    mov x0, x20
   99770:   97ffc384    bl  8a580 <CUSBFunction::GetDescriptor(unsigned char)>
   99774:   b4fffd80    cbz x0, 99724 <CUSBCDCEthernetDevice::Configure()+0x34>
   99778:   39401401    ldrb    w1, [x0, #5]
   9977c:   7100283f    cmp w1, #0xa
   99780:   54ffff41    b.ne    99768 <CUSBCDCEthernetDevice::Configure()+0x78>
   99784:   17fffff1    b   99748 <CUSBCDCEthernetDevice::Configure()+0x58>
   99788:   39400e61    ldrb    w1, [x19, #3]
   9978c:   aa1403e0    mov x0, x20
   99790:   97ffff90    bl  995d0 <CUSBCDCEthernetDevice::InitMACAddress(unsigned char)>
   99794:   360005e0    tbz w0, #0, 99850 <CUSBCDCEthernetDevice::Configure()+0x160>
   99798:   9100c3e0    add x0, sp, #0x30
   9979c:   a9025bf5    stp x21, x22, [sp, #32]
   997a0:   900000f5    adrp    x21, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   997a4:   911da2b5    add x21, x21, #0x768
   997a8:   9400294a    bl  a3cd0 <CString::CString()>
   997ac:   9100c3e1    add x1, sp, #0x30
   997b0:   91010280    add x0, x20, #0x40
   997b4:   9400372b    bl  a7460 <CMACAddress::Format(CString*) const>
   997b8:   94001792    bl  9f600 <CLogger::Get()>
   997bc:   aa0003f3    mov x19, x0
   997c0:   9100c3e0    add x0, sp, #0x30
   997c4:   94002987    bl  a3de0 <CString::operator char const*() const>
   997c8:   b00000c3    adrp    x3, b2000 <_etext+0x2f9c>
   997cc:   aa0003e4    mov x4, x0
   997d0:   aa1503e1    mov x1, x21
   997d4:   aa1303e0    mov x0, x19
   997d8:   9110e063    add x3, x3, #0x438
   997dc:   52800082    mov w2, #0x4
   997e0:   94001970    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   997e4:   14000005    b   997f8 <CUSBCDCEthernetDevice::Configure()+0x108>
   997e8:   39400e60    ldrb    w0, [x19, #3]
   997ec:   12001400    and w0, w0, #0x3f
   997f0:   7100081f    cmp w0, #0x2
   997f4:   540003e0    b.eq    99870 <CUSBCDCEthernetDevice::Configure()+0x180>
   997f8:   528000a1    mov w1, #0x5
   997fc:   aa1403e0    mov x0, x20
   99800:   97ffc360    bl  8a580 <CUSBFunction::GetDescriptor(unsigned char)>
   99804:   aa0003f3    mov x19, x0
   99808:   b5ffff00    cbnz    x0, 997e8 <CUSBCDCEthernetDevice::Configure()+0xf8>
   9980c:   f9401a80    ldr x0, [x20, #48]
   99810:   b40005e0    cbz x0, 998cc <CUSBCDCEthernetDevice::Configure()+0x1dc>
   99814:   f9401e80    ldr x0, [x20, #56]
   99818:   b40005a0    cbz x0, 998cc <CUSBCDCEthernetDevice::Configure()+0x1dc>
   9981c:   aa1403e0    mov x0, x20
   99820:   97ffc264    bl  8a1b0 <CUSBFunction::Configure()>
   99824:   12001c13    and w19, w0, #0xff
   99828:   36000420    tbz w0, #0, 998ac <CUSBCDCEthernetDevice::Configure()+0x1bc>
   9982c:   9100a280    add x0, x20, #0x28
   99830:   9400372c    bl  a74e0 <CNetDevice::AddNetDevice()>
   99834:   9100c3e0    add x0, sp, #0x30
   99838:   940028ea    bl  a3be0 <CString::~CString()>
   9983c:   a9425bf5    ldp x21, x22, [sp, #32]
   99840:   2a1303e0    mov w0, w19
   99844:   a94153f3    ldp x19, x20, [sp, #16]
   99848:   a8c57bfd    ldp x29, x30, [sp], #80
   9984c:   d65f03c0    ret
   99850:   9400176c    bl  9f600 <CLogger::Get()>
   99854:   b00000c3    adrp    x3, b2000 <_etext+0x2f9c>
   99858:   900000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9985c:   91170063    add x3, x3, #0x5c0
   99860:   911da021    add x1, x1, #0x768
   99864:   52800022    mov w2, #0x1
   99868:   9400194e    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   9986c:   17ffffb2    b   99734 <CUSBCDCEthernetDevice::Configure()+0x44>
   99870:   39c00a61    ldrsb   w1, [x19, #2]
   99874:   d2800400    mov x0, #0x20
   99878:   37f80341    tbnz    w1, #31, 998e0 <CUSBCDCEthernetDevice::Configure()+0x1f0>
   9987c:   f9401e81    ldr x1, [x20, #56]
   99880:   b5000261    cbnz    x1, 998cc <CUSBCDCEthernetDevice::Configure()+0x1dc>
   99884:   940037cf    bl  a77c0 <operator new(unsigned long)>
   99888:   aa0003f6    mov x22, x0
   9988c:   aa1403e0    mov x0, x20
   99890:   97ffc318    bl  8a4f0 <CUSBFunction::GetDevice() const>
   99894:   aa0003e1    mov x1, x0
   99898:   aa1303e2    mov x2, x19
   9989c:   aa1603e0    mov x0, x22
   998a0:   97ffc14c    bl  89dd0 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   998a4:   f9001e96    str x22, [x20, #56]
   998a8:   17ffffd4    b   997f8 <CUSBCDCEthernetDevice::Configure()+0x108>
   998ac:   94001755    bl  9f600 <CLogger::Get()>
   998b0:   aa1503e1    mov x1, x21
   998b4:   d00000a3    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   998b8:   9119e063    add x3, x3, #0x678
   998bc:   52800022    mov w2, #0x1
   998c0:   52800013    mov w19, #0x0
   998c4:   94001937    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   998c8:   17ffffdb    b   99834 <CUSBCDCEthernetDevice::Configure()+0x144>
   998cc:   aa1503e1    mov x1, x21
   998d0:   aa1403e0    mov x0, x20
   998d4:   52800013    mov w19, #0x0
   998d8:   97ffc336    bl  8a5b0 <CUSBFunction::ConfigurationError(char const*) const>
   998dc:   17ffffd6    b   99834 <CUSBCDCEthernetDevice::Configure()+0x144>
   998e0:   f9401a81    ldr x1, [x20, #48]
   998e4:   b5ffff41    cbnz    x1, 998cc <CUSBCDCEthernetDevice::Configure()+0x1dc>
   998e8:   940037b6    bl  a77c0 <operator new(unsigned long)>
   998ec:   aa0003f6    mov x22, x0
   998f0:   aa1403e0    mov x0, x20
   998f4:   97ffc2ff    bl  8a4f0 <CUSBFunction::GetDevice() const>
   998f8:   aa0003e1    mov x1, x0
   998fc:   aa1303e2    mov x2, x19
   99900:   aa1603e0    mov x0, x22
   99904:   97ffc133    bl  89dd0 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   99908:   f9001a96    str x22, [x20, #48]
   9990c:   17ffffbb    b   997f8 <CUSBCDCEthernetDevice::Configure()+0x108>

0000000000099910 <CNetDevice::IsLinkUp()>:
   99910:   52800020    mov w0, #0x1
   99914:   d65f03c0    ret
    ...

0000000000099920 <CNetDevice::GetLinkSpeed()>:
   99920:   528000c0    mov w0, #0x6
   99924:   d65f03c0    ret
    ...

0000000000099930 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)>:
   99930:   8b224024    add x4, x1, w2, uxtw
   99934:   f9000001    str x1, [x0]
   99938:   b9000802    str w2, [x0, #8]
   9993c:   3900301f    strb    wzr, [x0, #12]
   99940:   a9010404    stp x4, x1, [x0, #16]
   99944:   a902041f    stp xzr, x1, [x0, #32]
   99948:   b4000881    cbz x1, 99a58 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0x128>
   9994c:   51001043    sub w3, w2, #0x4
   99950:   710ff07f    cmp w3, #0x3fc
   99954:   54000088    b.hi    99964 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0x34>
   99958:   39400023    ldrb    w3, [x1]
   9995c:   7100247f    cmp w3, #0x9
   99960:   54000040    b.eq    99968 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0x38>
   99964:   d65f03c0    ret
   99968:   39400423    ldrb    w3, [x1, #1]
   9996c:   7100087f    cmp w3, #0x2
   99970:   54ffffa1    b.ne    99964 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0x34>
   99974:   39400826    ldrb    w6, [x1, #2]
   99978:   39400c25    ldrb    w5, [x1, #3]
   9997c:   2a0520c5    orr w5, w6, w5, lsl #8
   99980:   6b05005f    cmp w2, w5
   99984:   54ffff03    b.cc    99964 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0x34>
   99988:   54000069    b.ls    99994 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0x64>
   9998c:   8b252024    add x4, x1, w5, uxth
   99990:   f9000804    str x4, [x0, #16]
   99994:   91000822    add x2, x1, #0x2
   99998:   eb02009f    cmp x4, x2
   9999c:   540006e9    b.ls    99a78 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0x148>
   999a0:   52800125    mov w5, #0x9
   999a4:   52800007    mov w7, #0x0
   999a8:   52800006    mov w6, #0x0
   999ac:   1400000e    b   999e4 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0xb4>
   999b0:   7100087f    cmp w3, #0x2
   999b4:   540000a1    b.ne    999c8 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0x98>
   999b8:   35000346    cbnz    w6, 99a20 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0xf0>
   999bc:   52800126    mov w6, #0x9
   999c0:   6b0600bf    cmp w5, w6
   999c4:   540002e1    b.ne    99a20 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0xf0>
   999c8:   91000841    add x1, x2, #0x2
   999cc:   eb01009f    cmp x4, x1
   999d0:   54000589    b.ls    99a80 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0x150>
   999d4:   2a0303e6    mov w6, w3
   999d8:   39400045    ldrb    w5, [x2]
   999dc:   aa0203e1    mov x1, x2
   999e0:   39400443    ldrb    w3, [x2, #1]
   999e4:   8b250022    add x2, x1, w5, uxtb
   999e8:   eb04005f    cmp x2, x4
   999ec:   540001a8    b.hi    99a20 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0xf0>
   999f0:   7100107f    cmp w3, #0x4
   999f4:   540001a0    b.eq    99a28 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0xf8>
   999f8:   7100147f    cmp w3, #0x5
   999fc:   54fffda1    b.ne    999b0 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0x80>
   99a00:   52801fa8    mov w8, #0xfd
   99a04:   6a0800df    tst w6, w8
   99a08:   540000c0    b.eq    99a20 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0xf0>
   99a0c:   34000227    cbz w7, 99a50 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0x120>
   99a10:   51001ca5    sub w5, w5, #0x7
   99a14:   52801fa6    mov w6, #0xfd
   99a18:   6a0600bf    tst w5, w6
   99a1c:   54fffd60    b.eq    999c8 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0x98>
   99a20:   f9001401    str x1, [x0, #40]
   99a24:   d65f03c0    ret
   99a28:   34ffffc6    cbz w6, 99a20 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0xf0>
   99a2c:   39401428    ldrb    w8, [x1, #5]
   99a30:   52800126    mov w6, #0x9
   99a34:   52800007    mov w7, #0x0
   99a38:   7100051f    cmp w8, #0x1
   99a3c:   54fffc21    b.ne    999c0 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0x90>
   99a40:   39401c27    ldrb    w7, [x1, #7]
   99a44:   710080ff    cmp w7, #0x20
   99a48:   1a9f07e7    cset    w7, ne
   99a4c:   17ffffdd    b   999c0 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0x90>
   99a50:   528000e6    mov w6, #0x7
   99a54:   17ffffdb    b   999c0 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0x90>
   99a58:   b00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   99a5c:   b00000c0    adrp    x0, b2000 <_etext+0x2f9c>
   99a60:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   99a64:   911bc021    add x1, x1, #0x6f0
   99a68:   910003fd    mov x29, sp
   99a6c:   911c2000    add x0, x0, #0x708
   99a70:   52800482    mov w2, #0x24
   99a74:   94000c13    bl  9cac0 <assertion_failed>
   99a78:   aa0103e2    mov x2, x1
   99a7c:   d503201f    nop
   99a80:   eb04005f    cmp x2, x4
   99a84:   54000060    b.eq    99a90 <CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)+0x160>
   99a88:   f9001402    str x2, [x0, #40]
   99a8c:   d65f03c0    ret
   99a90:   52800021    mov w1, #0x1
   99a94:   39003001    strb    w1, [x0, #12]
   99a98:   d65f03c0    ret
   99a9c:   d503201f    nop

0000000000099aa0 <CUSBConfigurationParser::CUSBConfigurationParser(CUSBConfigurationParser*)>:
   99aa0:   b40001c1    cbz x1, 99ad8 <CUSBConfigurationParser::CUSBConfigurationParser(CUSBConfigurationParser*)+0x38>
   99aa4:   f9400024    ldr x4, [x1]
   99aa8:   39403022    ldrb    w2, [x1, #12]
   99aac:   b9400823    ldr w3, [x1, #8]
   99ab0:   f9000004    str x4, [x0]
   99ab4:   39003002    strb    w2, [x0, #12]
   99ab8:   f9401022    ldr x2, [x1, #32]
   99abc:   b9000803    str w3, [x0, #8]
   99ac0:   a9410c24    ldp x4, x3, [x1, #16]
   99ac4:   f9001002    str x2, [x0, #32]
   99ac8:   f9401421    ldr x1, [x1, #40]
   99acc:   a9010c04    stp x4, x3, [x0, #16]
   99ad0:   f9001401    str x1, [x0, #40]
   99ad4:   d65f03c0    ret
   99ad8:   b00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   99adc:   b00000c0    adrp    x0, b2000 <_etext+0x2f9c>
   99ae0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   99ae4:   911bc021    add x1, x1, #0x6f0
   99ae8:   910003fd    mov x29, sp
   99aec:   911c6000    add x0, x0, #0x718
   99af0:   52801162    mov w2, #0x8b
   99af4:   94000bf3    bl  9cac0 <assertion_failed>
   99af8:   d503201f    nop
   99afc:   d503201f    nop

0000000000099b00 <CUSBConfigurationParser::~CUSBConfigurationParser()>:
   99b00:   d65f03c0    ret
   99b04:   d503201f    nop
   99b08:   d503201f    nop
   99b0c:   d503201f    nop

0000000000099b10 <CUSBConfigurationParser::IsValid() const>:
   99b10:   39403000    ldrb    w0, [x0, #12]
   99b14:   d65f03c0    ret
   99b18:   d503201f    nop
   99b1c:   d503201f    nop

0000000000099b20 <CUSBConfigurationParser::GetDescriptor(unsigned char)>:
   99b20:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   99b24:   aa0003e5    mov x5, x0
   99b28:   910003fd    mov x29, sp
   99b2c:   39403000    ldrb    w0, [x0, #12]
   99b30:   36000460    tbz w0, #0, 99bbc <CUSBConfigurationParser::GetDescriptor(unsigned char)+0x9c>
   99b34:   a94108a4    ldp x4, x2, [x5, #16]
   99b38:   12001c21    and w1, w1, #0xff
   99b3c:   eb02009f    cmp x4, x2
   99b40:   54000148    b.hi    99b68 <CUSBConfigurationParser::GetDescriptor(unsigned char)+0x48>
   99b44:   1400001a    b   99bac <CUSBConfigurationParser::GetDescriptor(unsigned char)+0x8c>
   99b48:   7100143f    cmp w1, #0x5
   99b4c:   7a440860    ccmp    w3, #0x4, #0x0, eq
   99b50:   540002e0    b.eq    99bac <CUSBConfigurationParser::GetDescriptor(unsigned char)+0x8c>
   99b54:   6b01007f    cmp w3, w1
   99b58:   54000200    b.eq    99b98 <CUSBConfigurationParser::GetDescriptor(unsigned char)+0x78>
   99b5c:   eb02009f    cmp x4, x2
   99b60:   f9000ca2    str x2, [x5, #24]
   99b64:   54000249    b.ls    99bac <CUSBConfigurationParser::GetDescriptor(unsigned char)+0x8c>
   99b68:   39400046    ldrb    w6, [x2]
   99b6c:   aa0203e0    mov x0, x2
   99b70:   39400443    ldrb    w3, [x2, #1]
   99b74:   8b060042    add x2, x2, x6
   99b78:   eb02009f    cmp x4, x2
   99b7c:   54fffe62    b.cs    99b48 <CUSBConfigurationParser::GetDescriptor(unsigned char)+0x28>
   99b80:   b00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   99b84:   b00000c0    adrp    x0, b2000 <_etext+0x2f9c>
   99b88:   911bc021    add x1, x1, #0x6f0
   99b8c:   911ce000    add x0, x0, #0x738
   99b90:   52801642    mov w2, #0xb2
   99b94:   94000bcb    bl  9cac0 <assertion_failed>
   99b98:   f9000ca2    str x2, [x5, #24]
   99b9c:   f90010a0    str x0, [x5, #32]
   99ba0:   f90014a0    str x0, [x5, #40]
   99ba4:   a8c17bfd    ldp x29, x30, [sp], #16
   99ba8:   d65f03c0    ret
   99bac:   d2800000    mov x0, #0x0
   99bb0:   f90010a0    str x0, [x5, #32]
   99bb4:   a8c17bfd    ldp x29, x30, [sp], #16
   99bb8:   d65f03c0    ret
   99bbc:   b00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   99bc0:   b00000c0    adrp    x0, b2000 <_etext+0x2f9c>
   99bc4:   911bc021    add x1, x1, #0x6f0
   99bc8:   911ca000    add x0, x0, #0x728
   99bcc:   52801502    mov w2, #0xa8
   99bd0:   94000bbc    bl  9cac0 <assertion_failed>
   99bd4:   d503201f    nop
   99bd8:   d503201f    nop
   99bdc:   d503201f    nop

0000000000099be0 <CUSBConfigurationParser::GetCurrentDescriptor()>:
   99be0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   99be4:   910003fd    mov x29, sp
   99be8:   39403001    ldrb    w1, [x0, #12]
   99bec:   360000a1    tbz w1, #0, 99c00 <CUSBConfigurationParser::GetCurrentDescriptor()+0x20>
   99bf0:   f9401000    ldr x0, [x0, #32]
   99bf4:   b4000120    cbz x0, 99c18 <CUSBConfigurationParser::GetCurrentDescriptor()+0x38>
   99bf8:   a8c17bfd    ldp x29, x30, [sp], #16
   99bfc:   d65f03c0    ret
   99c00:   b00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   99c04:   b00000c0    adrp    x0, b2000 <_etext+0x2f9c>
   99c08:   911bc021    add x1, x1, #0x6f0
   99c0c:   911ca000    add x0, x0, #0x728
   99c10:   52801a02    mov w2, #0xd0
   99c14:   94000bab    bl  9cac0 <assertion_failed>
   99c18:   b00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   99c1c:   b00000c0    adrp    x0, b2000 <_etext+0x2f9c>
   99c20:   911bc021    add x1, x1, #0x6f0
   99c24:   911d6000    add x0, x0, #0x758
   99c28:   52801a22    mov w2, #0xd1
   99c2c:   94000ba5    bl  9cac0 <assertion_failed>

0000000000099c30 <CUSBConfigurationParser::Error(char const*) const>:
   99c30:   a9be7bfd    stp x29, x30, [sp, #-32]!
   99c34:   910003fd    mov x29, sp
   99c38:   a90153f3    stp x19, x20, [sp, #16]
   99c3c:   b4000241    cbz x1, 99c84 <CUSBConfigurationParser::Error(char const*) const+0x54>
   99c40:   aa0003f3    mov x19, x0
   99c44:   aa0103f4    mov x20, x1
   99c48:   9400166e    bl  9f600 <CLogger::Get()>
   99c4c:   f9400264    ldr x4, [x19]
   99c50:   b00000c3    adrp    x3, b2000 <_etext+0x2f9c>
   99c54:   aa1403e1    mov x1, x20
   99c58:   911de063    add x3, x3, #0x778
   99c5c:   52800022    mov w2, #0x1
   99c60:   f9401665    ldr x5, [x19, #40]
   99c64:   4b0400a4    sub w4, w5, w4
   99c68:   9400184e    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   99c6c:   f9400260    ldr x0, [x19]
   99c70:   aa1403e2    mov x2, x20
   99c74:   b9400a61    ldr w1, [x19, #8]
   99c78:   a94153f3    ldp x19, x20, [sp, #16]
   99c7c:   a8c27bfd    ldp x29, x30, [sp], #32
   99c80:   14000d5c    b   9d1f0 <debug_hexdump(void const*, unsigned int, char const*)>
   99c84:   b00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   99c88:   f00000a0    adrp    x0, b0000 <_etext+0xf9c>
   99c8c:   911bc021    add x1, x1, #0x6f0
   99c90:   9130a000    add x0, x0, #0xc28
   99c94:   52801b02    mov w2, #0xd8
   99c98:   94000b8a    bl  9cac0 <assertion_failed>
   99c9c:   00000000    udf #0

0000000000099ca0 <CUSBGamePadDevice::GetInitialState()>:
   99ca0:   91012000    add x0, x0, #0x48
   99ca4:   d65f03c0    ret
   99ca8:   d503201f    nop
   99cac:   d503201f    nop

0000000000099cb0 <CUSBGamePadDevice::Configure()>:
   99cb0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   99cb4:   910003fd    mov x29, sp
   99cb8:   7942a001    ldrh    w1, [x0, #336]
   99cbc:   a90153f3    stp x19, x20, [sp, #16]
   99cc0:   340004c1    cbz w1, 99d58 <CUSBGamePadDevice::Configure()+0xa8>
   99cc4:   aa0003f3    mov x19, x0
   99cc8:   97ffcdd6    bl  8d420 <CUSBHIDDevice::ConfigureHID(unsigned int)>
   99ccc:   2a0003f4    mov w20, w0
   99cd0:   360002f4    tbz w20, #0, 99d2c <CUSBGamePadDevice::Configure()+0x7c>
   99cd4:   b9415660    ldr w0, [x19, #340]
   99cd8:   f90013f5    str x21, [sp, #32]
   99cdc:   350004c0    cbnz    w0, 99d74 <CUSBGamePadDevice::Configure()+0xc4>
   99ce0:   900000f5    adrp    x21, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   99ce4:   912082b5    add x21, x21, #0x820
   99ce8:   b0000100    adrp    x0, ba000 <font_data+0x1080>
   99cec:   aa1503e2    mov x2, x21
   99cf0:   52800021    mov w1, #0x1
   99cf4:   91240000    add x0, x0, #0x900
   99cf8:   9400385a    bl  a7e60 <CNumberPool::AllocateNumber(bool, char const*)>
   99cfc:   b9015660    str w0, [x19, #340]
   99d00:   94000f58    bl  9da60 <CDeviceNameService::Get()>
   99d04:   b9415662    ldr w2, [x19, #340]
   99d08:   910022a1    add x1, x21, #0x8
   99d0c:   aa1303e3    mov x3, x19
   99d10:   52800004    mov w4, #0x0
   99d14:   94000f5f    bl  9da90 <CDeviceNameService::AddDevice(char const*, unsigned int, CDevice*, bool)>
   99d18:   f94013f5    ldr x21, [sp, #32]
   99d1c:   2a1403e0    mov w0, w20
   99d20:   a94153f3    ldp x19, x20, [sp, #16]
   99d24:   a8c37bfd    ldp x29, x30, [sp], #48
   99d28:   d65f03c0    ret
   99d2c:   94001635    bl  9f600 <CLogger::Get()>
   99d30:   d00000a3    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   99d34:   900000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   99d38:   9107c063    add x3, x3, #0x1f0
   99d3c:   91208021    add x1, x1, #0x820
   99d40:   52800022    mov w2, #0x1
   99d44:   94001817    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   99d48:   2a1403e0    mov w0, w20
   99d4c:   a94153f3    ldp x19, x20, [sp, #16]
   99d50:   a8c37bfd    ldp x29, x30, [sp], #48
   99d54:   d65f03c0    ret
   99d58:   b00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   99d5c:   f00000a0    adrp    x0, b0000 <_etext+0xf9c>
   99d60:   f90013f5    str x21, [sp, #32]
   99d64:   911ea021    add x1, x1, #0x7a8
   99d68:   9135a000    add x0, x0, #0xd68
   99d6c:   52800742    mov w2, #0x3a
   99d70:   94000b54    bl  9cac0 <assertion_failed>
   99d74:   b00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   99d78:   900000c0    adrp    x0, b1000 <_etext+0x1f9c>
   99d7c:   911ea021    add x1, x1, #0x7a8
   99d80:   9106a000    add x0, x0, #0x1a8
   99d84:   52800842    mov w2, #0x42
   99d88:   94000b4e    bl  9cac0 <assertion_failed>
   99d8c:   d503201f    nop

0000000000099d90 <CUSBGamePadDevice::ReportHandler(unsigned char const*, unsigned int)>:
   99d90:   b4000321    cbz x1, 99df4 <CUSBGamePadDevice::ReportHandler(unsigned char const*, unsigned int)+0x64>
   99d94:   a9be7bfd    stp x29, x30, [sp, #-32]!
   99d98:   910003fd    mov x29, sp
   99d9c:   7942a003    ldrh    w3, [x0, #336]
   99da0:   a90153f3    stp x19, x20, [sp, #16]
   99da4:   aa0003f3    mov x19, x0
   99da8:   6b02007f    cmp w3, w2
   99dac:   54000080    b.eq    99dbc <CUSBGamePadDevice::ReportHandler(unsigned char const*, unsigned int)+0x2c>
   99db0:   a94153f3    ldp x19, x20, [sp, #16]
   99db4:   a8c27bfd    ldp x29, x30, [sp], #32
   99db8:   d65f03c0    ret
   99dbc:   f940a402    ldr x2, [x0, #328]
   99dc0:   b4ffff82    cbz x2, 99db0 <CUSBGamePadDevice::ReportHandler(unsigned char const*, unsigned int)+0x20>
   99dc4:   aa0003f4    mov x20, x0
   99dc8:   f8448682    ldr x2, [x20], #72
   99dcc:   f9404c42    ldr x2, [x2, #152]
   99dd0:   d63f0040    blr x2
   99dd4:   f940a662    ldr x2, [x19, #328]
   99dd8:   aa1403e1    mov x1, x20
   99ddc:   b9415660    ldr w0, [x19, #340]
   99de0:   a94153f3    ldp x19, x20, [sp, #16]
   99de4:   aa0203f0    mov x16, x2
   99de8:   a8c27bfd    ldp x29, x30, [sp], #32
   99dec:   51000400    sub w0, w0, #0x1
   99df0:   d61f0200    br  x16
   99df4:   d65f03c0    ret
   99df8:   d503201f    nop
   99dfc:   d503201f    nop

0000000000099e00 <CUSBGamePadDevice::RegisterStatusHandler(void (*)(unsigned int, TGamePadState const*))>:
   99e00:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   99e04:   910003fd    mov x29, sp
   99e08:   f940a402    ldr x2, [x0, #328]
   99e0c:   b50000a2    cbnz    x2, 99e20 <CUSBGamePadDevice::RegisterStatusHandler(void (*)(unsigned int, TGamePadState const*))+0x20>
   99e10:   f900a401    str x1, [x0, #328]
   99e14:   b4000121    cbz x1, 99e38 <CUSBGamePadDevice::RegisterStatusHandler(void (*)(unsigned int, TGamePadState const*))+0x38>
   99e18:   a8c17bfd    ldp x29, x30, [sp], #16
   99e1c:   d65f03c0    ret
   99e20:   b00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   99e24:   b00000c0    adrp    x0, b2000 <_etext+0x2f9c>
   99e28:   911ea021    add x1, x1, #0x7a8
   99e2c:   911ee000    add x0, x0, #0x7b8
   99e30:   52800a22    mov w2, #0x51
   99e34:   94000b23    bl  9cac0 <assertion_failed>
   99e38:   b00000c1    adrp    x1, b2000 <_etext+0x2f9c>
   99e3c:   b00000c0    adrp    x0, b2000 <_etext+0x2f9c>
   99e40:   911ea021    add x1, x1, #0x7a8
   99e44:   911f4000    add x0, x0, #0x7d0
   99e48:   52800a62    mov w2, #0x53
   99e4c:   94000b1d    bl  9cac0 <assertion_failed>

0000000000099e50 <CUSBGamePadDevice::CUSBGamePadDevice(CUSBFunction*)>:
   99e50:   a9be7bfd    stp x29, x30, [sp, #-32]!
   99e54:   52800002    mov w2, #0x0
   99e58:   910003fd    mov x29, sp
   99e5c:   f9000bf3    str x19, [sp, #16]
   99e60:   aa0003f3    mov x19, x0
   99e64:   97ffcd2b    bl  8d310 <CUSBHIDDevice::CUSBHIDDevice(CUSBFunction*, unsigned int)>
   99e68:   900000e3    adrp    x3, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   99e6c:   911e0063    add x3, x3, #0x780
   99e70:   f900a67f    str xzr, [x19, #328]
   99e74:   91012260    add x0, x19, #0x48
   99e78:   d2802002    mov x2, #0x100
   99e7c:   7902a27f    strh    wzr, [x19, #336]
   99e80:   52800001    mov w1, #0x0
   99e84:   f9000263    str x3, [x19]
   99e88:   b901567f    str wzr, [x19, #340]
   99e8c:   f9400bf3    ldr x19, [sp, #16]
   99e90:   a8c27bfd    ldp x29, x30, [sp], #32
   99e94:   140033a1    b   a6d18 <memset>
   99e98:   d503201f    nop
   99e9c:   d503201f    nop

0000000000099ea0 <CUSBGamePadDevice::~CUSBGamePadDevice()>:
   99ea0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   99ea4:   910003fd    mov x29, sp
   99ea8:   900000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   99eac:   911e0021    add x1, x1, #0x780
   99eb0:   f9000bf3    str x19, [sp, #16]
   99eb4:   aa0003f3    mov x19, x0
   99eb8:   b9415400    ldr w0, [x0, #340]
   99ebc:   f9000261    str x1, [x19]
   99ec0:   f900a67f    str xzr, [x19, #328]
   99ec4:   350000a0    cbnz    w0, 99ed8 <CUSBGamePadDevice::~CUSBGamePadDevice()+0x38>
   99ec8:   aa1303e0    mov x0, x19
   99ecc:   f9400bf3    ldr x19, [sp, #16]
   99ed0:   a8c27bfd    ldp x29, x30, [sp], #32
   99ed4:   17ffcd27    b   8d370 <CUSBHIDDevice::~CUSBHIDDevice()>
   99ed8:   94000ee2    bl  9da60 <CDeviceNameService::Get()>
   99edc:   b9415662    ldr w2, [x19, #340]
   99ee0:   900000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   99ee4:   91208021    add x1, x1, #0x820
   99ee8:   52800003    mov w3, #0x0
   99eec:   91002021    add x1, x1, #0x8
   99ef0:   94000f08    bl  9db10 <CDeviceNameService::RemoveDevice(char const*, unsigned int, bool)>
   99ef4:   b9415661    ldr w1, [x19, #340]
   99ef8:   b0000100    adrp    x0, ba000 <font_data+0x1080>
   99efc:   91240000    add x0, x0, #0x900
   99f00:   94003808    bl  a7f20 <CNumberPool::FreeNumber(unsigned int)>
   99f04:   aa1303e0    mov x0, x19
   99f08:   f9400bf3    ldr x19, [sp, #16]
   99f0c:   a8c27bfd    ldp x29, x30, [sp], #32
   99f10:   17ffcd18    b   8d370 <CUSBHIDDevice::~CUSBHIDDevice()>
   99f14:   d503201f    nop
   99f18:   d503201f    nop
   99f1c:   d503201f    nop

0000000000099f20 <CUSBGamePadDevice::~CUSBGamePadDevice()>:
   99f20:   a9be7bfd    stp x29, x30, [sp, #-32]!
   99f24:   910003fd    mov x29, sp
   99f28:   f9000bf3    str x19, [sp, #16]
   99f2c:   aa0003f3    mov x19, x0
   99f30:   97ffffdc    bl  99ea0 <CUSBGamePadDevice::~CUSBGamePadDevice()>
   99f34:   aa1303e0    mov x0, x19
   99f38:   f9400bf3    ldr x19, [sp, #16]
   99f3c:   d2802b01    mov x1, #0x158
   99f40:   a8c27bfd    ldp x29, x30, [sp], #32
   99f44:   14003647    b   a7860 <operator delete(void*, unsigned long)>
    ...

0000000000099f50 <_GLOBAL__sub_I__ZN17CUSBGamePadDevice18s_DeviceNumberPoolE>:
   99f50:   a9be7bfd    stp x29, x30, [sp, #-32]!
   99f54:   910003fd    mov x29, sp
   99f58:   528007e2    mov w2, #0x3f
   99f5c:   52800021    mov w1, #0x1
   99f60:   f9000bf3    str x19, [sp, #16]
   99f64:   b0000113    adrp    x19, ba000 <font_data+0x1080>
   99f68:   91240273    add x19, x19, #0x900
   99f6c:   aa1303e0    mov x0, x19
   99f70:   940037a0    bl  a7df0 <CNumberPool::CNumberPool(unsigned int, unsigned int)>
   99f74:   b0000102    adrp    x2, ba000 <font_data+0x1080>
   99f78:   d0000060    adrp    x0, a7000 <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int, bool)+0xd0>
   99f7c:   aa1303e1    mov x1, x19
   99f80:   f9400bf3    ldr x19, [sp, #16]
   99f84:   91278042    add x2, x2, #0x9e0
   99f88:   a8c27bfd    ldp x29, x30, [sp], #32
   99f8c:   91394000    add x0, x0, #0xe50
   99f90:   14002d80    b   a5590 <__cxa_atexit>
    ...

0000000000099fa0 <CUSBMIDIDevice::~CUSBMIDIDevice()>:
   99fa0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   99fa4:   900000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   99fa8:   91210021    add x1, x1, #0x840
   99fac:   910003fd    mov x29, sp
   99fb0:   f9000bf3    str x19, [sp, #16]
   99fb4:   aa0003f3    mov x19, x0
   99fb8:   f9000001    str x1, [x0]
   99fbc:   94000ea9    bl  9da60 <CDeviceNameService::Get()>
   99fc0:   b9403662    ldr w2, [x19, #52]
   99fc4:   900000e1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   99fc8:   52800003    mov w3, #0x0
   99fcc:   91220021    add x1, x1, #0x880
   99fd0:   94000ed0    bl  9db10 <CDeviceNameService::RemoveDevice(char const*, unsigned int, bool)>
   99fd4:   b9403661    ldr w1, [x19, #52]
   99fd8:   b0000100    adrp    x0, ba000 <font_data+0x1080>
   99fdc:   91244000    add x0, x0, #0x910
   99fe0:   940037d0    bl  a7f20 <CNumberPool::FreeNumber(unsigned int)>
   99fe4:   aa1303e0    mov x0, x19
   99fe8:   f9400bf3    ldr x19, [sp, #16]
   99fec:   a8c27bfd    ldp x29, x30, [sp], #32
   99ff0:   14000d08    b   9d410 <CDevice::~CDevice()>
   99ff4:   d503201f    nop
   99ff8:   d503201f    nop
   99ffc:   d503201f    nop

000000000009a000 <ProxyHandler(unsigned int, unsigned char*, unsigned int, unsigned int, void*)>:
   9a000:   b4000064    cbz x4, 9a00c <ProxyHandler(unsigned int, unsigned char*, unsigned int, unsigned int, void*)+0xc>
   9a004:   aa0403f0    mov x16, x4
   9a008:   d61f0200    br  x16
   9a00c:   900000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9a010:   900000c0    adrp    x0, b2000 <_etext+0x2f9c>
   9a014:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   9a018:   911fa021    add x1, x1, #0x7e8
   9a01c:   910003fd    mov x29, sp
   9a020:   911fe000    add x0, x0, #0x7f8
   9a024:   528007c2    mov w2, #0x3e
   9a028:   94000aa6    bl  9cac0 <assertion_failed>
   9a02c:   d503201f    nop

000000000009a030 <CUSBMIDIDevice::~CUSBMIDIDevice()>:
   9a030:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9a034:   f00000c1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9a038:   91210021    add x1, x1, #0x840
   9a03c:   910003fd    mov x29, sp
   9a040:   f9000bf3    str x19, [sp, #16]
   9a044:   aa0003f3    mov x19, x0
   9a048:   f9000001    str x1, [x0]
   9a04c:   94000e85    bl  9da60 <CDeviceNameService::Get()>
   9a050:   f00000c1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9a054:   b9403662    ldr w2, [x19, #52]
   9a058:   52800003    mov w3, #0x0
   9a05c:   91220021    add x1, x1, #0x880
   9a060:   94000eac    bl  9db10 <CDeviceNameService::RemoveDevice(char const*, unsigned int, bool)>
   9a064:   b9403661    ldr w1, [x19, #52]
   9a068:   90000100    adrp    x0, ba000 <font_data+0x1080>
   9a06c:   91244000    add x0, x0, #0x910
   9a070:   940037ac    bl  a7f20 <CNumberPool::FreeNumber(unsigned int)>
   9a074:   aa1303e0    mov x0, x19
   9a078:   94000ce6    bl  9d410 <CDevice::~CDevice()>
   9a07c:   aa1303e0    mov x0, x19
   9a080:   f9400bf3    ldr x19, [sp, #16]
   9a084:   d2800701    mov x1, #0x38
   9a088:   a8c27bfd    ldp x29, x30, [sp], #32
   9a08c:   140035f5    b   a7860 <operator delete(void*, unsigned long)>

000000000009a090 <CUSBMIDIDevice::CUSBMIDIDevice()>:
   9a090:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9a094:   910003fd    mov x29, sp
   9a098:   a90153f3    stp x19, x20, [sp, #16]
   9a09c:   aa0003f3    mov x19, x0
   9a0a0:   f00000d4    adrp    x20, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9a0a4:   91220294    add x20, x20, #0x880
   9a0a8:   94000d0e    bl  9d4e0 <CDevice::CDevice()>
   9a0ac:   f00000c1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9a0b0:   91210021    add x1, x1, #0x840
   9a0b4:   f9000a7f    str xzr, [x19, #16]
   9a0b8:   90000100    adrp    x0, ba000 <font_data+0x1080>
   9a0bc:   91002282    add x2, x20, #0x8
   9a0c0:   f900127f    str xzr, [x19, #32]
   9a0c4:   91244000    add x0, x0, #0x910
   9a0c8:   f9000261    str x1, [x19]
   9a0cc:   52800021    mov w1, #0x1
   9a0d0:   3900c27f    strb    wzr, [x19, #48]
   9a0d4:   94003763    bl  a7e60 <CNumberPool::AllocateNumber(bool, char const*)>
   9a0d8:   b9003660    str w0, [x19, #52]
   9a0dc:   94000e61    bl  9da60 <CDeviceNameService::Get()>
   9a0e0:   b9403662    ldr w2, [x19, #52]
   9a0e4:   aa1403e1    mov x1, x20
   9a0e8:   aa1303e3    mov x3, x19
   9a0ec:   a94153f3    ldp x19, x20, [sp, #16]
   9a0f0:   52800004    mov w4, #0x0
   9a0f4:   a8c27bfd    ldp x29, x30, [sp], #32
   9a0f8:   14000e66    b   9da90 <CDeviceNameService::AddDevice(char const*, unsigned int, CDevice*, bool)>
   9a0fc:   d503201f    nop

000000000009a100 <CUSBMIDIDevice::RegisterPacketHandler(void (*)(unsigned int, unsigned char*, unsigned int))>:
   9a100:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   9a104:   910003fd    mov x29, sp
   9a108:   b4000121    cbz x1, 9a12c <CUSBMIDIDevice::RegisterPacketHandler(void (*)(unsigned int, unsigned char*, unsigned int))+0x2c>
   9a10c:   f9400802    ldr x2, [x0, #16]
   9a110:   f9000c01    str x1, [x0, #24]
   9a114:   b5000182    cbnz    x2, 9a144 <CUSBMIDIDevice::RegisterPacketHandler(void (*)(unsigned int, unsigned char*, unsigned int))+0x44>
   9a118:   90000001    adrp    x1, 9a000 <ProxyHandler(unsigned int, unsigned char*, unsigned int, unsigned int, void*)>
   9a11c:   91000021    add x1, x1, #0x0
   9a120:   f9000801    str x1, [x0, #16]
   9a124:   a8c17bfd    ldp x29, x30, [sp], #16
   9a128:   d65f03c0    ret
   9a12c:   900000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9a130:   900000c0    adrp    x0, b2000 <_etext+0x2f9c>
   9a134:   911fa021    add x1, x1, #0x7e8
   9a138:   91200000    add x0, x0, #0x800
   9a13c:   52800882    mov w2, #0x44
   9a140:   94000a60    bl  9cac0 <assertion_failed>
   9a144:   900000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9a148:   900000c0    adrp    x0, b2000 <_etext+0x2f9c>
   9a14c:   911fa021    add x1, x1, #0x7e8
   9a150:   91204000    add x0, x0, #0x810
   9a154:   52800982    mov w2, #0x4c
   9a158:   94000a5a    bl  9cac0 <assertion_failed>
   9a15c:   d503201f    nop

000000000009a160 <CUSBMIDIDevice::RegisterPacketHandler(void (*)(unsigned int, unsigned char*, unsigned int, unsigned int, void*), void*)>:
   9a160:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   9a164:   910003fd    mov x29, sp
   9a168:   f9400803    ldr x3, [x0, #16]
   9a16c:   f9000c02    str x2, [x0, #24]
   9a170:   b50000a3    cbnz    x3, 9a184 <CUSBMIDIDevice::RegisterPacketHandler(void (*)(unsigned int, unsigned char*, unsigned int, unsigned int, void*), void*)+0x24>
   9a174:   f9000801    str x1, [x0, #16]
   9a178:   b4000121    cbz x1, 9a19c <CUSBMIDIDevice::RegisterPacketHandler(void (*)(unsigned int, unsigned char*, unsigned int, unsigned int, void*), void*)+0x3c>
   9a17c:   a8c17bfd    ldp x29, x30, [sp], #16
   9a180:   d65f03c0    ret
   9a184:   900000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9a188:   900000c0    adrp    x0, b2000 <_etext+0x2f9c>
   9a18c:   911fa021    add x1, x1, #0x7e8
   9a190:   91204000    add x0, x0, #0x810
   9a194:   52800982    mov w2, #0x4c
   9a198:   94000a4a    bl  9cac0 <assertion_failed>
   9a19c:   900000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9a1a0:   900000c0    adrp    x0, b2000 <_etext+0x2f9c>
   9a1a4:   911fa021    add x1, x1, #0x7e8
   9a1a8:   9120a000    add x0, x0, #0x828
   9a1ac:   528009c2    mov w2, #0x4e
   9a1b0:   94000a44    bl  9cac0 <assertion_failed>
   9a1b4:   d503201f    nop
   9a1b8:   d503201f    nop
   9a1bc:   d503201f    nop

000000000009a1c0 <CUSBMIDIDevice::SendEventPackets(unsigned char const*, unsigned int)>:
   9a1c0:   aa0003e3    mov x3, x0
   9a1c4:   aa0103e0    mov x0, x1
   9a1c8:   f9401064    ldr x4, [x3, #32]
   9a1cc:   2a0203e1    mov w1, w2
   9a1d0:   b4000084    cbz x4, 9a1e0 <CUSBMIDIDevice::SendEventPackets(unsigned char const*, unsigned int)+0x20>
   9a1d4:   f9401462    ldr x2, [x3, #40]
   9a1d8:   aa0403f0    mov x16, x4
   9a1dc:   d61f0200    br  x16
   9a1e0:   52800000    mov w0, #0x0
   9a1e4:   d65f03c0    ret
   9a1e8:   d503201f    nop
   9a1ec:   d503201f    nop

000000000009a1f0 <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)>:
   9a1f0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9a1f4:   910003fd    mov x29, sp
   9a1f8:   71003c3f    cmp w1, #0xf
   9a1fc:   f9000bf3    str x19, [sp, #16]
   9a200:   54001628    b.hi    9a4c4 <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)+0x2d4>
   9a204:   b4001802    cbz x2, 9a504 <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)+0x314>
   9a208:   340018a3    cbz w3, 9a51c <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)+0x32c>
   9a20c:   531e7464    lsl w4, w3, #2
   9a210:   531c0c29    ubfiz   w9, w1, #4, #4
   9a214:   8b234048    add x8, x2, w3, uxtw
   9a218:   91003c84    add x4, x4, #0xf
   9a21c:   f00000ca    adrp    x10, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9a220:   9122014a    add x10, x10, #0x880
   9a224:   927c7084    and x4, x4, #0x1fffffff0
   9a228:   cb2463ff    sub sp, sp, x4
   9a22c:   aa0003eb    mov x11, x0
   9a230:   9100414a    add x10, x10, #0x10
   9a234:   910003e0    mov x0, sp
   9a238:   910003e3    mov x3, sp
   9a23c:   321e012d    orr w13, w9, #0x4
   9a240:   d280000c    mov x12, #0x0
   9a244:   52800005    mov w5, #0x0
   9a248:   52800006    mov w6, #0x0
   9a24c:   d2800001    mov x1, #0x0
   9a250:   d280002f    mov x15, #0x1
   9a254:   d28dd40e    mov x14, #0x6ea0
   9a258:   1400000f    b   9a294 <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)+0xa4>
   9a25c:   7103be7f    cmp w19, #0xef
   9a260:   54000508    b.hi    9a300 <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)+0x110>
   9a264:   53047e64    lsr w4, w19, #4
   9a268:   91000421    add x1, x1, #0x1
   9a26c:   b8647945    ldr w5, [x10, x4, lsl #2]
   9a270:   2a040126    orr w6, w9, w4
   9a274:   38001466    strb    w6, [x3], #1
   9a278:   710004a5    subs    w5, w5, #0x1
   9a27c:   38001473    strb    w19, [x3], #1
   9a280:   91000421    add x1, x1, #0x1
   9a284:   52800026    mov w6, #0x1
   9a288:   54000660    b.eq    9a354 <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)+0x164>
   9a28c:   eb02011f    cmp x8, x2
   9a290:   54000240    b.eq    9a2d8 <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)+0xe8>
   9a294:   710004df    cmp w6, #0x1
   9a298:   38401453    ldrb    w19, [x2], #1
   9a29c:   54fffee0    b.eq    9a278 <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)+0x88>
   9a2a0:   710008df    cmp w6, #0x2
   9a2a4:   54fffdc1    b.ne    9a25c <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)+0x6c>
   9a2a8:   71000cbf    cmp w5, #0x3
   9a2ac:   aa0303e7    mov x7, x3
   9a2b0:   540006a0    b.eq    9a384 <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)+0x194>
   9a2b4:   7103de7f    cmp w19, #0xf7
   9a2b8:   380014f3    strb    w19, [x7], #1
   9a2bc:   91000421    add x1, x1, #0x1
   9a2c0:   110004a4    add w4, w5, #0x1
   9a2c4:   54000840    b.eq    9a3cc <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)+0x1dc>
   9a2c8:   eb02011f    cmp x8, x2
   9a2cc:   2a0403e5    mov w5, w4
   9a2d0:   aa0703e3    mov x3, x7
   9a2d4:   54fffe01    b.ne    9a294 <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)+0xa4>
   9a2d8:   35001026    cbnz    w6, 9a4dc <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)+0x2ec>
   9a2dc:   f9401163    ldr x3, [x11, #32]
   9a2e0:   b4000d63    cbz x3, 9a48c <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)+0x29c>
   9a2e4:   f9401562    ldr x2, [x11, #40]
   9a2e8:   d63f0060    blr x3
   9a2ec:   12001c00    and w0, w0, #0xff
   9a2f0:   910003bf    mov sp, x29
   9a2f4:   f9400bf3    ldr x19, [sp, #16]
   9a2f8:   a8c27bfd    ldp x29, x30, [sp], #32
   9a2fc:   d65f03c0    ret
   9a300:   7103c27f    cmp w19, #0xf0
   9a304:   54000900    b.eq    9a424 <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)+0x234>
   9a308:   11003e64    add w4, w19, #0xf
   9a30c:   9ac421e4    lsl x4, x15, x4
   9a310:   ea0e009f    tst x4, x14
   9a314:   540009c1    b.ne    9a44c <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)+0x25c>
   9a318:   d28000a5    mov x5, #0x5
   9a31c:   ea05009f    tst x4, x5
   9a320:   54000441    b.ne    9a3a8 <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)+0x1b8>
   9a324:   7103ca7f    cmp w19, #0xf2
   9a328:   54000a01    b.ne    9a468 <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)+0x278>
   9a32c:   32000525    orr w5, w9, #0x3
   9a330:   aa0303e4    mov x4, x3
   9a334:   128001a7    mov w7, #0xfffffff2
   9a338:   91000821    add x1, x1, #0x2
   9a33c:   38002485    strb    w5, [x4], #2
   9a340:   52800026    mov w6, #0x1
   9a344:   52800045    mov w5, #0x2
   9a348:   39000467    strb    w7, [x3, #1]
   9a34c:   aa0403e3    mov x3, x4
   9a350:   17ffffcf    b   9a28c <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)+0x9c>
   9a354:   aa0303e4    mov x4, x3
   9a358:   f240043f    tst x1, #0x3
   9a35c:   aa0403e3    mov x3, x4
   9a360:   cb040024    sub x4, x1, x4
   9a364:   540000a0    b.eq    9a378 <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)+0x188>
   9a368:   3800147f    strb    wzr, [x3], #1
   9a36c:   8b040061    add x1, x3, x4
   9a370:   f240043f    tst x1, #0x3
   9a374:   54ffffa1    b.ne    9a368 <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)+0x178>
   9a378:   52800005    mov w5, #0x0
   9a37c:   52800006    mov w6, #0x0
   9a380:   17ffffc3    b   9a28c <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)+0x9c>
   9a384:   380024ed    strb    w13, [x7], #2
   9a388:   7103de7f    cmp w19, #0xf7
   9a38c:   91000821    add x1, x1, #0x2
   9a390:   39000473    strb    w19, [x3, #1]
   9a394:   54000880    b.eq    9a4a4 <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)+0x2b4>
   9a398:   aa0303ec    mov x12, x3
   9a39c:   52800025    mov w5, #0x1
   9a3a0:   aa0703e3    mov x3, x7
   9a3a4:   17ffffba    b   9a28c <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)+0x9c>
   9a3a8:   321f0126    orr w6, w9, #0x2
   9a3ac:   aa0303e4    mov x4, x3
   9a3b0:   52800025    mov w5, #0x1
   9a3b4:   91000821    add x1, x1, #0x2
   9a3b8:   38002486    strb    w6, [x4], #2
   9a3bc:   2a0503e6    mov w6, w5
   9a3c0:   39000473    strb    w19, [x3, #1]
   9a3c4:   aa0403e3    mov x3, x4
   9a3c8:   17ffffb1    b   9a28c <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)+0x9c>
   9a3cc:   110014a3    add w3, w5, #0x5
   9a3d0:   7100089f    cmp w4, #0x2
   9a3d4:   2a030123    orr w3, w9, w3
   9a3d8:   110008a6    add w6, w5, #0x2
   9a3dc:   39000183    strb    w3, [x12]
   9a3e0:   540005a8    b.hi    9a494 <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)+0x2a4>
   9a3e4:   aa0703f0    mov x16, x7
   9a3e8:   380014ff    strb    wzr, [x7], #1
   9a3ec:   4b1000e3    sub w3, w7, w16
   9a3f0:   0b040063    add w3, w3, w4
   9a3f4:   7100087f    cmp w3, #0x2
   9a3f8:   54ffff89    b.ls    9a3e8 <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)+0x1f8>
   9a3fc:   52800023    mov w3, #0x1
   9a400:   91000421    add x1, x1, #0x1
   9a404:   4b050064    sub w4, w3, w5
   9a408:   0b0300c6    add w6, w6, w3
   9a40c:   91000483    add x3, x4, #0x1
   9a410:   0b060085    add w5, w4, w6
   9a414:   8b040021    add x1, x1, x4
   9a418:   8b030203    add x3, x16, x3
   9a41c:   52800006    mov w6, #0x0
   9a420:   17ffff9b    b   9a28c <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)+0x9c>
   9a424:   aa0303e4    mov x4, x3
   9a428:   128001e7    mov w7, #0xfffffff0
   9a42c:   aa0303ec    mov x12, x3
   9a430:   91000821    add x1, x1, #0x2
   9a434:   3800248d    strb    w13, [x4], #2
   9a438:   52800025    mov w5, #0x1
   9a43c:   52800046    mov w6, #0x2
   9a440:   39000467    strb    w7, [x3, #1]
   9a444:   aa0403e3    mov x3, x4
   9a448:   17ffff91    b   9a28c <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)+0x9c>
   9a44c:   528000a5    mov w5, #0x5
   9a450:   aa0303e4    mov x4, x3
   9a454:   2a050125    orr w5, w9, w5
   9a458:   91000821    add x1, x1, #0x2
   9a45c:   38002485    strb    w5, [x4], #2
   9a460:   39000473    strb    w19, [x3, #1]
   9a464:   17ffffbd    b   9a358 <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)+0x168>
   9a468:   94001466    bl  9f600 <CLogger::Get()>
   9a46c:   f00000c1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9a470:   91220021    add x1, x1, #0x880
   9a474:   900000c3    adrp    x3, b2000 <_etext+0x2f9c>
   9a478:   2a1303e4    mov w4, w19
   9a47c:   91002021    add x1, x1, #0x8
   9a480:   91214063    add x3, x3, #0x850
   9a484:   52800042    mov w2, #0x2
   9a488:   94001646    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   9a48c:   52800000    mov w0, #0x0
   9a490:   17ffff98    b   9a2f0 <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)+0x100>
   9a494:   2a0603e5    mov w5, w6
   9a498:   aa0703e3    mov x3, x7
   9a49c:   52800006    mov w6, #0x0
   9a4a0:   17ffff7b    b   9a28c <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)+0x9c>
   9a4a4:   528000b1    mov w17, #0x5
   9a4a8:   aa0303ec    mov x12, x3
   9a4ac:   2a110131    orr w17, w9, w17
   9a4b0:   aa0703f0    mov x16, x7
   9a4b4:   52800024    mov w4, #0x1
   9a4b8:   52800005    mov w5, #0x0
   9a4bc:   39000071    strb    w17, [x3]
   9a4c0:   17ffffca    b   9a3e8 <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)+0x1f8>
   9a4c4:   900000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9a4c8:   900000c0    adrp    x0, b2000 <_etext+0x2f9c>
   9a4cc:   911fa021    add x1, x1, #0x7e8
   9a4d0:   91210000    add x0, x0, #0x840
   9a4d4:   52800ba2    mov w2, #0x5d
   9a4d8:   9400097a    bl  9cac0 <assertion_failed>
   9a4dc:   94001449    bl  9f600 <CLogger::Get()>
   9a4e0:   f00000c1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9a4e4:   91220021    add x1, x1, #0x880
   9a4e8:   900000c3    adrp    x3, b2000 <_etext+0x2f9c>
   9a4ec:   91002021    add x1, x1, #0x8
   9a4f0:   9121e063    add x3, x3, #0x878
   9a4f4:   52800042    mov w2, #0x2
   9a4f8:   9400162a    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   9a4fc:   52800000    mov w0, #0x0
   9a500:   17ffff7c    b   9a2f0 <CUSBMIDIDevice::SendPlainMIDI(unsigned int, unsigned char const*, unsigned int)+0x100>
   9a504:   900000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9a508:   f00000a0    adrp    x0, b1000 <_etext+0x1f9c>
   9a50c:   911fa021    add x1, x1, #0x7e8
   9a510:   91002000    add x0, x0, #0x8
   9a514:   52800bc2    mov w2, #0x5e
   9a518:   9400096a    bl  9cac0 <assertion_failed>
   9a51c:   900000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9a520:   f00000a0    adrp    x0, b1000 <_etext+0x1f9c>
   9a524:   911fa021    add x1, x1, #0x7e8
   9a528:   91006000    add x0, x0, #0x18
   9a52c:   52800be2    mov w2, #0x5f
   9a530:   94000964    bl  9cac0 <assertion_failed>
   9a534:   d503201f    nop
   9a538:   d503201f    nop
   9a53c:   d503201f    nop

000000000009a540 <CUSBMIDIDevice::SetAllSoundOffOnUSBError(bool)>:
   9a540:   3900c001    strb    w1, [x0, #48]
   9a544:   d65f03c0    ret
   9a548:   d503201f    nop
   9a54c:   d503201f    nop

000000000009a550 <CUSBMIDIDevice::CallPacketHandler(unsigned char*, unsigned int)>:
   9a550:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   9a554:   910003fd    mov x29, sp
   9a558:   a90153f3    stp x19, x20, [sp, #16]
   9a55c:   b4000401    cbz x1, 9a5dc <CUSBMIDIDevice::CallPacketHandler(unsigned char*, unsigned int)+0x8c>
   9a560:   f240045f    tst x2, #0x3
   9a564:   540004a1    b.ne    9a5f8 <CUSBMIDIDevice::CallPacketHandler(unsigned char*, unsigned int)+0xa8>
   9a568:   8b224034    add x20, x1, w2, uxtw
   9a56c:   eb14003f    cmp x1, x20
   9a570:   aa0103f3    mov x19, x1
   9a574:   54000502    b.cs    9a614 <CUSBMIDIDevice::CallPacketHandler(unsigned char*, unsigned int)+0xc4>
   9a578:   a9025bf5    stp x21, x22, [sp, #32]
   9a57c:   f00000d6    adrp    x22, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9a580:   912202d6    add x22, x22, #0x880
   9a584:   aa0003f5    mov x21, x0
   9a588:   910042d6    add x22, x22, #0x10
   9a58c:   52800000    mov w0, #0x0
   9a590:   39400261    ldrb    w1, [x19]
   9a594:   34000161    cbz w1, 9a5c0 <CUSBMIDIDevice::CallPacketHandler(unsigned char*, unsigned int)+0x70>
   9a598:   f9400aa5    ldr x5, [x21, #16]
   9a59c:   b4000105    cbz x5, 9a5bc <CUSBMIDIDevice::CallPacketHandler(unsigned char*, unsigned int)+0x6c>
   9a5a0:   92400c22    and x2, x1, #0xf
   9a5a4:   f9400ea4    ldr x4, [x21, #24]
   9a5a8:   53047c20    lsr w0, w1, #4
   9a5ac:   91000661    add x1, x19, #0x1
   9a5b0:   b8627ac2    ldr w2, [x22, x2, lsl #2]
   9a5b4:   b94036a3    ldr w3, [x21, #52]
   9a5b8:   d63f00a0    blr x5
   9a5bc:   52800020    mov w0, #0x1
   9a5c0:   91001273    add x19, x19, #0x4
   9a5c4:   eb13029f    cmp x20, x19
   9a5c8:   54fffe48    b.hi    9a590 <CUSBMIDIDevice::CallPacketHandler(unsigned char*, unsigned int)+0x40>
   9a5cc:   a9425bf5    ldp x21, x22, [sp, #32]
   9a5d0:   a94153f3    ldp x19, x20, [sp, #16]
   9a5d4:   a8c37bfd    ldp x29, x30, [sp], #48
   9a5d8:   d65f03c0    ret
   9a5dc:   900000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9a5e0:   900000c0    adrp    x0, b2000 <_etext+0x2f9c>
   9a5e4:   a9025bf5    stp x21, x22, [sp, #32]
   9a5e8:   911fa021    add x1, x1, #0x7e8
   9a5ec:   91224000    add x0, x0, #0x890
   9a5f0:   52801d62    mov w2, #0xeb
   9a5f4:   94000933    bl  9cac0 <assertion_failed>
   9a5f8:   900000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9a5fc:   900000c0    adrp    x0, b2000 <_etext+0x2f9c>
   9a600:   a9025bf5    stp x21, x22, [sp, #32]
   9a604:   911fa021    add x1, x1, #0x7e8
   9a608:   91226000    add x0, x0, #0x898
   9a60c:   52801d82    mov w2, #0xec
   9a610:   9400092c    bl  9cac0 <assertion_failed>
   9a614:   52800000    mov w0, #0x0
   9a618:   17ffffee    b   9a5d0 <CUSBMIDIDevice::CallPacketHandler(unsigned char*, unsigned int)+0x80>
   9a61c:   d503201f    nop

000000000009a620 <CUSBMIDIDevice::RegisterSendEventsHandler(bool (*)(unsigned char const*, unsigned int, void*), void*)>:
   9a620:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   9a624:   910003fd    mov x29, sp
   9a628:   f9401003    ldr x3, [x0, #32]
   9a62c:   f9001402    str x2, [x0, #40]
   9a630:   b50000a3    cbnz    x3, 9a644 <CUSBMIDIDevice::RegisterSendEventsHandler(bool (*)(unsigned char const*, unsigned int, void*), void*)+0x24>
   9a634:   f9001001    str x1, [x0, #32]
   9a638:   b4000121    cbz x1, 9a65c <CUSBMIDIDevice::RegisterSendEventsHandler(bool (*)(unsigned char const*, unsigned int, void*), void*)+0x3c>
   9a63c:   a8c17bfd    ldp x29, x30, [sp], #16
   9a640:   d65f03c0    ret
   9a644:   900000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9a648:   900000c0    adrp    x0, b2000 <_etext+0x2f9c>
   9a64c:   911fa021    add x1, x1, #0x7e8
   9a650:   9122e000    add x0, x0, #0x8b8
   9a654:   52802162    mov w2, #0x10b
   9a658:   9400091a    bl  9cac0 <assertion_failed>
   9a65c:   900000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9a660:   900000c0    adrp    x0, b2000 <_etext+0x2f9c>
   9a664:   911fa021    add x1, x1, #0x7e8
   9a668:   91234000    add x0, x0, #0x8d0
   9a66c:   528021a2    mov w2, #0x10d
   9a670:   94000914    bl  9cac0 <assertion_failed>
   9a674:   d503201f    nop
   9a678:   d503201f    nop
   9a67c:   d503201f    nop

000000000009a680 <CUSBMIDIDevice::GetAllSoundOffOnUSBError() const>:
   9a680:   3940c000    ldrb    w0, [x0, #48]
   9a684:   d65f03c0    ret
    ...

000000000009a690 <_GLOBAL__sub_I__ZN14CUSBMIDIDevice18s_DeviceNumberPoolE>:
   9a690:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9a694:   910003fd    mov x29, sp
   9a698:   528007e2    mov w2, #0x3f
   9a69c:   52800021    mov w1, #0x1
   9a6a0:   f9000bf3    str x19, [sp, #16]
   9a6a4:   90000113    adrp    x19, ba000 <font_data+0x1080>
   9a6a8:   91244273    add x19, x19, #0x910
   9a6ac:   aa1303e0    mov x0, x19
   9a6b0:   940035d0    bl  a7df0 <CNumberPool::CNumberPool(unsigned int, unsigned int)>
   9a6b4:   90000102    adrp    x2, ba000 <font_data+0x1080>
   9a6b8:   b0000060    adrp    x0, a7000 <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int, bool)+0xd0>
   9a6bc:   aa1303e1    mov x1, x19
   9a6c0:   f9400bf3    ldr x19, [sp, #16]
   9a6c4:   91278042    add x2, x2, #0x9e0
   9a6c8:   a8c27bfd    ldp x29, x30, [sp], #32
   9a6cc:   91394000    add x0, x0, #0xe50
   9a6d0:   14002bb0    b   a5590 <__cxa_atexit>
    ...

000000000009a6e0 <CUSBSerialDevice::SetBaudRate(unsigned int)>:
   9a6e0:   52800020    mov w0, #0x1
   9a6e4:   d65f03c0    ret
   9a6e8:   d503201f    nop
   9a6ec:   d503201f    nop

000000000009a6f0 <CUSBSerialDevice::SetLineProperties(TUSBSerialDataBits, TUSBSerialParity, TUSBSerialStopBits)>:
   9a6f0:   52800020    mov w0, #0x1
   9a6f4:   d65f03c0    ret
   9a6f8:   d503201f    nop
   9a6fc:   d503201f    nop

000000000009a700 <CUSBSerialDevice::~CUSBSerialDevice()>:
   9a700:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9a704:   910003fd    mov x29, sp
   9a708:   f00000c1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9a70c:   91238021    add x1, x1, #0x8e0
   9a710:   a90153f3    stp x19, x20, [sp, #16]
   9a714:   aa0003f3    mov x19, x0
   9a718:   b9407000    ldr w0, [x0, #112]
   9a71c:   f9000261    str x1, [x19]
   9a720:   35000320    cbnz    w0, 9a784 <CUSBSerialDevice::~CUSBSerialDevice()+0x84>
   9a724:   f9402674    ldr x20, [x19, #72]
   9a728:   b40000d4    cbz x20, 9a740 <CUSBSerialDevice::~CUSBSerialDevice()+0x40>
   9a72c:   aa1403e0    mov x0, x20
   9a730:   97ffbe14    bl  89f80 <CUSBEndpoint::~CUSBEndpoint()>
   9a734:   aa1403e0    mov x0, x20
   9a738:   d2800401    mov x1, #0x20
   9a73c:   94003449    bl  a7860 <operator delete(void*, unsigned long)>
   9a740:   f9402274    ldr x20, [x19, #64]
   9a744:   f900267f    str xzr, [x19, #72]
   9a748:   b40000d4    cbz x20, 9a760 <CUSBSerialDevice::~CUSBSerialDevice()+0x60>
   9a74c:   aa1403e0    mov x0, x20
   9a750:   97ffbe0c    bl  89f80 <CUSBEndpoint::~CUSBEndpoint()>
   9a754:   aa1403e0    mov x0, x20
   9a758:   d2800401    mov x1, #0x20
   9a75c:   94003441    bl  a7860 <operator delete(void*, unsigned long)>
   9a760:   f9402a60    ldr x0, [x19, #80]
   9a764:   f900227f    str xzr, [x19, #64]
   9a768:   b4000040    cbz x0, 9a770 <CUSBSerialDevice::~CUSBSerialDevice()+0x70>
   9a76c:   94003431    bl  a7830 <operator delete[](void*)>
   9a770:   aa1303e0    mov x0, x19
   9a774:   a9057e7f    stp xzr, xzr, [x19, #80]
   9a778:   a94153f3    ldp x19, x20, [sp, #16]
   9a77c:   a8c27bfd    ldp x29, x30, [sp], #32
   9a780:   17ffbe54    b   8a0d0 <CUSBFunction::~CUSBFunction()>
   9a784:   94000cb7    bl  9da60 <CDeviceNameService::Get()>
   9a788:   b9407262    ldr w2, [x19, #112]
   9a78c:   f00000c1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9a790:   52800003    mov w3, #0x0
   9a794:   91254021    add x1, x1, #0x950
   9a798:   94000cde    bl  9db10 <CDeviceNameService::RemoveDevice(char const*, unsigned int, bool)>
   9a79c:   b9407261    ldr w1, [x19, #112]
   9a7a0:   90000100    adrp    x0, ba000 <font_data+0x1080>
   9a7a4:   91248000    add x0, x0, #0x920
   9a7a8:   940035de    bl  a7f20 <CNumberPool::FreeNumber(unsigned int)>
   9a7ac:   17ffffde    b   9a724 <CUSBSerialDevice::~CUSBSerialDevice()+0x24>

000000000009a7b0 <CUSBSerialDevice::~CUSBSerialDevice()>:
   9a7b0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9a7b4:   910003fd    mov x29, sp
   9a7b8:   f9000bf3    str x19, [sp, #16]
   9a7bc:   aa0003f3    mov x19, x0
   9a7c0:   97ffffd0    bl  9a700 <CUSBSerialDevice::~CUSBSerialDevice()>
   9a7c4:   aa1303e0    mov x0, x19
   9a7c8:   f9400bf3    ldr x19, [sp, #16]
   9a7cc:   d2800f01    mov x1, #0x78
   9a7d0:   a8c27bfd    ldp x29, x30, [sp], #32
   9a7d4:   14003423    b   a7860 <operator delete(void*, unsigned long)>
   9a7d8:   d503201f    nop
   9a7dc:   d503201f    nop

000000000009a7e0 <CUSBSerialDevice::Write(void const*, unsigned long)>:
   9a7e0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   9a7e4:   910003fd    mov x29, sp
   9a7e8:   a90153f3    stp x19, x20, [sp, #16]
   9a7ec:   a9025bf5    stp x21, x22, [sp, #32]
   9a7f0:   b4000601    cbz x1, 9a8b0 <CUSBSerialDevice::Write(void const*, unsigned long)+0xd0>
   9a7f4:   aa0203f3    mov x19, x2
   9a7f8:   b4000682    cbz x2, 9a8c8 <CUSBSerialDevice::Write(void const*, unsigned long)+0xe8>
   9a7fc:   aa0103f4    mov x20, x1
   9a800:   aa0003f6    mov x22, x0
   9a804:   97ffbf53    bl  8a550 <CUSBFunction::GetHost() const>
   9a808:   aa0003f5    mov x21, x0
   9a80c:   b40006a0    cbz x0, 9a8e0 <CUSBSerialDevice::Write(void const*, unsigned long)+0x100>
   9a810:   d1000664    sub x4, x19, #0x1
   9a814:   aa1403e1    mov x1, x20
   9a818:   b2401484    orr x4, x4, #0x3f
   9a81c:   aa1303e2    mov x2, x19
   9a820:   91010084    add x4, x4, #0x40
   9a824:   927cec84    and x4, x4, #0xfffffffffffffff0
   9a828:   cb2463ff    sub sp, sp, x4
   9a82c:   9100fff4    add x20, sp, #0x3f
   9a830:   927ae694    and x20, x20, #0xffffffffffffffc0
   9a834:   aa1403e0    mov x0, x20
   9a838:   94003150    bl  a6d78 <memcpy>
   9a83c:   f94026c1    ldr x1, [x22, #72]
   9a840:   b40005c1    cbz x1, 9a8f8 <CUSBSerialDevice::Write(void const*, unsigned long)+0x118>
   9a844:   2a1303e3    mov w3, w19
   9a848:   aa1403e2    mov x2, x20
   9a84c:   aa1503e0    mov x0, x21
   9a850:   52800004    mov w4, #0x0
   9a854:   97ff9a6b    bl  81200 <CUSBHostController::Transfer(CUSBEndpoint*, void*, unsigned int, unsigned int)>
   9a858:   2a0003f3    mov w19, w0
   9a85c:   37f800e0    tbnz    w0, #31, 9a878 <CUSBSerialDevice::Write(void const*, unsigned long)+0x98>
   9a860:   910003bf    mov sp, x29
   9a864:   2a1303e0    mov w0, w19
   9a868:   a94153f3    ldp x19, x20, [sp, #16]
   9a86c:   a9425bf5    ldp x21, x22, [sp, #32]
   9a870:   a8c37bfd    ldp x29, x30, [sp], #48
   9a874:   d65f03c0    ret
   9a878:   94001362    bl  9f600 <CLogger::Get()>
   9a87c:   f00000c1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9a880:   91254021    add x1, x1, #0x950
   9a884:   900000c3    adrp    x3, b2000 <_etext+0x2f9c>
   9a888:   91002021    add x1, x1, #0x8
   9a88c:   91244063    add x3, x3, #0x910
   9a890:   52800042    mov w2, #0x2
   9a894:   94001543    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   9a898:   910003bf    mov sp, x29
   9a89c:   2a1303e0    mov w0, w19
   9a8a0:   a94153f3    ldp x19, x20, [sp, #16]
   9a8a4:   a9425bf5    ldp x21, x22, [sp, #32]
   9a8a8:   a8c37bfd    ldp x29, x30, [sp], #48
   9a8ac:   d65f03c0    ret
   9a8b0:   900000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9a8b4:   b00000a0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   9a8b8:   9123a021    add x1, x1, #0x8e8
   9a8bc:   91260000    add x0, x0, #0x980
   9a8c0:   528010a2    mov w2, #0x85
   9a8c4:   9400087f    bl  9cac0 <assertion_failed>
   9a8c8:   900000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9a8cc:   f00000a0    adrp    x0, b1000 <_etext+0x1f9c>
   9a8d0:   9123a021    add x1, x1, #0x8e8
   9a8d4:   9105e000    add x0, x0, #0x178
   9a8d8:   528010c2    mov w2, #0x86
   9a8dc:   94000879    bl  9cac0 <assertion_failed>
   9a8e0:   900000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9a8e4:   b00000a0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   9a8e8:   9123a021    add x1, x1, #0x8e8
   9a8ec:   9113e000    add x0, x0, #0x4f8
   9a8f0:   52801262    mov w2, #0x93
   9a8f4:   94000873    bl  9cac0 <assertion_failed>
   9a8f8:   900000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9a8fc:   900000c0    adrp    x0, b2000 <_etext+0x2f9c>
   9a900:   9123a021    add x1, x1, #0x8e8
   9a904:   9123e000    add x0, x0, #0x8f8
   9a908:   52801302    mov w2, #0x98
   9a90c:   9400086d    bl  9cac0 <assertion_failed>

000000000009a910 <CUSBSerialDevice::Read(void*, unsigned long)>:
   9a910:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   9a914:   910003fd    mov x29, sp
   9a918:   a90153f3    stp x19, x20, [sp, #16]
   9a91c:   b4000961    cbz x1, 9aa48 <CUSBSerialDevice::Read(void*, unsigned long)+0x138>
   9a920:   b4000a22    cbz x2, 9aa64 <CUSBSerialDevice::Read(void*, unsigned long)+0x154>
   9a924:   aa0103e3    mov x3, x1
   9a928:   aa0003f3    mov x19, x0
   9a92c:   d5033fbf    dmb sy
   9a930:   3941b001    ldrb    w1, [x0, #108]
   9a934:   37000741    tbnz    w1, #0, 9aa1c <CUSBSerialDevice::Read(void*, unsigned long)+0x10c>
   9a938:   f9402801    ldr x1, [x0, #80]
   9a93c:   b4000781    cbz x1, 9aa2c <CUSBSerialDevice::Read(void*, unsigned long)+0x11c>
   9a940:   f9402c05    ldr x5, [x0, #88]
   9a944:   b40009e5    cbz x5, 9aa80 <CUSBSerialDevice::Read(void*, unsigned long)+0x170>
   9a948:   f9403004    ldr x4, [x0, #96]
   9a94c:   eb0400bf    cmp x5, x4
   9a950:   54000a63    b.cc    9aa9c <CUSBSerialDevice::Read(void*, unsigned long)+0x18c>
   9a954:   b9406805    ldr w5, [x0, #104]
   9a958:   eb05009f    cmp x4, x5
   9a95c:   54000ae3    b.cc    9aab8 <CUSBSerialDevice::Read(void*, unsigned long)+0x1a8>
   9a960:   540001e0    b.eq    9a99c <CUSBSerialDevice::Read(void*, unsigned long)+0x8c>
   9a964:   cb050084    sub x4, x4, x5
   9a968:   8b050021    add x1, x1, x5
   9a96c:   eb02009f    cmp x4, x2
   9a970:   aa0303e0    mov x0, x3
   9a974:   9a829094    csel    x20, x4, x2, ls
   9a978:   aa1403e2    mov x2, x20
   9a97c:   940030ff    bl  a6d78 <memcpy>
   9a980:   b9406a61    ldr w1, [x19, #104]
   9a984:   2a1403e0    mov w0, w20
   9a988:   0b140021    add w1, w1, w20
   9a98c:   b9006a61    str w1, [x19, #104]
   9a990:   a94153f3    ldp x19, x20, [sp, #16]
   9a994:   a8c37bfd    ldp x29, x30, [sp], #48
   9a998:   d65f03c0    ret
   9a99c:   f90013f5    str x21, [sp, #32]
   9a9a0:   97ffbeec    bl  8a550 <CUSBFunction::GetHost() const>
   9a9a4:   aa0003f4    mov x20, x0
   9a9a8:   b4000960    cbz x0, 9aad4 <CUSBSerialDevice::Read(void*, unsigned long)+0x1c4>
   9a9ac:   f9402260    ldr x0, [x19, #64]
   9a9b0:   b40009e0    cbz x0, 9aaec <CUSBSerialDevice::Read(void*, unsigned long)+0x1dc>
   9a9b4:   d2801200    mov x0, #0x90
   9a9b8:   97ff9d1a    bl  81e20 <CUSBRequest::operator new(unsigned long)>
   9a9bc:   f9402261    ldr x1, [x19, #64]
   9a9c0:   d2800004    mov x4, #0x0
   9a9c4:   aa0003f5    mov x21, x0
   9a9c8:   f9402a62    ldr x2, [x19, #80]
   9a9cc:   b9405a63    ldr w3, [x19, #88]
   9a9d0:   97ff9c2c    bl  81a80 <CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)>
   9a9d4:   aa1503e0    mov x0, x21
   9a9d8:   97ff9d0a    bl  81e00 <CUSBRequest::SetCompleteOnNAK()>
   9a9dc:   90000001    adrp    x1, 9a000 <ProxyHandler(unsigned int, unsigned char*, unsigned int, unsigned int, void*)>
   9a9e0:   aa1303e3    mov x3, x19
   9a9e4:   aa1503e0    mov x0, x21
   9a9e8:   91330021    add x1, x1, #0xcc0
   9a9ec:   d2800002    mov x2, #0x0
   9a9f0:   97ff9ce8    bl  81d90 <CUSBRequest::SetCompletionRoutine(void (*)(CUSBRequest*, void*, void*), void*, void*)>
   9a9f4:   f9400283    ldr x3, [x20]
   9a9f8:   52800024    mov w4, #0x1
   9a9fc:   aa1403e0    mov x0, x20
   9aa00:   aa1503e1    mov x1, x21
   9aa04:   52800002    mov w2, #0x0
   9aa08:   3901b264    strb    w4, [x19, #108]
   9aa0c:   f9401463    ldr x3, [x3, #40]
   9aa10:   d63f0060    blr x3
   9aa14:   36000780    tbz w0, #0, 9ab04 <CUSBSerialDevice::Read(void*, unsigned long)+0x1f4>
   9aa18:   f94013f5    ldr x21, [sp, #32]
   9aa1c:   a94153f3    ldp x19, x20, [sp, #16]
   9aa20:   52800000    mov w0, #0x0
   9aa24:   a8c37bfd    ldp x29, x30, [sp], #48
   9aa28:   d65f03c0    ret
   9aa2c:   900000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9aa30:   900000c0    adrp    x0, b2000 <_etext+0x2f9c>
   9aa34:   f90013f5    str x21, [sp, #32]
   9aa38:   9123a021    add x1, x1, #0x8e8
   9aa3c:   9124a000    add x0, x0, #0x928
   9aa40:   528015c2    mov w2, #0xae
   9aa44:   9400081f    bl  9cac0 <assertion_failed>
   9aa48:   900000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9aa4c:   b00000a0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   9aa50:   f90013f5    str x21, [sp, #32]
   9aa54:   9123a021    add x1, x1, #0x8e8
   9aa58:   91260000    add x0, x0, #0x980
   9aa5c:   52801482    mov w2, #0xa4
   9aa60:   94000818    bl  9cac0 <assertion_failed>
   9aa64:   900000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9aa68:   f00000a0    adrp    x0, b1000 <_etext+0x1f9c>
   9aa6c:   f90013f5    str x21, [sp, #32]
   9aa70:   9123a021    add x1, x1, #0x8e8
   9aa74:   9105e000    add x0, x0, #0x178
   9aa78:   528014a2    mov w2, #0xa5
   9aa7c:   94000811    bl  9cac0 <assertion_failed>
   9aa80:   900000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9aa84:   900000c0    adrp    x0, b2000 <_etext+0x2f9c>
   9aa88:   f90013f5    str x21, [sp, #32]
   9aa8c:   9123a021    add x1, x1, #0x8e8
   9aa90:   91250000    add x0, x0, #0x940
   9aa94:   528015e2    mov w2, #0xaf
   9aa98:   9400080a    bl  9cac0 <assertion_failed>
   9aa9c:   900000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9aaa0:   900000c0    adrp    x0, b2000 <_etext+0x2f9c>
   9aaa4:   f90013f5    str x21, [sp, #32]
   9aaa8:   9123a021    add x1, x1, #0x8e8
   9aaac:   91256000    add x0, x0, #0x958
   9aab0:   52801602    mov w2, #0xb0
   9aab4:   94000803    bl  9cac0 <assertion_failed>
   9aab8:   900000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9aabc:   900000c0    adrp    x0, b2000 <_etext+0x2f9c>
   9aac0:   f90013f5    str x21, [sp, #32]
   9aac4:   9123a021    add x1, x1, #0x8e8
   9aac8:   91260000    add x0, x0, #0x980
   9aacc:   52801622    mov w2, #0xb1
   9aad0:   940007fc    bl  9cac0 <assertion_failed>
   9aad4:   900000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9aad8:   b00000a0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   9aadc:   9123a021    add x1, x1, #0x8e8
   9aae0:   9113e000    add x0, x0, #0x4f8
   9aae4:   528016c2    mov w2, #0xb6
   9aae8:   940007f6    bl  9cac0 <assertion_failed>
   9aaec:   900000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9aaf0:   f00000a0    adrp    x0, b1000 <_etext+0x1f9c>
   9aaf4:   9123a021    add x1, x1, #0x8e8
   9aaf8:   91010000    add x0, x0, #0x40
   9aafc:   52801702    mov w2, #0xb8
   9ab00:   940007f0    bl  9cac0 <assertion_failed>
   9ab04:   940012bf    bl  9f600 <CLogger::Get()>
   9ab08:   f00000c1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9ab0c:   91254021    add x1, x1, #0x950
   9ab10:   900000c3    adrp    x3, b2000 <_etext+0x2f9c>
   9ab14:   91002021    add x1, x1, #0x8
   9ab18:   9126a063    add x3, x3, #0x9a8
   9ab1c:   52800042    mov w2, #0x2
   9ab20:   940014a0    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   9ab24:   aa1503e0    mov x0, x21
   9ab28:   3901b27f    strb    wzr, [x19, #108]
   9ab2c:   97ff9bf5    bl  81b00 <CUSBRequest::~CUSBRequest()>
   9ab30:   aa1503e0    mov x0, x21
   9ab34:   d2801201    mov x1, #0x90
   9ab38:   97ff9cd2    bl  81e80 <CUSBRequest::operator delete(void*, unsigned long)>
   9ab3c:   f94013f5    ldr x21, [sp, #32]
   9ab40:   12800000    mov w0, #0xffffffff
   9ab44:   17ffff93    b   9a990 <CUSBSerialDevice::Read(void*, unsigned long)+0x80>
   9ab48:   d503201f    nop
   9ab4c:   d503201f    nop

000000000009ab50 <CUSBSerialDevice::CUSBSerialDevice(CUSBFunction*, unsigned long)>:
   9ab50:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9ab54:   910003fd    mov x29, sp
   9ab58:   a90153f3    stp x19, x20, [sp, #16]
   9ab5c:   aa0003f3    mov x19, x0
   9ab60:   aa0203f4    mov x20, x2
   9ab64:   97ffbdff    bl  8a360 <CUSBFunction::CUSBFunction(CUSBFunction*)>
   9ab68:   d284b002    mov x2, #0x2580
   9ab6c:   d2c00021    mov x1, #0x100000000
   9ab70:   a903fe74    stp x20, xzr, [x19, #56]
   9ab74:   f2c00102    movk    x2, #0x8, lsl #32
   9ab78:   f00000c0    adrp    x0, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9ab7c:   91238000    add x0, x0, #0x8e0
   9ab80:   a9028662    stp x2, x1, [x19, #40]
   9ab84:   f9000260    str x0, [x19]
   9ab88:   a904fe7f    stp xzr, xzr, [x19, #72]
   9ab8c:   a905fe7f    stp xzr, xzr, [x19, #88]
   9ab90:   b9006a7f    str wzr, [x19, #104]
   9ab94:   3901b27f    strb    wzr, [x19, #108]
   9ab98:   b900727f    str wzr, [x19, #112]
   9ab9c:   a94153f3    ldp x19, x20, [sp, #16]
   9aba0:   a8c27bfd    ldp x29, x30, [sp], #32
   9aba4:   d65f03c0    ret
   9aba8:   d503201f    nop
   9abac:   d503201f    nop

000000000009abb0 <CUSBSerialDevice::CompletionRoutine(CUSBRequest*)>:
   9abb0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9abb4:   910003fd    mov x29, sp
   9abb8:   a90153f3    stp x19, x20, [sp, #16]
   9abbc:   b4000581    cbz x1, 9ac6c <CUSBSerialDevice::CompletionRoutine(CUSBRequest*)+0xbc>
   9abc0:   aa0003f3    mov x19, x0
   9abc4:   3941b000    ldrb    w0, [x0, #108]
   9abc8:   360005e0    tbz w0, #0, 9ac84 <CUSBSerialDevice::CompletionRoutine(CUSBRequest*)+0xd4>
   9abcc:   b9406a60    ldr w0, [x19, #104]
   9abd0:   aa0103f4    mov x20, x1
   9abd4:   f9403261    ldr x1, [x19, #96]
   9abd8:   eb00003f    cmp x1, x0
   9abdc:   54000601    b.ne    9ac9c <CUSBSerialDevice::CompletionRoutine(CUSBRequest*)+0xec>
   9abe0:   aa1403e0    mov x0, x20
   9abe4:   97ff9be3    bl  81b70 <CUSBRequest::GetStatus() const>
   9abe8:   35000160    cbnz    w0, 9ac14 <CUSBSerialDevice::CompletionRoutine(CUSBRequest*)+0x64>
   9abec:   aa1403e0    mov x0, x20
   9abf0:   97ff9bc4    bl  81b00 <CUSBRequest::~CUSBRequest()>
   9abf4:   aa1403e0    mov x0, x20
   9abf8:   d2801201    mov x1, #0x90
   9abfc:   97ff9ca1    bl  81e80 <CUSBRequest::operator delete(void*, unsigned long)>
   9ac00:   3901b27f    strb    wzr, [x19, #108]
   9ac04:   d5033f9f    dsb sy
   9ac08:   a94153f3    ldp x19, x20, [sp, #16]
   9ac0c:   a8c27bfd    ldp x29, x30, [sp], #32
   9ac10:   d65f03c0    ret
   9ac14:   aa1403e0    mov x0, x20
   9ac18:   97ff9bda    bl  81b80 <CUSBRequest::GetResultLength() const>
   9ac1c:   f9401e61    ldr x1, [x19, #56]
   9ac20:   2a0003e0    mov w0, w0
   9ac24:   f9003260    str x0, [x19, #96]
   9ac28:   b9006a61    str w1, [x19, #104]
   9ac2c:   b40001a0    cbz x0, 9ac60 <CUSBSerialDevice::CompletionRoutine(CUSBRequest*)+0xb0>
   9ac30:   92407c21    and x1, x1, #0xffffffff
   9ac34:   eb01001f    cmp x0, x1
   9ac38:   54000140    b.eq    9ac60 <CUSBSerialDevice::CompletionRoutine(CUSBRequest*)+0xb0>
   9ac3c:   54fffd82    b.cs    9abec <CUSBSerialDevice::CompletionRoutine(CUSBRequest*)+0x3c>
   9ac40:   94001270    bl  9f600 <CLogger::Get()>
   9ac44:   f00000c1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9ac48:   91254021    add x1, x1, #0x950
   9ac4c:   900000c3    adrp    x3, b2000 <_etext+0x2f9c>
   9ac50:   91002021    add x1, x1, #0x8
   9ac54:   9127e063    add x3, x3, #0x9f8
   9ac58:   52800042    mov w2, #0x2
   9ac5c:   94001451    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   9ac60:   f900327f    str xzr, [x19, #96]
   9ac64:   b9006a7f    str wzr, [x19, #104]
   9ac68:   17ffffe1    b   9abec <CUSBSerialDevice::CompletionRoutine(CUSBRequest*)+0x3c>
   9ac6c:   900000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9ac70:   b00000a0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   9ac74:   9123a021    add x1, x1, #0x8e8
   9ac78:   9111c000    add x0, x0, #0x470
   9ac7c:   52801de2    mov w2, #0xef
   9ac80:   94000790    bl  9cac0 <assertion_failed>
   9ac84:   900000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9ac88:   900000c0    adrp    x0, b2000 <_etext+0x2f9c>
   9ac8c:   9123a021    add x1, x1, #0x8e8
   9ac90:   9126e000    add x0, x0, #0x9b8
   9ac94:   52801e02    mov w2, #0xf0
   9ac98:   9400078a    bl  9cac0 <assertion_failed>
   9ac9c:   900000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9aca0:   900000c0    adrp    x0, b2000 <_etext+0x2f9c>
   9aca4:   9123a021    add x1, x1, #0x8e8
   9aca8:   91274000    add x0, x0, #0x9d0
   9acac:   52801e22    mov w2, #0xf1
   9acb0:   94000784    bl  9cac0 <assertion_failed>
   9acb4:   d503201f    nop
   9acb8:   d503201f    nop
   9acbc:   d503201f    nop

000000000009acc0 <CUSBSerialDevice::CompletionStub(CUSBRequest*, void*, void*)>:
   9acc0:   b4000082    cbz x2, 9acd0 <CUSBSerialDevice::CompletionStub(CUSBRequest*, void*, void*)+0x10>
   9acc4:   aa0003e1    mov x1, x0
   9acc8:   aa0203e0    mov x0, x2
   9accc:   17ffffb9    b   9abb0 <CUSBSerialDevice::CompletionRoutine(CUSBRequest*)>
   9acd0:   900000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9acd4:   b00000a0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   9acd8:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   9acdc:   9123a021    add x1, x1, #0x8e8
   9ace0:   910003fd    mov x29, sp
   9ace4:   91128000    add x0, x0, #0x4a0
   9ace8:   52802202    mov w2, #0x110
   9acec:   94000775    bl  9cac0 <assertion_failed>

000000000009acf0 <CUSBSerialDevice::Configure()>:
   9acf0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   9acf4:   910003fd    mov x29, sp
   9acf8:   a90153f3    stp x19, x20, [sp, #16]
   9acfc:   aa0003f4    mov x20, x0
   9ad00:   f90013f5    str x21, [sp, #32]
   9ad04:   14000005    b   9ad18 <CUSBSerialDevice::Configure()+0x28>
   9ad08:   39400e61    ldrb    w1, [x19, #3]
   9ad0c:   12001421    and w1, w1, #0x3f
   9ad10:   7100083f    cmp w1, #0x2
   9ad14:   54000520    b.eq    9adb8 <CUSBSerialDevice::Configure()+0xc8>
   9ad18:   528000a1    mov w1, #0x5
   9ad1c:   aa1403e0    mov x0, x20
   9ad20:   97ffbe18    bl  8a580 <CUSBFunction::GetDescriptor(unsigned char)>
   9ad24:   aa0003f3    mov x19, x0
   9ad28:   b5ffff00    cbnz    x0, 9ad08 <CUSBSerialDevice::Configure()+0x18>
   9ad2c:   f9402280    ldr x0, [x20, #64]
   9ad30:   b4000620    cbz x0, 9adf4 <CUSBSerialDevice::Configure()+0x104>
   9ad34:   f9402681    ldr x1, [x20, #72]
   9ad38:   b40005e1    cbz x1, 9adf4 <CUSBSerialDevice::Configure()+0x104>
   9ad3c:   97ffbcc9    bl  8a060 <CUSBEndpoint::GetMaxPacketSize() const>
   9ad40:   2a0003e0    mov w0, w0
   9ad44:   f9002e80    str x0, [x20, #88]
   9ad48:   940032a6    bl  a77e0 <operator new[](unsigned long)>
   9ad4c:   aa0003e1    mov x1, x0
   9ad50:   aa1403e0    mov x0, x20
   9ad54:   f9002a81    str x1, [x20, #80]
   9ad58:   97ffbd16    bl  8a1b0 <CUSBFunction::Configure()>
   9ad5c:   12001c15    and w21, w0, #0xff
   9ad60:   36000720    tbz w0, #0, 9ae44 <CUSBSerialDevice::Configure()+0x154>
   9ad64:   b9407280    ldr w0, [x20, #112]
   9ad68:   35000820    cbnz    w0, 9ae6c <CUSBSerialDevice::Configure()+0x17c>
   9ad6c:   f00000d3    adrp    x19, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9ad70:   91254273    add x19, x19, #0x950
   9ad74:   90000100    adrp    x0, ba000 <font_data+0x1080>
   9ad78:   91002262    add x2, x19, #0x8
   9ad7c:   52800021    mov w1, #0x1
   9ad80:   91248000    add x0, x0, #0x920
   9ad84:   94003437    bl  a7e60 <CNumberPool::AllocateNumber(bool, char const*)>
   9ad88:   b9007280    str w0, [x20, #112]
   9ad8c:   94000b35    bl  9da60 <CDeviceNameService::Get()>
   9ad90:   b9407282    ldr w2, [x20, #112]
   9ad94:   aa1303e1    mov x1, x19
   9ad98:   aa1403e3    mov x3, x20
   9ad9c:   52800004    mov w4, #0x0
   9ada0:   94000b3c    bl  9da90 <CDeviceNameService::AddDevice(char const*, unsigned int, CDevice*, bool)>
   9ada4:   a94153f3    ldp x19, x20, [sp, #16]
   9ada8:   2a1503e0    mov w0, w21
   9adac:   f94013f5    ldr x21, [sp, #32]
   9adb0:   a8c37bfd    ldp x29, x30, [sp], #48
   9adb4:   d65f03c0    ret
   9adb8:   39c00a60    ldrsb   w0, [x19, #2]
   9adbc:   37f802a0    tbnz    w0, #31, 9ae10 <CUSBSerialDevice::Configure()+0x120>
   9adc0:   f9402680    ldr x0, [x20, #72]
   9adc4:   b5000180    cbnz    x0, 9adf4 <CUSBSerialDevice::Configure()+0x104>
   9adc8:   d2800400    mov x0, #0x20
   9adcc:   9400327d    bl  a77c0 <operator new(unsigned long)>
   9add0:   aa0003f5    mov x21, x0
   9add4:   aa1403e0    mov x0, x20
   9add8:   97ffbdc6    bl  8a4f0 <CUSBFunction::GetDevice() const>
   9addc:   aa0003e1    mov x1, x0
   9ade0:   aa1303e2    mov x2, x19
   9ade4:   aa1503e0    mov x0, x21
   9ade8:   97ffbbfa    bl  89dd0 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   9adec:   f9002695    str x21, [x20, #72]
   9adf0:   17ffffca    b   9ad18 <CUSBSerialDevice::Configure()+0x28>
   9adf4:   f00000c1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9adf8:   91254021    add x1, x1, #0x950
   9adfc:   aa1403e0    mov x0, x20
   9ae00:   91002021    add x1, x1, #0x8
   9ae04:   52800015    mov w21, #0x0
   9ae08:   97ffbdea    bl  8a5b0 <CUSBFunction::ConfigurationError(char const*) const>
   9ae0c:   17ffffe6    b   9ada4 <CUSBSerialDevice::Configure()+0xb4>
   9ae10:   f9402280    ldr x0, [x20, #64]
   9ae14:   b5ffff00    cbnz    x0, 9adf4 <CUSBSerialDevice::Configure()+0x104>
   9ae18:   d2800400    mov x0, #0x20
   9ae1c:   94003269    bl  a77c0 <operator new(unsigned long)>
   9ae20:   aa0003f5    mov x21, x0
   9ae24:   aa1403e0    mov x0, x20
   9ae28:   97ffbdb2    bl  8a4f0 <CUSBFunction::GetDevice() const>
   9ae2c:   aa0003e1    mov x1, x0
   9ae30:   aa1303e2    mov x2, x19
   9ae34:   aa1503e0    mov x0, x21
   9ae38:   97ffbbe6    bl  89dd0 <CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)>
   9ae3c:   f9002295    str x21, [x20, #64]
   9ae40:   17ffffb6    b   9ad18 <CUSBSerialDevice::Configure()+0x28>
   9ae44:   940011ef    bl  9f600 <CLogger::Get()>
   9ae48:   f00000c1    adrp    x1, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9ae4c:   91254021    add x1, x1, #0x950
   9ae50:   b00000a3    adrp    x3, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   9ae54:   91002021    add x1, x1, #0x8
   9ae58:   9119e063    add x3, x3, #0x678
   9ae5c:   52800022    mov w2, #0x1
   9ae60:   52800015    mov w21, #0x0
   9ae64:   940013cf    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   9ae68:   17ffffcf    b   9ada4 <CUSBSerialDevice::Configure()+0xb4>
   9ae6c:   900000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9ae70:   f00000a0    adrp    x0, b1000 <_etext+0x1f9c>
   9ae74:   9123a021    add x1, x1, #0x8e8
   9ae78:   9106a000    add x0, x0, #0x1a8
   9ae7c:   52800f62    mov w2, #0x7b
   9ae80:   94000710    bl  9cac0 <assertion_failed>
    ...

000000000009ae90 <_GLOBAL__sub_I__ZN16CUSBSerialDevice18s_DeviceNumberPoolE>:
   9ae90:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9ae94:   910003fd    mov x29, sp
   9ae98:   528007e2    mov w2, #0x3f
   9ae9c:   52800021    mov w1, #0x1
   9aea0:   f9000bf3    str x19, [sp, #16]
   9aea4:   90000113    adrp    x19, ba000 <font_data+0x1080>
   9aea8:   91248273    add x19, x19, #0x920
   9aeac:   aa1303e0    mov x0, x19
   9aeb0:   940033d0    bl  a7df0 <CNumberPool::CNumberPool(unsigned int, unsigned int)>
   9aeb4:   90000102    adrp    x2, ba000 <font_data+0x1080>
   9aeb8:   b0000060    adrp    x0, a7000 <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int, bool)+0xd0>
   9aebc:   aa1303e1    mov x1, x19
   9aec0:   f9400bf3    ldr x19, [sp, #16]
   9aec4:   91278042    add x2, x2, #0x9e0
   9aec8:   a8c27bfd    ldp x29, x30, [sp], #32
   9aecc:   91394000    add x0, x0, #0xe50
   9aed0:   140029b0    b   a5590 <__cxa_atexit>
    ...

000000000009aee0 <CKeyboardBehaviour::CKeyboardBehaviour()>:
   9aee0:   aa0003e1    mov x1, x0
   9aee4:   9100a000    add x0, x0, #0x28
   9aee8:   a9007c3f    stp xzr, xzr, [x1]
   9aeec:   f900083f    str xzr, [x1, #16]
   9aef0:   7900303f    strh    wzr, [x1, #24]
   9aef4:   f900103f    str xzr, [x1, #32]
   9aef8:   140000ee    b   9b2b0 <CKeyMap::CKeyMap()>
   9aefc:   d503201f    nop

000000000009af00 <CKeyboardBehaviour::~CKeyboardBehaviour()>:
   9af00:   aa0003e1    mov x1, x0
   9af04:   9100a000    add x0, x0, #0x28
   9af08:   a9007c3f    stp xzr, xzr, [x1]
   9af0c:   f900083f    str xzr, [x1, #16]
   9af10:   14000124    b   9b3a0 <CKeyMap::~CKeyMap()>
   9af14:   d503201f    nop
   9af18:   d503201f    nop
   9af1c:   d503201f    nop

000000000009af20 <CKeyboardBehaviour::RegisterKeyPressedHandler(void (*)(char const*))>:
   9af20:   b4000061    cbz x1, 9af2c <CKeyboardBehaviour::RegisterKeyPressedHandler(void (*)(char const*))+0xc>
   9af24:   f9000001    str x1, [x0]
   9af28:   d65f03c0    ret
   9af2c:   900000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9af30:   900000c0    adrp    x0, b2000 <_etext+0x2f9c>
   9af34:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   9af38:   91284021    add x1, x1, #0xa10
   9af3c:   910003fd    mov x29, sp
   9af40:   9128a000    add x0, x0, #0xa28
   9af44:   528005e2    mov w2, #0x2f
   9af48:   940006de    bl  9cac0 <assertion_failed>
   9af4c:   d503201f    nop

000000000009af50 <CKeyboardBehaviour::RegisterSelectConsoleHandler(void (*)(unsigned int))>:
   9af50:   b4000061    cbz x1, 9af5c <CKeyboardBehaviour::RegisterSelectConsoleHandler(void (*)(unsigned int))+0xc>
   9af54:   f9000401    str x1, [x0, #8]
   9af58:   d65f03c0    ret
   9af5c:   900000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9af60:   900000c0    adrp    x0, b2000 <_etext+0x2f9c>
   9af64:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   9af68:   91284021    add x1, x1, #0xa10
   9af6c:   910003fd    mov x29, sp
   9af70:   91290000    add x0, x0, #0xa40
   9af74:   528006a2    mov w2, #0x35
   9af78:   940006d2    bl  9cac0 <assertion_failed>
   9af7c:   d503201f    nop

000000000009af80 <CKeyboardBehaviour::RegisterShutdownHandler(void (*)())>:
   9af80:   b4000061    cbz x1, 9af8c <CKeyboardBehaviour::RegisterShutdownHandler(void (*)())+0xc>
   9af84:   f9000801    str x1, [x0, #16]
   9af88:   d65f03c0    ret
   9af8c:   900000c1    adrp    x1, b2000 <_etext+0x2f9c>
   9af90:   900000c0    adrp    x0, b2000 <_etext+0x2f9c>
   9af94:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   9af98:   91284021    add x1, x1, #0xa10
   9af9c:   910003fd    mov x29, sp
   9afa0:   91298000    add x0, x0, #0xa60
   9afa4:   52800762    mov w2, #0x3b
   9afa8:   940006c6    bl  9cac0 <assertion_failed>
   9afac:   d503201f    nop

000000000009afb0 <CKeyboardBehaviour::GetLEDStatus() const>:
   9afb0:   9100a000    add x0, x0, #0x28
   9afb4:   140001b3    b   9b680 <CKeyMap::GetLEDStatus() const>
   9afb8:   d503201f    nop
   9afbc:   d503201f    nop

000000000009afc0 <CKeyboardBehaviour::GenerateKeyEvent(unsigned char)>:
   9afc0:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   9afc4:   910003fd    mov x29, sp
   9afc8:   a90153f3    stp x19, x20, [sp, #16]
   9afcc:   9100a014    add x20, x0, #0x28
   9afd0:   aa0003f3    mov x19, x0
   9afd4:   f90013f5    str x21, [sp, #32]
   9afd8:   39406015    ldrb    w21, [x0, #24]
   9afdc:   aa1403e0    mov x0, x20
   9afe0:   2a1503e2    mov w2, w21
   9afe4:   9400011b    bl  9b450 <CKeyMap::Translate(unsigned char, unsigned char)>
   9afe8:   12003c02    and w2, w0, #0xffff
   9afec:   7105245f    cmp w2, #0x149
   9aff0:   54000268    b.hi    9b03c <CKeyboardBehaviour::GenerateKeyEvent(unsigned char)+0x7c>
   9aff4:   7104f45f    cmp w2, #0x13d
   9aff8:   54000128    b.hi    9b01c <CKeyboardBehaviour::GenerateKeyEvent(unsigned char)+0x5c>
   9affc:   5104ec42    sub w2, w2, #0x13b
   9b000:   12003c42    and w2, w2, #0xffff
   9b004:   7100085f    cmp w2, #0x2
   9b008:   540002c8    b.hi    9b060 <CKeyboardBehaviour::GenerateKeyEvent(unsigned char)+0xa0>
   9b00c:   a94153f3    ldp x19, x20, [sp, #16]
   9b010:   f94013f5    ldr x21, [sp, #32]
   9b014:   a8c47bfd    ldp x29, x30, [sp], #64
   9b018:   d65f03c0    ret
   9b01c:   f9400661    ldr x1, [x19, #8]
   9b020:   b4ffff61    cbz x1, 9b00c <CKeyboardBehaviour::GenerateKeyEvent(unsigned char)+0x4c>
   9b024:   a94153f3    ldp x19, x20, [sp, #16]
   9b028:   5104f840    sub w0, w2, #0x13e
   9b02c:   aa0103f0    mov x16, x1
   9b030:   f94013f5    ldr x21, [sp, #32]
   9b034:   a8c47bfd    ldp x29, x30, [sp], #64
   9b038:   d61f0200    br  x16
   9b03c:   7105285f    cmp w2, #0x14a
   9b040:   54000101    b.ne    9b060 <CKeyboardBehaviour::GenerateKeyEvent(unsigned char)+0xa0>
   9b044:   f9400a60    ldr x0, [x19, #16]
   9b048:   b4fffe20    cbz x0, 9b00c <CKeyboardBehaviour::GenerateKeyEvent(unsigned char)+0x4c>
   9b04c:   a94153f3    ldp x19, x20, [sp, #16]
   9b050:   aa0003f0    mov x16, x0
   9b054:   f94013f5    ldr x21, [sp, #32]
   9b058:   a8c47bfd    ldp x29, x30, [sp], #64
   9b05c:   d61f0200    br  x16
   9b060:   2a0003e1    mov w1, w0
   9b064:   2a1503e2    mov w2, w21
   9b068:   aa1403e0    mov x0, x20
   9b06c:   9100e3e3    add x3, sp, #0x38
   9b070:   94000150    bl  9b5b0 <CKeyMap::GetString(unsigned short, unsigned char, char*) const>
   9b074:   b4fffcc0    cbz x0, 9b00c <CKeyboardBehaviour::GenerateKeyEvent(unsigned char)+0x4c>
   9b078:   f9400261    ldr x1, [x19]
   9b07c:   b4fffc81    cbz x1, 9b00c <CKeyboardBehaviour::GenerateKeyEvent(unsigned char)+0x4c>
   9b080:   d63f0020    blr x1
   9b084:   a94153f3    ldp x19, x20, [sp, #16]
   9b088:   f94013f5    ldr x21, [sp, #32]
   9b08c:   a8c47bfd    ldp x29, x30, [sp], #64
   9b090:   d65f03c0    ret
   9b094:   d503201f    nop
   9b098:   d503201f    nop
   9b09c:   d503201f    nop

000000000009b0a0 <CKeyboardBehaviour::TimerStub(unsigned long, void*, void*)>:
   9b0a0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9b0a4:   910003fd    mov x29, sp
   9b0a8:   f9000bf3    str x19, [sp, #16]
   9b0ac:   b4000362    cbz x2, 9b118 <CKeyboardBehaviour::TimerStub(unsigned long, void*, void*)+0x78>
   9b0b0:   f9401041    ldr x1, [x2, #32]
   9b0b4:   aa0203f3    mov x19, x2
   9b0b8:   eb01001f    cmp x0, x1
   9b0bc:   540003a1    b.ne    9b130 <CKeyboardBehaviour::TimerStub(unsigned long, void*, void*)+0x90>
   9b0c0:   39406441    ldrb    w1, [x2, #25]
   9b0c4:   35000081    cbnz    w1, 9b0d4 <CKeyboardBehaviour::TimerStub(unsigned long, void*, void*)+0x34>
   9b0c8:   f9400bf3    ldr x19, [sp, #16]
   9b0cc:   a8c27bfd    ldp x29, x30, [sp], #32
   9b0d0:   d65f03c0    ret
   9b0d4:   aa0203e0    mov x0, x2
   9b0d8:   97ffffba    bl  9afc0 <CKeyboardBehaviour::GenerateKeyEvent(unsigned char)>
   9b0dc:   94002d69    bl  a6680 <CTimer::Get()>
   9b0e0:   90000002    adrp    x2, 9b000 <CKeyboardBehaviour::GenerateKeyEvent(unsigned char)+0x40>
   9b0e4:   aa1303e4    mov x4, x19
   9b0e8:   91028042    add x2, x2, #0xa0
   9b0ec:   d2800003    mov x3, #0x0
   9b0f0:   52800101    mov w1, #0x8
   9b0f4:   94002b3b    bl  a5de0 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned long, void*, void*), void*, void*)>
   9b0f8:   f9001260    str x0, [x19, #32]
   9b0fc:   b5fffe60    cbnz    x0, 9b0c8 <CKeyboardBehaviour::TimerStub(unsigned long, void*, void*)+0x28>
   9b100:   f00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9b104:   d00000a0    adrp    x0, b1000 <_etext+0x1f9c>
   9b108:   91284021    add x1, x1, #0xa10
   9b10c:   91032000    add x0, x0, #0xc8
   9b110:   528016e2    mov w2, #0xb7
   9b114:   9400066b    bl  9cac0 <assertion_failed>
   9b118:   f00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9b11c:   900000a0    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   9b120:   91284021    add x1, x1, #0xa10
   9b124:   91128000    add x0, x0, #0x4a0
   9b128:   528017c2    mov w2, #0xbe
   9b12c:   94000665    bl  9cac0 <assertion_failed>
   9b130:   f00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9b134:   f00000a0    adrp    x0, b2000 <_etext+0x2f9c>
   9b138:   91284021    add x1, x1, #0xa10
   9b13c:   9129e000    add x0, x0, #0xa78
   9b140:   52801602    mov w2, #0xb0
   9b144:   9400065f    bl  9cac0 <assertion_failed>
   9b148:   d503201f    nop
   9b14c:   d503201f    nop

000000000009b150 <CKeyboardBehaviour::KeyPressed(unsigned char)>:
   9b150:   12001c23    and w3, w1, #0xff
   9b154:   aa0003e2    mov x2, x0
   9b158:   51020061    sub w1, w3, #0x80
   9b15c:   12001c24    and w4, w1, #0xff
   9b160:   71001c9f    cmp w4, #0x7
   9b164:   540000e8    b.hi    9b180 <CKeyboardBehaviour::KeyPressed(unsigned char)+0x30>
   9b168:   39406003    ldrb    w3, [x0, #24]
   9b16c:   52800020    mov w0, #0x1
   9b170:   1ac12000    lsl w0, w0, w1
   9b174:   2a030000    orr w0, w0, w3
   9b178:   39006040    strb    w0, [x2, #24]
   9b17c:   d65f03c0    ret
   9b180:   39406401    ldrb    w1, [x0, #25]
   9b184:   6b03003f    cmp w1, w3
   9b188:   54ffffa0    b.eq    9b17c <CKeyboardBehaviour::KeyPressed(unsigned char)+0x2c>
   9b18c:   2a0303e1    mov w1, w3
   9b190:   39006403    strb    w3, [x0, #25]
   9b194:   17ffff8b    b   9afc0 <CKeyboardBehaviour::GenerateKeyEvent(unsigned char)>
   9b198:   d503201f    nop
   9b19c:   d503201f    nop

000000000009b1a0 <CKeyboardBehaviour::KeyReleased(unsigned char)>:
   9b1a0:   12001c21    and w1, w1, #0xff
   9b1a4:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9b1a8:   910003fd    mov x29, sp
   9b1ac:   51020022    sub w2, w1, #0x80
   9b1b0:   f9000bf3    str x19, [sp, #16]
   9b1b4:   aa0003f3    mov x19, x0
   9b1b8:   12001c40    and w0, w2, #0xff
   9b1bc:   71001c1f    cmp w0, #0x7
   9b1c0:   54000128    b.hi    9b1e4 <CKeyboardBehaviour::KeyReleased(unsigned char)+0x44>
   9b1c4:   39406261    ldrb    w1, [x19, #24]
   9b1c8:   52800020    mov w0, #0x1
   9b1cc:   1ac22000    lsl w0, w0, w2
   9b1d0:   0a200020    bic w0, w1, w0
   9b1d4:   39006260    strb    w0, [x19, #24]
   9b1d8:   f9400bf3    ldr x19, [sp, #16]
   9b1dc:   a8c27bfd    ldp x29, x30, [sp], #32
   9b1e0:   d65f03c0    ret
   9b1e4:   39406660    ldrb    w0, [x19, #25]
   9b1e8:   6b01001f    cmp w0, w1
   9b1ec:   54ffff61    b.ne    9b1d8 <CKeyboardBehaviour::KeyReleased(unsigned char)+0x38>
   9b1f0:   f9401260    ldr x0, [x19, #32]
   9b1f4:   b50000a0    cbnz    x0, 9b208 <CKeyboardBehaviour::KeyReleased(unsigned char)+0x68>
   9b1f8:   3900667f    strb    wzr, [x19, #25]
   9b1fc:   f9400bf3    ldr x19, [sp, #16]
   9b200:   a8c27bfd    ldp x29, x30, [sp], #32
   9b204:   d65f03c0    ret
   9b208:   94002d1e    bl  a6680 <CTimer::Get()>
   9b20c:   f9401261    ldr x1, [x19, #32]
   9b210:   94002b50    bl  a5f50 <CTimer::CancelKernelTimer(unsigned long)>
   9b214:   3900667f    strb    wzr, [x19, #25]
   9b218:   f900127f    str xzr, [x19, #32]
   9b21c:   17fffff8    b   9b1fc <CKeyboardBehaviour::KeyReleased(unsigned char)+0x5c>

000000000009b220 <CKeyboardBehaviour::TimerHandler(unsigned long)>:
   9b220:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9b224:   910003fd    mov x29, sp
   9b228:   f9401002    ldr x2, [x0, #32]
   9b22c:   f9000bf3    str x19, [sp, #16]
   9b230:   eb01005f    cmp x2, x1
   9b234:   540002e1    b.ne    9b290 <CKeyboardBehaviour::TimerHandler(unsigned long)+0x70>
   9b238:   39406401    ldrb    w1, [x0, #25]
   9b23c:   aa0003f3    mov x19, x0
   9b240:   35000081    cbnz    w1, 9b250 <CKeyboardBehaviour::TimerHandler(unsigned long)+0x30>
   9b244:   f9400bf3    ldr x19, [sp, #16]
   9b248:   a8c27bfd    ldp x29, x30, [sp], #32
   9b24c:   d65f03c0    ret
   9b250:   97ffff5c    bl  9afc0 <CKeyboardBehaviour::GenerateKeyEvent(unsigned char)>
   9b254:   94002d0b    bl  a6680 <CTimer::Get()>
   9b258:   90000002    adrp    x2, 9b000 <CKeyboardBehaviour::GenerateKeyEvent(unsigned char)+0x40>
   9b25c:   aa1303e4    mov x4, x19
   9b260:   91028042    add x2, x2, #0xa0
   9b264:   d2800003    mov x3, #0x0
   9b268:   52800101    mov w1, #0x8
   9b26c:   94002add    bl  a5de0 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned long, void*, void*), void*, void*)>
   9b270:   f9001260    str x0, [x19, #32]
   9b274:   b5fffe80    cbnz    x0, 9b244 <CKeyboardBehaviour::TimerHandler(unsigned long)+0x24>
   9b278:   f00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9b27c:   d00000a0    adrp    x0, b1000 <_etext+0x1f9c>
   9b280:   91284021    add x1, x1, #0xa10
   9b284:   91032000    add x0, x0, #0xc8
   9b288:   528016e2    mov w2, #0xb7
   9b28c:   9400060d    bl  9cac0 <assertion_failed>
   9b290:   f00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9b294:   f00000a0    adrp    x0, b2000 <_etext+0x2f9c>
   9b298:   91284021    add x1, x1, #0xa10
   9b29c:   9129e000    add x0, x0, #0xa78
   9b2a0:   52801602    mov w2, #0xb0
   9b2a4:   94000607    bl  9cac0 <assertion_failed>
    ...

000000000009b2b0 <CKeyMap::CKeyMap()>:
   9b2b0:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   9b2b4:   910003fd    mov x29, sp
   9b2b8:   a90153f3    stp x19, x20, [sp, #16]
   9b2bc:   a9025bf5    stp x21, x22, [sp, #32]
   9b2c0:   aa0003f5    mov x21, x0
   9b2c4:   f9001bf7    str x23, [sp, #48]
   9b2c8:   790a001f    strh    wzr, [x0, #1280]
   9b2cc:   3914081f    strb    wzr, [x0, #1282]
   9b2d0:   94000ec8    bl  9edf0 <CKernelOptions::Get()>
   9b2d4:   94000e77    bl  9ecb0 <CKernelOptions::GetKeyMap() const>
   9b2d8:   b40004c0    cbz x0, 9b370 <CKeyMap::CKeyMap()+0xc0>
   9b2dc:   f00000f7    adrp    x23, ba000 <font_data+0x1080>
   9b2e0:   aa0003f4    mov x20, x0
   9b2e4:   f942bae0    ldr x0, [x23, #1392]
   9b2e8:   d2800013    mov x19, #0x0
   9b2ec:   9115c2f6    add x22, x23, #0x570
   9b2f0:   b50000a0    cbnz    x0, 9b304 <CKeyMap::CKeyMap()+0x54>
   9b2f4:   14000025    b   9b388 <CKeyMap::CKeyMap()+0xd8>
   9b2f8:   91000673    add x19, x19, #0x1
   9b2fc:   f8737ac0    ldr x0, [x22, x19, lsl #3]
   9b300:   b40001e0    cbz x0, 9b33c <CKeyMap::CKeyMap()+0x8c>
   9b304:   aa1403e1    mov x1, x20
   9b308:   94002d1a    bl  a6770 <strcmp>
   9b30c:   35ffff60    cbnz    w0, 9b2f8 <CKeyMap::CKeyMap()+0x48>
   9b310:   8b130a73    add x19, x19, x19, lsl #2
   9b314:   d00000c0    adrp    x0, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9b318:   91258000    add x0, x0, #0x960
   9b31c:   f9401bf7    ldr x23, [sp, #48]
   9b320:   d280a002    mov x2, #0x500
   9b324:   8b132001    add x1, x0, x19, lsl #8
   9b328:   a94153f3    ldp x19, x20, [sp, #16]
   9b32c:   aa1503e0    mov x0, x21
   9b330:   a9425bf5    ldp x21, x22, [sp, #32]
   9b334:   a8c47bfd    ldp x29, x30, [sp], #64
   9b338:   14002e90    b   a6d78 <memcpy>
   9b33c:   f942bae0    ldr x0, [x23, #1392]
   9b340:   b4000240    cbz x0, 9b388 <CKeyMap::CKeyMap()+0xd8>
   9b344:   f00000b4    adrp    x20, b2000 <_etext+0x2f9c>
   9b348:   912ac294    add x20, x20, #0xab0
   9b34c:   d2800013    mov x19, #0x0
   9b350:   14000004    b   9b360 <CKeyMap::CKeyMap()+0xb0>
   9b354:   91000673    add x19, x19, #0x1
   9b358:   f8737ac0    ldr x0, [x22, x19, lsl #3]
   9b35c:   b4000160    cbz x0, 9b388 <CKeyMap::CKeyMap()+0xd8>
   9b360:   aa1403e1    mov x1, x20
   9b364:   94002d03    bl  a6770 <strcmp>
   9b368:   35ffff60    cbnz    w0, 9b354 <CKeyMap::CKeyMap()+0xa4>
   9b36c:   17ffffe9    b   9b310 <CKeyMap::CKeyMap()+0x60>
   9b370:   f00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9b374:   f00000a0    adrp    x0, b2000 <_etext+0x2f9c>
   9b378:   912a4021    add x1, x1, #0xa90
   9b37c:   912a8000    add x0, x0, #0xaa0
   9b380:   528010e2    mov w2, #0x87
   9b384:   940005cf    bl  9cac0 <assertion_failed>
   9b388:   f00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9b38c:   f00000a0    adrp    x0, b2000 <_etext+0x2f9c>
   9b390:   912a4021    add x1, x1, #0xa90
   9b394:   912ae000    add x0, x0, #0xab8
   9b398:   528011a2    mov w2, #0x8d
   9b39c:   940005c9    bl  9cac0 <assertion_failed>

000000000009b3a0 <CKeyMap::~CKeyMap()>:
   9b3a0:   d65f03c0    ret
   9b3a4:   d503201f    nop
   9b3a8:   d503201f    nop
   9b3ac:   d503201f    nop

000000000009b3b0 <CKeyMap::ClearTable(unsigned char)>:
   9b3b0:   12001c21    and w1, w1, #0xff
   9b3b4:   7100103f    cmp w1, #0x4
   9b3b8:   54000168    b.hi    9b3e4 <CKeyMap::ClearTable(unsigned char)+0x34>
   9b3bc:   d37f1c22    ubfiz   x2, x1, #1, #8
   9b3c0:   91140001    add x1, x0, #0x500
   9b3c4:   8b020021    add x1, x1, x2
   9b3c8:   8b020000    add x0, x0, x2
   9b3cc:   d503201f    nop
   9b3d0:   7800a41f    strh    wzr, [x0], #10
   9b3d4:   eb01001f    cmp x0, x1
   9b3d8:   54ffffc1    b.ne    9b3d0 <CKeyMap::ClearTable(unsigned char)+0x20>
   9b3dc:   52800020    mov w0, #0x1
   9b3e0:   d65f03c0    ret
   9b3e4:   52800000    mov w0, #0x0
   9b3e8:   d65f03c0    ret
   9b3ec:   d503201f    nop

000000000009b3f0 <CKeyMap::SetEntry(unsigned char, unsigned char, unsigned short)>:
   9b3f0:   12001c21    and w1, w1, #0xff
   9b3f4:   13001c45    sxtb    w5, w2
   9b3f8:   7100103f    cmp w1, #0x4
   9b3fc:   1a9f97e4    cset    w4, hi
   9b400:   12003c63    and w3, w3, #0xffff
   9b404:   710000bf    cmp w5, #0x0
   9b408:   1a9fc7e6    cset    w6, le
   9b40c:   2a060087    orr w7, w4, w6
   9b410:   aa0003e5    mov x5, x0
   9b414:   12001c42    and w2, w2, #0xff
   9b418:   2a0703e0    mov w0, w7
   9b41c:   35000127    cbnz    w7, 9b440 <CKeyMap::SetEntry(unsigned char, unsigned char, unsigned short)+0x50>
   9b420:   7104e87f    cmp w3, #0x13a
   9b424:   540000c8    b.hi    9b43c <CKeyMap::SetEntry(unsigned char, unsigned char, unsigned short)+0x4c>
   9b428:   52800020    mov w0, #0x1
   9b42c:   d37e1c44    ubfiz   x4, x2, #2, #8
   9b430:   8b220082    add x2, x4, w2, uxtb
   9b434:   8b210041    add x1, x2, w1, uxtb
   9b438:   782178a3    strh    w3, [x5, x1, lsl #1]
   9b43c:   d65f03c0    ret
   9b440:   52800000    mov w0, #0x0
   9b444:   d65f03c0    ret
   9b448:   d503201f    nop
   9b44c:   d503201f    nop

000000000009b450 <CKeyMap::Translate(unsigned char, unsigned char)>:
   9b450:   13001c23    sxtb    w3, w1
   9b454:   12001c42    and w2, w2, #0xff
   9b458:   7100007f    cmp w3, #0x0
   9b45c:   12001c21    and w1, w1, #0xff
   9b460:   aa0003e3    mov x3, x0
   9b464:   5400050d    b.le    9b504 <CKeyMap::Translate(unsigned char, unsigned char)+0xb4>
   9b468:   d37e1c20    ubfiz   x0, x1, #2, #8
   9b46c:   8b210000    add x0, x0, w1, uxtb
   9b470:   78607860    ldrh    w0, [x3, x0, lsl #1]
   9b474:   93407c24    sxtw    x4, w1
   9b478:   7104281f    cmp w0, #0x10a
   9b47c:   54000380    b.eq    9b4ec <CKeyMap::Translate(unsigned char, unsigned char)+0x9c>
   9b480:   51045c05    sub w5, w0, #0x117
   9b484:   12003ca5    and w5, w5, #0xffff
   9b488:   71002cbf    cmp w5, #0xb
   9b48c:   54000048    b.hi    9b494 <CKeyMap::Translate(unsigned char, unsigned char)+0x44>
   9b490:   371004e2    tbnz    w2, #2, 9b52c <CKeyMap::Translate(unsigned char, unsigned char)+0xdc>
   9b494:   12800e65    mov w5, #0xffffff8c
   9b498:   6a05005f    tst w2, w5
   9b49c:   54000341    b.ne    9b504 <CKeyMap::Translate(unsigned char, unsigned char)+0xb4>
   9b4a0:   51014c25    sub w5, w1, #0x53
   9b4a4:   12001ca5    and w5, w5, #0xff
   9b4a8:   710040bf    cmp w5, #0x10
   9b4ac:   54000308    b.hi    9b50c <CKeyMap::Translate(unsigned char, unsigned char)+0xbc>
   9b4b0:   39540460    ldrb    w0, [x3, #1281]
   9b4b4:   8b040884    add x4, x4, x4, lsl #2
   9b4b8:   8b000084    add x4, x4, x0
   9b4bc:   78647860    ldrh    w0, [x3, x4, lsl #1]
   9b4c0:   7104981f    cmp w0, #0x126
   9b4c4:   540005c0    b.eq    9b57c <CKeyMap::Translate(unsigned char, unsigned char)+0x12c>
   9b4c8:   7104a01f    cmp w0, #0x128
   9b4cc:   540004e0    b.eq    9b568 <CKeyMap::Translate(unsigned char, unsigned char)+0x118>
   9b4d0:   7104901f    cmp w0, #0x124
   9b4d4:   540000a1    b.ne    9b4e8 <CKeyMap::Translate(unsigned char, unsigned char)+0x98>
   9b4d8:   39540061    ldrb    w1, [x3, #1280]
   9b4dc:   52802760    mov w0, #0x13b
   9b4e0:   52000021    eor w1, w1, #0x1
   9b4e4:   39140061    strb    w1, [x3, #1280]
   9b4e8:   d65f03c0    ret
   9b4ec:   52800225    mov w5, #0x11
   9b4f0:   6a05005f    tst w2, w5
   9b4f4:   54fffd00    b.eq    9b494 <CKeyMap::Translate(unsigned char, unsigned char)+0x44>
   9b4f8:   3617fce2    tbz w2, #2, 9b494 <CKeyMap::Translate(unsigned char, unsigned char)+0x44>
   9b4fc:   52802940    mov w0, #0x14a
   9b500:   d65f03c0    ret
   9b504:   52800000    mov w0, #0x0
   9b508:   d65f03c0    ret
   9b50c:   52800445    mov w5, #0x22
   9b510:   0a050045    and w5, w2, w5
   9b514:   36300122    tbz w2, #6, 9b538 <CKeyMap::Translate(unsigned char, unsigned char)+0xe8>
   9b518:   8b040884    add x4, x4, x4, lsl #2
   9b51c:   8b040464    add x4, x3, x4, lsl #1
   9b520:   34000405    cbz w5, 9b5a0 <CKeyMap::Translate(unsigned char, unsigned char)+0x150>
   9b524:   79400c80    ldrh    w0, [x4, #6]
   9b528:   17ffffe6    b   9b4c0 <CKeyMap::Translate(unsigned char, unsigned char)+0x70>
   9b52c:   11009c00    add w0, w0, #0x27
   9b530:   12003c00    and w0, w0, #0xffff
   9b534:   d65f03c0    ret
   9b538:   350002c5    cbnz    w5, 9b590 <CKeyMap::Translate(unsigned char, unsigned char)+0x140>
   9b53c:   52800225    mov w5, #0x11
   9b540:   6a05005f    tst w2, w5
   9b544:   54fffbe0    b.eq    9b4c0 <CKeyMap::Translate(unsigned char, unsigned char)+0x70>
   9b548:   51001020    sub w0, w1, #0x4
   9b54c:   8b040884    add x4, x4, x4, lsl #2
   9b550:   12001c00    and w0, w0, #0xff
   9b554:   7100641f    cmp w0, #0x19
   9b558:   9a9f97e0    cset    x0, hi
   9b55c:   8b000880    add x0, x4, x0, lsl #2
   9b560:   78607860    ldrh    w0, [x3, x0, lsl #1]
   9b564:   17ffffd7    b   9b4c0 <CKeyMap::Translate(unsigned char, unsigned char)+0x70>
   9b568:   39540461    ldrb    w1, [x3, #1281]
   9b56c:   52802780    mov w0, #0x13c
   9b570:   52000021    eor w1, w1, #0x1
   9b574:   39140461    strb    w1, [x3, #1281]
   9b578:   d65f03c0    ret
   9b57c:   39540861    ldrb    w1, [x3, #1282]
   9b580:   528027a0    mov w0, #0x13d
   9b584:   52000021    eor w1, w1, #0x1
   9b588:   39140861    strb    w1, [x3, #1282]
   9b58c:   d65f03c0    ret
   9b590:   8b040884    add x4, x4, x4, lsl #2
   9b594:   8b040464    add x4, x3, x4, lsl #1
   9b598:   79400480    ldrh    w0, [x4, #2]
   9b59c:   17ffffc9    b   9b4c0 <CKeyMap::Translate(unsigned char, unsigned char)+0x70>
   9b5a0:   79400880    ldrh    w0, [x4, #4]
   9b5a4:   17ffffc7    b   9b4c0 <CKeyMap::Translate(unsigned char, unsigned char)+0x70>
   9b5a8:   d503201f    nop
   9b5ac:   d503201f    nop

000000000009b5b0 <CKeyMap::GetString(unsigned short, unsigned char, char*) const>:
   9b5b0:   12003c21    and w1, w1, #0xffff
   9b5b4:   12001c42    and w2, w2, #0xff
   9b5b8:   51008424    sub w4, w1, #0x21
   9b5bc:   12003c84    and w4, w4, #0xffff
   9b5c0:   7104649f    cmp w4, #0x119
   9b5c4:   540004c8    b.hi    9b65c <CKeyMap::GetString(unsigned short, unsigned char, char*) const+0xac>
   9b5c8:   51040024    sub w4, w1, #0x100
   9b5cc:   12003c85    and w5, w4, #0xffff
   9b5d0:   7100e8bf    cmp w5, #0x3a
   9b5d4:   540003a9    b.ls    9b648 <CKeyMap::GetString(unsigned short, unsigned char, char*) const+0x98>
   9b5d8:   52800224    mov w4, #0x11
   9b5dc:   13001c25    sxtb    w5, w1
   9b5e0:   6a04005f    tst w2, w4
   9b5e4:   54000180    b.eq    9b614 <CKeyMap::GetString(unsigned short, unsigned char, char*) const+0x64>
   9b5e8:   12001c21    and w1, w1, #0xff
   9b5ec:   d2800000    mov x0, #0x0
   9b5f0:   51018422    sub w2, w1, #0x61
   9b5f4:   12001c42    and w2, w2, #0xff
   9b5f8:   7100645f    cmp w2, #0x19
   9b5fc:   540000a8    b.hi    9b610 <CKeyMap::GetString(unsigned short, unsigned char, char*) const+0x60>
   9b600:   51018021    sub w1, w1, #0x60
   9b604:   aa0303e0    mov x0, x3
   9b608:   3900047f    strb    wzr, [x3, #1]
   9b60c:   39000061    strb    w1, [x3]
   9b610:   d65f03c0    ret
   9b614:   39540000    ldrb    w0, [x0, #1280]
   9b618:   36000100    tbz w0, #0, 9b638 <CKeyMap::GetString(unsigned short, unsigned char, char*) const+0x88>
   9b61c:   12001c21    and w1, w1, #0xff
   9b620:   51010420    sub w0, w1, #0x41
   9b624:   12001c00    and w0, w0, #0xff
   9b628:   7100641f    cmp w0, #0x19
   9b62c:   540001c8    b.hi    9b664 <CKeyMap::GetString(unsigned short, unsigned char, char*) const+0xb4>
   9b630:   11008021    add w1, w1, #0x20
   9b634:   13001c25    sxtb    w5, w1
   9b638:   aa0303e0    mov x0, x3
   9b63c:   39000065    strb    w5, [x3]
   9b640:   3900047f    strb    wzr, [x3, #1]
   9b644:   17fffff3    b   9b610 <CKeyMap::GetString(unsigned short, unsigned char, char*) const+0x60>
   9b648:   f00000e0    adrp    x0, ba000 <font_data+0x1080>
   9b64c:   9115c000    add x0, x0, #0x570
   9b650:   91010000    add x0, x0, #0x40
   9b654:   f864d800    ldr x0, [x0, w4, sxtw #3]
   9b658:   d65f03c0    ret
   9b65c:   d2800000    mov x0, #0x0
   9b660:   d65f03c0    ret
   9b664:   51018420    sub w0, w1, #0x61
   9b668:   51008021    sub w1, w1, #0x20
   9b66c:   12001c00    and w0, w0, #0xff
   9b670:   13001c21    sxtb    w1, w1
   9b674:   7100681f    cmp w0, #0x1a
   9b678:   1a853025    csel    w5, w1, w5, cc
   9b67c:   17ffffef    b   9b638 <CKeyMap::GetString(unsigned short, unsigned char, char*) const+0x88>

000000000009b680 <CKeyMap::GetLEDStatus() const>:
   9b680:   39540801    ldrb    w1, [x0, #1282]
   9b684:   39540002    ldrb    w2, [x0, #1280]
   9b688:   39540403    ldrb    w3, [x0, #1281]
   9b68c:   4b0103e1    neg w1, w1
   9b690:   121e0021    and w1, w1, #0x4
   9b694:   531f1840    ubfiz   w0, w2, #1, #7
   9b698:   2a030000    orr w0, w0, w3
   9b69c:   2a010000    orr w0, w0, w1
   9b6a0:   d65f03c0    ret
   9b6a4:   d503201f    nop
   9b6a8:   d503201f    nop
   9b6ac:   d503201f    nop

000000000009b6b0 <CKeyMap::LookupDefaultMap(char const*)>:
   9b6b0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   9b6b4:   910003fd    mov x29, sp
   9b6b8:   f90013f5    str x21, [sp, #32]
   9b6bc:   f00000f5    adrp    x21, ba000 <font_data+0x1080>
   9b6c0:   a90153f3    stp x19, x20, [sp, #16]
   9b6c4:   aa0003f4    mov x20, x0
   9b6c8:   f942baa0    ldr x0, [x21, #1392]
   9b6cc:   b4000320    cbz x0, 9b730 <CKeyMap::LookupDefaultMap(char const*)+0x80>
   9b6d0:   9115c2b5    add x21, x21, #0x570
   9b6d4:   d2800013    mov x19, #0x0
   9b6d8:   b50000b4    cbnz    x20, 9b6ec <CKeyMap::LookupDefaultMap(char const*)+0x3c>
   9b6dc:   1400000f    b   9b718 <CKeyMap::LookupDefaultMap(char const*)+0x68>
   9b6e0:   91000673    add x19, x19, #0x1
   9b6e4:   f8737aa0    ldr x0, [x21, x19, lsl #3]
   9b6e8:   b4000240    cbz x0, 9b730 <CKeyMap::LookupDefaultMap(char const*)+0x80>
   9b6ec:   aa1403e1    mov x1, x20
   9b6f0:   94002c20    bl  a6770 <strcmp>
   9b6f4:   35ffff60    cbnz    w0, 9b6e0 <CKeyMap::LookupDefaultMap(char const*)+0x30>
   9b6f8:   8b130a73    add x19, x19, x19, lsl #2
   9b6fc:   d00000c0    adrp    x0, b5000 <CUSBSerialCP210xDevice::s_DeviceInfo+0x70>
   9b700:   91258000    add x0, x0, #0x960
   9b704:   f94013f5    ldr x21, [sp, #32]
   9b708:   8b132000    add x0, x0, x19, lsl #8
   9b70c:   a94153f3    ldp x19, x20, [sp, #16]
   9b710:   a8c37bfd    ldp x29, x30, [sp], #48
   9b714:   d65f03c0    ret
   9b718:   f00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9b71c:   f00000a0    adrp    x0, b2000 <_etext+0x2f9c>
   9b720:   912a4021    add x1, x1, #0xa90
   9b724:   912a8000    add x0, x0, #0xaa0
   9b728:   52802aa2    mov w2, #0x155
   9b72c:   940004e5    bl  9cac0 <assertion_failed>
   9b730:   a94153f3    ldp x19, x20, [sp, #16]
   9b734:   d2800000    mov x0, #0x0
   9b738:   f94013f5    ldr x21, [sp, #32]
   9b73c:   a8c37bfd    ldp x29, x30, [sp], #48
   9b740:   d65f03c0    ret
    ...

000000000009b750 <proxy_handler(unsigned int, int, int, int, void*)>:
   9b750:   aa0403f0    mov x16, x4
   9b754:   d61f0200    br  x16
   9b758:   d503201f    nop
   9b75c:   d503201f    nop

000000000009b760 <CMouseDevice::~CMouseDevice()>:
   9b760:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9b764:   900000e1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9b768:   911dc021    add x1, x1, #0x770
   9b76c:   910003fd    mov x29, sp
   9b770:   f9000bf3    str x19, [sp, #16]
   9b774:   aa0003f3    mov x19, x0
   9b778:   f9000001    str x1, [x0]
   9b77c:   a9037c1f    stp xzr, xzr, [x0, #48]
   9b780:   940008b8    bl  9da60 <CDeviceNameService::Get()>
   9b784:   900000e1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9b788:   b9404262    ldr w2, [x19, #64]
   9b78c:   52800003    mov w3, #0x0
   9b790:   911ec021    add x1, x1, #0x7b0
   9b794:   940008df    bl  9db10 <CDeviceNameService::RemoveDevice(char const*, unsigned int, bool)>
   9b798:   b9404261    ldr w1, [x19, #64]
   9b79c:   f00000e0    adrp    x0, ba000 <font_data+0x1080>
   9b7a0:   9124c000    add x0, x0, #0x930
   9b7a4:   940031df    bl  a7f20 <CNumberPool::FreeNumber(unsigned int)>
   9b7a8:   91004260    add x0, x19, #0x10
   9b7ac:   94000275    bl  9c180 <CMouseBehaviour::~CMouseBehaviour()>
   9b7b0:   aa1303e0    mov x0, x19
   9b7b4:   f9400bf3    ldr x19, [sp, #16]
   9b7b8:   a8c27bfd    ldp x29, x30, [sp], #32
   9b7bc:   14000715    b   9d410 <CDevice::~CDevice()>

000000000009b7c0 <CMouseDevice::~CMouseDevice()>:
   9b7c0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9b7c4:   910003fd    mov x29, sp
   9b7c8:   f9000bf3    str x19, [sp, #16]
   9b7cc:   aa0003f3    mov x19, x0
   9b7d0:   97ffffe4    bl  9b760 <CMouseDevice::~CMouseDevice()>
   9b7d4:   aa1303e0    mov x0, x19
   9b7d8:   f9400bf3    ldr x19, [sp, #16]
   9b7dc:   d2800a01    mov x1, #0x50
   9b7e0:   a8c27bfd    ldp x29, x30, [sp], #32
   9b7e4:   1400301f    b   a7860 <operator delete(void*, unsigned long)>
   9b7e8:   d503201f    nop
   9b7ec:   d503201f    nop

000000000009b7f0 <CMouseDevice::CMouseDevice(unsigned int, bool)>:
   9b7f0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   9b7f4:   910003fd    mov x29, sp
   9b7f8:   a90153f3    stp x19, x20, [sp, #16]
   9b7fc:   aa0003f3    mov x19, x0
   9b800:   900000f4    adrp    x20, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9b804:   911ec294    add x20, x20, #0x7b0
   9b808:   a9025bf5    stp x21, x22, [sp, #32]
   9b80c:   12001c56    and w22, w2, #0xff
   9b810:   2a0103f5    mov w21, w1
   9b814:   94000733    bl  9d4e0 <CDevice::CDevice()>
   9b818:   aa1303e0    mov x0, x19
   9b81c:   900000e1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9b820:   911dc021    add x1, x1, #0x770
   9b824:   f8010401    str x1, [x0], #16
   9b828:   94000166    bl  9bdc0 <CMouseBehaviour::CMouseBehaviour()>
   9b82c:   f00000e0    adrp    x0, ba000 <font_data+0x1080>
   9b830:   91002282    add x2, x20, #0x8
   9b834:   a9037e7f    stp xzr, xzr, [x19, #48]
   9b838:   52800021    mov w1, #0x1
   9b83c:   9124c000    add x0, x0, #0x930
   9b840:   94003188    bl  a7e60 <CNumberPool::AllocateNumber(bool, char const*)>
   9b844:   29085660    stp w0, w21, [x19, #64]
   9b848:   39012276    strb    w22, [x19, #72]
   9b84c:   94000885    bl  9da60 <CDeviceNameService::Get()>
   9b850:   a9425bf5    ldp x21, x22, [sp, #32]
   9b854:   aa1403e1    mov x1, x20
   9b858:   aa1303e3    mov x3, x19
   9b85c:   52800004    mov w4, #0x0
   9b860:   b9404262    ldr w2, [x19, #64]
   9b864:   a94153f3    ldp x19, x20, [sp, #16]
   9b868:   a8c37bfd    ldp x29, x30, [sp], #48
   9b86c:   14000889    b   9da90 <CDeviceNameService::AddDevice(char const*, unsigned int, CDevice*, bool)>

000000000009b870 <CMouseDevice::Setup(unsigned int, unsigned int)>:
   9b870:   91004000    add x0, x0, #0x10
   9b874:   1400015b    b   9bde0 <CMouseBehaviour::Setup(unsigned int, unsigned int)>
   9b878:   d503201f    nop
   9b87c:   d503201f    nop

000000000009b880 <CMouseDevice::Release()>:
   9b880:   91004000    add x0, x0, #0x10
   9b884:   14000247    b   9c1a0 <CMouseBehaviour::Release()>
   9b888:   d503201f    nop
   9b88c:   d503201f    nop

000000000009b890 <CMouseDevice::RegisterEventHandler(void (*)(TMouseEvent, unsigned int, unsigned int, unsigned int, int))>:
   9b890:   91004000    add x0, x0, #0x10
   9b894:   1400019b    b   9bf00 <CMouseBehaviour::RegisterEventHandler(void (*)(TMouseEvent, unsigned int, unsigned int, unsigned int, int))>
   9b898:   d503201f    nop
   9b89c:   d503201f    nop

000000000009b8a0 <CMouseDevice::SetCursor(unsigned int, unsigned int)>:
   9b8a0:   91004000    add x0, x0, #0x10
   9b8a4:   14000257    b   9c200 <CMouseBehaviour::SetCursor(unsigned int, unsigned int)>
   9b8a8:   d503201f    nop
   9b8ac:   d503201f    nop

000000000009b8b0 <CMouseDevice::ShowCursor(bool)>:
   9b8b0:   91004000    add x0, x0, #0x10
   9b8b4:   14000277    b   9c290 <CMouseBehaviour::ShowCursor(bool)>
   9b8b8:   d503201f    nop
   9b8bc:   d503201f    nop

000000000009b8c0 <CMouseDevice::UpdateCursor()>:
   9b8c0:   f9401801    ldr x1, [x0, #48]
   9b8c4:   b4000041    cbz x1, 9b8cc <CMouseDevice::UpdateCursor()+0xc>
   9b8c8:   d65f03c0    ret
   9b8cc:   91004000    add x0, x0, #0x10
   9b8d0:   14000290    b   9c310 <CMouseBehaviour::UpdateCursor()>
   9b8d4:   d503201f    nop
   9b8d8:   d503201f    nop
   9b8dc:   d503201f    nop

000000000009b8e0 <CMouseDevice::RegisterStatusHandler(void (*)(unsigned int, int, int, int, void*), void*)>:
   9b8e0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   9b8e4:   910003fd    mov x29, sp
   9b8e8:   f9401803    ldr x3, [x0, #48]
   9b8ec:   b50000a3    cbnz    x3, 9b900 <CMouseDevice::RegisterStatusHandler(void (*)(unsigned int, int, int, int, void*), void*)+0x20>
   9b8f0:   a9030801    stp x1, x2, [x0, #48]
   9b8f4:   b4000121    cbz x1, 9b918 <CMouseDevice::RegisterStatusHandler(void (*)(unsigned int, int, int, int, void*), void*)+0x38>
   9b8f8:   a8c17bfd    ldp x29, x30, [sp], #16
   9b8fc:   d65f03c0    ret
   9b900:   f00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9b904:   f00000a0    adrp    x0, b2000 <_etext+0x2f9c>
   9b908:   91316021    add x1, x1, #0xc58
   9b90c:   911ee000    add x0, x0, #0x7b8
   9b910:   52800a82    mov w2, #0x54
   9b914:   9400046b    bl  9cac0 <assertion_failed>
   9b918:   f00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9b91c:   f00000a0    adrp    x0, b2000 <_etext+0x2f9c>
   9b920:   91316021    add x1, x1, #0xc58
   9b924:   911f4000    add x0, x0, #0x7d0
   9b928:   52800ae2    mov w2, #0x57
   9b92c:   94000465    bl  9cac0 <assertion_failed>

000000000009b930 <CMouseDevice::RegisterStatusHandler(void (*)(unsigned int, int, int, int))>:
   9b930:   f9401802    ldr x2, [x0, #48]
   9b934:   b50000a2    cbnz    x2, 9b948 <CMouseDevice::RegisterStatusHandler(void (*)(unsigned int, int, int, int))+0x18>
   9b938:   90000002    adrp    x2, 9b000 <CKeyboardBehaviour::GenerateKeyEvent(unsigned char)+0x40>
   9b93c:   911d4042    add x2, x2, #0x750
   9b940:   a9030402    stp x2, x1, [x0, #48]
   9b944:   d65f03c0    ret
   9b948:   f00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9b94c:   f00000a0    adrp    x0, b2000 <_etext+0x2f9c>
   9b950:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   9b954:   91316021    add x1, x1, #0xc58
   9b958:   910003fd    mov x29, sp
   9b95c:   911ee000    add x0, x0, #0x7b8
   9b960:   52800a82    mov w2, #0x54
   9b964:   94000457    bl  9cac0 <assertion_failed>
   9b968:   d503201f    nop
   9b96c:   d503201f    nop

000000000009b970 <CMouseDevice::ReportHandler(unsigned int, int, int, int)>:
   9b970:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   9b974:   910003fd    mov x29, sp
   9b978:   a90153f3    stp x19, x20, [sp, #16]
   9b97c:   aa0003f3    mov x19, x0
   9b980:   91004000    add x0, x0, #0x10
   9b984:   2a0103f4    mov w20, w1
   9b988:   a9025bf5    stp x21, x22, [sp, #32]
   9b98c:   2a0203f5    mov w21, w2
   9b990:   2a0303f6    mov w22, w3
   9b994:   f9001bf7    str x23, [sp, #48]
   9b998:   2a0403f7    mov w23, w4
   9b99c:   9400016d    bl  9bf50 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int, int)>
   9b9a0:   f9401a65    ldr x5, [x19, #48]
   9b9a4:   b4000185    cbz x5, 9b9d4 <CMouseDevice::ReportHandler(unsigned int, int, int, int)+0x64>
   9b9a8:   f9401e64    ldr x4, [x19, #56]
   9b9ac:   2a1703e3    mov w3, w23
   9b9b0:   2a1603e2    mov w2, w22
   9b9b4:   2a1503e1    mov w1, w21
   9b9b8:   a9425bf5    ldp x21, x22, [sp, #32]
   9b9bc:   2a1403e0    mov w0, w20
   9b9c0:   aa0503f0    mov x16, x5
   9b9c4:   a94153f3    ldp x19, x20, [sp, #16]
   9b9c8:   f9401bf7    ldr x23, [sp, #48]
   9b9cc:   a8c47bfd    ldp x29, x30, [sp], #64
   9b9d0:   d61f0200    br  x16
   9b9d4:   a94153f3    ldp x19, x20, [sp, #16]
   9b9d8:   a9425bf5    ldp x21, x22, [sp, #32]
   9b9dc:   f9401bf7    ldr x23, [sp, #48]
   9b9e0:   a8c47bfd    ldp x29, x30, [sp], #64
   9b9e4:   d65f03c0    ret
   9b9e8:   d503201f    nop
   9b9ec:   d503201f    nop

000000000009b9f0 <CMouseDevice::GetButtonCount() const>:
   9b9f0:   b9404400    ldr w0, [x0, #68]
   9b9f4:   d65f03c0    ret
   9b9f8:   d503201f    nop
   9b9fc:   d503201f    nop

000000000009ba00 <CMouseDevice::HasWheel() const>:
   9ba00:   39412000    ldrb    w0, [x0, #72]
   9ba04:   d65f03c0    ret
    ...

000000000009ba10 <_GLOBAL__sub_I__ZN12CMouseDevice18s_DeviceNumberPoolE>:
   9ba10:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9ba14:   910003fd    mov x29, sp
   9ba18:   528007e2    mov w2, #0x3f
   9ba1c:   52800021    mov w1, #0x1
   9ba20:   f9000bf3    str x19, [sp, #16]
   9ba24:   f00000f3    adrp    x19, ba000 <font_data+0x1080>
   9ba28:   9124c273    add x19, x19, #0x930
   9ba2c:   aa1303e0    mov x0, x19
   9ba30:   940030f0    bl  a7df0 <CNumberPool::CNumberPool(unsigned int, unsigned int)>
   9ba34:   f00000e2    adrp    x2, ba000 <font_data+0x1080>
   9ba38:   90000060    adrp    x0, a7000 <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int, bool)+0xd0>
   9ba3c:   aa1303e1    mov x1, x19
   9ba40:   f9400bf3    ldr x19, [sp, #16]
   9ba44:   91278042    add x2, x2, #0x9e0
   9ba48:   a8c27bfd    ldp x29, x30, [sp], #32
   9ba4c:   91394000    add x0, x0, #0xe50
   9ba50:   140026d0    b   a5590 <__cxa_atexit>
    ...

000000000009ba60 <CTouchScreenDevice::~CTouchScreenDevice()>:
   9ba60:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9ba64:   900000e1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9ba68:   911f4021    add x1, x1, #0x7d0
   9ba6c:   910003fd    mov x29, sp
   9ba70:   f9000bf3    str x19, [sp, #16]
   9ba74:   aa0003f3    mov x19, x0
   9ba78:   f9000001    str x1, [x0]
   9ba7c:   f900081f    str xzr, [x0, #16]
   9ba80:   f900101f    str xzr, [x0, #32]
   9ba84:   940007f7    bl  9da60 <CDeviceNameService::Get()>
   9ba88:   b9404262    ldr w2, [x19, #64]
   9ba8c:   900000e1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9ba90:   52800003    mov w3, #0x0
   9ba94:   91204021    add x1, x1, #0x810
   9ba98:   9400081e    bl  9db10 <CDeviceNameService::RemoveDevice(char const*, unsigned int, bool)>
   9ba9c:   b9404261    ldr w1, [x19, #64]
   9baa0:   f00000e0    adrp    x0, ba000 <font_data+0x1080>
   9baa4:   91250000    add x0, x0, #0x940
   9baa8:   9400311e    bl  a7f20 <CNumberPool::FreeNumber(unsigned int)>
   9baac:   aa1303e0    mov x0, x19
   9bab0:   f9400bf3    ldr x19, [sp, #16]
   9bab4:   a8c27bfd    ldp x29, x30, [sp], #32
   9bab8:   14000656    b   9d410 <CDevice::~CDevice()>
   9babc:   d503201f    nop

000000000009bac0 <CTouchScreenDevice::~CTouchScreenDevice()>:
   9bac0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9bac4:   900000e1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9bac8:   911f4021    add x1, x1, #0x7d0
   9bacc:   910003fd    mov x29, sp
   9bad0:   f9000bf3    str x19, [sp, #16]
   9bad4:   aa0003f3    mov x19, x0
   9bad8:   f9000001    str x1, [x0]
   9badc:   f900081f    str xzr, [x0, #16]
   9bae0:   f900101f    str xzr, [x0, #32]
   9bae4:   940007df    bl  9da60 <CDeviceNameService::Get()>
   9bae8:   900000e1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9baec:   b9404262    ldr w2, [x19, #64]
   9baf0:   52800003    mov w3, #0x0
   9baf4:   91204021    add x1, x1, #0x810
   9baf8:   94000806    bl  9db10 <CDeviceNameService::RemoveDevice(char const*, unsigned int, bool)>
   9bafc:   b9404261    ldr w1, [x19, #64]
   9bb00:   f00000e0    adrp    x0, ba000 <font_data+0x1080>
   9bb04:   91250000    add x0, x0, #0x940
   9bb08:   94003106    bl  a7f20 <CNumberPool::FreeNumber(unsigned int)>
   9bb0c:   aa1303e0    mov x0, x19
   9bb10:   94000640    bl  9d410 <CDevice::~CDevice()>
   9bb14:   aa1303e0    mov x0, x19
   9bb18:   f9400bf3    ldr x19, [sp, #16]
   9bb1c:   d2800901    mov x1, #0x48
   9bb20:   a8c27bfd    ldp x29, x30, [sp], #32
   9bb24:   14002f4f    b   a7860 <operator delete(void*, unsigned long)>
   9bb28:   d503201f    nop
   9bb2c:   d503201f    nop

000000000009bb30 <CTouchScreenDevice::CTouchScreenDevice(void (*)(void*), void*)>:
   9bb30:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   9bb34:   910003fd    mov x29, sp
   9bb38:   a90153f3    stp x19, x20, [sp, #16]
   9bb3c:   aa0003f3    mov x19, x0
   9bb40:   aa0203f4    mov x20, x2
   9bb44:   f90013f5    str x21, [sp, #32]
   9bb48:   aa0103f5    mov x21, x1
   9bb4c:   94000665    bl  9d4e0 <CDevice::CDevice()>
   9bb50:   900000e0    adrp    x0, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9bb54:   911f4000    add x0, x0, #0x7d0
   9bb58:   a9015275    stp x21, x20, [x19, #16]
   9bb5c:   d2807d04    mov x4, #0x3e8
   9bb60:   d284e203    mov x3, #0x2710
   9bb64:   f2c07d04    movk    x4, #0x3e8, lsl #32
   9bb68:   f2c4e203    movk    x3, #0x2710, lsl #32
   9bb6c:   900000f4    adrp    x20, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9bb70:   91204294    add x20, x20, #0x810
   9bb74:   f9000260    str x0, [x19]
   9bb78:   f00000e0    adrp    x0, ba000 <font_data+0x1080>
   9bb7c:   aa1403e2    mov x2, x20
   9bb80:   a902127f    stp xzr, x4, [x19, #32]
   9bb84:   52800021    mov w1, #0x1
   9bb88:   91250000    add x0, x0, #0x940
   9bb8c:   a9030e7f    stp xzr, x3, [x19, #48]
   9bb90:   940030b4    bl  a7e60 <CNumberPool::AllocateNumber(bool, char const*)>
   9bb94:   b9004260    str w0, [x19, #64]
   9bb98:   940007b2    bl  9da60 <CDeviceNameService::Get()>
   9bb9c:   f94013f5    ldr x21, [sp, #32]
   9bba0:   aa1403e1    mov x1, x20
   9bba4:   aa1303e3    mov x3, x19
   9bba8:   52800004    mov w4, #0x0
   9bbac:   b9404262    ldr w2, [x19, #64]
   9bbb0:   a94153f3    ldp x19, x20, [sp, #16]
   9bbb4:   a8c37bfd    ldp x29, x30, [sp], #48
   9bbb8:   140007b6    b   9da90 <CDeviceNameService::AddDevice(char const*, unsigned int, CDevice*, bool)>
   9bbbc:   d503201f    nop

000000000009bbc0 <CTouchScreenDevice::Update()>:
   9bbc0:   f9400801    ldr x1, [x0, #16]
   9bbc4:   b4000081    cbz x1, 9bbd4 <CTouchScreenDevice::Update()+0x14>
   9bbc8:   f9400c00    ldr x0, [x0, #24]
   9bbcc:   aa0103f0    mov x16, x1
   9bbd0:   d61f0200    br  x16
   9bbd4:   d65f03c0    ret
   9bbd8:   d503201f    nop
   9bbdc:   d503201f    nop

000000000009bbe0 <CTouchScreenDevice::RegisterEventHandler(void (*)(TTouchScreenEvent, unsigned int, unsigned int, unsigned int))>:
   9bbe0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   9bbe4:   910003fd    mov x29, sp
   9bbe8:   f9401002    ldr x2, [x0, #32]
   9bbec:   b50000a2    cbnz    x2, 9bc00 <CTouchScreenDevice::RegisterEventHandler(void (*)(TTouchScreenEvent, unsigned int, unsigned int, unsigned int))+0x20>
   9bbf0:   f9001001    str x1, [x0, #32]
   9bbf4:   b4000121    cbz x1, 9bc18 <CTouchScreenDevice::RegisterEventHandler(void (*)(TTouchScreenEvent, unsigned int, unsigned int, unsigned int))+0x38>
   9bbf8:   a8c17bfd    ldp x29, x30, [sp], #16
   9bbfc:   d65f03c0    ret
   9bc00:   f00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9bc04:   f00000a0    adrp    x0, b2000 <_etext+0x2f9c>
   9bc08:   9131a021    add x1, x1, #0xc68
   9bc0c:   9131e000    add x0, x0, #0xc78
   9bc10:   528007e2    mov w2, #0x3f
   9bc14:   940003ab    bl  9cac0 <assertion_failed>
   9bc18:   f00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9bc1c:   f00000a0    adrp    x0, b2000 <_etext+0x2f9c>
   9bc20:   9131a021    add x1, x1, #0xc68
   9bc24:   91196000    add x0, x0, #0x658
   9bc28:   52800822    mov w2, #0x41
   9bc2c:   940003a5    bl  9cac0 <assertion_failed>

000000000009bc30 <CTouchScreenDevice::SetCalibration(unsigned int const*, unsigned int, unsigned int)>:
   9bc30:   29401427    ldp w7, w5, [x1]
   9bc34:   aa0003e8    mov x8, x0
   9bc38:   6b0500ff    cmp w7, w5
   9bc3c:   540004e2    b.cs    9bcd8 <CTouchScreenDevice::SetCalibration(unsigned int const*, unsigned int, unsigned int)+0xa8>
   9bc40:   29411829    ldp w9, w6, [x1, #8]
   9bc44:   52800000    mov w0, #0x0
   9bc48:   6b06013f    cmp w9, w6
   9bc4c:   54000442    b.cs    9bcd4 <CTouchScreenDevice::SetCalibration(unsigned int const*, unsigned int, unsigned int)+0xa4>
   9bc50:   7100005f    cmp w2, #0x0
   9bc54:   1a9f17e4    cset    w4, eq
   9bc58:   7100007f    cmp w3, #0x0
   9bc5c:   1a9f17e0    cset    w0, eq
   9bc60:   2a00008a    orr w10, w4, w0
   9bc64:   2a0a03e0    mov w0, w10
   9bc68:   3500038a    cbnz    w10, 9bcd8 <CTouchScreenDevice::SetCalibration(unsigned int const*, unsigned int, unsigned int)+0xa8>
   9bc6c:   110004a5    add w5, w5, #0x1
   9bc70:   110004c6    add w6, w6, #0x1
   9bc74:   6b0700a5    subs    w5, w5, w7
   9bc78:   4b0900c6    sub w6, w6, w9
   9bc7c:   7a4018c4    ccmp    w6, #0x0, #0x4, ne
   9bc80:   540002a0    b.eq    9bcd4 <CTouchScreenDevice::SetCalibration(unsigned int const*, unsigned int, unsigned int)+0xa4>
   9bc84:   52807d04    mov w4, #0x3e8
   9bc88:   5289ba69    mov w9, #0x4dd3
   9bc8c:   72a20c49    movk    w9, #0x1062, lsl #16
   9bc90:   52800020    mov w0, #0x1
   9bc94:   1b047c47    mul w7, w2, w4
   9bc98:   1b047c64    mul w4, w3, w4
   9bc9c:   1ac508e5    udiv    w5, w7, w5
   9bca0:   1ac60884    udiv    w4, w4, w6
   9bca4:   b9002905    str w5, [x8, #40]
   9bca8:   b9400026    ldr w6, [x1]
   9bcac:   1b067ca5    mul w5, w5, w6
   9bcb0:   9ba97ca5    umull   x5, w5, w9
   9bcb4:   d366fca5    lsr x5, x5, #38
   9bcb8:   29059504    stp w4, w5, [x8, #44]
   9bcbc:   b9400821    ldr w1, [x1, #8]
   9bcc0:   b9003d03    str w3, [x8, #60]
   9bcc4:   1b017c84    mul w4, w4, w1
   9bcc8:   9ba97c84    umull   x4, w4, w9
   9bccc:   d366fc84    lsr x4, x4, #38
   9bcd0:   29068904    stp w4, w2, [x8, #52]
   9bcd4:   d65f03c0    ret
   9bcd8:   52800000    mov w0, #0x0
   9bcdc:   d65f03c0    ret

000000000009bce0 <CTouchScreenDevice::ReportHandler(TTouchScreenEvent, unsigned int, unsigned int, unsigned int)>:
   9bce0:   aa0003e6    mov x6, x0
   9bce4:   2a0103e0    mov w0, w1
   9bce8:   f94010c7    ldr x7, [x6, #32]
   9bcec:   2a0203e1    mov w1, w2
   9bcf0:   b4000347    cbz x7, 9bd58 <CTouchScreenDevice::ReportHandler(TTouchScreenEvent, unsigned int, unsigned int, unsigned int)+0x78>
   9bcf4:   7100041f    cmp w0, #0x1
   9bcf8:   54000320    b.eq    9bd5c <CTouchScreenDevice::ReportHandler(TTouchScreenEvent, unsigned int, unsigned int, unsigned int)+0x7c>
   9bcfc:   b94028c5    ldr w5, [x6, #40]
   9bd00:   5289ba62    mov w2, #0x4dd3
   9bd04:   72a20c42    movk    w2, #0x1062, lsl #16
   9bd08:   b94030c9    ldr w9, [x6, #48]
   9bd0c:   b94038c8    ldr w8, [x6, #56]
   9bd10:   1b057c63    mul w3, w3, w5
   9bd14:   9ba27c65    umull   x5, w3, w2
   9bd18:   d366fca5    lsr x5, x5, #38
   9bd1c:   4b0900a5    sub w5, w5, w9
   9bd20:   6b05011f    cmp w8, w5
   9bd24:   540001a9    b.ls    9bd58 <CTouchScreenDevice::ReportHandler(TTouchScreenEvent, unsigned int, unsigned int, unsigned int)+0x78>
   9bd28:   b9402cc3    ldr w3, [x6, #44]
   9bd2c:   b94034c8    ldr w8, [x6, #52]
   9bd30:   b9403cc6    ldr w6, [x6, #60]
   9bd34:   1b037c83    mul w3, w4, w3
   9bd38:   9ba27c63    umull   x3, w3, w2
   9bd3c:   d366fc63    lsr x3, x3, #38
   9bd40:   4b080063    sub w3, w3, w8
   9bd44:   6b0300df    cmp w6, w3
   9bd48:   54000089    b.ls    9bd58 <CTouchScreenDevice::ReportHandler(TTouchScreenEvent, unsigned int, unsigned int, unsigned int)+0x78>
   9bd4c:   2a0503e2    mov w2, w5
   9bd50:   aa0703f0    mov x16, x7
   9bd54:   d61f0200    br  x16
   9bd58:   d65f03c0    ret
   9bd5c:   52800003    mov w3, #0x0
   9bd60:   52800002    mov w2, #0x0
   9bd64:   aa0703f0    mov x16, x7
   9bd68:   d61f0200    br  x16
   9bd6c:   00000000    udf #0

000000000009bd70 <_GLOBAL__sub_I__ZN18CTouchScreenDevice18s_DeviceNumberPoolE>:
   9bd70:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9bd74:   910003fd    mov x29, sp
   9bd78:   528007e2    mov w2, #0x3f
   9bd7c:   52800021    mov w1, #0x1
   9bd80:   f9000bf3    str x19, [sp, #16]
   9bd84:   f00000f3    adrp    x19, ba000 <font_data+0x1080>
   9bd88:   91250273    add x19, x19, #0x940
   9bd8c:   aa1303e0    mov x0, x19
   9bd90:   94003018    bl  a7df0 <CNumberPool::CNumberPool(unsigned int, unsigned int)>
   9bd94:   f00000e2    adrp    x2, ba000 <font_data+0x1080>
   9bd98:   90000060    adrp    x0, a7000 <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int, bool)+0xd0>
   9bd9c:   aa1303e1    mov x1, x19
   9bda0:   f9400bf3    ldr x19, [sp, #16]
   9bda4:   91278042    add x2, x2, #0x9e0
   9bda8:   a8c27bfd    ldp x29, x30, [sp], #32
   9bdac:   91394000    add x0, x0, #0xe50
   9bdb0:   140025f8    b   a5590 <__cxa_atexit>
    ...

000000000009bdc0 <CMouseBehaviour::CMouseBehaviour()>:
   9bdc0:   a9007c1f    stp xzr, xzr, [x0]
   9bdc4:   7900201f    strh    wzr, [x0, #16]
   9bdc8:   b900141f    str wzr, [x0, #20]
   9bdcc:   f9000c1f    str xzr, [x0, #24]
   9bdd0:   d65f03c0    ret
   9bdd4:   d503201f    nop
   9bdd8:   d503201f    nop
   9bddc:   d503201f    nop

000000000009bde0 <CMouseBehaviour::Setup(unsigned int, unsigned int)>:
   9bde0:   a9bb7bfd    stp x29, x30, [sp, #-80]!
   9bde4:   910003fd    mov x29, sp
   9bde8:   aa0003e4    mov x4, x0
   9bdec:   b9400000    ldr w0, [x0]
   9bdf0:   f9000bf3    str x19, [sp, #16]
   9bdf4:   35000520    cbnz    w0, 9be98 <CMouseBehaviour::Setup(unsigned int, unsigned int)+0xb8>
   9bdf8:   b9000081    str w1, [x4]
   9bdfc:   340005a1    cbz w1, 9beb0 <CMouseBehaviour::Setup(unsigned int, unsigned int)+0xd0>
   9be00:   b9400480    ldr w0, [x4, #4]
   9be04:   35000620    cbnz    w0, 9bec8 <CMouseBehaviour::Setup(unsigned int, unsigned int)+0xe8>
   9be08:   b9000482    str w2, [x4, #4]
   9be0c:   340006a2    cbz w2, 9bee0 <CMouseBehaviour::Setup(unsigned int, unsigned int)+0x100>
   9be10:   11000421    add w1, w1, #0x1
   9be14:   11000442    add w2, w2, #0x1
   9be18:   53017c23    lsr w3, w1, #1
   9be1c:   53017c42    lsr w2, w2, #1
   9be20:   52800001    mov w1, #0x0
   9be24:   910083e0    add x0, sp, #0x20
   9be28:   29010883    stp w3, w2, [x4, #8]
   9be2c:   94000349    bl  9cb50 <CBcmPropertyTags::CBcmPropertyTags(bool)>
   9be30:   52800201    mov w1, #0x10
   9be34:   900000e5    adrp    x5, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9be38:   912080a5    add x5, x5, #0x820
   9be3c:   d2800206    mov x6, #0x10
   9be40:   f80443ff    stur    xzr, [sp, #68]
   9be44:   320204a5    orr w5, w5, #0xc0000000
   9be48:   9100a3e2    add x2, sp, #0x28
   9be4c:   b90037e1    str w1, [sp, #52]
   9be50:   910083e0    add x0, sp, #0x20
   9be54:   52800304    mov w4, #0x18
   9be58:   f9001fe6    str x6, [sp, #56]
   9be5c:   52800483    mov w3, #0x24
   9be60:   52900201    mov w1, #0x8010
   9be64:   b90043e5    str w5, [sp, #64]
   9be68:   9400039a    bl  9ccd0 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   9be6c:   12001c13    and w19, w0, #0xff
   9be70:   36000080    tbz w0, #0, 9be80 <CMouseBehaviour::Setup(unsigned int, unsigned int)+0xa0>
   9be74:   b94037e0    ldr w0, [sp, #52]
   9be78:   7100001f    cmp w0, #0x0
   9be7c:   1a9f17f3    cset    w19, eq
   9be80:   910083e0    add x0, sp, #0x20
   9be84:   94000337    bl  9cb60 <CBcmPropertyTags::~CBcmPropertyTags()>
   9be88:   2a1303e0    mov w0, w19
   9be8c:   f9400bf3    ldr x19, [sp, #16]
   9be90:   a8c57bfd    ldp x29, x30, [sp], #80
   9be94:   d65f03c0    ret
   9be98:   f00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9be9c:   f00000a0    adrp    x0, b2000 <_etext+0x2f9c>
   9bea0:   91324021    add x1, x1, #0xc90
   9bea4:   9132a000    add x0, x0, #0xca8
   9bea8:   52800a22    mov w2, #0x51
   9beac:   94000305    bl  9cac0 <assertion_failed>
   9beb0:   f00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9beb4:   f00000a0    adrp    x0, b2000 <_etext+0x2f9c>
   9beb8:   91324021    add x1, x1, #0xc90
   9bebc:   91330000    add x0, x0, #0xcc0
   9bec0:   52800a62    mov w2, #0x53
   9bec4:   940002ff    bl  9cac0 <assertion_failed>
   9bec8:   f00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9becc:   f00000a0    adrp    x0, b2000 <_etext+0x2f9c>
   9bed0:   91324021    add x1, x1, #0xc90
   9bed4:   91336000    add x0, x0, #0xcd8
   9bed8:   52800aa2    mov w2, #0x55
   9bedc:   940002f9    bl  9cac0 <assertion_failed>
   9bee0:   f00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9bee4:   f00000a0    adrp    x0, b2000 <_etext+0x2f9c>
   9bee8:   91324021    add x1, x1, #0xc90
   9beec:   9133c000    add x0, x0, #0xcf0
   9bef0:   52800ae2    mov w2, #0x57
   9bef4:   940002f3    bl  9cac0 <assertion_failed>
   9bef8:   d503201f    nop
   9befc:   d503201f    nop

000000000009bf00 <CMouseBehaviour::RegisterEventHandler(void (*)(TMouseEvent, unsigned int, unsigned int, unsigned int, int))>:
   9bf00:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   9bf04:   910003fd    mov x29, sp
   9bf08:   f9400c02    ldr x2, [x0, #24]
   9bf0c:   b50000a2    cbnz    x2, 9bf20 <CMouseBehaviour::RegisterEventHandler(void (*)(TMouseEvent, unsigned int, unsigned int, unsigned int, int))+0x20>
   9bf10:   f9000c01    str x1, [x0, #24]
   9bf14:   b4000121    cbz x1, 9bf38 <CMouseBehaviour::RegisterEventHandler(void (*)(TMouseEvent, unsigned int, unsigned int, unsigned int, int))+0x38>
   9bf18:   a8c17bfd    ldp x29, x30, [sp], #16
   9bf1c:   d65f03c0    ret
   9bf20:   f00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9bf24:   f00000a0    adrp    x0, b2000 <_etext+0x2f9c>
   9bf28:   91324021    add x1, x1, #0xc90
   9bf2c:   9131e000    add x0, x0, #0xc78
   9bf30:   52801122    mov w2, #0x89
   9bf34:   940002e3    bl  9cac0 <assertion_failed>
   9bf38:   f00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9bf3c:   f00000a0    adrp    x0, b2000 <_etext+0x2f9c>
   9bf40:   91324021    add x1, x1, #0xc90
   9bf44:   91196000    add x0, x0, #0x658
   9bf48:   52801162    mov w2, #0x8b
   9bf4c:   940002dd    bl  9cac0 <assertion_failed>

000000000009bf50 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int, int)>:
   9bf50:   b9400005    ldr w5, [x0]
   9bf54:   34000ac5    cbz w5, 9c0ac <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int, int)+0x15c>
   9bf58:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   9bf5c:   910003fd    mov x29, sp
   9bf60:   a90153f3    stp x19, x20, [sp, #16]
   9bf64:   aa0003f3    mov x19, x0
   9bf68:   a9025bf5    stp x21, x22, [sp, #32]
   9bf6c:   2a0403f5    mov w21, w4
   9bf70:   b9400404    ldr w4, [x0, #4]
   9bf74:   34000944    cbz w4, 9c09c <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int, int)+0x14c>
   9bf78:   0b020c42    add w2, w2, w2, lsl #3
   9bf7c:   2a0103f4    mov w20, w1
   9bf80:   528ccce1    mov w1, #0x6667
   9bf84:   72acccc1    movk    w1, #0x6666, lsl #16
   9bf88:   0b030c60    add w0, w3, w3, lsl #3
   9bf8c:   29410e67    ldp w7, w3, [x19, #8]
   9bf90:   531f7842    lsl w2, w2, #1
   9bf94:   531f7800    lsl w0, w0, #1
   9bf98:   9b217c46    smull   x6, w2, w1
   9bf9c:   9b217c01    smull   x1, w0, w1
   9bfa0:   9362fcc6    asr x6, x6, #34
   9bfa4:   4b827cc2    sub w2, w6, w2, asr #31
   9bfa8:   9362fc21    asr x1, x1, #34
   9bfac:   4b807c20    sub w0, w1, w0, asr #31
   9bfb0:   0b070042    add w2, w2, w7
   9bfb4:   6b0200bf    cmp w5, w2
   9bfb8:   0b000060    add w0, w3, w0
   9bfbc:   540007a9    b.ls    9c0b0 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int, int)+0x160>
   9bfc0:   6b00009f    cmp w4, w0
   9bfc4:   b9000a62    str w2, [x19, #8]
   9bfc8:   540008a8    b.hi    9c0dc <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int, int)+0x18c>
   9bfcc:   6b07005f    cmp w2, w7
   9bfd0:   b9000e63    str w3, [x19, #12]
   9bfd4:   54000120    b.eq    9bff8 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int, int)+0xa8>
   9bfd8:   52800020    mov w0, #0x1
   9bfdc:   f9400e65    ldr x5, [x19, #24]
   9bfe0:   39004260    strb    w0, [x19, #16]
   9bfe4:   b40000a5    cbz x5, 9bff8 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int, int)+0xa8>
   9bfe8:   2a1503e4    mov w4, w21
   9bfec:   2a1403e1    mov w1, w20
   9bff0:   52800000    mov w0, #0x0
   9bff4:   d63f00a0    blr x5
   9bff8:   b9401660    ldr w0, [x19, #20]
   9bffc:   6b14001f    cmp w0, w20
   9c000:   540003c0    b.eq    9c078 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int, int)+0x128>
   9c004:   f9400e61    ldr x1, [x19, #24]
   9c008:   52800016    mov w22, #0x0
   9c00c:   f9001bf7    str x23, [sp, #48]
   9c010:   52800037    mov w23, #0x1
   9c014:   b5000161    cbnz    x1, 9c040 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int, int)+0xf0>
   9c018:   14000036    b   9c0f0 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int, int)+0x1a0>
   9c01c:   350000a0    cbnz    w0, 9c030 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int, int)+0xe0>
   9c020:   f9400e65    ldr x5, [x19, #24]
   9c024:   52800040    mov w0, #0x2
   9c028:   29410e62    ldp w2, w3, [x19, #8]
   9c02c:   d63f00a0    blr x5
   9c030:   110006d6    add w22, w22, #0x1
   9c034:   710016df    cmp w22, #0x5
   9c038:   540001e0    b.eq    9c074 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int, int)+0x124>
   9c03c:   b9401660    ldr w0, [x19, #20]
   9c040:   1ad622e1    lsl w1, w23, w22
   9c044:   2a1503e4    mov w4, w21
   9c048:   6a01001f    tst w0, w1
   9c04c:   0a010280    and w0, w20, w1
   9c050:   54fffe61    b.ne    9c01c <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int, int)+0xcc>
   9c054:   34fffee0    cbz w0, 9c030 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int, int)+0xe0>
   9c058:   f9400e65    ldr x5, [x19, #24]
   9c05c:   52800020    mov w0, #0x1
   9c060:   110006d6    add w22, w22, #0x1
   9c064:   29410e62    ldp w2, w3, [x19, #8]
   9c068:   d63f00a0    blr x5
   9c06c:   710016df    cmp w22, #0x5
   9c070:   54fffe61    b.ne    9c03c <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int, int)+0xec>
   9c074:   f9401bf7    ldr x23, [sp, #48]
   9c078:   34000115    cbz w21, 9c098 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int, int)+0x148>
   9c07c:   f9400e65    ldr x5, [x19, #24]
   9c080:   b40000c5    cbz x5, 9c098 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int, int)+0x148>
   9c084:   29410e62    ldp w2, w3, [x19, #8]
   9c088:   2a1503e4    mov w4, w21
   9c08c:   2a1403e1    mov w1, w20
   9c090:   52800060    mov w0, #0x3
   9c094:   d63f00a0    blr x5
   9c098:   b9001674    str w20, [x19, #20]
   9c09c:   a94153f3    ldp x19, x20, [sp, #16]
   9c0a0:   a9425bf5    ldp x21, x22, [sp, #32]
   9c0a4:   a8c47bfd    ldp x29, x30, [sp], #64
   9c0a8:   d65f03c0    ret
   9c0ac:   d65f03c0    ret
   9c0b0:   6b00009f    cmp w4, w0
   9c0b4:   b9000a67    str w7, [x19, #8]
   9c0b8:   540000e9    b.ls    9c0d4 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int, int)+0x184>
   9c0bc:   2a0703e2    mov w2, w7
   9c0c0:   b9000e60    str w0, [x19, #12]
   9c0c4:   6b03001f    cmp w0, w3
   9c0c8:   54fff980    b.eq    9bff8 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int, int)+0xa8>
   9c0cc:   2a0003e3    mov w3, w0
   9c0d0:   17ffffc2    b   9bfd8 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int, int)+0x88>
   9c0d4:   b9000e63    str w3, [x19, #12]
   9c0d8:   17ffffc8    b   9bff8 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int, int)+0xa8>
   9c0dc:   6b07005f    cmp w2, w7
   9c0e0:   b9000e60    str w0, [x19, #12]
   9c0e4:   54ffff00    b.eq    9c0c4 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int, int)+0x174>
   9c0e8:   2a0003e3    mov w3, w0
   9c0ec:   17ffffbb    b   9bfd8 <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int, int)+0x88>
   9c0f0:   f9401bf7    ldr x23, [sp, #48]
   9c0f4:   b9001674    str w20, [x19, #20]
   9c0f8:   17ffffe9    b   9c09c <CMouseBehaviour::MouseStatusChanged(unsigned int, int, int, int)+0x14c>
   9c0fc:   d503201f    nop

000000000009c100 <CMouseBehaviour::SetCursorState(unsigned int, unsigned int, bool)>:
   9c100:   a9ba7bfd    stp x29, x30, [sp, #-96]!
   9c104:   910003fd    mov x29, sp
   9c108:   a90153f3    stp x19, x20, [sp, #16]
   9c10c:   2a0103f3    mov w19, w1
   9c110:   2a0003f4    mov w20, w0
   9c114:   52800001    mov w1, #0x0
   9c118:   9100e3e0    add x0, sp, #0x38
   9c11c:   f90013f5    str x21, [sp, #32]
   9c120:   12001c55    and w21, w2, #0xff
   9c124:   9400028b    bl  9cb50 <CBcmPropertyTags::CBcmPropertyTags(bool)>
   9c128:   52800025    mov w5, #0x1
   9c12c:   910103e2    add x2, sp, #0x40
   9c130:   2909d3f5    stp w21, w20, [sp, #76]
   9c134:   9100e3e0    add x0, sp, #0x38
   9c138:   52800204    mov w4, #0x10
   9c13c:   52800383    mov w3, #0x1c
   9c140:   52900221    mov w1, #0x8011
   9c144:   290a97f3    stp w19, w5, [sp, #84]
   9c148:   940002e2    bl  9ccd0 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   9c14c:   12001c13    and w19, w0, #0xff
   9c150:   36000080    tbz w0, #0, 9c160 <CMouseBehaviour::SetCursorState(unsigned int, unsigned int, bool)+0x60>
   9c154:   b9404fe0    ldr w0, [sp, #76]
   9c158:   7100001f    cmp w0, #0x0
   9c15c:   1a9f17f3    cset    w19, eq
   9c160:   9100e3e0    add x0, sp, #0x38
   9c164:   9400027f    bl  9cb60 <CBcmPropertyTags::~CBcmPropertyTags()>
   9c168:   f94013f5    ldr x21, [sp, #32]
   9c16c:   2a1303e0    mov w0, w19
   9c170:   a94153f3    ldp x19, x20, [sp, #16]
   9c174:   a8c67bfd    ldp x29, x30, [sp], #96
   9c178:   d65f03c0    ret
   9c17c:   d503201f    nop

000000000009c180 <CMouseBehaviour::~CMouseBehaviour()>:
   9c180:   39404401    ldrb    w1, [x0, #17]
   9c184:   f9000c1f    str xzr, [x0, #24]
   9c188:   37000041    tbnz    w1, #0, 9c190 <CMouseBehaviour::~CMouseBehaviour()+0x10>
   9c18c:   d65f03c0    ret
   9c190:   52800002    mov w2, #0x0
   9c194:   52800001    mov w1, #0x0
   9c198:   52800000    mov w0, #0x0
   9c19c:   17ffffd9    b   9c100 <CMouseBehaviour::SetCursorState(unsigned int, unsigned int, bool)>

000000000009c1a0 <CMouseBehaviour::Release()>:
   9c1a0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9c1a4:   910003fd    mov x29, sp
   9c1a8:   f9000bf3    str x19, [sp, #16]
   9c1ac:   aa0003f3    mov x19, x0
   9c1b0:   b9400000    ldr w0, [x0]
   9c1b4:   34000100    cbz w0, 9c1d4 <CMouseBehaviour::Release()+0x34>
   9c1b8:   b9400660    ldr w0, [x19, #4]
   9c1bc:   340000c0    cbz w0, 9c1d4 <CMouseBehaviour::Release()+0x34>
   9c1c0:   39404660    ldrb    w0, [x19, #17]
   9c1c4:   370000e0    tbnz    w0, #0, 9c1e0 <CMouseBehaviour::Release()+0x40>
   9c1c8:   a9007e7f    stp xzr, xzr, [x19]
   9c1cc:   7900227f    strh    wzr, [x19, #16]
   9c1d0:   b900167f    str wzr, [x19, #20]
   9c1d4:   f9400bf3    ldr x19, [sp, #16]
   9c1d8:   a8c27bfd    ldp x29, x30, [sp], #32
   9c1dc:   d65f03c0    ret
   9c1e0:   52800002    mov w2, #0x0
   9c1e4:   52800001    mov w1, #0x0
   9c1e8:   52800000    mov w0, #0x0
   9c1ec:   97ffffc5    bl  9c100 <CMouseBehaviour::SetCursorState(unsigned int, unsigned int, bool)>
   9c1f0:   17fffff6    b   9c1c8 <CMouseBehaviour::Release()+0x28>
   9c1f4:   d503201f    nop
   9c1f8:   d503201f    nop
   9c1fc:   d503201f    nop

000000000009c200 <CMouseBehaviour::SetCursor(unsigned int, unsigned int)>:
   9c200:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   9c204:   910003fd    mov x29, sp
   9c208:   b9400005    ldr w5, [x0]
   9c20c:   34000285    cbz w5, 9c25c <CMouseBehaviour::SetCursor(unsigned int, unsigned int)+0x5c>
   9c210:   aa0003e3    mov x3, x0
   9c214:   b9400400    ldr w0, [x0, #4]
   9c218:   340002e0    cbz w0, 9c274 <CMouseBehaviour::SetCursor(unsigned int, unsigned int)+0x74>
   9c21c:   2a0103e4    mov w4, w1
   9c220:   6b02001f    cmp w0, w2
   9c224:   7a4480a0    ccmp    w5, w4, #0x0, hi
   9c228:   2a0203e1    mov w1, w2
   9c22c:   52800000    mov w0, #0x0
   9c230:   54000068    b.hi    9c23c <CMouseBehaviour::SetCursor(unsigned int, unsigned int)+0x3c>
   9c234:   a8c17bfd    ldp x29, x30, [sp], #16
   9c238:   d65f03c0    ret
   9c23c:   39404462    ldrb    w2, [x3, #17]
   9c240:   52800020    mov w0, #0x1
   9c244:   29010464    stp w4, w1, [x3, #8]
   9c248:   3607ff62    tbz w2, #0, 9c234 <CMouseBehaviour::SetCursor(unsigned int, unsigned int)+0x34>
   9c24c:   2a0003e2    mov w2, w0
   9c250:   a8c17bfd    ldp x29, x30, [sp], #16
   9c254:   2a0403e0    mov w0, w4
   9c258:   17ffffaa    b   9c100 <CMouseBehaviour::SetCursorState(unsigned int, unsigned int, bool)>
   9c25c:   d00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9c260:   d00000a0    adrp    x0, b2000 <_etext+0x2f9c>
   9c264:   91324021    add x1, x1, #0xc90
   9c268:   91330000    add x0, x0, #0xcc0
   9c26c:   52801202    mov w2, #0x90
   9c270:   94000214    bl  9cac0 <assertion_failed>
   9c274:   d00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9c278:   d00000a0    adrp    x0, b2000 <_etext+0x2f9c>
   9c27c:   91324021    add x1, x1, #0xc90
   9c280:   9133c000    add x0, x0, #0xcf0
   9c284:   52801222    mov w2, #0x91
   9c288:   9400020e    bl  9cac0 <assertion_failed>
   9c28c:   d503201f    nop

000000000009c290 <CMouseBehaviour::ShowCursor(bool)>:
   9c290:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9c294:   aa0003e3    mov x3, x0
   9c298:   12001c22    and w2, w1, #0xff
   9c29c:   910003fd    mov x29, sp
   9c2a0:   b9400001    ldr w1, [x0]
   9c2a4:   b9400800    ldr w0, [x0, #8]
   9c2a8:   f9000bf3    str x19, [sp, #16]
   9c2ac:   39404473    ldrb    w19, [x3, #17]
   9c2b0:   39004462    strb    w2, [x3, #17]
   9c2b4:   6b01001f    cmp w0, w1
   9c2b8:   54000142    b.cs    9c2e0 <CMouseBehaviour::ShowCursor(bool)+0x50>
   9c2bc:   b9400464    ldr w4, [x3, #4]
   9c2c0:   b9400c61    ldr w1, [x3, #12]
   9c2c4:   6b04003f    cmp w1, w4
   9c2c8:   54000182    b.cs    9c2f8 <CMouseBehaviour::ShowCursor(bool)+0x68>
   9c2cc:   97ffff8d    bl  9c100 <CMouseBehaviour::SetCursorState(unsigned int, unsigned int, bool)>
   9c2d0:   2a1303e0    mov w0, w19
   9c2d4:   f9400bf3    ldr x19, [sp, #16]
   9c2d8:   a8c27bfd    ldp x29, x30, [sp], #32
   9c2dc:   d65f03c0    ret
   9c2e0:   d00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9c2e4:   d00000a0    adrp    x0, b2000 <_etext+0x2f9c>
   9c2e8:   91324021    add x1, x1, #0xc90
   9c2ec:   91342000    add x0, x0, #0xd08
   9c2f0:   52801502    mov w2, #0xa8
   9c2f4:   940001f3    bl  9cac0 <assertion_failed>
   9c2f8:   d00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9c2fc:   d00000a0    adrp    x0, b2000 <_etext+0x2f9c>
   9c300:   91324021    add x1, x1, #0xc90
   9c304:   9134a000    add x0, x0, #0xd28
   9c308:   52801522    mov w2, #0xa9
   9c30c:   940001ed    bl  9cac0 <assertion_failed>

000000000009c310 <CMouseBehaviour::UpdateCursor()>:
   9c310:   aa0003e1    mov x1, x0
   9c314:   39404400    ldrb    w0, [x0, #17]
   9c318:   36000060    tbz w0, #0, 9c324 <CMouseBehaviour::UpdateCursor()+0x14>
   9c31c:   39404020    ldrb    w0, [x1, #16]
   9c320:   37000040    tbnz    w0, #0, 9c328 <CMouseBehaviour::UpdateCursor()+0x18>
   9c324:   d65f03c0    ret
   9c328:   52800022    mov w2, #0x1
   9c32c:   3900403f    strb    wzr, [x1, #16]
   9c330:   29410420    ldp w0, w1, [x1, #8]
   9c334:   17ffff73    b   9c100 <CMouseBehaviour::SetCursorState(unsigned int, unsigned int, bool)>
    ...

000000000009c340 <CPartitionManager::CPartitionManager(CDevice*, char const*)>:
   9c340:   aa0103e3    mov x3, x1
   9c344:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9c348:   910003fd    mov x29, sp
   9c34c:   aa0203e1    mov x1, x2
   9c350:   f9000bf3    str x19, [sp, #16]
   9c354:   aa0003f3    mov x19, x0
   9c358:   f8008403    str x3, [x0], #8
   9c35c:   94001e65    bl  a3cf0 <CString::CString(char const*)>
   9c360:   a902fe7f    stp xzr, xzr, [x19, #40]
   9c364:   a903fe7f    stp xzr, xzr, [x19, #56]
   9c368:   f9400bf3    ldr x19, [sp, #16]
   9c36c:   a8c27bfd    ldp x29, x30, [sp], #32
   9c370:   d65f03c0    ret
   9c374:   d503201f    nop
   9c378:   d503201f    nop
   9c37c:   d503201f    nop

000000000009c380 <CPartitionManager::~CPartitionManager()>:
   9c380:   a9b97bfd    stp x29, x30, [sp, #-112]!
   9c384:   910003fd    mov x29, sp
   9c388:   a90153f3    stp x19, x20, [sp, #16]
   9c38c:   9100a013    add x19, x0, #0x28
   9c390:   a9025bf5    stp x21, x22, [sp, #32]
   9c394:   aa0003f6    mov x22, x0
   9c398:   52800015    mov w21, #0x0
   9c39c:   a90363f7    stp x23, x24, [sp, #48]
   9c3a0:   d00000b7    adrp    x23, b2000 <_etext+0x2f9c>
   9c3a4:   913522f7    add x23, x23, #0xd48
   9c3a8:   91012018    add x24, x0, #0x48
   9c3ac:   f90023f9    str x25, [sp, #64]
   9c3b0:   91002019    add x25, x0, #0x8
   9c3b4:   f9400262    ldr x2, [x19]
   9c3b8:   910143e0    add x0, sp, #0x50
   9c3bc:   b4000342    cbz x2, 9c424 <CPartitionManager::~CPartitionManager()+0xa4>
   9c3c0:   94001e44    bl  a3cd0 <CString::CString()>
   9c3c4:   aa1903e0    mov x0, x25
   9c3c8:   110006b5    add w21, w21, #0x1
   9c3cc:   94001e85    bl  a3de0 <CString::operator char const*() const>
   9c3d0:   aa0003e2    mov x2, x0
   9c3d4:   2a1503e3    mov w3, w21
   9c3d8:   aa1703e1    mov x1, x23
   9c3dc:   910143e0    add x0, sp, #0x50
   9c3e0:   94002448    bl  a5500 <CString::Format(char const*, ...)>
   9c3e4:   9400059f    bl  9da60 <CDeviceNameService::Get()>
   9c3e8:   aa0003f4    mov x20, x0
   9c3ec:   910143e0    add x0, sp, #0x50
   9c3f0:   94001e7c    bl  a3de0 <CString::operator char const*() const>
   9c3f4:   aa0003e1    mov x1, x0
   9c3f8:   52800022    mov w2, #0x1
   9c3fc:   aa1403e0    mov x0, x20
   9c400:   940004e4    bl  9d790 <CDeviceNameService::RemoveDevice(char const*, bool)>
   9c404:   f9400260    ldr x0, [x19]
   9c408:   b4000080    cbz x0, 9c418 <CPartitionManager::~CPartitionManager()+0x98>
   9c40c:   f9400001    ldr x1, [x0]
   9c410:   f9400421    ldr x1, [x1, #8]
   9c414:   d63f0020    blr x1
   9c418:   910143e0    add x0, sp, #0x50
   9c41c:   f900027f    str xzr, [x19]
   9c420:   94001df0    bl  a3be0 <CString::~CString()>
   9c424:   91002273    add x19, x19, #0x8
   9c428:   eb18027f    cmp x19, x24
   9c42c:   54fffc41    b.ne    9c3b4 <CPartitionManager::~CPartitionManager()+0x34>
   9c430:   a94153f3    ldp x19, x20, [sp, #16]
   9c434:   aa1903e0    mov x0, x25
   9c438:   a94363f7    ldp x23, x24, [sp, #48]
   9c43c:   f94023f9    ldr x25, [sp, #64]
   9c440:   f90002df    str xzr, [x22]
   9c444:   a9425bf5    ldp x21, x22, [sp, #32]
   9c448:   a8c77bfd    ldp x29, x30, [sp], #112
   9c44c:   14001de5    b   a3be0 <CString::~CString()>

000000000009c450 <CPartitionManager::Initialize()>:
   9c450:   d109c3ff    sub sp, sp, #0x270
   9c454:   d2800001    mov x1, #0x0
   9c458:   a9007bfd    stp x29, x30, [sp]
   9c45c:   910003fd    mov x29, sp
   9c460:   a90153f3    stp x19, x20, [sp, #16]
   9c464:   aa0003f3    mov x19, x0
   9c468:   f9400000    ldr x0, [x0]
   9c46c:   f9400002    ldr x2, [x0]
   9c470:   f9401042    ldr x2, [x2, #32]
   9c474:   d63f0040    blr x2
   9c478:   b5000480    cbnz    x0, 9c508 <CPartitionManager::Initialize()+0xb8>
   9c47c:   f9400260    ldr x0, [x19]
   9c480:   d2804002    mov x2, #0x200
   9c484:   9101c3e1    add x1, sp, #0x70
   9c488:   f9400003    ldr x3, [x0]
   9c48c:   f9400863    ldr x3, [x3, #16]
   9c490:   d63f0060    blr x3
   9c494:   7108001f    cmp w0, #0x200
   9c498:   54000381    b.ne    9c508 <CPartitionManager::Initialize()+0xb8>
   9c49c:   7944dfe1    ldrh    w1, [sp, #622]
   9c4a0:   52954aa0    mov w0, #0xaa55
   9c4a4:   6b00003f    cmp w1, w0
   9c4a8:   540009e1    b.ne    9c5e4 <CPartitionManager::Initialize()+0x194>
   9c4ac:   9108cbf4    add x20, sp, #0x232
   9c4b0:   a9025bf5    stp x21, x22, [sp, #32]
   9c4b4:   9100a275    add x21, x19, #0x28
   9c4b8:   52800016    mov w22, #0x0
   9c4bc:   a90363f7    stp x23, x24, [sp, #48]
   9c4c0:   91012277    add x23, x19, #0x48
   9c4c4:   a9046bf9    stp x25, x26, [sp, #64]
   9c4c8:   d290043a    mov x26, #0x8021
   9c4cc:   39400280    ldrb    w0, [x20]
   9c4d0:   71003c1f    cmp w0, #0xf
   9c4d4:   54000328    b.hi    9c538 <CPartitionManager::Initialize()+0xe8>
   9c4d8:   9ac02740    lsr x0, x26, x0
   9c4dc:   36000320    tbz w0, #0, 9c540 <CPartitionManager::Initialize()+0xf0>
   9c4e0:   910022b5    add x21, x21, #0x8
   9c4e4:   91004294    add x20, x20, #0x10
   9c4e8:   eb1702bf    cmp x21, x23
   9c4ec:   54ffff01    b.ne    9c4cc <CPartitionManager::Initialize()+0x7c>
   9c4f0:   340008d6    cbz w22, 9c608 <CPartitionManager::Initialize()+0x1b8>
   9c4f4:   a9425bf5    ldp x21, x22, [sp, #32]
   9c4f8:   52800020    mov w0, #0x1
   9c4fc:   a94363f7    ldp x23, x24, [sp, #48]
   9c500:   a9446bf9    ldp x25, x26, [sp, #64]
   9c504:   14000009    b   9c528 <CPartitionManager::Initialize()+0xd8>
   9c508:   94000c3e    bl  9f600 <CLogger::Get()>
   9c50c:   d00000a3    adrp    x3, b2000 <_etext+0x2f9c>
   9c510:   f00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9c514:   91354063    add x3, x3, #0xd50
   9c518:   91308021    add x1, x1, #0xc20
   9c51c:   52800022    mov w2, #0x1
   9c520:   94000e20    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   9c524:   52800000    mov w0, #0x0
   9c528:   a9407bfd    ldp x29, x30, [sp]
   9c52c:   a94153f3    ldp x19, x20, [sp, #16]
   9c530:   9109c3ff    add sp, sp, #0x270
   9c534:   d65f03c0    ret
   9c538:   7103bc1f    cmp w0, #0xef
   9c53c:   54fffd20    b.eq    9c4e0 <CPartitionManager::Initialize()+0x90>
   9c540:   b9400680    ldr w0, [x20, #4]
   9c544:   34fffce0    cbz w0, 9c4e0 <CPartitionManager::Initialize()+0x90>
   9c548:   b9400a80    ldr w0, [x20, #8]
   9c54c:   34fffca0    cbz w0, 9c4e0 <CPartitionManager::Initialize()+0x90>
   9c550:   f94002a0    ldr x0, [x21]
   9c554:   b5000720    cbnz    x0, 9c638 <CPartitionManager::Initialize()+0x1e8>
   9c558:   d2800600    mov x0, #0x30
   9c55c:   aa1303f8    mov x24, x19
   9c560:   94002c98    bl  a77c0 <operator new(unsigned long)>
   9c564:   f8408701    ldr x1, [x24], #8
   9c568:   aa0003f9    mov x25, x0
   9c56c:   110006d6    add w22, w22, #0x1
   9c570:   910022b5    add x21, x21, #0x8
   9c574:   29408e82    ldp w2, w3, [x20, #4]
   9c578:   91004294    add x20, x20, #0x10
   9c57c:   940000a9    bl  9c820 <CPartition::CPartition(CDevice*, unsigned int, unsigned int)>
   9c580:   910143e0    add x0, sp, #0x50
   9c584:   f81f82b9    stur    x25, [x21, #-8]
   9c588:   94001dd2    bl  a3cd0 <CString::CString()>
   9c58c:   aa1803e0    mov x0, x24
   9c590:   94001e14    bl  a3de0 <CString::operator char const*() const>
   9c594:   d00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9c598:   aa0003e2    mov x2, x0
   9c59c:   2a1603e3    mov w3, w22
   9c5a0:   91352021    add x1, x1, #0xd48
   9c5a4:   910143e0    add x0, sp, #0x50
   9c5a8:   940023d6    bl  a5500 <CString::Format(char const*, ...)>
   9c5ac:   9400052d    bl  9da60 <CDeviceNameService::Get()>
   9c5b0:   aa0003f8    mov x24, x0
   9c5b4:   910143e0    add x0, sp, #0x50
   9c5b8:   94001e0a    bl  a3de0 <CString::operator char const*() const>
   9c5bc:   f85f82a2    ldur    x2, [x21, #-8]
   9c5c0:   aa0003e1    mov x1, x0
   9c5c4:   52800023    mov w3, #0x1
   9c5c8:   aa1803e0    mov x0, x24
   9c5cc:   94000435    bl  9d6a0 <CDeviceNameService::AddDevice(char const*, CDevice*, bool)>
   9c5d0:   910143e0    add x0, sp, #0x50
   9c5d4:   94001d83    bl  a3be0 <CString::~CString()>
   9c5d8:   eb1702bf    cmp x21, x23
   9c5dc:   54fff781    b.ne    9c4cc <CPartitionManager::Initialize()+0x7c>
   9c5e0:   17ffffc4    b   9c4f0 <CPartitionManager::Initialize()+0xa0>
   9c5e4:   94000c07    bl  9f600 <CLogger::Get()>
   9c5e8:   d00000a3    adrp    x3, b2000 <_etext+0x2f9c>
   9c5ec:   f00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9c5f0:   91358063    add x3, x3, #0xd60
   9c5f4:   91308021    add x1, x1, #0xc20
   9c5f8:   52800042    mov w2, #0x2
   9c5fc:   94000de9    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   9c600:   52800020    mov w0, #0x1
   9c604:   17ffffc9    b   9c528 <CPartitionManager::Initialize()+0xd8>
   9c608:   94000bfe    bl  9f600 <CLogger::Get()>
   9c60c:   d00000a3    adrp    x3, b2000 <_etext+0x2f9c>
   9c610:   f00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9c614:   9136a063    add x3, x3, #0xda8
   9c618:   91308021    add x1, x1, #0xc20
   9c61c:   52800042    mov w2, #0x2
   9c620:   94000de0    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   9c624:   a9425bf5    ldp x21, x22, [sp, #32]
   9c628:   52800020    mov w0, #0x1
   9c62c:   a94363f7    ldp x23, x24, [sp, #48]
   9c630:   a9446bf9    ldp x25, x26, [sp, #64]
   9c634:   17ffffbd    b   9c528 <CPartitionManager::Initialize()+0xd8>
   9c638:   d00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9c63c:   d00000a0    adrp    x0, b2000 <_etext+0x2f9c>
   9c640:   9135e021    add x1, x1, #0xd78
   9c644:   91364000    add x0, x0, #0xd90
   9c648:   52800f02    mov w2, #0x78
   9c64c:   9400011d    bl  9cac0 <assertion_failed>

000000000009c650 <CPartition::Read(void*, unsigned long)>:
   9c650:   3940a004    ldrb    w4, [x0, #40]
   9c654:   370002a4    tbnz    w4, #0, 9c6a8 <CPartition::Read(void*, unsigned long)+0x58>
   9c658:   f9401005    ldr x5, [x0, #32]
   9c65c:   9107fc43    add x3, x2, #0x1ff
   9c660:   b9401c04    ldr w4, [x0, #28]
   9c664:   8b050063    add x3, x3, x5
   9c668:   eb43249f    cmp x4, x3, lsr #9
   9c66c:   540001e3    b.cc    9c6a8 <CPartition::Read(void*, unsigned long)+0x58>
   9c670:   f9400800    ldr x0, [x0, #16]
   9c674:   b40000a0    cbz x0, 9c688 <CPartition::Read(void*, unsigned long)+0x38>
   9c678:   f9400003    ldr x3, [x0]
   9c67c:   f9400863    ldr x3, [x3, #16]
   9c680:   aa0303f0    mov x16, x3
   9c684:   d61f0200    br  x16
   9c688:   d00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9c68c:   f0000080    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   9c690:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   9c694:   91374021    add x1, x1, #0xdd0
   9c698:   910003fd    mov x29, sp
   9c69c:   9127a000    add x0, x0, #0x9e8
   9c6a0:   528006a2    mov w2, #0x35
   9c6a4:   94000107    bl  9cac0 <assertion_failed>
   9c6a8:   12800000    mov w0, #0xffffffff
   9c6ac:   d65f03c0    ret

000000000009c6b0 <CPartition::Write(void const*, unsigned long)>:
   9c6b0:   3940a004    ldrb    w4, [x0, #40]
   9c6b4:   370002a4    tbnz    w4, #0, 9c708 <CPartition::Write(void const*, unsigned long)+0x58>
   9c6b8:   f9401005    ldr x5, [x0, #32]
   9c6bc:   9107fc43    add x3, x2, #0x1ff
   9c6c0:   b9401c04    ldr w4, [x0, #28]
   9c6c4:   8b050063    add x3, x3, x5
   9c6c8:   eb43249f    cmp x4, x3, lsr #9
   9c6cc:   540001e3    b.cc    9c708 <CPartition::Write(void const*, unsigned long)+0x58>
   9c6d0:   f9400800    ldr x0, [x0, #16]
   9c6d4:   b40000a0    cbz x0, 9c6e8 <CPartition::Write(void const*, unsigned long)+0x38>
   9c6d8:   f9400003    ldr x3, [x0]
   9c6dc:   f9400c63    ldr x3, [x3, #24]
   9c6e0:   aa0303f0    mov x16, x3
   9c6e4:   d61f0200    br  x16
   9c6e8:   d00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9c6ec:   f0000080    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   9c6f0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   9c6f4:   91374021    add x1, x1, #0xdd0
   9c6f8:   910003fd    mov x29, sp
   9c6fc:   9127a000    add x0, x0, #0x9e8
   9c700:   528008e2    mov w2, #0x47
   9c704:   940000ef    bl  9cac0 <assertion_failed>
   9c708:   12800000    mov w0, #0xffffffff
   9c70c:   d65f03c0    ret

000000000009c710 <CPartition::Seek(unsigned long)>:
   9c710:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   9c714:   910003fd    mov x29, sp
   9c718:   f240203f    tst x1, #0x1ff
   9c71c:   a90153f3    stp x19, x20, [sp, #16]
   9c720:   aa0003f3    mov x19, x0
   9c724:   52800020    mov w0, #0x1
   9c728:   3900a260    strb    w0, [x19, #40]
   9c72c:   54000301    b.ne    9c78c <CPartition::Seek(unsigned long)+0x7c>
   9c730:   b9401e60    ldr w0, [x19, #28]
   9c734:   aa0103f4    mov x20, x1
   9c738:   eb41241f    cmp x0, x1, lsr #9
   9c73c:   54000289    b.ls    9c78c <CPartition::Seek(unsigned long)+0x7c>
   9c740:   f9400a60    ldr x0, [x19, #16]
   9c744:   f90013f5    str x21, [sp, #32]
   9c748:   b9401a75    ldr w21, [x19, #24]
   9c74c:   8b152435    add x21, x1, x21, lsl #9
   9c750:   b4000260    cbz x0, 9c79c <CPartition::Seek(unsigned long)+0x8c>
   9c754:   f9400002    ldr x2, [x0]
   9c758:   aa1503e1    mov x1, x21
   9c75c:   f9401042    ldr x2, [x2, #32]
   9c760:   d63f0040    blr x2
   9c764:   eb15001f    cmp x0, x21
   9c768:   54000101    b.ne    9c788 <CPartition::Seek(unsigned long)+0x78>
   9c76c:   f94013f5    ldr x21, [sp, #32]
   9c770:   aa1403e0    mov x0, x20
   9c774:   f9001274    str x20, [x19, #32]
   9c778:   3900a27f    strb    wzr, [x19, #40]
   9c77c:   a94153f3    ldp x19, x20, [sp, #16]
   9c780:   a8c37bfd    ldp x29, x30, [sp], #48
   9c784:   d65f03c0    ret
   9c788:   f94013f5    ldr x21, [sp, #32]
   9c78c:   a94153f3    ldp x19, x20, [sp, #16]
   9c790:   92800000    mov x0, #0xffffffffffffffff
   9c794:   a8c37bfd    ldp x29, x30, [sp], #48
   9c798:   d65f03c0    ret
   9c79c:   d00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9c7a0:   f0000080    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   9c7a4:   91374021    add x1, x1, #0xdd0
   9c7a8:   9127a000    add x0, x0, #0x9e8
   9c7ac:   52800b22    mov w2, #0x59
   9c7b0:   940000c4    bl  9cac0 <assertion_failed>
   9c7b4:   d503201f    nop
   9c7b8:   d503201f    nop
   9c7bc:   d503201f    nop

000000000009c7c0 <CPartition::~CPartition()>:
   9c7c0:   f00000c2    adrp    x2, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9c7c4:   9130e042    add x2, x2, #0xc38
   9c7c8:   f900081f    str xzr, [x0, #16]
   9c7cc:   f9000002    str x2, [x0]
   9c7d0:   14000310    b   9d410 <CDevice::~CDevice()>
   9c7d4:   d503201f    nop
   9c7d8:   d503201f    nop
   9c7dc:   d503201f    nop

000000000009c7e0 <CPartition::~CPartition()>:
   9c7e0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9c7e4:   f00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9c7e8:   9130e021    add x1, x1, #0xc38
   9c7ec:   910003fd    mov x29, sp
   9c7f0:   f9000bf3    str x19, [sp, #16]
   9c7f4:   aa0003f3    mov x19, x0
   9c7f8:   f9000001    str x1, [x0]
   9c7fc:   f900081f    str xzr, [x0, #16]
   9c800:   94000304    bl  9d410 <CDevice::~CDevice()>
   9c804:   aa1303e0    mov x0, x19
   9c808:   f9400bf3    ldr x19, [sp, #16]
   9c80c:   d2800601    mov x1, #0x30
   9c810:   a8c27bfd    ldp x29, x30, [sp], #32
   9c814:   14002c13    b   a7860 <operator delete(void*, unsigned long)>
   9c818:   d503201f    nop
   9c81c:   d503201f    nop

000000000009c820 <CPartition::CPartition(CDevice*, unsigned int, unsigned int)>:
   9c820:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   9c824:   910003fd    mov x29, sp
   9c828:   a90153f3    stp x19, x20, [sp, #16]
   9c82c:   aa0003f3    mov x19, x0
   9c830:   aa0103f4    mov x20, x1
   9c834:   a9025bf5    stp x21, x22, [sp, #32]
   9c838:   2a0203f6    mov w22, w2
   9c83c:   2a0303f5    mov w21, w3
   9c840:   94000328    bl  9d4e0 <CDevice::CDevice()>
   9c844:   f00000c0    adrp    x0, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9c848:   9130e000    add x0, x0, #0xc38
   9c84c:   f9000a74    str x20, [x19, #16]
   9c850:   52800021    mov w1, #0x1
   9c854:   29035676    stp w22, w21, [x19, #24]
   9c858:   f9000260    str x0, [x19]
   9c85c:   f900127f    str xzr, [x19, #32]
   9c860:   3900a261    strb    w1, [x19, #40]
   9c864:   b40000b4    cbz x20, 9c878 <CPartition::CPartition(CDevice*, unsigned int, unsigned int)+0x58>
   9c868:   a94153f3    ldp x19, x20, [sp, #16]
   9c86c:   a9425bf5    ldp x21, x22, [sp, #32]
   9c870:   a8c37bfd    ldp x29, x30, [sp], #48
   9c874:   d65f03c0    ret
   9c878:   d00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9c87c:   f0000080    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   9c880:   91374021    add x1, x1, #0xdd0
   9c884:   9127a000    add x0, x0, #0x9e8
   9c888:   528003e2    mov w2, #0x1f
   9c88c:   9400008d    bl  9cac0 <assertion_failed>

000000000009c890 <CActLED::CActLED(bool)>:
   9c890:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   9c894:   910003fd    mov x29, sp
   9c898:   d00000e2    adrp    x2, ba000 <font_data+0x1080>
   9c89c:   a90153f3    stp x19, x20, [sp, #16]
   9c8a0:   aa0003f4    mov x20, x0
   9c8a4:   a9025bf5    stp x21, x22, [sp, #32]
   9c8a8:   12001c35    and w21, w1, #0xff
   9c8ac:   a9007c1f    stp xzr, xzr, [x0]
   9c8b0:   f904a840    str x0, [x2, #2384]
   9c8b4:   9400106b    bl  a0a60 <CMachineInfo::Get()>
   9c8b8:   94000ec6    bl  a03d0 <CMachineInfo::GetActLEDInfo() const>
   9c8bc:   2a0003f3    mov w19, w0
   9c8c0:   363802b3    tbz w19, #7, 9c914 <CActLED::CActLED(bool)+0x84>
   9c8c4:   d2800300    mov x0, #0x18
   9c8c8:   94002bbe    bl  a77c0 <operator new(unsigned long)>
   9c8cc:   aa0003f6    mov x22, x0
   9c8d0:   2a1503e2    mov w2, w21
   9c8d4:   12001661    and w1, w19, #0x3f
   9c8d8:   94002996    bl  a6f30 <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int, bool)>
   9c8dc:   f9400295    ldr x21, [x20]
   9c8e0:   721a0273    ands    w19, w19, #0x40
   9c8e4:   1a9f17e0    cset    w0, eq
   9c8e8:   f9000696    str x22, [x20, #8]
   9c8ec:   39004280    strb    w0, [x20, #16]
   9c8f0:   b5000295    cbnz    x21, 9c940 <CActLED::CActLED(bool)+0xb0>
   9c8f4:   b4000356    cbz x22, 9c95c <CActLED::CActLED(bool)+0xcc>
   9c8f8:   7100027f    cmp w19, #0x0
   9c8fc:   a94153f3    ldp x19, x20, [sp, #16]
   9c900:   aa1603e0    mov x0, x22
   9c904:   1a9f07e1    cset    w1, ne
   9c908:   a9425bf5    ldp x21, x22, [sp, #32]
   9c90c:   a8c37bfd    ldp x29, x30, [sp], #48
   9c910:   1400293c    b   a6e00 <CVirtualGPIOPin::Write(unsigned int)>
   9c914:   d2800900    mov x0, #0x48
   9c918:   94002baa    bl  a77c0 <operator new(unsigned long)>
   9c91c:   aa0003f5    mov x21, x0
   9c920:   12001661    and w1, w19, #0x3f
   9c924:   d2800003    mov x3, #0x0
   9c928:   52800022    mov w2, #0x1
   9c92c:   94000839    bl  9ea10 <CGPIOPin::CGPIOPin(unsigned int, TGPIOMode, CGPIOManager*)>
   9c930:   721a0273    ands    w19, w19, #0x40
   9c934:   1a9f17e0    cset    w0, eq
   9c938:   f9000295    str x21, [x20]
   9c93c:   39004280    strb    w0, [x20, #16]
   9c940:   7100027f    cmp w19, #0x0
   9c944:   a94153f3    ldp x19, x20, [sp, #16]
   9c948:   aa1503e0    mov x0, x21
   9c94c:   1a9f07e1    cset    w1, ne
   9c950:   a9425bf5    ldp x21, x22, [sp, #32]
   9c954:   a8c37bfd    ldp x29, x30, [sp], #48
   9c958:   14000536    b   9de30 <CGPIOPin::Write(unsigned int)>
   9c95c:   a94153f3    ldp x19, x20, [sp, #16]
   9c960:   a9425bf5    ldp x21, x22, [sp, #32]
   9c964:   a8c37bfd    ldp x29, x30, [sp], #48
   9c968:   d65f03c0    ret
   9c96c:   d503201f    nop

000000000009c970 <CActLED::~CActLED()>:
   9c970:   d00000e0    adrp    x0, ba000 <font_data+0x1080>
   9c974:   f904a81f    str xzr, [x0, #2384]
   9c978:   d65f03c0    ret
   9c97c:   d503201f    nop

000000000009c980 <CActLED::On()>:
   9c980:   39404001    ldrb    w1, [x0, #16]
   9c984:   aa0003e2    mov x2, x0
   9c988:   f9400000    ldr x0, [x0]
   9c98c:   b4000040    cbz x0, 9c994 <CActLED::On()+0x14>
   9c990:   14000528    b   9de30 <CGPIOPin::Write(unsigned int)>
   9c994:   f9400440    ldr x0, [x2, #8]
   9c998:   b4000040    cbz x0, 9c9a0 <CActLED::On()+0x20>
   9c99c:   14002919    b   a6e00 <CVirtualGPIOPin::Write(unsigned int)>
   9c9a0:   d65f03c0    ret
   9c9a4:   d503201f    nop
   9c9a8:   d503201f    nop
   9c9ac:   d503201f    nop

000000000009c9b0 <CActLED::Off()>:
   9c9b0:   39404001    ldrb    w1, [x0, #16]
   9c9b4:   aa0003e2    mov x2, x0
   9c9b8:   f9400000    ldr x0, [x0]
   9c9bc:   b4000060    cbz x0, 9c9c8 <CActLED::Off()+0x18>
   9c9c0:   52000021    eor w1, w1, #0x1
   9c9c4:   1400051b    b   9de30 <CGPIOPin::Write(unsigned int)>
   9c9c8:   f9400440    ldr x0, [x2, #8]
   9c9cc:   b4000060    cbz x0, 9c9d8 <CActLED::Off()+0x28>
   9c9d0:   52000021    eor w1, w1, #0x1
   9c9d4:   1400290b    b   a6e00 <CVirtualGPIOPin::Write(unsigned int)>
   9c9d8:   d65f03c0    ret
   9c9dc:   d503201f    nop

000000000009c9e0 <CActLED::Blink(unsigned int, unsigned int, unsigned int)>:
   9c9e0:   34000641    cbz w1, 9caa8 <CActLED::Blink(unsigned int, unsigned int, unsigned int)+0xc8>
   9c9e4:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   9c9e8:   910003fd    mov x29, sp
   9c9ec:   a90153f3    stp x19, x20, [sp, #16]
   9c9f0:   aa0003f3    mov x19, x0
   9c9f4:   52800034    mov w20, #0x1
   9c9f8:   a9025bf5    stp x21, x22, [sp, #32]
   9c9fc:   2a0103f5    mov w21, w1
   9ca00:   2a0303f6    mov w22, w3
   9ca04:   f9001bf7    str x23, [sp, #48]
   9ca08:   2a0203f7    mov w23, w2
   9ca0c:   1400000e    b   9ca44 <CActLED::Blink(unsigned int, unsigned int, unsigned int)+0x64>
   9ca10:   94000508    bl  9de30 <CGPIOPin::Write(unsigned int)>
   9ca14:   2a1703e0    mov w0, w23
   9ca18:   940026be    bl  a6510 <CTimer::SimpleMsDelay(unsigned int)>
   9ca1c:   f9400260    ldr x0, [x19]
   9ca20:   b4000260    cbz x0, 9ca6c <CActLED::Blink(unsigned int, unsigned int, unsigned int)+0x8c>
   9ca24:   39404261    ldrb    w1, [x19, #16]
   9ca28:   52000021    eor w1, w1, #0x1
   9ca2c:   94000501    bl  9de30 <CGPIOPin::Write(unsigned int)>
   9ca30:   2a1603e0    mov w0, w22
   9ca34:   11000694    add w20, w20, #0x1
   9ca38:   940026b6    bl  a6510 <CTimer::SimpleMsDelay(unsigned int)>
   9ca3c:   6b1402bf    cmp w21, w20
   9ca40:   540002a3    b.cc    9ca94 <CActLED::Blink(unsigned int, unsigned int, unsigned int)+0xb4>
   9ca44:   f9400260    ldr x0, [x19]
   9ca48:   39404261    ldrb    w1, [x19, #16]
   9ca4c:   b5fffe20    cbnz    x0, 9ca10 <CActLED::Blink(unsigned int, unsigned int, unsigned int)+0x30>
   9ca50:   f9400660    ldr x0, [x19, #8]
   9ca54:   b4fffe00    cbz x0, 9ca14 <CActLED::Blink(unsigned int, unsigned int, unsigned int)+0x34>
   9ca58:   940028ea    bl  a6e00 <CVirtualGPIOPin::Write(unsigned int)>
   9ca5c:   2a1703e0    mov w0, w23
   9ca60:   940026ac    bl  a6510 <CTimer::SimpleMsDelay(unsigned int)>
   9ca64:   f9400260    ldr x0, [x19]
   9ca68:   b5fffde0    cbnz    x0, 9ca24 <CActLED::Blink(unsigned int, unsigned int, unsigned int)+0x44>
   9ca6c:   f9400660    ldr x0, [x19, #8]
   9ca70:   b4fffe00    cbz x0, 9ca30 <CActLED::Blink(unsigned int, unsigned int, unsigned int)+0x50>
   9ca74:   39404261    ldrb    w1, [x19, #16]
   9ca78:   11000694    add w20, w20, #0x1
   9ca7c:   52000021    eor w1, w1, #0x1
   9ca80:   940028e0    bl  a6e00 <CVirtualGPIOPin::Write(unsigned int)>
   9ca84:   2a1603e0    mov w0, w22
   9ca88:   940026a2    bl  a6510 <CTimer::SimpleMsDelay(unsigned int)>
   9ca8c:   6b1402bf    cmp w21, w20
   9ca90:   54fffda2    b.cs    9ca44 <CActLED::Blink(unsigned int, unsigned int, unsigned int)+0x64>
   9ca94:   a94153f3    ldp x19, x20, [sp, #16]
   9ca98:   a9425bf5    ldp x21, x22, [sp, #32]
   9ca9c:   f9401bf7    ldr x23, [sp, #48]
   9caa0:   a8c47bfd    ldp x29, x30, [sp], #64
   9caa4:   d65f03c0    ret
   9caa8:   d65f03c0    ret
   9caac:   d503201f    nop

000000000009cab0 <CActLED::Get()>:
   9cab0:   d00000e0    adrp    x0, ba000 <font_data+0x1080>
   9cab4:   f944a800    ldr x0, [x0, #2384]
   9cab8:   d65f03c0    ret
   9cabc:   00000000    udf #0

000000000009cac0 <assertion_failed>:
   9cac0:   a9bb7bfd    stp x29, x30, [sp, #-80]!
   9cac4:   910003fd    mov x29, sp
   9cac8:   a90153f3    stp x19, x20, [sp, #16]
   9cacc:   aa0003f4    mov x20, x0
   9cad0:   aa0103f3    mov x19, x1
   9cad4:   a9025bf5    stp x21, x22, [sp, #32]
   9cad8:   2a0203f5    mov w21, w2
   9cadc:   910003f6    mov x22, sp
   9cae0:   9400370c    bl  aa710 <CInterruptSystem::DisableFIQ()>
   9cae4:   d50341ff    msr daifclr, #0x1
   9cae8:   9100c3e0    add x0, sp, #0x30
   9caec:   94001c79    bl  a3cd0 <CString::CString()>
   9caf0:   d00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9caf4:   aa1303e2    mov x2, x19
   9caf8:   2a1503e3    mov w3, w21
   9cafc:   91378021    add x1, x1, #0xde0
   9cb00:   9100c3e0    add x0, sp, #0x30
   9cb04:   9400227f    bl  a5500 <CString::Format(char const*, ...)>
   9cb08:   9100c3e0    add x0, sp, #0x30
   9cb0c:   94001cb5    bl  a3de0 <CString::operator char const*() const>
   9cb10:   aa0003e1    mov x1, x0
   9cb14:   aa1603e0    mov x0, x22
   9cb18:   940001fe    bl  9d310 <debug_stacktrace(unsigned long const*, char const*)>
   9cb1c:   94000ab9    bl  9f600 <CLogger::Get()>
   9cb20:   aa0003f3    mov x19, x0
   9cb24:   9100c3e0    add x0, sp, #0x30
   9cb28:   94001cae    bl  a3de0 <CString::operator char const*() const>
   9cb2c:   d00000a3    adrp    x3, b2000 <_etext+0x2f9c>
   9cb30:   aa0003e1    mov x1, x0
   9cb34:   aa1403e4    mov x4, x20
   9cb38:   aa1303e0    mov x0, x19
   9cb3c:   9137a063    add x3, x3, #0xde8
   9cb40:   52800002    mov w2, #0x0
   9cb44:   94000c97    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   9cb48:   14000000    b   9cb48 <assertion_failed+0x88>
   9cb4c:   00000000    udf #0

000000000009cb50 <CBcmPropertyTags::CBcmPropertyTags(bool)>:
   9cb50:   2a0103e2    mov w2, w1
   9cb54:   52800101    mov w1, #0x8
   9cb58:   14003c12    b   abba0 <CBcmMailBox::CBcmMailBox(unsigned int, bool)>
   9cb5c:   d503201f    nop

000000000009cb60 <CBcmPropertyTags::~CBcmPropertyTags()>:
   9cb60:   14003c14    b   abbb0 <CBcmMailBox::~CBcmMailBox()>
   9cb64:   d503201f    nop
   9cb68:   d503201f    nop
   9cb6c:   d503201f    nop

000000000009cb70 <CBcmPropertyTags::GetTags(void*, unsigned int)>:
   9cb70:   a9bb7bfd    stp x29, x30, [sp, #-80]!
   9cb74:   910003fd    mov x29, sp
   9cb78:   a90153f3    stp x19, x20, [sp, #16]
   9cb7c:   a9025bf5    stp x21, x22, [sp, #32]
   9cb80:   a90363f7    stp x23, x24, [sp, #48]
   9cb84:   f90023f9    str x25, [sp, #64]
   9cb88:   b4000841    cbz x1, 9cc90 <CBcmPropertyTags::GetTags(void*, unsigned int)+0x120>
   9cb8c:   71003c5f    cmp w2, #0xf
   9cb90:   2a0203f4    mov w20, w2
   9cb94:   54000889    b.ls    9cca4 <CBcmPropertyTags::GetTags(void*, unsigned int)+0x134>
   9cb98:   f240069f    tst x20, #0x3
   9cb9c:   11003057    add w23, w2, #0xc
   9cba0:   540008c1    b.ne    9ccb8 <CBcmPropertyTags::GetTags(void*, unsigned int)+0x148>
   9cba4:   aa0003f6    mov x22, x0
   9cba8:   52800000    mov w0, #0x0
   9cbac:   aa0103f5    mov x21, x1
   9cbb0:   2a1403f9    mov w25, w20
   9cbb4:   94002ea3    bl  a8640 <CMemorySystem::GetCoherentPage(unsigned int)>
   9cbb8:   aa0003f3    mov x19, x0
   9cbbc:   d3483ee5    ubfx    x5, x23, #8, #8
   9cbc0:   d3505ee4    ubfx    x4, x23, #16, #8
   9cbc4:   53187ee3    lsr w3, w23, #24
   9cbc8:   91002018    add x24, x0, #0x8
   9cbcc:   aa1903e2    mov x2, x25
   9cbd0:   39000277    strb    w23, [x19]
   9cbd4:   aa1803e0    mov x0, x24
   9cbd8:   aa1503e1    mov x1, x21
   9cbdc:   39000665    strb    w5, [x19, #1]
   9cbe0:   39000a64    strb    w4, [x19, #2]
   9cbe4:   39000e63    strb    w3, [x19, #3]
   9cbe8:   3900127f    strb    wzr, [x19, #4]
   9cbec:   3900167f    strb    wzr, [x19, #5]
   9cbf0:   39001a7f    strb    wzr, [x19, #6]
   9cbf4:   39001e7f    strb    wzr, [x19, #7]
   9cbf8:   94002860    bl  a6d78 <memcpy>
   9cbfc:   b8344b1f    str wzr, [x24, w20, uxtw]
   9cc00:   d5033f9f    dsb sy
   9cc04:   32020674    orr w20, w19, #0xc0000000
   9cc08:   aa1603e0    mov x0, x22
   9cc0c:   2a1403e1    mov w1, w20
   9cc10:   94003bec    bl  abbc0 <CBcmMailBox::WriteRead(unsigned int)>
   9cc14:   6b14001f    cmp w0, w20
   9cc18:   54000100    b.eq    9cc38 <CBcmPropertyTags::GetTags(void*, unsigned int)+0xc8>
   9cc1c:   a94153f3    ldp x19, x20, [sp, #16]
   9cc20:   52800000    mov w0, #0x0
   9cc24:   a9425bf5    ldp x21, x22, [sp, #32]
   9cc28:   a94363f7    ldp x23, x24, [sp, #48]
   9cc2c:   f94023f9    ldr x25, [sp, #64]
   9cc30:   a8c57bfd    ldp x29, x30, [sp], #80
   9cc34:   d65f03c0    ret
   9cc38:   d5033fbf    dmb sy
   9cc3c:   39401264    ldrb    w4, [x19, #4]
   9cc40:   52b00003    mov w3, #0x80000000
   9cc44:   39401662    ldrb    w2, [x19, #5]
   9cc48:   39401a61    ldrb    w1, [x19, #6]
   9cc4c:   39401e60    ldrb    w0, [x19, #7]
   9cc50:   aa022082    orr x2, x4, x2, lsl #8
   9cc54:   aa014041    orr x1, x2, x1, lsl #16
   9cc58:   aa006020    orr x0, x1, x0, lsl #24
   9cc5c:   6b03001f    cmp w0, w3
   9cc60:   54fffde1    b.ne    9cc1c <CBcmPropertyTags::GetTags(void*, unsigned int)+0xac>
   9cc64:   aa1903e2    mov x2, x25
   9cc68:   aa1803e1    mov x1, x24
   9cc6c:   aa1503e0    mov x0, x21
   9cc70:   94002842    bl  a6d78 <memcpy>
   9cc74:   a94153f3    ldp x19, x20, [sp, #16]
   9cc78:   52800020    mov w0, #0x1
   9cc7c:   a9425bf5    ldp x21, x22, [sp, #32]
   9cc80:   a94363f7    ldp x23, x24, [sp, #48]
   9cc84:   f94023f9    ldr x25, [sp, #64]
   9cc88:   a8c57bfd    ldp x29, x30, [sp], #80
   9cc8c:   d65f03c0    ret
   9cc90:   f00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9cc94:   9131e021    add x1, x1, #0xc78
   9cc98:   91006020    add x0, x1, #0x18
   9cc9c:   52800962    mov w2, #0x4b
   9cca0:   97ffff88    bl  9cac0 <assertion_failed>
   9cca4:   f00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9cca8:   9131e021    add x1, x1, #0xc78
   9ccac:   9100a020    add x0, x1, #0x28
   9ccb0:   52800982    mov w2, #0x4c
   9ccb4:   97ffff83    bl  9cac0 <assertion_failed>
   9ccb8:   f00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9ccbc:   9131e021    add x1, x1, #0xc78
   9ccc0:   91016020    add x0, x1, #0x58
   9ccc4:   528009c2    mov w2, #0x4e
   9ccc8:   97ffff7e    bl  9cac0 <assertion_failed>
   9cccc:   d503201f    nop

000000000009ccd0 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>:
   9ccd0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9ccd4:   910003fd    mov x29, sp
   9ccd8:   f9000bf3    str x19, [sp, #16]                             // preserve x19
   9ccdc:   aa0203f3    mov x19, x2                                    // x19 = pTag
   9cce0:   b4000662    cbz x2, 9cdac <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)+0xdc> // if pTag == 0 
   9cce4:   71003c7f    cmp w3, #0xf
   9cce8:   2a0303e2    mov w2, w3
   9ccec:   540006a9    b.ls    9cdc0 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)+0xf0> // if nTagSize <= 15 jump to 0x9cdc0 (assertion failed)
   9ccf0:   51003063    sub w3, w3, #0xc
   9ccf4:   d3483c26    ubfx    x6, x1, #8, #8
   9ccf8:   39000261    strb    w1, [x19]
   9ccfc:   d3483c65    ubfx    x5, x3, #8, #8
   9cd00:   d3505c67    ubfx    x7, x3, #16, #8
   9cd04:   39002264    strb    w4, [x19, #8]
   9cd08:   d3505c29    ubfx    x9, x1, #16, #8
   9cd0c:   51003048    sub w8, w2, #0xc
   9cd10:   39000666    strb    w6, [x19, #1]
   9cd14:   53187c63    lsr w3, w3, #24
   9cd18:   d3483c86    ubfx    x6, x4, #8, #8
   9cd1c:   39001665    strb    w5, [x19, #5]
   9cd20:   53187c21    lsr w1, w1, #24
   9cd24:   d3505c85    ubfx    x5, x4, #16, #8
   9cd28:   39000a69    strb    w9, [x19, #2]
   9cd2c:   d3587884    ubfx    x4, x4, #24, #7
   9cd30:   39001268    strb    w8, [x19, #4]
   9cd34:   39000e61    strb    w1, [x19, #3]
   9cd38:   aa1303e1    mov x1, x19
   9cd3c:   39001a67    strb    w7, [x19, #6]
   9cd40:   39001e63    strb    w3, [x19, #7]
   9cd44:   39002666    strb    w6, [x19, #9]
   9cd48:   39002a65    strb    w5, [x19, #10]
   9cd4c:   39002e64    strb    w4, [x19, #11]
   9cd50:   97ffff88    bl  9cb70 <CBcmPropertyTags::GetTags(void*, unsigned int)>
   9cd54:   12001c02    and w2, w0, #0xff
   9cd58:   36000220    tbz w0, #0, 9cd9c <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)+0xcc>
   9cd5c:   39402263    ldrb    w3, [x19, #8]
   9cd60:   39402662    ldrb    w2, [x19, #9]
   9cd64:   39402a60    ldrb    w0, [x19, #10]
   9cd68:   39402e61    ldrb    w1, [x19, #11]
   9cd6c:   aa022062    orr x2, x3, x2, lsl #8
   9cd70:   aa004040    orr x0, x2, x0, lsl #16
   9cd74:   aa016001    orr x1, x0, x1, lsl #24
   9cd78:   53083c24    ubfx    w4, w1, #8, #8
   9cd7c:   53105c23    ubfx    w3, w1, #16, #8
   9cd80:   f240783f    tst x1, #0x7fffffff
   9cd84:   53187820    ubfx    w0, w1, #24, #7
   9cd88:   1a9f07e2    cset    w2, ne
   9cd8c:   39002261    strb    w1, [x19, #8]
   9cd90:   39002664    strb    w4, [x19, #9]
   9cd94:   39002a63    strb    w3, [x19, #10]
   9cd98:   39002e60    strb    w0, [x19, #11]
   9cd9c:   f9400bf3    ldr x19, [sp, #16]
   9cda0:   2a0203e0    mov w0, w2
   9cda4:   a8c27bfd    ldp x29, x30, [sp], #32
   9cda8:   d65f03c0    ret


// assertion failed
   9cdac:   f00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9cdb0:   9131e021    add x1, x1, #0xc78                                                  // x1 = 0xb7c78
   9cdb4:   9101c020    add x0, x1, #0x70                                                   // x0 = 0xb7ce8
   9cdb8:   52800662    mov w2, #0x33                                                       // x2 = 0x33
   9cdbc:   97ffff41    bl  9cac0 <assertion_failed>

// assertion failed
   9cdc0:   f00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9cdc4:   9131e021    add x1, x1, #0xc78
   9cdc8:   91020020    add x0, x1, #0x80
   9cdcc:   52800682    mov w2, #0x34
   9cdd0:   97ffff3c    bl  9cac0 <assertion_failed>
    ...

000000000009cde0 <CClassAllocator::~CClassAllocator()>:
   9cde0:   aa0003e1    mov x1, x0
   9cde4:   f9400c00    ldr x0, [x0, #24]
   9cde8:   f900103f    str xzr, [x1, #32]
   9cdec:   b4000040    cbz x0, 9cdf4 <CClassAllocator::~CClassAllocator()+0x14>
   9cdf0:   14003954    b   ab340 <free>
   9cdf4:   d65f03c0    ret
   9cdf8:   d503201f    nop
   9cdfc:   d503201f    nop

000000000009ce00 <CClassAllocator::Init(unsigned long, unsigned int)>:
   9ce00:   f100003f    cmp x1, #0x0
   9ce04:   9a9f1421    csinc   x1, x1, xzr, ne
   9ce08:   91007c21    add x1, x1, #0x1f
   9ce0c:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9ce10:   927c6c21    and x1, x1, #0xfffffff0
   9ce14:   910003fd    mov x29, sp
   9ce18:   f9000bf3    str x19, [sp, #16]
   9ce1c:   f9000001    str x1, [x0]
   9ce20:   34000462    cbz w2, 9ceac <CClassAllocator::Init(unsigned long, unsigned int)+0xac>
   9ce24:   aa0003f3    mov x19, x0
   9ce28:   2a0203e0    mov w0, w2
   9ce2c:   9b017c00    mul x0, x0, x1
   9ce30:   b9000a62    str w2, [x19, #8]
   9ce34:   9400392b    bl  ab2e0 <malloc>
   9ce38:   f9000e60    str x0, [x19, #24]
   9ce3c:   aa0003e1    mov x1, x0
   9ce40:   b40002e0    cbz x0, 9ce9c <CClassAllocator::Init(unsigned long, unsigned int)+0x9c>
   9ce44:   f2400c1f    tst x0, #0xf
   9ce48:   540003e1    b.ne    9cec4 <CClassAllocator::Init(unsigned long, unsigned int)+0xc4>
   9ce4c:   b9400a60    ldr w0, [x19, #8]
   9ce50:   34000200    cbz w0, 9ce90 <CClassAllocator::Init(unsigned long, unsigned int)+0x90>
   9ce54:   f9400266    ldr x6, [x19]
   9ce58:   528a6a05    mov w5, #0x5350
   9ce5c:   72a9e845    movk    w5, #0x4f42, lsl #16
   9ce60:   52800002    mov w2, #0x0
   9ce64:   f9401260    ldr x0, [x19, #32]
   9ce68:   b9000025    str w5, [x1]
   9ce6c:   aa0003e4    mov x4, x0
   9ce70:   11000442    add w2, w2, #0x1
   9ce74:   b9400a63    ldr w3, [x19, #8]
   9ce78:   aa0103e0    mov x0, x1
   9ce7c:   f9000424    str x4, [x1, #8]
   9ce80:   8b060021    add x1, x1, x6
   9ce84:   6b02007f    cmp w3, w2
   9ce88:   54ffff08    b.hi    9ce68 <CClassAllocator::Init(unsigned long, unsigned int)+0x68>
   9ce8c:   f9001260    str x0, [x19, #32]
   9ce90:   f9400bf3    ldr x19, [sp, #16]
   9ce94:   a8c27bfd    ldp x29, x30, [sp], #32
   9ce98:   d65f03c0    ret
   9ce9c:   b9000a7f    str wzr, [x19, #8]
   9cea0:   f9400bf3    ldr x19, [sp, #16]
   9cea4:   a8c27bfd    ldp x29, x30, [sp], #32
   9cea8:   d65f03c0    ret
   9ceac:   d00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9ceb0:   d00000a0    adrp    x0, b2000 <_etext+0x2f9c>
   9ceb4:   91380021    add x1, x1, #0xe00
   9ceb8:   91386000    add x0, x0, #0xe18
   9cebc:   52800ae2    mov w2, #0x57
   9cec0:   97ffff00    bl  9cac0 <assertion_failed>
   9cec4:   d00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9cec8:   d00000a0    adrp    x0, b2000 <_etext+0x2f9c>
   9cecc:   91380021    add x1, x1, #0xe00
   9ced0:   9138c000    add x0, x0, #0xe30
   9ced4:   52800c22    mov w2, #0x61
   9ced8:   97fffefa    bl  9cac0 <assertion_failed>
   9cedc:   d503201f    nop

000000000009cee0 <CClassAllocator::CClassAllocator(unsigned long, unsigned int, char const*)>:
   9cee0:   52800025    mov w5, #0x1
   9cee4:   a9017c03    stp x3, xzr, [x0, #16]
   9cee8:   f900101f    str xzr, [x0, #32]
   9ceec:   3900a01f    strb    wzr, [x0, #40]
   9cef0:   b9003005    str w5, [x0, #48]
   9cef4:   17ffffc3    b   9ce00 <CClassAllocator::Init(unsigned long, unsigned int)>
   9cef8:   d503201f    nop
   9cefc:   d503201f    nop

000000000009cf00 <CClassAllocator::CClassAllocator(unsigned long, unsigned int, unsigned int, char const*)>:
   9cf00:   52800026    mov w6, #0x1
   9cf04:   a9017c04    stp x4, xzr, [x0, #16]
   9cf08:   f900101f    str xzr, [x0, #32]
   9cf0c:   3900a006    strb    w6, [x0, #40]
   9cf10:   29058c03    stp w3, w3, [x0, #44]
   9cf14:   17ffffbb    b   9ce00 <CClassAllocator::Init(unsigned long, unsigned int)>
   9cf18:   d503201f    nop
   9cf1c:   d503201f    nop

000000000009cf20 <CClassAllocator::Extend(unsigned int, unsigned int)>:
   9cf20:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   9cf24:   910003fd    mov x29, sp
   9cf28:   a90153f3    stp x19, x20, [sp, #16]
   9cf2c:   f90013f5    str x21, [sp, #32]
   9cf30:   aa0003f5    mov x21, x0
   9cf34:   3940a000    ldrb    w0, [x0, #40]
   9cf38:   360005c0    tbz w0, #0, 9cff0 <CClassAllocator::Extend(unsigned int, unsigned int)+0xd0>
   9cf3c:   b9402ea0    ldr w0, [x21, #44]
   9cf40:   6b02001f    cmp w0, w2
   9cf44:   54000621    b.ne    9d008 <CClassAllocator::Extend(unsigned int, unsigned int)+0xe8>
   9cf48:   2a0103f4    mov w20, w1
   9cf4c:   340006a1    cbz w1, 9d020 <CClassAllocator::Extend(unsigned int, unsigned int)+0x100>
   9cf50:   f94002a0    ldr x0, [x21]
   9cf54:   2a0103e1    mov w1, w1
   9cf58:   9b007c20    mul x0, x1, x0
   9cf5c:   940038e1    bl  ab2e0 <malloc>
   9cf60:   aa0003f3    mov x19, x0
   9cf64:   b4000320    cbz x0, 9cfc8 <CClassAllocator::Extend(unsigned int, unsigned int)+0xa8>
   9cf68:   f2400c1f    tst x0, #0xf
   9cf6c:   54000661    b.ne    9d038 <CClassAllocator::Extend(unsigned int, unsigned int)+0x118>
   9cf70:   b94032a0    ldr w0, [x21, #48]
   9cf74:   350003a0    cbnz    w0, 9cfe8 <CClassAllocator::Extend(unsigned int, unsigned int)+0xc8>
   9cf78:   f94002a4    ldr x4, [x21]
   9cf7c:   528a6a01    mov w1, #0x5350
   9cf80:   72a9e841    movk    w1, #0x4f42, lsl #16
   9cf84:   52800002    mov w2, #0x0
   9cf88:   f94012a3    ldr x3, [x21, #32]
   9cf8c:   d503201f    nop
   9cf90:   aa0303e0    mov x0, x3
   9cf94:   11000442    add w2, w2, #0x1
   9cf98:   b9000261    str w1, [x19]
   9cf9c:   6b02029f    cmp w20, w2
   9cfa0:   aa1303e3    mov x3, x19
   9cfa4:   f9000660    str x0, [x19, #8]
   9cfa8:   8b040273    add x19, x19, x4
   9cfac:   54ffff21    b.ne    9cf90 <CClassAllocator::Extend(unsigned int, unsigned int)+0x70>
   9cfb0:   b9400aa0    ldr w0, [x21, #8]
   9cfb4:   f90012a3    str x3, [x21, #32]
   9cfb8:   b94032a1    ldr w1, [x21, #48]
   9cfbc:   0b140000    add w0, w0, w20
   9cfc0:   b9000aa0    str w0, [x21, #8]
   9cfc4:   350000a1    cbnz    w1, 9cfd8 <CClassAllocator::Extend(unsigned int, unsigned int)+0xb8>
   9cfc8:   a94153f3    ldp x19, x20, [sp, #16]
   9cfcc:   f94013f5    ldr x21, [sp, #32]
   9cfd0:   a8c37bfd    ldp x29, x30, [sp], #48
   9cfd4:   d65f03c0    ret
   9cfd8:   a94153f3    ldp x19, x20, [sp, #16]
   9cfdc:   f94013f5    ldr x21, [sp, #32]
   9cfe0:   a8c37bfd    ldp x29, x30, [sp], #48
   9cfe4:   14002dd3    b   a8730 <LeaveCritical>
   9cfe8:   94002da2    bl  a8670 <EnterCritical>
   9cfec:   17ffffe3    b   9cf78 <CClassAllocator::Extend(unsigned int, unsigned int)+0x58>
   9cff0:   d00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9cff4:   d00000a0    adrp    x0, b2000 <_etext+0x2f9c>
   9cff8:   91380021    add x1, x1, #0xe00
   9cffc:   9139c000    add x0, x0, #0xe70
   9d000:   52800e02    mov w2, #0x70
   9d004:   97fffeaf    bl  9cac0 <assertion_failed>
   9d008:   b00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9d00c:   b00000a0    adrp    x0, b2000 <_etext+0x2f9c>
   9d010:   91380021    add x1, x1, #0xe00
   9d014:   913a0000    add x0, x0, #0xe80
   9d018:   52800e22    mov w2, #0x71
   9d01c:   97fffea9    bl  9cac0 <assertion_failed>
   9d020:   b00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9d024:   b00000a0    adrp    x0, b2000 <_etext+0x2f9c>
   9d028:   91380021    add x1, x1, #0xe00
   9d02c:   91386000    add x0, x0, #0xe18
   9d030:   52800e42    mov w2, #0x72
   9d034:   97fffea3    bl  9cac0 <assertion_failed>
   9d038:   b00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9d03c:   b00000a0    adrp    x0, b2000 <_etext+0x2f9c>
   9d040:   91380021    add x1, x1, #0xe00
   9d044:   913a8000    add x0, x0, #0xea0
   9d048:   52800f42    mov w2, #0x7a
   9d04c:   97fffe9d    bl  9cac0 <assertion_failed>

000000000009d050 <CClassAllocator::Allocate()>:
   9d050:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9d054:   910003fd    mov x29, sp
   9d058:   a90153f3    stp x19, x20, [sp, #16]
   9d05c:   aa0003f3    mov x19, x0
   9d060:   3940a000    ldrb    w0, [x0, #40]
   9d064:   36000060    tbz w0, #0, 9d070 <CClassAllocator::Allocate()+0x20>
   9d068:   b9403260    ldr w0, [x19, #48]
   9d06c:   350002a0    cbnz    w0, 9d0c0 <CClassAllocator::Allocate()+0x70>
   9d070:   f9401274    ldr x20, [x19, #32]
   9d074:   b4000374    cbz x20, 9d0e0 <CClassAllocator::Allocate()+0x90>
   9d078:   b9400281    ldr w1, [x20]
   9d07c:   528a6a00    mov w0, #0x5350
   9d080:   72a9e840    movk    w0, #0x4f42, lsl #16
   9d084:   6b00003f    cmp w1, w0
   9d088:   540003e1    b.ne    9d104 <CClassAllocator::Allocate()+0xb4>
   9d08c:   f9400681    ldr x1, [x20, #8]
   9d090:   3940a260    ldrb    w0, [x19, #40]
   9d094:   f9001261    str x1, [x19, #32]
   9d098:   f900069f    str xzr, [x20, #8]
   9d09c:   370000a0    tbnz    w0, #0, 9d0b0 <CClassAllocator::Allocate()+0x60>
   9d0a0:   91004280    add x0, x20, #0x10
   9d0a4:   a94153f3    ldp x19, x20, [sp, #16]
   9d0a8:   a8c27bfd    ldp x29, x30, [sp], #32
   9d0ac:   d65f03c0    ret
   9d0b0:   b9403260    ldr w0, [x19, #48]
   9d0b4:   34ffff60    cbz w0, 9d0a0 <CClassAllocator::Allocate()+0x50>
   9d0b8:   94002d9e    bl  a8730 <LeaveCritical>
   9d0bc:   17fffff9    b   9d0a0 <CClassAllocator::Allocate()+0x50>
   9d0c0:   94002d6c    bl  a8670 <EnterCritical>
   9d0c4:   f9401274    ldr x20, [x19, #32]
   9d0c8:   b5fffd94    cbnz    x20, 9d078 <CClassAllocator::Allocate()+0x28>
   9d0cc:   3940a260    ldrb    w0, [x19, #40]
   9d0d0:   36000080    tbz w0, #0, 9d0e0 <CClassAllocator::Allocate()+0x90>
   9d0d4:   b9403260    ldr w0, [x19, #48]
   9d0d8:   34000040    cbz w0, 9d0e0 <CClassAllocator::Allocate()+0x90>
   9d0dc:   94002d95    bl  a8730 <LeaveCritical>
   9d0e0:   94000948    bl  9f600 <CLogger::Get()>
   9d0e4:   b00000a3    adrp    x3, b2000 <_etext+0x2f9c>
   9d0e8:   f9400a61    ldr x1, [x19, #16]
   9d0ec:   52800002    mov w2, #0x0
   9d0f0:   913b8063    add x3, x3, #0xee0
   9d0f4:   b9400a64    ldr w4, [x19, #8]
   9d0f8:   94000b2a    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   9d0fc:   d2800000    mov x0, #0x0
   9d100:   17ffffe9    b   9d0a4 <CClassAllocator::Allocate()+0x54>
   9d104:   b00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9d108:   b00000a0    adrp    x0, b2000 <_etext+0x2f9c>
   9d10c:   91380021    add x1, x1, #0xe00
   9d110:   913c4000    add x0, x0, #0xf10
   9d114:   52801462    mov w2, #0xa3
   9d118:   97fffe6a    bl  9cac0 <assertion_failed>
   9d11c:   d503201f    nop

000000000009d120 <CClassAllocator::Free(void*)>:
   9d120:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9d124:   910003fd    mov x29, sp
   9d128:   a90153f3    stp x19, x20, [sp, #16]
   9d12c:   b40003e1    cbz x1, 9d1a8 <CClassAllocator::Free(void*)+0x88>
   9d130:   aa0003f4    mov x20, x0
   9d134:   528a6a00    mov w0, #0x5350
   9d138:   72a9e840    movk    w0, #0x4f42, lsl #16
   9d13c:   b85f0022    ldur    w2, [x1, #-16]
   9d140:   d1004033    sub x19, x1, #0x10
   9d144:   6b00005f    cmp w2, w0
   9d148:   540003c1    b.ne    9d1c0 <CClassAllocator::Free(void*)+0xa0>
   9d14c:   f9400660    ldr x0, [x19, #8]
   9d150:   b5000440    cbnz    x0, 9d1d8 <CClassAllocator::Free(void*)+0xb8>
   9d154:   3940a280    ldrb    w0, [x20, #40]
   9d158:   370000e0    tbnz    w0, #0, 9d174 <CClassAllocator::Free(void*)+0x54>
   9d15c:   f9401280    ldr x0, [x20, #32]
   9d160:   f9000660    str x0, [x19, #8]
   9d164:   f9001293    str x19, [x20, #32]
   9d168:   a94153f3    ldp x19, x20, [sp, #16]
   9d16c:   a8c27bfd    ldp x29, x30, [sp], #32
   9d170:   d65f03c0    ret
   9d174:   b9403280    ldr w0, [x20, #48]
   9d178:   34ffff20    cbz w0, 9d15c <CClassAllocator::Free(void*)+0x3c>
   9d17c:   94002d3d    bl  a8670 <EnterCritical>
   9d180:   f9401281    ldr x1, [x20, #32]
   9d184:   3940a280    ldrb    w0, [x20, #40]
   9d188:   f9000661    str x1, [x19, #8]
   9d18c:   f9001293    str x19, [x20, #32]
   9d190:   3607fec0    tbz w0, #0, 9d168 <CClassAllocator::Free(void*)+0x48>
   9d194:   b9403280    ldr w0, [x20, #48]
   9d198:   34fffe80    cbz w0, 9d168 <CClassAllocator::Free(void*)+0x48>
   9d19c:   a94153f3    ldp x19, x20, [sp, #16]
   9d1a0:   a8c27bfd    ldp x29, x30, [sp], #32
   9d1a4:   14002d63    b   a8730 <LeaveCritical>
   9d1a8:   b00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9d1ac:   f0000080    adrp    x0, b0000 <_etext+0xf9c>
   9d1b0:   91380021    add x1, x1, #0xe00
   9d1b4:   9104e000    add x0, x0, #0x138
   9d1b8:   52801622    mov w2, #0xb1
   9d1bc:   97fffe41    bl  9cac0 <assertion_failed>
   9d1c0:   b00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9d1c4:   b00000a0    adrp    x0, b2000 <_etext+0x2f9c>
   9d1c8:   91380021    add x1, x1, #0xe00
   9d1cc:   913cc000    add x0, x0, #0xf30
   9d1d0:   528016a2    mov w2, #0xb5
   9d1d4:   97fffe3b    bl  9cac0 <assertion_failed>
   9d1d8:   b00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9d1dc:   b00000a0    adrp    x0, b2000 <_etext+0x2f9c>
   9d1e0:   91380021    add x1, x1, #0xe00
   9d1e4:   913d4000    add x0, x0, #0xf50
   9d1e8:   528016c2    mov w2, #0xb6
   9d1ec:   97fffe35    bl  9cac0 <assertion_failed>

000000000009d1f0 <debug_hexdump(void const*, unsigned int, char const*)>:
   9d1f0:   d102c3ff    sub sp, sp, #0xb0
   9d1f4:   f100005f    cmp x2, #0x0
   9d1f8:   a9077bfd    stp x29, x30, [sp, #112]
   9d1fc:   9101c3fd    add x29, sp, #0x70
   9d200:   a90853f3    stp x19, x20, [sp, #128]
   9d204:   aa0003f3    mov x19, x0
   9d208:   d00000c0    adrp    x0, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9d20c:   91348000    add x0, x0, #0xd20
   9d210:   2a0103f4    mov w20, w1
   9d214:   a9095bf5    stp x21, x22, [sp, #144]
   9d218:   9a820015    csel    x21, x0, x2, eq
   9d21c:   940008f9    bl  9f600 <CLogger::Get()>
   9d220:   b00000a3    adrp    x3, b2000 <_etext+0x2f9c>
   9d224:   aa1303e5    mov x5, x19
   9d228:   2a1403e4    mov w4, w20
   9d22c:   aa1503e1    mov x1, x21
   9d230:   913da063    add x3, x3, #0xf68
   9d234:   52800082    mov w2, #0x4
   9d238:   94000ada    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   9d23c:   340005f4    cbz w20, 9d2f8 <debug_hexdump(void const*, unsigned int, char const*)+0x108>
   9d240:   b00000b6    adrp    x22, b2000 <_etext+0x2f9c>
   9d244:   913e42d6    add x22, x22, #0xf90
   9d248:   f90053f7    str x23, [sp, #160]
   9d24c:   12000e97    and w23, w20, #0xf
   9d250:   14000003    b   9d25c <debug_hexdump(void const*, unsigned int, char const*)+0x6c>
   9d254:   71004294    subs    w20, w20, #0x10
   9d258:   540004e0    b.eq    9d2f4 <debug_hexdump(void const*, unsigned int, char const*)+0x104>
   9d25c:   940008e9    bl  9f600 <CLogger::Get()>
   9d260:   39401665    ldrb    w5, [x19, #5]
   9d264:   12003e64    and w4, w19, #0xffff
   9d268:   aa1603e3    mov x3, x22
   9d26c:   aa1503e1    mov x1, x21
   9d270:   52800082    mov w2, #0x4
   9d274:   39401267    ldrb    w7, [x19, #4]
   9d278:   91004273    add x19, x19, #0x10
   9d27c:   385f3266    ldurb   w6, [x19, #-13]
   9d280:   b90013e5    str w5, [sp, #16]
   9d284:   385ff265    ldurb   w5, [x19, #-1]
   9d288:   b9000be7    str w7, [sp, #8]
   9d28c:   385fe267    ldurb   w7, [x19, #-2]
   9d290:   b90003e6    str w6, [sp]
   9d294:   385fd266    ldurb   w6, [x19, #-3]
   9d298:   b90063e5    str w5, [sp, #96]
   9d29c:   385fc265    ldurb   w5, [x19, #-4]
   9d2a0:   b9005be7    str w7, [sp, #88]
   9d2a4:   385fb267    ldurb   w7, [x19, #-5]
   9d2a8:   b90053e6    str w6, [sp, #80]
   9d2ac:   385fa266    ldurb   w6, [x19, #-6]
   9d2b0:   b9004be5    str w5, [sp, #72]
   9d2b4:   385f9265    ldurb   w5, [x19, #-7]
   9d2b8:   b90043e7    str w7, [sp, #64]
   9d2bc:   385f8267    ldurb   w7, [x19, #-8]
   9d2c0:   b9003be6    str w6, [sp, #56]
   9d2c4:   385f7266    ldurb   w6, [x19, #-9]
   9d2c8:   b90033e5    str w5, [sp, #48]
   9d2cc:   385f6265    ldurb   w5, [x19, #-10]
   9d2d0:   b9002be7    str w7, [sp, #40]
   9d2d4:   385f2267    ldurb   w7, [x19, #-14]
   9d2d8:   b90023e6    str w6, [sp, #32]
   9d2dc:   385f1266    ldurb   w6, [x19, #-15]
   9d2e0:   b9001be5    str w5, [sp, #24]
   9d2e4:   385f0265    ldurb   w5, [x19, #-16]
   9d2e8:   94000aae    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   9d2ec:   6b1402ff    cmp w23, w20
   9d2f0:   54fffb21    b.ne    9d254 <debug_hexdump(void const*, unsigned int, char const*)+0x64>
   9d2f4:   f94053f7    ldr x23, [sp, #160]
   9d2f8:   a9477bfd    ldp x29, x30, [sp, #112]
   9d2fc:   a94853f3    ldp x19, x20, [sp, #128]
   9d300:   a9495bf5    ldp x21, x22, [sp, #144]
   9d304:   9102c3ff    add sp, sp, #0xb0
   9d308:   d65f03c0    ret
   9d30c:   d503201f    nop

000000000009d310 <debug_stacktrace(unsigned long const*, char const*)>:
   9d310:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   9d314:   910003fd    mov x29, sp
   9d318:   f100003f    cmp x1, #0x0
   9d31c:   a90153f3    stp x19, x20, [sp, #16]
   9d320:   aa0003f4    mov x20, x0
   9d324:   d2800013    mov x19, #0x0
   9d328:   d00000c0    adrp    x0, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9d32c:   91348000    add x0, x0, #0xd20
   9d330:   a9025bf5    stp x21, x22, [sp, #32]
   9d334:   d0000096    adrp    x22, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   9d338:   910192d6    add x22, x22, #0x64
   9d33c:   b2404bf5    mov x21, #0x7ffff
   9d340:   a90363f7    stp x23, x24, [sp, #48]
   9d344:   b00000b8    adrp    x24, b2000 <_etext+0x2f9c>
   9d348:   913fa318    add x24, x24, #0xfe8
   9d34c:   9a810017    csel    x23, x0, x1, eq
   9d350:   14000004    b   9d360 <debug_stacktrace(unsigned long const*, char const*)+0x50>
   9d354:   91000673    add x19, x19, #0x1
   9d358:   f101027f    cmp x19, #0x40
   9d35c:   54000240    b.eq    9d3a4 <debug_stacktrace(unsigned long const*, char const*)+0x94>
   9d360:   f8737a82    ldr x2, [x20, x19, lsl #3]
   9d364:   eb15005f    cmp x2, x21
   9d368:   54ffff69    b.ls    9d354 <debug_stacktrace(unsigned long const*, char const*)+0x44>
   9d36c:   eb16005f    cmp x2, x22
   9d370:   54ffff22    b.cs    9d354 <debug_stacktrace(unsigned long const*, char const*)+0x44>
   9d374:   f240045f    tst x2, #0x3
   9d378:   54fffee1    b.ne    9d354 <debug_stacktrace(unsigned long const*, char const*)+0x44>
   9d37c:   940008a1    bl  9f600 <CLogger::Get()>
   9d380:   f8737a85    ldr x5, [x20, x19, lsl #3]
   9d384:   2a1303e4    mov w4, w19
   9d388:   aa1803e3    mov x3, x24
   9d38c:   aa1703e1    mov x1, x23
   9d390:   52800082    mov w2, #0x4
   9d394:   91000673    add x19, x19, #0x1
   9d398:   94000a82    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   9d39c:   f101027f    cmp x19, #0x40
   9d3a0:   54fffe01    b.ne    9d360 <debug_stacktrace(unsigned long const*, char const*)+0x50>
   9d3a4:   a94153f3    ldp x19, x20, [sp, #16]
   9d3a8:   a9425bf5    ldp x21, x22, [sp, #32]
   9d3ac:   a94363f7    ldp x23, x24, [sp, #48]
   9d3b0:   a8c47bfd    ldp x29, x30, [sp], #64
   9d3b4:   d65f03c0    ret
    ...

000000000009d3c0 <CDevice::Read(void*, unsigned long)>:
   9d3c0:   12800000    mov w0, #0xffffffff
   9d3c4:   d65f03c0    ret
   9d3c8:   d503201f    nop
   9d3cc:   d503201f    nop

000000000009d3d0 <CDevice::Seek(unsigned long)>:
   9d3d0:   92800000    mov x0, #0xffffffffffffffff
   9d3d4:   d65f03c0    ret
   9d3d8:   d503201f    nop
   9d3dc:   d503201f    nop

000000000009d3e0 <CDevice::GetSize() const>:
   9d3e0:   92800000    mov x0, #0xffffffffffffffff
   9d3e4:   d65f03c0    ret
   9d3e8:   d503201f    nop
   9d3ec:   d503201f    nop

000000000009d3f0 <CDevice::IOCtl(unsigned long, void*)>:
   9d3f0:   12800000    mov w0, #0xffffffff
   9d3f4:   d65f03c0    ret
   9d3f8:   d503201f    nop
   9d3fc:   d503201f    nop

000000000009d400 <CDevice::RemoveDevice()>:
   9d400:   52800000    mov w0, #0x0
   9d404:   d65f03c0    ret
   9d408:   d503201f    nop
   9d40c:   d503201f    nop

000000000009d410 <CDevice::~CDevice()>:
   9d410:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   9d414:   910003fd    mov x29, sp
   9d418:   d00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9d41c:   9134e021    add x1, x1, #0xd38
   9d420:   a9025bf5    stp x21, x22, [sp, #32]
   9d424:   aa0003f5    mov x21, x0
   9d428:   aa0003f6    mov x22, x0
   9d42c:   a90153f3    stp x19, x20, [sp, #16]
   9d430:   f80086a1    str x1, [x21], #8
   9d434:   1400000a    b   9d45c <CDevice::~CDevice()+0x4c>
   9d438:   f9400681    ldr x1, [x20, #8]
   9d43c:   aa1603e0    mov x0, x22
   9d440:   d63f0040    blr x2
   9d444:   aa1503e0    mov x0, x21
   9d448:   aa1303e1    mov x1, x19
   9d44c:   94000e55    bl  a0da0 <CPtrList::Remove(TPtrListElement*)>
   9d450:   aa1403e0    mov x0, x20
   9d454:   d2800201    mov x1, #0x10
   9d458:   94002902    bl  a7860 <operator delete(void*, unsigned long)>
   9d45c:   aa1503e0    mov x0, x21
   9d460:   94000d9c    bl  a0ad0 <CPtrList::GetFirst()>
   9d464:   aa0003f3    mov x19, x0
   9d468:   b40001a0    cbz x0, 9d49c <CDevice::~CDevice()+0x8c>
   9d46c:   aa1303e1    mov x1, x19
   9d470:   aa1503e0    mov x0, x21
   9d474:   94000db3    bl  a0b40 <CPtrList::GetPtr(TPtrListElement*)>
   9d478:   f9400002    ldr x2, [x0]
   9d47c:   aa0003f4    mov x20, x0
   9d480:   b5fffdc2    cbnz    x2, 9d438 <CDevice::~CDevice()+0x28>
   9d484:   d00000a1    adrp    x1, b3000 <_etext+0x3f9c>
   9d488:   d00000a0    adrp    x0, b3000 <_etext+0x3f9c>
   9d48c:   91000021    add x1, x1, #0x0
   9d490:   91004000    add x0, x0, #0x10
   9d494:   52800502    mov w2, #0x28
   9d498:   97fffd8a    bl  9cac0 <assertion_failed>
   9d49c:   a94153f3    ldp x19, x20, [sp, #16]
   9d4a0:   aa1503e0    mov x0, x21
   9d4a4:   a9425bf5    ldp x21, x22, [sp, #32]
   9d4a8:   a8c37bfd    ldp x29, x30, [sp], #48
   9d4ac:   14000d7d    b   a0aa0 <CPtrList::~CPtrList()>

000000000009d4b0 <CDevice::~CDevice()>:
   9d4b0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9d4b4:   910003fd    mov x29, sp
   9d4b8:   f9000bf3    str x19, [sp, #16]
   9d4bc:   aa0003f3    mov x19, x0
   9d4c0:   97ffffd4    bl  9d410 <CDevice::~CDevice()>
   9d4c4:   aa1303e0    mov x0, x19
   9d4c8:   f9400bf3    ldr x19, [sp, #16]
   9d4cc:   d2800201    mov x1, #0x10
   9d4d0:   a8c27bfd    ldp x29, x30, [sp], #32
   9d4d4:   140028e3    b   a7860 <operator delete(void*, unsigned long)>
   9d4d8:   d503201f    nop
   9d4dc:   d503201f    nop

000000000009d4e0 <CDevice::CDevice()>:
   9d4e0:   d00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9d4e4:   9134e021    add x1, x1, #0xd38
   9d4e8:   f8008401    str x1, [x0], #8
   9d4ec:   14000d69    b   a0a90 <CPtrList::CPtrList()>

000000000009d4f0 <CDevice::RegisterRemovedHandler(void (*)(CDevice*, void*), void*)>:
   9d4f0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   9d4f4:   910003fd    mov x29, sp
   9d4f8:   a90153f3    stp x19, x20, [sp, #16]
   9d4fc:   a9025bf5    stp x21, x22, [sp, #32]
   9d500:   b4000361    cbz x1, 9d56c <CDevice::RegisterRemovedHandler(void (*)(CDevice*, void*), void*)+0x7c>
   9d504:   aa0003f3    mov x19, x0
   9d508:   d2800200    mov x0, #0x10
   9d50c:   aa0103f5    mov x21, x1
   9d510:   aa0203f6    mov x22, x2
   9d514:   940028ab    bl  a77c0 <operator new(unsigned long)>
   9d518:   aa0003f4    mov x20, x0
   9d51c:   91002273    add x19, x19, #0x8
   9d520:   aa1303e0    mov x0, x19
   9d524:   a9005a95    stp x21, x22, [x20]
   9d528:   94000d6a    bl  a0ad0 <CPtrList::GetFirst()>
   9d52c:   aa0003e1    mov x1, x0
   9d530:   aa1403e2    mov x2, x20
   9d534:   aa1303e0    mov x0, x19
   9d538:   b40000e1    cbz x1, 9d554 <CDevice::RegisterRemovedHandler(void (*)(CDevice*, void*), void*)+0x64>
   9d53c:   94000d99    bl  a0ba0 <CPtrList::InsertBefore(TPtrListElement*, void*)>
   9d540:   a9425bf5    ldp x21, x22, [sp, #32]
   9d544:   aa1403e0    mov x0, x20
   9d548:   a94153f3    ldp x19, x20, [sp, #16]
   9d54c:   a8c37bfd    ldp x29, x30, [sp], #48
   9d550:   d65f03c0    ret
   9d554:   94000dd3    bl  a0ca0 <CPtrList::InsertAfter(TPtrListElement*, void*)>
   9d558:   a9425bf5    ldp x21, x22, [sp, #32]
   9d55c:   aa1403e0    mov x0, x20
   9d560:   a94153f3    ldp x19, x20, [sp, #16]
   9d564:   a8c37bfd    ldp x29, x30, [sp], #48
   9d568:   d65f03c0    ret
   9d56c:   d00000a1    adrp    x1, b3000 <_etext+0x3f9c>
   9d570:   d00000a0    adrp    x0, b3000 <_etext+0x3f9c>
   9d574:   91000021    add x1, x1, #0x0
   9d578:   9126e000    add x0, x0, #0x9b8
   9d57c:   52800a42    mov w2, #0x52
   9d580:   97fffd50    bl  9cac0 <assertion_failed>
   9d584:   d503201f    nop
   9d588:   d503201f    nop
   9d58c:   d503201f    nop

000000000009d590 <CDevice::UnregisterRemovedHandler(void*)>:
   9d590:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9d594:   910003fd    mov x29, sp
   9d598:   a90153f3    stp x19, x20, [sp, #16]
   9d59c:   b40001c1    cbz x1, 9d5d4 <CDevice::UnregisterRemovedHandler(void*)+0x44>
   9d5a0:   91002013    add x19, x0, #0x8
   9d5a4:   aa0103f4    mov x20, x1
   9d5a8:   aa1303e0    mov x0, x19
   9d5ac:   94000e49    bl  a0ed0 <CPtrList::Find(void*)>
   9d5b0:   aa0003e1    mov x1, x0
   9d5b4:   b40001c0    cbz x0, 9d5ec <CDevice::UnregisterRemovedHandler(void*)+0x5c>
   9d5b8:   aa1303e0    mov x0, x19
   9d5bc:   94000df9    bl  a0da0 <CPtrList::Remove(TPtrListElement*)>
   9d5c0:   aa1403e0    mov x0, x20
   9d5c4:   a94153f3    ldp x19, x20, [sp, #16]
   9d5c8:   d2800201    mov x1, #0x10
   9d5cc:   a8c27bfd    ldp x29, x30, [sp], #32
   9d5d0:   140028a4    b   a7860 <operator delete(void*, unsigned long)>
   9d5d4:   d00000a1    adrp    x1, b3000 <_etext+0x3f9c>
   9d5d8:   d00000a0    adrp    x0, b3000 <_etext+0x3f9c>
   9d5dc:   91000021    add x1, x1, #0x0
   9d5e0:   9100a000    add x0, x0, #0x28
   9d5e4:   52800d22    mov w2, #0x69
   9d5e8:   97fffd36    bl  9cac0 <assertion_failed>
   9d5ec:   d00000a1    adrp    x1, b3000 <_etext+0x3f9c>
   9d5f0:   d00000a0    adrp    x0, b3000 <_etext+0x3f9c>
   9d5f4:   91000021    add x1, x1, #0x0
   9d5f8:   9100e000    add x0, x0, #0x38
   9d5fc:   52800d82    mov w2, #0x6c
   9d600:   97fffd30    bl  9cac0 <assertion_failed>
    ...

000000000009d610 <CDeviceNameService::CDeviceNameService()>:
   9d610:   b00000e1    adrp    x1, ba000 <font_data+0x1080>
   9d614:   f900001f    str xzr, [x0]
   9d618:   f944ac22    ldr x2, [x1, #2392]
   9d61c:   b900081f    str wzr, [x0, #8]
   9d620:   b5000062    cbnz    x2, 9d62c <CDeviceNameService::CDeviceNameService()+0x1c>
   9d624:   f904ac20    str x0, [x1, #2392]
   9d628:   d65f03c0    ret
   9d62c:   d00000a1    adrp    x1, b3000 <_etext+0x3f9c>
   9d630:   d00000a0    adrp    x0, b3000 <_etext+0x3f9c>
   9d634:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   9d638:   91012021    add x1, x1, #0x48
   9d63c:   910003fd    mov x29, sp
   9d640:   91018000    add x0, x0, #0x60
   9d644:   528003e2    mov w2, #0x1f
   9d648:   97fffd1e    bl  9cac0 <assertion_failed>
   9d64c:   d503201f    nop

000000000009d650 <CDeviceNameService::~CDeviceNameService()>:
   9d650:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9d654:   910003fd    mov x29, sp
   9d658:   a90153f3    stp x19, x20, [sp, #16]
   9d65c:   f9400013    ldr x19, [x0]
   9d660:   b4000173    cbz x19, 9d68c <CDeviceNameService::~CDeviceNameService()+0x3c>
   9d664:   aa0003f4    mov x20, x0
   9d668:   f9400660    ldr x0, [x19, #8]
   9d66c:   f9400273    ldr x19, [x19]
   9d670:   b4000040    cbz x0, 9d678 <CDeviceNameService::~CDeviceNameService()+0x28>
   9d674:   9400286f    bl  a7830 <operator delete[](void*)>
   9d678:   f9400280    ldr x0, [x20]
   9d67c:   d2800401    mov x1, #0x20
   9d680:   94002878    bl  a7860 <operator delete(void*, unsigned long)>
   9d684:   f9000293    str x19, [x20]
   9d688:   b5ffff13    cbnz    x19, 9d668 <CDeviceNameService::~CDeviceNameService()+0x18>
   9d68c:   b00000e0    adrp    x0, ba000 <font_data+0x1080>
   9d690:   a94153f3    ldp x19, x20, [sp, #16]
   9d694:   f904ac1f    str xzr, [x0, #2392]
   9d698:   a8c27bfd    ldp x29, x30, [sp], #32
   9d69c:   d65f03c0    ret

000000000009d6a0 <CDeviceNameService::AddDevice(char const*, CDevice*, bool)>:
   9d6a0:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   9d6a4:   910003fd    mov x29, sp
   9d6a8:   a90153f3    stp x19, x20, [sp, #16]
   9d6ac:   aa0003f4    mov x20, x0
   9d6b0:   b9400800    ldr w0, [x0, #8]
   9d6b4:   a9025bf5    stp x21, x22, [sp, #32]
   9d6b8:   aa0103f5    mov x21, x1
   9d6bc:   aa0203f6    mov x22, x2
   9d6c0:   f9001bf7    str x23, [sp, #48]
   9d6c4:   12001c77    and w23, w3, #0xff
   9d6c8:   35000320    cbnz    w0, 9d72c <CDeviceNameService::AddDevice(char const*, CDevice*, bool)+0x8c>
   9d6cc:   d2800400    mov x0, #0x20
   9d6d0:   9400283c    bl  a77c0 <operator new(unsigned long)>
   9d6d4:   aa0003f3    mov x19, x0
   9d6d8:   b4000355    cbz x21, 9d740 <CDeviceNameService::AddDevice(char const*, CDevice*, bool)+0xa0>
   9d6dc:   aa1503e0    mov x0, x21
   9d6e0:   94002418    bl  a6740 <strlen>
   9d6e4:   91000400    add x0, x0, #0x1
   9d6e8:   9400283e    bl  a77e0 <operator new[](unsigned long)>
   9d6ec:   aa1503e1    mov x1, x21
   9d6f0:   f9000660    str x0, [x19, #8]
   9d6f4:   940024a3    bl  a6980 <strcpy>
   9d6f8:   b40003b6    cbz x22, 9d76c <CDeviceNameService::AddDevice(char const*, CDevice*, bool)+0xcc>
   9d6fc:   f9400281    ldr x1, [x20]
   9d700:   f9000293    str x19, [x20]
   9d704:   b9400a80    ldr w0, [x20, #8]
   9d708:   f9000a76    str x22, [x19, #16]
   9d70c:   39006277    strb    w23, [x19, #24]
   9d710:   f9000261    str x1, [x19]
   9d714:   35000220    cbnz    w0, 9d758 <CDeviceNameService::AddDevice(char const*, CDevice*, bool)+0xb8>
   9d718:   a94153f3    ldp x19, x20, [sp, #16]
   9d71c:   a9425bf5    ldp x21, x22, [sp, #32]
   9d720:   f9401bf7    ldr x23, [sp, #48]
   9d724:   a8c47bfd    ldp x29, x30, [sp], #64
   9d728:   d65f03c0    ret
   9d72c:   94002bd1    bl  a8670 <EnterCritical>
   9d730:   d2800400    mov x0, #0x20
   9d734:   94002823    bl  a77c0 <operator new(unsigned long)>
   9d738:   aa0003f3    mov x19, x0
   9d73c:   b5fffd15    cbnz    x21, 9d6dc <CDeviceNameService::AddDevice(char const*, CDevice*, bool)+0x3c>
   9d740:   d00000a1    adrp    x1, b3000 <_etext+0x3f9c>
   9d744:   f0000080    adrp    x0, b0000 <_etext+0xf9c>
   9d748:   91012021    add x1, x1, #0x48
   9d74c:   91128000    add x0, x0, #0x4a0
   9d750:   52800762    mov w2, #0x3b
   9d754:   97fffcdb    bl  9cac0 <assertion_failed>
   9d758:   a94153f3    ldp x19, x20, [sp, #16]
   9d75c:   a9425bf5    ldp x21, x22, [sp, #32]
   9d760:   f9401bf7    ldr x23, [sp, #48]
   9d764:   a8c47bfd    ldp x29, x30, [sp], #64
   9d768:   14002bf2    b   a8730 <LeaveCritical>
   9d76c:   d00000a1    adrp    x1, b3000 <_etext+0x3f9c>
   9d770:   d00000a0    adrp    x0, b3000 <_etext+0x3f9c>
   9d774:   91012021    add x1, x1, #0x48
   9d778:   9101c000    add x0, x0, #0x70
   9d77c:   52800802    mov w2, #0x40
   9d780:   97fffcd0    bl  9cac0 <assertion_failed>
   9d784:   d503201f    nop
   9d788:   d503201f    nop
   9d78c:   d503201f    nop

000000000009d790 <CDeviceNameService::RemoveDevice(char const*, bool)>:
   9d790:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   9d794:   910003fd    mov x29, sp
   9d798:   a90153f3    stp x19, x20, [sp, #16]
   9d79c:   a9025bf5    stp x21, x22, [sp, #32]
   9d7a0:   f9001bf7    str x23, [sp, #48]
   9d7a4:   b40006e1    cbz x1, 9d880 <CDeviceNameService::RemoveDevice(char const*, bool)+0xf0>
   9d7a8:   aa0003f6    mov x22, x0
   9d7ac:   b9400800    ldr w0, [x0, #8]
   9d7b0:   aa0103f4    mov x20, x1
   9d7b4:   12001c57    and w23, w2, #0xff
   9d7b8:   350002e0    cbnz    w0, 9d814 <CDeviceNameService::RemoveDevice(char const*, bool)+0x84>
   9d7bc:   f94002d3    ldr x19, [x22]
   9d7c0:   b4000713    cbz x19, 9d8a0 <CDeviceNameService::RemoveDevice(char const*, bool)+0x110>
   9d7c4:   d2800015    mov x21, #0x0
   9d7c8:   1400000b    b   9d7f4 <CDeviceNameService::RemoveDevice(char const*, bool)+0x64>
   9d7cc:   aa1403e0    mov x0, x20
   9d7d0:   940023e8    bl  a6770 <strcmp>
   9d7d4:   35000080    cbnz    w0, 9d7e4 <CDeviceNameService::RemoveDevice(char const*, bool)+0x54>
   9d7d8:   39406261    ldrb    w1, [x19, #24]
   9d7dc:   6b17003f    cmp w1, w23
   9d7e0:   540002e0    b.eq    9d83c <CDeviceNameService::RemoveDevice(char const*, bool)+0xac>
   9d7e4:   f9400262    ldr x2, [x19]
   9d7e8:   aa1303f5    mov x21, x19
   9d7ec:   b40001a2    cbz x2, 9d820 <CDeviceNameService::RemoveDevice(char const*, bool)+0x90>
   9d7f0:   aa0203f3    mov x19, x2
   9d7f4:   f9400661    ldr x1, [x19, #8]
   9d7f8:   b5fffea1    cbnz    x1, 9d7cc <CDeviceNameService::RemoveDevice(char const*, bool)+0x3c>
   9d7fc:   d00000a1    adrp    x1, b3000 <_etext+0x3f9c>
   9d800:   d00000a0    adrp    x0, b3000 <_etext+0x3f9c>
   9d804:   91012021    add x1, x1, #0x48
   9d808:   91020000    add x0, x0, #0x80
   9d80c:   52800bc2    mov w2, #0x5e
   9d810:   97fffcac    bl  9cac0 <assertion_failed>
   9d814:   94002b97    bl  a8670 <EnterCritical>
   9d818:   f94002d3    ldr x19, [x22]
   9d81c:   b5fffd53    cbnz    x19, 9d7c4 <CDeviceNameService::RemoveDevice(char const*, bool)+0x34>
   9d820:   b9400ac0    ldr w0, [x22, #8]
   9d824:   340003e0    cbz w0, 9d8a0 <CDeviceNameService::RemoveDevice(char const*, bool)+0x110>
   9d828:   a94153f3    ldp x19, x20, [sp, #16]
   9d82c:   a9425bf5    ldp x21, x22, [sp, #32]
   9d830:   f9401bf7    ldr x23, [sp, #48]
   9d834:   a8c47bfd    ldp x29, x30, [sp], #64
   9d838:   14002bbe    b   a8730 <LeaveCritical>
   9d83c:   f9400260    ldr x0, [x19]
   9d840:   b40001d5    cbz x21, 9d878 <CDeviceNameService::RemoveDevice(char const*, bool)+0xe8>
   9d844:   f90002a0    str x0, [x21]
   9d848:   b9400ac0    ldr w0, [x22, #8]
   9d84c:   35000260    cbnz    w0, 9d898 <CDeviceNameService::RemoveDevice(char const*, bool)+0x108>
   9d850:   f9400660    ldr x0, [x19, #8]
   9d854:   b4000040    cbz x0, 9d85c <CDeviceNameService::RemoveDevice(char const*, bool)+0xcc>
   9d858:   940027f6    bl  a7830 <operator delete[](void*)>
   9d85c:   a9425bf5    ldp x21, x22, [sp, #32]
   9d860:   aa1303e0    mov x0, x19
   9d864:   d2800401    mov x1, #0x20
   9d868:   a94153f3    ldp x19, x20, [sp, #16]
   9d86c:   f9401bf7    ldr x23, [sp, #48]
   9d870:   a8c47bfd    ldp x29, x30, [sp], #64
   9d874:   140027fb    b   a7860 <operator delete(void*, unsigned long)>
   9d878:   f90002c0    str x0, [x22]
   9d87c:   17fffff3    b   9d848 <CDeviceNameService::RemoveDevice(char const*, bool)+0xb8>
   9d880:   d00000a1    adrp    x1, b3000 <_etext+0x3f9c>
   9d884:   f0000080    adrp    x0, b0000 <_etext+0xf9c>
   9d888:   91012021    add x1, x1, #0x48
   9d88c:   91128000    add x0, x0, #0x4a0
   9d890:   52800ac2    mov w2, #0x56
   9d894:   97fffc8b    bl  9cac0 <assertion_failed>
   9d898:   94002ba6    bl  a8730 <LeaveCritical>
   9d89c:   17ffffed    b   9d850 <CDeviceNameService::RemoveDevice(char const*, bool)+0xc0>
   9d8a0:   a94153f3    ldp x19, x20, [sp, #16]
   9d8a4:   a9425bf5    ldp x21, x22, [sp, #32]
   9d8a8:   f9401bf7    ldr x23, [sp, #48]
   9d8ac:   a8c47bfd    ldp x29, x30, [sp], #64
   9d8b0:   d65f03c0    ret
   9d8b4:   d503201f    nop
   9d8b8:   d503201f    nop
   9d8bc:   d503201f    nop

000000000009d8c0 <CDeviceNameService::GetDevice(char const*, bool)>:
   9d8c0:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   9d8c4:   910003fd    mov x29, sp
   9d8c8:   a90153f3    stp x19, x20, [sp, #16]
   9d8cc:   a9025bf5    stp x21, x22, [sp, #32]
   9d8d0:   b40004a1    cbz x1, 9d964 <CDeviceNameService::GetDevice(char const*, bool)+0xa4>
   9d8d4:   aa0003f5    mov x21, x0
   9d8d8:   aa0103f4    mov x20, x1
   9d8dc:   b9400800    ldr w0, [x0, #8]
   9d8e0:   12001c56    and w22, w2, #0xff
   9d8e4:   35000280    cbnz    w0, 9d934 <CDeviceNameService::GetDevice(char const*, bool)+0x74>
   9d8e8:   f94002b3    ldr x19, [x21]
   9d8ec:   b5000153    cbnz    x19, 9d914 <CDeviceNameService::GetDevice(char const*, bool)+0x54>
   9d8f0:   14000016    b   9d948 <CDeviceNameService::GetDevice(char const*, bool)+0x88>
   9d8f4:   aa1403e0    mov x0, x20
   9d8f8:   9400239e    bl  a6770 <strcmp>
   9d8fc:   35000080    cbnz    w0, 9d90c <CDeviceNameService::GetDevice(char const*, bool)+0x4c>
   9d900:   39406261    ldrb    w1, [x19, #24]
   9d904:   6b16003f    cmp w1, w22
   9d908:   540003a0    b.eq    9d97c <CDeviceNameService::GetDevice(char const*, bool)+0xbc>
   9d90c:   f9400273    ldr x19, [x19]
   9d910:   b4000193    cbz x19, 9d940 <CDeviceNameService::GetDevice(char const*, bool)+0x80>
   9d914:   f9400661    ldr x1, [x19, #8]
   9d918:   b5fffee1    cbnz    x1, 9d8f4 <CDeviceNameService::GetDevice(char const*, bool)+0x34>
   9d91c:   d00000a1    adrp    x1, b3000 <_etext+0x3f9c>
   9d920:   d00000a0    adrp    x0, b3000 <_etext+0x3f9c>
   9d924:   91012021    add x1, x1, #0x48
   9d928:   91020000    add x0, x0, #0x80
   9d92c:   52801242    mov w2, #0x92
   9d930:   97fffc64    bl  9cac0 <assertion_failed>
   9d934:   94002b4f    bl  a8670 <EnterCritical>
   9d938:   f94002b3    ldr x19, [x21]
   9d93c:   b5fffed3    cbnz    x19, 9d914 <CDeviceNameService::GetDevice(char const*, bool)+0x54>
   9d940:   b9400aa0    ldr w0, [x21, #8]
   9d944:   350000c0    cbnz    w0, 9d95c <CDeviceNameService::GetDevice(char const*, bool)+0x9c>
   9d948:   d2800000    mov x0, #0x0
   9d94c:   a94153f3    ldp x19, x20, [sp, #16]
   9d950:   a9425bf5    ldp x21, x22, [sp, #32]
   9d954:   a8c47bfd    ldp x29, x30, [sp], #64
   9d958:   d65f03c0    ret
   9d95c:   94002b75    bl  a8730 <LeaveCritical>
   9d960:   17fffffa    b   9d948 <CDeviceNameService::GetDevice(char const*, bool)+0x88>
   9d964:   d00000a1    adrp    x1, b3000 <_etext+0x3f9c>
   9d968:   f0000080    adrp    x0, b0000 <_etext+0xf9c>
   9d96c:   91012021    add x1, x1, #0x48
   9d970:   91128000    add x0, x0, #0x4a0
   9d974:   52801162    mov w2, #0x8b
   9d978:   97fffc52    bl  9cac0 <assertion_failed>
   9d97c:   b9400aa1    ldr w1, [x21, #8]
   9d980:   f9400a60    ldr x0, [x19, #16]
   9d984:   35000101    cbnz    w1, 9d9a4 <CDeviceNameService::GetDevice(char const*, bool)+0xe4>
   9d988:   b5fffe20    cbnz    x0, 9d94c <CDeviceNameService::GetDevice(char const*, bool)+0x8c>
   9d98c:   d00000a1    adrp    x1, b3000 <_etext+0x3f9c>
   9d990:   d00000a0    adrp    x0, b3000 <_etext+0x3f9c>
   9d994:   91012021    add x1, x1, #0x48
   9d998:   91026000    add x0, x0, #0x98
   9d99c:   52801342    mov w2, #0x9a
   9d9a0:   97fffc48    bl  9cac0 <assertion_failed>
   9d9a4:   f9001fe0    str x0, [sp, #56]
   9d9a8:   94002b62    bl  a8730 <LeaveCritical>
   9d9ac:   f9401fe0    ldr x0, [sp, #56]
   9d9b0:   b5fffce0    cbnz    x0, 9d94c <CDeviceNameService::GetDevice(char const*, bool)+0x8c>
   9d9b4:   17fffff6    b   9d98c <CDeviceNameService::GetDevice(char const*, bool)+0xcc>
   9d9b8:   d503201f    nop
   9d9bc:   d503201f    nop

000000000009d9c0 <CDeviceNameService::EnumerateDevices(bool (*)(CDevice*, char const*, bool, void*), void*)>:
   9d9c0:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   9d9c4:   910003fd    mov x29, sp
   9d9c8:   a90153f3    stp x19, x20, [sp, #16]
   9d9cc:   aa0103f4    mov x20, x1
   9d9d0:   a9025bf5    stp x21, x22, [sp, #32]
   9d9d4:   aa0203f5    mov x21, x2
   9d9d8:   f9001bf7    str x23, [sp, #48]
   9d9dc:   aa0003f7    mov x23, x0
   9d9e0:   b9400800    ldr w0, [x0, #8]
   9d9e4:   350002a0    cbnz    w0, 9da38 <CDeviceNameService::EnumerateDevices(bool (*)(CDevice*, char const*, bool, void*), void*)+0x78>
   9d9e8:   f94002f3    ldr x19, [x23]
   9d9ec:   b5000093    cbnz    x19, 9d9fc <CDeviceNameService::EnumerateDevices(bool (*)(CDevice*, char const*, bool, void*), void*)+0x3c>
   9d9f0:   14000018    b   9da50 <CDeviceNameService::EnumerateDevices(bool (*)(CDevice*, char const*, bool, void*), void*)+0x90>
   9d9f4:   f9400273    ldr x19, [x19]
   9d9f8:   b4000293    cbz x19, 9da48 <CDeviceNameService::EnumerateDevices(bool (*)(CDevice*, char const*, bool, void*), void*)+0x88>
   9d9fc:   a9408261    ldp x1, x0, [x19, #8]
   9da00:   aa1503e3    mov x3, x21
   9da04:   39406262    ldrb    w2, [x19, #24]
   9da08:   d63f0280    blr x20
   9da0c:   12001c16    and w22, w0, #0xff
   9da10:   3707ff20    tbnz    w0, #0, 9d9f4 <CDeviceNameService::EnumerateDevices(bool (*)(CDevice*, char const*, bool, void*), void*)+0x34>
   9da14:   b9400ae0    ldr w0, [x23, #8]
   9da18:   34000040    cbz w0, 9da20 <CDeviceNameService::EnumerateDevices(bool (*)(CDevice*, char const*, bool, void*), void*)+0x60>
   9da1c:   94002b45    bl  a8730 <LeaveCritical>
   9da20:   a94153f3    ldp x19, x20, [sp, #16]
   9da24:   2a1603e0    mov w0, w22
   9da28:   a9425bf5    ldp x21, x22, [sp, #32]
   9da2c:   f9401bf7    ldr x23, [sp, #48]
   9da30:   a8c47bfd    ldp x29, x30, [sp], #64
   9da34:   d65f03c0    ret
   9da38:   94002b0e    bl  a8670 <EnterCritical>
   9da3c:   f94002f3    ldr x19, [x23]
   9da40:   b5fffdf3    cbnz    x19, 9d9fc <CDeviceNameService::EnumerateDevices(bool (*)(CDevice*, char const*, bool, void*), void*)+0x3c>
   9da44:   d503201f    nop
   9da48:   52800036    mov w22, #0x1
   9da4c:   17fffff2    b   9da14 <CDeviceNameService::EnumerateDevices(bool (*)(CDevice*, char const*, bool, void*), void*)+0x54>
   9da50:   52800036    mov w22, #0x1
   9da54:   17fffff3    b   9da20 <CDeviceNameService::EnumerateDevices(bool (*)(CDevice*, char const*, bool, void*), void*)+0x60>
   9da58:   d503201f    nop
   9da5c:   d503201f    nop

000000000009da60 <CDeviceNameService::Get()>:
   9da60:   b00000e0    adrp    x0, ba000 <font_data+0x1080>
   9da64:   f944ac00    ldr x0, [x0, #2392]
   9da68:   b4000040    cbz x0, 9da70 <CDeviceNameService::Get()+0x10>
   9da6c:   d65f03c0    ret
   9da70:   d00000a1    adrp    x1, b3000 <_etext+0x3f9c>
   9da74:   d00000a0    adrp    x0, b3000 <_etext+0x3f9c>
   9da78:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   9da7c:   91012021    add x1, x1, #0x48
   9da80:   910003fd    mov x29, sp
   9da84:   9102a000    add x0, x0, #0xa8
   9da88:   52801ca2    mov w2, #0xe5
   9da8c:   97fffc0d    bl  9cac0 <assertion_failed>

000000000009da90 <CDeviceNameService::AddDevice(char const*, unsigned int, CDevice*, bool)>:
   9da90:   a9ba7bfd    stp x29, x30, [sp, #-96]!
   9da94:   910003fd    mov x29, sp
   9da98:   a90153f3    stp x19, x20, [sp, #16]
   9da9c:   aa0003f3    mov x19, x0
   9daa0:   910103e0    add x0, sp, #0x40
   9daa4:   aa0303f4    mov x20, x3
   9daa8:   a9025bf5    stp x21, x22, [sp, #32]
   9daac:   aa0103f5    mov x21, x1
   9dab0:   2a0203f6    mov w22, w2
   9dab4:   f9001bf7    str x23, [sp, #48]
   9dab8:   12001c97    and w23, w4, #0xff
   9dabc:   94001885    bl  a3cd0 <CString::CString()>
   9dac0:   f0000081    adrp    x1, b0000 <_etext+0xf9c>
   9dac4:   2a1603e3    mov w3, w22
   9dac8:   aa1503e2    mov x2, x21
   9dacc:   910103e0    add x0, sp, #0x40
   9dad0:   9114e021    add x1, x1, #0x538
   9dad4:   94001e8b    bl  a5500 <CString::Format(char const*, ...)>
   9dad8:   910103e0    add x0, sp, #0x40
   9dadc:   940018c1    bl  a3de0 <CString::operator char const*() const>
   9dae0:   2a1703e3    mov w3, w23
   9dae4:   aa1403e2    mov x2, x20
   9dae8:   aa0003e1    mov x1, x0
   9daec:   aa1303e0    mov x0, x19
   9daf0:   97fffeec    bl  9d6a0 <CDeviceNameService::AddDevice(char const*, CDevice*, bool)>
   9daf4:   910103e0    add x0, sp, #0x40
   9daf8:   9400183a    bl  a3be0 <CString::~CString()>
   9dafc:   a94153f3    ldp x19, x20, [sp, #16]
   9db00:   a9425bf5    ldp x21, x22, [sp, #32]
   9db04:   f9401bf7    ldr x23, [sp, #48]
   9db08:   a8c67bfd    ldp x29, x30, [sp], #96
   9db0c:   d65f03c0    ret

000000000009db10 <CDeviceNameService::RemoveDevice(char const*, unsigned int, bool)>:
   9db10:   a9bb7bfd    stp x29, x30, [sp, #-80]!
   9db14:   910003fd    mov x29, sp
   9db18:   a90153f3    stp x19, x20, [sp, #16]
   9db1c:   aa0003f3    mov x19, x0
   9db20:   9100c3e0    add x0, sp, #0x30
   9db24:   aa0103f4    mov x20, x1
   9db28:   a9025bf5    stp x21, x22, [sp, #32]
   9db2c:   2a0203f5    mov w21, w2
   9db30:   12001c76    and w22, w3, #0xff
   9db34:   94001867    bl  a3cd0 <CString::CString()>
   9db38:   f0000081    adrp    x1, b0000 <_etext+0xf9c>
   9db3c:   2a1503e3    mov w3, w21
   9db40:   aa1403e2    mov x2, x20
   9db44:   9100c3e0    add x0, sp, #0x30
   9db48:   9114e021    add x1, x1, #0x538
   9db4c:   94001e6d    bl  a5500 <CString::Format(char const*, ...)>
   9db50:   9100c3e0    add x0, sp, #0x30
   9db54:   940018a3    bl  a3de0 <CString::operator char const*() const>
   9db58:   2a1603e2    mov w2, w22
   9db5c:   aa0003e1    mov x1, x0
   9db60:   aa1303e0    mov x0, x19
   9db64:   97ffff0b    bl  9d790 <CDeviceNameService::RemoveDevice(char const*, bool)>
   9db68:   9100c3e0    add x0, sp, #0x30
   9db6c:   9400181d    bl  a3be0 <CString::~CString()>
   9db70:   a94153f3    ldp x19, x20, [sp, #16]
   9db74:   a9425bf5    ldp x21, x22, [sp, #32]
   9db78:   a8c57bfd    ldp x29, x30, [sp], #80
   9db7c:   d65f03c0    ret

000000000009db80 <CDeviceNameService::GetDevice(char const*, unsigned int, bool)>:
   9db80:   a9bb7bfd    stp x29, x30, [sp, #-80]!
   9db84:   910003fd    mov x29, sp
   9db88:   a90153f3    stp x19, x20, [sp, #16]
   9db8c:   aa0003f3    mov x19, x0
   9db90:   9100c3e0    add x0, sp, #0x30
   9db94:   aa0103f4    mov x20, x1
   9db98:   a9025bf5    stp x21, x22, [sp, #32]
   9db9c:   2a0203f5    mov w21, w2
   9dba0:   12001c76    and w22, w3, #0xff
   9dba4:   9400184b    bl  a3cd0 <CString::CString()>
   9dba8:   f0000081    adrp    x1, b0000 <_etext+0xf9c>
   9dbac:   2a1503e3    mov w3, w21
   9dbb0:   aa1403e2    mov x2, x20
   9dbb4:   9100c3e0    add x0, sp, #0x30
   9dbb8:   9114e021    add x1, x1, #0x538
   9dbbc:   94001e51    bl  a5500 <CString::Format(char const*, ...)>
   9dbc0:   9100c3e0    add x0, sp, #0x30
   9dbc4:   94001887    bl  a3de0 <CString::operator char const*() const>
   9dbc8:   2a1603e2    mov w2, w22
   9dbcc:   aa0003e1    mov x1, x0
   9dbd0:   aa1303e0    mov x0, x19
   9dbd4:   97ffff3b    bl  9d8c0 <CDeviceNameService::GetDevice(char const*, bool)>
   9dbd8:   aa0003f3    mov x19, x0
   9dbdc:   9100c3e0    add x0, sp, #0x30
   9dbe0:   94001800    bl  a3be0 <CString::~CString()>
   9dbe4:   a9425bf5    ldp x21, x22, [sp, #32]
   9dbe8:   aa1303e0    mov x0, x19
   9dbec:   a94153f3    ldp x19, x20, [sp, #16]
   9dbf0:   a8c57bfd    ldp x29, x30, [sp], #80
   9dbf4:   d65f03c0    ret
   9dbf8:   d503201f    nop
   9dbfc:   d503201f    nop

000000000009dc00 <CDeviceNameService::ListDevices(CDevice*)>:
   9dc00:   a9b87bfd    stp x29, x30, [sp, #-128]!
   9dc04:   910003fd    mov x29, sp
   9dc08:   a90153f3    stp x19, x20, [sp, #16]
   9dc0c:   b40008c1    cbz x1, 9dd24 <CDeviceNameService::ListDevices(CDevice*)+0x124>
   9dc10:   f9400013    ldr x19, [x0]
   9dc14:   b4000833    cbz x19, 9dd18 <CDeviceNameService::ListDevices(CDevice*)+0x118>
   9dc18:   52800014    mov w20, #0x0
   9dc1c:   a9025bf5    stp x21, x22, [sp, #32]
   9dc20:   aa0103f6    mov x22, x1
   9dc24:   a90363f7    stp x23, x24, [sp, #48]
   9dc28:   d00000b7    adrp    x23, b3000 <_etext+0x3f9c>
   9dc2c:   910322f7    add x23, x23, #0xc8
   9dc30:   52800158    mov w24, #0xa
   9dc34:   a9046bf9    stp x25, x26, [sp, #64]
   9dc38:   52800c7a    mov w26, #0x63
   9dc3c:   52800419    mov w25, #0x20
   9dc40:   a90573fb    stp x27, x28, [sp, #80]
   9dc44:   14000018    b   9dca4 <CDeviceNameService::ListDevices(CDevice*)+0xa4>
   9dc48:   39406262    ldrb    w2, [x19, #24]
   9dc4c:   11000694    add w20, w20, #0x1
   9dc50:   aa1703e1    mov x1, x23
   9dc54:   7200069b    ands    w27, w20, #0x3
   9dc58:   910183e0    add x0, sp, #0x60
   9dc5c:   1a981324    csel    w4, w25, w24, ne
   9dc60:   4b020342    sub w2, w26, w2
   9dc64:   94001e27    bl  a5500 <CString::Format(char const*, ...)>
   9dc68:   f94002c1    ldr x1, [x22]
   9dc6c:   910183e0    add x0, sp, #0x60
   9dc70:   f9400c3c    ldr x28, [x1, #24]
   9dc74:   9400185b    bl  a3de0 <CString::operator char const*() const>
   9dc78:   aa0003f5    mov x21, x0
   9dc7c:   910183e0    add x0, sp, #0x60
   9dc80:   940018a4    bl  a3f10 <CString::GetLength() const>
   9dc84:   aa0003e2    mov x2, x0
   9dc88:   aa1503e1    mov x1, x21
   9dc8c:   aa1603e0    mov x0, x22
   9dc90:   d63f0380    blr x28
   9dc94:   f9400273    ldr x19, [x19]
   9dc98:   910183e0    add x0, sp, #0x60
   9dc9c:   940017d1    bl  a3be0 <CString::~CString()>
   9dca0:   b4000173    cbz x19, 9dccc <CDeviceNameService::ListDevices(CDevice*)+0xcc>
   9dca4:   910183e0    add x0, sp, #0x60
   9dca8:   9400180a    bl  a3cd0 <CString::CString()>
   9dcac:   f9400663    ldr x3, [x19, #8]
   9dcb0:   b5fffcc3    cbnz    x3, 9dc48 <CDeviceNameService::ListDevices(CDevice*)+0x48>
   9dcb4:   d00000a1    adrp    x1, b3000 <_etext+0x3f9c>
   9dcb8:   d00000a0    adrp    x0, b3000 <_etext+0x3f9c>
   9dcbc:   91012021    add x1, x1, #0x48
   9dcc0:   91020000    add x0, x0, #0x80
   9dcc4:   52801a42    mov w2, #0xd2
   9dcc8:   97fffb7e    bl  9cac0 <assertion_failed>
   9dccc:   340001fb    cbz w27, 9dd08 <CDeviceNameService::ListDevices(CDevice*)+0x108>
   9dcd0:   f94002c3    ldr x3, [x22]
   9dcd4:   b00000a1    adrp    x1, b2000 <_etext+0x2f9c>
   9dcd8:   aa1603e0    mov x0, x22
   9dcdc:   a94153f3    ldp x19, x20, [sp, #16]
   9dce0:   912c4021    add x1, x1, #0xb10
   9dce4:   d2800022    mov x2, #0x1
   9dce8:   a9425bf5    ldp x21, x22, [sp, #32]
   9dcec:   a94363f7    ldp x23, x24, [sp, #48]
   9dcf0:   a9446bf9    ldp x25, x26, [sp, #64]
   9dcf4:   a94573fb    ldp x27, x28, [sp, #80]
   9dcf8:   f9400c63    ldr x3, [x3, #24]
   9dcfc:   a8c87bfd    ldp x29, x30, [sp], #128
   9dd00:   aa0303f0    mov x16, x3
   9dd04:   d61f0200    br  x16
   9dd08:   a9425bf5    ldp x21, x22, [sp, #32]
   9dd0c:   a94363f7    ldp x23, x24, [sp, #48]
   9dd10:   a9446bf9    ldp x25, x26, [sp, #64]
   9dd14:   a94573fb    ldp x27, x28, [sp, #80]
   9dd18:   a94153f3    ldp x19, x20, [sp, #16]
   9dd1c:   a8c87bfd    ldp x29, x30, [sp], #128
   9dd20:   d65f03c0    ret
   9dd24:   d00000a1    adrp    x1, b3000 <_etext+0x3f9c>
   9dd28:   d00000a0    adrp    x0, b3000 <_etext+0x3f9c>
   9dd2c:   a9025bf5    stp x21, x22, [sp, #32]
   9dd30:   91012021    add x1, x1, #0x48
   9dd34:   9102e000    add x0, x0, #0xb8
   9dd38:   52801922    mov w2, #0xc9
   9dd3c:   a90363f7    stp x23, x24, [sp, #48]
   9dd40:   a9046bf9    stp x25, x26, [sp, #64]
   9dd44:   a90573fb    stp x27, x28, [sp, #80]
   9dd48:   97fffb5e    bl  9cac0 <assertion_failed>
   9dd4c:   00000000    udf #0

000000000009dd50 <CGPIOPin::~CGPIOPin()>:
   9dd50:   d65f03c0    ret
   9dd54:   d503201f    nop
   9dd58:   d503201f    nop
   9dd5c:   d503201f    nop

000000000009dd60 <CGPIOPin::~CGPIOPin()>:
   9dd60:   d2800901    mov x1, #0x48
   9dd64:   140026bf    b   a7860 <operator delete(void*, unsigned long)>
   9dd68:   d503201f    nop
   9dd6c:   d503201f    nop

000000000009dd70 <CGPIOPin::CGPIOPin()>:
   9dd70:   528006c4    mov w4, #0x36
   9dd74:   52800143    mov w3, #0xa
   9dd78:   a9027c1f    stp xzr, xzr, [x0, #32]
   9dd7c:   528000c2    mov w2, #0x6
   9dd80:   d00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9dd84:   91362021    add x1, x1, #0xd88
   9dd88:   b9000804    str w4, [x0, #8]
   9dd8c:   f9000001    str x1, [x0]
   9dd90:   b9001403    str w3, [x0, #20]
   9dd94:   29078802    stp w2, w2, [x0, #60]
   9dd98:   d65f03c0    ret
   9dd9c:   d503201f    nop

000000000009dda0 <CGPIOPin::AssignPin(unsigned int)>:
   9dda0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9dda4:   910003fd    mov x29, sp
   9dda8:   a90153f3    stp x19, x20, [sp, #16]
   9ddac:   aa0003f4    mov x20, x0
   9ddb0:   b9400800    ldr w0, [x0, #8]
   9ddb4:   7100d81f    cmp w0, #0x36
   9ddb8:   54000321    b.ne    9de1c <CGPIOPin::AssignPin(unsigned int)+0x7c>
   9ddbc:   7100d43f    cmp w1, #0x35
   9ddc0:   b9000a81    str w1, [x20, #8]
   9ddc4:   2a0103f3    mov w19, w1
   9ddc8:   54000128    b.hi    9ddec <CGPIOPin::AssignPin(unsigned int)+0x4c>
   9ddcc:   53057e61    lsr w1, w19, #5
   9ddd0:   52800020    mov w0, #0x1
   9ddd4:   1ad32000    lsl w0, w0, w19
   9ddd8:   531e7421    lsl w1, w1, #2
   9dddc:   29018281    stp w1, w0, [x20, #12]
   9dde0:   a94153f3    ldp x19, x20, [sp, #16]
   9dde4:   a8c27bfd    ldp x29, x30, [sp], #32
   9dde8:   d65f03c0    ret
   9ddec:   94000b1d    bl  a0a60 <CMachineInfo::Get()>
   9ddf0:   2a1303e1    mov w1, w19
   9ddf4:   940009db    bl  a0560 <CMachineInfo::GetGPIOPin(TGPIOVirtualPin) const>
   9ddf8:   7100d41f    cmp w0, #0x35
   9ddfc:   b9000a80    str w0, [x20, #8]
   9de00:   2a0003f3    mov w19, w0
   9de04:   54fffe49    b.ls    9ddcc <CGPIOPin::AssignPin(unsigned int)+0x2c>
   9de08:   d00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9de0c:   91368021    add x1, x1, #0xda0
   9de10:   9100a020    add x0, x1, #0x28
   9de14:   528008e2    mov w2, #0x47
   9de18:   97fffb2a    bl  9cac0 <assertion_failed>
   9de1c:   d00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9de20:   91368021    add x1, x1, #0xda0
   9de24:   91004020    add x0, x1, #0x10
   9de28:   52800802    mov w2, #0x40
   9de2c:   97fffb25    bl  9cac0 <assertion_failed>

000000000009de30 <CGPIOPin::Write(unsigned int)>:
   9de30:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   9de34:   910003fd    mov x29, sp
   9de38:   b9400802    ldr w2, [x0, #8]
   9de3c:   7100d45f    cmp w2, #0x35
   9de40:   54000248    b.hi    9de88 <CGPIOPin::Write(unsigned int)+0x58>
   9de44:   b9401402    ldr w2, [x0, #20]
   9de48:   71000c5f    cmp w2, #0x3
   9de4c:   5400028c    b.gt    9de9c <CGPIOPin::Write(unsigned int)+0x6c>
   9de50:   7100043f    cmp w1, #0x1
   9de54:   540002e8    b.hi    9deb0 <CGPIOPin::Write(unsigned int)+0x80>
   9de58:   b9400c03    ldr w3, [x0, #12]
   9de5c:   52800502    mov w2, #0x28
   9de60:   72bfc402    movk    w2, #0xfe20, lsl #16
   9de64:   b9001801    str w1, [x0, #24]
   9de68:   7100003f    cmp w1, #0x0
   9de6c:   51003044    sub w4, w2, #0xc
   9de70:   b9401000    ldr w0, [x0, #16]
   9de74:   1a840042    csel    w2, w2, w4, eq
   9de78:   0b030042    add w2, w2, w3
   9de7c:   b9000040    str w0, [x2]
   9de80:   a8c17bfd    ldp x29, x30, [sp], #16
   9de84:   d65f03c0    ret
   9de88:   d00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9de8c:   91368021    add x1, x1, #0xda0
   9de90:   9100a020    add x0, x1, #0x28
   9de94:   52801222    mov w2, #0x91
   9de98:   97fffb0a    bl  9cac0 <assertion_failed>
   9de9c:   d00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9dea0:   91368021    add x1, x1, #0xda0
   9dea4:   91010020    add x0, x1, #0x40
   9dea8:   52801282    mov w2, #0x94
   9deac:   97fffb05    bl  9cac0 <assertion_failed>
   9deb0:   d00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9deb4:   91368021    add x1, x1, #0xda0
   9deb8:   9101a020    add x0, x1, #0x68
   9debc:   52801302    mov w2, #0x98
   9dec0:   97fffb00    bl  9cac0 <assertion_failed>
   9dec4:   d503201f    nop
   9dec8:   d503201f    nop
   9decc:   d503201f    nop

000000000009ded0 <CGPIOPin::Read() const>:
   9ded0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   9ded4:   910003fd    mov x29, sp
   9ded8:   b9400801    ldr w1, [x0, #8]
   9dedc:   7100d43f    cmp w1, #0x35
   9dee0:   540001e8    b.hi    9df1c <CGPIOPin::Read() const+0x4c>
   9dee4:   b9401401    ldr w1, [x0, #20]
   9dee8:   7100003f    cmp w1, #0x0
   9deec:   51000821    sub w1, w1, #0x2
   9def0:   7a411820    ccmp    w1, #0x1, #0x0, ne
   9def4:   540001e8    b.hi    9df30 <CGPIOPin::Read() const+0x60>
   9def8:   29418801    ldp w1, w2, [x0, #12]
   9defc:   52800683    mov w3, #0x34
   9df00:   72bfc403    movk    w3, #0xfe20, lsl #16
   9df04:   a8c17bfd    ldp x29, x30, [sp], #16
   9df08:   0b030020    add w0, w1, w3
   9df0c:   b9400000    ldr w0, [x0]
   9df10:   6a02001f    tst w0, w2
   9df14:   1a9f07e0    cset    w0, ne
   9df18:   d65f03c0    ret
   9df1c:   d00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9df20:   91368021    add x1, x1, #0xda0
   9df24:   9100a020    add x0, x1, #0x28
   9df28:   52801482    mov w2, #0xa4
   9df2c:   97fffae5    bl  9cac0 <assertion_failed>
   9df30:   d00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9df34:   91368021    add x1, x1, #0xda0
   9df38:   91022020    add x0, x1, #0x88
   9df3c:   528014c2    mov w2, #0xa6
   9df40:   97fffae0    bl  9cac0 <assertion_failed>
   9df44:   d503201f    nop
   9df48:   d503201f    nop
   9df4c:   d503201f    nop

000000000009df50 <CGPIOPin::Invert()>:
   9df50:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   9df54:   910003fd    mov x29, sp
   9df58:   b9401401    ldr w1, [x0, #20]
   9df5c:   7100043f    cmp w1, #0x1
   9df60:   54000281    b.ne    9dfb0 <CGPIOPin::Invert()+0x60>
   9df64:   b9400801    ldr w1, [x0, #8]
   9df68:   b9401802    ldr w2, [x0, #24]
   9df6c:   7100d43f    cmp w1, #0x35
   9df70:   52000043    eor w3, w2, #0x1
   9df74:   54000288    b.hi    9dfc4 <CGPIOPin::Invert()+0x74>
   9df78:   7100047f    cmp w3, #0x1
   9df7c:   540002e8    b.hi    9dfd8 <CGPIOPin::Invert()+0x88>
   9df80:   b9400c04    ldr w4, [x0, #12]
   9df84:   52800501    mov w1, #0x28
   9df88:   72bfc401    movk    w1, #0xfe20, lsl #16
   9df8c:   b9001803    str w3, [x0, #24]
   9df90:   7100045f    cmp w2, #0x1
   9df94:   51003022    sub w2, w1, #0xc
   9df98:   b9401000    ldr w0, [x0, #16]
   9df9c:   1a820021    csel    w1, w1, w2, eq
   9dfa0:   0b040021    add w1, w1, w4
   9dfa4:   b9000020    str w0, [x1]
   9dfa8:   a8c17bfd    ldp x29, x30, [sp], #16
   9dfac:   d65f03c0    ret
   9dfb0:   d00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9dfb4:   91368021    add x1, x1, #0xda0
   9dfb8:   9103a020    add x0, x1, #0xe8
   9dfbc:   528016a2    mov w2, #0xb5
   9dfc0:   97fffac0    bl  9cac0 <assertion_failed>
   9dfc4:   d00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9dfc8:   91368021    add x1, x1, #0xda0
   9dfcc:   9100a020    add x0, x1, #0x28
   9dfd0:   52801222    mov w2, #0x91
   9dfd4:   97fffabb    bl  9cac0 <assertion_failed>
   9dfd8:   d00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9dfdc:   91368021    add x1, x1, #0xda0
   9dfe0:   9101a020    add x0, x1, #0x68
   9dfe4:   52801302    mov w2, #0x98
   9dfe8:   97fffab6    bl  9cac0 <assertion_failed>
   9dfec:   d503201f    nop

000000000009dff0 <CGPIOPin::ConnectInterrupt(void (*)(void*), void*, bool)>:
   9dff0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   9dff4:   aa0003e4    mov x4, x0
   9dff8:   910003fd    mov x29, sp
   9dffc:   b9401400    ldr w0, [x0, #20]
   9e000:   7100001f    cmp w0, #0x0
   9e004:   51000800    sub w0, w0, #0x2
   9e008:   7a411800    ccmp    w0, #0x1, #0x0, ne
   9e00c:   54000568    b.hi    9e0b8 <CGPIOPin::ConnectInterrupt(void (*)(void*), void*, bool)+0xc8>
   9e010:   b9403c80    ldr w0, [x4, #60]
   9e014:   7100181f    cmp w0, #0x6
   9e018:   540001e1    b.ne    9e054 <CGPIOPin::ConnectInterrupt(void (*)(void*), void*, bool)+0x64>
   9e01c:   b9404080    ldr w0, [x4, #64]
   9e020:   7100181f    cmp w0, #0x6
   9e024:   54000221    b.ne    9e068 <CGPIOPin::ConnectInterrupt(void (*)(void*), void*, bool)+0x78>
   9e028:   b40002a1    cbz x1, 9e07c <CGPIOPin::ConnectInterrupt(void (*)(void*), void*, bool)+0x8c>
   9e02c:   f9401480    ldr x0, [x4, #40]
   9e030:   b5000300    cbnz    x0, 9e090 <CGPIOPin::ConnectInterrupt(void (*)(void*), void*, bool)+0xa0>
   9e034:   12001c63    and w3, w3, #0xff
   9e038:   f9401080    ldr x0, [x4, #32]
   9e03c:   a9028881    stp x1, x2, [x4, #40]
   9e040:   3900e083    strb    w3, [x4, #56]
   9e044:   b4000300    cbz x0, 9e0a4 <CGPIOPin::ConnectInterrupt(void (*)(void*), void*, bool)+0xb4>
   9e048:   a8c17bfd    ldp x29, x30, [sp], #16
   9e04c:   aa0403e1    mov x1, x4
   9e050:   14003b90    b   ace90 <CGPIOManager::ConnectInterrupt(CGPIOPin*)>
   9e054:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e058:   91368021    add x1, x1, #0xda0
   9e05c:   91042020    add x0, x1, #0x108
   9e060:   52801802    mov w2, #0xc0
   9e064:   97fffa97    bl  9cac0 <assertion_failed>
   9e068:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e06c:   91368021    add x1, x1, #0xda0
   9e070:   9104c020    add x0, x1, #0x130
   9e074:   52801822    mov w2, #0xc1
   9e078:   97fffa92    bl  9cac0 <assertion_failed>
   9e07c:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e080:   91368021    add x1, x1, #0xda0
   9e084:   91056020    add x0, x1, #0x158
   9e088:   52801862    mov w2, #0xc3
   9e08c:   97fffa8d    bl  9cac0 <assertion_failed>
   9e090:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e094:   91368021    add x1, x1, #0xda0
   9e098:   9105a020    add x0, x1, #0x168
   9e09c:   52801882    mov w2, #0xc4
   9e0a0:   97fffa88    bl  9cac0 <assertion_failed>
   9e0a4:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e0a8:   91368021    add x1, x1, #0xda0
   9e0ac:   9105e020    add x0, x1, #0x178
   9e0b0:   52801962    mov w2, #0xcb
   9e0b4:   97fffa83    bl  9cac0 <assertion_failed>
   9e0b8:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e0bc:   91368021    add x1, x1, #0xda0
   9e0c0:   91022020    add x0, x1, #0x88
   9e0c4:   52801782    mov w2, #0xbc
   9e0c8:   97fffa7e    bl  9cac0 <assertion_failed>
   9e0cc:   d503201f    nop

000000000009e0d0 <CGPIOPin::DisconnectInterrupt()>:
   9e0d0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   9e0d4:   aa0003e1    mov x1, x0
   9e0d8:   910003fd    mov x29, sp
   9e0dc:   b9401400    ldr w0, [x0, #20]
   9e0e0:   7100001f    cmp w0, #0x0
   9e0e4:   51000800    sub w0, w0, #0x2
   9e0e8:   7a411800    ccmp    w0, #0x1, #0x0, ne
   9e0ec:   54000448    b.hi    9e174 <CGPIOPin::DisconnectInterrupt()+0xa4>
   9e0f0:   b9403c20    ldr w0, [x1, #60]
   9e0f4:   7100181f    cmp w0, #0x6
   9e0f8:   54000161    b.ne    9e124 <CGPIOPin::DisconnectInterrupt()+0x54>
   9e0fc:   b9404020    ldr w0, [x1, #64]
   9e100:   7100181f    cmp w0, #0x6
   9e104:   540001a1    b.ne    9e138 <CGPIOPin::DisconnectInterrupt()+0x68>
   9e108:   f9401420    ldr x0, [x1, #40]
   9e10c:   b4000200    cbz x0, 9e14c <CGPIOPin::DisconnectInterrupt()+0x7c>
   9e110:   f9401020    ldr x0, [x1, #32]
   9e114:   f900143f    str xzr, [x1, #40]
   9e118:   b4000240    cbz x0, 9e160 <CGPIOPin::DisconnectInterrupt()+0x90>
   9e11c:   a8c17bfd    ldp x29, x30, [sp], #16
   9e120:   14003b84    b   acf30 <CGPIOManager::DisconnectInterrupt(CGPIOPin*)>
   9e124:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e128:   91368021    add x1, x1, #0xda0
   9e12c:   91042020    add x0, x1, #0x108
   9e130:   52801aa2    mov w2, #0xd5
   9e134:   97fffa63    bl  9cac0 <assertion_failed>
   9e138:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e13c:   91368021    add x1, x1, #0xda0
   9e140:   9104c020    add x0, x1, #0x130
   9e144:   52801ac2    mov w2, #0xd6
   9e148:   97fffa5e    bl  9cac0 <assertion_failed>
   9e14c:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e150:   91368021    add x1, x1, #0xda0
   9e154:   91062020    add x0, x1, #0x188
   9e158:   52801b02    mov w2, #0xd8
   9e15c:   97fffa59    bl  9cac0 <assertion_failed>
   9e160:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e164:   91368021    add x1, x1, #0xda0
   9e168:   9105e020    add x0, x1, #0x178
   9e16c:   52801b62    mov w2, #0xdb
   9e170:   97fffa54    bl  9cac0 <assertion_failed>
   9e174:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e178:   91368021    add x1, x1, #0xda0
   9e17c:   91022020    add x0, x1, #0x88
   9e180:   52801a22    mov w2, #0xd1
   9e184:   97fffa4f    bl  9cac0 <assertion_failed>
   9e188:   d503201f    nop
   9e18c:   d503201f    nop

000000000009e190 <CGPIOPin::EnableInterrupt(TGPIOInterrupt)>:
   9e190:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   9e194:   910003fd    mov x29, sp
   9e198:   a90153f3    stp x19, x20, [sp, #16]
   9e19c:   aa0003f3    mov x19, x0
   9e1a0:   b9401400    ldr w0, [x0, #20]
   9e1a4:   f90013f5    str x21, [sp, #32]
   9e1a8:   7100001f    cmp w0, #0x0
   9e1ac:   51000800    sub w0, w0, #0x2
   9e1b0:   7a411800    ccmp    w0, #0x1, #0x0, ne
   9e1b4:   540007e8    b.hi    9e2b0 <CGPIOPin::EnableInterrupt(TGPIOInterrupt)+0x120>
   9e1b8:   f9401660    ldr x0, [x19, #40]
   9e1bc:   b4000520    cbz x0, 9e260 <CGPIOPin::EnableInterrupt(TGPIOInterrupt)+0xd0>
   9e1c0:   b9403e60    ldr w0, [x19, #60]
   9e1c4:   7100181f    cmp w0, #0x6
   9e1c8:   54000561    b.ne    9e274 <CGPIOPin::EnableInterrupt(TGPIOInterrupt)+0xe4>
   9e1cc:   7100143f    cmp w1, #0x5
   9e1d0:   540005cc    b.gt    9e288 <CGPIOPin::EnableInterrupt(TGPIOInterrupt)+0xf8>
   9e1d4:   b9404260    ldr w0, [x19, #64]
   9e1d8:   6b01001f    cmp w0, w1
   9e1dc:   54000600    b.eq    9e29c <CGPIOPin::EnableInterrupt(TGPIOInterrupt)+0x10c>
   9e1e0:   b9400e62    ldr w2, [x19, #12]
   9e1e4:   0b010434    add w20, w1, w1, lsl #1
   9e1e8:   52800983    mov w3, #0x4c
   9e1ec:   72bfc403    movk    w3, #0xfe20, lsl #16
   9e1f0:   900000f5    adrp    x21, ba000 <font_data+0x1080>
   9e1f4:   b9003e61    str w1, [x19, #60]
   9e1f8:   b94962a0    ldr w0, [x21, #2400]
   9e1fc:   0b030041    add w1, w2, w3
   9e200:   0b140834    add w20, w1, w20, lsl #2
   9e204:   350001e0    cbnz    w0, 9e240 <CGPIOPin::EnableInterrupt(TGPIOInterrupt)+0xb0>
   9e208:   b9401261    ldr w1, [x19, #16]
   9e20c:   b9400280    ldr w0, [x20]
   9e210:   2a010000    orr w0, w0, w1
   9e214:   b9000280    str w0, [x20]
   9e218:   b94962a0    ldr w0, [x21, #2400]
   9e21c:   350000a0    cbnz    w0, 9e230 <CGPIOPin::EnableInterrupt(TGPIOInterrupt)+0xa0>
   9e220:   a94153f3    ldp x19, x20, [sp, #16]
   9e224:   f94013f5    ldr x21, [sp, #32]
   9e228:   a8c37bfd    ldp x29, x30, [sp], #48
   9e22c:   d65f03c0    ret
   9e230:   a94153f3    ldp x19, x20, [sp, #16]
   9e234:   f94013f5    ldr x21, [sp, #32]
   9e238:   a8c37bfd    ldp x29, x30, [sp], #48
   9e23c:   1400293d    b   a8730 <LeaveCritical>
   9e240:   9400290c    bl  a8670 <EnterCritical>
   9e244:   b9401261    ldr w1, [x19, #16]
   9e248:   b9400280    ldr w0, [x20]
   9e24c:   2a010000    orr w0, w0, w1
   9e250:   b9000280    str w0, [x20]
   9e254:   b94962a0    ldr w0, [x21, #2400]
   9e258:   34fffe40    cbz w0, 9e220 <CGPIOPin::EnableInterrupt(TGPIOInterrupt)+0x90>
   9e25c:   17fffff5    b   9e230 <CGPIOPin::EnableInterrupt(TGPIOInterrupt)+0xa0>
   9e260:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e264:   91368021    add x1, x1, #0xda0
   9e268:   91062020    add x0, x1, #0x188
   9e26c:   52801c82    mov w2, #0xe4
   9e270:   97fffa14    bl  9cac0 <assertion_failed>
   9e274:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e278:   91368021    add x1, x1, #0xda0
   9e27c:   91042020    add x0, x1, #0x108
   9e280:   52801cc2    mov w2, #0xe6
   9e284:   97fffa0f    bl  9cac0 <assertion_failed>
   9e288:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e28c:   91368021    add x1, x1, #0xda0
   9e290:   91066020    add x0, x1, #0x198
   9e294:   52801ce2    mov w2, #0xe7
   9e298:   97fffa0a    bl  9cac0 <assertion_failed>
   9e29c:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e2a0:   91368021    add x1, x1, #0xda0
   9e2a4:   91070020    add x0, x1, #0x1c0
   9e2a8:   52801d02    mov w2, #0xe8
   9e2ac:   97fffa05    bl  9cac0 <assertion_failed>
   9e2b0:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e2b4:   91368021    add x1, x1, #0xda0
   9e2b8:   91022020    add x0, x1, #0x88
   9e2bc:   52801c22    mov w2, #0xe1
   9e2c0:   97fffa00    bl  9cac0 <assertion_failed>
   9e2c4:   d503201f    nop
   9e2c8:   d503201f    nop
   9e2cc:   d503201f    nop

000000000009e2d0 <CGPIOPin::DisableInterrupt()>:
   9e2d0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   9e2d4:   910003fd    mov x29, sp
   9e2d8:   a90153f3    stp x19, x20, [sp, #16]
   9e2dc:   aa0003f4    mov x20, x0
   9e2e0:   b9401400    ldr w0, [x0, #20]
   9e2e4:   f90013f5    str x21, [sp, #32]
   9e2e8:   7100001f    cmp w0, #0x0
   9e2ec:   51000800    sub w0, w0, #0x2
   9e2f0:   7a411800    ccmp    w0, #0x1, #0x0, ne
   9e2f4:   54000588    b.hi    9e3a4 <CGPIOPin::DisableInterrupt()+0xd4>
   9e2f8:   b9403e81    ldr w1, [x20, #60]
   9e2fc:   7100143f    cmp w1, #0x5
   9e300:   5400048c    b.gt    9e390 <CGPIOPin::DisableInterrupt()+0xc0>
   9e304:   b9400e82    ldr w2, [x20, #12]
   9e308:   0b010421    add w1, w1, w1, lsl #1
   9e30c:   52800983    mov w3, #0x4c
   9e310:   72bfc403    movk    w3, #0xfe20, lsl #16
   9e314:   900000f5    adrp    x21, ba000 <font_data+0x1080>
   9e318:   b94962a0    ldr w0, [x21, #2400]
   9e31c:   0b030042    add w2, w2, w3
   9e320:   0b010853    add w19, w2, w1, lsl #2
   9e324:   350001a0    cbnz    w0, 9e358 <CGPIOPin::DisableInterrupt()+0x88>
   9e328:   b9400261    ldr w1, [x19]
   9e32c:   b9401280    ldr w0, [x20, #16]
   9e330:   0a200020    bic w0, w1, w0
   9e334:   b9000260    str w0, [x19]
   9e338:   b94962a0    ldr w0, [x21, #2400]
   9e33c:   350001c0    cbnz    w0, 9e374 <CGPIOPin::DisableInterrupt()+0xa4>
   9e340:   528000c0    mov w0, #0x6
   9e344:   f94013f5    ldr x21, [sp, #32]
   9e348:   b9003e80    str w0, [x20, #60]
   9e34c:   a94153f3    ldp x19, x20, [sp, #16]
   9e350:   a8c37bfd    ldp x29, x30, [sp], #48
   9e354:   d65f03c0    ret
   9e358:   940028c6    bl  a8670 <EnterCritical>
   9e35c:   b9400261    ldr w1, [x19]
   9e360:   b9401280    ldr w0, [x20, #16]
   9e364:   0a200020    bic w0, w1, w0
   9e368:   b9000260    str w0, [x19]
   9e36c:   b94962a0    ldr w0, [x21, #2400]
   9e370:   34fffe80    cbz w0, 9e340 <CGPIOPin::DisableInterrupt()+0x70>
   9e374:   940028ef    bl  a8730 <LeaveCritical>
   9e378:   528000c0    mov w0, #0x6
   9e37c:   f94013f5    ldr x21, [sp, #32]
   9e380:   b9003e80    str w0, [x20, #60]
   9e384:   a94153f3    ldp x19, x20, [sp, #16]
   9e388:   a8c37bfd    ldp x29, x30, [sp], #48
   9e38c:   d65f03c0    ret
   9e390:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e394:   91368021    add x1, x1, #0xda0
   9e398:   91078020    add x0, x1, #0x1e0
   9e39c:   52801f62    mov w2, #0xfb
   9e3a0:   97fff9c8    bl  9cac0 <assertion_failed>
   9e3a4:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e3a8:   91368021    add x1, x1, #0xda0
   9e3ac:   91022020    add x0, x1, #0x88
   9e3b0:   52801ee2    mov w2, #0xf7
   9e3b4:   97fff9c3    bl  9cac0 <assertion_failed>
   9e3b8:   d503201f    nop
   9e3bc:   d503201f    nop

000000000009e3c0 <CGPIOPin::EnableInterrupt2(TGPIOInterrupt)>:
   9e3c0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   9e3c4:   910003fd    mov x29, sp
   9e3c8:   a90153f3    stp x19, x20, [sp, #16]
   9e3cc:   aa0003f3    mov x19, x0
   9e3d0:   b9401400    ldr w0, [x0, #20]
   9e3d4:   f90013f5    str x21, [sp, #32]
   9e3d8:   7100001f    cmp w0, #0x0
   9e3dc:   51000800    sub w0, w0, #0x2
   9e3e0:   7a411800    ccmp    w0, #0x1, #0x0, ne
   9e3e4:   540007e8    b.hi    9e4e0 <CGPIOPin::EnableInterrupt2(TGPIOInterrupt)+0x120>
   9e3e8:   f9401660    ldr x0, [x19, #40]
   9e3ec:   b4000520    cbz x0, 9e490 <CGPIOPin::EnableInterrupt2(TGPIOInterrupt)+0xd0>
   9e3f0:   b9404260    ldr w0, [x19, #64]
   9e3f4:   7100181f    cmp w0, #0x6
   9e3f8:   54000561    b.ne    9e4a4 <CGPIOPin::EnableInterrupt2(TGPIOInterrupt)+0xe4>
   9e3fc:   7100143f    cmp w1, #0x5
   9e400:   540005cc    b.gt    9e4b8 <CGPIOPin::EnableInterrupt2(TGPIOInterrupt)+0xf8>
   9e404:   b9403e60    ldr w0, [x19, #60]
   9e408:   6b01001f    cmp w0, w1
   9e40c:   54000600    b.eq    9e4cc <CGPIOPin::EnableInterrupt2(TGPIOInterrupt)+0x10c>
   9e410:   b9400e62    ldr w2, [x19, #12]
   9e414:   0b010434    add w20, w1, w1, lsl #1
   9e418:   52800983    mov w3, #0x4c
   9e41c:   72bfc403    movk    w3, #0xfe20, lsl #16
   9e420:   900000f5    adrp    x21, ba000 <font_data+0x1080>
   9e424:   b9004261    str w1, [x19, #64]
   9e428:   b94962a0    ldr w0, [x21, #2400]
   9e42c:   0b030041    add w1, w2, w3
   9e430:   0b140834    add w20, w1, w20, lsl #2
   9e434:   350001e0    cbnz    w0, 9e470 <CGPIOPin::EnableInterrupt2(TGPIOInterrupt)+0xb0>
   9e438:   b9401261    ldr w1, [x19, #16]
   9e43c:   b9400280    ldr w0, [x20]
   9e440:   2a010000    orr w0, w0, w1
   9e444:   b9000280    str w0, [x20]
   9e448:   b94962a0    ldr w0, [x21, #2400]
   9e44c:   350000a0    cbnz    w0, 9e460 <CGPIOPin::EnableInterrupt2(TGPIOInterrupt)+0xa0>
   9e450:   a94153f3    ldp x19, x20, [sp, #16]
   9e454:   f94013f5    ldr x21, [sp, #32]
   9e458:   a8c37bfd    ldp x29, x30, [sp], #48
   9e45c:   d65f03c0    ret
   9e460:   a94153f3    ldp x19, x20, [sp, #16]
   9e464:   f94013f5    ldr x21, [sp, #32]
   9e468:   a8c37bfd    ldp x29, x30, [sp], #48
   9e46c:   140028b1    b   a8730 <LeaveCritical>
   9e470:   94002880    bl  a8670 <EnterCritical>
   9e474:   b9401261    ldr w1, [x19, #16]
   9e478:   b9400280    ldr w0, [x20]
   9e47c:   2a010000    orr w0, w0, w1
   9e480:   b9000280    str w0, [x20]
   9e484:   b94962a0    ldr w0, [x21, #2400]
   9e488:   34fffe40    cbz w0, 9e450 <CGPIOPin::EnableInterrupt2(TGPIOInterrupt)+0x90>
   9e48c:   17fffff5    b   9e460 <CGPIOPin::EnableInterrupt2(TGPIOInterrupt)+0xa0>
   9e490:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e494:   91368021    add x1, x1, #0xda0
   9e498:   91062020    add x0, x1, #0x188
   9e49c:   528021a2    mov w2, #0x10d
   9e4a0:   97fff988    bl  9cac0 <assertion_failed>
   9e4a4:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e4a8:   91368021    add x1, x1, #0xda0
   9e4ac:   9104c020    add x0, x1, #0x130
   9e4b0:   528021e2    mov w2, #0x10f
   9e4b4:   97fff983    bl  9cac0 <assertion_failed>
   9e4b8:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e4bc:   91368021    add x1, x1, #0xda0
   9e4c0:   91066020    add x0, x1, #0x198
   9e4c4:   52802202    mov w2, #0x110
   9e4c8:   97fff97e    bl  9cac0 <assertion_failed>
   9e4cc:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e4d0:   91368021    add x1, x1, #0xda0
   9e4d4:   91082020    add x0, x1, #0x208
   9e4d8:   52802222    mov w2, #0x111
   9e4dc:   97fff979    bl  9cac0 <assertion_failed>
   9e4e0:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e4e4:   91368021    add x1, x1, #0xda0
   9e4e8:   91022020    add x0, x1, #0x88
   9e4ec:   52802142    mov w2, #0x10a
   9e4f0:   97fff974    bl  9cac0 <assertion_failed>
   9e4f4:   d503201f    nop
   9e4f8:   d503201f    nop
   9e4fc:   d503201f    nop

000000000009e500 <CGPIOPin::DisableInterrupt2()>:
   9e500:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   9e504:   910003fd    mov x29, sp
   9e508:   a90153f3    stp x19, x20, [sp, #16]
   9e50c:   aa0003f4    mov x20, x0
   9e510:   b9401400    ldr w0, [x0, #20]
   9e514:   f90013f5    str x21, [sp, #32]
   9e518:   7100001f    cmp w0, #0x0
   9e51c:   51000800    sub w0, w0, #0x2
   9e520:   7a411800    ccmp    w0, #0x1, #0x0, ne
   9e524:   54000588    b.hi    9e5d4 <CGPIOPin::DisableInterrupt2()+0xd4>
   9e528:   b9404281    ldr w1, [x20, #64]
   9e52c:   7100143f    cmp w1, #0x5
   9e530:   5400048c    b.gt    9e5c0 <CGPIOPin::DisableInterrupt2()+0xc0>
   9e534:   b9400e82    ldr w2, [x20, #12]
   9e538:   0b010421    add w1, w1, w1, lsl #1
   9e53c:   52800983    mov w3, #0x4c
   9e540:   72bfc403    movk    w3, #0xfe20, lsl #16
   9e544:   900000f5    adrp    x21, ba000 <font_data+0x1080>
   9e548:   b94962a0    ldr w0, [x21, #2400]
   9e54c:   0b030042    add w2, w2, w3
   9e550:   0b010853    add w19, w2, w1, lsl #2
   9e554:   350001a0    cbnz    w0, 9e588 <CGPIOPin::DisableInterrupt2()+0x88>
   9e558:   b9400261    ldr w1, [x19]
   9e55c:   b9401280    ldr w0, [x20, #16]
   9e560:   0a200020    bic w0, w1, w0
   9e564:   b9000260    str w0, [x19]
   9e568:   b94962a0    ldr w0, [x21, #2400]
   9e56c:   350001c0    cbnz    w0, 9e5a4 <CGPIOPin::DisableInterrupt2()+0xa4>
   9e570:   528000c0    mov w0, #0x6
   9e574:   f94013f5    ldr x21, [sp, #32]
   9e578:   b9004280    str w0, [x20, #64]
   9e57c:   a94153f3    ldp x19, x20, [sp, #16]
   9e580:   a8c37bfd    ldp x29, x30, [sp], #48
   9e584:   d65f03c0    ret
   9e588:   9400283a    bl  a8670 <EnterCritical>
   9e58c:   b9400261    ldr w1, [x19]
   9e590:   b9401280    ldr w0, [x20, #16]
   9e594:   0a200020    bic w0, w1, w0
   9e598:   b9000260    str w0, [x19]
   9e59c:   b94962a0    ldr w0, [x21, #2400]
   9e5a0:   34fffe80    cbz w0, 9e570 <CGPIOPin::DisableInterrupt2()+0x70>
   9e5a4:   94002863    bl  a8730 <LeaveCritical>
   9e5a8:   528000c0    mov w0, #0x6
   9e5ac:   f94013f5    ldr x21, [sp, #32]
   9e5b0:   b9004280    str w0, [x20, #64]
   9e5b4:   a94153f3    ldp x19, x20, [sp, #16]
   9e5b8:   a8c37bfd    ldp x29, x30, [sp], #48
   9e5bc:   d65f03c0    ret
   9e5c0:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e5c4:   91368021    add x1, x1, #0xda0
   9e5c8:   9108a020    add x0, x1, #0x228
   9e5cc:   52802482    mov w2, #0x124
   9e5d0:   97fff93c    bl  9cac0 <assertion_failed>
   9e5d4:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e5d8:   91368021    add x1, x1, #0xda0
   9e5dc:   91022020    add x0, x1, #0x88
   9e5e0:   52802402    mov w2, #0x120
   9e5e4:   97fff937    bl  9cac0 <assertion_failed>
   9e5e8:   d503201f    nop
   9e5ec:   d503201f    nop

000000000009e5f0 <CGPIOPin::AcknowledgeInterrupt()>:
   9e5f0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   9e5f4:   910003fd    mov x29, sp
   9e5f8:   f9401401    ldr x1, [x0, #40]
   9e5fc:   b4000141    cbz x1, 9e624 <CGPIOPin::AcknowledgeInterrupt()+0x34>
   9e600:   3940e001    ldrb    w1, [x0, #56]
   9e604:   370001a1    tbnz    w1, #0, 9e638 <CGPIOPin::AcknowledgeInterrupt()+0x48>
   9e608:   29418801    ldp w1, w2, [x0, #12]
   9e60c:   52800803    mov w3, #0x40
   9e610:   72bfc403    movk    w3, #0xfe20, lsl #16
   9e614:   0b030020    add w0, w1, w3
   9e618:   b9000002    str w2, [x0]
   9e61c:   a8c17bfd    ldp x29, x30, [sp], #16
   9e620:   d65f03c0    ret
   9e624:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e628:   91368021    add x1, x1, #0xda0
   9e62c:   91062020    add x0, x1, #0x188
   9e630:   52802662    mov w2, #0x133
   9e634:   97fff923    bl  9cac0 <assertion_failed>
   9e638:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e63c:   91368021    add x1, x1, #0xda0
   9e640:   91094020    add x0, x1, #0x250
   9e644:   52802682    mov w2, #0x134
   9e648:   97fff91e    bl  9cac0 <assertion_failed>
   9e64c:   d503201f    nop

000000000009e650 <CGPIOPin::WriteAll(unsigned int, unsigned int)>:
   9e650:   6a200022    bics    w2, w1, w0
   9e654:   54000080    b.eq    9e664 <CGPIOPin::WriteAll(unsigned int, unsigned int)+0x14>
   9e658:   d2800503    mov x3, #0x28
   9e65c:   f2bfc403    movk    x3, #0xfe20, lsl #16
   9e660:   b9000062    str w2, [x3]
   9e664:   6a010000    ands    w0, w0, w1
   9e668:   54000080    b.eq    9e678 <CGPIOPin::WriteAll(unsigned int, unsigned int)+0x28>
   9e66c:   d2800381    mov x1, #0x1c
   9e670:   f2bfc401    movk    x1, #0xfe20, lsl #16
   9e674:   b9000020    str w0, [x1]
   9e678:   d65f03c0    ret
   9e67c:   d503201f    nop

000000000009e680 <CGPIOPin::ReadAll()>:
   9e680:   d2800680    mov x0, #0x34
   9e684:   f2bfc400    movk    x0, #0xfe20, lsl #16
   9e688:   b9400000    ldr w0, [x0]
   9e68c:   d65f03c0    ret

000000000009e690 <CGPIOPin::SetPullMode(TGPIOPullMode)>:
   9e690:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   9e694:   910003fd    mov x29, sp
   9e698:   f90013f5    str x21, [sp, #32]
   9e69c:   900000f5    adrp    x21, ba000 <font_data+0x1080>
   9e6a0:   b94962a2    ldr w2, [x21, #2400]
   9e6a4:   a90153f3    stp x19, x20, [sp, #16]
   9e6a8:   aa0003f4    mov x20, x0
   9e6ac:   2a0103f3    mov w19, w1
   9e6b0:   35000382    cbnz    w2, 9e720 <CGPIOPin::SetPullMode(TGPIOPullMode)+0x90>
   9e6b4:   b9400a80    ldr w0, [x20, #8]
   9e6b8:   7100d41f    cmp w0, #0x35
   9e6bc:   540003c8    b.hi    9e734 <CGPIOPin::SetPullMode(TGPIOPullMode)+0xa4>
   9e6c0:   52800722    mov w2, #0x39
   9e6c4:   72a7f102    movk    w2, #0x3f88, lsl #16
   9e6c8:   0b401042    add w2, w2, w0, lsr #4
   9e6cc:   71000a7f    cmp w19, #0x2
   9e6d0:   531f0c00    ubfiz   w0, w0, #1, #4
   9e6d4:   531e7442    lsl w2, w2, #2
   9e6d8:   5400040c    b.gt    9e758 <CGPIOPin::SetPullMode(TGPIOPullMode)+0xc8>
   9e6dc:   b00000c4    adrp    x4, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e6e0:   91368084    add x4, x4, #0xda0
   9e6e4:   b9400045    ldr w5, [x2]
   9e6e8:   9109c084    add x4, x4, #0x270
   9e6ec:   52800063    mov w3, #0x3
   9e6f0:   b873d881    ldr w1, [x4, w19, sxtw #2]
   9e6f4:   1ac02063    lsl w3, w3, w0
   9e6f8:   0a2300a3    bic w3, w5, w3
   9e6fc:   1ac02020    lsl w0, w1, w0
   9e700:   2a030000    orr w0, w0, w3
   9e704:   b9000040    str w0, [x2]
   9e708:   b94962a0    ldr w0, [x21, #2400]
   9e70c:   350001e0    cbnz    w0, 9e748 <CGPIOPin::SetPullMode(TGPIOPullMode)+0xb8>
   9e710:   a94153f3    ldp x19, x20, [sp, #16]
   9e714:   f94013f5    ldr x21, [sp, #32]
   9e718:   a8c37bfd    ldp x29, x30, [sp], #48
   9e71c:   d65f03c0    ret
   9e720:   2a0203e0    mov w0, w2
   9e724:   940027d3    bl  a8670 <EnterCritical>
   9e728:   b9400a80    ldr w0, [x20, #8]
   9e72c:   7100d41f    cmp w0, #0x35
   9e730:   54fffc89    b.ls    9e6c0 <CGPIOPin::SetPullMode(TGPIOPullMode)+0x30>
   9e734:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e738:   91368021    add x1, x1, #0xda0
   9e73c:   9100a020    add x0, x1, #0x28
   9e740:   52802da2    mov w2, #0x16d
   9e744:   97fff8df    bl  9cac0 <assertion_failed>
   9e748:   a94153f3    ldp x19, x20, [sp, #16]
   9e74c:   f94013f5    ldr x21, [sp, #32]
   9e750:   a8c37bfd    ldp x29, x30, [sp], #48
   9e754:   140027f7    b   a8730 <LeaveCritical>
   9e758:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e75c:   91368021    add x1, x1, #0xda0
   9e760:   91098020    add x0, x1, #0x260
   9e764:   52802e22    mov w2, #0x171
   9e768:   97fff8d6    bl  9cac0 <assertion_failed>
   9e76c:   d503201f    nop

000000000009e770 <CGPIOPin::SetAlternateFunction(unsigned int)>:
   9e770:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   9e774:   910003fd    mov x29, sp
   9e778:   b9400803    ldr w3, [x0, #8]
   9e77c:   a90153f3    stp x19, x20, [sp, #16]
   9e780:   a9025bf5    stp x21, x22, [sp, #32]
   9e784:   7100d47f    cmp w3, #0x35
   9e788:   54000508    b.hi    9e828 <CGPIOPin::SetAlternateFunction(unsigned int)+0xb8>
   9e78c:   529999a0    mov w0, #0xcccd
   9e790:   72b99980    movk    w0, #0xcccc, lsl #16
   9e794:   2a0103f5    mov w21, w1
   9e798:   52a7f101    mov w1, #0x3f880000
   9e79c:   9ba07c60    umull   x0, w3, w0
   9e7a0:   710016bf    cmp w21, #0x5
   9e7a4:   d363fc00    lsr x0, x0, #35
   9e7a8:   0b000802    add w2, w0, w0, lsl #2
   9e7ac:   0b010000    add w0, w0, w1
   9e7b0:   531e7413    lsl w19, w0, #2
   9e7b4:   4b020460    sub w0, w3, w2, lsl #1
   9e7b8:   0b000414    add w20, w0, w0, lsl #1
   9e7bc:   54000408    b.hi    9e83c <CGPIOPin::SetAlternateFunction(unsigned int)+0xcc>
   9e7c0:   900000f6    adrp    x22, ba000 <font_data+0x1080>
   9e7c4:   b94962c0    ldr w0, [x22, #2400]
   9e7c8:   35000240    cbnz    w0, 9e810 <CGPIOPin::SetAlternateFunction(unsigned int)+0xa0>
   9e7cc:   b00000c0    adrp    x0, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e7d0:   91368000    add x0, x0, #0xda0
   9e7d4:   b9400263    ldr w3, [x19]
   9e7d8:   910a4000    add x0, x0, #0x290
   9e7dc:   528000e2    mov w2, #0x7
   9e7e0:   b8755800    ldr w0, [x0, w21, uxtw #2]
   9e7e4:   1ad42041    lsl w1, w2, w20
   9e7e8:   0a210061    bic w1, w3, w1
   9e7ec:   1ad42000    lsl w0, w0, w20
   9e7f0:   2a010000    orr w0, w0, w1
   9e7f4:   b9000260    str w0, [x19]
   9e7f8:   b94962c0    ldr w0, [x22, #2400]
   9e7fc:   350000e0    cbnz    w0, 9e818 <CGPIOPin::SetAlternateFunction(unsigned int)+0xa8>
   9e800:   a94153f3    ldp x19, x20, [sp, #16]
   9e804:   a9425bf5    ldp x21, x22, [sp, #32]
   9e808:   a8c37bfd    ldp x29, x30, [sp], #48
   9e80c:   d65f03c0    ret
   9e810:   94002798    bl  a8670 <EnterCritical>
   9e814:   17ffffee    b   9e7cc <CGPIOPin::SetAlternateFunction(unsigned int)+0x5c>
   9e818:   a94153f3    ldp x19, x20, [sp, #16]
   9e81c:   a9425bf5    ldp x21, x22, [sp, #32]
   9e820:   a8c37bfd    ldp x29, x30, [sp], #48
   9e824:   140027c3    b   a8730 <LeaveCritical>
   9e828:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e82c:   91368021    add x1, x1, #0xda0
   9e830:   9100a020    add x0, x1, #0x28
   9e834:   52803022    mov w2, #0x181
   9e838:   97fff8a2    bl  9cac0 <assertion_failed>
   9e83c:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e840:   91368021    add x1, x1, #0xda0
   9e844:   910a0020    add x0, x1, #0x280
   9e848:   528030a2    mov w2, #0x185
   9e84c:   97fff89d    bl  9cac0 <assertion_failed>

000000000009e850 <CGPIOPin::SetMode(TGPIOMode, bool)>:
   9e850:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   9e854:   910003fd    mov x29, sp
   9e858:   7100243f    cmp w1, #0x9
   9e85c:   a90153f3    stp x19, x20, [sp, #16]
   9e860:   a9025bf5    stp x21, x22, [sp, #32]
   9e864:   54000b0c    b.gt    9e9c4 <CGPIOPin::SetMode(TGPIOMode, bool)+0x174>
   9e868:   51001023    sub w3, w1, #0x4
   9e86c:   12001c56    and w22, w2, #0xff
   9e870:   7100147f    cmp w3, #0x5
   9e874:   b9001401    str w1, [x0, #20]
   9e878:   2a0103e4    mov w4, w1
   9e87c:   aa0003f4    mov x20, x0
   9e880:   54000669    b.ls    9e94c <CGPIOPin::SetMode(TGPIOMode, bool)+0xfc>
   9e884:   710002df    cmp w22, #0x0
   9e888:   f9001bf7    str x23, [sp, #48]
   9e88c:   7a411820    ccmp    w1, #0x1, #0x0, ne
   9e890:   54000a60    b.eq    9e9dc <CGPIOPin::SetMode(TGPIOMode, bool)+0x18c>
   9e894:   b9400a83    ldr w3, [x20, #8]
   9e898:   7100d47f    cmp w3, #0x35
   9e89c:   54000a68    b.hi    9e9e8 <CGPIOPin::SetMode(TGPIOMode, bool)+0x198>
   9e8a0:   529999a1    mov w1, #0xcccd
   9e8a4:   72b99981    movk    w1, #0xcccc, lsl #16
   9e8a8:   52a7f102    mov w2, #0x3f880000
   9e8ac:   900000f7    adrp    x23, ba000 <font_data+0x1080>
   9e8b0:   9ba17c61    umull   x1, w3, w1
   9e8b4:   b94962e0    ldr w0, [x23, #2400]
   9e8b8:   d363fc21    lsr x1, x1, #35
   9e8bc:   0b010835    add w21, w1, w1, lsl #2
   9e8c0:   0b020021    add w1, w1, w2
   9e8c4:   531e7433    lsl w19, w1, #2
   9e8c8:   4b150475    sub w21, w3, w21, lsl #1
   9e8cc:   0b1506b5    add w21, w21, w21, lsl #1
   9e8d0:   35000520    cbnz    w0, 9e974 <CGPIOPin::SetMode(TGPIOMode, bool)+0x124>
   9e8d4:   b9401680    ldr w0, [x20, #20]
   9e8d8:   528000e1    mov w1, #0x7
   9e8dc:   1ad52021    lsl w1, w1, w21
   9e8e0:   b9400262    ldr w2, [x19]
   9e8e4:   7100041f    cmp w0, #0x1
   9e8e8:   1a9f17e0    cset    w0, eq
   9e8ec:   1ad52000    lsl w0, w0, w21
   9e8f0:   0a210041    bic w1, w2, w1
   9e8f4:   2a010000    orr w0, w0, w1
   9e8f8:   b9000260    str w0, [x19]
   9e8fc:   b94962e0    ldr w0, [x23, #2400]
   9e900:   35000340    cbnz    w0, 9e968 <CGPIOPin::SetMode(TGPIOMode, bool)+0x118>
   9e904:   360001b6    tbz w22, #0, 9e938 <CGPIOPin::SetMode(TGPIOMode, bool)+0xe8>
   9e908:   b9401681    ldr w1, [x20, #20]
   9e90c:   7100083f    cmp w1, #0x2
   9e910:   540007c0    b.eq    9ea08 <CGPIOPin::SetMode(TGPIOMode, bool)+0x1b8>
   9e914:   54000348    b.hi    9e97c <CGPIOPin::SetMode(TGPIOMode, bool)+0x12c>
   9e918:   34000721    cbz w1, 9e9fc <CGPIOPin::SetMode(TGPIOMode, bool)+0x1ac>
   9e91c:   a9425bf5    ldp x21, x22, [sp, #32]
   9e920:   aa1403e0    mov x0, x20
   9e924:   52800001    mov w1, #0x0
   9e928:   a94153f3    ldp x19, x20, [sp, #16]
   9e92c:   f9401bf7    ldr x23, [sp, #48]
   9e930:   a8c47bfd    ldp x29, x30, [sp], #64
   9e934:   17fffd3f    b   9de30 <CGPIOPin::Write(unsigned int)>
   9e938:   a94153f3    ldp x19, x20, [sp, #16]
   9e93c:   a9425bf5    ldp x21, x22, [sp, #32]
   9e940:   f9401bf7    ldr x23, [sp, #48]
   9e944:   a8c47bfd    ldp x29, x30, [sp], #64
   9e948:   d65f03c0    ret
   9e94c:   370002b6    tbnz    w22, #0, 9e9a0 <CGPIOPin::SetMode(TGPIOMode, bool)+0x150>
   9e950:   a9425bf5    ldp x21, x22, [sp, #32]
   9e954:   aa1403e0    mov x0, x20
   9e958:   51001081    sub w1, w4, #0x4
   9e95c:   a94153f3    ldp x19, x20, [sp, #16]
   9e960:   a8c47bfd    ldp x29, x30, [sp], #64
   9e964:   17ffff83    b   9e770 <CGPIOPin::SetAlternateFunction(unsigned int)>
   9e968:   94002772    bl  a8730 <LeaveCritical>
   9e96c:   3607fe76    tbz w22, #0, 9e938 <CGPIOPin::SetMode(TGPIOMode, bool)+0xe8>
   9e970:   17ffffe6    b   9e908 <CGPIOPin::SetMode(TGPIOMode, bool)+0xb8>
   9e974:   9400273f    bl  a8670 <EnterCritical>
   9e978:   17ffffd7    b   9e8d4 <CGPIOPin::SetMode(TGPIOMode, bool)+0x84>
   9e97c:   71000c3f    cmp w1, #0x3
   9e980:   54fffdc1    b.ne    9e938 <CGPIOPin::SetMode(TGPIOMode, bool)+0xe8>
   9e984:   aa1403e0    mov x0, x20
   9e988:   52800021    mov w1, #0x1
   9e98c:   a94153f3    ldp x19, x20, [sp, #16]
   9e990:   a9425bf5    ldp x21, x22, [sp, #32]
   9e994:   f9401bf7    ldr x23, [sp, #48]
   9e998:   a8c47bfd    ldp x29, x30, [sp], #64
   9e99c:   17ffff3d    b   9e690 <CGPIOPin::SetPullMode(TGPIOPullMode)>
   9e9a0:   52800001    mov w1, #0x0
   9e9a4:   97ffff3b    bl  9e690 <CGPIOPin::SetPullMode(TGPIOPullMode)>
   9e9a8:   b9401684    ldr w4, [x20, #20]
   9e9ac:   aa1403e0    mov x0, x20
   9e9b0:   a94153f3    ldp x19, x20, [sp, #16]
   9e9b4:   a9425bf5    ldp x21, x22, [sp, #32]
   9e9b8:   51001081    sub w1, w4, #0x4
   9e9bc:   a8c47bfd    ldp x29, x30, [sp], #64
   9e9c0:   17ffff6c    b   9e770 <CGPIOPin::SetAlternateFunction(unsigned int)>
   9e9c4:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e9c8:   91368021    add x1, x1, #0xda0
   9e9cc:   f9001bf7    str x23, [sp, #48]
   9e9d0:   910aa020    add x0, x1, #0x2a8
   9e9d4:   528009e2    mov w2, #0x4f
   9e9d8:   97fff83a    bl  9cac0 <assertion_failed>
   9e9dc:   52800001    mov w1, #0x0
   9e9e0:   97ffff2c    bl  9e690 <CGPIOPin::SetPullMode(TGPIOPullMode)>
   9e9e4:   17ffffac    b   9e894 <CGPIOPin::SetMode(TGPIOMode, bool)+0x44>
   9e9e8:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9e9ec:   91368021    add x1, x1, #0xda0
   9e9f0:   9100a020    add x0, x1, #0x28
   9e9f4:   52800d02    mov w2, #0x68
   9e9f8:   97fff832    bl  9cac0 <assertion_failed>
   9e9fc:   aa1403e0    mov x0, x20
   9ea00:   52800001    mov w1, #0x0
   9ea04:   17ffffe2    b   9e98c <CGPIOPin::SetMode(TGPIOMode, bool)+0x13c>
   9ea08:   aa1403e0    mov x0, x20
   9ea0c:   17ffffe0    b   9e98c <CGPIOPin::SetMode(TGPIOMode, bool)+0x13c>

000000000009ea10 <CGPIOPin::CGPIOPin(unsigned int, TGPIOMode, CGPIOManager*)>:
   9ea10:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   9ea14:   910003fd    mov x29, sp
   9ea18:   52800144    mov w4, #0xa
   9ea1c:   7100d43f    cmp w1, #0x35
   9ea20:   a90153f3    stp x19, x20, [sp, #16]
   9ea24:   aa0003f3    mov x19, x0
   9ea28:   2a0103f4    mov w20, w1
   9ea2c:   b00000c0    adrp    x0, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9ea30:   91362000    add x0, x0, #0xd88
   9ea34:   f90013f5    str x21, [sp, #32]
   9ea38:   2a0203f5    mov w21, w2
   9ea3c:   b9000a61    str w1, [x19, #8]
   9ea40:   528000c1    mov w1, #0x6
   9ea44:   f9000260    str x0, [x19]
   9ea48:   b9001664    str w4, [x19, #20]
   9ea4c:   a9027e63    stp x3, xzr, [x19, #32]
   9ea50:   29078661    stp w1, w1, [x19, #60]
   9ea54:   54000188    b.hi    9ea84 <CGPIOPin::CGPIOPin(unsigned int, TGPIOMode, CGPIOManager*)+0x74>
   9ea58:   53057e83    lsr w3, w20, #5
   9ea5c:   52800022    mov w2, #0x1
   9ea60:   1ad42054    lsl w20, w2, w20
   9ea64:   531e7463    lsl w3, w3, #2
   9ea68:   2a1503e1    mov w1, w21
   9ea6c:   f94013f5    ldr x21, [sp, #32]
   9ea70:   aa1303e0    mov x0, x19
   9ea74:   2901d263    stp w3, w20, [x19, #12]
   9ea78:   a94153f3    ldp x19, x20, [sp, #16]
   9ea7c:   a8c37bfd    ldp x29, x30, [sp], #48
   9ea80:   17ffff74    b   9e850 <CGPIOPin::SetMode(TGPIOMode, bool)>
   9ea84:   940007f7    bl  a0a60 <CMachineInfo::Get()>
   9ea88:   2a1403e1    mov w1, w20
   9ea8c:   940006b5    bl  a0560 <CMachineInfo::GetGPIOPin(TGPIOVirtualPin) const>
   9ea90:   7100d41f    cmp w0, #0x35
   9ea94:   b9000a60    str w0, [x19, #8]
   9ea98:   2a0003f4    mov w20, w0
   9ea9c:   54fffde9    b.ls    9ea58 <CGPIOPin::CGPIOPin(unsigned int, TGPIOMode, CGPIOManager*)+0x48>
   9eaa0:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9eaa4:   91368021    add x1, x1, #0xda0
   9eaa8:   9100a020    add x0, x1, #0x28
   9eaac:   528008e2    mov w2, #0x47
   9eab0:   97fff804    bl  9cac0 <assertion_failed>
   9eab4:   d503201f    nop
   9eab8:   d503201f    nop
   9eabc:   d503201f    nop

000000000009eac0 <CGPIOPin::InterruptHandler()>:
   9eac0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   9eac4:   910003fd    mov x29, sp
   9eac8:   b9401401    ldr w1, [x0, #20]
   9eacc:   7100003f    cmp w1, #0x0
   9ead0:   51000821    sub w1, w1, #0x2
   9ead4:   7a411820    ccmp    w1, #0x1, #0x0, ne
   9ead8:   540002e8    b.hi    9eb34 <CGPIOPin::InterruptHandler()+0x74>
   9eadc:   b9403c01    ldr w1, [x0, #60]
   9eae0:   7100143f    cmp w1, #0x5
   9eae4:   540000ec    b.gt    9eb00 <CGPIOPin::InterruptHandler()+0x40>
   9eae8:   f9401401    ldr x1, [x0, #40]
   9eaec:   b40001a1    cbz x1, 9eb20 <CGPIOPin::InterruptHandler()+0x60>
   9eaf0:   f9401800    ldr x0, [x0, #48]
   9eaf4:   aa0103f0    mov x16, x1
   9eaf8:   a8c17bfd    ldp x29, x30, [sp], #16
   9eafc:   d61f0200    br  x16
   9eb00:   b9404001    ldr w1, [x0, #64]
   9eb04:   7100143f    cmp w1, #0x5
   9eb08:   54ffff0d    b.le    9eae8 <CGPIOPin::InterruptHandler()+0x28>
   9eb0c:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9eb10:   91368021    add x1, x1, #0xda0
   9eb14:   910b0020    add x0, x1, #0x2c0
   9eb18:   528032a2    mov w2, #0x195
   9eb1c:   97fff7e9    bl  9cac0 <assertion_failed>
   9eb20:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9eb24:   91368021    add x1, x1, #0xda0
   9eb28:   91062020    add x0, x1, #0x188
   9eb2c:   52803302    mov w2, #0x198
   9eb30:   97fff7e4    bl  9cac0 <assertion_failed>
   9eb34:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9eb38:   91368021    add x1, x1, #0xda0
   9eb3c:   91022020    add x0, x1, #0x88
   9eb40:   52803242    mov w2, #0x192
   9eb44:   97fff7df    bl  9cac0 <assertion_failed>
   9eb48:   d503201f    nop
   9eb4c:   d503201f    nop

000000000009eb50 <CGPIOPin::DisableAllInterrupts(unsigned int)>:
   9eb50:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   9eb54:   910003fd    mov x29, sp
   9eb58:   7100d41f    cmp w0, #0x35
   9eb5c:   a90153f3    stp x19, x20, [sp, #16]
   9eb60:   f90013f5    str x21, [sp, #32]
   9eb64:   54000408    b.hi    9ebe4 <CGPIOPin::DisableAllInterrupts(unsigned int)+0x94>
   9eb68:   52800273    mov w19, #0x13
   9eb6c:   72a7f113    movk    w19, #0x3f88, lsl #16
   9eb70:   0b401673    add w19, w19, w0, lsr #5
   9eb74:   900000f5    adrp    x21, ba000 <font_data+0x1080>
   9eb78:   2a0003e2    mov w2, w0
   9eb7c:   52800021    mov w1, #0x1
   9eb80:   b94962a0    ldr w0, [x21, #2400]
   9eb84:   1ac22034    lsl w20, w1, w2
   9eb88:   531e7673    lsl w19, w19, #2
   9eb8c:   35000200    cbnz    w0, 9ebcc <CGPIOPin::DisableAllInterrupts(unsigned int)+0x7c>
   9eb90:   d2801162    mov x2, #0x8b
   9eb94:   f2bfc402    movk    x2, #0xfe20, lsl #16
   9eb98:   2a3403e1    mvn w1, w20
   9eb9c:   d503201f    nop
   9eba0:   b9400260    ldr w0, [x19]
   9eba4:   0a000020    and w0, w1, w0
   9eba8:   b800c660    str w0, [x19], #12
   9ebac:   eb02027f    cmp x19, x2
   9ebb0:   54ffff89    b.ls    9eba0 <CGPIOPin::DisableAllInterrupts(unsigned int)+0x50>
   9ebb4:   b94962a0    ldr w0, [x21, #2400]
   9ebb8:   350000e0    cbnz    w0, 9ebd4 <CGPIOPin::DisableAllInterrupts(unsigned int)+0x84>
   9ebbc:   a94153f3    ldp x19, x20, [sp, #16]
   9ebc0:   f94013f5    ldr x21, [sp, #32]
   9ebc4:   a8c37bfd    ldp x29, x30, [sp], #48
   9ebc8:   d65f03c0    ret
   9ebcc:   940026a9    bl  a8670 <EnterCritical>
   9ebd0:   17fffff0    b   9eb90 <CGPIOPin::DisableAllInterrupts(unsigned int)+0x40>
   9ebd4:   a94153f3    ldp x19, x20, [sp, #16]
   9ebd8:   f94013f5    ldr x21, [sp, #32]
   9ebdc:   a8c37bfd    ldp x29, x30, [sp], #48
   9ebe0:   140026d4    b   a8730 <LeaveCritical>
   9ebe4:   b00000c1    adrp    x1, b7000 <CKeyMap::s_DefaultMap+0x16a0>
   9ebe8:   91368021    add x1, x1, #0xda0
   9ebec:   910c4020    add x0, x1, #0x310
   9ebf0:   528033c2    mov w2, #0x19e
   9ebf4:   97fff7b3    bl  9cac0 <assertion_failed>
    ...

000000000009ec00 <_GLOBAL__sub_I__ZN8CGPIOPin10s_SpinLockE>:
   9ec00:   900000e0    adrp    x0, ba000 <font_data+0x1080>
   9ec04:   52800021    mov w1, #0x1
   9ec08:   b9096001    str w1, [x0, #2400]
   9ec0c:   d65f03c0    ret

000000000009ec10 <CKernelOptions::~CKernelOptions()>:
   9ec10:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9ec14:   910003fd    mov x29, sp
   9ec18:   a90153f3    stp x19, x20, [sp, #16]
   9ec1c:   f9444c13    ldr x19, [x0, #2200]
   9ec20:   b40001f3    cbz x19, 9ec5c <CKernelOptions::~CKernelOptions()+0x4c>
   9ec24:   aa0003f4    mov x20, x0
   9ec28:   f9400261    ldr x1, [x19]
   9ec2c:   f9400a60    ldr x0, [x19, #16]
   9ec30:   f9044e81    str x1, [x20, #2200]
   9ec34:   b4000040    cbz x0, 9ec3c <CKernelOptions::~CKernelOptions()+0x2c>
   9ec38:   940022fe    bl  a7830 <operator delete[](void*)>
   9ec3c:   f9400660    ldr x0, [x19, #8]
   9ec40:   b4000040    cbz x0, 9ec48 <CKernelOptions::~CKernelOptions()+0x38>
   9ec44:   940022fb    bl  a7830 <operator delete[](void*)>
   9ec48:   aa1303e0    mov x0, x19
   9ec4c:   d2800301    mov x1, #0x18
   9ec50:   94002304    bl  a7860 <operator delete(void*, unsigned long)>
   9ec54:   f9444e93    ldr x19, [x20, #2200]
   9ec58:   b5fffe93    cbnz    x19, 9ec28 <CKernelOptions::~CKernelOptions()+0x18>
   9ec5c:   900000e0    adrp    x0, ba000 <font_data+0x1080>
   9ec60:   a94153f3    ldp x19, x20, [sp, #16]
   9ec64:   f904b41f    str xzr, [x0, #2408]
   9ec68:   a8c27bfd    ldp x29, x30, [sp], #32
   9ec6c:   d65f03c0    ret

000000000009ec70 <CKernelOptions::GetWidth() const>:
   9ec70:   b9481800    ldr w0, [x0, #2072]
   9ec74:   d65f03c0    ret
   9ec78:   d503201f    nop
   9ec7c:   d503201f    nop

000000000009ec80 <CKernelOptions::GetHeight() const>:
   9ec80:   b9481c00    ldr w0, [x0, #2076]
   9ec84:   d65f03c0    ret
   9ec88:   d503201f    nop
   9ec8c:   d503201f    nop

000000000009ec90 <CKernelOptions::GetLogDevice() const>:
   9ec90:   91208000    add x0, x0, #0x820
   9ec94:   d65f03c0    ret
   9ec98:   d503201f    nop
   9ec9c:   d503201f    nop

000000000009eca0 <CKernelOptions::GetLogLevel() const>:
   9eca0:   b9483400    ldr w0, [x0, #2100]
   9eca4:   d65f03c0    ret
   9eca8:   d503201f    nop
   9ecac:   d503201f    nop

000000000009ecb0 <CKernelOptions::GetKeyMap() const>:
   9ecb0:   9120e000    add x0, x0, #0x838
   9ecb4:   d65f03c0    ret
   9ecb8:   d503201f    nop
   9ecbc:   d503201f    nop

000000000009ecc0 <CKernelOptions::GetUSBPowerDelay() const>:
   9ecc0:   b9483c00    ldr w0, [x0, #2108]
   9ecc4:   d65f03c0    ret
   9ecc8:   d503201f    nop
   9eccc:   d503201f    nop

000000000009ecd0 <CKernelOptions::GetUSBFullSpeed() const>:
   9ecd0:   39610000    ldrb    w0, [x0, #2112]
   9ecd4:   d65f03c0    ret
   9ecd8:   d503201f    nop
   9ecdc:   d503201f    nop

000000000009ece0 <CKernelOptions::GetUSBBoost() const>:
   9ece0:   39610400    ldrb    w0, [x0, #2113]
   9ece4:   d65f03c0    ret
   9ece8:   d503201f    nop
   9ecec:   d503201f    nop

000000000009ecf0 <CKernelOptions::GetUSBIgnore() const>:
   9ecf0:   91210800    add x0, x0, #0x842
   9ecf4:   d65f03c0    ret
   9ecf8:   d503201f    nop
   9ecfc:   d503201f    nop

000000000009ed00 <CKernelOptions::GetUSBSoundChannels() const>:
   9ed00:   91216000    add x0, x0, #0x858
   9ed04:   d65f03c0    ret
   9ed08:   d503201f    nop
   9ed0c:   d503201f    nop

000000000009ed10 <CKernelOptions::GetSoundDevice() const>:
   9ed10:   91218000    add x0, x0, #0x860
   9ed14:   d65f03c0    ret
   9ed18:   d503201f    nop
   9ed1c:   d503201f    nop

000000000009ed20 <CKernelOptions::GetSoundOption() const>:
   9ed20:   b9487400    ldr w0, [x0, #2164]
   9ed24:   d65f03c0    ret
   9ed28:   d503201f    nop
   9ed2c:   d503201f    nop

000000000009ed30 <CKernelOptions::GetCPUSpeed() const>:
   9ed30:   b9487800    ldr w0, [x0, #2168]
   9ed34:   d65f03c0    ret
   9ed38:   d503201f    nop
   9ed3c:   d503201f    nop

000000000009ed40 <CKernelOptions::GetSoCMaxTemp() const>:
   9ed40:   b9487c00    ldr w0, [x0, #2172]
   9ed44:   d65f03c0    ret
   9ed48:   d503201f    nop
   9ed4c:   d503201f    nop

000000000009ed50 <CKernelOptions::GetGPIOFanPin() const>:
   9ed50:   b9488000    ldr w0, [x0, #2176]
   9ed54:   d65f03c0    ret
   9ed58:   d503201f    nop
   9ed5c:   d503201f    nop

000000000009ed60 <CKernelOptions::GetTouchScreen() const>:
   9ed60:   39621001    ldrb    w1, [x0, #2180]
   9ed64:   91222000    add x0, x0, #0x888
   9ed68:   f240003f    tst x1, #0x1
   9ed6c:   9a9f1000    csel    x0, x0, xzr, ne
   9ed70:   d65f03c0    ret
   9ed74:   d503201f    nop
   9ed78:   d503201f    nop
   9ed7c:   d503201f    nop

000000000009ed80 <CKernelOptions::GetAppOptionString(char const*, char const*) const>:
   9ed80:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   9ed84:   910003fd    mov x29, sp
   9ed88:   a90153f3    stp x19, x20, [sp, #16]
   9ed8c:   f9444c13    ldr x19, [x0, #2200]
   9ed90:   f90013f5    str x21, [sp, #32]
   9ed94:   aa0203f5    mov x21, x2
   9ed98:   b40001d3    cbz x19, 9edd0 <CKernelOptions::GetAppOptionString(char const*, char const*) const+0x50>
   9ed9c:   aa0103f4    mov x20, x1
   9eda0:   14000003    b   9edac <CKernelOptions::GetAppOptionString(char const*, char const*) const+0x2c>
   9eda4:   f9400273    ldr x19, [x19]
   9eda8:   b4000153    cbz x19, 9edd0 <CKernelOptions::GetAppOptionString(char const*, char const*) const+0x50>
   9edac:   f9400660    ldr x0, [x19, #8]
   9edb0:   aa1403e1    mov x1, x20
   9edb4:   94001e6f    bl  a6770 <strcmp>
   9edb8:   35ffff60    cbnz    w0, 9eda4 <CKernelOptions::GetAppOptionString(char const*, char const*) const+0x24>
   9edbc:   f9400a60    ldr x0, [x19, #16]
   9edc0:   a94153f3    ldp x19, x20, [sp, #16]
   9edc4:   f94013f5    ldr x21, [sp, #32]
   9edc8:   a8c37bfd    ldp x29, x30, [sp], #48
   9edcc:   d65f03c0    ret
   9edd0:   a94153f3    ldp x19, x20, [sp, #16]
   9edd4:   aa1503e0    mov x0, x21
   9edd8:   f94013f5    ldr x21, [sp, #32]
   9eddc:   a8c37bfd    ldp x29, x30, [sp], #48
   9ede0:   d65f03c0    ret
   9ede4:   d503201f    nop
   9ede8:   d503201f    nop
   9edec:   d503201f    nop

000000000009edf0 <CKernelOptions::Get()>:
   9edf0:   900000e0    adrp    x0, ba000 <font_data+0x1080>
   9edf4:   f944b400    ldr x0, [x0, #2408]
   9edf8:   d65f03c0    ret
   9edfc:   d503201f    nop

000000000009ee00 <CKernelOptions::GetToken()>:
   9ee00:   aa0003e3    mov x3, x0
   9ee04:   f9440800    ldr x0, [x0, #2064]
   9ee08:   39c00001    ldrsb   w1, [x0]
   9ee0c:   350000c1    cbnz    w1, 9ee24 <CKernelOptions::GetToken()+0x24>
   9ee10:   14000013    b   9ee5c <CKernelOptions::GetToken()+0x5c>
   9ee14:   91000400    add x0, x0, #0x1
   9ee18:   f9040860    str x0, [x3, #2064]
   9ee1c:   39c00001    ldrsb   w1, [x0]
   9ee20:   340001e1    cbz w1, 9ee5c <CKernelOptions::GetToken()+0x5c>
   9ee24:   7100803f    cmp w1, #0x20
   9ee28:   54ffff60    b.eq    9ee14 <CKernelOptions::GetToken()+0x14>
   9ee2c:   f9440861    ldr x1, [x3, #2064]
   9ee30:   14000006    b   9ee48 <CKernelOptions::GetToken()+0x48>
   9ee34:   7100805f    cmp w2, #0x20
   9ee38:   aa0103e2    mov x2, x1
   9ee3c:   91000421    add x1, x1, #0x1
   9ee40:   f9040861    str x1, [x3, #2064]
   9ee44:   54000080    b.eq    9ee54 <CKernelOptions::GetToken()+0x54>
   9ee48:   39c00022    ldrsb   w2, [x1]
   9ee4c:   35ffff42    cbnz    w2, 9ee34 <CKernelOptions::GetToken()+0x34>
   9ee50:   d65f03c0    ret
   9ee54:   3900005f    strb    wzr, [x2]
   9ee58:   d65f03c0    ret
   9ee5c:   d2800000    mov x0, #0x0
   9ee60:   d65f03c0    ret
   9ee64:   d503201f    nop
   9ee68:   d503201f    nop
   9ee6c:   d503201f    nop

000000000009ee70 <CKernelOptions::GetOptionValue(char*)>:
   9ee70:   39c00001    ldrsb   w1, [x0]
   9ee74:   35000081    cbnz    w1, 9ee84 <CKernelOptions::GetOptionValue(char*)+0x14>
   9ee78:   14000007    b   9ee94 <CKernelOptions::GetOptionValue(char*)+0x24>
   9ee7c:   38c01c01    ldrsb   w1, [x0, #1]!
   9ee80:   340000a1    cbz w1, 9ee94 <CKernelOptions::GetOptionValue(char*)+0x24>
   9ee84:   7100f43f    cmp w1, #0x3d
   9ee88:   54ffffa1    b.ne    9ee7c <CKernelOptions::GetOptionValue(char*)+0xc>
   9ee8c:   3800141f    strb    wzr, [x0], #1
   9ee90:   d65f03c0    ret
   9ee94:   d2800000    mov x0, #0x0
   9ee98:   d65f03c0    ret
   9ee9c:   d503201f    nop

000000000009eea0 <CKernelOptions::GetDecimal(char const*)>:
   9eea0:   aa0003e3    mov x3, x0
   9eea4:   b4000260    cbz x0, 9eef0 <CKernelOptions::GetDecimal(char const*)+0x50>
   9eea8:   39c00001    ldrsb   w1, [x0]
   9eeac:   12800000    mov w0, #0xffffffff
   9eeb0:   340001e1    cbz w1, 9eeec <CKernelOptions::GetDecimal(char const*)+0x4c>
   9eeb4:   52800000    mov w0, #0x0
   9eeb8:   1400000a    b   9eee0 <CKernelOptions::GetDecimal(char const*)+0x40>
   9eebc:   5100c021    sub w1, w1, #0x30
   9eec0:   0b020422    add w2, w1, w2, lsl #1
   9eec4:   12001c21    and w1, w1, #0xff
   9eec8:   7100243f    cmp w1, #0x9
   9eecc:   54000128    b.hi    9eef0 <CKernelOptions::GetDecimal(char const*)+0x50>
   9eed0:   6b02001f    cmp w0, w2
   9eed4:   2a0203e0    mov w0, w2
   9eed8:   3a419844    ccmn    w2, #0x1, #0x4, ls
   9eedc:   540000a0    b.eq    9eef0 <CKernelOptions::GetDecimal(char const*)+0x50>
   9eee0:   38c01461    ldrsb   w1, [x3], #1
   9eee4:   0b000802    add w2, w0, w0, lsl #2
   9eee8:   35fffea1    cbnz    w1, 9eebc <CKernelOptions::GetDecimal(char const*)+0x1c>
   9eeec:   d65f03c0    ret
   9eef0:   12800000    mov w0, #0xffffffff
   9eef4:   d65f03c0    ret
   9eef8:   d503201f    nop
   9eefc:   d503201f    nop

000000000009ef00 <CKernelOptions::GetAppOptionDecimal(char const*, unsigned int) const>:
   9ef00:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   9ef04:   910003fd    mov x29, sp
   9ef08:   a90153f3    stp x19, x20, [sp, #16]
   9ef0c:   f9444c13    ldr x19, [x0, #2200]
   9ef10:   f90013f5    str x21, [sp, #32]
   9ef14:   2a0203f5    mov w21, w2
   9ef18:   b4000253    cbz x19, 9ef60 <CKernelOptions::GetAppOptionDecimal(char const*, unsigned int) const+0x60>
   9ef1c:   aa0103f4    mov x20, x1
   9ef20:   14000003    b   9ef2c <CKernelOptions::GetAppOptionDecimal(char const*, unsigned int) const+0x2c>
   9ef24:   f9400273    ldr x19, [x19]
   9ef28:   b40001d3    cbz x19, 9ef60 <CKernelOptions::GetAppOptionDecimal(char const*, unsigned int) const+0x60>
   9ef2c:   f9400660    ldr x0, [x19, #8]
   9ef30:   aa1403e1    mov x1, x20
   9ef34:   94001e0f    bl  a6770 <strcmp>
   9ef38:   35ffff60    cbnz    w0, 9ef24 <CKernelOptions::GetAppOptionDecimal(char const*, unsigned int) const+0x24>
   9ef3c:   f9400a60    ldr x0, [x19, #16]
   9ef40:   b4000100    cbz x0, 9ef60 <CKernelOptions::GetAppOptionDecimal(char const*, unsigned int) const+0x60>
   9ef44:   97ffffd7    bl  9eea0 <CKernelOptions::GetDecimal(char const*)>
   9ef48:   3100041f    cmn w0, #0x1
   9ef4c:   540000a0    b.eq    9ef60 <CKernelOptions::GetAppOptionDecimal(char const*, unsigned int) const+0x60>
   9ef50:   a94153f3    ldp x19, x20, [sp, #16]
   9ef54:   f94013f5    ldr x21, [sp, #32]
   9ef58:   a8c37bfd    ldp x29, x30, [sp], #48
   9ef5c:   d65f03c0    ret
   9ef60:   a94153f3    ldp x19, x20, [sp, #16]
   9ef64:   2a1503e0    mov w0, w21
   9ef68:   f94013f5    ldr x21, [sp, #32]
   9ef6c:   a8c37bfd    ldp x29, x30, [sp], #48
   9ef70:   d65f03c0    ret
   9ef74:   d503201f    nop
   9ef78:   d503201f    nop
   9ef7c:   d503201f    nop

000000000009ef80 <CKernelOptions::GetDecimals(char*, unsigned int*, unsigned int)>:
   9ef80:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   9ef84:   910003fd    mov x29, sp
   9ef88:   a90153f3    stp x19, x20, [sp, #16]
   9ef8c:   d00000d4    adrp    x20, b8000 <vtable for CGPIOPin+0x288>
   9ef90:   91032294    add x20, x20, #0xc8
   9ef94:   a9025bf5    stp x21, x22, [sp, #32]
   9ef98:   9100e3f5    add x21, sp, #0x38
   9ef9c:   34000422    cbz w2, 9f020 <CKernelOptions::GetDecimals(char*, unsigned int*, unsigned int)+0xa0>
   9efa0:   aa0103f6    mov x22, x1
   9efa4:   51000441    sub w1, w2, #0x1
   9efa8:   d37e7c33    ubfiz   x19, x1, #2, #32
   9efac:   d00000d4    adrp    x20, b8000 <vtable for CGPIOPin+0x288>
   9efb0:   91032294    add x20, x20, #0xc8
   9efb4:   91001273    add x19, x19, #0x4
   9efb8:   8b1302d3    add x19, x22, x19
   9efbc:   9100e3f5    add x21, sp, #0x38
   9efc0:   aa1503e2    mov x2, x21
   9efc4:   aa1403e1    mov x1, x20
   9efc8:   94001eb6    bl  a6aa0 <strtok_r>
   9efcc:   b40003e0    cbz x0, 9f048 <CKernelOptions::GetDecimals(char*, unsigned int*, unsigned int)+0xc8>
   9efd0:   39c00001    ldrsb   w1, [x0]
   9efd4:   340003a1    cbz w1, 9f048 <CKernelOptions::GetDecimals(char*, unsigned int*, unsigned int)+0xc8>
   9efd8:   52800004    mov w4, #0x0
   9efdc:   1400000a    b   9f004 <CKernelOptions::GetDecimals(char*, unsigned int*, unsigned int)+0x84>
   9efe0:   5100c042    sub w2, w2, #0x30
   9efe4:   0b030443    add w3, w2, w3, lsl #1
   9efe8:   12001c42    and w2, w2, #0xff
   9efec:   7100245f    cmp w2, #0x9
   9eff0:   540002c8    b.hi    9f048 <CKernelOptions::GetDecimals(char*, unsigned int*, unsigned int)+0xc8>
   9eff4:   6b03009f    cmp w4, w3
   9eff8:   2a0303e4    mov w4, w3
   9effc:   3a419864    ccmn    w3, #0x1, #0x4, ls
   9f000:   54000240    b.eq    9f048 <CKernelOptions::GetDecimals(char*, unsigned int*, unsigned int)+0xc8>
   9f004:   38c01402    ldrsb   w2, [x0], #1
   9f008:   0b040883    add w3, w4, w4, lsl #2
   9f00c:   35fffea2    cbnz    w2, 9efe0 <CKernelOptions::GetDecimals(char*, unsigned int*, unsigned int)+0x60>
   9f010:   b80046c4    str w4, [x22], #4
   9f014:   eb1302df    cmp x22, x19
   9f018:   d2800000    mov x0, #0x0
   9f01c:   54fffd21    b.ne    9efc0 <CKernelOptions::GetDecimals(char*, unsigned int*, unsigned int)+0x40>
   9f020:   aa1503e2    mov x2, x21
   9f024:   aa1403e1    mov x1, x20
   9f028:   d2800000    mov x0, #0x0
   9f02c:   94001e9d    bl  a6aa0 <strtok_r>
   9f030:   a94153f3    ldp x19, x20, [sp, #16]
   9f034:   f100001f    cmp x0, #0x0
   9f038:   1a9f17e0    cset    w0, eq
   9f03c:   a9425bf5    ldp x21, x22, [sp, #32]
   9f040:   a8c47bfd    ldp x29, x30, [sp], #64
   9f044:   d65f03c0    ret
   9f048:   a94153f3    ldp x19, x20, [sp, #16]
   9f04c:   52800000    mov w0, #0x0
   9f050:   a9425bf5    ldp x21, x22, [sp, #32]
   9f054:   a8c47bfd    ldp x29, x30, [sp], #64
   9f058:   d65f03c0    ret
   9f05c:   d503201f    nop

000000000009f060 <CKernelOptions::CKernelOptions()>:
   9f060:   a9ba7bfd    stp x29, x30, [sp, #-96]!
   9f064:   910003fd    mov x29, sp
   9f068:   52800083    mov w3, #0x4
   9f06c:   d2c00782    mov x2, #0x3c00000000
   9f070:   900000a1    adrp    x1, b3000 <_etext+0x3f9c>
   9f074:   91036021    add x1, x1, #0xd8
   9f078:   a9025bf5    stp x21, x22, [sp, #32]
   9f07c:   aa0003f5    mov x21, x0
   9f080:   a90363f7    stp x23, x24, [sp, #48]
   9f084:   91208018    add x24, x0, #0x820
   9f088:   aa1803e0    mov x0, x24
   9f08c:   a9046bf9    stp x25, x26, [sp, #64]
   9f090:   9120e2b9    add x25, x21, #0x838
   9f094:   f9040ebf    str xzr, [x21, #2072]
   9f098:   b90836a3    str w3, [x21, #2100]
   9f09c:   b9083ebf    str wzr, [x21, #2108]
   9f0a0:   791082bf    strh    wzr, [x21, #2112]
   9f0a4:   f9042ebf    str xzr, [x21, #2136]
   9f0a8:   b90876bf    str wzr, [x21, #2164]
   9f0ac:   f9043ea2    str x2, [x21, #2168]
   9f0b0:   b90882bf    str wzr, [x21, #2176]
   9f0b4:   392212bf    strb    wzr, [x21, #2180]
   9f0b8:   f9044ebf    str xzr, [x21, #2200]
   9f0bc:   94001e31    bl  a6980 <strcpy>
   9f0c0:   f0000081    adrp    x1, b2000 <_etext+0x2f9c>
   9f0c4:   912ac021    add x1, x1, #0xab0
   9f0c8:   aa1903e0    mov x0, x25
   9f0cc:   94001e2d    bl  a6980 <strcpy>
   9f0d0:   f00000c2    adrp    x2, ba000 <font_data+0x1080>
   9f0d4:   910163e0    add x0, sp, #0x58
   9f0d8:   39210abf    strb    wzr, [x21, #2114]
   9f0dc:   52800001    mov w1, #0x0
   9f0e0:   392182bf    strb    wzr, [x21, #2144]
   9f0e4:   f904b455    str x21, [x2, #2408]
   9f0e8:   97fff69a    bl  9cb50 <CBcmPropertyTags::CBcmPropertyTags(bool)>
   9f0ec:   52800021    mov w1, #0x1
   9f0f0:   72a000a1    movk    w1, #0x5, lsl #16
   9f0f4:   aa1503e2    mov x2, x21
   9f0f8:   910163e0    add x0, sp, #0x58
   9f0fc:   52800004    mov w4, #0x0
   9f100:   52810183    mov w3, #0x80c
   9f104:   97fff6f3    bl  9ccd0 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   9f108:   36000540    tbz w0, #0, 9f1b0 <CKernelOptions::CKernelOptions()+0x150>
   9f10c:   b9400aa0    ldr w0, [x21, #8]
   9f110:   711ffc1f    cmp w0, #0x7ff
   9f114:   540004e8    b.hi    9f1b0 <CKernelOptions::CKernelOptions()+0x150>
   9f118:   910032a1    add x1, x21, #0xc
   9f11c:   900000b6    adrp    x22, b3000 <_etext+0x3f9c>
   9f120:   910382d6    add x22, x22, #0xe0
   9f124:   900000b7    adrp    x23, b3000 <_etext+0x3f9c>
   9f128:   9103a2f7    add x23, x23, #0xe8
   9f12c:   a90153f3    stp x19, x20, [sp, #16]
   9f130:   8b2042a0    add x0, x21, w0, uxtw
   9f134:   3900301f    strb    wzr, [x0, #12]
   9f138:   f9040aa1    str x1, [x21, #2064]
   9f13c:   d503201f    nop
   9f140:   aa1503e0    mov x0, x21
   9f144:   97ffff2f    bl  9ee00 <CKernelOptions::GetToken()>
   9f148:   aa0003f4    mov x20, x0
   9f14c:   b4000300    cbz x0, 9f1ac <CKernelOptions::CKernelOptions()+0x14c>
   9f150:   39c00001    ldrsb   w1, [x0]
   9f154:   aa0003e2    mov x2, x0
   9f158:   35000081    cbnz    w1, 9f168 <CKernelOptions::CKernelOptions()+0x108>
   9f15c:   1400001c    b   9f1cc <CKernelOptions::CKernelOptions()+0x16c>
   9f160:   38c01c41    ldrsb   w1, [x2, #1]!
   9f164:   34000341    cbz w1, 9f1cc <CKernelOptions::CKernelOptions()+0x16c>
   9f168:   7100f43f    cmp w1, #0x3d
   9f16c:   54ffffa1    b.ne    9f160 <CKernelOptions::CKernelOptions()+0x100>
   9f170:   aa0203f3    mov x19, x2
   9f174:   aa1603e1    mov x1, x22
   9f178:   aa1403e0    mov x0, x20
   9f17c:   3800167f    strb    wzr, [x19], #1
   9f180:   94001d7c    bl  a6770 <strcmp>
   9f184:   350002e0    cbnz    w0, 9f1e0 <CKernelOptions::CKernelOptions()+0x180>
   9f188:   aa1303e0    mov x0, x19
   9f18c:   97ffff45    bl  9eea0 <CKernelOptions::GetDecimal(char const*)>
   9f190:   3100041f    cmn w0, #0x1
   9f194:   54fffd60    b.eq    9f140 <CKernelOptions::CKernelOptions()+0xe0>
   9f198:   b9081aa0    str w0, [x21, #2072]
   9f19c:   aa1503e0    mov x0, x21
   9f1a0:   97ffff18    bl  9ee00 <CKernelOptions::GetToken()>
   9f1a4:   aa0003f4    mov x20, x0
   9f1a8:   b5fffd40    cbnz    x0, 9f150 <CKernelOptions::CKernelOptions()+0xf0>
   9f1ac:   a94153f3    ldp x19, x20, [sp, #16]
   9f1b0:   910163e0    add x0, sp, #0x58
   9f1b4:   97fff66b    bl  9cb60 <CBcmPropertyTags::~CBcmPropertyTags()>
   9f1b8:   a9425bf5    ldp x21, x22, [sp, #32]
   9f1bc:   a94363f7    ldp x23, x24, [sp, #48]
   9f1c0:   a9446bf9    ldp x25, x26, [sp, #64]
   9f1c4:   a8c67bfd    ldp x29, x30, [sp], #96
   9f1c8:   d65f03c0    ret
   9f1cc:   aa1603e1    mov x1, x22
   9f1d0:   aa1403e0    mov x0, x20
   9f1d4:   d2800013    mov x19, #0x0
   9f1d8:   94001d66    bl  a6770 <strcmp>
   9f1dc:   34fffd60    cbz w0, 9f188 <CKernelOptions::CKernelOptions()+0x128>
   9f1e0:   aa1703e1    mov x1, x23
   9f1e4:   aa1403e0    mov x0, x20
   9f1e8:   94001d62    bl  a6770 <strcmp>
   9f1ec:   350000e0    cbnz    w0, 9f208 <CKernelOptions::CKernelOptions()+0x1a8>
   9f1f0:   aa1303e0    mov x0, x19
   9f1f4:   97ffff2b    bl  9eea0 <CKernelOptions::GetDecimal(char const*)>
   9f1f8:   3100041f    cmn w0, #0x1
   9f1fc:   54fffa20    b.eq    9f140 <CKernelOptions::CKernelOptions()+0xe0>
   9f200:   b9081ea0    str w0, [x21, #2076]
   9f204:   17ffffcf    b   9f140 <CKernelOptions::CKernelOptions()+0xe0>
   9f208:   900000a1    adrp    x1, b3000 <_etext+0x3f9c>
   9f20c:   9103c021    add x1, x1, #0xf0
   9f210:   aa1403e0    mov x0, x20
   9f214:   94001d57    bl  a6770 <strcmp>
   9f218:   34000180    cbz w0, 9f248 <CKernelOptions::CKernelOptions()+0x1e8>
   9f21c:   900000a1    adrp    x1, b3000 <_etext+0x3f9c>
   9f220:   9103e021    add x1, x1, #0xf8
   9f224:   aa1403e0    mov x0, x20
   9f228:   94001d52    bl  a6770 <strcmp>
   9f22c:   350001a0    cbnz    w0, 9f260 <CKernelOptions::CKernelOptions()+0x200>
   9f230:   aa1303e0    mov x0, x19
   9f234:   97ffff1b    bl  9eea0 <CKernelOptions::GetDecimal(char const*)>
   9f238:   7100101f    cmp w0, #0x4
   9f23c:   54fff828    b.hi    9f140 <CKernelOptions::CKernelOptions()+0xe0>
   9f240:   b90836a0    str w0, [x21, #2100]
   9f244:   17ffffbf    b   9f140 <CKernelOptions::CKernelOptions()+0xe0>
   9f248:   aa1303e1    mov x1, x19
   9f24c:   d2800262    mov x2, #0x13
   9f250:   aa1803e0    mov x0, x24
   9f254:   94001dd7    bl  a69b0 <strncpy>
   9f258:   3920cebf    strb    wzr, [x21, #2099]
   9f25c:   17ffffb9    b   9f140 <CKernelOptions::CKernelOptions()+0xe0>
   9f260:   900000a1    adrp    x1, b3000 <_etext+0x3f9c>
   9f264:   91042021    add x1, x1, #0x108
   9f268:   aa1403e0    mov x0, x20
   9f26c:   94001d41    bl  a6770 <strcmp>
   9f270:   340001c0    cbz w0, 9f2a8 <CKernelOptions::CKernelOptions()+0x248>
   9f274:   900000a1    adrp    x1, b3000 <_etext+0x3f9c>
   9f278:   91044021    add x1, x1, #0x110
   9f27c:   aa1403e0    mov x0, x20
   9f280:   94001d3c    bl  a6770 <strcmp>
   9f284:   350001e0    cbnz    w0, 9f2c0 <CKernelOptions::CKernelOptions()+0x260>
   9f288:   aa1303e0    mov x0, x19
   9f28c:   97ffff05    bl  9eea0 <CKernelOptions::GetDecimal(char const*)>
   9f290:   5283cf01    mov w1, #0x1e78
   9f294:   51032002    sub w2, w0, #0xc8
   9f298:   6b01005f    cmp w2, w1
   9f29c:   54fff528    b.hi    9f140 <CKernelOptions::CKernelOptions()+0xe0>
   9f2a0:   b9083ea0    str w0, [x21, #2108]
   9f2a4:   17ffffa7    b   9f140 <CKernelOptions::CKernelOptions()+0xe0>
   9f2a8:   aa1303e1    mov x1, x19
   9f2ac:   d2800042    mov x2, #0x2
   9f2b0:   aa1903e0    mov x0, x25
   9f2b4:   94001dbf    bl  a69b0 <strncpy>
   9f2b8:   3920eabf    strb    wzr, [x21, #2106]
   9f2bc:   17ffffa1    b   9f140 <CKernelOptions::CKernelOptions()+0xe0>
   9f2c0:   900000a1    adrp    x1, b3000 <_etext+0x3f9c>
   9f2c4:   91048021    add x1, x1, #0x120
   9f2c8:   aa1403e0    mov x0, x20
   9f2cc:   94001d29    bl  a6770 <strcmp>
   9f2d0:   35000120    cbnz    w0, 9f2f4 <CKernelOptions::CKernelOptions()+0x294>
   9f2d4:   900000a1    adrp    x1, b3000 <_etext+0x3f9c>
   9f2d8:   9104c021    add x1, x1, #0x130
   9f2dc:   aa1303e0    mov x0, x19
   9f2e0:   94001d24    bl  a6770 <strcmp>
   9f2e4:   35fff2e0    cbnz    w0, 9f140 <CKernelOptions::CKernelOptions()+0xe0>
   9f2e8:   52800020    mov w0, #0x1
   9f2ec:   392102a0    strb    w0, [x21, #2112]
   9f2f0:   17ffff94    b   9f140 <CKernelOptions::CKernelOptions()+0xe0>
   9f2f4:   900000a1    adrp    x1, b3000 <_etext+0x3f9c>
   9f2f8:   9104e021    add x1, x1, #0x138
   9f2fc:   aa1403e0    mov x0, x20
   9f300:   94001d1c    bl  a6770 <strcmp>
   9f304:   35000120    cbnz    w0, 9f328 <CKernelOptions::CKernelOptions()+0x2c8>
   9f308:   900000a1    adrp    x1, b3000 <_etext+0x3f9c>
   9f30c:   91052021    add x1, x1, #0x148
   9f310:   aa1303e0    mov x0, x19
   9f314:   94001d17    bl  a6770 <strcmp>
   9f318:   35fff140    cbnz    w0, 9f140 <CKernelOptions::CKernelOptions()+0xe0>
   9f31c:   52800020    mov w0, #0x1
   9f320:   392106a0    strb    w0, [x21, #2113]
   9f324:   17ffff87    b   9f140 <CKernelOptions::CKernelOptions()+0xe0>
   9f328:   900000a1    adrp    x1, b3000 <_etext+0x3f9c>
   9f32c:   91054021    add x1, x1, #0x150
   9f330:   aa1403e0    mov x0, x20
   9f334:   94001d0f    bl  a6770 <strcmp>
   9f338:   350000e0    cbnz    w0, 9f354 <CKernelOptions::CKernelOptions()+0x2f4>
   9f33c:   aa1303e1    mov x1, x19
   9f340:   d2800262    mov x2, #0x13
   9f344:   91210aa0    add x0, x21, #0x842
   9f348:   94001d9a    bl  a69b0 <strncpy>
   9f34c:   392156bf    strb    wzr, [x21, #2133]
   9f350:   17ffff7c    b   9f140 <CKernelOptions::CKernelOptions()+0xe0>
   9f354:   900000a1    adrp    x1, b3000 <_etext+0x3f9c>
   9f358:   91058021    add x1, x1, #0x160
   9f35c:   aa1403e0    mov x0, x20
   9f360:   94001d04    bl  a6770 <strcmp>
   9f364:   35000100    cbnz    w0, 9f384 <CKernelOptions::CKernelOptions()+0x324>
   9f368:   aa1303e0    mov x0, x19
   9f36c:   52800042    mov w2, #0x2
   9f370:   912162a1    add x1, x21, #0x858
   9f374:   97ffff03    bl  9ef80 <CKernelOptions::GetDecimals(char*, unsigned int*, unsigned int)>
   9f378:   3707ee40    tbnz    w0, #0, 9f140 <CKernelOptions::CKernelOptions()+0xe0>
   9f37c:   f9042ebf    str xzr, [x21, #2136]
   9f380:   17ffff70    b   9f140 <CKernelOptions::CKernelOptions()+0xe0>
   9f384:   900000a1    adrp    x1, b3000 <_etext+0x3f9c>
   9f388:   9105e021    add x1, x1, #0x178
   9f38c:   aa1403e0    mov x0, x20
   9f390:   94001cf8    bl  a6770 <strcmp>
   9f394:   350000e0    cbnz    w0, 9f3b0 <CKernelOptions::CKernelOptions()+0x350>
   9f398:   aa1303e1    mov x1, x19
   9f39c:   d2800262    mov x2, #0x13
   9f3a0:   912182a0    add x0, x21, #0x860
   9f3a4:   94001d83    bl  a69b0 <strncpy>
   9f3a8:   3921cebf    strb    wzr, [x21, #2163]
   9f3ac:   17ffff65    b   9f140 <CKernelOptions::CKernelOptions()+0xe0>
   9f3b0:   900000a1    adrp    x1, b3000 <_etext+0x3f9c>
   9f3b4:   91062021    add x1, x1, #0x188
   9f3b8:   aa1403e0    mov x0, x20
   9f3bc:   94001ced    bl  a6770 <strcmp>
   9f3c0:   35000160    cbnz    w0, 9f3ec <CKernelOptions::CKernelOptions()+0x38c>
   9f3c4:   aa1303e0    mov x0, x19
   9f3c8:   97fffeb6    bl  9eea0 <CKernelOptions::GetDecimal(char const*)>
   9f3cc:   7100601f    cmp w0, #0x18
   9f3d0:   54ffeb88    b.hi    9f140 <CKernelOptions::CKernelOptions()+0xe0>
   9f3d4:   d28000e1    mov x1, #0x7
   9f3d8:   f2a02021    movk    x1, #0x101, lsl #16
   9f3dc:   9ac02421    lsr x1, x1, x0
   9f3e0:   3607eb01    tbz w1, #0, 9f140 <CKernelOptions::CKernelOptions()+0xe0>
   9f3e4:   b90876a0    str w0, [x21, #2164]
   9f3e8:   17ffff56    b   9f140 <CKernelOptions::CKernelOptions()+0xe0>
   9f3ec:   900000a1    adrp    x1, b3000 <_etext+0x3f9c>
   9f3f0:   91066021    add x1, x1, #0x198
   9f3f4:   aa1403e0    mov x0, x20
   9f3f8:   94001cde    bl  a6770 <strcmp>
   9f3fc:   35000120    cbnz    w0, 9f420 <CKernelOptions::CKernelOptions()+0x3c0>
   9f400:   900000a1    adrp    x1, b3000 <_etext+0x3f9c>
   9f404:   91052021    add x1, x1, #0x148
   9f408:   aa1303e0    mov x0, x19
   9f40c:   94001cd9    bl  a6770 <strcmp>
   9f410:   35ffe980    cbnz    w0, 9f140 <CKernelOptions::CKernelOptions()+0xe0>
   9f414:   52800020    mov w0, #0x1
   9f418:   b9087aa0    str w0, [x21, #2168]
   9f41c:   17ffff49    b   9f140 <CKernelOptions::CKernelOptions()+0xe0>
   9f420:   900000a1    adrp    x1, b3000 <_etext+0x3f9c>
   9f424:   91068021    add x1, x1, #0x1a0
   9f428:   aa1403e0    mov x0, x20
   9f42c:   94001cd1    bl  a6770 <strcmp>
   9f430:   35000100    cbnz    w0, 9f450 <CKernelOptions::CKernelOptions()+0x3f0>
   9f434:   aa1303e0    mov x0, x19
   9f438:   97fffe9a    bl  9eea0 <CKernelOptions::GetDecimal(char const*)>
   9f43c:   5100a001    sub w1, w0, #0x28
   9f440:   7100983f    cmp w1, #0x26
   9f444:   54ffe7e8    b.hi    9f140 <CKernelOptions::CKernelOptions()+0xe0>
   9f448:   b9087ea0    str w0, [x21, #2172]
   9f44c:   17ffff3d    b   9f140 <CKernelOptions::CKernelOptions()+0xe0>
   9f450:   900000a1    adrp    x1, b3000 <_etext+0x3f9c>
   9f454:   9106c021    add x1, x1, #0x1b0
   9f458:   aa1403e0    mov x0, x20
   9f45c:   94001cc5    bl  a6770 <strcmp>
   9f460:   35000100    cbnz    w0, 9f480 <CKernelOptions::CKernelOptions()+0x420>
   9f464:   aa1303e0    mov x0, x19
   9f468:   97fffe8e    bl  9eea0 <CKernelOptions::GetDecimal(char const*)>
   9f46c:   51000801    sub w1, w0, #0x2
   9f470:   7100643f    cmp w1, #0x19
   9f474:   54ffe668    b.hi    9f140 <CKernelOptions::CKernelOptions()+0xe0>
   9f478:   b90882a0    str w0, [x21, #2176]
   9f47c:   17ffff31    b   9f140 <CKernelOptions::CKernelOptions()+0xe0>
   9f480:   900000a1    adrp    x1, b3000 <_etext+0x3f9c>
   9f484:   91070021    add x1, x1, #0x1c0
   9f488:   aa1403e0    mov x0, x20
   9f48c:   94001cb9    bl  a6770 <strcmp>
   9f490:   350000e0    cbnz    w0, 9f4ac <CKernelOptions::CKernelOptions()+0x44c>
   9f494:   aa1303e0    mov x0, x19
   9f498:   52800082    mov w2, #0x4
   9f49c:   912222a1    add x1, x21, #0x888
   9f4a0:   97fffeb8    bl  9ef80 <CKernelOptions::GetDecimals(char*, unsigned int*, unsigned int)>
   9f4a4:   392212a0    strb    w0, [x21, #2180]
   9f4a8:   17ffff26    b   9f140 <CKernelOptions::CKernelOptions()+0xe0>
   9f4ac:   d2800300    mov x0, #0x18
   9f4b0:   940020c4    bl  a77c0 <operator new(unsigned long)>
   9f4b4:   aa0003fa    mov x26, x0
   9f4b8:   aa1403e0    mov x0, x20
   9f4bc:   94001ca1    bl  a6740 <strlen>
   9f4c0:   91000400    add x0, x0, #0x1
   9f4c4:   940020c7    bl  a77e0 <operator new[](unsigned long)>
   9f4c8:   aa1403e1    mov x1, x20
   9f4cc:   f9000740    str x0, [x26, #8]
   9f4d0:   94001d2c    bl  a6980 <strcpy>
   9f4d4:   aa1303e0    mov x0, x19
   9f4d8:   94001c9a    bl  a6740 <strlen>
   9f4dc:   91000400    add x0, x0, #0x1
   9f4e0:   940020c0    bl  a77e0 <operator new[](unsigned long)>
   9f4e4:   aa1303e1    mov x1, x19
   9f4e8:   f9000b40    str x0, [x26, #16]
   9f4ec:   94001d25    bl  a6980 <strcpy>
   9f4f0:   f9444ea0    ldr x0, [x21, #2200]
   9f4f4:   f9044eba    str x26, [x21, #2200]
   9f4f8:   f9000340    str x0, [x26]
   9f4fc:   17ffff11    b   9f140 <CKernelOptions::CKernelOptions()+0xe0>

000000000009f500 <CLogger::CLogger(unsigned int, CTimer*, bool)>:
   9f500:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9f504:   910003fd    mov x29, sp
   9f508:   52800024    mov w4, #0x1
   9f50c:   f9000bf3    str x19, [sp, #16]
   9f510:   aa0003f3    mov x19, x0
   9f514:   d2880000    mov x0, #0x4000
   9f518:   b9000261    str w1, [x19]
   9f51c:   f9000662    str x2, [x19, #8]
   9f520:   39004263    strb    w3, [x19, #16]
   9f524:   a901fe7f    stp xzr, xzr, [x19, #24]
   9f528:   f900167f    str xzr, [x19, #40]
   9f52c:   b9003264    str w4, [x19, #48]
   9f530:   f900e67f    str xzr, [x19, #456]
   9f534:   b901d264    str w4, [x19, #464]
   9f538:   a91dfe7f    stp xzr, xzr, [x19, #472]
   9f53c:   940020a9    bl  a77e0 <operator new[](unsigned long)>
   9f540:   f00000c1    adrp    x1, ba000 <font_data+0x1080>
   9f544:   f9001260    str x0, [x19, #32]
   9f548:   f904b833    str x19, [x1, #2416]
   9f54c:   f9400bf3    ldr x19, [sp, #16]
   9f550:   a8c27bfd    ldp x29, x30, [sp], #32
   9f554:   d65f03c0    ret
   9f558:   d503201f    nop
   9f55c:   d503201f    nop

000000000009f560 <CLogger::~CLogger()>:
   9f560:   f00000c1    adrp    x1, ba000 <font_data+0x1080>
   9f564:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9f568:   910003fd    mov x29, sp
   9f56c:   f904b83f    str xzr, [x1, #2416]
   9f570:   b941c803    ldr w3, [x0, #456]
   9f574:   b941cc02    ldr w2, [x0, #460]
   9f578:   f9000bf3    str x19, [sp, #16]
   9f57c:   aa0003f3    mov x19, x0
   9f580:   1400000a    b   9f5a8 <CLogger::~CLogger()+0x48>
   9f584:   f9401c00    ldr x0, [x0, #56]
   9f588:   b4000080    cbz x0, 9f598 <CLogger::~CLogger()+0x38>
   9f58c:   940020b5    bl  a7860 <operator delete(void*, unsigned long)>
   9f590:   b941ca63    ldr w3, [x19, #456]
   9f594:   b941ce62    ldr w2, [x19, #460]
   9f598:   11000442    add w2, w2, #0x1
   9f59c:   7100c85f    cmp w2, #0x32
   9f5a0:   b901ce62    str w2, [x19, #460]
   9f5a4:   54000140    b.eq    9f5cc <CLogger::~CLogger()+0x6c>
   9f5a8:   6b03005f    cmp w2, w3
   9f5ac:   d2802201    mov x1, #0x110
   9f5b0:   8b224e60    add x0, x19, w2, uxtw #3
   9f5b4:   54fffe81    b.ne    9f584 <CLogger::~CLogger()+0x24>
   9f5b8:   f9401260    ldr x0, [x19, #32]
   9f5bc:   b40000e0    cbz x0, 9f5d8 <CLogger::~CLogger()+0x78>
   9f5c0:   f9400bf3    ldr x19, [sp, #16]
   9f5c4:   a8c27bfd    ldp x29, x30, [sp], #32
   9f5c8:   1400209a    b   a7830 <operator delete[](void*)>
   9f5cc:   52800002    mov w2, #0x0
   9f5d0:   b901ce7f    str wzr, [x19, #460]
   9f5d4:   17fffff5    b   9f5a8 <CLogger::~CLogger()+0x48>
   9f5d8:   f9400bf3    ldr x19, [sp, #16]
   9f5dc:   a8c27bfd    ldp x29, x30, [sp], #32
   9f5e0:   d65f03c0    ret
   9f5e4:   d503201f    nop
   9f5e8:   d503201f    nop
   9f5ec:   d503201f    nop

000000000009f5f0 <CLogger::SetNewTarget(CDevice*)>:
   9f5f0:   f9000c01    str x1, [x0, #24]
   9f5f4:   d65f03c0    ret
   9f5f8:   d503201f    nop
   9f5fc:   d503201f    nop

000000000009f600 <CLogger::Get()>:
   9f600:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9f604:   910003fd    mov x29, sp
   9f608:   a90153f3    stp x19, x20, [sp, #16]
   9f60c:   f00000d4    adrp    x20, ba000 <font_data+0x1080>
   9f610:   f944ba93    ldr x19, [x20, #2416]
   9f614:   b40000b3    cbz x19, 9f628 <CLogger::Get()+0x28>
   9f618:   aa1303e0    mov x0, x19
   9f61c:   a94153f3    ldp x19, x20, [sp, #16]
   9f620:   a8c27bfd    ldp x29, x30, [sp], #32
   9f624:   d65f03c0    ret
   9f628:   d2803d00    mov x0, #0x1e8
   9f62c:   94002065    bl  a77c0 <operator new(unsigned long)>
   9f630:   aa0003f3    mov x19, x0
   9f634:   52800021    mov w1, #0x1
   9f638:   52800022    mov w2, #0x1
   9f63c:   d2880000    mov x0, #0x4000
   9f640:   b900027f    str wzr, [x19]
   9f644:   f900067f    str xzr, [x19, #8]
   9f648:   39004262    strb    w2, [x19, #16]
   9f64c:   a901fe7f    stp xzr, xzr, [x19, #24]
   9f650:   f900167f    str xzr, [x19, #40]
   9f654:   b9003261    str w1, [x19, #48]
   9f658:   f900e67f    str xzr, [x19, #456]
   9f65c:   b901d261    str w1, [x19, #464]
   9f660:   a91dfe7f    stp xzr, xzr, [x19, #472]
   9f664:   9400205f    bl  a77e0 <operator new[](unsigned long)>
   9f668:   f904ba93    str x19, [x20, #2416]
   9f66c:   f9001260    str x0, [x19, #32]
   9f670:   aa1303e0    mov x0, x19
   9f674:   a94153f3    ldp x19, x20, [sp, #16]
   9f678:   a8c27bfd    ldp x29, x30, [sp], #32
   9f67c:   d65f03c0    ret

000000000009f680 <CLogger::Write(char const*)>:
   9f680:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   9f684:   910003fd    mov x29, sp
   9f688:   a90153f3    stp x19, x20, [sp, #16]
   9f68c:   aa0003f3    mov x19, x0
   9f690:   aa0103e0    mov x0, x1
   9f694:   aa0103f4    mov x20, x1
   9f698:   f90013f5    str x21, [sp, #32]
   9f69c:   94001c29    bl  a6740 <strlen>
   9f6a0:   aa0003f5    mov x21, x0
   9f6a4:   f9400e60    ldr x0, [x19, #24]
   9f6a8:   b40000c0    cbz x0, 9f6c0 <CLogger::Write(char const*)+0x40>
   9f6ac:   f9400003    ldr x3, [x0]
   9f6b0:   aa1503e2    mov x2, x21
   9f6b4:   aa1403e1    mov x1, x20
   9f6b8:   f9400c63    ldr x3, [x3, #24]
   9f6bc:   d63f0060    blr x3
   9f6c0:   b9403260    ldr w0, [x19, #48]
   9f6c4:   350004a0    cbnz    w0, 9f758 <CLogger::Write(char const*)+0xd8>
   9f6c8:   b4000395    cbz x21, 9f738 <CLogger::Write(char const*)+0xb8>
   9f6cc:   aa1403e4    mov x4, x20
   9f6d0:   14000004    b   9f6e0 <CLogger::Write(char const*)+0x60>
   9f6d4:   cb040283    sub x3, x20, x4
   9f6d8:   ab15007f    cmn x3, x21
   9f6dc:   540002a0    b.eq    9f730 <CLogger::Write(char const*)+0xb0>
   9f6e0:   38c01483    ldrsb   w3, [x4], #1
   9f6e4:   7100347f    cmp w3, #0xd
   9f6e8:   54ffff60    b.eq    9f6d4 <CLogger::Write(char const*)+0x54>
   9f6ec:   f9401266    ldr x6, [x19, #32]
   9f6f0:   b9402a65    ldr w5, [x19, #40]
   9f6f4:   382568c3    strb    w3, [x6, x5]
   9f6f8:   29451663    ldp w3, w5, [x19, #40]
   9f6fc:   11000463    add w3, w3, #0x1
   9f700:   12003463    and w3, w3, #0x3fff
   9f704:   6b05007f    cmp w3, w5
   9f708:   b9002a63    str w3, [x19, #40]
   9f70c:   54fffe41    b.ne    9f6d4 <CLogger::Write(char const*)+0x54>
   9f710:   11000465    add w5, w3, #0x1
   9f714:   39404260    ldrb    w0, [x19, #16]
   9f718:   120034a5    and w5, w5, #0x3fff
   9f71c:   36000240    tbz w0, #0, 9f764 <CLogger::Write(char const*)+0xe4>
   9f720:   cb040283    sub x3, x20, x4
   9f724:   b9002e65    str w5, [x19, #44]
   9f728:   ab15007f    cmn x3, x21
   9f72c:   54fffda1    b.ne    9f6e0 <CLogger::Write(char const*)+0x60>
   9f730:   b9403260    ldr w0, [x19, #48]
   9f734:   350000a0    cbnz    w0, 9f748 <CLogger::Write(char const*)+0xc8>
   9f738:   a94153f3    ldp x19, x20, [sp, #16]
   9f73c:   f94013f5    ldr x21, [sp, #32]
   9f740:   a8c37bfd    ldp x29, x30, [sp], #48
   9f744:   d65f03c0    ret
   9f748:   a94153f3    ldp x19, x20, [sp, #16]
   9f74c:   f94013f5    ldr x21, [sp, #32]
   9f750:   a8c37bfd    ldp x29, x30, [sp], #48
   9f754:   140023f7    b   a8730 <LeaveCritical>
   9f758:   940023c6    bl  a8670 <EnterCritical>
   9f75c:   b5fffb95    cbnz    x21, 9f6cc <CLogger::Write(char const*)+0x4c>
   9f760:   17fffff4    b   9f730 <CLogger::Write(char const*)+0xb0>
   9f764:   51000461    sub w1, w3, #0x1
   9f768:   b9403260    ldr w0, [x19, #48]
   9f76c:   12003421    and w1, w1, #0x3fff
   9f770:   b9002a61    str w1, [x19, #40]
   9f774:   34fffe20    cbz w0, 9f738 <CLogger::Write(char const*)+0xb8>
   9f778:   17fffff4    b   9f748 <CLogger::Write(char const*)+0xc8>
   9f77c:   d503201f    nop

000000000009f780 <CLogger::WriteNoAlloc(char const*, TLogSeverity, char const*)>:
   9f780:   a9b07bfd    stp x29, x30, [sp, #-256]!
   9f784:   910003fd    mov x29, sp
   9f788:   a90153f3    stp x19, x20, [sp, #16]
   9f78c:   aa0003f3    mov x19, x0
   9f790:   b9400000    ldr w0, [x0]
   9f794:   6b02001f    cmp w0, w2
   9f798:   540002c3    b.cc    9f7f0 <CLogger::WriteNoAlloc(char const*, TLogSeverity, char const*)+0x70>
   9f79c:   a9025bf5    stp x21, x22, [sp, #32]
   9f7a0:   aa0303f4    mov x20, x3
   9f7a4:   3900e3ff    strb    wzr, [sp, #56]
   9f7a8:   340002a2    cbz w2, 9f7fc <CLogger::WriteNoAlloc(char const*, TLogSeverity, char const*)+0x7c>
   9f7ac:   9100e3e0    add x0, sp, #0x38
   9f7b0:   b00000d5    adrp    x21, b8000 <vtable for CGPIOPin+0x288>
   9f7b4:   910342b5    add x21, x21, #0xd0
   9f7b8:   94001c8a    bl  a69e0 <strcat>
   9f7bc:   910022a1    add x1, x21, #0x8
   9f7c0:   9100e3e0    add x0, sp, #0x38
   9f7c4:   94001c87    bl  a69e0 <strcat>
   9f7c8:   aa1403e1    mov x1, x20
   9f7cc:   9100e3e0    add x0, sp, #0x38
   9f7d0:   94001c84    bl  a69e0 <strcat>
   9f7d4:   910062a1    add x1, x21, #0x18
   9f7d8:   9100e3e0    add x0, sp, #0x38
   9f7dc:   94001c81    bl  a69e0 <strcat>
   9f7e0:   9100e3e1    add x1, sp, #0x38
   9f7e4:   aa1303e0    mov x0, x19
   9f7e8:   97ffffa6    bl  9f680 <CLogger::Write(char const*)>
   9f7ec:   a9425bf5    ldp x21, x22, [sp, #32]
   9f7f0:   a94153f3    ldp x19, x20, [sp, #16]
   9f7f4:   a8d07bfd    ldp x29, x30, [sp], #256
   9f7f8:   d65f03c0    ret
   9f7fc:   b00000d6    adrp    x22, b8000 <vtable for CGPIOPin+0x288>
   9f800:   910342d6    add x22, x22, #0xd0
   9f804:   aa0103f5    mov x21, x1
   9f808:   9100e3e0    add x0, sp, #0x38
   9f80c:   aa1603e1    mov x1, x22
   9f810:   94001c5c    bl  a6980 <strcpy>
   9f814:   aa1503e1    mov x1, x21
   9f818:   9100e3e0    add x0, sp, #0x38
   9f81c:   94001c71    bl  a69e0 <strcat>
   9f820:   910022c1    add x1, x22, #0x8
   9f824:   9100e3e0    add x0, sp, #0x38
   9f828:   94001c6e    bl  a69e0 <strcat>
   9f82c:   aa1403e1    mov x1, x20
   9f830:   9100e3e0    add x0, sp, #0x38
   9f834:   94001c6b    bl  a69e0 <strcat>
   9f838:   910042c1    add x1, x22, #0x10
   9f83c:   9100e3e0    add x0, sp, #0x38
   9f840:   94001c68    bl  a69e0 <strcat>
   9f844:   910062c1    add x1, x22, #0x18
   9f848:   9100e3e0    add x0, sp, #0x38
   9f84c:   94001c65    bl  a69e0 <strcat>
   9f850:   9100e3e1    add x1, sp, #0x38
   9f854:   aa1303e0    mov x0, x19
   9f858:   97ffff8a    bl  9f680 <CLogger::Write(char const*)>
   9f85c:   52801fe0    mov w0, #0xff
   9f860:   94001754    bl  a55b0 <set_qemu_exit_status>
   9f864:   94001757    bl  a55c0 <halt>
   9f868:   d503201f    nop
   9f86c:   d503201f    nop

000000000009f870 <CLogger::Read(void*, unsigned int, bool)>:
   9f870:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   9f874:   910003fd    mov x29, sp
   9f878:   a90153f3    stp x19, x20, [sp, #16]
   9f87c:   aa0003f4    mov x20, x0
   9f880:   2a0203f3    mov w19, w2
   9f884:   b9403000    ldr w0, [x0, #48]
   9f888:   a9025bf5    stp x21, x22, [sp, #32]
   9f88c:   aa0103f5    mov x21, x1
   9f890:   12001c76    and w22, w3, #0xff
   9f894:   35000500    cbnz    w0, 9f934 <CLogger::Read(void*, unsigned int, bool)+0xc4>
   9f898:   29451280    ldp w0, w4, [x20, #40]
   9f89c:   6b04001f    cmp w0, w4
   9f8a0:   54000580    b.eq    9f950 <CLogger::Read(void*, unsigned int, bool)+0xe0>
   9f8a4:   2a1303e6    mov w6, w19
   9f8a8:   d2800002    mov x2, #0x0
   9f8ac:   14000009    b   9f8d0 <CLogger::Read(void*, unsigned int, bool)+0x60>
   9f8b0:   f9401285    ldr x5, [x20, #32]
   9f8b4:   38e448a5    ldrsb   w5, [x5, w4, uxtw]
   9f8b8:   12003404    and w4, w0, #0x3fff
   9f8bc:   38226aa5    strb    w5, [x21, x2]
   9f8c0:   91000442    add x2, x2, #0x1
   9f8c4:   b9402a80    ldr w0, [x20, #40]
   9f8c8:   6b04001f    cmp w0, w4
   9f8cc:   540002e0    b.eq    9f928 <CLogger::Read(void*, unsigned int, bool)+0xb8>
   9f8d0:   eb06005f    cmp x2, x6
   9f8d4:   11000480    add w0, w4, #0x1
   9f8d8:   2a0203e1    mov w1, w2
   9f8dc:   54fffea1    b.ne    9f8b0 <CLogger::Read(void*, unsigned int, bool)+0x40>
   9f8e0:   2a0203f3    mov w19, w2
   9f8e4:   37000116    tbnz    w22, #0, 9f904 <CLogger::Read(void*, unsigned int, bool)+0x94>
   9f8e8:   b9403280    ldr w0, [x20, #48]
   9f8ec:   35000120    cbnz    w0, 9f910 <CLogger::Read(void*, unsigned int, bool)+0xa0>
   9f8f0:   a9425bf5    ldp x21, x22, [sp, #32]
   9f8f4:   2a1303e0    mov w0, w19
   9f8f8:   a94153f3    ldp x19, x20, [sp, #16]
   9f8fc:   a8c37bfd    ldp x29, x30, [sp], #48
   9f900:   d65f03c0    ret
   9f904:   b9403280    ldr w0, [x20, #48]
   9f908:   b9002e84    str w4, [x20, #44]
   9f90c:   34ffff20    cbz w0, 9f8f0 <CLogger::Read(void*, unsigned int, bool)+0x80>
   9f910:   94002388    bl  a8730 <LeaveCritical>
   9f914:   a9425bf5    ldp x21, x22, [sp, #32]
   9f918:   2a1303e0    mov w0, w19
   9f91c:   a94153f3    ldp x19, x20, [sp, #16]
   9f920:   a8c37bfd    ldp x29, x30, [sp], #48
   9f924:   d65f03c0    ret
   9f928:   11000433    add w19, w1, #0x1
   9f92c:   3607fdf6    tbz w22, #0, 9f8e8 <CLogger::Read(void*, unsigned int, bool)+0x78>
   9f930:   17fffff5    b   9f904 <CLogger::Read(void*, unsigned int, bool)+0x94>
   9f934:   9400234f    bl  a8670 <EnterCritical>
   9f938:   29451280    ldp w0, w4, [x20, #40]
   9f93c:   6b04001f    cmp w0, w4
   9f940:   54fffb21    b.ne    9f8a4 <CLogger::Read(void*, unsigned int, bool)+0x34>
   9f944:   b9403280    ldr w0, [x20, #48]
   9f948:   34000040    cbz w0, 9f950 <CLogger::Read(void*, unsigned int, bool)+0xe0>
   9f94c:   94002379    bl  a8730 <LeaveCritical>
   9f950:   12800013    mov w19, #0xffffffff
   9f954:   17ffffe7    b   9f8f0 <CLogger::Read(void*, unsigned int, bool)+0x80>
   9f958:   d503201f    nop
   9f95c:   d503201f    nop

000000000009f960 <CLogger::WriteEvent(char const*, TLogSeverity, char const*)>:
   9f960:   a9bb7bfd    stp x29, x30, [sp, #-80]!
   9f964:   910003fd    mov x29, sp
   9f968:   a90153f3    stp x19, x20, [sp, #16]
   9f96c:   aa0003f3    mov x19, x0
   9f970:   d2802200    mov x0, #0x110
   9f974:   aa0103f4    mov x20, x1
   9f978:   a9025bf5    stp x21, x22, [sp, #32]
   9f97c:   2a0203f6    mov w22, w2
   9f980:   aa0303f5    mov x21, x3
   9f984:   94001f8f    bl  a77c0 <operator new(unsigned long)>
   9f988:   aa1403e1    mov x1, x20
   9f98c:   d2800642    mov x2, #0x32
   9f990:   aa0003f4    mov x20, x0
   9f994:   b8004416    str w22, [x0], #4
   9f998:   94001c06    bl  a69b0 <strncpy>
   9f99c:   aa1503e1    mov x1, x21
   9f9a0:   9100da80    add x0, x20, #0x36
   9f9a4:   3900d69f    strb    wzr, [x20, #53]
   9f9a8:   d2801902    mov x2, #0xc8
   9f9ac:   94001c01    bl  a69b0 <strncpy>
   9f9b0:   f9400660    ldr x0, [x19, #8]
   9f9b4:   3903f69f    strb    wzr, [x20, #253]
   9f9b8:   b40000a0    cbz x0, 9f9cc <CLogger::WriteEvent(char const*, TLogSeverity, char const*)+0x6c>
   9f9bc:   910133e2    add x2, sp, #0x4c
   9f9c0:   910123e1    add x1, sp, #0x48
   9f9c4:   94001803    bl  a59d0 <CTimer::GetLocalTime(unsigned int*, unsigned int*)>
   9f9c8:   37000680    tbnz    w0, #0, 9fa98 <CLogger::WriteEvent(char const*, TLogSeverity, char const*)+0x138>
   9f9cc:   52800000    mov w0, #0x0
   9f9d0:   f900829f    str xzr, [x20, #256]
   9f9d4:   b9010a9f    str wzr, [x20, #264]
   9f9d8:   b941d262    ldr w2, [x19, #464]
   9f9dc:   b9010e80    str w0, [x20, #268]
   9f9e0:   35000542    cbnz    w2, 9fa88 <CLogger::WriteEvent(char const*, TLogSeverity, char const*)+0x128>
   9f9e4:   b941ca61    ldr w1, [x19, #456]
   9f9e8:   8b214e60    add x0, x19, w1, uxtw #3
   9f9ec:   b941ce63    ldr w3, [x19, #460]
   9f9f0:   f9001c14    str x20, [x0, #56]
   9f9f4:   7100c43f    cmp w1, #0x31
   9f9f8:   11000420    add w0, w1, #0x1
   9f9fc:   54000320    b.eq    9fa60 <CLogger::WriteEvent(char const*, TLogSeverity, char const*)+0x100>
   9fa00:   6b03001f    cmp w0, w3
   9fa04:   b901ca60    str w0, [x19, #456]
   9fa08:   54000120    b.eq    9fa2c <CLogger::WriteEvent(char const*, TLogSeverity, char const*)+0xcc>
   9fa0c:   35000262    cbnz    w2, 9fa58 <CLogger::WriteEvent(char const*, TLogSeverity, char const*)+0xf8>
   9fa10:   f940ee60    ldr x0, [x19, #472]
   9fa14:   b4000040    cbz x0, 9fa1c <CLogger::WriteEvent(char const*, TLogSeverity, char const*)+0xbc>
   9fa18:   d63f0000    blr x0
   9fa1c:   a94153f3    ldp x19, x20, [sp, #16]
   9fa20:   a9425bf5    ldp x21, x22, [sp, #32]
   9fa24:   a8c57bfd    ldp x29, x30, [sp], #80
   9fa28:   d65f03c0    ret
   9fa2c:   7100c03f    cmp w1, #0x30
   9fa30:   8b204e60    add x0, x19, w0, uxtw #3
   9fa34:   f9401c00    ldr x0, [x0, #56]
   9fa38:   11000821    add w1, w1, #0x2
   9fa3c:   1a9f1021    csel    w1, w1, wzr, ne
   9fa40:   b901ce61    str w1, [x19, #460]
   9fa44:   350001a2    cbnz    w2, 9fa78 <CLogger::WriteEvent(char const*, TLogSeverity, char const*)+0x118>
   9fa48:   b4fffe40    cbz x0, 9fa10 <CLogger::WriteEvent(char const*, TLogSeverity, char const*)+0xb0>
   9fa4c:   d2802201    mov x1, #0x110
   9fa50:   94001f84    bl  a7860 <operator delete(void*, unsigned long)>
   9fa54:   17ffffef    b   9fa10 <CLogger::WriteEvent(char const*, TLogSeverity, char const*)+0xb0>
   9fa58:   94002336    bl  a8730 <LeaveCritical>
   9fa5c:   17ffffed    b   9fa10 <CLogger::WriteEvent(char const*, TLogSeverity, char const*)+0xb0>
   9fa60:   b901ca7f    str wzr, [x19, #456]
   9fa64:   35fffd43    cbnz    w3, 9fa0c <CLogger::WriteEvent(char const*, TLogSeverity, char const*)+0xac>
   9fa68:   52800021    mov w1, #0x1
   9fa6c:   f9401e60    ldr x0, [x19, #56]
   9fa70:   b901ce61    str w1, [x19, #460]
   9fa74:   34fffea2    cbz w2, 9fa48 <CLogger::WriteEvent(char const*, TLogSeverity, char const*)+0xe8>
   9fa78:   f9001fe0    str x0, [sp, #56]
   9fa7c:   9400232d    bl  a8730 <LeaveCritical>
   9fa80:   f9401fe0    ldr x0, [sp, #56]
   9fa84:   17fffff1    b   9fa48 <CLogger::WriteEvent(char const*, TLogSeverity, char const*)+0xe8>
   9fa88:   2a0203e0    mov w0, w2
   9fa8c:   940022f9    bl  a8670 <EnterCritical>
   9fa90:   b941d262    ldr w2, [x19, #464]
   9fa94:   17ffffd4    b   9f9e4 <CLogger::WriteEvent(char const*, TLogSeverity, char const*)+0x84>
   9fa98:   294907e2    ldp w2, w1, [sp, #72]
   9fa9c:   5282eb23    mov w3, #0x1759
   9faa0:   72ba36e3    movk    w3, #0xd1b7, lsl #16
   9faa4:   f9400660    ldr x0, [x19, #8]
   9faa8:   9ba37c21    umull   x1, w1, w3
   9faac:   f9008282    str x2, [x20, #256]
   9fab0:   d36dfc21    lsr x1, x1, #45
   9fab4:   b9010a81    str w1, [x20, #264]
   9fab8:   94001786    bl  a58d0 <CTimer::GetTimeZone() const>
   9fabc:   17ffffc7    b   9f9d8 <CLogger::WriteEvent(char const*, TLogSeverity, char const*)+0x78>

000000000009fac0 <CLogger::ReadEvent(TLogSeverity*, char*, char*, long*, unsigned int*, int*)>:
   9fac0:   a9bb7bfd    stp x29, x30, [sp, #-80]!
   9fac4:   910003fd    mov x29, sp
   9fac8:   a90153f3    stp x19, x20, [sp, #16]
   9facc:   aa0003f3    mov x19, x0
   9fad0:   b941d000    ldr w0, [x0, #464]
   9fad4:   a9025bf5    stp x21, x22, [sp, #32]
   9fad8:   aa0103f5    mov x21, x1
   9fadc:   aa0203f6    mov x22, x2
   9fae0:   a90363f7    stp x23, x24, [sp, #48]
   9fae4:   aa0303f7    mov x23, x3
   9fae8:   aa0403f8    mov x24, x4
   9faec:   a9046bf9    stp x25, x26, [sp, #64]
   9faf0:   aa0503f9    mov x25, x5
   9faf4:   aa0603fa    mov x26, x6
   9faf8:   35000440    cbnz    w0, 9fb80 <CLogger::ReadEvent(TLogSeverity*, char*, char*, long*, unsigned int*, int*)+0xc0>
   9fafc:   b941ca60    ldr w0, [x19, #456]
   9fb00:   b941ce67    ldr w7, [x19, #460]
   9fb04:   6b07001f    cmp w0, w7
   9fb08:   540005e0    b.eq    9fbc4 <CLogger::ReadEvent(TLogSeverity*, char*, char*, long*, unsigned int*, int*)+0x104>
   9fb0c:   8b274e60    add x0, x19, w7, uxtw #3
   9fb10:   f9401c14    ldr x20, [x0, #56]
   9fb14:   7100c4ff    cmp w7, #0x31
   9fb18:   1a8707e7    csinc   w7, wzr, w7, eq
   9fb1c:   b901ce67    str w7, [x19, #460]
   9fb20:   aa1403e1    mov x1, x20
   9fb24:   aa1603e0    mov x0, x22
   9fb28:   b8404422    ldr w2, [x1], #4
   9fb2c:   b90002a2    str w2, [x21]
   9fb30:   94001b94    bl  a6980 <strcpy>
   9fb34:   9100da81    add x1, x20, #0x36
   9fb38:   aa1703e0    mov x0, x23
   9fb3c:   94001b91    bl  a6980 <strcpy>
   9fb40:   f9408283    ldr x3, [x20, #256]
   9fb44:   aa1403e0    mov x0, x20
   9fb48:   d2802201    mov x1, #0x110
   9fb4c:   b9410a82    ldr w2, [x20, #264]
   9fb50:   f9000303    str x3, [x24]
   9fb54:   b9000322    str w2, [x25]
   9fb58:   b9410e82    ldr w2, [x20, #268]
   9fb5c:   b9000342    str w2, [x26]
   9fb60:   94001f40    bl  a7860 <operator delete(void*, unsigned long)>
   9fb64:   52800020    mov w0, #0x1
   9fb68:   a94153f3    ldp x19, x20, [sp, #16]
   9fb6c:   a9425bf5    ldp x21, x22, [sp, #32]
   9fb70:   a94363f7    ldp x23, x24, [sp, #48]
   9fb74:   a9446bf9    ldp x25, x26, [sp, #64]
   9fb78:   a8c57bfd    ldp x29, x30, [sp], #80
   9fb7c:   d65f03c0    ret
   9fb80:   940022bc    bl  a8670 <EnterCritical>
   9fb84:   b941ca61    ldr w1, [x19, #456]
   9fb88:   b941ce60    ldr w0, [x19, #460]
   9fb8c:   6b00003f    cmp w1, w0
   9fb90:   54000140    b.eq    9fbb8 <CLogger::ReadEvent(TLogSeverity*, char*, char*, long*, unsigned int*, int*)+0xf8>
   9fb94:   8b204e62    add x2, x19, w0, uxtw #3
   9fb98:   f9401c54    ldr x20, [x2, #56]
   9fb9c:   7100c41f    cmp w0, #0x31
   9fba0:   1a8007e0    csinc   w0, wzr, w0, eq
   9fba4:   b901ce60    str w0, [x19, #460]
   9fba8:   b941d261    ldr w1, [x19, #464]
   9fbac:   34fffba1    cbz w1, 9fb20 <CLogger::ReadEvent(TLogSeverity*, char*, char*, long*, unsigned int*, int*)+0x60>
   9fbb0:   940022e0    bl  a8730 <LeaveCritical>
   9fbb4:   17ffffdb    b   9fb20 <CLogger::ReadEvent(TLogSeverity*, char*, char*, long*, unsigned int*, int*)+0x60>
   9fbb8:   b941d260    ldr w0, [x19, #464]
   9fbbc:   34000040    cbz w0, 9fbc4 <CLogger::ReadEvent(TLogSeverity*, char*, char*, long*, unsigned int*, int*)+0x104>
   9fbc0:   940022dc    bl  a8730 <LeaveCritical>
   9fbc4:   52800000    mov w0, #0x0
   9fbc8:   17ffffe8    b   9fb68 <CLogger::ReadEvent(TLogSeverity*, char*, char*, long*, unsigned int*, int*)+0xa8>
   9fbcc:   d503201f    nop

000000000009fbd0 <CLogger::RegisterEventNotificationHandler(void (*)())>:
   9fbd0:   f900ec01    str x1, [x0, #472]
   9fbd4:   d65f03c0    ret
   9fbd8:   d503201f    nop
   9fbdc:   d503201f    nop

000000000009fbe0 <CLogger::RegisterPanicHandler(void (*)())>:
   9fbe0:   f900f001    str x1, [x0, #480]
   9fbe4:   d65f03c0    ret
   9fbe8:   d503201f    nop
   9fbec:   d503201f    nop

000000000009fbf0 <CLogger::WriteV(char const*, TLogSeverity, char const*, std::__va_list)>:
   9fbf0:   a9b67bfd    stp x29, x30, [sp, #-160]!
   9fbf4:   910003fd    mov x29, sp
   9fbf8:   a90153f3    stp x19, x20, [sp, #16]
   9fbfc:   aa0003f4    mov x20, x0
   9fc00:   910183e0    add x0, sp, #0x60
   9fc04:   aa0403f3    mov x19, x4
   9fc08:   a9025bf5    stp x21, x22, [sp, #32]
   9fc0c:   2a0203f5    mov w21, w2
   9fc10:   aa0103f6    mov x22, x1
   9fc14:   f9001bf7    str x23, [sp, #48]
   9fc18:   aa0303f7    mov x23, x3
   9fc1c:   9400102d    bl  a3cd0 <CString::CString()>
   9fc20:   a9401663    ldp x3, x5, [x19]
   9fc24:   aa1703e1    mov x1, x23
   9fc28:   910103e2    add x2, sp, #0x40
   9fc2c:   910183e0    add x0, sp, #0x60
   9fc30:   f9400a64    ldr x4, [x19, #16]
   9fc34:   f90023e3    str x3, [sp, #64]
   9fc38:   f9400e63    ldr x3, [x19, #24]
   9fc3c:   a90493e5    stp x5, x4, [sp, #72]
   9fc40:   f9002fe3    str x3, [sp, #88]
   9fc44:   940012b3    bl  a4710 <CString::FormatV(char const*, std::__va_list)>
   9fc48:   910183e0    add x0, sp, #0x60
   9fc4c:   94001065    bl  a3de0 <CString::operator char const*() const>
   9fc50:   aa0003e3    mov x3, x0
   9fc54:   2a1503e2    mov w2, w21
   9fc58:   aa1403e0    mov x0, x20
   9fc5c:   aa1603e1    mov x1, x22
   9fc60:   97ffff40    bl  9f960 <CLogger::WriteEvent(char const*, TLogSeverity, char const*)>
   9fc64:   b9400280    ldr w0, [x20]
   9fc68:   6b15001f    cmp w0, w21
   9fc6c:   54000583    b.cc    9fd1c <CLogger::WriteV(char const*, TLogSeverity, char const*, std::__va_list)+0x12c>
   9fc70:   910203e0    add x0, sp, #0x80
   9fc74:   b00000d3    adrp    x19, b8000 <vtable for CGPIOPin+0x288>
   9fc78:   91034273    add x19, x19, #0xd0
   9fc7c:   94001015    bl  a3cd0 <CString::CString()>
   9fc80:   340005d5    cbz w21, 9fd38 <CLogger::WriteV(char const*, TLogSeverity, char const*, std::__va_list)+0x148>
   9fc84:   f9400680    ldr x0, [x20, #8]
   9fc88:   b40001e0    cbz x0, 9fcc4 <CLogger::WriteV(char const*, TLogSeverity, char const*, std::__va_list)+0xd4>
   9fc8c:   940017cd    bl  a5bc0 <CTimer::GetTimeString()>
   9fc90:   aa0003f7    mov x23, x0
   9fc94:   b4000180    cbz x0, 9fcc4 <CLogger::WriteV(char const*, TLogSeverity, char const*, std::__va_list)+0xd4>
   9fc98:   94001052    bl  a3de0 <CString::operator char const*() const>
   9fc9c:   aa0003e1    mov x1, x0
   9fca0:   910203e0    add x0, sp, #0x80
   9fca4:   940010a3    bl  a3f30 <CString::Append(char const*)>
   9fca8:   91008261    add x1, x19, #0x20
   9fcac:   910203e0    add x0, sp, #0x80
   9fcb0:   940010a0    bl  a3f30 <CString::Append(char const*)>
   9fcb4:   f94002e1    ldr x1, [x23]
   9fcb8:   aa1703e0    mov x0, x23
   9fcbc:   f9400421    ldr x1, [x1, #8]
   9fcc0:   d63f0020    blr x1
   9fcc4:   aa1603e1    mov x1, x22
   9fcc8:   910203e0    add x0, sp, #0x80
   9fccc:   94001099    bl  a3f30 <CString::Append(char const*)>
   9fcd0:   91002261    add x1, x19, #0x8
   9fcd4:   910203e0    add x0, sp, #0x80
   9fcd8:   94001096    bl  a3f30 <CString::Append(char const*)>
   9fcdc:   910183e0    add x0, sp, #0x60
   9fce0:   94001040    bl  a3de0 <CString::operator char const*() const>
   9fce4:   aa0003e1    mov x1, x0
   9fce8:   910203e0    add x0, sp, #0x80
   9fcec:   94001091    bl  a3f30 <CString::Append(char const*)>
   9fcf0:   34000315    cbz w21, 9fd50 <CLogger::WriteV(char const*, TLogSeverity, char const*, std::__va_list)+0x160>
   9fcf4:   91006261    add x1, x19, #0x18
   9fcf8:   910203e0    add x0, sp, #0x80
   9fcfc:   9400108d    bl  a3f30 <CString::Append(char const*)>
   9fd00:   910203e0    add x0, sp, #0x80
   9fd04:   94001037    bl  a3de0 <CString::operator char const*() const>
   9fd08:   aa0003e1    mov x1, x0
   9fd0c:   aa1403e0    mov x0, x20
   9fd10:   97fffe5c    bl  9f680 <CLogger::Write(char const*)>
   9fd14:   910203e0    add x0, sp, #0x80
   9fd18:   94000fb2    bl  a3be0 <CString::~CString()>
   9fd1c:   910183e0    add x0, sp, #0x60
   9fd20:   94000fb0    bl  a3be0 <CString::~CString()>
   9fd24:   a94153f3    ldp x19, x20, [sp, #16]
   9fd28:   a9425bf5    ldp x21, x22, [sp, #32]
   9fd2c:   f9401bf7    ldr x23, [sp, #48]
   9fd30:   a8ca7bfd    ldp x29, x30, [sp], #160
   9fd34:   d65f03c0    ret
   9fd38:   aa1303e1    mov x1, x19
   9fd3c:   910203e0    add x0, sp, #0x80
   9fd40:   94001030    bl  a3e00 <CString::operator=(char const*)>
   9fd44:   f9400680    ldr x0, [x20, #8]
   9fd48:   b5fffa20    cbnz    x0, 9fc8c <CLogger::WriteV(char const*, TLogSeverity, char const*, std::__va_list)+0x9c>
   9fd4c:   17ffffde    b   9fcc4 <CLogger::WriteV(char const*, TLogSeverity, char const*, std::__va_list)+0xd4>
   9fd50:   91004261    add x1, x19, #0x10
   9fd54:   910203e0    add x0, sp, #0x80
   9fd58:   94001076    bl  a3f30 <CString::Append(char const*)>
   9fd5c:   91006261    add x1, x19, #0x18
   9fd60:   910203e0    add x0, sp, #0x80
   9fd64:   94001073    bl  a3f30 <CString::Append(char const*)>
   9fd68:   910203e0    add x0, sp, #0x80
   9fd6c:   9400101d    bl  a3de0 <CString::operator char const*() const>
   9fd70:   aa0003e1    mov x1, x0
   9fd74:   aa1403e0    mov x0, x20
   9fd78:   97fffe42    bl  9f680 <CLogger::Write(char const*)>
   9fd7c:   f940f280    ldr x0, [x20, #480]
   9fd80:   b4000040    cbz x0, 9fd88 <CLogger::WriteV(char const*, TLogSeverity, char const*, std::__va_list)+0x198>
   9fd84:   d63f0000    blr x0
   9fd88:   52801fe0    mov w0, #0xff
   9fd8c:   94001609    bl  a55b0 <set_qemu_exit_status>
   9fd90:   9400160c    bl  a55c0 <halt>
   9fd94:   d503201f    nop
   9fd98:   d503201f    nop
   9fd9c:   d503201f    nop

000000000009fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>:
   9fda0:   a9b17bfd    stp x29, x30, [sp, #-240]!
   9fda4:   9103c3e8    add x8, sp, #0xf0
   9fda8:   9103c3ea    add x10, sp, #0xf0
   9fdac:   910003fd    mov x29, sp
   9fdb0:   910343ec    add x12, sp, #0xd0
   9fdb4:   128003e9    mov w9, #0xffffffe0
   9fdb8:   a9032be8    stp x8, x10, [sp, #48]
   9fdbc:   12800fe8    mov w8, #0xffffff80
   9fdc0:   a9432fea    ldp x10, x11, [sp, #48]
   9fdc4:   f90023ec    str x12, [sp, #64]
   9fdc8:   b9004be9    str w9, [sp, #72]
   9fdcc:   b9004fe8    str w8, [sp, #76]
   9fdd0:   a94427e8    ldp x8, x9, [sp, #64]
   9fdd4:   a90d17e4    stp x4, x5, [sp, #208]
   9fdd8:   910043e4    add x4, sp, #0x10
   9fddc:   a9012fea    stp x10, x11, [sp, #16]
   9fde0:   a90227e8    stp x8, x9, [sp, #32]
   9fde4:   3d8017e0    str q0, [sp, #80]
   9fde8:   3d801be1    str q1, [sp, #96]
   9fdec:   3d801fe2    str q2, [sp, #112]
   9fdf0:   3d8023e3    str q3, [sp, #128]
   9fdf4:   3d8027e4    str q4, [sp, #144]
   9fdf8:   3d802be5    str q5, [sp, #160]
   9fdfc:   3d802fe6    str q6, [sp, #176]
   9fe00:   3d8033e7    str q7, [sp, #192]
   9fe04:   a90e1fe6    stp x6, x7, [sp, #224]
   9fe08:   97ffff7a    bl  9fbf0 <CLogger::WriteV(char const*, TLogSeverity, char const*, std::__va_list)>
   9fe0c:   a8cf7bfd    ldp x29, x30, [sp], #240
   9fe10:   d65f03c0    ret
   9fe14:   d503201f    nop
   9fe18:   d503201f    nop
   9fe1c:   d503201f    nop

000000000009fe20 <CLogger::Initialize(CDevice*)>:
   9fe20:   a9be7bfd    stp x29, x30, [sp, #-32]!
   9fe24:   910003fd    mov x29, sp
   9fe28:   f9000bf3    str x19, [sp, #16]
   9fe2c:   aa0003f3    mov x19, x0
   9fe30:   f9000c01    str x1, [x0, #24]
   9fe34:   9400030b    bl  a0a60 <CMachineInfo::Get()>
   9fe38:   94000142    bl  a0340 <CMachineInfo::GetMachineName() const>
   9fe3c:   b00000c1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   9fe40:   91034021    add x1, x1, #0xd0
   9fe44:   f00000c4    adrp    x4, ba000 <font_data+0x1080>
   9fe48:   aa0003e5    mov x5, x0
   9fe4c:   9100a023    add x3, x1, #0x28
   9fe50:   aa1303e0    mov x0, x19
   9fe54:   91014021    add x1, x1, #0x50
   9fe58:   91274084    add x4, x4, #0x9d0
   9fe5c:   52800062    mov w2, #0x3
   9fe60:   97ffffd0    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   9fe64:   f9400bf3    ldr x19, [sp, #16]
   9fe68:   52800020    mov w0, #0x1
   9fe6c:   a8c27bfd    ldp x29, x30, [sp], #32
   9fe70:   d65f03c0    ret
    ...

000000000009fe80 <CMachineInfo::CMachineInfo()>:
   9fe80:   a9b97bfd    stp x29, x30, [sp, #-112]!
   9fe84:   910003fd    mov x29, sp
   9fe88:   f9000bf3    str x19, [sp, #16]                             // preserve x19
   9fe8c:   f90017e0    str x0, [sp, #40]                              // preserve x0
   9fe90:   f94017e0    ldr x0, [sp, #40]                              // retrieve it. why?!
   9fe94:   b900001f    str wzr, [x0]                                  // str 0x00000000 at memory address of x0 (sp + 0x50) = m_nRevisionRaw
   9fe98:   f94017e0    ldr x0, [sp, #40]                              // retrieve x0 again, for no good reason?!
   9fe9c:   52800281    mov w1, #0x14
   9fea0:   b9001001    str w1, [x0, #16]                              // store 20 on the stack ( MachineModelUnknown from https://github.com/rsta2/circle/blob/c21f2efdad86c1062f255fbf891135a2a356713e/include/circle/machineinfo.h#L51 )
   9fea4:   f94017e0    ldr x0, [sp, #40]
   9fea8:   b900201f    str wzr, [x0, #32]                             // store 0 on the stack (m_nModelMajor)
   9feac:   f94017e0    ldr x0, [sp, #40]
   9feb0:   b900301f    str wzr, [x0, #48]                             // store 0 on the stack (m_nModelRevision)
   9feb4:   f94017e0    ldr x0, [sp, #40]
   9feb8:   52800081    mov w1, #0x4
   9febc:   b9004001    str w1, [x0, #64]                              // store 4 on the stack ( SoCTypeUnknown from https://github.com/rsta2/circle/blob/c21f2efdad86c1062f255fbf891135a2a356713e/include/circle/machineinfo.h#L60 )
   9fec0:   f94017e0    ldr x0, [sp, #40]
   9fec4:   b900501f    str wzr, [x0, #80]                             // store 0x00000000 on the stack (m_nRAMSize)
   9fec8:   f94017e0    ldr x0, [sp, #40]
   9fecc:   528e3ea1    mov w1, #0x71f5
   9fed0:   7900c001    strh    w1, [x0, #96]                          // store 0x71f5 on the stack (29173) (m_usDMAChannelMap default mapping)
   9fed4:   f94017e0    ldr x0, [sp, #40]
   9fed8:   f900381f    str xzr, [x0, #112]                            // store 0x0000000000000000 on the stack (m_pDTB)
   9fedc:   f00000c0    adrp    x0, ba000 <font_data+0x1080>
   9fee0:   9125e000    add x0, x0, #0x978
   9fee4:   f9400000    ldr x0, [x0]                                   // x0 = [0xba978] = s_pThis
   9fee8:   f100001f    cmp x0, #0x0
   9feec:   540004c0    b.eq    9ff84 <CMachineInfo::CMachineInfo()+0x104> // if s_pThis == 0 skip ahead to 0x9ff84
   9fef0:   f00000c0    adrp    x0, ba000 <font_data+0x1080>
   9fef4:   9125e000    add x0, x0, #0x978
   9fef8:   f9400000    ldr x0, [x0]
   9fefc:   b9400001    ldr w1, [x0]
   9ff00:   f94017e0    ldr x0, [sp, #40]
   9ff04:   b9000001    str w1, [x0]
   9ff08:   f00000c0    adrp    x0, ba000 <font_data+0x1080>
   9ff0c:   9125e000    add x0, x0, #0x978
   9ff10:   f9400000    ldr x0, [x0]
   9ff14:   b9401001    ldr w1, [x0, #16]
   9ff18:   f94017e0    ldr x0, [sp, #40]
   9ff1c:   b9001001    str w1, [x0, #16]
   9ff20:   f00000c0    adrp    x0, ba000 <font_data+0x1080>
   9ff24:   9125e000    add x0, x0, #0x978
   9ff28:   f9400000    ldr x0, [x0]
   9ff2c:   b9402001    ldr w1, [x0, #32]
   9ff30:   f94017e0    ldr x0, [sp, #40]
   9ff34:   b9002001    str w1, [x0, #32]
   9ff38:   f00000c0    adrp    x0, ba000 <font_data+0x1080>
   9ff3c:   9125e000    add x0, x0, #0x978
   9ff40:   f9400000    ldr x0, [x0]
   9ff44:   b9403001    ldr w1, [x0, #48]
   9ff48:   f94017e0    ldr x0, [sp, #40]
   9ff4c:   b9003001    str w1, [x0, #48]
   9ff50:   f00000c0    adrp    x0, ba000 <font_data+0x1080>
   9ff54:   9125e000    add x0, x0, #0x978
   9ff58:   f9400000    ldr x0, [x0]
   9ff5c:   b9404001    ldr w1, [x0, #64]
   9ff60:   f94017e0    ldr x0, [sp, #40]
   9ff64:   b9004001    str w1, [x0, #64]
   9ff68:   f00000c0    adrp    x0, ba000 <font_data+0x1080>
   9ff6c:   9125e000    add x0, x0, #0x978
   9ff70:   f9400000    ldr x0, [x0]
   9ff74:   b9405001    ldr w1, [x0, #80]
   9ff78:   f94017e0    ldr x0, [sp, #40]
   9ff7c:   b9005001    str w1, [x0, #80]
   9ff80:   140000ce    b   a02b8 <CMachineInfo::CMachineInfo()+0x438>

   9ff84:   f00000c0    adrp    x0, ba000 <font_data+0x1080>
   9ff88:   9125e000    add x0, x0, #0x978
   9ff8c:   f94017e1    ldr x1, [sp, #40]
   9ff90:   f9000001    str x1, [x0]
   9ff94:   910163e0    add x0, sp, #0x58
   9ff98:   52800021    mov w1, #0x1
   9ff9c:   97fff2ed    bl  9cb50 <CBcmPropertyTags::CBcmPropertyTags(bool)>
   9ffa0:   910123e1    add x1, sp, #0x48
   9ffa4:   910163e0    add x0, sp, #0x58
   9ffa8:   52800004    mov w4, #0x0
   9ffac:   52800203    mov w3, #0x10
   9ffb0:   aa0103e2    mov x2, x1
   9ffb4:   52800021    mov w1, #0x1
   9ffb8:   72a000c1    movk    w1, #0x6, lsl #16
   9ffbc:   97fff345    bl  9ccd0 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   9ffc0:   12001c00    and w0, w0, #0xff
   9ffc4:   12000000    and w0, w0, #0x1
   9ffc8:   7100001f    cmp w0, #0x0
   9ffcc:   540000a0    b.eq    9ffe0 <CMachineInfo::CMachineInfo()+0x160>
   9ffd0:   b94057e0    ldr w0, [sp, #84]
   9ffd4:   12003c01    and w1, w0, #0xffff
   9ffd8:   f94017e0    ldr x0, [sp, #40]
   9ffdc:   7900c001    strh    w1, [x0, #96]
   9ffe0:   9100e3e1    add x1, sp, #0x38
   9ffe4:   910163e0    add x0, sp, #0x58
   9ffe8:   52800004    mov w4, #0x0
   9ffec:   52800203    mov w3, #0x10
   9fff0:   aa0103e2    mov x2, x1
   9fff4:   52800041    mov w1, #0x2
   9fff8:   72a00021    movk    w1, #0x1, lsl #16
   9fffc:   97fff335    bl  9ccd0 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   a0000:   12001c00    and w0, w0, #0xff
   a0004:   52000000    eor w0, w0, #0x1
   a0008:   12001c00    and w0, w0, #0xff
   a000c:   12000000    and w0, w0, #0x1
   a0010:   7100001f    cmp w0, #0x0
   a0014:   54000060    b.eq    a0020 <CMachineInfo::CMachineInfo()+0x1a0>
   a0018:   52800013    mov w19, #0x0
   a001c:   140000a4    b   a02ac <CMachineInfo::CMachineInfo()+0x42c>
   a0020:   b94047e1    ldr w1, [sp, #68]
   a0024:   f94017e0    ldr x0, [sp, #40]
   a0028:   b9000001    str w1, [x0]
   a002c:   f94017e0    ldr x0, [sp, #40]
   a0030:   b9400000    ldr w0, [x0]
   a0034:   12090000    and w0, w0, #0x800000
   a0038:   7100001f    cmp w0, #0x0
   a003c:   54000ca0    b.eq    a01d0 <CMachineInfo::CMachineInfo()+0x350>
   a0040:   f94017e0    ldr x0, [sp, #40]
   a0044:   b9400000    ldr w0, [x0]
   a0048:   53047c00    lsr w0, w0, #4
   a004c:   12001c00    and w0, w0, #0xff
   a0050:   b90067e0    str w0, [sp, #100]
   a0054:   b9006fff    str wzr, [sp, #108]
   a0058:   14000010    b   a0098 <CMachineInfo::CMachineInfo()+0x218>
   a005c:   900000c0    adrp    x0, b8000 <vtable for CGPIOPin+0x288>
   a0060:   9104c002    add x2, x0, #0x130
   a0064:   b9406fe1    ldr w1, [sp, #108]
   a0068:   aa0103e0    mov x0, x1
   a006c:   d37ff800    lsl x0, x0, #1
   a0070:   8b010000    add x0, x0, x1
   a0074:   d37ef400    lsl x0, x0, #2
   a0078:   8b000040    add x0, x2, x0
   a007c:   b9400000    ldr w0, [x0]
   a0080:   b94067e1    ldr w1, [sp, #100]
   a0084:   6b00003f    cmp w1, w0
   a0088:   54000100    b.eq    a00a8 <CMachineInfo::CMachineInfo()+0x228>
   a008c:   b9406fe0    ldr w0, [sp, #108]
   a0090:   11000400    add w0, w0, #0x1
   a0094:   b9006fe0    str w0, [sp, #108]
   a0098:   b9406fe0    ldr w0, [sp, #108]
   a009c:   7100441f    cmp w0, #0x11
   a00a0:   54fffde9    b.ls    a005c <CMachineInfo::CMachineInfo()+0x1dc>
   a00a4:   14000002    b   a00ac <CMachineInfo::CMachineInfo()+0x22c>
   a00a8:   d503201f    nop
   a00ac:   b9406fe0    ldr w0, [sp, #108]
   a00b0:   7100441f    cmp w0, #0x11
   a00b4:   54000069    b.ls    a00c0 <CMachineInfo::CMachineInfo()+0x240>
   a00b8:   52800013    mov w19, #0x0
   a00bc:   1400007c    b   a02ac <CMachineInfo::CMachineInfo()+0x42c>
   a00c0:   900000c0    adrp    x0, b8000 <vtable for CGPIOPin+0x288>
   a00c4:   9104c002    add x2, x0, #0x130
   a00c8:   b9406fe1    ldr w1, [sp, #108]
   a00cc:   aa0103e0    mov x0, x1
   a00d0:   d37ff800    lsl x0, x0, #1
   a00d4:   8b010000    add x0, x0, x1
   a00d8:   d37ef400    lsl x0, x0, #2
   a00dc:   8b000040    add x0, x2, x0
   a00e0:   b9400401    ldr w1, [x0, #4]
   a00e4:   f94017e0    ldr x0, [sp, #40]
   a00e8:   b9001001    str w1, [x0, #16]
   a00ec:   900000c0    adrp    x0, b8000 <vtable for CGPIOPin+0x288>
   a00f0:   9104c002    add x2, x0, #0x130
   a00f4:   b9406fe1    ldr w1, [sp, #108]
   a00f8:   aa0103e0    mov x0, x1
   a00fc:   d37ff800    lsl x0, x0, #1
   a0100:   8b010000    add x0, x0, x1
   a0104:   d37ef400    lsl x0, x0, #2
   a0108:   8b000040    add x0, x2, x0
   a010c:   b9400801    ldr w1, [x0, #8]
   a0110:   f94017e0    ldr x0, [sp, #40]
   a0114:   b9002001    str w1, [x0, #32]
   a0118:   f94017e0    ldr x0, [sp, #40]
   a011c:   b9400000    ldr w0, [x0]
   a0120:   12000c00    and w0, w0, #0xf
   a0124:   11000401    add w1, w0, #0x1
   a0128:   f94017e0    ldr x0, [sp, #40]
   a012c:   b9003001    str w1, [x0, #48]
   a0130:   f94017e0    ldr x0, [sp, #40]
   a0134:   b9400000    ldr w0, [x0]
   a0138:   530c7c00    lsr w0, w0, #12
   a013c:   12000c01    and w1, w0, #0xf
   a0140:   f94017e0    ldr x0, [sp, #40]
   a0144:   b9004001    str w1, [x0, #64]
   a0148:   f94017e0    ldr x0, [sp, #40]
   a014c:   b9400000    ldr w0, [x0]
   a0150:   53147c00    lsr w0, w0, #20
   a0154:   12000800    and w0, w0, #0x7
   a0158:   52802001    mov w1, #0x100
   a015c:   1ac02020    lsl w0, w1, w0
   a0160:   2a0003e1    mov w1, w0
   a0164:   f94017e0    ldr x0, [sp, #40]
   a0168:   b9005001    str w1, [x0, #80]
   a016c:   f94017e0    ldr x0, [sp, #40]
   a0170:   b9404000    ldr w0, [x0, #64]
   a0174:   71000c1f    cmp w0, #0x3
   a0178:   5400008d    b.le    a0188 <CMachineInfo::CMachineInfo()+0x308>
   a017c:   f94017e0    ldr x0, [sp, #40]
   a0180:   52800081    mov w1, #0x4
   a0184:   b9004001    str w1, [x0, #64]
   a0188:   f94017e0    ldr x0, [sp, #40]
   a018c:   b9401000    ldr w0, [x0, #16]
   a0190:   71000c1f    cmp w0, #0x3
   a0194:   540008a1    b.ne    a02a8 <CMachineInfo::CMachineInfo()+0x428>
   a0198:   f94017e0    ldr x0, [sp, #40]
   a019c:   b9405000    ldr w0, [x0, #80]
   a01a0:   7104001f    cmp w0, #0x100
   a01a4:   54000821    b.ne    a02a8 <CMachineInfo::CMachineInfo()+0x428>
   a01a8:   f94017e0    ldr x0, [sp, #40]
   a01ac:   b9403000    ldr w0, [x0, #48]
   a01b0:   7100041f    cmp w0, #0x1
   a01b4:   54000061    b.ne    a01c0 <CMachineInfo::CMachineInfo()+0x340>
   a01b8:   52800020    mov w0, #0x1
   a01bc:   14000002    b   a01c4 <CMachineInfo::CMachineInfo()+0x344>
   a01c0:   52800040    mov w0, #0x2
   a01c4:   f94017e1    ldr x1, [sp, #40]
   a01c8:   b9001020    str w0, [x1, #16]
   a01cc:   14000037    b   a02a8 <CMachineInfo::CMachineInfo()+0x428>
   a01d0:   b9006bff    str wzr, [sp, #104]
   a01d4:   1400000e    b   a020c <CMachineInfo::CMachineInfo()+0x38c>
   a01d8:   900000c0    adrp    x0, b8000 <vtable for CGPIOPin+0x288>
   a01dc:   91082001    add x1, x0, #0x208
   a01e0:   b9406be0    ldr w0, [sp, #104]
   a01e4:   d37cec00    lsl x0, x0, #4
   a01e8:   8b000020    add x0, x1, x0
   a01ec:   b9400001    ldr w1, [x0]
   a01f0:   f94017e0    ldr x0, [sp, #40]
   a01f4:   b9400000    ldr w0, [x0]
   a01f8:   6b00003f    cmp w1, w0
   a01fc:   54000100    b.eq    a021c <CMachineInfo::CMachineInfo()+0x39c>
   a0200:   b9406be0    ldr w0, [sp, #104]
   a0204:   11000400    add w0, w0, #0x1
   a0208:   b9006be0    str w0, [sp, #104]
   a020c:   b9406be0    ldr w0, [sp, #104]
   a0210:   7100401f    cmp w0, #0x10
   a0214:   54fffe29    b.ls    a01d8 <CMachineInfo::CMachineInfo()+0x358>
   a0218:   14000002    b   a0220 <CMachineInfo::CMachineInfo()+0x3a0>
   a021c:   d503201f    nop
   a0220:   b9406be0    ldr w0, [sp, #104]
   a0224:   7100401f    cmp w0, #0x10
   a0228:   54000069    b.ls    a0234 <CMachineInfo::CMachineInfo()+0x3b4>
   a022c:   52800013    mov w19, #0x0
   a0230:   1400001f    b   a02ac <CMachineInfo::CMachineInfo()+0x42c>
   a0234:   900000c0    adrp    x0, b8000 <vtable for CGPIOPin+0x288>
   a0238:   91082001    add x1, x0, #0x208
   a023c:   b9406be0    ldr w0, [sp, #104]
   a0240:   d37cec00    lsl x0, x0, #4
   a0244:   8b000020    add x0, x1, x0
   a0248:   b9400401    ldr w1, [x0, #4]
   a024c:   f94017e0    ldr x0, [sp, #40]
   a0250:   b9001001    str w1, [x0, #16]
   a0254:   f94017e0    ldr x0, [sp, #40]
   a0258:   52800021    mov w1, #0x1
   a025c:   b9002001    str w1, [x0, #32]
   a0260:   900000c0    adrp    x0, b8000 <vtable for CGPIOPin+0x288>
   a0264:   91082001    add x1, x0, #0x208
   a0268:   b9406be0    ldr w0, [sp, #104]
   a026c:   d37cec00    lsl x0, x0, #4
   a0270:   8b000020    add x0, x1, x0
   a0274:   b9400801    ldr w1, [x0, #8]
   a0278:   f94017e0    ldr x0, [sp, #40]
   a027c:   b9003001    str w1, [x0, #48]
   a0280:   f94017e0    ldr x0, [sp, #40]
   a0284:   b900401f    str wzr, [x0, #64]
   a0288:   900000c0    adrp    x0, b8000 <vtable for CGPIOPin+0x288>
   a028c:   91082001    add x1, x0, #0x208
   a0290:   b9406be0    ldr w0, [sp, #104]
   a0294:   d37cec00    lsl x0, x0, #4
   a0298:   8b000020    add x0, x1, x0
   a029c:   b9400c01    ldr w1, [x0, #12]
   a02a0:   f94017e0    ldr x0, [sp, #40]
   a02a4:   b9005001    str w1, [x0, #80]
   a02a8:   52800033    mov w19, #0x1
   a02ac:   910163e0    add x0, sp, #0x58
   a02b0:   97fff22c    bl  9cb60 <CBcmPropertyTags::~CBcmPropertyTags()>
   a02b4:   7100067f    cmp w19, #0x1

   a02b8:   f9400bf3    ldr x19, [sp, #16]
   a02bc:   a8c77bfd    ldp x29, x30, [sp], #112
   a02c0:   d65f03c0    ret
   a02c4:   d503201f    nop
   a02c8:   d503201f    nop
   a02cc:   d503201f    nop

00000000000a02d0 <CMachineInfo::~CMachineInfo()>:
   a02d0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a02d4:   52800281    mov w1, #0x14
   a02d8:   910003fd    mov x29, sp
   a02dc:   a90153f3    stp x19, x20, [sp, #16]
   a02e0:   aa0003f3    mov x19, x0
   a02e4:   f9403814    ldr x20, [x0, #112]
   a02e8:   b9001001    str w1, [x0, #16]
   a02ec:   b40000d4    cbz x20, a0304 <CMachineInfo::~CMachineInfo()+0x34>
   a02f0:   aa1403e0    mov x0, x20
   a02f4:   94002a37    bl  aabd0 <CDeviceTreeBlob::~CDeviceTreeBlob()>
   a02f8:   aa1403e0    mov x0, x20
   a02fc:   d2800101    mov x1, #0x8
   a0300:   94001d58    bl  a7860 <operator delete(void*, unsigned long)>
   a0304:   d00000c0    adrp    x0, ba000 <font_data+0x1080>
   a0308:   f944bc01    ldr x1, [x0, #2424]
   a030c:   eb13003f    cmp x1, x19
   a0310:   54000080    b.eq    a0320 <CMachineInfo::~CMachineInfo()+0x50>
   a0314:   a94153f3    ldp x19, x20, [sp, #16]
   a0318:   a8c27bfd    ldp x29, x30, [sp], #32
   a031c:   d65f03c0    ret
   a0320:   a94153f3    ldp x19, x20, [sp, #16]
   a0324:   f904bc1f    str xzr, [x0, #2424]
   a0328:   a8c27bfd    ldp x29, x30, [sp], #32
   a032c:   d65f03c0    ret

00000000000a0330 <CMachineInfo::GetMachineModel() const>:
   a0330:   b9401000    ldr w0, [x0, #16]
   a0334:   d65f03c0    ret
   a0338:   d503201f    nop
   a033c:   d503201f    nop

00000000000a0340 <CMachineInfo::GetMachineName() const>:
   a0340:   b9801000    ldrsw   x0, [x0, #16]
   a0344:   900000c1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a0348:   910c8021    add x1, x1, #0x320
   a034c:   f8607820    ldr x0, [x1, x0, lsl #3]
   a0350:   d65f03c0    ret
   a0354:   d503201f    nop
   a0358:   d503201f    nop
   a035c:   d503201f    nop

00000000000a0360 <CMachineInfo::GetModelMajor() const>:
   a0360:   b9402000    ldr w0, [x0, #32]
   a0364:   d65f03c0    ret
   a0368:   d503201f    nop
   a036c:   d503201f    nop

00000000000a0370 <CMachineInfo::GetModelRevision() const>:
   a0370:   b9403000    ldr w0, [x0, #48]
   a0374:   d65f03c0    ret
   a0378:   d503201f    nop
   a037c:   d503201f    nop

00000000000a0380 <CMachineInfo::GetSoCType() const>:
   a0380:   b9404000    ldr w0, [x0, #64]
   a0384:   d65f03c0    ret
   a0388:   d503201f    nop
   a038c:   d503201f    nop

00000000000a0390 <CMachineInfo::GetRAMSize() const>:
   a0390:   b9405000    ldr w0, [x0, #80]
   a0394:   d65f03c0    ret
   a0398:   d503201f    nop
   a039c:   d503201f    nop

00000000000a03a0 <CMachineInfo::GetSoCName() const>:
   a03a0:   b9804000    ldrsw   x0, [x0, #64]
   a03a4:   900000c1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a03a8:   910c8021    add x1, x1, #0x320
   a03ac:   9102c021    add x1, x1, #0xb0
   a03b0:   f8607820    ldr x0, [x1, x0, lsl #3]
   a03b4:   d65f03c0    ret
   a03b8:   d503201f    nop
   a03bc:   d503201f    nop

00000000000a03c0 <CMachineInfo::GetRevisionRaw() const>:
   a03c0:   b9400000    ldr w0, [x0]
   a03c4:   d65f03c0    ret
   a03c8:   d503201f    nop
   a03cc:   d503201f    nop

00000000000a03d0 <CMachineInfo::GetActLEDInfo() const>:
   a03d0:   b9801000    ldrsw   x0, [x0, #16]
   a03d4:   900000c1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a03d8:   910c8021    add x1, x1, #0x320
   a03dc:   91038021    add x1, x1, #0xe0
   a03e0:   b8607820    ldr w0, [x1, x0, lsl #2]
   a03e4:   d65f03c0    ret
   a03e8:   d503201f    nop
   a03ec:   d503201f    nop

00000000000a03f0 <CMachineInfo::GetClockRate(unsigned int) const>:
   a03f0:   a9bb7bfd    stp x29, x30, [sp, #-80]!
   a03f4:   910003fd    mov x29, sp
   a03f8:   a90153f3    stp x19, x20, [sp, #16]
   a03fc:   2a0103f3    mov w19, w1
   a0400:   52800001    mov w1, #0x0
   a0404:   f90013f5    str x21, [sp, #32]
   a0408:   aa0003f5    mov x21, x0
   a040c:   9100c3e0    add x0, sp, #0x30
   a0410:   97fff1d0    bl  9cb50 <CBcmPropertyTags::CBcmPropertyTags(bool)>
   a0414:   52800041    mov w1, #0x2
   a0418:   72a00061    movk    w1, #0x3, lsl #16
   a041c:   b90047f3    str w19, [sp, #68]
   a0420:   9100c3e0    add x0, sp, #0x30
   a0424:   9100e3e2    add x2, sp, #0x38
   a0428:   52800084    mov w4, #0x4
   a042c:   52800283    mov w3, #0x14
   a0430:   97fff228    bl  9ccd0 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   a0434:   36000060    tbz w0, #0, a0440 <CMachineInfo::GetClockRate(unsigned int) const+0x50>
   a0438:   b9404bf4    ldr w20, [sp, #72]
   a043c:   350002b4    cbnz    w20, a0490 <CMachineInfo::GetClockRate(unsigned int) const+0xa0>
   a0440:   528008e1    mov w1, #0x47
   a0444:   72a00061    movk    w1, #0x3, lsl #16
   a0448:   b90047f3    str w19, [sp, #68]
   a044c:   9100e3e2    add x2, sp, #0x38
   a0450:   52800084    mov w4, #0x4
   a0454:   52800283    mov w3, #0x14
   a0458:   9100c3e0    add x0, sp, #0x30
   a045c:   97fff21d    bl  9ccd0 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   a0460:   36000060    tbz w0, #0, a046c <CMachineInfo::GetClockRate(unsigned int) const+0x7c>
   a0464:   b9404bf4    ldr w20, [sp, #72]
   a0468:   35000154    cbnz    w20, a0490 <CMachineInfo::GetClockRate(unsigned int) const+0xa0>
   a046c:   7100127f    cmp w19, #0x4
   a0470:   54000380    b.eq    a04e0 <CMachineInfo::GetClockRate(unsigned int) const+0xf0>
   a0474:   540001c8    b.hi    a04ac <CMachineInfo::GetClockRate(unsigned int) const+0xbc>
   a0478:   7100067f    cmp w19, #0x1
   a047c:   540004e0    b.eq    a0518 <CMachineInfo::GetClockRate(unsigned int) const+0x128>
   a0480:   71000a7f    cmp w19, #0x2
   a0484:   540005c1    b.ne    a053c <CMachineInfo::GetClockRate(unsigned int) const+0x14c>
   a0488:   528d8014    mov w20, #0x6c00
   a048c:   72a05b94    movk    w20, #0x2dc, lsl #16
   a0490:   9100c3e0    add x0, sp, #0x30
   a0494:   97fff1b3    bl  9cb60 <CBcmPropertyTags::~CBcmPropertyTags()>
   a0498:   f94013f5    ldr x21, [sp, #32]
   a049c:   2a1403e0    mov w0, w20
   a04a0:   a94153f3    ldp x19, x20, [sp, #16]
   a04a4:   a8c57bfd    ldp x29, x30, [sp], #80
   a04a8:   d65f03c0    ret
   a04ac:   7100327f    cmp w19, #0xc
   a04b0:   54000340    b.eq    a0518 <CMachineInfo::GetClockRate(unsigned int) const+0x128>
   a04b4:   71003a7f    cmp w19, #0xe
   a04b8:   54000421    b.ne    a053c <CMachineInfo::GetClockRate(unsigned int) const+0x14c>
   a04bc:   9100c3e0    add x0, sp, #0x30
   a04c0:   528d1814    mov w20, #0x68c0
   a04c4:   72a08f14    movk    w20, #0x478, lsl #16
   a04c8:   97fff1a6    bl  9cb60 <CBcmPropertyTags::~CBcmPropertyTags()>
   a04cc:   f94013f5    ldr x21, [sp, #32]
   a04d0:   2a1403e0    mov w0, w20
   a04d4:   a94153f3    ldp x19, x20, [sp, #16]
   a04d8:   a8c57bfd    ldp x29, x30, [sp], #80
   a04dc:   d65f03c0    ret
   a04e0:   b94022a1    ldr w1, [x21, #32]
   a04e4:   52965000    mov w0, #0xb280
   a04e8:   72a1dcc0    movk    w0, #0xee6, lsl #16
   a04ec:   52946014    mov w20, #0xa300
   a04f0:   72a23c34    movk    w20, #0x11e1, lsl #16
   a04f4:   7100083f    cmp w1, #0x2
   a04f8:   1a808294    csel    w20, w20, w0, hi
   a04fc:   9100c3e0    add x0, sp, #0x30
   a0500:   97fff198    bl  9cb60 <CBcmPropertyTags::~CBcmPropertyTags()>
   a0504:   f94013f5    ldr x21, [sp, #32]
   a0508:   2a1403e0    mov w0, w20
   a050c:   a94153f3    ldp x19, x20, [sp, #16]
   a0510:   a8c57bfd    ldp x29, x30, [sp], #80
   a0514:   d65f03c0    ret
   a0518:   9100c3e0    add x0, sp, #0x30
   a051c:   529c2014    mov w20, #0xe100
   a0520:   72a0beb4    movk    w20, #0x5f5, lsl #16
   a0524:   97fff18f    bl  9cb60 <CBcmPropertyTags::~CBcmPropertyTags()>
   a0528:   f94013f5    ldr x21, [sp, #32]
   a052c:   2a1403e0    mov w0, w20
   a0530:   a94153f3    ldp x19, x20, [sp, #16]
   a0534:   a8c57bfd    ldp x29, x30, [sp], #80
   a0538:   d65f03c0    ret
   a053c:   900000c0    adrp    x0, b8000 <vtable for CGPIOPin+0x288>
   a0540:   910c8000    add x0, x0, #0x320
   a0544:   9104e001    add x1, x0, #0x138
   a0548:   52802c22    mov w2, #0x161
   a054c:   91052000    add x0, x0, #0x148
   a0550:   97fff15c    bl  9cac0 <assertion_failed>
   a0554:   d503201f    nop
   a0558:   d503201f    nop
   a055c:   d503201f    nop

00000000000a0560 <CMachineInfo::GetGPIOPin(TGPIOVirtualPin) const>:
   a0560:   7100d83f    cmp w1, #0x36
   a0564:   aa0003e2    mov x2, x0
   a0568:   54000120    b.eq    a058c <CMachineInfo::GetGPIOPin(TGPIOVirtualPin) const+0x2c>
   a056c:   7100dc3f    cmp w1, #0x37
   a0570:   54000241    b.ne    a05b8 <CMachineInfo::GetGPIOPin(TGPIOVirtualPin) const+0x58>
   a0574:   b9401042    ldr w2, [x2, #16]
   a0578:   52800501    mov w1, #0x28
   a057c:   528005a0    mov w0, #0x2d
   a0580:   7100105f    cmp w2, #0x4
   a0584:   1a81b000    csel    w0, w0, w1, lt
   a0588:   d65f03c0    ret
   a058c:   b9401041    ldr w1, [x2, #16]
   a0590:   52800500    mov w0, #0x28
   a0594:   71000c3f    cmp w1, #0x3
   a0598:   540000ed    b.le    a05b4 <CMachineInfo::GetGPIOPin(TGPIOVirtualPin) const+0x54>
   a059c:   b9402042    ldr w2, [x2, #32]
   a05a0:   52800521    mov w1, #0x29
   a05a4:   528005a0    mov w0, #0x2d
   a05a8:   71000c5f    cmp w2, #0x3
   a05ac:   1a813000    csel    w0, w0, w1, cc
   a05b0:   d65f03c0    ret
   a05b4:   d65f03c0    ret
   a05b8:   900000c0    adrp    x0, b8000 <vtable for CGPIOPin+0x288>
   a05bc:   910c8000    add x0, x0, #0x320
   a05c0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a05c4:   9104e001    add x1, x0, #0x138
   a05c8:   910003fd    mov x29, sp
   a05cc:   91052000    add x0, x0, #0x148
   a05d0:   52803482    mov w2, #0x1a4
   a05d4:   97fff13b    bl  9cac0 <assertion_failed>
   a05d8:   d503201f    nop
   a05dc:   d503201f    nop

00000000000a05e0 <CMachineInfo::GetGPIOClockSourceRate(unsigned int)>:
   a05e0:   b9402000    ldr w0, [x0, #32]
   a05e4:   71000c1f    cmp w0, #0x3
   a05e8:   54000108    b.hi    a0608 <CMachineInfo::GetGPIOClockSourceRate(unsigned int)+0x28>
   a05ec:   7100043f    cmp w1, #0x1
   a05f0:   540001a0    b.eq    a0624 <CMachineInfo::GetGPIOClockSourceRate(unsigned int)+0x44>
   a05f4:   7100183f    cmp w1, #0x6
   a05f8:   528ca000    mov w0, #0x6500
   a05fc:   72a3b9a0    movk    w0, #0x1dcd, lsl #16
   a0600:   1a8013e0    csel    w0, wzr, w0, ne
   a0604:   d65f03c0    ret
   a0608:   7100043f    cmp w1, #0x1
   a060c:   54000120    b.eq    a0630 <CMachineInfo::GetGPIOClockSourceRate(unsigned int)+0x50>
   a0610:   7100183f    cmp w1, #0x6
   a0614:   5282f000    mov w0, #0x1780
   a0618:   72a59680    movk    w0, #0x2cb4, lsl #16
   a061c:   1a8013e0    csel    w0, wzr, w0, ne
   a0620:   d65f03c0    ret
   a0624:   529f0000    mov w0, #0xf800
   a0628:   72a02480    movk    w0, #0x124, lsl #16
   a062c:   d65f03c0    ret
   a0630:   529f3000    mov w0, #0xf980
   a0634:   72a066e0    movk    w0, #0x337, lsl #16
   a0638:   d65f03c0    ret
   a063c:   d503201f    nop

00000000000a0640 <CMachineInfo::GetDevice(TDeviceId) const>:
   a0640:   350000a1    cbnz    w1, a0654 <CMachineInfo::GetDevice(TDeviceId) const+0x14>
   a0644:   b9401000    ldr w0, [x0, #16]
   a0648:   7100041f    cmp w0, #0x1
   a064c:   1a9f07e0    cset    w0, ne
   a0650:   d65f03c0    ret
   a0654:   900000c0    adrp    x0, b8000 <vtable for CGPIOPin+0x288>
   a0658:   910c8000    add x0, x0, #0x320
   a065c:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a0660:   9104e001    add x1, x0, #0x138
   a0664:   910003fd    mov x29, sp
   a0668:   91052000    add x0, x0, #0x148
   a066c:   52803be2    mov w2, #0x1df
   a0670:   97fff114    bl  9cac0 <assertion_failed>
   a0674:   d503201f    nop
   a0678:   d503201f    nop
   a067c:   d503201f    nop

00000000000a0680 <CMachineInfo::ArePWMChannelsSwapped() const>:
   a0680:   b9401000    ldr w0, [x0, #16]
   a0684:   529fff61    mov w1, #0xfffb
   a0688:   72afffe1    movk    w1, #0x7fff, lsl #16
   a068c:   51001002    sub w2, w0, #0x4
   a0690:   51001800    sub w0, w0, #0x6
   a0694:   6b01005f    cmp w2, w1
   a0698:   7a429800    ccmp    w0, #0x2, #0x0, ls
   a069c:   1a9f97e0    cset    w0, hi
   a06a0:   d65f03c0    ret
   a06a4:   d503201f    nop
   a06a8:   d503201f    nop
   a06ac:   d503201f    nop

00000000000a06b0 <CMachineInfo::AllocateDMAChannel(unsigned int)>:
   a06b0:   d00000c2    adrp    x2, ba000 <font_data+0x1080>
   a06b4:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a06b8:   910003fd    mov x29, sp
   a06bc:   f944bc43    ldr x3, [x2, #2424]
   a06c0:   aa0003e2    mov x2, x0
   a06c4:   b5000063    cbnz    x3, a06d0 <CMachineInfo::AllocateDMAChannel(unsigned int)+0x20>
   a06c8:   14000019    b   a072c <CMachineInfo::AllocateDMAChannel(unsigned int)+0x7c>
   a06cc:   aa0303e2    mov x2, x3
   a06d0:   eb02007f    cmp x3, x2
   a06d4:   54ffffc1    b.ne    a06cc <CMachineInfo::AllocateDMAChannel(unsigned int)+0x1c>
   a06d8:   71003c3f    cmp w1, #0xf
   a06dc:   54000349    b.ls    a0744 <CMachineInfo::AllocateDMAChannel(unsigned int)+0x94>
   a06e0:   7102043f    cmp w1, #0x81
   a06e4:   54000560    b.eq    a0790 <CMachineInfo::AllocateDMAChannel(unsigned int)+0xe0>
   a06e8:   71020c3f    cmp w1, #0x83
   a06ec:   528000e0    mov w0, #0x7
   a06f0:   528001c1    mov w1, #0xe
   a06f4:   52800163    mov w3, #0xb
   a06f8:   1a800021    csel    w1, w1, w0, eq
   a06fc:   1a9f0063    csel    w3, w3, wzr, eq
   a0700:   7940c044    ldrh    w4, [x2, #96]
   a0704:   1ac12880    asr w0, w4, w1
   a0708:   36000080    tbz w0, #0, a0718 <CMachineInfo::AllocateDMAChannel(unsigned int)+0x68>
   a070c:   1400001b    b   a0778 <CMachineInfo::AllocateDMAChannel(unsigned int)+0xc8>
   a0710:   1ac12880    asr w0, w4, w1
   a0714:   37000320    tbnz    w0, #0, a0778 <CMachineInfo::AllocateDMAChannel(unsigned int)+0xc8>
   a0718:   51000421    sub w1, w1, #0x1
   a071c:   6b03003f    cmp w1, w3
   a0720:   54ffff8a    b.ge    a0710 <CMachineInfo::AllocateDMAChannel(unsigned int)+0x60>
   a0724:   52801000    mov w0, #0x80
   a0728:   14000012    b   a0770 <CMachineInfo::AllocateDMAChannel(unsigned int)+0xc0>
   a072c:   900000c0    adrp    x0, b8000 <vtable for CGPIOPin+0x288>
   a0730:   910c8000    add x0, x0, #0x320
   a0734:   9104e001    add x1, x0, #0x138
   a0738:   52803e02    mov w2, #0x1f0
   a073c:   91054000    add x0, x0, #0x150
   a0740:   97fff0e0    bl  9cac0 <assertion_failed>
   a0744:   71001c3f    cmp w1, #0x7
   a0748:   540002a8    b.hi    a079c <CMachineInfo::AllocateDMAChannel(unsigned int)+0xec>
   a074c:   7940c064    ldrh    w4, [x3, #96]
   a0750:   52801000    mov w0, #0x80
   a0754:   1ac12882    asr w2, w4, w1
   a0758:   360000c2    tbz w2, #0, a0770 <CMachineInfo::AllocateDMAChannel(unsigned int)+0xc0>
   a075c:   52800022    mov w2, #0x1
   a0760:   2a0103e0    mov w0, w1
   a0764:   1ac12041    lsl w1, w2, w1
   a0768:   0a210081    bic w1, w4, w1
   a076c:   7900c061    strh    w1, [x3, #96]
   a0770:   a8c17bfd    ldp x29, x30, [sp], #16
   a0774:   d65f03c0    ret
   a0778:   52800023    mov w3, #0x1
   a077c:   2a0103e0    mov w0, w1
   a0780:   1ac12061    lsl w1, w3, w1
   a0784:   0a210081    bic w1, w4, w1
   a0788:   7900c041    strh    w1, [x2, #96]
   a078c:   17fffff9    b   a0770 <CMachineInfo::AllocateDMAChannel(unsigned int)+0xc0>
   a0790:   52800003    mov w3, #0x0
   a0794:   528000c1    mov w1, #0x6
   a0798:   17ffffda    b   a0700 <CMachineInfo::AllocateDMAChannel(unsigned int)+0x50>
   a079c:   900000c0    adrp    x0, b8000 <vtable for CGPIOPin+0x288>
   a07a0:   910c8000    add x0, x0, #0x320
   a07a4:   9104e001    add x1, x0, #0x138
   a07a8:   52803f22    mov w2, #0x1f9
   a07ac:   91058000    add x0, x0, #0x160
   a07b0:   97fff0c4    bl  9cac0 <assertion_failed>
   a07b4:   d503201f    nop
   a07b8:   d503201f    nop
   a07bc:   d503201f    nop

00000000000a07c0 <CMachineInfo::FreeDMAChannel(unsigned int)>:
   a07c0:   d00000c2    adrp    x2, ba000 <font_data+0x1080>
   a07c4:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a07c8:   910003fd    mov x29, sp
   a07cc:   f944bc42    ldr x2, [x2, #2424]
   a07d0:   b5000062    cbnz    x2, a07dc <CMachineInfo::FreeDMAChannel(unsigned int)+0x1c>
   a07d4:   1400000f    b   a0810 <CMachineInfo::FreeDMAChannel(unsigned int)+0x50>
   a07d8:   aa0203e0    mov x0, x2
   a07dc:   eb00005f    cmp x2, x0
   a07e0:   54ffffc1    b.ne    a07d8 <CMachineInfo::FreeDMAChannel(unsigned int)+0x18>
   a07e4:   71001c3f    cmp w1, #0x7
   a07e8:   54000208    b.hi    a0828 <CMachineInfo::FreeDMAChannel(unsigned int)+0x68>
   a07ec:   7940c040    ldrh    w0, [x2, #96]
   a07f0:   1ac12803    asr w3, w0, w1
   a07f4:   37000263    tbnz    w3, #0, a0840 <CMachineInfo::FreeDMAChannel(unsigned int)+0x80>
   a07f8:   52800023    mov w3, #0x1
   a07fc:   1ac12061    lsl w1, w3, w1
   a0800:   2a010000    orr w0, w0, w1
   a0804:   7900c040    strh    w0, [x2, #96]
   a0808:   a8c17bfd    ldp x29, x30, [sp], #16
   a080c:   d65f03c0    ret
   a0810:   900000c0    adrp    x0, b8000 <vtable for CGPIOPin+0x288>
   a0814:   910c8000    add x0, x0, #0x320
   a0818:   9104e001    add x1, x0, #0x138
   a081c:   528043a2    mov w2, #0x21d
   a0820:   91054000    add x0, x0, #0x150
   a0824:   97fff0a7    bl  9cac0 <assertion_failed>
   a0828:   900000c0    adrp    x0, b8000 <vtable for CGPIOPin+0x288>
   a082c:   910c8000    add x0, x0, #0x320
   a0830:   9104e001    add x1, x0, #0x138
   a0834:   528044a2    mov w2, #0x225
   a0838:   91058000    add x0, x0, #0x160
   a083c:   97fff0a1    bl  9cac0 <assertion_failed>
   a0840:   900000c0    adrp    x0, b8000 <vtable for CGPIOPin+0x288>
   a0844:   910c8000    add x0, x0, #0x320
   a0848:   9104e001    add x1, x0, #0x138
   a084c:   528044c2    mov w2, #0x226
   a0850:   91060000    add x0, x0, #0x180
   a0854:   97fff09b    bl  9cac0 <assertion_failed>
   a0858:   d503201f    nop
   a085c:   d503201f    nop

00000000000a0860 <CMachineInfo::FetchDTB()>:                         // https://github.com/rsta2/circle/blob/c21f2efdad86c1062f255fbf891135a2a356713e/lib/machineinfo.cpp#L556
   a0860:   d2801f01    mov x1, #0xf8
   a0864:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   a0868:   910003fd    mov x29, sp
   a086c:   a90153f3    stp x19, x20, [sp, #16]
   a0870:   aa0003f3    mov x19, x0
   a0874:   f90017e1    str x1, [sp, #40]
   a0878:   f94017e0    ldr x0, [sp, #40]
   a087c:   b9400014    ldr w20, [x0]
   a0880:   34000174    cbz w20, a08ac <CMachineInfo::FetchDTB()+0x4c>
   a0884:   f9403a60    ldr x0, [x19, #112]
   a0888:   b5000180    cbnz    x0, a08b8 <CMachineInfo::FetchDTB()+0x58>
   a088c:   d2800100    mov x0, #0x8
   a0890:   94001bcc    bl  a77c0 <operator new(unsigned long)>
   a0894:   2a1403e1    mov w1, w20
   a0898:   aa0003f4    mov x20, x0
   a089c:   94002895    bl  aaaf0 <CDeviceTreeBlob::CDeviceTreeBlob(void const*)>
   a08a0:   f94017e0    ldr x0, [sp, #40]
   a08a4:   f9003a74    str x20, [x19, #112]
   a08a8:   b900001f    str wzr, [x0]
   a08ac:   a94153f3    ldp x19, x20, [sp, #16]
   a08b0:   a8c37bfd    ldp x29, x30, [sp], #48
   a08b4:   d65f03c0    ret
   a08b8:   900000c0    adrp    x0, b8000 <vtable for CGPIOPin+0x288>
   a08bc:   910c8000    add x0, x0, #0x320
   a08c0:   9104e001    add x1, x0, #0x138
   a08c4:   52804662    mov w2, #0x233
   a08c8:   9106a000    add x0, x0, #0x1a8
   a08cc:   97fff07d    bl  9cac0 <assertion_failed>

00000000000a08d0 <CMachineInfo::GetPCIeDMAMemory() const>:
   a08d0:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   a08d4:   d00000c1    adrp    x1, ba000 <font_data+0x1080>
   a08d8:   910003fd    mov x29, sp
   a08dc:   a90153f3    stp x19, x20, [sp, #16]
   a08e0:   aa0003f3    mov x19, x0
   a08e4:   f944bc34    ldr x20, [x1, #2424]
   a08e8:   a9025bf5    stp x21, x22, [sp, #32]
   a08ec:   aa0803f5    mov x21, x8
   a08f0:   b5000074    cbnz    x20, a08fc <CMachineInfo::GetPCIeDMAMemory() const+0x2c>
   a08f4:   14000028    b   a0994 <CMachineInfo::GetPCIeDMAMemory() const+0xc4>
   a08f8:   aa1403f3    mov x19, x20
   a08fc:   eb13029f    cmp x20, x19
   a0900:   54ffffc1    b.ne    a08f8 <CMachineInfo::GetPCIeDMAMemory() const+0x28>
   a0904:   f9403a80    ldr x0, [x20, #112]
   a0908:   b4000280    cbz x0, a0958 <CMachineInfo::GetPCIeDMAMemory() const+0x88>
   a090c:   900000d6    adrp    x22, b8000 <vtable for CGPIOPin+0x288>
   a0910:   910c82d6    add x22, x22, #0x320
   a0914:   9106e2c1    add x1, x22, #0x1b8
   a0918:   d2800002    mov x2, #0x0
   a091c:   9400298d    bl  aaf50 <CDeviceTreeBlob::FindNode(char const*, TDeviceTreeNode const*) const>
   a0920:   aa0003e1    mov x1, x0
   a0924:   b40001a0    cbz x0, a0958 <CMachineInfo::GetPCIeDMAMemory() const+0x88>
   a0928:   f9403a80    ldr x0, [x20, #112]
   a092c:   910742c2    add x2, x22, #0x1d0
   a0930:   f9001bf7    str x23, [sp, #48]
   a0934:   9400298b    bl  aaf60 <CDeviceTreeBlob::FindProperty(TDeviceTreeNode const*, char const*) const>
   a0938:   aa0003f7    mov x23, x0
   a093c:   b40000c0    cbz x0, a0954 <CMachineInfo::GetPCIeDMAMemory() const+0x84>
   a0940:   aa0003e1    mov x1, x0
   a0944:   f9403a80    ldr x0, [x20, #112]
   a0948:   94002a0a    bl  ab170 <CDeviceTreeBlob::GetPropertyValueLength(TDeviceTreeProperty const*) const>
   a094c:   f100701f    cmp x0, #0x1c
   a0950:   540003a0    b.eq    a09c4 <CMachineInfo::GetPCIeDMAMemory() const+0xf4>
   a0954:   f9401bf7    ldr x23, [sp, #48]
   a0958:   b9401261    ldr w1, [x19, #16]
   a095c:   b9405260    ldr w0, [x19, #80]
   a0960:   7100403f    cmp w1, #0x10
   a0964:   d36c7c01    ubfiz   x1, x0, #20, #32
   a0968:   54000240    b.eq    a09b0 <CMachineInfo::GetPCIeDMAMemory() const+0xe0>
   a096c:   713ffc1f    cmp w0, #0xfff
   a0970:   9a9f97f3    cset    x19, hi
   a0974:   d35e7673    lsl x19, x19, #34
   a0978:   d2800016    mov x22, #0x0
   a097c:   a9005ab3    stp x19, x22, [x21]
   a0980:   a94153f3    ldp x19, x20, [sp, #16]
   a0984:   f9000aa1    str x1, [x21, #16]
   a0988:   a9425bf5    ldp x21, x22, [sp, #32]
   a098c:   a8c47bfd    ldp x29, x30, [sp], #64
   a0990:   d65f03c0    ret
   a0994:   900000c0    adrp    x0, b8000 <vtable for CGPIOPin+0x288>
   a0998:   910c8000    add x0, x0, #0x320
   a099c:   f9001bf7    str x23, [sp, #48]
   a09a0:   9104e001    add x1, x0, #0x138
   a09a4:   528047a2    mov w2, #0x23d
   a09a8:   91054000    add x0, x0, #0x150
   a09ac:   97fff045    bl  9cac0 <assertion_failed>
   a09b0:   b9403262    ldr w2, [x19, #48]
   a09b4:   d2800013    mov x19, #0x0
   a09b8:   7100105f    cmp w2, #0x4
   a09bc:   54fffde9    b.ls    a0978 <CMachineInfo::GetPCIeDMAMemory() const+0xa8>
   a09c0:   17ffffeb    b   a096c <CMachineInfo::GetPCIeDMAMemory() const+0x9c>
   a09c4:   f9403a80    ldr x0, [x20, #112]
   a09c8:   aa1703e1    mov x1, x23
   a09cc:   52800022    mov w2, #0x1
   a09d0:   94002a10    bl  ab210 <CDeviceTreeBlob::GetPropertyValueWord(TDeviceTreeProperty const*, unsigned int) const>
   a09d4:   aa1703e1    mov x1, x23
   a09d8:   2a0003f3    mov w19, w0
   a09dc:   f9403a80    ldr x0, [x20, #112]
   a09e0:   52800042    mov w2, #0x2
   a09e4:   94002a0b    bl  ab210 <CDeviceTreeBlob::GetPropertyValueWord(TDeviceTreeProperty const*, unsigned int) const>
   a09e8:   2a0003e3    mov w3, w0
   a09ec:   f9403a80    ldr x0, [x20, #112]
   a09f0:   aa1703e1    mov x1, x23
   a09f4:   52800062    mov w2, #0x3
   a09f8:   aa138073    orr x19, x3, x19, lsl #32
   a09fc:   94002a05    bl  ab210 <CDeviceTreeBlob::GetPropertyValueWord(TDeviceTreeProperty const*, unsigned int) const>
   a0a00:   aa1703e1    mov x1, x23
   a0a04:   2a0003f6    mov w22, w0
   a0a08:   f9403a80    ldr x0, [x20, #112]
   a0a0c:   52800082    mov w2, #0x4
   a0a10:   94002a00    bl  ab210 <CDeviceTreeBlob::GetPropertyValueWord(TDeviceTreeProperty const*, unsigned int) const>
   a0a14:   2a0003e3    mov w3, w0
   a0a18:   f9403a80    ldr x0, [x20, #112]
   a0a1c:   aa1703e1    mov x1, x23
   a0a20:   528000a2    mov w2, #0x5
   a0a24:   aa168076    orr x22, x3, x22, lsl #32
   a0a28:   940029fa    bl  ab210 <CDeviceTreeBlob::GetPropertyValueWord(TDeviceTreeProperty const*, unsigned int) const>
   a0a2c:   2a0003e3    mov w3, w0
   a0a30:   f9403a80    ldr x0, [x20, #112]
   a0a34:   aa1703e1    mov x1, x23
   a0a38:   528000c2    mov w2, #0x6
   a0a3c:   2a0303f4    mov w20, w3
   a0a40:   940029f4    bl  ab210 <CDeviceTreeBlob::GetPropertyValueWord(TDeviceTreeProperty const*, unsigned int) const>
   a0a44:   2a0003e0    mov w0, w0
   a0a48:   f9401bf7    ldr x23, [sp, #48]
   a0a4c:   aa148001    orr x1, x0, x20, lsl #32
   a0a50:   17ffffcb    b   a097c <CMachineInfo::GetPCIeDMAMemory() const+0xac>
   a0a54:   d503201f    nop
   a0a58:   d503201f    nop
   a0a5c:   d503201f    nop

00000000000a0a60 <CMachineInfo::Get()>:
   a0a60:   d00000c0    adrp    x0, ba000 <font_data+0x1080>
   a0a64:   f944bc00    ldr x0, [x0, #2424]
   a0a68:   b4000040    cbz x0, a0a70 <CMachineInfo::Get()+0x10>
   a0a6c:   d65f03c0    ret
   a0a70:   900000c0    adrp    x0, b8000 <vtable for CGPIOPin+0x288>
   a0a74:   910c8000    add x0, x0, #0x320
   a0a78:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a0a7c:   9104e001    add x1, x0, #0x138
   a0a80:   910003fd    mov x29, sp
   a0a84:   91054000    add x0, x0, #0x150
   a0a88:   52804de2    mov w2, #0x26f
   a0a8c:   97fff00d    bl  9cac0 <assertion_failed>

00000000000a0a90 <CPtrList::CPtrList()>:
   a0a90:   f900001f    str xzr, [x0]
   a0a94:   d65f03c0    ret
   a0a98:   d503201f    nop
   a0a9c:   d503201f    nop

00000000000a0aa0 <CPtrList::~CPtrList()>:
   a0aa0:   f9400000    ldr x0, [x0]
   a0aa4:   b5000040    cbnz    x0, a0aac <CPtrList::~CPtrList()+0xc>
   a0aa8:   d65f03c0    ret
   a0aac:   f0000081    adrp    x1, b3000 <_etext+0x3f9c>
   a0ab0:   f0000080    adrp    x0, b3000 <_etext+0x3f9c>
   a0ab4:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a0ab8:   91074021    add x1, x1, #0x1d0
   a0abc:   910003fd    mov x29, sp
   a0ac0:   91078000    add x0, x0, #0x1e0
   a0ac4:   52800542    mov w2, #0x2a
   a0ac8:   97ffeffe    bl  9cac0 <assertion_failed>
   a0acc:   d503201f    nop

00000000000a0ad0 <CPtrList::GetFirst()>:
   a0ad0:   f9400000    ldr x0, [x0]
   a0ad4:   d65f03c0    ret
   a0ad8:   d503201f    nop
   a0adc:   d503201f    nop

00000000000a0ae0 <CPtrList::GetNext(TPtrListElement*)>:
   a0ae0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a0ae4:   910003fd    mov x29, sp
   a0ae8:   b4000121    cbz x1, a0b0c <CPtrList::GetNext(TPtrListElement*)+0x2c>
   a0aec:   5289a860    mov w0, #0x4d43
   a0af0:   72aa0980    movk    w0, #0x504c, lsl #16
   a0af4:   b9400022    ldr w2, [x1]
   a0af8:   6b00005f    cmp w2, w0
   a0afc:   54000141    b.ne    a0b24 <CPtrList::GetNext(TPtrListElement*)+0x44>
   a0b00:   f9400820    ldr x0, [x1, #16]
   a0b04:   a8c17bfd    ldp x29, x30, [sp], #16
   a0b08:   d65f03c0    ret
   a0b0c:   f0000081    adrp    x1, b3000 <_etext+0x3f9c>
   a0b10:   f0000080    adrp    x0, b3000 <_etext+0x3f9c>
   a0b14:   91074021    add x1, x1, #0x1d0
   a0b18:   9100e000    add x0, x0, #0x38
   a0b1c:   52800682    mov w2, #0x34
   a0b20:   97ffefe8    bl  9cac0 <assertion_failed>
   a0b24:   f0000081    adrp    x1, b3000 <_etext+0x3f9c>
   a0b28:   f0000080    adrp    x0, b3000 <_etext+0x3f9c>
   a0b2c:   91074021    add x1, x1, #0x1d0
   a0b30:   9107c000    add x0, x0, #0x1f0
   a0b34:   528006a2    mov w2, #0x35
   a0b38:   97ffefe2    bl  9cac0 <assertion_failed>
   a0b3c:   d503201f    nop

00000000000a0b40 <CPtrList::GetPtr(TPtrListElement*)>:
   a0b40:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a0b44:   910003fd    mov x29, sp
   a0b48:   b4000121    cbz x1, a0b6c <CPtrList::GetPtr(TPtrListElement*)+0x2c>
   a0b4c:   5289a860    mov w0, #0x4d43
   a0b50:   72aa0980    movk    w0, #0x504c, lsl #16
   a0b54:   b9400022    ldr w2, [x1]
   a0b58:   6b00005f    cmp w2, w0
   a0b5c:   54000141    b.ne    a0b84 <CPtrList::GetPtr(TPtrListElement*)+0x44>
   a0b60:   f9400c20    ldr x0, [x1, #24]
   a0b64:   a8c17bfd    ldp x29, x30, [sp], #16
   a0b68:   d65f03c0    ret
   a0b6c:   f0000081    adrp    x1, b3000 <_etext+0x3f9c>
   a0b70:   f0000080    adrp    x0, b3000 <_etext+0x3f9c>
   a0b74:   91074021    add x1, x1, #0x1d0
   a0b78:   9100e000    add x0, x0, #0x38
   a0b7c:   52800782    mov w2, #0x3c
   a0b80:   97ffefd0    bl  9cac0 <assertion_failed>
   a0b84:   f0000081    adrp    x1, b3000 <_etext+0x3f9c>
   a0b88:   f0000080    adrp    x0, b3000 <_etext+0x3f9c>
   a0b8c:   91074021    add x1, x1, #0x1d0
   a0b90:   9107c000    add x0, x0, #0x1f0
   a0b94:   528007a2    mov w2, #0x3d
   a0b98:   97ffefca    bl  9cac0 <assertion_failed>
   a0b9c:   d503201f    nop

00000000000a0ba0 <CPtrList::InsertBefore(TPtrListElement*, void*)>:
   a0ba0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   a0ba4:   910003fd    mov x29, sp
   a0ba8:   a90153f3    stp x19, x20, [sp, #16]
   a0bac:   aa0003f4    mov x20, x0
   a0bb0:   d2800400    mov x0, #0x20
   a0bb4:   aa0103f3    mov x19, x1
   a0bb8:   f90013f5    str x21, [sp, #32]
   a0bbc:   aa0203f5    mov x21, x2
   a0bc0:   94001b00    bl  a77c0 <operator new(unsigned long)>
   a0bc4:   5289a862    mov w2, #0x4d43
   a0bc8:   72aa0982    movk    w2, #0x504c, lsl #16
   a0bcc:   f9400281    ldr x1, [x20]
   a0bd0:   f9000c15    str x21, [x0, #24]
   a0bd4:   b9000002    str w2, [x0]
   a0bd8:   b4000341    cbz x1, a0c40 <CPtrList::InsertBefore(TPtrListElement*, void*)+0xa0>
   a0bdc:   b40003f3    cbz x19, a0c58 <CPtrList::InsertBefore(TPtrListElement*, void*)+0xb8>
   a0be0:   b9400263    ldr w3, [x19]
   a0be4:   6b02007f    cmp w3, w2
   a0be8:   54000441    b.ne    a0c70 <CPtrList::InsertBefore(TPtrListElement*, void*)+0xd0>
   a0bec:   eb13003f    cmp x1, x19
   a0bf0:   540001a0    b.eq    a0c24 <CPtrList::InsertBefore(TPtrListElement*, void*)+0x84>
   a0bf4:   f9400661    ldr x1, [x19, #8]
   a0bf8:   a900cc01    stp x1, x19, [x0, #8]
   a0bfc:   b40000a1    cbz x1, a0c10 <CPtrList::InsertBefore(TPtrListElement*, void*)+0x70>
   a0c00:   b9400022    ldr w2, [x1]
   a0c04:   6b03005f    cmp w2, w3
   a0c08:   54000401    b.ne    a0c88 <CPtrList::InsertBefore(TPtrListElement*, void*)+0xe8>
   a0c0c:   f9000820    str x0, [x1, #16]
   a0c10:   f94013f5    ldr x21, [sp, #32]
   a0c14:   f9000660    str x0, [x19, #8]
   a0c18:   a94153f3    ldp x19, x20, [sp, #16]
   a0c1c:   a8c37bfd    ldp x29, x30, [sp], #48
   a0c20:   d65f03c0    ret
   a0c24:   f9000420    str x0, [x1, #8]
   a0c28:   f94013f5    ldr x21, [sp, #32]
   a0c2c:   f9000280    str x0, [x20]
   a0c30:   a94153f3    ldp x19, x20, [sp, #16]
   a0c34:   a900841f    stp xzr, x1, [x0, #8]
   a0c38:   a8c37bfd    ldp x29, x30, [sp], #48
   a0c3c:   d65f03c0    ret
   a0c40:   f0000081    adrp    x1, b3000 <_etext+0x3f9c>
   a0c44:   f0000080    adrp    x0, b3000 <_etext+0x3f9c>
   a0c48:   91074021    add x1, x1, #0x1d0
   a0c4c:   91086000    add x0, x0, #0x218
   a0c50:   52800982    mov w2, #0x4c
   a0c54:   97ffef9b    bl  9cac0 <assertion_failed>
   a0c58:   f0000081    adrp    x1, b3000 <_etext+0x3f9c>
   a0c5c:   f0000080    adrp    x0, b3000 <_etext+0x3f9c>
   a0c60:   91074021    add x1, x1, #0x1d0
   a0c64:   9108a000    add x0, x0, #0x228
   a0c68:   528009a2    mov w2, #0x4d
   a0c6c:   97ffef95    bl  9cac0 <assertion_failed>
   a0c70:   f0000081    adrp    x1, b3000 <_etext+0x3f9c>
   a0c74:   f0000080    adrp    x0, b3000 <_etext+0x3f9c>
   a0c78:   91074021    add x1, x1, #0x1d0
   a0c7c:   9108e000    add x0, x0, #0x238
   a0c80:   528009c2    mov w2, #0x4e
   a0c84:   97ffef8f    bl  9cac0 <assertion_failed>
   a0c88:   f0000081    adrp    x1, b3000 <_etext+0x3f9c>
   a0c8c:   f0000080    adrp    x0, b3000 <_etext+0x3f9c>
   a0c90:   91074021    add x1, x1, #0x1d0
   a0c94:   91098000    add x0, x0, #0x260
   a0c98:   52800c02    mov w2, #0x60
   a0c9c:   97ffef89    bl  9cac0 <assertion_failed>

00000000000a0ca0 <CPtrList::InsertAfter(TPtrListElement*, void*)>:
   a0ca0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   a0ca4:   910003fd    mov x29, sp
   a0ca8:   a90153f3    stp x19, x20, [sp, #16]
   a0cac:   aa0003f4    mov x20, x0
   a0cb0:   d2800400    mov x0, #0x20
   a0cb4:   aa0103f3    mov x19, x1
   a0cb8:   f90013f5    str x21, [sp, #32]
   a0cbc:   aa0203f5    mov x21, x2
   a0cc0:   94001ac0    bl  a77c0 <operator new(unsigned long)>
   a0cc4:   5289a861    mov w1, #0x4d43
   a0cc8:   72aa0981    movk    w1, #0x504c, lsl #16
   a0ccc:   f9000c15    str x21, [x0, #24]
   a0cd0:   b9000001    str w1, [x0]
   a0cd4:   b4000253    cbz x19, a0d1c <CPtrList::InsertAfter(TPtrListElement*, void*)+0x7c>
   a0cd8:   f9400282    ldr x2, [x20]
   a0cdc:   b4000302    cbz x2, a0d3c <CPtrList::InsertAfter(TPtrListElement*, void*)+0x9c>
   a0ce0:   b9400262    ldr w2, [x19]
   a0ce4:   6b01005f    cmp w2, w1
   a0ce8:   54000361    b.ne    a0d54 <CPtrList::InsertAfter(TPtrListElement*, void*)+0xb4>
   a0cec:   f9400a61    ldr x1, [x19, #16]
   a0cf0:   a9008413    stp x19, x1, [x0, #8]
   a0cf4:   b40000a1    cbz x1, a0d08 <CPtrList::InsertAfter(TPtrListElement*, void*)+0x68>
   a0cf8:   b9400023    ldr w3, [x1]
   a0cfc:   6b02007f    cmp w3, w2
   a0d00:   54000361    b.ne    a0d6c <CPtrList::InsertAfter(TPtrListElement*, void*)+0xcc>
   a0d04:   f9000420    str x0, [x1, #8]
   a0d08:   f94013f5    ldr x21, [sp, #32]
   a0d0c:   f9000a60    str x0, [x19, #16]
   a0d10:   a94153f3    ldp x19, x20, [sp, #16]
   a0d14:   a8c37bfd    ldp x29, x30, [sp], #48
   a0d18:   d65f03c0    ret
   a0d1c:   f9400281    ldr x1, [x20]
   a0d20:   b5000321    cbnz    x1, a0d84 <CPtrList::InsertAfter(TPtrListElement*, void*)+0xe4>
   a0d24:   f94013f5    ldr x21, [sp, #32]
   a0d28:   f9000280    str x0, [x20]
   a0d2c:   a94153f3    ldp x19, x20, [sp, #16]
   a0d30:   a900fc1f    stp xzr, xzr, [x0, #8]
   a0d34:   a8c37bfd    ldp x29, x30, [sp], #48
   a0d38:   d65f03c0    ret
   a0d3c:   f0000081    adrp    x1, b3000 <_etext+0x3f9c>
   a0d40:   f0000080    adrp    x0, b3000 <_etext+0x3f9c>
   a0d44:   91074021    add x1, x1, #0x1d0
   a0d48:   91086000    add x0, x0, #0x218
   a0d4c:   52800fa2    mov w2, #0x7d
   a0d50:   97ffef5c    bl  9cac0 <assertion_failed>
   a0d54:   f0000081    adrp    x1, b3000 <_etext+0x3f9c>
   a0d58:   f0000080    adrp    x0, b3000 <_etext+0x3f9c>
   a0d5c:   91074021    add x1, x1, #0x1d0
   a0d60:   910a2000    add x0, x0, #0x288
   a0d64:   52800fc2    mov w2, #0x7e
   a0d68:   97ffef56    bl  9cac0 <assertion_failed>
   a0d6c:   f0000081    adrp    x1, b3000 <_etext+0x3f9c>
   a0d70:   f0000080    adrp    x0, b3000 <_etext+0x3f9c>
   a0d74:   91074021    add x1, x1, #0x1d0
   a0d78:   910ac000    add x0, x0, #0x2b0
   a0d7c:   528010a2    mov w2, #0x85
   a0d80:   97ffef50    bl  9cac0 <assertion_failed>
   a0d84:   f0000081    adrp    x1, b3000 <_etext+0x3f9c>
   a0d88:   f0000080    adrp    x0, b3000 <_etext+0x3f9c>
   a0d8c:   91074021    add x1, x1, #0x1d0
   a0d90:   91078000    add x0, x0, #0x1e0
   a0d94:   52800e82    mov w2, #0x74
   a0d98:   97ffef4a    bl  9cac0 <assertion_failed>
   a0d9c:   d503201f    nop

00000000000a0da0 <CPtrList::Remove(TPtrListElement*)>:
   a0da0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a0da4:   910003fd    mov x29, sp
   a0da8:   b4000541    cbz x1, a0e50 <CPtrList::Remove(TPtrListElement*)+0xb0>
   a0dac:   5289a863    mov w3, #0x4d43
   a0db0:   72aa0983    movk    w3, #0x504c, lsl #16
   a0db4:   b9400022    ldr w2, [x1]
   a0db8:   6b03005f    cmp w2, w3
   a0dbc:   54000561    b.ne    a0e68 <CPtrList::Remove(TPtrListElement*)+0xc8>
   a0dc0:   f9400003    ldr x3, [x0]
   a0dc4:   eb01007f    cmp x3, x1
   a0dc8:   54000220    b.eq    a0e0c <CPtrList::Remove(TPtrListElement*)+0x6c>
   a0dcc:   f9400420    ldr x0, [x1, #8]
   a0dd0:   b4000580    cbz x0, a0e80 <CPtrList::Remove(TPtrListElement*)+0xe0>
   a0dd4:   b9400003    ldr w3, [x0]
   a0dd8:   6b02007f    cmp w3, w2
   a0ddc:   540002e1    b.ne    a0e38 <CPtrList::Remove(TPtrListElement*)+0x98>
   a0de0:   f9400822    ldr x2, [x1, #16]
   a0de4:   f9000802    str x2, [x0, #16]
   a0de8:   b40000a2    cbz x2, a0dfc <CPtrList::Remove(TPtrListElement*)+0x5c>
   a0dec:   b9400044    ldr w4, [x2]
   a0df0:   6b03009f    cmp w4, w3
   a0df4:   54000521    b.ne    a0e98 <CPtrList::Remove(TPtrListElement*)+0xf8>
   a0df8:   f9000440    str x0, [x2, #8]
   a0dfc:   aa0103e0    mov x0, x1
   a0e00:   a8c17bfd    ldp x29, x30, [sp], #16
   a0e04:   d2800401    mov x1, #0x20
   a0e08:   14001a96    b   a7860 <operator delete(void*, unsigned long)>
   a0e0c:   f9400863    ldr x3, [x3, #16]
   a0e10:   f9000003    str x3, [x0]
   a0e14:   b4ffff43    cbz x3, a0dfc <CPtrList::Remove(TPtrListElement*)+0x5c>
   a0e18:   b9400060    ldr w0, [x3]
   a0e1c:   6b02001f    cmp w0, w2
   a0e20:   54000481    b.ne    a0eb0 <CPtrList::Remove(TPtrListElement*)+0x110>
   a0e24:   aa0103e0    mov x0, x1
   a0e28:   d2800401    mov x1, #0x20
   a0e2c:   f900047f    str xzr, [x3, #8]
   a0e30:   a8c17bfd    ldp x29, x30, [sp], #16
   a0e34:   14001a8b    b   a7860 <operator delete(void*, unsigned long)>
   a0e38:   f0000081    adrp    x1, b3000 <_etext+0x3f9c>
   a0e3c:   f0000080    adrp    x0, b3000 <_etext+0x3f9c>
   a0e40:   91074021    add x1, x1, #0x1d0
   a0e44:   910ca000    add x0, x0, #0x328
   a0e48:   528013e2    mov w2, #0x9f
   a0e4c:   97ffef1d    bl  9cac0 <assertion_failed>
   a0e50:   f0000081    adrp    x1, b3000 <_etext+0x3f9c>
   a0e54:   f0000080    adrp    x0, b3000 <_etext+0x3f9c>
   a0e58:   91074021    add x1, x1, #0x1d0
   a0e5c:   9100e000    add x0, x0, #0x38
   a0e60:   528011e2    mov w2, #0x8f
   a0e64:   97ffef17    bl  9cac0 <assertion_failed>
   a0e68:   f0000081    adrp    x1, b3000 <_etext+0x3f9c>
   a0e6c:   f0000080    adrp    x0, b3000 <_etext+0x3f9c>
   a0e70:   91074021    add x1, x1, #0x1d0
   a0e74:   9107c000    add x0, x0, #0x1f0
   a0e78:   52801202    mov w2, #0x90
   a0e7c:   97ffef11    bl  9cac0 <assertion_failed>
   a0e80:   f0000081    adrp    x1, b3000 <_etext+0x3f9c>
   a0e84:   f0000080    adrp    x0, b3000 <_etext+0x3f9c>
   a0e88:   91074021    add x1, x1, #0x1d0
   a0e8c:   910c4000    add x0, x0, #0x310
   a0e90:   528013c2    mov w2, #0x9e
   a0e94:   97ffef0b    bl  9cac0 <assertion_failed>
   a0e98:   f0000081    adrp    x1, b3000 <_etext+0x3f9c>
   a0e9c:   f0000080    adrp    x0, b3000 <_etext+0x3f9c>
   a0ea0:   91074021    add x1, x1, #0x1d0
   a0ea4:   910b8000    add x0, x0, #0x2e0
   a0ea8:   52801482    mov w2, #0xa4
   a0eac:   97ffef05    bl  9cac0 <assertion_failed>
   a0eb0:   f0000081    adrp    x1, b3000 <_etext+0x3f9c>
   a0eb4:   f0000080    adrp    x0, b3000 <_etext+0x3f9c>
   a0eb8:   91074021    add x1, x1, #0x1d0
   a0ebc:   910b8000    add x0, x0, #0x2e0
   a0ec0:   52801302    mov w2, #0x98
   a0ec4:   97ffeeff    bl  9cac0 <assertion_failed>
   a0ec8:   d503201f    nop
   a0ecc:   d503201f    nop

00000000000a0ed0 <CPtrList::Find(void*)>:
   a0ed0:   f9400000    ldr x0, [x0]
   a0ed4:   b4000280    cbz x0, a0f24 <CPtrList::Find(void*)+0x54>
   a0ed8:   5289a863    mov w3, #0x4d43
   a0edc:   72aa0983    movk    w3, #0x504c, lsl #16
   a0ee0:   14000006    b   a0ef8 <CPtrList::Find(void*)+0x28>
   a0ee4:   f9400c02    ldr x2, [x0, #24]
   a0ee8:   eb01005f    cmp x2, x1
   a0eec:   540001c0    b.eq    a0f24 <CPtrList::Find(void*)+0x54>
   a0ef0:   f9400800    ldr x0, [x0, #16]
   a0ef4:   b4000180    cbz x0, a0f24 <CPtrList::Find(void*)+0x54>
   a0ef8:   b9400002    ldr w2, [x0]
   a0efc:   6b03005f    cmp w2, w3
   a0f00:   54ffff20    b.eq    a0ee4 <CPtrList::Find(void*)+0x14>
   a0f04:   f0000081    adrp    x1, b3000 <_etext+0x3f9c>
   a0f08:   f0000080    adrp    x0, b3000 <_etext+0x3f9c>
   a0f0c:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a0f10:   91074021    add x1, x1, #0x1d0
   a0f14:   910003fd    mov x29, sp
   a0f18:   9107c000    add x0, x0, #0x1f0
   a0f1c:   52801662    mov w2, #0xb3
   a0f20:   97ffeee8    bl  9cac0 <assertion_failed>
   a0f24:   d65f03c0    ret
    ...

00000000000a0f30 <CScreenDevice::~CScreenDevice()>:
   a0f30:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a0f34:   900000c1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a0f38:   911de021    add x1, x1, #0x778
   a0f3c:   910003fd    mov x29, sp
   a0f40:   a90153f3    stp x19, x20, [sp, #16]
   a0f44:   aa0003f3    mov x19, x0
   a0f48:   f9000001    str x1, [x0]
   a0f4c:   97fff2c5    bl  9da60 <CDeviceNameService::Get()>
   a0f50:   b9401e62    ldr w2, [x19, #28]
   a0f54:   900000c1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a0f58:   52800003    mov w3, #0x0
   a0f5c:   911d6021    add x1, x1, #0x758
   a0f60:   11000442    add w2, w2, #0x1
   a0f64:   97fff2eb    bl  9db10 <CDeviceNameService::RemoveDevice(char const*, unsigned int, bool)>
   a0f68:   39406260    ldrb    w0, [x19, #24]
   a0f6c:   36000080    tbz w0, #0, a0f7c <CScreenDevice::~CScreenDevice()+0x4c>
   a0f70:   f9401e60    ldr x0, [x19, #56]
   a0f74:   b4000040    cbz x0, a0f7c <CScreenDevice::~CScreenDevice()+0x4c>
   a0f78:   94001a2e    bl  a7830 <operator delete[](void*)>
   a0f7c:   f9401274    ldr x20, [x19, #32]
   a0f80:   f9001e7f    str xzr, [x19, #56]
   a0f84:   b40000d4    cbz x20, a0f9c <CScreenDevice::~CScreenDevice()+0x6c>
   a0f88:   aa1403e0    mov x0, x20
   a0f8c:   940029c1    bl  ab690 <CBcmFrameBuffer::~CBcmFrameBuffer()>
   a0f90:   aa1403e0    mov x0, x20
   a0f94:   d2801401    mov x1, #0xa0
   a0f98:   94001a32    bl  a7860 <operator delete(void*, unsigned long)>
   a0f9c:   f9401a60    ldr x0, [x19, #48]
   a0fa0:   f900127f    str xzr, [x19, #32]
   a0fa4:   b4000040    cbz x0, a0fac <CScreenDevice::~CScreenDevice()+0x7c>
   a0fa8:   94001a22    bl  a7830 <operator delete[](void*)>
   a0fac:   91020260    add x0, x19, #0x80
   a0fb0:   f9001a7f    str xzr, [x19, #48]
   a0fb4:   94002c23    bl  ac040 <CDMAChannel::~CDMAChannel()>
   a0fb8:   9100a260    add x0, x19, #0x28
   a0fbc:   94002b85    bl  abdd0 <CCharGenerator::~CCharGenerator()>
   a0fc0:   aa1303e0    mov x0, x19
   a0fc4:   a94153f3    ldp x19, x20, [sp, #16]
   a0fc8:   a8c27bfd    ldp x29, x30, [sp], #32
   a0fcc:   17fff111    b   9d410 <CDevice::~CDevice()>

00000000000a0fd0 <CScreenDevice::~CScreenDevice()>:
   a0fd0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a0fd4:   910003fd    mov x29, sp
   a0fd8:   f9000bf3    str x19, [sp, #16]
   a0fdc:   aa0003f3    mov x19, x0
   a0fe0:   97ffffd4    bl  a0f30 <CScreenDevice::~CScreenDevice()>
   a0fe4:   aa1303e0    mov x0, x19
   a0fe8:   f9400bf3    ldr x19, [sp, #16]
   a0fec:   d2801c01    mov x1, #0xe0
   a0ff0:   a8c27bfd    ldp x29, x30, [sp], #32
   a0ff4:   14001a1b    b   a7860 <operator delete(void*, unsigned long)>
   a0ff8:   d503201f    nop
   a0ffc:   d503201f    nop

00000000000a1000 <CScreenDevice::InvertCursor() [clone .part.0]>:
   a1000:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   a1004:   910003fd    mov x29, sp
   a1008:   a9025bf5    stp x21, x22, [sp, #32]
   a100c:   9100a015    add x21, x0, #0x28
   a1010:   a90153f3    stp x19, x20, [sp, #16]
   a1014:   aa0003f3    mov x19, x0
   a1018:   f9001bf7    str x23, [sp, #48]
   a101c:   f9401817    ldr x23, [x0, #48]
   a1020:   aa1503e0    mov x0, x21
   a1024:   94002b77    bl  abe00 <CCharGenerator::GetUnderline() const>
   a1028:   2a0003f4    mov w20, w0
   a102c:   aa1503e0    mov x0, x21
   a1030:   94002b70    bl  abdf0 <CCharGenerator::GetCharHeight() const>
   a1034:   6b00029f    cmp w20, w0
   a1038:   54000402    b.cs    a10b8 <CScreenDevice::InvertCursor() [clone .part.0]+0xb8>
   a103c:   d503201f    nop
   a1040:   aa1503e0    mov x0, x21
   a1044:   52800016    mov w22, #0x0
   a1048:   94002b66    bl  abde0 <CCharGenerator::GetCharWidth() const>
   a104c:   6b0002df    cmp w22, w0
   a1050:   540002a2    b.cs    a10a4 <CScreenDevice::InvertCursor() [clone .part.0]+0xa4>
   a1054:   d503201f    nop
   a1058:   294c0662    ldp w2, w1, [x19, #96]
   a105c:   91000af7    add x23, x23, #0x2
   a1060:   3941a663    ldrb    w3, [x19, #105]
   a1064:   b9404a60    ldr w0, [x19, #72]
   a1068:   0b0202c2    add w2, w22, w2
   a106c:   0b010281    add w1, w20, w1
   a1070:   37000343    tbnz    w3, #0, a10d8 <CScreenDevice::InvertCursor() [clone .part.0]+0xd8>
   a1074:   6b00005f    cmp w2, w0
   a1078:   54000082    b.cs    a1088 <CScreenDevice::InvertCursor() [clone .part.0]+0x88>
   a107c:   b9404e60    ldr w0, [x19, #76]
   a1080:   6b00003f    cmp w1, w0
   a1084:   54000423    b.cc    a1108 <CScreenDevice::InvertCursor() [clone .part.0]+0x108>
   a1088:   7940da60    ldrh    w0, [x19, #108]
   a108c:   781fe2e0    sturh   w0, [x23, #-2]
   a1090:   110006d6    add w22, w22, #0x1
   a1094:   aa1503e0    mov x0, x21
   a1098:   94002b52    bl  abde0 <CCharGenerator::GetCharWidth() const>
   a109c:   6b0002df    cmp w22, w0
   a10a0:   54fffdc3    b.cc    a1058 <CScreenDevice::InvertCursor() [clone .part.0]+0x58>
   a10a4:   aa1503e0    mov x0, x21
   a10a8:   11000694    add w20, w20, #0x1
   a10ac:   94002b51    bl  abdf0 <CCharGenerator::GetCharHeight() const>
   a10b0:   6b00029f    cmp w20, w0
   a10b4:   54fffc63    b.cc    a1040 <CScreenDevice::InvertCursor() [clone .part.0]+0x40>
   a10b8:   3941a660    ldrb    w0, [x19, #105]
   a10bc:   a9425bf5    ldp x21, x22, [sp, #32]
   a10c0:   52000000    eor w0, w0, #0x1
   a10c4:   f9401bf7    ldr x23, [sp, #48]
   a10c8:   3901a660    strb    w0, [x19, #105]
   a10cc:   a94153f3    ldp x19, x20, [sp, #16]
   a10d0:   a8c47bfd    ldp x29, x30, [sp], #64
   a10d4:   d65f03c0    ret
   a10d8:   6b00005f    cmp w2, w0
   a10dc:   54fffda2    b.cs    a1090 <CScreenDevice::InvertCursor() [clone .part.0]+0x90>
   a10e0:   b9404e60    ldr w0, [x19, #76]
   a10e4:   6b00003f    cmp w1, w0
   a10e8:   54fffd42    b.cs    a1090 <CScreenDevice::InvertCursor() [clone .part.0]+0x90>
   a10ec:   b9404664    ldr w4, [x19, #68]
   a10f0:   110006d6    add w22, w22, #0x1
   a10f4:   f9401e60    ldr x0, [x19, #56]
   a10f8:   785fe2e3    ldurh   w3, [x23, #-2]
   a10fc:   1b040821    madd    w1, w1, w4, w2
   a1100:   78217803    strh    w3, [x0, x1, lsl #1]
   a1104:   17ffffe4    b   a1094 <CScreenDevice::InvertCursor() [clone .part.0]+0x94>
   a1108:   b9404663    ldr w3, [x19, #68]
   a110c:   110006d6    add w22, w22, #0x1
   a1110:   f9401e60    ldr x0, [x19, #56]
   a1114:   1b030821    madd    w1, w1, w3, w2
   a1118:   d37ff821    lsl x1, x1, #1
   a111c:   78616802    ldrh    w2, [x0, x1]
   a1120:   781fe2e2    sturh   w2, [x23, #-2]
   a1124:   7940d662    ldrh    w2, [x19, #106]
   a1128:   78216802    strh    w2, [x0, x1]
   a112c:   17ffffda    b   a1094 <CScreenDevice::InvertCursor() [clone .part.0]+0x94>

00000000000a1130 <CScreenDevice::CScreenDevice(unsigned int, unsigned int, bool, unsigned int)>:
   a1130:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   a1134:   910003fd    mov x29, sp
   a1138:   a90153f3    stp x19, x20, [sp, #16]
   a113c:   aa0003f3    mov x19, x0
   a1140:   2a0403f4    mov w20, w4
   a1144:   a9025bf5    stp x21, x22, [sp, #32]
   a1148:   2a0103f6    mov w22, w1
   a114c:   2a0203f5    mov w21, w2
   a1150:   f9001bf7    str x23, [sp, #48]
   a1154:   12001c77    and w23, w3, #0xff
   a1158:   97fff0e2    bl  9d4e0 <CDevice::CDevice()>
   a115c:   f00000a4    adrp    x4, b8000 <vtable for CGPIOPin+0x288>
   a1160:   911de084    add x4, x4, #0x778
   a1164:   29025676    stp w22, w21, [x19, #16]
   a1168:   9100a260    add x0, x19, #0x28
   a116c:   39006277    strb    w23, [x19, #24]
   a1170:   f9000264    str x4, [x19]
   a1174:   b9001e74    str w20, [x19, #28]
   a1178:   f900127f    str xzr, [x19, #32]
   a117c:   94002b11    bl  abdc0 <CCharGenerator::CCharGenerator()>
   a1180:   d2800023    mov x3, #0x1
   a1184:   f2bffbe3    movk    x3, #0xffdf, lsl #16
   a1188:   a9037e7f    stp xzr, xzr, [x19, #48]
   a118c:   91020260    add x0, x19, #0x80
   a1190:   d2800002    mov x2, #0x0
   a1194:   52801021    mov w1, #0x81
   a1198:   290afe7f    stp wzr, wzr, [x19, #84]
   a119c:   a9060e7f    stp xzr, x3, [x19, #96]
   a11a0:   3901e27f    strb    wzr, [x19, #120]
   a11a4:   94002b4f    bl  abee0 <CDMAChannel::CDMAChannel(unsigned int, CInterruptSystem*)>
   a11a8:   52800020    mov w0, #0x1
   a11ac:   a9425bf5    ldp x21, x22, [sp, #32]
   a11b0:   f9401bf7    ldr x23, [sp, #48]
   a11b4:   b900da60    str w0, [x19, #216]
   a11b8:   a94153f3    ldp x19, x20, [sp, #16]
   a11bc:   a8c47bfd    ldp x29, x30, [sp], #64
   a11c0:   d65f03c0    ret
   a11c4:   d503201f    nop
   a11c8:   d503201f    nop
   a11cc:   d503201f    nop

00000000000a11d0 <CScreenDevice::GetWidth() const>:
   a11d0:   b9404800    ldr w0, [x0, #72]
   a11d4:   d65f03c0    ret
   a11d8:   d503201f    nop
   a11dc:   d503201f    nop

00000000000a11e0 <CScreenDevice::GetHeight() const>:
   a11e0:   b9404c00    ldr w0, [x0, #76]
   a11e4:   d65f03c0    ret
   a11e8:   d503201f    nop
   a11ec:   d503201f    nop

00000000000a11f0 <CScreenDevice::GetColumns() const>:
   a11f0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a11f4:   aa0003e1    mov x1, x0
   a11f8:   910003fd    mov x29, sp
   a11fc:   9100a000    add x0, x0, #0x28
   a1200:   f9000bf3    str x19, [sp, #16]
   a1204:   b9404833    ldr w19, [x1, #72]
   a1208:   94002af6    bl  abde0 <CCharGenerator::GetCharWidth() const>
   a120c:   1ac00a60    udiv    w0, w19, w0
   a1210:   f9400bf3    ldr x19, [sp, #16]
   a1214:   a8c27bfd    ldp x29, x30, [sp], #32
   a1218:   d65f03c0    ret
   a121c:   d503201f    nop

00000000000a1220 <CScreenDevice::GetRows() const>:
   a1220:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a1224:   aa0003e1    mov x1, x0
   a1228:   910003fd    mov x29, sp
   a122c:   9100a000    add x0, x0, #0x28
   a1230:   f9000bf3    str x19, [sp, #16]
   a1234:   b9405033    ldr w19, [x1, #80]
   a1238:   94002aee    bl  abdf0 <CCharGenerator::GetCharHeight() const>
   a123c:   1ac00a60    udiv    w0, w19, w0
   a1240:   f9400bf3    ldr x19, [sp, #16]
   a1244:   a8c27bfd    ldp x29, x30, [sp], #32
   a1248:   d65f03c0    ret
   a124c:   d503201f    nop

00000000000a1250 <CScreenDevice::GetFrameBuffer()>:
   a1250:   f9401000    ldr x0, [x0, #32]
   a1254:   d65f03c0    ret
   a1258:   d503201f    nop
   a125c:   d503201f    nop

00000000000a1260 <CScreenDevice::GetStatus()>:
   a1260:   f9401c03    ldr x3, [x0, #56]
   a1264:   b9404002    ldr w2, [x0, #64]
   a1268:   b9405401    ldr w1, [x0, #84]
   a126c:   f9000103    str x3, [x8]
   a1270:   29010502    stp w2, w1, [x8, #8]
   a1274:   a9458803    ldp x3, x2, [x0, #88]
   a1278:   7940d401    ldrh    w1, [x0, #106]
   a127c:   a9010903    stp x3, x2, [x8, #16]
   a1280:   f9403802    ldr x2, [x0, #112]
   a1284:   79004501    strh    w1, [x8, #34]
   a1288:   b9406c03    ldr w3, [x0, #108]
   a128c:   3941a001    ldrb    w1, [x0, #104]
   a1290:   f9001502    str x2, [x8, #40]
   a1294:   3941e000    ldrb    w0, [x0, #120]
   a1298:   b9002503    str w3, [x8, #36]
   a129c:   39008101    strb    w1, [x8, #32]
   a12a0:   3900c100    strb    w0, [x8, #48]
   a12a4:   d65f03c0    ret
   a12a8:   d503201f    nop
   a12ac:   d503201f    nop

00000000000a12b0 <CScreenDevice::SetStatus(TScreenStatus const&)>:
   a12b0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a12b4:   910003fd    mov x29, sp
   a12b8:   a90153f3    stp x19, x20, [sp, #16]
   a12bc:   aa0003f3    mov x19, x0
   a12c0:   aa0103f4    mov x20, x1
   a12c4:   b9400820    ldr w0, [x1, #8]
   a12c8:   b9404261    ldr w1, [x19, #64]
   a12cc:   6b00003f    cmp w1, w0
   a12d0:   540000a0    b.eq    a12e4 <CScreenDevice::SetStatus(TScreenStatus const&)+0x34>
   a12d4:   52800000    mov w0, #0x0
   a12d8:   a94153f3    ldp x19, x20, [sp, #16]
   a12dc:   a8c27bfd    ldp x29, x30, [sp], #32
   a12e0:   d65f03c0    ret
   a12e4:   29488261    ldp w1, w0, [x19, #68]
   a12e8:   6b00003f    cmp w1, w0
   a12ec:   54ffff41    b.ne    a12d4 <CScreenDevice::SetStatus(TScreenStatus const&)+0x24>
   a12f0:   b940da60    ldr w0, [x19, #216]
   a12f4:   35000440    cbnz    w0, a137c <CScreenDevice::SetStatus(TScreenStatus const&)+0xcc>
   a12f8:   3941e260    ldrb    w0, [x19, #120]
   a12fc:   3707fec0    tbnz    w0, #0, a12d4 <CScreenDevice::SetStatus(TScreenStatus const&)+0x24>
   a1300:   3940c280    ldrb    w0, [x20, #48]
   a1304:   3707fe80    tbnz    w0, #0, a12d4 <CScreenDevice::SetStatus(TScreenStatus const&)+0x24>
   a1308:   f9400281    ldr x1, [x20]
   a130c:   f9401e60    ldr x0, [x19, #56]
   a1310:   b9404262    ldr w2, [x19, #64]
   a1314:   94001699    bl  a6d78 <memcpy>
   a1318:   29418a83    ldp w3, w2, [x20, #12]
   a131c:   39408281    ldrb    w1, [x20, #32]
   a1320:   b9401680    ldr w0, [x20, #20]
   a1324:   b9005663    str w3, [x19, #84]
   a1328:   b9401a83    ldr w3, [x20, #24]
   a132c:   b9005a62    str w2, [x19, #88]
   a1330:   b9401e82    ldr w2, [x20, #28]
   a1334:   3901a261    strb    w1, [x19, #104]
   a1338:   79404681    ldrh    w1, [x20, #34]
   a133c:   b9005e60    str w0, [x19, #92]
   a1340:   79404a80    ldrh    w0, [x20, #36]
   a1344:   b9006263    str w3, [x19, #96]
   a1348:   79404e83    ldrh    w3, [x20, #38]
   a134c:   b9006662    str w2, [x19, #100]
   a1350:   b9402a82    ldr w2, [x20, #40]
   a1354:   7900d661    strh    w1, [x19, #106]
   a1358:   b9402e81    ldr w1, [x20, #44]
   a135c:   7900da60    strh    w0, [x19, #108]
   a1360:   b940da60    ldr w0, [x19, #216]
   a1364:   7900de63    strh    w3, [x19, #110]
   a1368:   290e0662    stp w2, w1, [x19, #112]
   a136c:   350001a0    cbnz    w0, a13a0 <CScreenDevice::SetStatus(TScreenStatus const&)+0xf0>
   a1370:   d5033fbf    dmb sy
   a1374:   52800020    mov w0, #0x1
   a1378:   17ffffd8    b   a12d8 <CScreenDevice::SetStatus(TScreenStatus const&)+0x28>
   a137c:   94001cbd    bl  a8670 <EnterCritical>
   a1380:   3941e260    ldrb    w0, [x19, #120]
   a1384:   37000060    tbnz    w0, #0, a1390 <CScreenDevice::SetStatus(TScreenStatus const&)+0xe0>
   a1388:   3940c280    ldrb    w0, [x20, #48]
   a138c:   3607fbe0    tbz w0, #0, a1308 <CScreenDevice::SetStatus(TScreenStatus const&)+0x58>
   a1390:   b940da60    ldr w0, [x19, #216]
   a1394:   34fffa00    cbz w0, a12d4 <CScreenDevice::SetStatus(TScreenStatus const&)+0x24>
   a1398:   94001ce6    bl  a8730 <LeaveCritical>
   a139c:   17ffffce    b   a12d4 <CScreenDevice::SetStatus(TScreenStatus const&)+0x24>
   a13a0:   94001ce4    bl  a8730 <LeaveCritical>
   a13a4:   17fffff3    b   a1370 <CScreenDevice::SetStatus(TScreenStatus const&)+0xc0>
   a13a8:   d503201f    nop
   a13ac:   d503201f    nop

00000000000a13b0 <CScreenDevice::CarriageReturn()>:
   a13b0:   b900601f    str wzr, [x0, #96]
   a13b4:   d65f03c0    ret
   a13b8:   d503201f    nop
   a13bc:   d503201f    nop

00000000000a13c0 <CScreenDevice::CursorHome()>:
   a13c0:   b9405801    ldr w1, [x0, #88]
   a13c4:   290c041f    stp wzr, w1, [x0, #96]
   a13c8:   d65f03c0    ret
   a13cc:   d503201f    nop

00000000000a13d0 <CScreenDevice::CursorLeft()>:
   a13d0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   a13d4:   910003fd    mov x29, sp
   a13d8:   a90153f3    stp x19, x20, [sp, #16]
   a13dc:   aa0003f3    mov x19, x0
   a13e0:   b9406000    ldr w0, [x0, #96]
   a13e4:   35000320    cbnz    w0, a1448 <CScreenDevice::CursorLeft()+0x78>
   a13e8:   b9405a60    ldr w0, [x19, #88]
   a13ec:   b9406661    ldr w1, [x19, #100]
   a13f0:   6b00003f    cmp w1, w0
   a13f4:   54000088    b.hi    a1404 <CScreenDevice::CursorLeft()+0x34>
   a13f8:   a94153f3    ldp x19, x20, [sp, #16]
   a13fc:   a8c37bfd    ldp x29, x30, [sp], #48
   a1400:   d65f03c0    ret
   a1404:   b9404a74    ldr w20, [x19, #72]
   a1408:   f90013f5    str x21, [sp, #32]
   a140c:   9100a275    add x21, x19, #0x28
   a1410:   aa1503e0    mov x0, x21
   a1414:   94002a73    bl  abde0 <CCharGenerator::GetCharWidth() const>
   a1418:   2a0003e1    mov w1, w0
   a141c:   aa1503e0    mov x0, x21
   a1420:   4b010294    sub w20, w20, w1
   a1424:   b9006274    str w20, [x19, #96]
   a1428:   94002a72    bl  abdf0 <CCharGenerator::GetCharHeight() const>
   a142c:   b9406661    ldr w1, [x19, #100]
   a1430:   f94013f5    ldr x21, [sp, #32]
   a1434:   4b000021    sub w1, w1, w0
   a1438:   b9006661    str w1, [x19, #100]
   a143c:   a94153f3    ldp x19, x20, [sp, #16]
   a1440:   a8c37bfd    ldp x29, x30, [sp], #48
   a1444:   d65f03c0    ret
   a1448:   9100a260    add x0, x19, #0x28
   a144c:   94002a65    bl  abde0 <CCharGenerator::GetCharWidth() const>
   a1450:   b9406261    ldr w1, [x19, #96]
   a1454:   4b000021    sub w1, w1, w0
   a1458:   b9006261    str w1, [x19, #96]
   a145c:   a94153f3    ldp x19, x20, [sp, #16]
   a1460:   a8c37bfd    ldp x29, x30, [sp], #48
   a1464:   d65f03c0    ret
   a1468:   d503201f    nop
   a146c:   d503201f    nop

00000000000a1470 <CScreenDevice::CursorMove(unsigned int, unsigned int)>:
   a1470:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   a1474:   910003fd    mov x29, sp
   a1478:   a9025bf5    stp x21, x22, [sp, #32]
   a147c:   9100a016    add x22, x0, #0x28
   a1480:   2a0103f5    mov w21, w1
   a1484:   a90153f3    stp x19, x20, [sp, #16]
   a1488:   aa0003f4    mov x20, x0
   a148c:   aa1603e0    mov x0, x22
   a1490:   2a0203f3    mov w19, w2
   a1494:   51000673    sub w19, w19, #0x1
   a1498:   94002a52    bl  abde0 <CCharGenerator::GetCharWidth() const>
   a149c:   2a0003e1    mov w1, w0
   a14a0:   aa1603e0    mov x0, x22
   a14a4:   1b017e73    mul w19, w19, w1
   a14a8:   94002a52    bl  abdf0 <CCharGenerator::GetCharHeight() const>
   a14ac:   b9404a81    ldr w1, [x20, #72]
   a14b0:   6b13003f    cmp w1, w19
   a14b4:   54000149    b.ls    a14dc <CScreenDevice::CursorMove(unsigned int, unsigned int)+0x6c>
   a14b8:   b9405a81    ldr w1, [x20, #88]
   a14bc:   510006b5    sub w21, w21, #0x1
   a14c0:   1b007ea0    mul w0, w21, w0
   a14c4:   6b00003f    cmp w1, w0
   a14c8:   540000a8    b.hi    a14dc <CScreenDevice::CursorMove(unsigned int, unsigned int)+0x6c>
   a14cc:   b9405e81    ldr w1, [x20, #92]
   a14d0:   6b00003f    cmp w1, w0
   a14d4:   54000049    b.ls    a14dc <CScreenDevice::CursorMove(unsigned int, unsigned int)+0x6c>
   a14d8:   290c0293    stp w19, w0, [x20, #96]
   a14dc:   a94153f3    ldp x19, x20, [sp, #16]
   a14e0:   a9425bf5    ldp x21, x22, [sp, #32]
   a14e4:   a8c37bfd    ldp x29, x30, [sp], #48
   a14e8:   d65f03c0    ret
   a14ec:   d503201f    nop

00000000000a14f0 <CScreenDevice::CursorUp()>:
   a14f0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a14f4:   910003fd    mov x29, sp
   a14f8:   f9000bf3    str x19, [sp, #16]
   a14fc:   aa0003f3    mov x19, x0
   a1500:   b9406661    ldr w1, [x19, #100]
   a1504:   b9405800    ldr w0, [x0, #88]
   a1508:   6b00003f    cmp w1, w0
   a150c:   54000088    b.hi    a151c <CScreenDevice::CursorUp()+0x2c>
   a1510:   f9400bf3    ldr x19, [sp, #16]
   a1514:   a8c27bfd    ldp x29, x30, [sp], #32
   a1518:   d65f03c0    ret
   a151c:   9100a260    add x0, x19, #0x28
   a1520:   94002a34    bl  abdf0 <CCharGenerator::GetCharHeight() const>
   a1524:   b9406661    ldr w1, [x19, #100]
   a1528:   4b000021    sub w1, w1, w0
   a152c:   b9006661    str w1, [x19, #100]
   a1530:   f9400bf3    ldr x19, [sp, #16]
   a1534:   a8c27bfd    ldp x29, x30, [sp], #32
   a1538:   d65f03c0    ret
   a153c:   d503201f    nop

00000000000a1540 <CScreenDevice::DeleteChars(unsigned int)>:
   a1540:   d65f03c0    ret
   a1544:   d503201f    nop
   a1548:   d503201f    nop
   a154c:   d503201f    nop

00000000000a1550 <CScreenDevice::DeleteLines(unsigned int)>:
   a1550:   d65f03c0    ret
   a1554:   d503201f    nop
   a1558:   d503201f    nop
   a155c:   d503201f    nop

00000000000a1560 <CScreenDevice::GetTextBackgroundColor()>:
   a1560:   3941b802    ldrb    w2, [x0, #110]
   a1564:   7940d401    ldrh    w1, [x0, #106]
   a1568:   7940d800    ldrh    w0, [x0, #108]
   a156c:   f240005f    tst x2, #0x1
   a1570:   1a801020    csel    w0, w1, w0, ne
   a1574:   d65f03c0    ret
   a1578:   d503201f    nop
   a157c:   d503201f    nop

00000000000a1580 <CScreenDevice::GetTextColor()>:
   a1580:   3941b802    ldrb    w2, [x0, #110]
   a1584:   7940d401    ldrh    w1, [x0, #106]
   a1588:   7940d800    ldrh    w0, [x0, #108]
   a158c:   f240005f    tst x2, #0x1
   a1590:   1a811000    csel    w0, w0, w1, ne
   a1594:   d65f03c0    ret
   a1598:   d503201f    nop
   a159c:   d503201f    nop

00000000000a15a0 <CScreenDevice::InsertLines(unsigned int)>:
   a15a0:   d65f03c0    ret
   a15a4:   d503201f    nop
   a15a8:   d503201f    nop
   a15ac:   d503201f    nop

00000000000a15b0 <CScreenDevice::InsertMode(bool)>:
   a15b0:   3901bc01    strb    w1, [x0, #111]
   a15b4:   d65f03c0    ret
   a15b8:   d503201f    nop
   a15bc:   d503201f    nop

00000000000a15c0 <CScreenDevice::ReverseScroll()>:
   a15c0:   d65f03c0    ret
   a15c4:   d503201f    nop
   a15c8:   d503201f    nop
   a15cc:   d503201f    nop

00000000000a15d0 <CScreenDevice::SetCursorMode(bool)>:
   a15d0:   3901a001    strb    w1, [x0, #104]
   a15d4:   d65f03c0    ret
   a15d8:   d503201f    nop
   a15dc:   d503201f    nop

00000000000a15e0 <CScreenDevice::SetScrollRegion(unsigned int, unsigned int)>:
   a15e0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   a15e4:   910003fd    mov x29, sp
   a15e8:   a9025bf5    stp x21, x22, [sp, #32]
   a15ec:   9100a016    add x22, x0, #0x28
   a15f0:   2a0203f5    mov w21, w2
   a15f4:   a90153f3    stp x19, x20, [sp, #16]
   a15f8:   aa0003f4    mov x20, x0
   a15fc:   aa1603e0    mov x0, x22
   a1600:   2a0103f3    mov w19, w1
   a1604:   51000673    sub w19, w19, #0x1
   a1608:   940029fa    bl  abdf0 <CCharGenerator::GetCharHeight() const>
   a160c:   2a0003e1    mov w1, w0
   a1610:   aa1603e0    mov x0, x22
   a1614:   1b017e73    mul w19, w19, w1
   a1618:   940029f6    bl  abdf0 <CCharGenerator::GetCharHeight() const>
   a161c:   b9405281    ldr w1, [x20, #80]
   a1620:   1b157c02    mul w2, w0, w21
   a1624:   6b13003f    cmp w1, w19
   a1628:   7a428020    ccmp    w1, w2, #0x0, hi
   a162c:   7a422262    ccmp    w19, w2, #0x2, cs
   a1630:   540000e3    b.cc    a164c <CScreenDevice::SetScrollRegion(unsigned int, unsigned int)+0x6c>
   a1634:   b9405a93    ldr w19, [x20, #88]
   a1638:   a9425bf5    ldp x21, x22, [sp, #32]
   a163c:   290c4e9f    stp wzr, w19, [x20, #96]
   a1640:   a94153f3    ldp x19, x20, [sp, #16]
   a1644:   a8c37bfd    ldp x29, x30, [sp], #48
   a1648:   d65f03c0    ret
   a164c:   290b0a93    stp w19, w2, [x20, #88]
   a1650:   17fffffa    b   a1638 <CScreenDevice::SetScrollRegion(unsigned int, unsigned int)+0x58>
   a1654:   d503201f    nop
   a1658:   d503201f    nop
   a165c:   d503201f    nop

00000000000a1660 <CScreenDevice::SetStandoutMode(unsigned int)>:
   a1660:   7101ac3f    cmp w1, #0x6b
   a1664:   54000128    b.hi    a1688 <CScreenDevice::SetStandoutMode(unsigned int)+0x28>
   a1668:   f00000a2    adrp    x2, b8000 <vtable for CGPIOPin+0x288>
   a166c:   911ba042    add x2, x2, #0x6e8
   a1670:   38614842    ldrb    w2, [x2, w1, uxtw]
   a1674:   10000061    adr x1, a1680 <CScreenDevice::SetStandoutMode(unsigned int)+0x20>
   a1678:   8b228822    add x2, x1, w2, sxtb #2
   a167c:   d61f0040    br  x2
   a1680:   528002a1    mov w1, #0x15
   a1684:   7900d401    strh    w1, [x0, #106]
   a1688:   d65f03c0    ret
   a168c:   1280aea1    mov w1, #0xfffffa8a
   a1690:   7900d401    strh    w1, [x0, #106]
   a1694:   d65f03c0    ret
   a1698:   12800401    mov w1, #0xffffffdf
   a169c:   3901b81f    strb    wzr, [x0, #110]
   a16a0:   7900d401    strh    w1, [x0, #106]
   a16a4:   d65f03c0    ret
   a16a8:   528af941    mov w1, #0x57ca
   a16ac:   7900d401    strh    w1, [x0, #106]
   a16b0:   d65f03c0    ret
   a16b4:   128a5541    mov w1, #0xffffad55
   a16b8:   7900d801    strh    w1, [x0, #108]
   a16bc:   d65f03c0    ret
   a16c0:   5280aaa1    mov w1, #0x555
   a16c4:   7900d801    strh    w1, [x0, #108]
   a16c8:   d65f03c0    ret
   a16cc:   128afd41    mov w1, #0xffffa815
   a16d0:   7900d801    strh    w1, [x0, #108]
   a16d4:   d65f03c0    ret
   a16d8:   528002a1    mov w1, #0x15
   a16dc:   7900d801    strh    w1, [x0, #108]
   a16e0:   d65f03c0    ret
   a16e4:   128aafe1    mov w1, #0xffffaa80
   a16e8:   7900d801    strh    w1, [x0, #108]
   a16ec:   d65f03c0    ret
   a16f0:   5280a801    mov w1, #0x540
   a16f4:   7900d801    strh    w1, [x0, #108]
   a16f8:   d65f03c0    ret
   a16fc:   128affe1    mov w1, #0xffffa800
   a1700:   7900d801    strh    w1, [x0, #108]
   a1704:   d65f03c0    ret
   a1708:   7900d81f    strh    wzr, [x0, #108]
   a170c:   d65f03c0    ret
   a1710:   128a5541    mov w1, #0xffffad55
   a1714:   7900d401    strh    w1, [x0, #106]
   a1718:   d65f03c0    ret
   a171c:   5280aaa1    mov w1, #0x555
   a1720:   7900d401    strh    w1, [x0, #106]
   a1724:   d65f03c0    ret
   a1728:   128afd41    mov w1, #0xffffa815
   a172c:   7900d401    strh    w1, [x0, #106]
   a1730:   d65f03c0    ret
   a1734:   128aafe1    mov w1, #0xffffaa80
   a1738:   7900d401    strh    w1, [x0, #106]
   a173c:   d65f03c0    ret
   a1740:   5280a801    mov w1, #0x540
   a1744:   7900d401    strh    w1, [x0, #106]
   a1748:   d65f03c0    ret
   a174c:   128affe1    mov w1, #0xffffa800
   a1750:   7900d401    strh    w1, [x0, #106]
   a1754:   d65f03c0    ret
   a1758:   7900d41f    strh    wzr, [x0, #106]
   a175c:   d65f03c0    ret
   a1760:   528af941    mov w1, #0x57ca
   a1764:   7900d801    strh    w1, [x0, #108]
   a1768:   d65f03c0    ret
   a176c:   1280aea1    mov w1, #0xfffffa8a
   a1770:   7900d801    strh    w1, [x0, #108]
   a1774:   d65f03c0    ret
   a1778:   528a5141    mov w1, #0x528a
   a177c:   7900d801    strh    w1, [x0, #108]
   a1780:   d65f03c0    ret
   a1784:   12800401    mov w1, #0xffffffdf
   a1788:   7900d401    strh    w1, [x0, #106]
   a178c:   d65f03c0    ret
   a1790:   528afbe1    mov w1, #0x57df
   a1794:   7900d401    strh    w1, [x0, #106]
   a1798:   d65f03c0    ret
   a179c:   1280ac01    mov w1, #0xfffffa9f
   a17a0:   7900d401    strh    w1, [x0, #106]
   a17a4:   d65f03c0    ret
   a17a8:   528a53e1    mov w1, #0x529f
   a17ac:   7900d401    strh    w1, [x0, #106]
   a17b0:   d65f03c0    ret
   a17b4:   128006a1    mov w1, #0xffffffca
   a17b8:   7900d401    strh    w1, [x0, #106]
   a17bc:   d65f03c0    ret
   a17c0:   12800401    mov w1, #0xffffffdf
   a17c4:   7900d801    strh    w1, [x0, #108]
   a17c8:   d65f03c0    ret
   a17cc:   1280ac01    mov w1, #0xfffffa9f
   a17d0:   7900d801    strh    w1, [x0, #108]
   a17d4:   d65f03c0    ret
   a17d8:   528a53e1    mov w1, #0x529f
   a17dc:   7900d801    strh    w1, [x0, #108]
   a17e0:   d65f03c0    ret
   a17e4:   128006a1    mov w1, #0xffffffca
   a17e8:   7900d801    strh    w1, [x0, #108]
   a17ec:   d65f03c0    ret
   a17f0:   528afbe1    mov w1, #0x57df
   a17f4:   7900d801    strh    w1, [x0, #108]
   a17f8:   d65f03c0    ret
   a17fc:   528a5141    mov w1, #0x528a
   a1800:   7900d401    strh    w1, [x0, #106]
   a1804:   d65f03c0    ret
   a1808:   52800021    mov w1, #0x1
   a180c:   3901b801    strb    w1, [x0, #110]
   a1810:   d65f03c0    ret
   a1814:   d503201f    nop
   a1818:   d503201f    nop
   a181c:   d503201f    nop

00000000000a1820 <CScreenDevice::Scroll()>:
   a1820:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   a1824:   910003fd    mov x29, sp
   a1828:   a9025bf5    stp x21, x22, [sp, #32]
   a182c:   aa0003f6    mov x22, x0
   a1830:   9100a000    add x0, x0, #0x28
   a1834:   a90153f3    stp x19, x20, [sp, #16]
   a1838:   9400296e    bl  abdf0 <CCharGenerator::GetCharHeight() const>
   a183c:   294b0ec4    ldp w4, w3, [x22, #88]
   a1840:   2a0003f4    mov w20, w0
   a1844:   b94046c1    ldr w1, [x22, #68]
   a1848:   f9401ec6    ldr x6, [x22, #56]
   a184c:   4b040063    sub w3, w3, w4
   a1850:   4b000063    sub w3, w3, w0
   a1854:   1b017c93    mul w19, w4, w1
   a1858:   1b017c63    mul w3, w3, w1
   a185c:   8b1304d3    add x19, x6, x19, lsl #1
   a1860:   531f7863    lsl w3, w3, #1
   a1864:   35000ba3    cbnz    w3, a19d8 <CScreenDevice::Scroll()+0x1b8>
   a1868:   1b017e81    mul w1, w20, w1
   a186c:   d341fc21    lsr x1, x1, #1
   a1870:   51000425    sub w5, w1, #0x1
   a1874:   b4000aa1    cbz x1, a19c8 <CScreenDevice::Scroll()+0x1a8>
   a1878:   cb530be2    neg x2, x19, lsr #2
   a187c:   71003cbf    cmp w5, #0xf
   a1880:   7d40dac0    ldr h0, [x22, #108]
   a1884:   12000443    and w3, w2, #0x3
   a1888:   54000469    b.ls    a1914 <CScreenDevice::Scroll()+0xf4>
   a188c:   aa1303e6    mov x6, x19
   a1890:   340001a3    cbz w3, a18c4 <CScreenDevice::Scroll()+0xa4>
   a1894:   bd000260    str s0, [x19]
   a1898:   91001266    add x6, x19, #0x4
   a189c:   51000825    sub w5, w1, #0x2
   a18a0:   36080122    tbz w2, #1, a18c4 <CScreenDevice::Scroll()+0xa4>
   a18a4:   71000c7f    cmp w3, #0x3
   a18a8:   bd000660    str s0, [x19, #4]
   a18ac:   91002266    add x6, x19, #0x8
   a18b0:   51000c25    sub w5, w1, #0x3
   a18b4:   54000081    b.ne    a18c4 <CScreenDevice::Scroll()+0xa4>
   a18b8:   91003266    add x6, x19, #0xc
   a18bc:   51001025    sub w5, w1, #0x4
   a18c0:   bd000a60    str s0, [x19, #8]
   a18c4:   4b030021    sub w1, w1, w3
   a18c8:   4e040401    dup v1.4s, v0.s[0]
   a18cc:   d37e0463    ubfiz   x3, x3, #2, #2
   a18d0:   51001022    sub w2, w1, #0x4
   a18d4:   8b030263    add x3, x19, x3
   a18d8:   53027c42    lsr w2, w2, #2
   a18dc:   d2800000    mov x0, #0x0
   a18e0:   11000442    add w2, w2, #0x1
   a18e4:   d503201f    nop
   a18e8:   d37cec04    lsl x4, x0, #4
   a18ec:   91000400    add x0, x0, #0x1
   a18f0:   6b00005f    cmp w2, w0
   a18f4:   3ca46861    str q1, [x3, x4]
   a18f8:   54ffff88    b.hi    a18e8 <CScreenDevice::Scroll()+0xc8>
   a18fc:   531e7442    lsl w2, w2, #2
   a1900:   6b02003f    cmp w1, w2
   a1904:   54000620    b.eq    a19c8 <CScreenDevice::Scroll()+0x1a8>
   a1908:   2a0203f3    mov w19, w2
   a190c:   4b0200a5    sub w5, w5, w2
   a1910:   8b1308d3    add x19, x6, x19, lsl #2
   a1914:   bd000260    str s0, [x19]
   a1918:   34000585    cbz w5, a19c8 <CScreenDevice::Scroll()+0x1a8>
   a191c:   710004bf    cmp w5, #0x1
   a1920:   bd000660    str s0, [x19, #4]
   a1924:   54000520    b.eq    a19c8 <CScreenDevice::Scroll()+0x1a8>
   a1928:   710008bf    cmp w5, #0x2
   a192c:   bd000a60    str s0, [x19, #8]
   a1930:   540004c0    b.eq    a19c8 <CScreenDevice::Scroll()+0x1a8>
   a1934:   71000cbf    cmp w5, #0x3
   a1938:   bd000e60    str s0, [x19, #12]
   a193c:   54000460    b.eq    a19c8 <CScreenDevice::Scroll()+0x1a8>
   a1940:   710010bf    cmp w5, #0x4
   a1944:   bd001260    str s0, [x19, #16]
   a1948:   54000400    b.eq    a19c8 <CScreenDevice::Scroll()+0x1a8>
   a194c:   710014bf    cmp w5, #0x5
   a1950:   bd001660    str s0, [x19, #20]
   a1954:   540003a0    b.eq    a19c8 <CScreenDevice::Scroll()+0x1a8>
   a1958:   710018bf    cmp w5, #0x6
   a195c:   bd001a60    str s0, [x19, #24]
   a1960:   54000340    b.eq    a19c8 <CScreenDevice::Scroll()+0x1a8>
   a1964:   71001cbf    cmp w5, #0x7
   a1968:   bd001e60    str s0, [x19, #28]
   a196c:   540002e0    b.eq    a19c8 <CScreenDevice::Scroll()+0x1a8>
   a1970:   710020bf    cmp w5, #0x8
   a1974:   bd002260    str s0, [x19, #32]
   a1978:   54000280    b.eq    a19c8 <CScreenDevice::Scroll()+0x1a8>
   a197c:   710024bf    cmp w5, #0x9
   a1980:   bd002660    str s0, [x19, #36]
   a1984:   54000220    b.eq    a19c8 <CScreenDevice::Scroll()+0x1a8>
   a1988:   710028bf    cmp w5, #0xa
   a198c:   bd002a60    str s0, [x19, #40]
   a1990:   540001c0    b.eq    a19c8 <CScreenDevice::Scroll()+0x1a8>
   a1994:   71002cbf    cmp w5, #0xb
   a1998:   bd002e60    str s0, [x19, #44]
   a199c:   54000160    b.eq    a19c8 <CScreenDevice::Scroll()+0x1a8>
   a19a0:   710030bf    cmp w5, #0xc
   a19a4:   bd003260    str s0, [x19, #48]
   a19a8:   54000100    b.eq    a19c8 <CScreenDevice::Scroll()+0x1a8>
   a19ac:   710034bf    cmp w5, #0xd
   a19b0:   bd003660    str s0, [x19, #52]
   a19b4:   540000a0    b.eq    a19c8 <CScreenDevice::Scroll()+0x1a8>
   a19b8:   710038bf    cmp w5, #0xe
   a19bc:   bd003a60    str s0, [x19, #56]
   a19c0:   54000040    b.eq    a19c8 <CScreenDevice::Scroll()+0x1a8>
   a19c4:   bd003e60    str s0, [x19, #60]
   a19c8:   a94153f3    ldp x19, x20, [sp, #16]
   a19cc:   a9425bf5    ldp x21, x22, [sp, #32]
   a19d0:   a8c47bfd    ldp x29, x30, [sp], #64
   a19d4:   d65f03c0    ret
   a19d8:   0b000084    add w4, w4, w0
   a19dc:   2a0303f5    mov w21, w3
   a19e0:   f9001bf7    str x23, [sp, #48]
   a19e4:   910202d7    add x23, x22, #0x80
   a19e8:   aa1503e3    mov x3, x21
   a19ec:   1b017c82    mul w2, w4, w1
   a19f0:   52800005    mov w5, #0x0
   a19f4:   aa1303e1    mov x1, x19
   a19f8:   52800044    mov w4, #0x2
   a19fc:   aa1703e0    mov x0, x23
   a1a00:   8b0204c2    add x2, x6, x2, lsl #1
   a1a04:   940029df    bl  ac180 <CDMAChannel::SetupMemCopy(void*, void const*, unsigned long, unsigned int, bool)>
   a1a08:   aa1703e0    mov x0, x23
   a1a0c:   94002bdd    bl  ac980 <CDMAChannel::Start()>
   a1a10:   aa1703e0    mov x0, x23
   a1a14:   94002c3b    bl  acb00 <CDMAChannel::Wait()>
   a1a18:   927ef6a3    and x3, x21, #0xfffffffffffffffc
   a1a1c:   f9401bf7    ldr x23, [sp, #48]
   a1a20:   8b030273    add x19, x19, x3
   a1a24:   b94046c1    ldr w1, [x22, #68]
   a1a28:   17ffff90    b   a1868 <CScreenDevice::Scroll()+0x48>
   a1a2c:   d503201f    nop

00000000000a1a30 <CScreenDevice::CursorDown()>:
   a1a30:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a1a34:   910003fd    mov x29, sp
   a1a38:   a90153f3    stp x19, x20, [sp, #16]
   a1a3c:   9100a014    add x20, x0, #0x28
   a1a40:   aa0003f3    mov x19, x0
   a1a44:   aa1403e0    mov x0, x20
   a1a48:   940028ea    bl  abdf0 <CCharGenerator::GetCharHeight() const>
   a1a4c:   b9406662    ldr w2, [x19, #100]
   a1a50:   b9405e61    ldr w1, [x19, #92]
   a1a54:   0b020000    add w0, w0, w2
   a1a58:   6b01001f    cmp w0, w1
   a1a5c:   b9006660    str w0, [x19, #100]
   a1a60:   54000082    b.cs    a1a70 <CScreenDevice::CursorDown()+0x40>
   a1a64:   a94153f3    ldp x19, x20, [sp, #16]
   a1a68:   a8c27bfd    ldp x29, x30, [sp], #32
   a1a6c:   d65f03c0    ret
   a1a70:   aa1303e0    mov x0, x19
   a1a74:   97ffff6b    bl  a1820 <CScreenDevice::Scroll()>
   a1a78:   aa1403e0    mov x0, x20
   a1a7c:   940028dd    bl  abdf0 <CCharGenerator::GetCharHeight() const>
   a1a80:   b9406661    ldr w1, [x19, #100]
   a1a84:   4b000021    sub w1, w1, w0
   a1a88:   b9006661    str w1, [x19, #100]
   a1a8c:   a94153f3    ldp x19, x20, [sp, #16]
   a1a90:   a8c27bfd    ldp x29, x30, [sp], #32
   a1a94:   d65f03c0    ret
   a1a98:   d503201f    nop
   a1a9c:   d503201f    nop

00000000000a1aa0 <CScreenDevice::NewLine()>:
   a1aa0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a1aa4:   910003fd    mov x29, sp
   a1aa8:   a90153f3    stp x19, x20, [sp, #16]
   a1aac:   aa0003f3    mov x19, x0
   a1ab0:   9100a014    add x20, x0, #0x28
   a1ab4:   aa1403e0    mov x0, x20
   a1ab8:   b900627f    str wzr, [x19, #96]
   a1abc:   940028cd    bl  abdf0 <CCharGenerator::GetCharHeight() const>
   a1ac0:   b9406662    ldr w2, [x19, #100]
   a1ac4:   b9405e61    ldr w1, [x19, #92]
   a1ac8:   0b020000    add w0, w0, w2
   a1acc:   6b01001f    cmp w0, w1
   a1ad0:   b9006660    str w0, [x19, #100]
   a1ad4:   54000082    b.cs    a1ae4 <CScreenDevice::NewLine()+0x44>
   a1ad8:   a94153f3    ldp x19, x20, [sp, #16]
   a1adc:   a8c27bfd    ldp x29, x30, [sp], #32
   a1ae0:   d65f03c0    ret
   a1ae4:   aa1303e0    mov x0, x19
   a1ae8:   97ffff4e    bl  a1820 <CScreenDevice::Scroll()>
   a1aec:   aa1403e0    mov x0, x20
   a1af0:   940028c0    bl  abdf0 <CCharGenerator::GetCharHeight() const>
   a1af4:   b9406661    ldr w1, [x19, #100]
   a1af8:   4b000021    sub w1, w1, w0
   a1afc:   b9006661    str w1, [x19, #100]
   a1b00:   a94153f3    ldp x19, x20, [sp, #16]
   a1b04:   a8c27bfd    ldp x29, x30, [sp], #32
   a1b08:   d65f03c0    ret
   a1b0c:   d503201f    nop

00000000000a1b10 <CScreenDevice::CursorRight()>:
   a1b10:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a1b14:   910003fd    mov x29, sp
   a1b18:   a90153f3    stp x19, x20, [sp, #16]
   a1b1c:   9100a014    add x20, x0, #0x28
   a1b20:   aa0003f3    mov x19, x0
   a1b24:   aa1403e0    mov x0, x20
   a1b28:   940028ae    bl  abde0 <CCharGenerator::GetCharWidth() const>
   a1b2c:   b9406262    ldr w2, [x19, #96]
   a1b30:   b9404a61    ldr w1, [x19, #72]
   a1b34:   0b020000    add w0, w0, w2
   a1b38:   6b01001f    cmp w0, w1
   a1b3c:   b9006260    str w0, [x19, #96]
   a1b40:   54000082    b.cs    a1b50 <CScreenDevice::CursorRight()+0x40>
   a1b44:   a94153f3    ldp x19, x20, [sp, #16]
   a1b48:   a8c27bfd    ldp x29, x30, [sp], #32
   a1b4c:   d65f03c0    ret
   a1b50:   aa1403e0    mov x0, x20
   a1b54:   b900627f    str wzr, [x19, #96]
   a1b58:   940028a6    bl  abdf0 <CCharGenerator::GetCharHeight() const>
   a1b5c:   b9406662    ldr w2, [x19, #100]
   a1b60:   b9405e61    ldr w1, [x19, #92]
   a1b64:   0b020000    add w0, w0, w2
   a1b68:   6b01001f    cmp w0, w1
   a1b6c:   b9006660    str w0, [x19, #100]
   a1b70:   54fffea3    b.cc    a1b44 <CScreenDevice::CursorRight()+0x34>
   a1b74:   aa1303e0    mov x0, x19
   a1b78:   97ffff2a    bl  a1820 <CScreenDevice::Scroll()>
   a1b7c:   aa1403e0    mov x0, x20
   a1b80:   9400289c    bl  abdf0 <CCharGenerator::GetCharHeight() const>
   a1b84:   b9406661    ldr w1, [x19, #100]
   a1b88:   4b000021    sub w1, w1, w0
   a1b8c:   b9006661    str w1, [x19, #100]
   a1b90:   a94153f3    ldp x19, x20, [sp, #16]
   a1b94:   a8c27bfd    ldp x29, x30, [sp], #32
   a1b98:   d65f03c0    ret
   a1b9c:   d503201f    nop

00000000000a1ba0 <CScreenDevice::Tabulator()>:
   a1ba0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a1ba4:   910003fd    mov x29, sp
   a1ba8:   a90153f3    stp x19, x20, [sp, #16]
   a1bac:   9100a014    add x20, x0, #0x28
   a1bb0:   aa0003f3    mov x19, x0
   a1bb4:   aa1403e0    mov x0, x20
   a1bb8:   9400288a    bl  abde0 <CCharGenerator::GetCharWidth() const>
   a1bbc:   b9406261    ldr w1, [x19, #96]
   a1bc0:   531d7000    lsl w0, w0, #3
   a1bc4:   b9404a62    ldr w2, [x19, #72]
   a1bc8:   0b010001    add w1, w0, w1
   a1bcc:   1ac00821    udiv    w1, w1, w0
   a1bd0:   1b007c21    mul w1, w1, w0
   a1bd4:   6b02003f    cmp w1, w2
   a1bd8:   b9006261    str w1, [x19, #96]
   a1bdc:   54000082    b.cs    a1bec <CScreenDevice::Tabulator()+0x4c>
   a1be0:   a94153f3    ldp x19, x20, [sp, #16]
   a1be4:   a8c27bfd    ldp x29, x30, [sp], #32
   a1be8:   d65f03c0    ret
   a1bec:   aa1403e0    mov x0, x20
   a1bf0:   b900627f    str wzr, [x19, #96]
   a1bf4:   9400287f    bl  abdf0 <CCharGenerator::GetCharHeight() const>
   a1bf8:   b9406662    ldr w2, [x19, #100]
   a1bfc:   b9405e61    ldr w1, [x19, #92]
   a1c00:   0b020000    add w0, w0, w2
   a1c04:   6b01001f    cmp w0, w1
   a1c08:   b9006660    str w0, [x19, #100]
   a1c0c:   54fffea3    b.cc    a1be0 <CScreenDevice::Tabulator()+0x40>
   a1c10:   aa1303e0    mov x0, x19
   a1c14:   97ffff03    bl  a1820 <CScreenDevice::Scroll()>
   a1c18:   aa1403e0    mov x0, x20
   a1c1c:   94002875    bl  abdf0 <CCharGenerator::GetCharHeight() const>
   a1c20:   b9406661    ldr w1, [x19, #100]
   a1c24:   4b000021    sub w1, w1, w0
   a1c28:   b9006661    str w1, [x19, #100]
   a1c2c:   a94153f3    ldp x19, x20, [sp, #16]
   a1c30:   a8c27bfd    ldp x29, x30, [sp], #32
   a1c34:   d65f03c0    ret
   a1c38:   d503201f    nop
   a1c3c:   d503201f    nop

00000000000a1c40 <CScreenDevice::DisplayChar(char, unsigned int, unsigned int, unsigned short)>:
   a1c40:   a9ba7bfd    stp x29, x30, [sp, #-96]!
   a1c44:   910003fd    mov x29, sp
   a1c48:   a9025bf5    stp x21, x22, [sp, #32]
   a1c4c:   9100a016    add x22, x0, #0x28
   a1c50:   aa0003f5    mov x21, x0
   a1c54:   aa1603e0    mov x0, x22
   a1c58:   a90153f3    stp x19, x20, [sp, #16]
   a1c5c:   a90363f7    stp x23, x24, [sp, #48]
   a1c60:   13001c38    sxtb    w24, w1
   a1c64:   52800017    mov w23, #0x0
   a1c68:   a9046bf9    stp x25, x26, [sp, #64]
   a1c6c:   2a0303f9    mov w25, w3
   a1c70:   12003c9a    and w26, w4, #0xffff
   a1c74:   f9002bfb    str x27, [sp, #80]
   a1c78:   2a0203fb    mov w27, w2
   a1c7c:   9400285d    bl  abdf0 <CCharGenerator::GetCharHeight() const>
   a1c80:   6b17001f    cmp w0, w23
   a1c84:   540004e9    b.ls    a1d20 <CScreenDevice::DisplayChar(char, unsigned int, unsigned int, unsigned short)+0xe0>
   a1c88:   2a1b03f4    mov w20, w27
   a1c8c:   52800013    mov w19, #0x0
   a1c90:   aa1603e0    mov x0, x22
   a1c94:   94002853    bl  abde0 <CCharGenerator::GetCharWidth() const>
   a1c98:   2a0003e4    mov w4, w0
   a1c9c:   2a1703e3    mov w3, w23
   a1ca0:   6b13009f    cmp w4, w19
   a1ca4:   2a1303e2    mov w2, w19
   a1ca8:   2a1803e1    mov w1, w24
   a1cac:   aa1603e0    mov x0, x22
   a1cb0:   540002c9    b.ls    a1d08 <CScreenDevice::DisplayChar(char, unsigned int, unsigned int, unsigned short)+0xc8>
   a1cb4:   94002857    bl  abe10 <CCharGenerator::GetPixel(char, unsigned int, unsigned int) const>
   a1cb8:   2a1a03e1    mov w1, w26
   a1cbc:   37000080    tbnz    w0, #0, a1ccc <CScreenDevice::DisplayChar(char, unsigned int, unsigned int, unsigned short)+0x8c>
   a1cc0:   3941baa0    ldrb    w0, [x21, #110]
   a1cc4:   360001e0    tbz w0, #0, a1d00 <CScreenDevice::DisplayChar(char, unsigned int, unsigned int, unsigned short)+0xc0>
   a1cc8:   7940d6a1    ldrh    w1, [x21, #106]
   a1ccc:   11000673    add w19, w19, #0x1
   a1cd0:   b9404aa0    ldr w0, [x21, #72]
   a1cd4:   6b14001f    cmp w0, w20
   a1cd8:   54000109    b.ls    a1cf8 <CScreenDevice::DisplayChar(char, unsigned int, unsigned int, unsigned short)+0xb8>
   a1cdc:   b9404ea0    ldr w0, [x21, #76]
   a1ce0:   6b19001f    cmp w0, w25
   a1ce4:   540000a9    b.ls    a1cf8 <CScreenDevice::DisplayChar(char, unsigned int, unsigned int, unsigned short)+0xb8>
   a1ce8:   b94046a0    ldr w0, [x21, #68]
   a1cec:   f9401ea2    ldr x2, [x21, #56]
   a1cf0:   1b005320    madd    w0, w25, w0, w20
   a1cf4:   78207841    strh    w1, [x2, x0, lsl #1]
   a1cf8:   11000694    add w20, w20, #0x1
   a1cfc:   17ffffe5    b   a1c90 <CScreenDevice::DisplayChar(char, unsigned int, unsigned int, unsigned short)+0x50>
   a1d00:   7940daa1    ldrh    w1, [x21, #108]
   a1d04:   17fffff2    b   a1ccc <CScreenDevice::DisplayChar(char, unsigned int, unsigned int, unsigned short)+0x8c>
   a1d08:   aa1603e0    mov x0, x22
   a1d0c:   110006f7    add w23, w23, #0x1
   a1d10:   94002838    bl  abdf0 <CCharGenerator::GetCharHeight() const>
   a1d14:   6b17001f    cmp w0, w23
   a1d18:   11000739    add w25, w25, #0x1
   a1d1c:   54fffb68    b.hi    a1c88 <CScreenDevice::DisplayChar(char, unsigned int, unsigned int, unsigned short)+0x48>
   a1d20:   a94153f3    ldp x19, x20, [sp, #16]
   a1d24:   a9425bf5    ldp x21, x22, [sp, #32]
   a1d28:   a94363f7    ldp x23, x24, [sp, #48]
   a1d2c:   a9446bf9    ldp x25, x26, [sp, #64]
   a1d30:   f9402bfb    ldr x27, [sp, #80]
   a1d34:   a8c67bfd    ldp x29, x30, [sp], #96
   a1d38:   d65f03c0    ret
   a1d3c:   d503201f    nop

00000000000a1d40 <CScreenDevice::DisplayChar(char)>:
   a1d40:   12001c22    and w2, w1, #0xff
   a1d44:   71007c5f    cmp w2, #0x1f
   a1d48:   54000329    b.ls    a1dac <CScreenDevice::DisplayChar(char)+0x6c>
   a1d4c:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a1d50:   910003fd    mov x29, sp
   a1d54:   13001c21    sxtb    w1, w1
   a1d58:   3941b804    ldrb    w4, [x0, #110]
   a1d5c:   a90153f3    stp x19, x20, [sp, #16]
   a1d60:   aa0003f3    mov x19, x0
   a1d64:   9100a014    add x20, x0, #0x28
   a1d68:   7940d405    ldrh    w5, [x0, #106]
   a1d6c:   f240009f    tst x4, #0x1
   a1d70:   294c0c02    ldp w2, w3, [x0, #96]
   a1d74:   7940d804    ldrh    w4, [x0, #108]
   a1d78:   1a8400a4    csel    w4, w5, w4, eq
   a1d7c:   97ffffb1    bl  a1c40 <CScreenDevice::DisplayChar(char, unsigned int, unsigned int, unsigned short)>
   a1d80:   aa1403e0    mov x0, x20
   a1d84:   94002817    bl  abde0 <CCharGenerator::GetCharWidth() const>
   a1d88:   b9406262    ldr w2, [x19, #96]
   a1d8c:   b9404a61    ldr w1, [x19, #72]
   a1d90:   0b020000    add w0, w0, w2
   a1d94:   6b01001f    cmp w0, w1
   a1d98:   b9006260    str w0, [x19, #96]
   a1d9c:   540000a2    b.cs    a1db0 <CScreenDevice::DisplayChar(char)+0x70>
   a1da0:   a94153f3    ldp x19, x20, [sp, #16]
   a1da4:   a8c27bfd    ldp x29, x30, [sp], #32
   a1da8:   d65f03c0    ret
   a1dac:   d65f03c0    ret
   a1db0:   aa1403e0    mov x0, x20
   a1db4:   b900627f    str wzr, [x19, #96]
   a1db8:   9400280e    bl  abdf0 <CCharGenerator::GetCharHeight() const>
   a1dbc:   b9406662    ldr w2, [x19, #100]
   a1dc0:   b9405e61    ldr w1, [x19, #92]
   a1dc4:   0b020000    add w0, w0, w2
   a1dc8:   6b01001f    cmp w0, w1
   a1dcc:   b9006660    str w0, [x19, #100]
   a1dd0:   54fffe83    b.cc    a1da0 <CScreenDevice::DisplayChar(char)+0x60>
   a1dd4:   aa1303e0    mov x0, x19
   a1dd8:   97fffe92    bl  a1820 <CScreenDevice::Scroll()>
   a1ddc:   aa1403e0    mov x0, x20
   a1de0:   94002804    bl  abdf0 <CCharGenerator::GetCharHeight() const>
   a1de4:   b9406661    ldr w1, [x19, #100]
   a1de8:   4b000021    sub w1, w1, w0
   a1dec:   b9006661    str w1, [x19, #100]
   a1df0:   17ffffec    b   a1da0 <CScreenDevice::DisplayChar(char)+0x60>
   a1df4:   d503201f    nop
   a1df8:   d503201f    nop
   a1dfc:   d503201f    nop

00000000000a1e00 <CScreenDevice::EraseChar(unsigned int, unsigned int)>:
   a1e00:   a9bb7bfd    stp x29, x30, [sp, #-80]!
   a1e04:   910003fd    mov x29, sp
   a1e08:   a9025bf5    stp x21, x22, [sp, #32]
   a1e0c:   9100a016    add x22, x0, #0x28
   a1e10:   aa0003f5    mov x21, x0
   a1e14:   aa1603e0    mov x0, x22
   a1e18:   a90153f3    stp x19, x20, [sp, #16]
   a1e1c:   a90363f7    stp x23, x24, [sp, #48]
   a1e20:   2a0203f7    mov w23, w2
   a1e24:   52800018    mov w24, #0x0
   a1e28:   f90023f9    str x25, [sp, #64]
   a1e2c:   2a0103f9    mov w25, w1
   a1e30:   940027f0    bl  abdf0 <CCharGenerator::GetCharHeight() const>
   a1e34:   6b18001f    cmp w0, w24
   a1e38:   54000429    b.ls    a1ebc <CScreenDevice::EraseChar(unsigned int, unsigned int)+0xbc>
   a1e3c:   d503201f    nop
   a1e40:   aa1603e0    mov x0, x22
   a1e44:   52800013    mov w19, #0x0
   a1e48:   940027e6    bl  abde0 <CCharGenerator::GetCharWidth() const>
   a1e4c:   6b13001f    cmp w0, w19
   a1e50:   2a1903f4    mov w20, w25
   a1e54:   11000673    add w19, w19, #0x1
   a1e58:   54000269    b.ls    a1ea4 <CScreenDevice::EraseChar(unsigned int, unsigned int)+0xa4>
   a1e5c:   d503201f    nop
   a1e60:   b9404aa0    ldr w0, [x21, #72]
   a1e64:   6b14001f    cmp w0, w20
   a1e68:   54000129    b.ls    a1e8c <CScreenDevice::EraseChar(unsigned int, unsigned int)+0x8c>
   a1e6c:   b9404ea0    ldr w0, [x21, #76]
   a1e70:   6b0002ff    cmp w23, w0
   a1e74:   540000c2    b.cs    a1e8c <CScreenDevice::EraseChar(unsigned int, unsigned int)+0x8c>
   a1e78:   b94046a0    ldr w0, [x21, #68]
   a1e7c:   f9401ea1    ldr x1, [x21, #56]
   a1e80:   7940daa2    ldrh    w2, [x21, #108]
   a1e84:   1b0052e0    madd    w0, w23, w0, w20
   a1e88:   78207822    strh    w2, [x1, x0, lsl #1]
   a1e8c:   aa1603e0    mov x0, x22
   a1e90:   11000694    add w20, w20, #0x1
   a1e94:   940027d3    bl  abde0 <CCharGenerator::GetCharWidth() const>
   a1e98:   6b13001f    cmp w0, w19
   a1e9c:   11000673    add w19, w19, #0x1
   a1ea0:   54fffe08    b.hi    a1e60 <CScreenDevice::EraseChar(unsigned int, unsigned int)+0x60>
   a1ea4:   aa1603e0    mov x0, x22
   a1ea8:   11000718    add w24, w24, #0x1
   a1eac:   940027d1    bl  abdf0 <CCharGenerator::GetCharHeight() const>
   a1eb0:   6b18001f    cmp w0, w24
   a1eb4:   110006f7    add w23, w23, #0x1
   a1eb8:   54fffc48    b.hi    a1e40 <CScreenDevice::EraseChar(unsigned int, unsigned int)+0x40>
   a1ebc:   a94153f3    ldp x19, x20, [sp, #16]
   a1ec0:   a9425bf5    ldp x21, x22, [sp, #32]
   a1ec4:   a94363f7    ldp x23, x24, [sp, #48]
   a1ec8:   f94023f9    ldr x25, [sp, #64]
   a1ecc:   a8c57bfd    ldp x29, x30, [sp], #80
   a1ed0:   d65f03c0    ret
   a1ed4:   d503201f    nop
   a1ed8:   d503201f    nop
   a1edc:   d503201f    nop

00000000000a1ee0 <CScreenDevice::ClearLineEnd()>:
   a1ee0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   a1ee4:   910003fd    mov x29, sp
   a1ee8:   a90153f3    stp x19, x20, [sp, #16]
   a1eec:   aa0003f4    mov x20, x0
   a1ef0:   b9406293    ldr w19, [x20, #96]
   a1ef4:   b9404800    ldr w0, [x0, #72]
   a1ef8:   6b00027f    cmp w19, w0
   a1efc:   540001c2    b.cs    a1f34 <CScreenDevice::ClearLineEnd()+0x54>
   a1f00:   f90013f5    str x21, [sp, #32]
   a1f04:   9100a295    add x21, x20, #0x28
   a1f08:   b9406682    ldr w2, [x20, #100]
   a1f0c:   2a1303e1    mov w1, w19
   a1f10:   aa1403e0    mov x0, x20
   a1f14:   97ffffbb    bl  a1e00 <CScreenDevice::EraseChar(unsigned int, unsigned int)>
   a1f18:   aa1503e0    mov x0, x21
   a1f1c:   940027b1    bl  abde0 <CCharGenerator::GetCharWidth() const>
   a1f20:   b9404a81    ldr w1, [x20, #72]
   a1f24:   0b000273    add w19, w19, w0
   a1f28:   6b13003f    cmp w1, w19
   a1f2c:   54fffee8    b.hi    a1f08 <CScreenDevice::ClearLineEnd()+0x28>
   a1f30:   f94013f5    ldr x21, [sp, #32]
   a1f34:   a94153f3    ldp x19, x20, [sp, #16]
   a1f38:   a8c37bfd    ldp x29, x30, [sp], #48
   a1f3c:   d65f03c0    ret

00000000000a1f40 <CScreenDevice::EraseChars(unsigned int) [clone .part.0]>:
   a1f40:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   a1f44:   910003fd    mov x29, sp
   a1f48:   a9025bf5    stp x21, x22, [sp, #32]
   a1f4c:   9100a016    add x22, x0, #0x28
   a1f50:   2a0103f5    mov w21, w1
   a1f54:   f9001bf7    str x23, [sp, #48]
   a1f58:   b9406017    ldr w23, [x0, #96]
   a1f5c:   a90153f3    stp x19, x20, [sp, #16]
   a1f60:   aa0003f4    mov x20, x0
   a1f64:   aa1603e0    mov x0, x22
   a1f68:   9400279e    bl  abde0 <CCharGenerator::GetCharWidth() const>
   a1f6c:   b9404a81    ldr w1, [x20, #72]
   a1f70:   1b155c15    madd    w21, w0, w21, w23
   a1f74:   b9406293    ldr w19, [x20, #96]
   a1f78:   6b0102bf    cmp w21, w1
   a1f7c:   1a8192b5    csel    w21, w21, w1, ls
   a1f80:   6b1302bf    cmp w21, w19
   a1f84:   54000149    b.ls    a1fac <CScreenDevice::EraseChars(unsigned int) [clone .part.0]+0x6c>
   a1f88:   b9406682    ldr w2, [x20, #100]
   a1f8c:   2a1303e1    mov w1, w19
   a1f90:   aa1403e0    mov x0, x20
   a1f94:   97ffff9b    bl  a1e00 <CScreenDevice::EraseChar(unsigned int, unsigned int)>
   a1f98:   aa1603e0    mov x0, x22
   a1f9c:   94002791    bl  abde0 <CCharGenerator::GetCharWidth() const>
   a1fa0:   0b000273    add w19, w19, w0
   a1fa4:   6b1302bf    cmp w21, w19
   a1fa8:   54ffff08    b.hi    a1f88 <CScreenDevice::EraseChars(unsigned int) [clone .part.0]+0x48>
   a1fac:   a94153f3    ldp x19, x20, [sp, #16]
   a1fb0:   a9425bf5    ldp x21, x22, [sp, #32]
   a1fb4:   f9401bf7    ldr x23, [sp, #48]
   a1fb8:   a8c47bfd    ldp x29, x30, [sp], #64
   a1fbc:   d65f03c0    ret

00000000000a1fc0 <CScreenDevice::EraseChars(unsigned int)>:
   a1fc0:   35000041    cbnz    w1, a1fc8 <CScreenDevice::EraseChars(unsigned int)+0x8>
   a1fc4:   d65f03c0    ret
   a1fc8:   17ffffde    b   a1f40 <CScreenDevice::EraseChars(unsigned int) [clone .part.0]>
   a1fcc:   d503201f    nop

00000000000a1fd0 <CScreenDevice::ClearDisplayEnd()>:
   a1fd0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   a1fd4:   910003fd    mov x29, sp
   a1fd8:   a90153f3    stp x19, x20, [sp, #16]
   a1fdc:   aa0003f3    mov x19, x0
   a1fe0:   b9406274    ldr w20, [x19, #96]
   a1fe4:   b9404800    ldr w0, [x0, #72]
   a1fe8:   f90013f5    str x21, [sp, #32]
   a1fec:   9100a275    add x21, x19, #0x28
   a1ff0:   6b00029f    cmp w20, w0
   a1ff4:   54000162    b.cs    a2020 <CScreenDevice::ClearDisplayEnd()+0x50>
   a1ff8:   b9406662    ldr w2, [x19, #100]
   a1ffc:   2a1403e1    mov w1, w20
   a2000:   aa1303e0    mov x0, x19
   a2004:   97ffff7f    bl  a1e00 <CScreenDevice::EraseChar(unsigned int, unsigned int)>
   a2008:   aa1503e0    mov x0, x21
   a200c:   94002775    bl  abde0 <CCharGenerator::GetCharWidth() const>
   a2010:   b9404a61    ldr w1, [x19, #72]
   a2014:   0b000294    add w20, w20, w0
   a2018:   6b01029f    cmp w20, w1
   a201c:   54fffee3    b.cc    a1ff8 <CScreenDevice::ClearDisplayEnd()+0x28>
   a2020:   b9406674    ldr w20, [x19, #100]
   a2024:   aa1503e0    mov x0, x21
   a2028:   94002772    bl  abdf0 <CCharGenerator::GetCharHeight() const>
   a202c:   29480e62    ldp w2, w3, [x19, #64]
   a2030:   f9401e64    ldr x4, [x19, #56]
   a2034:   0b000281    add w1, w20, w0
   a2038:   1b037c23    mul w3, w1, w3
   a203c:   53017c42    lsr w2, w2, #1
   a2040:   d37f7c68    ubfiz   x8, x3, #1, #32
   a2044:   4b030042    sub w2, w2, w3
   a2048:   51000441    sub w1, w2, #0x1
   a204c:   8b080080    add x0, x4, x8
   a2050:   34000242    cbz w2, a2098 <CScreenDevice::ClearDisplayEnd()+0xc8>
   a2054:   7100343f    cmp w1, #0xd
   a2058:   54000109    b.ls    a2078 <CScreenDevice::ClearDisplayEnd()+0xa8>
   a205c:   8b224067    add x7, x3, w2, uxtw
   a2060:   8b070487    add x7, x4, x7, lsl #1
   a2064:   9101b266    add x6, x19, #0x6c
   a2068:   9101ba65    add x5, x19, #0x6e
   a206c:   eb0600ff    cmp x7, x6
   a2070:   fa4080a0    ccmp    x5, x0, #0x0, hi
   a2074:   540001a9    b.ls    a20a8 <CScreenDevice::ClearDisplayEnd()+0xd8>
   a2078:   d37f7c21    ubfiz   x1, x1, #1, #32
   a207c:   91000821    add x1, x1, #0x2
   a2080:   8b010001    add x1, x0, x1
   a2084:   d503201f    nop
   a2088:   7940da62    ldrh    w2, [x19, #108]
   a208c:   78002402    strh    w2, [x0], #2
   a2090:   eb01001f    cmp x0, x1
   a2094:   54ffffa1    b.ne    a2088 <CScreenDevice::ClearDisplayEnd()+0xb8>
   a2098:   a94153f3    ldp x19, x20, [sp, #16]
   a209c:   f94013f5    ldr x21, [sp, #32]
   a20a0:   a8c37bfd    ldp x29, x30, [sp], #48
   a20a4:   d65f03c0    ret
   a20a8:   cb4007e6    neg x6, x0, lsr #1
   a20ac:   720008c5    ands    w5, w6, #0x7
   a20b0:   54000980    b.eq    a21e0 <CScreenDevice::ClearDisplayEnd()+0x210>
   a20b4:   7940da61    ldrh    w1, [x19, #108]
   a20b8:   f27f04df    tst x6, #0x6
   a20bc:   78286881    strh    w1, [x4, x8]
   a20c0:   540008a0    b.eq    a21d4 <CScreenDevice::ClearDisplayEnd()+0x204>
   a20c4:   710008bf    cmp w5, #0x2
   a20c8:   79000401    strh    w1, [x0, #2]
   a20cc:   540008e9    b.ls    a21e8 <CScreenDevice::ClearDisplayEnd()+0x218>
   a20d0:   7940da61    ldrh    w1, [x19, #108]
   a20d4:   79000801    strh    w1, [x0, #4]
   a20d8:   361008e6    tbz w6, #2, a21f4 <CScreenDevice::ClearDisplayEnd()+0x224>
   a20dc:   710010bf    cmp w5, #0x4
   a20e0:   79000c01    strh    w1, [x0, #6]
   a20e4:   54000729    b.ls    a21c8 <CScreenDevice::ClearDisplayEnd()+0x1f8>
   a20e8:   7940da61    ldrh    w1, [x19, #108]
   a20ec:   710014bf    cmp w5, #0x5
   a20f0:   79001001    strh    w1, [x0, #8]
   a20f4:   54000860    b.eq    a2200 <CScreenDevice::ClearDisplayEnd()+0x230>
   a20f8:   71001cbf    cmp w5, #0x7
   a20fc:   79001401    strh    w1, [x0, #10]
   a2100:   54000861    b.ne    a220c <CScreenDevice::ClearDisplayEnd()+0x23c>
   a2104:   7940da67    ldrh    w7, [x19, #108]
   a2108:   91003806    add x6, x0, #0xe
   a210c:   51002041    sub w1, w2, #0x8
   a2110:   79001807    strh    w7, [x0, #12]
   a2114:   7d40da60    ldr h0, [x19, #108]
   a2118:   2a0503e0    mov w0, w5
   a211c:   4b050042    sub w2, w2, w5
   a2120:   8b030000    add x0, x0, x3
   a2124:   53037c43    lsr w3, w2, #3
   a2128:   8b000480    add x0, x4, x0, lsl #1
   a212c:   8b235003    add x3, x0, w3, uxtw #4
   a2130:   4e020400    dup v0.8h, v0.h[0]
   a2134:   d503201f    nop
   a2138:   3c810400    str q0, [x0], #16
   a213c:   eb03001f    cmp x0, x3
   a2140:   54ffffc1    b.ne    a2138 <CScreenDevice::ClearDisplayEnd()+0x168>
   a2144:   927d7040    and x0, x2, #0xfffffff8
   a2148:   f240085f    tst x2, #0x7
   a214c:   121d7042    and w2, w2, #0xfffffff8
   a2150:   d37ff800    lsl x0, x0, #1
   a2154:   4b020021    sub w1, w1, w2
   a2158:   8b0000c2    add x2, x6, x0
   a215c:   54fff9e0    b.eq    a2098 <CScreenDevice::ClearDisplayEnd()+0xc8>
   a2160:   7940da63    ldrh    w3, [x19, #108]
   a2164:   782068c3    strh    w3, [x6, x0]
   a2168:   34fff981    cbz w1, a2098 <CScreenDevice::ClearDisplayEnd()+0xc8>
   a216c:   7100043f    cmp w1, #0x1
   a2170:   79000443    strh    w3, [x2, #2]
   a2174:   54fff920    b.eq    a2098 <CScreenDevice::ClearDisplayEnd()+0xc8>
   a2178:   7940da60    ldrh    w0, [x19, #108]
   a217c:   7100083f    cmp w1, #0x2
   a2180:   79000840    strh    w0, [x2, #4]
   a2184:   54fff8a0    b.eq    a2098 <CScreenDevice::ClearDisplayEnd()+0xc8>
   a2188:   71000c3f    cmp w1, #0x3
   a218c:   79000c40    strh    w0, [x2, #6]
   a2190:   54fff840    b.eq    a2098 <CScreenDevice::ClearDisplayEnd()+0xc8>
   a2194:   7940da60    ldrh    w0, [x19, #108]
   a2198:   7100103f    cmp w1, #0x4
   a219c:   79001040    strh    w0, [x2, #8]
   a21a0:   54fff7c0    b.eq    a2098 <CScreenDevice::ClearDisplayEnd()+0xc8>
   a21a4:   7100143f    cmp w1, #0x5
   a21a8:   79001440    strh    w0, [x2, #10]
   a21ac:   54fff760    b.eq    a2098 <CScreenDevice::ClearDisplayEnd()+0xc8>
   a21b0:   7940da60    ldrh    w0, [x19, #108]
   a21b4:   a94153f3    ldp x19, x20, [sp, #16]
   a21b8:   f94013f5    ldr x21, [sp, #32]
   a21bc:   79001840    strh    w0, [x2, #12]
   a21c0:   a8c37bfd    ldp x29, x30, [sp], #48
   a21c4:   d65f03c0    ret
   a21c8:   91002006    add x6, x0, #0x8
   a21cc:   51001441    sub w1, w2, #0x5
   a21d0:   17ffffd1    b   a2114 <CScreenDevice::ClearDisplayEnd()+0x144>
   a21d4:   91000806    add x6, x0, #0x2
   a21d8:   51000841    sub w1, w2, #0x2
   a21dc:   17ffffce    b   a2114 <CScreenDevice::ClearDisplayEnd()+0x144>
   a21e0:   aa0003e6    mov x6, x0
   a21e4:   17ffffcc    b   a2114 <CScreenDevice::ClearDisplayEnd()+0x144>
   a21e8:   91001006    add x6, x0, #0x4
   a21ec:   51000c41    sub w1, w2, #0x3
   a21f0:   17ffffc9    b   a2114 <CScreenDevice::ClearDisplayEnd()+0x144>
   a21f4:   91001806    add x6, x0, #0x6
   a21f8:   51001041    sub w1, w2, #0x4
   a21fc:   17ffffc6    b   a2114 <CScreenDevice::ClearDisplayEnd()+0x144>
   a2200:   91002806    add x6, x0, #0xa
   a2204:   51001841    sub w1, w2, #0x6
   a2208:   17ffffc3    b   a2114 <CScreenDevice::ClearDisplayEnd()+0x144>
   a220c:   91003006    add x6, x0, #0xc
   a2210:   51001c41    sub w1, w2, #0x7
   a2214:   17ffffc0    b   a2114 <CScreenDevice::ClearDisplayEnd()+0x144>
   a2218:   d503201f    nop
   a221c:   d503201f    nop

00000000000a2220 <CScreenDevice::Initialize()>:
   a2220:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   a2224:   910003fd    mov x29, sp
   a2228:   a90153f3    stp x19, x20, [sp, #16]
   a222c:   aa0003f3    mov x19, x0
   a2230:   39406014    ldrb    w20, [x0, #24]
   a2234:   a9025bf5    stp x21, x22, [sp, #32]
   a2238:   37000294    tbnz    w20, #0, a2288 <CScreenDevice::Initialize()+0x68>
   a223c:   d2801400    mov x0, #0xa0
   a2240:   94001560    bl  a77c0 <operator new(unsigned long)>
   a2244:   29420a61    ldp w1, w2, [x19, #16]
   a2248:   aa0003f5    mov x21, x0
   a224c:   52800007    mov w7, #0x0
   a2250:   52800005    mov w5, #0x0
   a2254:   52800004    mov w4, #0x0
   a2258:   b9401e66    ldr w6, [x19, #28]
   a225c:   52800203    mov w3, #0x10
   a2260:   940024b0    bl  ab520 <CBcmFrameBuffer::CBcmFrameBuffer(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, bool)>
   a2264:   aa1503e0    mov x0, x21
   a2268:   f9001275    str x21, [x19, #32]
   a226c:   94002599    bl  ab8d0 <CBcmFrameBuffer::Initialize()>
   a2270:   37000660    tbnz    w0, #0, a233c <CScreenDevice::Initialize()+0x11c>
   a2274:   a9425bf5    ldp x21, x22, [sp, #32]
   a2278:   2a1403e0    mov w0, w20
   a227c:   a94153f3    ldp x19, x20, [sp, #16]
   a2280:   a8c47bfd    ldp x29, x30, [sp], #64
   a2284:   d65f03c0    ret
   a2288:   9100a015    add x21, x0, #0x28
   a228c:   29420400    ldp w0, w1, [x0, #16]
   a2290:   29088260    stp w0, w0, [x19, #68]
   a2294:   1b017c00    mul w0, w0, w1
   a2298:   b9004e61    str w1, [x19, #76]
   a229c:   531f7801    lsl w1, w0, #1
   a22a0:   d37f7c00    ubfiz   x0, x0, #1, #32
   a22a4:   b9004261    str w1, [x19, #64]
   a22a8:   9400154e    bl  a77e0 <operator new[](unsigned long)>
   a22ac:   f9001e60    str x0, [x19, #56]
   a22b0:   b9404e74    ldr w20, [x19, #76]
   a22b4:   aa1503e0    mov x0, x21
   a22b8:   940026ce    bl  abdf0 <CCharGenerator::GetCharHeight() const>
   a22bc:   2a0003e1    mov w1, w0
   a22c0:   aa1503e0    mov x0, x21
   a22c4:   1ac10a94    udiv    w20, w20, w1
   a22c8:   940026ca    bl  abdf0 <CCharGenerator::GetCharHeight() const>
   a22cc:   b9405a62    ldr w2, [x19, #88]
   a22d0:   2a0003e1    mov w1, w0
   a22d4:   aa1303e0    mov x0, x19
   a22d8:   1b017e81    mul w1, w20, w1
   a22dc:   b9006662    str w2, [x19, #100]
   a22e0:   b9005261    str w1, [x19, #80]
   a22e4:   290bfe61    stp w1, wzr, [x19, #92]
   a22e8:   97ffff3a    bl  a1fd0 <CScreenDevice::ClearDisplayEnd()>
   a22ec:   3941a260    ldrb    w0, [x19, #104]
   a22f0:   37000200    tbnz    w0, #0, a2330 <CScreenDevice::Initialize()+0x110>
   a22f4:   97ffeddb    bl  9da60 <CDeviceNameService::Get()>
   a22f8:   b9401e62    ldr w2, [x19, #28]
   a22fc:   d00000b4    adrp    x20, b8000 <vtable for CGPIOPin+0x288>
   a2300:   911d6294    add x20, x20, #0x758
   a2304:   aa1403e1    mov x1, x20
   a2308:   52800003    mov w3, #0x0
   a230c:   11000442    add w2, w2, #0x1
   a2310:   97ffee1c    bl  9db80 <CDeviceNameService::GetDevice(char const*, unsigned int, bool)>
   a2314:   b4000700    cbz x0, a23f4 <CScreenDevice::Initialize()+0x1d4>
   a2318:   52800034    mov w20, #0x1
   a231c:   a9425bf5    ldp x21, x22, [sp, #32]
   a2320:   2a1403e0    mov w0, w20
   a2324:   a94153f3    ldp x19, x20, [sp, #16]
   a2328:   a8c47bfd    ldp x29, x30, [sp], #64
   a232c:   d65f03c0    ret
   a2330:   aa1303e0    mov x0, x19
   a2334:   97fffb33    bl  a1000 <CScreenDevice::InvertCursor() [clone .part.0]>
   a2338:   17ffffef    b   a22f4 <CScreenDevice::Initialize()+0xd4>
   a233c:   f9401260    ldr x0, [x19, #32]
   a2340:   9400251c    bl  ab7b0 <CBcmFrameBuffer::GetDepth() const>
   a2344:   7100401f    cmp w0, #0x10
   a2348:   54fff961    b.ne    a2274 <CScreenDevice::Initialize()+0x54>
   a234c:   f9401260    ldr x0, [x19, #32]
   a2350:   9100a275    add x21, x19, #0x28
   a2354:   f9001bf7    str x23, [sp, #48]
   a2358:   9400251a    bl  ab7c0 <CBcmFrameBuffer::GetBuffer() const>
   a235c:   2a0003e1    mov w1, w0
   a2360:   f9401260    ldr x0, [x19, #32]
   a2364:   f9001e61    str x1, [x19, #56]
   a2368:   9400251a    bl  ab7d0 <CBcmFrameBuffer::GetSize() const>
   a236c:   2a0003e1    mov w1, w0
   a2370:   f9401260    ldr x0, [x19, #32]
   a2374:   b9004261    str w1, [x19, #64]
   a2378:   9400250a    bl  ab7a0 <CBcmFrameBuffer::GetPitch() const>
   a237c:   2a0003e1    mov w1, w0
   a2380:   f9401260    ldr x0, [x19, #32]
   a2384:   b9004661    str w1, [x19, #68]
   a2388:   940024f6    bl  ab760 <CBcmFrameBuffer::GetWidth() const>
   a238c:   2a0003e1    mov w1, w0
   a2390:   f9401260    ldr x0, [x19, #32]
   a2394:   b9004a61    str w1, [x19, #72]
   a2398:   940024f6    bl  ab770 <CBcmFrameBuffer::GetHeight() const>
   a239c:   2a0003e1    mov w1, w0
   a23a0:   aa1503e0    mov x0, x21
   a23a4:   b9004e61    str w1, [x19, #76]
   a23a8:   9400268e    bl  abde0 <CCharGenerator::GetCharWidth() const>
   a23ac:   2a0003f7    mov w23, w0
   a23b0:   aa1503e0    mov x0, x21
   a23b4:   9400268f    bl  abdf0 <CCharGenerator::GetCharHeight() const>
   a23b8:   2a0003f6    mov w22, w0
   a23bc:   aa1503e0    mov x0, x21
   a23c0:   94002690    bl  abe00 <CCharGenerator::GetUnderline() const>
   a23c4:   4b0002d6    sub w22, w22, w0
   a23c8:   1b177ec0    mul w0, w22, w23
   a23cc:   d37ff800    lsl x0, x0, #1
   a23d0:   94001504    bl  a77e0 <operator new[](unsigned long)>
   a23d4:   b9404661    ldr w1, [x19, #68]
   a23d8:   f9001a60    str x0, [x19, #48]
   a23dc:   f240043f    tst x1, #0x3
   a23e0:   540001c1    b.ne    a2418 <CScreenDevice::Initialize()+0x1f8>
   a23e4:   53017c21    lsr w1, w1, #1
   a23e8:   f9401bf7    ldr x23, [sp, #48]
   a23ec:   b9004661    str w1, [x19, #68]
   a23f0:   17ffffb0    b   a22b0 <CScreenDevice::Initialize()+0x90>
   a23f4:   97ffed9b    bl  9da60 <CDeviceNameService::Get()>
   a23f8:   b9401e62    ldr w2, [x19, #28]
   a23fc:   aa1403e1    mov x1, x20
   a2400:   aa1303e3    mov x3, x19
   a2404:   52800004    mov w4, #0x0
   a2408:   52800034    mov w20, #0x1
   a240c:   11000442    add w2, w2, #0x1
   a2410:   97ffeda0    bl  9da90 <CDeviceNameService::AddDevice(char const*, unsigned int, CDevice*, bool)>
   a2414:   17ffffc2    b   a231c <CScreenDevice::Initialize()+0xfc>
   a2418:   f9401bf7    ldr x23, [sp, #48]
   a241c:   17ffff96    b   a2274 <CScreenDevice::Initialize()+0x54>

00000000000a2420 <CScreenDevice::Resize(unsigned int, unsigned int)>:
   a2420:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   a2424:   910003fd    mov x29, sp
   a2428:   a90153f3    stp x19, x20, [sp, #16]
   a242c:   aa0003f3    mov x19, x0
   a2430:   2a0203f4    mov w20, w2
   a2434:   39406000    ldrb    w0, [x0, #24]
   a2438:   a9025bf5    stp x21, x22, [sp, #32]
   a243c:   2a0103f5    mov w21, w1
   a2440:   36000080    tbz w0, #0, a2450 <CScreenDevice::Resize(unsigned int, unsigned int)+0x30>
   a2444:   f9401e60    ldr x0, [x19, #56]
   a2448:   b4000040    cbz x0, a2450 <CScreenDevice::Resize(unsigned int, unsigned int)+0x30>
   a244c:   940014f9    bl  a7830 <operator delete[](void*)>
   a2450:   f9401276    ldr x22, [x19, #32]
   a2454:   f9001e7f    str xzr, [x19, #56]
   a2458:   b40000d6    cbz x22, a2470 <CScreenDevice::Resize(unsigned int, unsigned int)+0x50>
   a245c:   aa1603e0    mov x0, x22
   a2460:   9400248c    bl  ab690 <CBcmFrameBuffer::~CBcmFrameBuffer()>
   a2464:   aa1603e0    mov x0, x22
   a2468:   d2801401    mov x1, #0xa0
   a246c:   940014fd    bl  a7860 <operator delete(void*, unsigned long)>
   a2470:   f9401a60    ldr x0, [x19, #48]
   a2474:   f900127f    str xzr, [x19, #32]
   a2478:   b4000040    cbz x0, a2480 <CScreenDevice::Resize(unsigned int, unsigned int)+0x60>
   a247c:   940014ed    bl  a7830 <operator delete[](void*)>
   a2480:   d2800021    mov x1, #0x1
   a2484:   f2bffbe1    movk    x1, #0xffdf, lsl #16
   a2488:   29025275    stp w21, w20, [x19, #16]
   a248c:   aa1303e0    mov x0, x19
   a2490:   f9001a7f    str xzr, [x19, #48]
   a2494:   290afe7f    stp wzr, wzr, [x19, #84]
   a2498:   a906067f    stp xzr, x1, [x19, #96]
   a249c:   a9425bf5    ldp x21, x22, [sp, #32]
   a24a0:   3901e27f    strb    wzr, [x19, #120]
   a24a4:   a94153f3    ldp x19, x20, [sp, #16]
   a24a8:   a8c37bfd    ldp x29, x30, [sp], #48
   a24ac:   17ffff5d    b   a2220 <CScreenDevice::Initialize()>

00000000000a24b0 <CScreenDevice::Write(char)>:
   a24b0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   a24b4:   910003fd    mov x29, sp
   a24b8:   13001c21    sxtb    w1, w1
   a24bc:   b9405402    ldr w2, [x0, #84]
   a24c0:   a90153f3    stp x19, x20, [sp, #16]
   a24c4:   aa0003f3    mov x19, x0
   a24c8:   7100105f    cmp w2, #0x4
   a24cc:   540006c0    b.eq    a25a4 <CScreenDevice::Write(char)+0xf4>
   a24d0:   54000188    b.hi    a2500 <CScreenDevice::Write(char)+0x50>
   a24d4:   7100085f    cmp w2, #0x2
   a24d8:   54000900    b.eq    a25f8 <CScreenDevice::Write(char)+0x148>
   a24dc:   71000c5f    cmp w2, #0x3
   a24e0:   54000720    b.eq    a25c4 <CScreenDevice::Write(char)+0x114>
   a24e4:   340002e2    cbz w2, a2540 <CScreenDevice::Write(char)+0x90>
   a24e8:   71016c3f    cmp w1, #0x5b
   a24ec:   540014a0    b.eq    a2780 <CScreenDevice::Write(char)+0x2d0>
   a24f0:   b900567f    str wzr, [x19, #84]
   a24f4:   a94153f3    ldp x19, x20, [sp, #16]
   a24f8:   a8c37bfd    ldp x29, x30, [sp], #48
   a24fc:   d65f03c0    ret
   a2500:   7100185f    cmp w2, #0x6
   a2504:   54000a40    b.eq    a264c <CScreenDevice::Write(char)+0x19c>
   a2508:   71001c5f    cmp w2, #0x7
   a250c:   540002e0    b.eq    a2568 <CScreenDevice::Write(char)+0xb8>
   a2510:   7100145f    cmp w2, #0x5
   a2514:   54fffee1    b.ne    a24f0 <CScreenDevice::Write(char)+0x40>
   a2518:   5100c021    sub w1, w1, #0x30
   a251c:   12001c20    and w0, w1, #0xff
   a2520:   7100241f    cmp w0, #0x9
   a2524:   54fffe68    b.hi    a24f0 <CScreenDevice::Write(char)+0x40>
   a2528:   528000c0    mov w0, #0x6
   a252c:   b9007661    str w1, [x19, #116]
   a2530:   b9005660    str w0, [x19, #84]
   a2534:   a94153f3    ldp x19, x20, [sp, #16]
   a2538:   a8c37bfd    ldp x29, x30, [sp], #48
   a253c:   d65f03c0    ret
   a2540:   7100283f    cmp w1, #0xa
   a2544:   54001660    b.eq    a2810 <CScreenDevice::Write(char)+0x360>
   a2548:   54000ead    b.le    a271c <CScreenDevice::Write(char)+0x26c>
   a254c:   7100343f    cmp w1, #0xd
   a2550:   54001b80    b.eq    a28c0 <CScreenDevice::Write(char)+0x410>
   a2554:   71006c3f    cmp w1, #0x1b
   a2558:   54001861    b.ne    a2864 <CScreenDevice::Write(char)+0x3b4>
   a255c:   52800020    mov w0, #0x1
   a2560:   b9005660    str w0, [x19, #84]
   a2564:   17fffff4    b   a2534 <CScreenDevice::Write(char)+0x84>
   a2568:   121d7820    and w0, w1, #0xfffffffb
   a256c:   7101a01f    cmp w0, #0x68
   a2570:   540008e0    b.eq    a268c <CScreenDevice::Write(char)+0x1dc>
   a2574:   5100c021    sub w1, w1, #0x30
   a2578:   12001c20    and w0, w1, #0xff
   a257c:   7100241f    cmp w0, #0x9
   a2580:   54fffb88    b.hi    a24f0 <CScreenDevice::Write(char)+0x40>
   a2584:   b9407260    ldr w0, [x19, #112]
   a2588:   0b000800    add w0, w0, w0, lsl #2
   a258c:   0b000420    add w0, w1, w0, lsl #1
   a2590:   71018c1f    cmp w0, #0x63
   a2594:   b9007260    str w0, [x19, #112]
   a2598:   54fffce9    b.ls    a2534 <CScreenDevice::Write(char)+0x84>
   a259c:   b900567f    str wzr, [x19, #84]
   a25a0:   17ffffd5    b   a24f4 <CScreenDevice::Write(char)+0x44>
   a25a4:   5100c021    sub w1, w1, #0x30
   a25a8:   12001c20    and w0, w1, #0xff
   a25ac:   7100241f    cmp w0, #0x9
   a25b0:   54fffa08    b.hi    a24f0 <CScreenDevice::Write(char)+0x40>
   a25b4:   528000e0    mov w0, #0x7
   a25b8:   b9007261    str w1, [x19, #112]
   a25bc:   b9005660    str w0, [x19, #84]
   a25c0:   17ffffdd    b   a2534 <CScreenDevice::Write(char)+0x84>
   a25c4:   7101403f    cmp w1, #0x50
   a25c8:   54fff940    b.eq    a24f0 <CScreenDevice::Write(char)+0x40>
   a25cc:   54000b6d    b.le    a2738 <CScreenDevice::Write(char)+0x288>
   a25d0:   7101b03f    cmp w1, #0x6c
   a25d4:   540018a0    b.eq    a28e8 <CScreenDevice::Write(char)+0x438>
   a25d8:   5400178c    b.gt    a28c8 <CScreenDevice::Write(char)+0x418>
   a25dc:   7101603f    cmp w1, #0x58
   a25e0:   54001801    b.ne    a28e0 <CScreenDevice::Write(char)+0x430>
   a25e4:   b9407001    ldr w1, [x0, #112]
   a25e8:   34fff841    cbz w1, a24f0 <CScreenDevice::Write(char)+0x40>
   a25ec:   97fffe55    bl  a1f40 <CScreenDevice::EraseChars(unsigned int) [clone .part.0]>
   a25f0:   b900567f    str wzr, [x19, #84]
   a25f4:   17ffffc0    b   a24f4 <CScreenDevice::Write(char)+0x44>
   a25f8:   7101203f    cmp w1, #0x48
   a25fc:   54001980    b.eq    a292c <CScreenDevice::Write(char)+0x47c>
   a2600:   5400056c    b.gt    a26ac <CScreenDevice::Write(char)+0x1fc>
   a2604:   7101083f    cmp w1, #0x42
   a2608:   54000ca0    b.eq    a279c <CScreenDevice::Write(char)+0x2ec>
   a260c:   54000f4c    b.gt    a27f4 <CScreenDevice::Write(char)+0x344>
   a2610:   7100fc3f    cmp w1, #0x3f
   a2614:   54001860    b.eq    a2920 <CScreenDevice::Write(char)+0x470>
   a2618:   7101043f    cmp w1, #0x41
   a261c:   54001961    b.ne    a2948 <CScreenDevice::Write(char)+0x498>
   a2620:   b9405800    ldr w0, [x0, #88]
   a2624:   b9406661    ldr w1, [x19, #100]
   a2628:   6b00003f    cmp w1, w0
   a262c:   54fff629    b.ls    a24f0 <CScreenDevice::Write(char)+0x40>
   a2630:   9100a260    add x0, x19, #0x28
   a2634:   940025ef    bl  abdf0 <CCharGenerator::GetCharHeight() const>
   a2638:   b9406661    ldr w1, [x19, #100]
   a263c:   b900567f    str wzr, [x19, #84]
   a2640:   4b000021    sub w1, w1, w0
   a2644:   b9006661    str w1, [x19, #100]
   a2648:   17ffffab    b   a24f4 <CScreenDevice::Write(char)+0x44>
   a264c:   7101203f    cmp w1, #0x48
   a2650:   54000ca0    b.eq    a27e4 <CScreenDevice::Write(char)+0x334>
   a2654:   7101c83f    cmp w1, #0x72
   a2658:   540009a0    b.eq    a278c <CScreenDevice::Write(char)+0x2dc>
   a265c:   5100c021    sub w1, w1, #0x30
   a2660:   12001c20    and w0, w1, #0xff
   a2664:   7100241f    cmp w0, #0x9
   a2668:   54fff448    b.hi    a24f0 <CScreenDevice::Write(char)+0x40>
   a266c:   b9407660    ldr w0, [x19, #116]
   a2670:   0b000800    add w0, w0, w0, lsl #2
   a2674:   0b000420    add w0, w1, w0, lsl #1
   a2678:   71031c1f    cmp w0, #0xc7
   a267c:   b9007660    str w0, [x19, #116]
   a2680:   54fff5a9    b.ls    a2534 <CScreenDevice::Write(char)+0x84>
   a2684:   b900567f    str wzr, [x19, #84]
   a2688:   17ffff9b    b   a24f4 <CScreenDevice::Write(char)+0x44>
   a268c:   b9407260    ldr w0, [x19, #112]
   a2690:   7100641f    cmp w0, #0x19
   a2694:   54fff2e1    b.ne    a24f0 <CScreenDevice::Write(char)+0x40>
   a2698:   7101a03f    cmp w1, #0x68
   a269c:   1a9f17e0    cset    w0, eq
   a26a0:   b900567f    str wzr, [x19, #84]
   a26a4:   3901a260    strb    w0, [x19, #104]
   a26a8:   17ffff93    b   a24f4 <CScreenDevice::Write(char)+0x44>
   a26ac:   7101343f    cmp w1, #0x4d
   a26b0:   54fff20c    b.gt    a24f0 <CScreenDevice::Write(char)+0x40>
   a26b4:   71012c3f    cmp w1, #0x4b
   a26b8:   54fff1cc    b.gt    a24f0 <CScreenDevice::Write(char)+0x40>
   a26bc:   7101283f    cmp w1, #0x4a
   a26c0:   540012a0    b.eq    a2914 <CScreenDevice::Write(char)+0x464>
   a26c4:   71012c3f    cmp w1, #0x4b
   a26c8:   54fff141    b.ne    a24f0 <CScreenDevice::Write(char)+0x40>
   a26cc:   b9404800    ldr w0, [x0, #72]
   a26d0:   b9406274    ldr w20, [x19, #96]
   a26d4:   6b00029f    cmp w20, w0
   a26d8:   54fff0c2    b.cs    a24f0 <CScreenDevice::Write(char)+0x40>
   a26dc:   f90013f5    str x21, [sp, #32]
   a26e0:   9100a275    add x21, x19, #0x28
   a26e4:   d503201f    nop
   a26e8:   b9406662    ldr w2, [x19, #100]
   a26ec:   2a1403e1    mov w1, w20
   a26f0:   aa1303e0    mov x0, x19
   a26f4:   97fffdc3    bl  a1e00 <CScreenDevice::EraseChar(unsigned int, unsigned int)>
   a26f8:   aa1503e0    mov x0, x21
   a26fc:   940025b9    bl  abde0 <CCharGenerator::GetCharWidth() const>
   a2700:   b9404a61    ldr w1, [x19, #72]
   a2704:   0b000294    add w20, w20, w0
   a2708:   6b01029f    cmp w20, w1
   a270c:   54fffee3    b.cc    a26e8 <CScreenDevice::Write(char)+0x238>
   a2710:   f94013f5    ldr x21, [sp, #32]
   a2714:   b900567f    str wzr, [x19, #84]
   a2718:   17ffff77    b   a24f4 <CScreenDevice::Write(char)+0x44>
   a271c:   7100203f    cmp w1, #0x8
   a2720:   540009c0    b.eq    a2858 <CScreenDevice::Write(char)+0x3a8>
   a2724:   7100243f    cmp w1, #0x9
   a2728:   540009e1    b.ne    a2864 <CScreenDevice::Write(char)+0x3b4>
   a272c:   a94153f3    ldp x19, x20, [sp, #16]
   a2730:   a8c37bfd    ldp x29, x30, [sp], #48
   a2734:   17fffd1b    b   a1ba0 <CScreenDevice::Tabulator()>
   a2738:   7100ec3f    cmp w1, #0x3b
   a273c:   54000e60    b.eq    a2908 <CScreenDevice::Write(char)+0x458>
   a2740:   51013020    sub w0, w1, #0x4c
   a2744:   12001c00    and w0, w0, #0xff
   a2748:   7100041f    cmp w0, #0x1
   a274c:   54ffed29    b.ls    a24f0 <CScreenDevice::Write(char)+0x40>
   a2750:   5100c021    sub w1, w1, #0x30
   a2754:   12001c20    and w0, w1, #0xff
   a2758:   7100241f    cmp w0, #0x9
   a275c:   54ffeca8    b.hi    a24f0 <CScreenDevice::Write(char)+0x40>
   a2760:   b9407260    ldr w0, [x19, #112]
   a2764:   0b000800    add w0, w0, w0, lsl #2
   a2768:   0b000420    add w0, w1, w0, lsl #1
   a276c:   71031c1f    cmp w0, #0xc7
   a2770:   b9007260    str w0, [x19, #112]
   a2774:   54ffee09    b.ls    a2534 <CScreenDevice::Write(char)+0x84>
   a2778:   b900567f    str wzr, [x19, #84]
   a277c:   17ffff5e    b   a24f4 <CScreenDevice::Write(char)+0x44>
   a2780:   52800040    mov w0, #0x2
   a2784:   b9005660    str w0, [x19, #84]
   a2788:   17ffff6b    b   a2534 <CScreenDevice::Write(char)+0x84>
   a278c:   294e0801    ldp w1, w2, [x0, #112]
   a2790:   97fffb94    bl  a15e0 <CScreenDevice::SetScrollRegion(unsigned int, unsigned int)>
   a2794:   b900567f    str wzr, [x19, #84]
   a2798:   17ffff57    b   a24f4 <CScreenDevice::Write(char)+0x44>
   a279c:   9100a014    add x20, x0, #0x28
   a27a0:   aa1403e0    mov x0, x20
   a27a4:   94002593    bl  abdf0 <CCharGenerator::GetCharHeight() const>
   a27a8:   b9406662    ldr w2, [x19, #100]
   a27ac:   b9405e61    ldr w1, [x19, #92]
   a27b0:   0b020000    add w0, w0, w2
   a27b4:   6b01001f    cmp w0, w1
   a27b8:   b9006660    str w0, [x19, #100]
   a27bc:   54ffe9a3    b.cc    a24f0 <CScreenDevice::Write(char)+0x40>
   a27c0:   aa1303e0    mov x0, x19
   a27c4:   97fffc17    bl  a1820 <CScreenDevice::Scroll()>
   a27c8:   aa1403e0    mov x0, x20
   a27cc:   94002589    bl  abdf0 <CCharGenerator::GetCharHeight() const>
   a27d0:   b9406661    ldr w1, [x19, #100]
   a27d4:   b900567f    str wzr, [x19, #84]
   a27d8:   4b000021    sub w1, w1, w0
   a27dc:   b9006661    str w1, [x19, #100]
   a27e0:   17ffff45    b   a24f4 <CScreenDevice::Write(char)+0x44>
   a27e4:   294e0801    ldp w1, w2, [x0, #112]
   a27e8:   97fffb22    bl  a1470 <CScreenDevice::CursorMove(unsigned int, unsigned int)>
   a27ec:   b900567f    str wzr, [x19, #84]
   a27f0:   17ffff51    b   a2534 <CScreenDevice::Write(char)+0x84>
   a27f4:   71010c3f    cmp w1, #0x43
   a27f8:   54000a20    b.eq    a293c <CScreenDevice::Write(char)+0x48c>
   a27fc:   7101103f    cmp w1, #0x44
   a2800:   54ffe781    b.ne    a24f0 <CScreenDevice::Write(char)+0x40>
   a2804:   97fffaf3    bl  a13d0 <CScreenDevice::CursorLeft()>
   a2808:   b900567f    str wzr, [x19, #84]
   a280c:   17ffff4a    b   a2534 <CScreenDevice::Write(char)+0x84>
   a2810:   9100a014    add x20, x0, #0x28
   a2814:   b900627f    str wzr, [x19, #96]
   a2818:   aa1403e0    mov x0, x20
   a281c:   94002575    bl  abdf0 <CCharGenerator::GetCharHeight() const>
   a2820:   b9406662    ldr w2, [x19, #100]
   a2824:   b9405e61    ldr w1, [x19, #92]
   a2828:   0b020000    add w0, w0, w2
   a282c:   6b01001f    cmp w0, w1
   a2830:   b9006660    str w0, [x19, #100]
   a2834:   54ffe803    b.cc    a2534 <CScreenDevice::Write(char)+0x84>
   a2838:   aa1303e0    mov x0, x19
   a283c:   97fffbf9    bl  a1820 <CScreenDevice::Scroll()>
   a2840:   aa1403e0    mov x0, x20
   a2844:   9400256b    bl  abdf0 <CCharGenerator::GetCharHeight() const>
   a2848:   b9406661    ldr w1, [x19, #100]
   a284c:   4b000021    sub w1, w1, w0
   a2850:   b9006661    str w1, [x19, #100]
   a2854:   17ffff38    b   a2534 <CScreenDevice::Write(char)+0x84>
   a2858:   a94153f3    ldp x19, x20, [sp, #16]
   a285c:   a8c37bfd    ldp x29, x30, [sp], #48
   a2860:   17fffadc    b   a13d0 <CScreenDevice::CursorLeft()>
   a2864:   12001c20    and w0, w1, #0xff
   a2868:   71007c1f    cmp w0, #0x1f
   a286c:   54ffe649    b.ls    a2534 <CScreenDevice::Write(char)+0x84>
   a2870:   3941ba64    ldrb    w4, [x19, #110]
   a2874:   aa1303e0    mov x0, x19
   a2878:   9100a274    add x20, x19, #0x28
   a287c:   7940d665    ldrh    w5, [x19, #106]
   a2880:   294c0e62    ldp w2, w3, [x19, #96]
   a2884:   f240009f    tst x4, #0x1
   a2888:   7940da64    ldrh    w4, [x19, #108]
   a288c:   1a8400a4    csel    w4, w5, w4, eq
   a2890:   97fffcec    bl  a1c40 <CScreenDevice::DisplayChar(char, unsigned int, unsigned int, unsigned short)>
   a2894:   aa1403e0    mov x0, x20
   a2898:   94002552    bl  abde0 <CCharGenerator::GetCharWidth() const>
   a289c:   b9406262    ldr w2, [x19, #96]
   a28a0:   b9404a61    ldr w1, [x19, #72]
   a28a4:   0b020000    add w0, w0, w2
   a28a8:   6b01001f    cmp w0, w1
   a28ac:   b9006260    str w0, [x19, #96]
   a28b0:   54ffe423    b.cc    a2534 <CScreenDevice::Write(char)+0x84>
   a28b4:   aa1403e0    mov x0, x20
   a28b8:   b900627f    str wzr, [x19, #96]
   a28bc:   17ffffd8    b   a281c <CScreenDevice::Write(char)+0x36c>
   a28c0:   b900601f    str wzr, [x0, #96]
   a28c4:   17ffff1c    b   a2534 <CScreenDevice::Write(char)+0x84>
   a28c8:   7101b43f    cmp w1, #0x6d
   a28cc:   54ffe121    b.ne    a24f0 <CScreenDevice::Write(char)+0x40>
   a28d0:   b9407001    ldr w1, [x0, #112]
   a28d4:   97fffb63    bl  a1660 <CScreenDevice::SetStandoutMode(unsigned int)>
   a28d8:   b900541f    str wzr, [x0, #84]
   a28dc:   17ffff16    b   a2534 <CScreenDevice::Write(char)+0x84>
   a28e0:   7101a03f    cmp w1, #0x68
   a28e4:   54ffe061    b.ne    a24f0 <CScreenDevice::Write(char)+0x40>
   a28e8:   b9407260    ldr w0, [x19, #112]
   a28ec:   7100101f    cmp w0, #0x4
   a28f0:   54ffe001    b.ne    a24f0 <CScreenDevice::Write(char)+0x40>
   a28f4:   7101a03f    cmp w1, #0x68
   a28f8:   1a9f17e0    cset    w0, eq
   a28fc:   b900567f    str wzr, [x19, #84]
   a2900:   3901be60    strb    w0, [x19, #111]
   a2904:   17fffefc    b   a24f4 <CScreenDevice::Write(char)+0x44>
   a2908:   528000a0    mov w0, #0x5
   a290c:   b9005660    str w0, [x19, #84]
   a2910:   17ffff09    b   a2534 <CScreenDevice::Write(char)+0x84>
   a2914:   97fffdaf    bl  a1fd0 <CScreenDevice::ClearDisplayEnd()>
   a2918:   b900567f    str wzr, [x19, #84]
   a291c:   17ffff06    b   a2534 <CScreenDevice::Write(char)+0x84>
   a2920:   52800080    mov w0, #0x4
   a2924:   b9005660    str w0, [x19, #84]
   a2928:   17ffff03    b   a2534 <CScreenDevice::Write(char)+0x84>
   a292c:   b9405800    ldr w0, [x0, #88]
   a2930:   b900567f    str wzr, [x19, #84]
   a2934:   290c027f    stp wzr, w0, [x19, #96]
   a2938:   17fffeff    b   a2534 <CScreenDevice::Write(char)+0x84>
   a293c:   97fffc75    bl  a1b10 <CScreenDevice::CursorRight()>
   a2940:   b900567f    str wzr, [x19, #84]
   a2944:   17fffefc    b   a2534 <CScreenDevice::Write(char)+0x84>
   a2948:   5100c021    sub w1, w1, #0x30
   a294c:   12001c20    and w0, w1, #0xff
   a2950:   7100241f    cmp w0, #0x9
   a2954:   54ffdce8    b.hi    a24f0 <CScreenDevice::Write(char)+0x40>
   a2958:   52800060    mov w0, #0x3
   a295c:   b9007261    str w1, [x19, #112]
   a2960:   b9005660    str w0, [x19, #84]
   a2964:   17fffef4    b   a2534 <CScreenDevice::Write(char)+0x84>
   a2968:   d503201f    nop
   a296c:   d503201f    nop

00000000000a2970 <CScreenDevice::Write(void const*, unsigned long)>:
   a2970:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   a2974:   910003fd    mov x29, sp
   a2978:   a90153f3    stp x19, x20, [sp, #16]
   a297c:   aa0003f4    mov x20, x0
   a2980:   b940d800    ldr w0, [x0, #216]
   a2984:   a9025bf5    stp x21, x22, [sp, #32]
   a2988:   aa0103f6    mov x22, x1
   a298c:   aa0203f5    mov x21, x2
   a2990:   f9001bf7    str x23, [sp, #48]
   a2994:   35000460    cbnz    w0, a2a20 <CScreenDevice::Write(void const*, unsigned long)+0xb0>
   a2998:   52800021    mov w1, #0x1
   a299c:   3941a280    ldrb    w0, [x20, #104]
   a29a0:   d10006b7    sub x23, x21, #0x1
   a29a4:   3901e281    strb    w1, [x20, #120]
   a29a8:   37000320    tbnz    w0, #0, a2a0c <CScreenDevice::Write(void const*, unsigned long)+0x9c>
   a29ac:   b40004f5    cbz x21, a2a48 <CScreenDevice::Write(void const*, unsigned long)+0xd8>
   a29b0:   aa1603f3    mov x19, x22
   a29b4:   d503201f    nop
   a29b8:   38401661    ldrb    w1, [x19], #1
   a29bc:   aa1403e0    mov x0, x20
   a29c0:   97fffebc    bl  a24b0 <CScreenDevice::Write(char)>
   a29c4:   cb1302a3    sub x3, x21, x19
   a29c8:   ab0302df    cmn x22, x3
   a29cc:   54ffff61    b.ne    a29b8 <CScreenDevice::Write(void const*, unsigned long)+0x48>
   a29d0:   110006f7    add w23, w23, #0x1
   a29d4:   3941a280    ldrb    w0, [x20, #104]
   a29d8:   36000060    tbz w0, #0, a29e4 <CScreenDevice::Write(void const*, unsigned long)+0x74>
   a29dc:   aa1403e0    mov x0, x20
   a29e0:   97fff988    bl  a1000 <CScreenDevice::InvertCursor() [clone .part.0]>
   a29e4:   b940da80    ldr w0, [x20, #216]
   a29e8:   3901e29f    strb    wzr, [x20, #120]
   a29ec:   350001e0    cbnz    w0, a2a28 <CScreenDevice::Write(void const*, unsigned long)+0xb8>
   a29f0:   d5033fbf    dmb sy
   a29f4:   a94153f3    ldp x19, x20, [sp, #16]
   a29f8:   2a1703e0    mov w0, w23
   a29fc:   a9425bf5    ldp x21, x22, [sp, #32]
   a2a00:   f9401bf7    ldr x23, [sp, #48]
   a2a04:   a8c47bfd    ldp x29, x30, [sp], #64
   a2a08:   d65f03c0    ret
   a2a0c:   aa1403e0    mov x0, x20
   a2a10:   97fff97c    bl  a1000 <CScreenDevice::InvertCursor() [clone .part.0]>
   a2a14:   b5fffcf5    cbnz    x21, a29b0 <CScreenDevice::Write(void const*, unsigned long)+0x40>
   a2a18:   52800017    mov w23, #0x0
   a2a1c:   17ffffee    b   a29d4 <CScreenDevice::Write(void const*, unsigned long)+0x64>
   a2a20:   94001714    bl  a8670 <EnterCritical>
   a2a24:   17ffffdd    b   a2998 <CScreenDevice::Write(void const*, unsigned long)+0x28>
   a2a28:   94001742    bl  a8730 <LeaveCritical>
   a2a2c:   d5033fbf    dmb sy
   a2a30:   a94153f3    ldp x19, x20, [sp, #16]
   a2a34:   2a1703e0    mov w0, w23
   a2a38:   a9425bf5    ldp x21, x22, [sp, #32]
   a2a3c:   f9401bf7    ldr x23, [sp, #48]
   a2a40:   a8c47bfd    ldp x29, x30, [sp], #64
   a2a44:   d65f03c0    ret
   a2a48:   52800017    mov w23, #0x0
   a2a4c:   17ffffe6    b   a29e4 <CScreenDevice::Write(void const*, unsigned long)+0x74>

00000000000a2a50 <CScreenDevice::InvertCursor()>:
   a2a50:   3941a001    ldrb    w1, [x0, #104]
   a2a54:   37000041    tbnz    w1, #0, a2a5c <CScreenDevice::InvertCursor()+0xc>
   a2a58:   d65f03c0    ret
   a2a5c:   17fff969    b   a1000 <CScreenDevice::InvertCursor() [clone .part.0]>

00000000000a2a60 <CScreenDevice::SetPixel(unsigned int, unsigned int, unsigned short)>:
   a2a60:   b9404804    ldr w4, [x0, #72]
   a2a64:   12003c63    and w3, w3, #0xffff
   a2a68:   6b01009f    cmp w4, w1
   a2a6c:   54000109    b.ls    a2a8c <CScreenDevice::SetPixel(unsigned int, unsigned int, unsigned short)+0x2c>
   a2a70:   b9404c04    ldr w4, [x0, #76]
   a2a74:   6b02009f    cmp w4, w2
   a2a78:   540000a9    b.ls    a2a8c <CScreenDevice::SetPixel(unsigned int, unsigned int, unsigned short)+0x2c>
   a2a7c:   b9404404    ldr w4, [x0, #68]
   a2a80:   f9401c00    ldr x0, [x0, #56]
   a2a84:   1b040442    madd    w2, w2, w4, w1
   a2a88:   78227803    strh    w3, [x0, x2, lsl #1]
   a2a8c:   d65f03c0    ret

00000000000a2a90 <CScreenDevice::GetPixel(unsigned int, unsigned int)>:
   a2a90:   b9404803    ldr w3, [x0, #72]
   a2a94:   6b01007f    cmp w3, w1
   a2a98:   54000089    b.ls    a2aa8 <CScreenDevice::GetPixel(unsigned int, unsigned int)+0x18>
   a2a9c:   b9404c03    ldr w3, [x0, #76]
   a2aa0:   6b02007f    cmp w3, w2
   a2aa4:   54000068    b.hi    a2ab0 <CScreenDevice::GetPixel(unsigned int, unsigned int)+0x20>
   a2aa8:   7940d800    ldrh    w0, [x0, #108]
   a2aac:   d65f03c0    ret
   a2ab0:   b9404403    ldr w3, [x0, #68]
   a2ab4:   f9401c00    ldr x0, [x0, #56]
   a2ab8:   1b030442    madd    w2, w2, w3, w1
   a2abc:   78627800    ldrh    w0, [x0, x2, lsl #1]
   a2ac0:   d65f03c0    ret
   a2ac4:   d503201f    nop
   a2ac8:   d503201f    nop
   a2acc:   d503201f    nop

00000000000a2ad0 <CScreenDevice::Rotor(unsigned int, unsigned int)>:
   a2ad0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   a2ad4:   910003fd    mov x29, sp
   a2ad8:   a90153f3    stp x19, x20, [sp, #16]
   a2adc:   aa0003f3    mov x19, x0
   a2ae0:   9100a000    add x0, x0, #0x28
   a2ae4:   2a0203f4    mov w20, w2
   a2ae8:   92400694    and x20, x20, #0x3
   a2aec:   a9025bf5    stp x21, x22, [sp, #32]
   a2af0:   12000435    and w21, w1, #0x3
   a2af4:   b9404a76    ldr w22, [x19, #72]
   a2af8:   940024ba    bl  abde0 <CCharGenerator::GetCharWidth() const>
   a2afc:   1b0002a2    madd    w2, w21, w0, w0
   a2b00:   d00000a3    adrp    x3, b8000 <vtable for CGPIOPin+0x288>
   a2b04:   911d6063    add x3, x3, #0x758
   a2b08:   91002063    add x3, x3, #0x8
   a2b0c:   aa1303e0    mov x0, x19
   a2b10:   38636a81    ldrb    w1, [x20, x3]
   a2b14:   1280aea4    mov w4, #0xfffffa8a
   a2b18:   52800003    mov w3, #0x0
   a2b1c:   a94153f3    ldp x19, x20, [sp, #16]
   a2b20:   4b0202c2    sub w2, w22, w2
   a2b24:   a9425bf5    ldp x21, x22, [sp, #32]
   a2b28:   a8c37bfd    ldp x29, x30, [sp], #48
   a2b2c:   17fffc45    b   a1c40 <CScreenDevice::DisplayChar(char, unsigned int, unsigned int, unsigned short)>

00000000000a2b30 <CSerialDevice::Read(void*, unsigned long)>:
   a2b30:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   a2b34:   910003fd    mov x29, sp
   a2b38:   a90153f3    stp x19, x20, [sp, #16]
   a2b3c:   aa0003f3    mov x19, x0
   a2b40:   3940a000    ldrb    w0, [x0, #40]
   a2b44:   f90013f5    str x21, [sp, #32]
   a2b48:   360008a0    tbz w0, #0, a2c5c <CSerialDevice::Read(void*, unsigned long)+0x12c>
   a2b4c:   aa0103f4    mov x20, x1
   a2b50:   b4000901    cbz x1, a2c70 <CSerialDevice::Read(void*, unsigned long)+0x140>
   a2b54:   f9400a60    ldr x0, [x19, #16]
   a2b58:   aa0203f5    mov x21, x2
   a2b5c:   b4000540    cbz x0, a2c04 <CSerialDevice::Read(void*, unsigned long)+0xd4>
   a2b60:   b9518260    ldr w0, [x19, #4480]
   a2b64:   35000740    cbnz    w0, a2c4c <CSerialDevice::Read(void*, unsigned long)+0x11c>
   a2b68:   b9495a60    ldr w0, [x19, #2392]
   a2b6c:   37f803c0    tbnz    w0, #31, a2be4 <CSerialDevice::Read(void*, unsigned long)+0xb4>
   a2b70:   8b150283    add x3, x20, x21
   a2b74:   52800000    mov w0, #0x0
   a2b78:   b50001d5    cbnz    x21, a2bb0 <CSerialDevice::Read(void*, unsigned long)+0x80>
   a2b7c:   1400001c    b   a2bec <CSerialDevice::Read(void*, unsigned long)+0xbc>
   a2b80:   b9495661    ldr w1, [x19, #2388]
   a2b84:   8b214262    add x2, x19, w1, uxtw
   a2b88:   11000400    add w0, w0, #0x1
   a2b8c:   11000421    add w1, w1, #0x1
   a2b90:   b9095661    str w1, [x19, #2388]
   a2b94:   39454041    ldrb    w1, [x2, #336]
   a2b98:   38001681    strb    w1, [x20], #1
   a2b9c:   eb14007f    cmp x3, x20
   a2ba0:   b9495661    ldr w1, [x19, #2388]
   a2ba4:   12002821    and w1, w1, #0x7ff
   a2ba8:   b9095661    str w1, [x19, #2388]
   a2bac:   54000200    b.eq    a2bec <CSerialDevice::Read(void*, unsigned long)+0xbc>
   a2bb0:   b9495262    ldr w2, [x19, #2384]
   a2bb4:   b9495661    ldr w1, [x19, #2388]
   a2bb8:   6b01005f    cmp w2, w1
   a2bbc:   54fffe21    b.ne    a2b80 <CSerialDevice::Read(void*, unsigned long)+0x50>
   a2bc0:   b9518261    ldr w1, [x19, #4480]
   a2bc4:   34000181    cbz w1, a2bf4 <CSerialDevice::Read(void*, unsigned long)+0xc4>
   a2bc8:   b9003fe0    str w0, [sp, #60]
   a2bcc:   940016d9    bl  a8730 <LeaveCritical>
   a2bd0:   a94153f3    ldp x19, x20, [sp, #16]
   a2bd4:   f94013f5    ldr x21, [sp, #32]
   a2bd8:   b9403fe0    ldr w0, [sp, #60]
   a2bdc:   a8c47bfd    ldp x29, x30, [sp], #64
   a2be0:   d65f03c0    ret
   a2be4:   b9495a60    ldr w0, [x19, #2392]
   a2be8:   b9095a7f    str wzr, [x19, #2392]
   a2bec:   b9518261    ldr w1, [x19, #4480]
   a2bf0:   35fffec1    cbnz    w1, a2bc8 <CSerialDevice::Read(void*, unsigned long)+0x98>
   a2bf4:   a94153f3    ldp x19, x20, [sp, #16]
   a2bf8:   f94013f5    ldr x21, [sp, #32]
   a2bfc:   a8c47bfd    ldp x29, x30, [sp], #64
   a2c00:   d65f03c0    ret
   a2c04:   b4ffff82    cbz x2, a2bf4 <CSerialDevice::Read(void*, unsigned long)+0xc4>
   a2c08:   8b020035    add x21, x1, x2
   a2c0c:   52800000    mov w0, #0x0
   a2c10:   14000008    b   a2c30 <CSerialDevice::Read(void*, unsigned long)+0x100>
   a2c14:   37580381    tbnz    w1, #11, a2c84 <CSerialDevice::Read(void*, unsigned long)+0x154>
   a2c18:   374003a1    tbnz    w1, #8, a2c8c <CSerialDevice::Read(void*, unsigned long)+0x15c>
   a2c1c:   374803c1    tbnz    w1, #9, a2c94 <CSerialDevice::Read(void*, unsigned long)+0x164>
   a2c20:   38001681    strb    w1, [x20], #1
   a2c24:   eb1402bf    cmp x21, x20
   a2c28:   11000400    add w0, w0, #0x1
   a2c2c:   54fffe40    b.eq    a2bf4 <CSerialDevice::Read(void*, unsigned long)+0xc4>
   a2c30:   f9401261    ldr x1, [x19, #32]
   a2c34:   b9401822    ldr w2, [x1, #24]
   a2c38:   3727fde2    tbnz    w2, #4, a2bf4 <CSerialDevice::Read(void*, unsigned long)+0xc4>
   a2c3c:   b9400021    ldr w1, [x1]
   a2c40:   3657fea1    tbz w1, #10, a2c14 <CSerialDevice::Read(void*, unsigned long)+0xe4>
   a2c44:   12800000    mov w0, #0xffffffff
   a2c48:   17ffffeb    b   a2bf4 <CSerialDevice::Read(void*, unsigned long)+0xc4>
   a2c4c:   94001689    bl  a8670 <EnterCritical>
   a2c50:   b9495a60    ldr w0, [x19, #2392]
   a2c54:   36fff8e0    tbz w0, #31, a2b70 <CSerialDevice::Read(void*, unsigned long)+0x40>
   a2c58:   17ffffe3    b   a2be4 <CSerialDevice::Read(void*, unsigned long)+0xb4>
   a2c5c:   d00000a1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a2c60:   91204021    add x1, x1, #0x810
   a2c64:   91004020    add x0, x1, #0x10
   a2c68:   52803802    mov w2, #0x1c0
   a2c6c:   97ffe795    bl  9cac0 <assertion_failed>
   a2c70:   d00000a1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a2c74:   91204021    add x1, x1, #0x810
   a2c78:   91008020    add x0, x1, #0x20
   a2c7c:   52803862    mov w2, #0x1c3
   a2c80:   97ffe790    bl  9cac0 <assertion_failed>
   a2c84:   12800020    mov w0, #0xfffffffe
   a2c88:   17ffffdb    b   a2bf4 <CSerialDevice::Read(void*, unsigned long)+0xc4>
   a2c8c:   12800040    mov w0, #0xfffffffd
   a2c90:   17ffffd9    b   a2bf4 <CSerialDevice::Read(void*, unsigned long)+0xc4>
   a2c94:   12800060    mov w0, #0xfffffffc
   a2c98:   17ffffd7    b   a2bf4 <CSerialDevice::Read(void*, unsigned long)+0xc4>
   a2c9c:   d503201f    nop

00000000000a2ca0 <CSerialDevice::CSerialDevice(CInterruptSystem*, bool, unsigned int)>:
   a2ca0:   a9ba7bfd    stp x29, x30, [sp, #-96]!
   a2ca4:   910003fd    mov x29, sp
   a2ca8:   a90153f3    stp x19, x20, [sp, #16]
   a2cac:   aa0003f3    mov x19, x0
   a2cb0:   2a0303f4    mov w20, w3
   a2cb4:   a9025bf5    stp x21, x22, [sp, #32]
   a2cb8:   aa0103f6    mov x22, x1
   a2cbc:   12001c55    and w21, w2, #0xff
   a2cc0:   a90363f7    stp x23, x24, [sp, #48]
   a2cc4:   9100c278    add x24, x19, #0x30
   a2cc8:   91030277    add x23, x19, #0xc0
   a2ccc:   a9046bf9    stp x25, x26, [sp, #64]
   a2cd0:   9101e279    add x25, x19, #0x78
   a2cd4:   5280003a    mov w26, #0x1
   a2cd8:   97ffea02    bl  9d4e0 <CDevice::CDevice()>
   a2cdc:   d00000a2    adrp    x2, b8000 <vtable for CGPIOPin+0x288>
   a2ce0:   911f2042    add x2, x2, #0x7c8
   a2ce4:   f9000a76    str x22, [x19, #16]
   a2ce8:   aa1803e0    mov x0, x24
   a2cec:   39006275    strb    w21, [x19, #24]
   a2cf0:   91042276    add x22, x19, #0x108
   a2cf4:   f9000262    str x2, [x19]
   a2cf8:   110006b5    add w21, w21, #0x1
   a2cfc:   b9001e74    str w20, [x19, #28]
   a2d00:   f900127f    str xzr, [x19, #32]
   a2d04:   3900a27f    strb    wzr, [x19, #40]
   a2d08:   97ffec1a    bl  9dd70 <CGPIOPin::CGPIOPin()>
   a2d0c:   aa1903e0    mov x0, x25
   a2d10:   97ffec18    bl  9dd70 <CGPIOPin::CGPIOPin()>
   a2d14:   aa1703e0    mov x0, x23
   a2d18:   97ffec16    bl  9dd70 <CGPIOPin::CGPIOPin()>
   a2d1c:   aa1603e0    mov x0, x22
   a2d20:   97ffec14    bl  9dd70 <CGPIOPin::CGPIOPin()>
   a2d24:   b9401e60    ldr w0, [x19, #28]
   a2d28:   b909527f    str wzr, [x19, #2384]
   a2d2c:   b909567f    str wzr, [x19, #2388]
   a2d30:   b9095a7f    str wzr, [x19, #2392]
   a2d34:   b9115e7f    str wzr, [x19, #4444]
   a2d38:   7100141f    cmp w0, #0x5
   a2d3c:   b911627f    str wzr, [x19, #4448]
   a2d40:   b911667a    str w26, [x19, #4452]
   a2d44:   f908b67f    str xzr, [x19, #4456]
   a2d48:   b9118275    str w21, [x19, #4480]
   a2d4c:   b911867a    str w26, [x19, #4484]
   a2d50:   540005a8    b.hi    a2e04 <CSerialDevice::CSerialDevice(CInterruptSystem*, bool, unsigned int)+0x164>
   a2d54:   d00000b5    adrp    x21, b8000 <vtable for CGPIOPin+0x288>
   a2d58:   912042b5    add x21, x21, #0x810
   a2d5c:   a90573fb    stp x27, x28, [sp, #80]
   a2d60:   9100c2a2    add x2, x21, #0x30
   a2d64:   d37c7e81    ubfiz   x1, x20, #4, #32
   a2d68:   2a1403fb    mov w27, w20
   a2d6c:   b861685c    ldr w28, [x2, x1]
   a2d70:   7100d79f    cmp w28, #0x35
   a2d74:   54000548    b.hi    a2e1c <CSerialDevice::CSerialDevice(CInterruptSystem*, bool, unsigned int)+0x17c>
   a2d78:   2a0003e0    mov w0, w0
   a2d7c:   900000c1    adrp    x1, ba000 <font_data+0x1080>
   a2d80:   91260021    add x1, x1, #0x980
   a2d84:   f8607822    ldr x2, [x1, x0, lsl #3]
   a2d88:   b5000762    cbnz    x2, a2e74 <CSerialDevice::CSerialDevice(CInterruptSystem*, bool, unsigned int)+0x1d4>
   a2d8c:   9102c2a2    add x2, x21, #0xb0
   a2d90:   f8207833    str x19, [x1, x0, lsl #3]
   a2d94:   f87b7840    ldr x0, [x2, x27, lsl #3]
   a2d98:   f9001260    str x0, [x19, #32]
   a2d9c:   b4000740    cbz x0, a2e84 <CSerialDevice::CSerialDevice(CInterruptSystem*, bool, unsigned int)+0x1e4>
   a2da0:   340004d4    cbz w20, a2e38 <CSerialDevice::CSerialDevice(CInterruptSystem*, bool, unsigned int)+0x198>
   a2da4:   9100c2b5    add x21, x21, #0x30
   a2da8:   2a1c03e1    mov w1, w28
   a2dac:   8b1b12b5    add x21, x21, x27, lsl #4
   a2db0:   aa1703e0    mov x0, x23
   a2db4:   97ffebfb    bl  9dda0 <CGPIOPin::AssignPin(unsigned int)>
   a2db8:   b94006a1    ldr w1, [x21, #4]
   a2dbc:   52800022    mov w2, #0x1
   a2dc0:   aa1703e0    mov x0, x23
   a2dc4:   11001021    add w1, w1, #0x4
   a2dc8:   97ffeea2    bl  9e850 <CGPIOPin::SetMode(TGPIOMode, bool)>
   a2dcc:   b9400aa1    ldr w1, [x21, #8]
   a2dd0:   aa1603e0    mov x0, x22
   a2dd4:   97ffebf3    bl  9dda0 <CGPIOPin::AssignPin(unsigned int)>
   a2dd8:   b9400ea1    ldr w1, [x21, #12]
   a2ddc:   aa1603e0    mov x0, x22
   a2de0:   52800022    mov w2, #0x1
   a2de4:   11001021    add w1, w1, #0x4
   a2de8:   97ffee9a    bl  9e850 <CGPIOPin::SetMode(TGPIOMode, bool)>
   a2dec:   aa1603e0    mov x0, x22
   a2df0:   52800041    mov w1, #0x2
   a2df4:   97ffee27    bl  9e690 <CGPIOPin::SetPullMode(TGPIOPullMode)>
   a2df8:   a94573fb    ldp x27, x28, [sp, #80]
   a2dfc:   52800020    mov w0, #0x1
   a2e00:   3900a260    strb    w0, [x19, #40]
   a2e04:   a94153f3    ldp x19, x20, [sp, #16]
   a2e08:   a9425bf5    ldp x21, x22, [sp, #32]
   a2e0c:   a94363f7    ldp x23, x24, [sp, #48]
   a2e10:   a9446bf9    ldp x25, x26, [sp, #64]
   a2e14:   a8c67bfd    ldp x29, x30, [sp], #96
   a2e18:   d65f03c0    ret
   a2e1c:   a94153f3    ldp x19, x20, [sp, #16]
   a2e20:   a9425bf5    ldp x21, x22, [sp, #32]
   a2e24:   a94363f7    ldp x23, x24, [sp, #48]
   a2e28:   a9446bf9    ldp x25, x26, [sp, #64]
   a2e2c:   a94573fb    ldp x27, x28, [sp, #80]
   a2e30:   a8c67bfd    ldp x29, x30, [sp], #96
   a2e34:   d65f03c0    ret
   a2e38:   aa1803e0    mov x0, x24
   a2e3c:   52800401    mov w1, #0x20
   a2e40:   97ffebd8    bl  9dda0 <CGPIOPin::AssignPin(unsigned int)>
   a2e44:   2a1a03e2    mov w2, w26
   a2e48:   aa1803e0    mov x0, x24
   a2e4c:   52800001    mov w1, #0x0
   a2e50:   97ffee80    bl  9e850 <CGPIOPin::SetMode(TGPIOMode, bool)>
   a2e54:   aa1903e0    mov x0, x25
   a2e58:   52800421    mov w1, #0x21
   a2e5c:   97ffebd1    bl  9dda0 <CGPIOPin::AssignPin(unsigned int)>
   a2e60:   2a1a03e2    mov w2, w26
   a2e64:   aa1903e0    mov x0, x25
   a2e68:   52800001    mov w1, #0x0
   a2e6c:   97ffee79    bl  9e850 <CGPIOPin::SetMode(TGPIOMode, bool)>
   a2e70:   17ffffcd    b   a2da4 <CSerialDevice::CSerialDevice(CInterruptSystem*, bool, unsigned int)+0x104>
   a2e74:   52801602    mov w2, #0xb0
   a2e78:   aa1503e1    mov x1, x21
   a2e7c:   910242a0    add x0, x21, #0x90
   a2e80:   97ffe710    bl  9cac0 <assertion_failed>
   a2e84:   52801682    mov w2, #0xb4
   a2e88:   aa1503e1    mov x1, x21
   a2e8c:   910382a0    add x0, x21, #0xe0
   a2e90:   97ffe70c    bl  9cac0 <assertion_failed>
   a2e94:   d503201f    nop
   a2e98:   d503201f    nop
   a2e9c:   d503201f    nop

00000000000a2ea0 <CSerialDevice::Initialize(unsigned int, unsigned int, unsigned int, CSerialDevice::TParity)>:
   a2ea0:   a9bb7bfd    stp x29, x30, [sp, #-80]!
   a2ea4:   910003fd    mov x29, sp
   a2ea8:   a90363f7    stp x23, x24, [sp, #48]
   a2eac:   3940a018    ldrb    w24, [x0, #40]
   a2eb0:   370000d8    tbnz    w24, #0, a2ec8 <CSerialDevice::Initialize(unsigned int, unsigned int, unsigned int, CSerialDevice::TParity)+0x28>
   a2eb4:   52800018    mov w24, #0x0
   a2eb8:   2a1803e0    mov w0, w24
   a2ebc:   a94363f7    ldp x23, x24, [sp, #48]
   a2ec0:   a8c57bfd    ldp x29, x30, [sp], #80
   a2ec4:   d65f03c0    ret
   a2ec8:   2a0403f7    mov w23, w4
   a2ecc:   a90153f3    stp x19, x20, [sp, #16]
   a2ed0:   2a0103f4    mov w20, w1
   a2ed4:   aa0003f3    mov x19, x0
   a2ed8:   a9025bf5    stp x21, x22, [sp, #32]
   a2edc:   2a0203f5    mov w21, w2
   a2ee0:   2a0303f6    mov w22, w3
   a2ee4:   a9046bf9    stp x25, x26, [sp, #64]
   a2ee8:   97fff6de    bl  a0a60 <CMachineInfo::Get()>
   a2eec:   52800041    mov w1, #0x2
   a2ef0:   97fff540    bl  a03f0 <CMachineInfo::GetClockRate(unsigned int) const>
   a2ef4:   34000fe0    cbz w0, a30f0 <CSerialDevice::Initialize(unsigned int, unsigned int, unsigned int, CSerialDevice::TParity)+0x250>
   a2ef8:   5104b282    sub w2, w20, #0x12c
   a2efc:   5280fa81    mov w1, #0x7d4
   a2f00:   72a007a1    movk    w1, #0x3d, lsl #16
   a2f04:   6b01005f    cmp w2, w1
   a2f08:   54000fe8    b.hi    a3104 <CSerialDevice::Initialize(unsigned int, unsigned int, unsigned int, CSerialDevice::TParity)+0x264>
   a2f0c:   531c6e85    lsl w5, w20, #4
   a2f10:   529fffc1    mov w1, #0xfffe
   a2f14:   1ac5081a    udiv    w26, w0, w5
   a2f18:   51000742    sub w2, w26, #0x1
   a2f1c:   6b01005f    cmp w2, w1
   a2f20:   54000fc8    b.hi    a3118 <CSerialDevice::Initialize(unsigned int, unsigned int, unsigned int, CSerialDevice::TParity)+0x278>
   a2f24:   1b058345    msub    w5, w26, w5, w0
   a2f28:   531d70a5    lsl w5, w5, #3
   a2f2c:   1ad408a1    udiv    w1, w5, w20
   a2f30:   12000020    and w0, w1, #0x1
   a2f34:   0b410414    add w20, w0, w1, lsr #1
   a2f38:   7100fe9f    cmp w20, #0x3f
   a2f3c:   54000f88    b.hi    a312c <CSerialDevice::Initialize(unsigned int, unsigned int, unsigned int, CSerialDevice::TParity)+0x28c>
   a2f40:   f9400a60    ldr x0, [x19, #16]
   a2f44:   b4000260    cbz x0, a2f90 <CSerialDevice::Initialize(unsigned int, unsigned int, unsigned int, CSerialDevice::TParity)+0xf0>
   a2f48:   900000d9    adrp    x25, ba000 <font_data+0x1080>
   a2f4c:   91260339    add x25, x25, #0x980
   a2f50:   b9403321    ldr w1, [x25, #48]
   a2f54:   35000921    cbnz    w1, a3078 <CSerialDevice::Initialize(unsigned int, unsigned int, unsigned int, CSerialDevice::TParity)+0x1d8>
   a2f58:   39406261    ldrb    w1, [x19, #24]
   a2f5c:   b0000002    adrp    x2, a3000 <CSerialDevice::Initialize(unsigned int, unsigned int, unsigned int, CSerialDevice::TParity)+0x160>
   a2f60:   91274042    add x2, x2, #0x9d0
   a2f64:   f9001f20    str x0, [x25, #56]
   a2f68:   d2800003    mov x3, #0x0
   a2f6c:   39010321    strb    w1, [x25, #64]
   a2f70:   37000a41    tbnz    w1, #0, a30b8 <CSerialDevice::Initialize(unsigned int, unsigned int, unsigned int, CSerialDevice::TParity)+0x218>
   a2f74:   52801321    mov w1, #0x99
   a2f78:   94001cba    bl  aa260 <CInterruptSystem::ConnectIRQ(unsigned int, void (*)(void*), void*)>
   a2f7c:   b9403321    ldr w1, [x25, #48]
   a2f80:   7100143f    cmp w1, #0x5
   a2f84:   54000de8    b.hi    a3140 <CSerialDevice::Initialize(unsigned int, unsigned int, unsigned int, CSerialDevice::TParity)+0x2a0>
   a2f88:   11000421    add w1, w1, #0x1
   a2f8c:   b9003321    str w1, [x25, #48]
   a2f90:   f9401260    ldr x0, [x19, #32]
   a2f94:   5280ffe1    mov w1, #0x7ff
   a2f98:   510016a2    sub w2, w21, #0x5
   a2f9c:   71000c5f    cmp w2, #0x3
   a2fa0:   b900381f    str wzr, [x0, #56]
   a2fa4:   9100e004    add x4, x0, #0x38
   a2fa8:   b9004401    str w1, [x0, #68]
   a2fac:   b900241a    str w26, [x0, #36]
   a2fb0:   b9002814    str w20, [x0, #40]
   a2fb4:   54000da8    b.hi    a3168 <CSerialDevice::Initialize(unsigned int, unsigned int, unsigned int, CSerialDevice::TParity)+0x2c8>
   a2fb8:   510006c1    sub w1, w22, #0x1
   a2fbc:   531b6aa2    lsl w2, w21, #5
   a2fc0:   7100043f    cmp w1, #0x1
   a2fc4:   51024042    sub w2, w2, #0x90
   a2fc8:   540008a8    b.hi    a30dc <CSerialDevice::Initialize(unsigned int, unsigned int, unsigned int, CSerialDevice::TParity)+0x23c>
   a2fcc:   71000adf    cmp w22, #0x2
   a2fd0:   321d0041    orr w1, w2, #0x8
   a2fd4:   1a820022    csel    w2, w1, w2, eq
   a2fd8:   710006ff    cmp w23, #0x1
   a2fdc:   54000660    b.eq    a30a8 <CSerialDevice::Initialize(unsigned int, unsigned int, unsigned int, CSerialDevice::TParity)+0x208>
   a2fe0:   71000aff    cmp w23, #0x2
   a2fe4:   540005e0    b.eq    a30a0 <CSerialDevice::Initialize(unsigned int, unsigned int, unsigned int, CSerialDevice::TParity)+0x200>
   a2fe8:   35000b77    cbnz    w23, a3154 <CSerialDevice::Initialize(unsigned int, unsigned int, unsigned int, CSerialDevice::TParity)+0x2b4>
   a2fec:   f9400a61    ldr x1, [x19, #16]
   a2ff0:   b4000601    cbz x1, a30b0 <CSerialDevice::Initialize(unsigned int, unsigned int, unsigned int, CSerialDevice::TParity)+0x210>
   a2ff4:   52800121    mov w1, #0x9
   a2ff8:   52808a05    mov w5, #0x450
   a2ffc:   900000c3    adrp    x3, ba000 <font_data+0x1080>
   a3000:   91260063    add x3, x3, #0x980
   a3004:   b9003401    str w1, [x0, #52]
   a3008:   52800021    mov w1, #0x1
   a300c:   b9002c02    str w2, [x0, #44]
   a3010:   b9000085    str w5, [x4]
   a3014:   b9401e60    ldr w0, [x19, #28]
   a3018:   b9404462    ldr w2, [x3, #68]
   a301c:   1ac02020    lsl w0, w1, w0
   a3020:   2a020000    orr w0, w0, w2
   a3024:   b9004460    str w0, [x3, #68]
   a3028:   d5033f9f    dsb sy
   a302c:   f9401260    ldr x0, [x19, #32]
   a3030:   52806021    mov w1, #0x301
   a3034:   b9003001    str w1, [x0, #48]
   a3038:   97ffea8a    bl  9da60 <CDeviceNameService::Get()>
   a303c:   b9401e62    ldr w2, [x19, #28]
   a3040:   b00000a1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a3044:   91204021    add x1, x1, #0x810
   a3048:   aa1303e3    mov x3, x19
   a304c:   91074021    add x1, x1, #0x1d0
   a3050:   52800004    mov w4, #0x0
   a3054:   11000442    add w2, w2, #0x1
   a3058:   97ffea8e    bl  9da90 <CDeviceNameService::AddDevice(char const*, unsigned int, CDevice*, bool)>
   a305c:   a94153f3    ldp x19, x20, [sp, #16]
   a3060:   2a1803e0    mov w0, w24
   a3064:   a9425bf5    ldp x21, x22, [sp, #32]
   a3068:   a94363f7    ldp x23, x24, [sp, #48]
   a306c:   a9446bf9    ldp x25, x26, [sp, #64]
   a3070:   a8c57bfd    ldp x29, x30, [sp], #80
   a3074:   d65f03c0    ret
   a3078:   f9401f22    ldr x2, [x25, #56]
   a307c:   eb02001f    cmp x0, x2
   a3080:   54000240    b.eq    a30c8 <CSerialDevice::Initialize(unsigned int, unsigned int, unsigned int, CSerialDevice::TParity)+0x228>
   a3084:   b9401e60    ldr w0, [x19, #28]
   a3088:   a9425bf5    ldp x21, x22, [sp, #32]
   a308c:   f8207b3f    str xzr, [x25, x0, lsl #3]
   a3090:   a9446bf9    ldp x25, x26, [sp, #64]
   a3094:   3900a27f    strb    wzr, [x19, #40]
   a3098:   a94153f3    ldp x19, x20, [sp, #16]
   a309c:   17ffff86    b   a2eb4 <CSerialDevice::Initialize(unsigned int, unsigned int, unsigned int, CSerialDevice::TParity)+0x14>
   a30a0:   321f0442    orr w2, w2, #0x6
   a30a4:   17ffffd2    b   a2fec <CSerialDevice::Initialize(unsigned int, unsigned int, unsigned int, CSerialDevice::TParity)+0x14c>
   a30a8:   321f0042    orr w2, w2, #0x2
   a30ac:   17ffffd0    b   a2fec <CSerialDevice::Initialize(unsigned int, unsigned int, unsigned int, CSerialDevice::TParity)+0x14c>
   a30b0:   b9002c02    str w2, [x0, #44]
   a30b4:   17ffffdf    b   a3030 <CSerialDevice::Initialize(unsigned int, unsigned int, unsigned int, CSerialDevice::TParity)+0x190>
   a30b8:   52801321    mov w1, #0x99
   a30bc:   94001d49    bl  aa5e0 <CInterruptSystem::ConnectFIQ(unsigned int, void (*)(void*), void*)>
   a30c0:   b9403321    ldr w1, [x25, #48]
   a30c4:   17ffffaf    b   a2f80 <CSerialDevice::Initialize(unsigned int, unsigned int, unsigned int, CSerialDevice::TParity)+0xe0>
   a30c8:   39406262    ldrb    w2, [x19, #24]
   a30cc:   39410320    ldrb    w0, [x25, #64]
   a30d0:   6b00005f    cmp w2, w0
   a30d4:   54fff560    b.eq    a2f80 <CSerialDevice::Initialize(unsigned int, unsigned int, unsigned int, CSerialDevice::TParity)+0xe0>
   a30d8:   17ffffeb    b   a3084 <CSerialDevice::Initialize(unsigned int, unsigned int, unsigned int, CSerialDevice::TParity)+0x1e4>
   a30dc:   b00000a1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a30e0:   91204021    add x1, x1, #0x810
   a30e4:   9106a020    add x0, x1, #0x1a8
   a30e8:   52802862    mov w2, #0x143
   a30ec:   97ffe675    bl  9cac0 <assertion_failed>
   a30f0:   b00000a1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a30f4:   91204021    add x1, x1, #0x810
   a30f8:   9103e020    add x0, x1, #0xf8
   a30fc:   52802002    mov w2, #0x100
   a3100:   97ffe670    bl  9cac0 <assertion_failed>
   a3104:   b00000a1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a3108:   91204021    add x1, x1, #0x810
   a310c:   91042020    add x0, x1, #0x108
   a3110:   52802042    mov w2, #0x102
   a3114:   97ffe66b    bl  9cac0 <assertion_failed>
   a3118:   b00000a1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a311c:   91204021    add x1, x1, #0x810
   a3120:   9104e020    add x0, x1, #0x138
   a3124:   528020a2    mov w2, #0x105
   a3128:   97ffe666    bl  9cac0 <assertion_failed>
   a312c:   b00000a1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a3130:   91204021    add x1, x1, #0x810
   a3134:   91058020    add x0, x1, #0x160
   a3138:   52802102    mov w2, #0x108
   a313c:   97ffe661    bl  9cac0 <assertion_failed>
   a3140:   b00000a1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a3144:   91204021    add x1, x1, #0x810
   a3148:   9105e020    add x0, x1, #0x178
   a314c:   52802542    mov w2, #0x12a
   a3150:   97ffe65c    bl  9cac0 <assertion_failed>
   a3154:   b00000a1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a3158:   91204021    add x1, x1, #0x810
   a315c:   91068020    add x0, x1, #0x1a0
   a3160:   52802ae2    mov w2, #0x157
   a3164:   97ffe657    bl  9cac0 <assertion_failed>
   a3168:   b00000a1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a316c:   91204021    add x1, x1, #0x810
   a3170:   91068020    add x0, x1, #0x1a0
   a3174:   528027e2    mov w2, #0x13f
   a3178:   97ffe652    bl  9cac0 <assertion_failed>
   a317c:   d503201f    nop

00000000000a3180 <CSerialDevice::GetOptions() const>:
   a3180:   b9516400    ldr w0, [x0, #4452]
   a3184:   d65f03c0    ret
   a3188:   d503201f    nop
   a318c:   d503201f    nop

00000000000a3190 <CSerialDevice::SetOptions(unsigned int)>:
   a3190:   b9116401    str w1, [x0, #4452]
   a3194:   d65f03c0    ret
   a3198:   d503201f    nop
   a319c:   d503201f    nop

00000000000a31a0 <CSerialDevice::RegisterMagicReceivedHandler(char const*, void (*)())>:
   a31a0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a31a4:   910003fd    mov x29, sp
   a31a8:   f9400803    ldr x3, [x0, #16]
   a31ac:   b4000183    cbz x3, a31dc <CSerialDevice::RegisterMagicReceivedHandler(char const*, void (*)())+0x3c>
   a31b0:   f948b403    ldr x3, [x0, #4456]
   a31b4:   b50001e3    cbnz    x3, a31f0 <CSerialDevice::RegisterMagicReceivedHandler(char const*, void (*)())+0x50>
   a31b8:   b4000261    cbz x1, a3204 <CSerialDevice::RegisterMagicReceivedHandler(char const*, void (*)())+0x64>
   a31bc:   39c00023    ldrsb   w3, [x1]
   a31c0:   340002c3    cbz w3, a3218 <CSerialDevice::RegisterMagicReceivedHandler(char const*, void (*)())+0x78>
   a31c4:   b4000342    cbz x2, a322c <CSerialDevice::RegisterMagicReceivedHandler(char const*, void (*)())+0x8c>
   a31c8:   f908b401    str x1, [x0, #4456]
   a31cc:   f908b801    str x1, [x0, #4464]
   a31d0:   f908bc02    str x2, [x0, #4472]
   a31d4:   a8c17bfd    ldp x29, x30, [sp], #16
   a31d8:   d65f03c0    ret
   a31dc:   b00000a1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a31e0:   91204021    add x1, x1, #0x810
   a31e4:   91076020    add x0, x1, #0x1d8
   a31e8:   52804402    mov w2, #0x220
   a31ec:   97ffe635    bl  9cac0 <assertion_failed>
   a31f0:   b00000a1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a31f4:   91204021    add x1, x1, #0x810
   a31f8:   9107c020    add x0, x1, #0x1f0
   a31fc:   52804422    mov w2, #0x221
   a3200:   97ffe630    bl  9cac0 <assertion_failed>
   a3204:   b00000a1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a3208:   91204021    add x1, x1, #0x810
   a320c:   91080020    add x0, x1, #0x200
   a3210:   52804462    mov w2, #0x223
   a3214:   97ffe62b    bl  9cac0 <assertion_failed>
   a3218:   b00000a1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a321c:   91204021    add x1, x1, #0x810
   a3220:   91084020    add x0, x1, #0x210
   a3224:   52804482    mov w2, #0x224
   a3228:   97ffe626    bl  9cac0 <assertion_failed>
   a322c:   b00000a1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a3230:   91204021    add x1, x1, #0x810
   a3234:   91088020    add x0, x1, #0x220
   a3238:   528044a2    mov w2, #0x225
   a323c:   97ffe621    bl  9cac0 <assertion_failed>

00000000000a3240 <CSerialDevice::AvailableForWrite()>:
   a3240:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a3244:   910003fd    mov x29, sp
   a3248:   f9000bf3    str x19, [sp, #16]
   a324c:   aa0003f3    mov x19, x0
   a3250:   3940a000    ldrb    w0, [x0, #40]
   a3254:   360003a0    tbz w0, #0, a32c8 <CSerialDevice::AvailableForWrite()+0x88>
   a3258:   f9400a60    ldr x0, [x19, #16]
   a325c:   b4000400    cbz x0, a32dc <CSerialDevice::AvailableForWrite()+0x9c>
   a3260:   b9518260    ldr w0, [x19, #4480]
   a3264:   350002c0    cbnz    w0, a32bc <CSerialDevice::AvailableForWrite()+0x7c>
   a3268:   b9516262    ldr w2, [x19, #4448]
   a326c:   b9515e61    ldr w1, [x19, #4444]
   a3270:   6b01005f    cmp w2, w1
   a3274:   b9516261    ldr w1, [x19, #4448]
   a3278:   b9515e62    ldr w2, [x19, #4444]
   a327c:   54000108    b.hi    a329c <CSerialDevice::AvailableForWrite()+0x5c>
   a3280:   111ffc33    add w19, w1, #0x7ff
   a3284:   4b020273    sub w19, w19, w2
   a3288:   35000100    cbnz    w0, a32a8 <CSerialDevice::AvailableForWrite()+0x68>
   a328c:   2a1303e0    mov w0, w19
   a3290:   f9400bf3    ldr x19, [sp, #16]
   a3294:   a8c27bfd    ldp x29, x30, [sp], #32
   a3298:   d65f03c0    ret
   a329c:   51000433    sub w19, w1, #0x1
   a32a0:   4b020273    sub w19, w19, w2
   a32a4:   34ffff40    cbz w0, a328c <CSerialDevice::AvailableForWrite()+0x4c>
   a32a8:   94001522    bl  a8730 <LeaveCritical>
   a32ac:   2a1303e0    mov w0, w19
   a32b0:   f9400bf3    ldr x19, [sp, #16]
   a32b4:   a8c27bfd    ldp x29, x30, [sp], #32
   a32b8:   d65f03c0    ret
   a32bc:   940014ed    bl  a8670 <EnterCritical>
   a32c0:   b9518260    ldr w0, [x19, #4480]
   a32c4:   17ffffe9    b   a3268 <CSerialDevice::AvailableForWrite()+0x28>
   a32c8:   b00000a1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a32cc:   91204021    add x1, x1, #0x810
   a32d0:   91004020    add x0, x1, #0x10
   a32d4:   528045e2    mov w2, #0x22f
   a32d8:   97ffe5fa    bl  9cac0 <assertion_failed>
   a32dc:   b00000a1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a32e0:   91204021    add x1, x1, #0x810
   a32e4:   91076020    add x0, x1, #0x1d8
   a32e8:   52804602    mov w2, #0x230
   a32ec:   97ffe5f5    bl  9cac0 <assertion_failed>

00000000000a32f0 <CSerialDevice::AvailableForRead()>:
   a32f0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a32f4:   910003fd    mov x29, sp
   a32f8:   f9000bf3    str x19, [sp, #16]
   a32fc:   aa0003f3    mov x19, x0
   a3300:   3940a000    ldrb    w0, [x0, #40]
   a3304:   36000380    tbz w0, #0, a3374 <CSerialDevice::AvailableForRead()+0x84>
   a3308:   f9400a60    ldr x0, [x19, #16]
   a330c:   b40003e0    cbz x0, a3388 <CSerialDevice::AvailableForRead()+0x98>
   a3310:   b9518260    ldr w0, [x19, #4480]
   a3314:   350002a0    cbnz    w0, a3368 <CSerialDevice::AvailableForRead()+0x78>
   a3318:   b9495262    ldr w2, [x19, #2384]
   a331c:   b9495661    ldr w1, [x19, #2388]
   a3320:   6b01005f    cmp w2, w1
   a3324:   b9495261    ldr w1, [x19, #2384]
   a3328:   b9495662    ldr w2, [x19, #2388]
   a332c:   4b020033    sub w19, w1, w2
   a3330:   540000c3    b.cc    a3348 <CSerialDevice::AvailableForRead()+0x58>
   a3334:   35000100    cbnz    w0, a3354 <CSerialDevice::AvailableForRead()+0x64>
   a3338:   2a1303e0    mov w0, w19
   a333c:   f9400bf3    ldr x19, [sp, #16]
   a3340:   a8c27bfd    ldp x29, x30, [sp], #32
   a3344:   d65f03c0    ret
   a3348:   11200033    add w19, w1, #0x800
   a334c:   4b020273    sub w19, w19, w2
   a3350:   34ffff40    cbz w0, a3338 <CSerialDevice::AvailableForRead()+0x48>
   a3354:   940014f7    bl  a8730 <LeaveCritical>
   a3358:   2a1303e0    mov w0, w19
   a335c:   f9400bf3    ldr x19, [sp, #16]
   a3360:   a8c27bfd    ldp x29, x30, [sp], #32
   a3364:   d65f03c0    ret
   a3368:   940014c2    bl  a8670 <EnterCritical>
   a336c:   b9518260    ldr w0, [x19, #4480]
   a3370:   17ffffea    b   a3318 <CSerialDevice::AvailableForRead()+0x28>
   a3374:   b00000a1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a3378:   91204021    add x1, x1, #0x810
   a337c:   91004020    add x0, x1, #0x10
   a3380:   528048a2    mov w2, #0x245
   a3384:   97ffe5cf    bl  9cac0 <assertion_failed>
   a3388:   b00000a1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a338c:   91204021    add x1, x1, #0x810
   a3390:   91076020    add x0, x1, #0x1d8
   a3394:   528048c2    mov w2, #0x246
   a3398:   97ffe5ca    bl  9cac0 <assertion_failed>
   a339c:   d503201f    nop

00000000000a33a0 <CSerialDevice::Peek()>:
   a33a0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a33a4:   910003fd    mov x29, sp
   a33a8:   f9000bf3    str x19, [sp, #16]
   a33ac:   aa0003f3    mov x19, x0
   a33b0:   3940a000    ldrb    w0, [x0, #40]
   a33b4:   360003e0    tbz w0, #0, a3430 <CSerialDevice::Peek()+0x90>
   a33b8:   f9400a60    ldr x0, [x19, #16]
   a33bc:   b4000440    cbz x0, a3444 <CSerialDevice::Peek()+0xa4>
   a33c0:   b9518260    ldr w0, [x19, #4480]
   a33c4:   35000180    cbnz    w0, a33f4 <CSerialDevice::Peek()+0x54>
   a33c8:   b9495261    ldr w1, [x19, #2384]
   a33cc:   b9495660    ldr w0, [x19, #2388]
   a33d0:   6b00003f    cmp w1, w0
   a33d4:   54000420    b.eq    a3458 <CSerialDevice::Peek()+0xb8>
   a33d8:   b9495660    ldr w0, [x19, #2388]
   a33dc:   8b204260    add x0, x19, w0, uxtw
   a33e0:   39454013    ldrb    w19, [x0, #336]
   a33e4:   2a1303e0    mov w0, w19
   a33e8:   f9400bf3    ldr x19, [sp, #16]
   a33ec:   a8c27bfd    ldp x29, x30, [sp], #32
   a33f0:   d65f03c0    ret
   a33f4:   9400149f    bl  a8670 <EnterCritical>
   a33f8:   b9495261    ldr w1, [x19, #2384]
   a33fc:   b9495660    ldr w0, [x19, #2388]
   a3400:   6b00003f    cmp w1, w0
   a3404:   540002e0    b.eq    a3460 <CSerialDevice::Peek()+0xc0>
   a3408:   b9495660    ldr w0, [x19, #2388]
   a340c:   8b204260    add x0, x19, w0, uxtw
   a3410:   b9518261    ldr w1, [x19, #4480]
   a3414:   39454013    ldrb    w19, [x0, #336]
   a3418:   34fffe61    cbz w1, a33e4 <CSerialDevice::Peek()+0x44>
   a341c:   940014c5    bl  a8730 <LeaveCritical>
   a3420:   2a1303e0    mov w0, w19
   a3424:   f9400bf3    ldr x19, [sp, #16]
   a3428:   a8c27bfd    ldp x29, x30, [sp], #32
   a342c:   d65f03c0    ret
   a3430:   b00000a1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a3434:   91204021    add x1, x1, #0x810
   a3438:   91004020    add x0, x1, #0x10
   a343c:   52804b62    mov w2, #0x25b
   a3440:   97ffe5a0    bl  9cac0 <assertion_failed>
   a3444:   b00000a1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a3448:   91204021    add x1, x1, #0x810
   a344c:   91076020    add x0, x1, #0x1d8
   a3450:   52804b82    mov w2, #0x25c
   a3454:   97ffe59b    bl  9cac0 <assertion_failed>
   a3458:   12800013    mov w19, #0xffffffff
   a345c:   17ffffe2    b   a33e4 <CSerialDevice::Peek()+0x44>
   a3460:   b9518261    ldr w1, [x19, #4480]
   a3464:   12800013    mov w19, #0xffffffff
   a3468:   35fffda1    cbnz    w1, a341c <CSerialDevice::Peek()+0x7c>
   a346c:   17ffffde    b   a33e4 <CSerialDevice::Peek()+0x44>

00000000000a3470 <CSerialDevice::Flush()>:
   a3470:   f9401001    ldr x1, [x0, #32]
   a3474:   91006021    add x1, x1, #0x18
   a3478:   b9400020    ldr w0, [x1]
   a347c:   371fffe0    tbnz    w0, #3, a3478 <CSerialDevice::Flush()+0x8>
   a3480:   d65f03c0    ret
   a3484:   d503201f    nop
   a3488:   d503201f    nop
   a348c:   d503201f    nop

00000000000a3490 <CSerialDevice::Write(unsigned char)>:
   a3490:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   a3494:   910003fd    mov x29, sp
   a3498:   a90153f3    stp x19, x20, [sp, #16]
   a349c:   aa0003f3    mov x19, x0
   a34a0:   f9400800    ldr x0, [x0, #16]
   a34a4:   f90013f5    str x21, [sp, #32]
   a34a8:   12001c35    and w21, w1, #0xff
   a34ac:   b4000480    cbz x0, a353c <CSerialDevice::Write(unsigned char)+0xac>
   a34b0:   b9518263    ldr w3, [x19, #4480]
   a34b4:   350002e3    cbnz    w3, a3510 <CSerialDevice::Write(unsigned char)+0x80>
   a34b8:   b9515e62    ldr w2, [x19, #4444]
   a34bc:   b9516260    ldr w0, [x19, #4448]
   a34c0:   11000442    add w2, w2, #0x1
   a34c4:   12002842    and w2, w2, #0x7ff
   a34c8:   6b00005f    cmp w2, w0
   a34cc:   54000500    b.eq    a356c <CSerialDevice::Write(unsigned char)+0xdc>
   a34d0:   b9515e62    ldr w2, [x19, #4444]
   a34d4:   52800034    mov w20, #0x1
   a34d8:   8b224260    add x0, x19, w2, uxtw
   a34dc:   0b140042    add w2, w2, w20
   a34e0:   b9115e62    str w2, [x19, #4444]
   a34e4:   39257015    strb    w21, [x0, #2396]
   a34e8:   b9515e60    ldr w0, [x19, #4444]
   a34ec:   12002800    and w0, w0, #0x7ff
   a34f0:   b9115e60    str w0, [x19, #4444]
   a34f4:   34000043    cbz w3, a34fc <CSerialDevice::Write(unsigned char)+0x6c>
   a34f8:   9400148e    bl  a8730 <LeaveCritical>
   a34fc:   f94013f5    ldr x21, [sp, #32]
   a3500:   2a1403e0    mov w0, w20
   a3504:   a94153f3    ldp x19, x20, [sp, #16]
   a3508:   a8c37bfd    ldp x29, x30, [sp], #48
   a350c:   d65f03c0    ret
   a3510:   2a0303e0    mov w0, w3
   a3514:   52800014    mov w20, #0x0
   a3518:   94001456    bl  a8670 <EnterCritical>
   a351c:   b9515e60    ldr w0, [x19, #4444]
   a3520:   b9516261    ldr w1, [x19, #4448]
   a3524:   b9518263    ldr w3, [x19, #4480]
   a3528:   11000400    add w0, w0, #0x1
   a352c:   12002800    and w0, w0, #0x7ff
   a3530:   6b01001f    cmp w0, w1
   a3534:   54fffce1    b.ne    a34d0 <CSerialDevice::Write(unsigned char)+0x40>
   a3538:   17ffffef    b   a34f4 <CSerialDevice::Write(unsigned char)+0x64>
   a353c:   f9401261    ldr x1, [x19, #32]
   a3540:   91006022    add x2, x1, #0x18
   a3544:   d503201f    nop
   a3548:   b9400040    ldr w0, [x2]
   a354c:   372fffe0    tbnz    w0, #5, a3548 <CSerialDevice::Write(unsigned char)+0xb8>
   a3550:   52800034    mov w20, #0x1
   a3554:   b9000035    str w21, [x1]
   a3558:   f94013f5    ldr x21, [sp, #32]
   a355c:   2a1403e0    mov w0, w20
   a3560:   a94153f3    ldp x19, x20, [sp, #16]
   a3564:   a8c37bfd    ldp x29, x30, [sp], #48
   a3568:   d65f03c0    ret
   a356c:   52800014    mov w20, #0x0
   a3570:   f94013f5    ldr x21, [sp, #32]
   a3574:   2a1403e0    mov w0, w20
   a3578:   a94153f3    ldp x19, x20, [sp, #16]
   a357c:   a8c37bfd    ldp x29, x30, [sp], #48
   a3580:   d65f03c0    ret
   a3584:   d503201f    nop
   a3588:   d503201f    nop
   a358c:   d503201f    nop

00000000000a3590 <CSerialDevice::Write(void const*, unsigned long)>:
   a3590:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   a3594:   910003fd    mov x29, sp
   a3598:   a90153f3    stp x19, x20, [sp, #16]
   a359c:   aa0003f3    mov x19, x0
   a35a0:   3940a000    ldrb    w0, [x0, #40]
   a35a4:   a9025bf5    stp x21, x22, [sp, #32]
   a35a8:   f9001bf7    str x23, [sp, #48]
   a35ac:   36001060    tbz w0, #0, a37b8 <CSerialDevice::Write(void const*, unsigned long)+0x228>
   a35b0:   b9518660    ldr w0, [x19, #4484]
   a35b4:   aa0103f4    mov x20, x1
   a35b8:   aa0203f6    mov x22, x2
   a35bc:   35000e00    cbnz    w0, a377c <CSerialDevice::Write(void const*, unsigned long)+0x1ec>
   a35c0:   b4001074    cbz x20, a37cc <CSerialDevice::Write(void const*, unsigned long)+0x23c>
   a35c4:   8b160297    add x23, x20, x22
   a35c8:   52800015    mov w21, #0x0
   a35cc:   b50000b6    cbnz    x22, a35e0 <CSerialDevice::Write(void const*, unsigned long)+0x50>
   a35d0:   14000020    b   a3650 <CSerialDevice::Write(void const*, unsigned long)+0xc0>
   a35d4:   eb17029f    cmp x20, x23
   a35d8:   110006b5    add w21, w21, #0x1
   a35dc:   540003a0    b.eq    a3650 <CSerialDevice::Write(void const*, unsigned long)+0xc0>
   a35e0:   f9400a60    ldr x0, [x19, #16]
   a35e4:   39400296    ldrb    w22, [x20]
   a35e8:   b40008a0    cbz x0, a36fc <CSerialDevice::Write(void const*, unsigned long)+0x16c>
   a35ec:   b9518260    ldr w0, [x19, #4480]
   a35f0:   35000940    cbnz    w0, a3718 <CSerialDevice::Write(void const*, unsigned long)+0x188>
   a35f4:   b9515e60    ldr w0, [x19, #4444]
   a35f8:   b9516261    ldr w1, [x19, #4448]
   a35fc:   11000400    add w0, w0, #0x1
   a3600:   12002800    and w0, w0, #0x7ff
   a3604:   6b00003f    cmp w1, w0
   a3608:   54000240    b.eq    a3650 <CSerialDevice::Write(void const*, unsigned long)+0xc0>
   a360c:   b9515e60    ldr w0, [x19, #4444]
   a3610:   8b204261    add x1, x19, w0, uxtw
   a3614:   11000400    add w0, w0, #0x1
   a3618:   b9115e60    str w0, [x19, #4444]
   a361c:   39257036    strb    w22, [x1, #2396]
   a3620:   b9515e60    ldr w0, [x19, #4444]
   a3624:   12002800    and w0, w0, #0x7ff
   a3628:   b9115e60    str w0, [x19, #4444]
   a362c:   38401680    ldrb    w0, [x20], #1
   a3630:   7100281f    cmp w0, #0xa
   a3634:   54fffd01    b.ne    a35d4 <CSerialDevice::Write(void const*, unsigned long)+0x44>
   a3638:   b9516660    ldr w0, [x19, #4452]
   a363c:   3607fcc0    tbz w0, #0, a35d4 <CSerialDevice::Write(void const*, unsigned long)+0x44>
   a3640:   528001a1    mov w1, #0xd
   a3644:   aa1303e0    mov x0, x19
   a3648:   97ffff92    bl  a3490 <CSerialDevice::Write(unsigned char)>
   a364c:   3707fc40    tbnz    w0, #0, a35d4 <CSerialDevice::Write(void const*, unsigned long)+0x44>
   a3650:   b9518660    ldr w0, [x19, #4484]
   a3654:   35000900    cbnz    w0, a3774 <CSerialDevice::Write(void const*, unsigned long)+0x1e4>
   a3658:   f9400a60    ldr x0, [x19, #16]
   a365c:   b4000440    cbz x0, a36e4 <CSerialDevice::Write(void const*, unsigned long)+0x154>
   a3660:   b9518260    ldr w0, [x19, #4480]
   a3664:   350009e0    cbnz    w0, a37a0 <CSerialDevice::Write(void const*, unsigned long)+0x210>
   a3668:   b9515e60    ldr w0, [x19, #4444]
   a366c:   b9516261    ldr w1, [x19, #4448]
   a3670:   6b00003f    cmp w1, w0
   a3674:   54000380    b.eq    a36e4 <CSerialDevice::Write(void const*, unsigned long)+0x154>
   a3678:   b9515e60    ldr w0, [x19, #4444]
   a367c:   b9516261    ldr w1, [x19, #4448]
   a3680:   6b00003f    cmp w1, w0
   a3684:   540002c0    b.eq    a36dc <CSerialDevice::Write(void const*, unsigned long)+0x14c>
   a3688:   f9401262    ldr x2, [x19, #32]
   a368c:   91006043    add x3, x2, #0x18
   a3690:   1400000e    b   a36c8 <CSerialDevice::Write(void const*, unsigned long)+0x138>
   a3694:   b9516260    ldr w0, [x19, #4448]
   a3698:   8b204261    add x1, x19, w0, uxtw
   a369c:   11000400    add w0, w0, #0x1
   a36a0:   b9116260    str w0, [x19, #4448]
   a36a4:   39657020    ldrb    w0, [x1, #2396]
   a36a8:   b9000040    str w0, [x2]
   a36ac:   b9516260    ldr w0, [x19, #4448]
   a36b0:   12002800    and w0, w0, #0x7ff
   a36b4:   b9116260    str w0, [x19, #4448]
   a36b8:   b9515e61    ldr w1, [x19, #4444]
   a36bc:   b9516260    ldr w0, [x19, #4448]
   a36c0:   6b00003f    cmp w1, w0
   a36c4:   540000c0    b.eq    a36dc <CSerialDevice::Write(void const*, unsigned long)+0x14c>
   a36c8:   b9400060    ldr w0, [x3]
   a36cc:   362ffe40    tbz w0, #5, a3694 <CSerialDevice::Write(void const*, unsigned long)+0x104>
   a36d0:   b9403840    ldr w0, [x2, #56]
   a36d4:   321b0000    orr w0, w0, #0x20
   a36d8:   b9003840    str w0, [x2, #56]
   a36dc:   b9518260    ldr w0, [x19, #4480]
   a36e0:   35000520    cbnz    w0, a3784 <CSerialDevice::Write(void const*, unsigned long)+0x1f4>
   a36e4:   a94153f3    ldp x19, x20, [sp, #16]
   a36e8:   2a1503e0    mov w0, w21
   a36ec:   a9425bf5    ldp x21, x22, [sp, #32]
   a36f0:   f9401bf7    ldr x23, [sp, #48]
   a36f4:   a8c47bfd    ldp x29, x30, [sp], #64
   a36f8:   d65f03c0    ret
   a36fc:   f9401262    ldr x2, [x19, #32]
   a3700:   91006041    add x1, x2, #0x18
   a3704:   d503201f    nop
   a3708:   b9400020    ldr w0, [x1]
   a370c:   372fffe0    tbnz    w0, #5, a3708 <CSerialDevice::Write(void const*, unsigned long)+0x178>
   a3710:   b9000056    str w22, [x2]
   a3714:   17ffffc6    b   a362c <CSerialDevice::Write(void const*, unsigned long)+0x9c>
   a3718:   940013d6    bl  a8670 <EnterCritical>
   a371c:   b9515e61    ldr w1, [x19, #4444]
   a3720:   b9516262    ldr w2, [x19, #4448]
   a3724:   b9518260    ldr w0, [x19, #4480]
   a3728:   11000421    add w1, w1, #0x1
   a372c:   12002821    and w1, w1, #0x7ff
   a3730:   6b02003f    cmp w1, w2
   a3734:   54000180    b.eq    a3764 <CSerialDevice::Write(void const*, unsigned long)+0x1d4>
   a3738:   b9515e61    ldr w1, [x19, #4444]
   a373c:   8b214262    add x2, x19, w1, uxtw
   a3740:   11000421    add w1, w1, #0x1
   a3744:   b9115e61    str w1, [x19, #4444]
   a3748:   39257056    strb    w22, [x2, #2396]
   a374c:   b9515e61    ldr w1, [x19, #4444]
   a3750:   12002821    and w1, w1, #0x7ff
   a3754:   b9115e61    str w1, [x19, #4444]
   a3758:   34fff6a0    cbz w0, a362c <CSerialDevice::Write(void const*, unsigned long)+0x9c>
   a375c:   940013f5    bl  a8730 <LeaveCritical>
   a3760:   17ffffb3    b   a362c <CSerialDevice::Write(void const*, unsigned long)+0x9c>
   a3764:   34fff760    cbz w0, a3650 <CSerialDevice::Write(void const*, unsigned long)+0xc0>
   a3768:   940013f2    bl  a8730 <LeaveCritical>
   a376c:   b9518660    ldr w0, [x19, #4484]
   a3770:   34fff740    cbz w0, a3658 <CSerialDevice::Write(void const*, unsigned long)+0xc8>
   a3774:   940013ef    bl  a8730 <LeaveCritical>
   a3778:   17ffffb8    b   a3658 <CSerialDevice::Write(void const*, unsigned long)+0xc8>
   a377c:   940013bd    bl  a8670 <EnterCritical>
   a3780:   17ffff90    b   a35c0 <CSerialDevice::Write(void const*, unsigned long)+0x30>
   a3784:   940013eb    bl  a8730 <LeaveCritical>
   a3788:   a94153f3    ldp x19, x20, [sp, #16]
   a378c:   2a1503e0    mov w0, w21
   a3790:   a9425bf5    ldp x21, x22, [sp, #32]
   a3794:   f9401bf7    ldr x23, [sp, #48]
   a3798:   a8c47bfd    ldp x29, x30, [sp], #64
   a379c:   d65f03c0    ret
   a37a0:   940013b4    bl  a8670 <EnterCritical>
   a37a4:   b9515e61    ldr w1, [x19, #4444]
   a37a8:   b9516260    ldr w0, [x19, #4448]
   a37ac:   6b00003f    cmp w1, w0
   a37b0:   54fff641    b.ne    a3678 <CSerialDevice::Write(void const*, unsigned long)+0xe8>
   a37b4:   17ffffca    b   a36dc <CSerialDevice::Write(void const*, unsigned long)+0x14c>
   a37b8:   b00000a1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a37bc:   91204021    add x1, x1, #0x810
   a37c0:   91004020    add x0, x1, #0x10
   a37c4:   52802ec2    mov w2, #0x176
   a37c8:   97ffe4be    bl  9cac0 <assertion_failed>
   a37cc:   b00000a1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a37d0:   91204021    add x1, x1, #0x810
   a37d4:   91008020    add x0, x1, #0x20
   a37d8:   52803062    mov w2, #0x183
   a37dc:   97ffe4b9    bl  9cac0 <assertion_failed>

00000000000a37e0 <CSerialDevice::InterruptHandler()>:
   a37e0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a37e4:   910003fd    mov x29, sp
   a37e8:   a90153f3    stp x19, x20, [sp, #16]
   a37ec:   aa0003f3    mov x19, x0
   a37f0:   b9518000    ldr w0, [x0, #4480]
   a37f4:   35000ca0    cbnz    w0, a3988 <CSerialDevice::InterruptHandler()+0x1a8>
   a37f8:   f9401262    ldr x2, [x19, #32]
   a37fc:   b9404040    ldr w0, [x2, #64]
   a3800:   91006043    add x3, x2, #0x18
   a3804:   b9004440    str w0, [x2, #68]
   a3808:   b9401840    ldr w0, [x2, #24]
   a380c:   37200cc0    tbnz    w0, #4, a39a4 <CSerialDevice::InterruptHandler()+0x1c4>
   a3810:   f948b665    ldr x5, [x19, #4456]
   a3814:   52800014    mov w20, #0x0
   a3818:   12800026    mov w6, #0xfffffffe
   a381c:   12800007    mov w7, #0xffffffff
   a3820:   52800028    mov w8, #0x1
   a3824:   d503201f    nop
   a3828:   b9400041    ldr w1, [x2]
   a382c:   365006e1    tbz w1, #10, a3908 <CSerialDevice::InterruptHandler()+0x128>
   a3830:   b9495a60    ldr w0, [x19, #2392]
   a3834:   35000040    cbnz    w0, a383c <CSerialDevice::InterruptHandler()+0x5c>
   a3838:   b9095a67    str w7, [x19, #2392]
   a383c:   b40000c5    cbz x5, a3854 <CSerialDevice::InterruptHandler()+0x74>
   a3840:   f948ba60    ldr x0, [x19, #4464]
   a3844:   39c00004    ldrsb   w4, [x0]
   a3848:   6b21809f    cmp w4, w1, sxtb
   a384c:   540007c0    b.eq    a3944 <CSerialDevice::InterruptHandler()+0x164>
   a3850:   f908ba65    str x5, [x19, #4464]
   a3854:   b9495260    ldr w0, [x19, #2384]
   a3858:   b9495664    ldr w4, [x19, #2388]
   a385c:   11000400    add w0, w0, #0x1
   a3860:   12002800    and w0, w0, #0x7ff
   a3864:   6b04001f    cmp w0, w4
   a3868:   540005a0    b.eq    a391c <CSerialDevice::InterruptHandler()+0x13c>
   a386c:   b9495260    ldr w0, [x19, #2384]
   a3870:   8b204264    add x4, x19, w0, uxtw
   a3874:   11000400    add w0, w0, #0x1
   a3878:   b9095260    str w0, [x19, #2384]
   a387c:   39054081    strb    w1, [x4, #336]
   a3880:   b9495260    ldr w0, [x19, #2384]
   a3884:   12002800    and w0, w0, #0x7ff
   a3888:   b9095260    str w0, [x19, #2384]
   a388c:   b9400060    ldr w0, [x3]
   a3890:   3627fcc0    tbz w0, #4, a3828 <CSerialDevice::InterruptHandler()+0x48>
   a3894:   b9401840    ldr w0, [x2, #24]
   a3898:   362801a0    tbz w0, #5, a38cc <CSerialDevice::InterruptHandler()+0xec>
   a389c:   14000013    b   a38e8 <CSerialDevice::InterruptHandler()+0x108>
   a38a0:   b9516260    ldr w0, [x19, #4448]
   a38a4:   8b204261    add x1, x19, w0, uxtw
   a38a8:   11000400    add w0, w0, #0x1
   a38ac:   b9116260    str w0, [x19, #4448]
   a38b0:   39657020    ldrb    w0, [x1, #2396]
   a38b4:   b9000040    str w0, [x2]
   a38b8:   b9516260    ldr w0, [x19, #4448]
   a38bc:   12002800    and w0, w0, #0x7ff
   a38c0:   b9116260    str w0, [x19, #4448]
   a38c4:   b9400060    ldr w0, [x3]
   a38c8:   37280100    tbnz    w0, #5, a38e8 <CSerialDevice::InterruptHandler()+0x108>
   a38cc:   b9515e61    ldr w1, [x19, #4444]
   a38d0:   b9516260    ldr w0, [x19, #4448]
   a38d4:   6b00003f    cmp w1, w0
   a38d8:   54fffe41    b.ne    a38a0 <CSerialDevice::InterruptHandler()+0xc0>
   a38dc:   b9403840    ldr w0, [x2, #56]
   a38e0:   121a7800    and w0, w0, #0xffffffdf
   a38e4:   b9003840    str w0, [x2, #56]
   a38e8:   b9518260    ldr w0, [x19, #4480]
   a38ec:   35000440    cbnz    w0, a3974 <CSerialDevice::InterruptHandler()+0x194>
   a38f0:   36000474    tbz w20, #0, a397c <CSerialDevice::InterruptHandler()+0x19c>
   a38f4:   f948be60    ldr x0, [x19, #4472]
   a38f8:   a94153f3    ldp x19, x20, [sp, #16]
   a38fc:   a8c27bfd    ldp x29, x30, [sp], #32
   a3900:   aa0003f0    mov x16, x0
   a3904:   d61f0200    br  x16
   a3908:   36580121    tbz w1, #11, a392c <CSerialDevice::InterruptHandler()+0x14c>
   a390c:   b9495a60    ldr w0, [x19, #2392]
   a3910:   35fff960    cbnz    w0, a383c <CSerialDevice::InterruptHandler()+0x5c>
   a3914:   b9095a66    str w6, [x19, #2392]
   a3918:   17ffffc9    b   a383c <CSerialDevice::InterruptHandler()+0x5c>
   a391c:   b9495a60    ldr w0, [x19, #2392]
   a3920:   35fffb60    cbnz    w0, a388c <CSerialDevice::InterruptHandler()+0xac>
   a3924:   b9095a66    str w6, [x19, #2392]
   a3928:   17ffffd9    b   a388c <CSerialDevice::InterruptHandler()+0xac>
   a392c:   36400181    tbz w1, #8, a395c <CSerialDevice::InterruptHandler()+0x17c>
   a3930:   b9495a60    ldr w0, [x19, #2392]
   a3934:   35fff840    cbnz    w0, a383c <CSerialDevice::InterruptHandler()+0x5c>
   a3938:   12800040    mov w0, #0xfffffffd
   a393c:   b9095a60    str w0, [x19, #2392]
   a3940:   17ffffbf    b   a383c <CSerialDevice::InterruptHandler()+0x5c>
   a3944:   91000404    add x4, x0, #0x1
   a3948:   f908ba64    str x4, [x19, #4464]
   a394c:   39c00400    ldrsb   w0, [x0, #1]
   a3950:   7100001f    cmp w0, #0x0
   a3954:   1a881294    csel    w20, w20, w8, ne
   a3958:   17ffffbf    b   a3854 <CSerialDevice::InterruptHandler()+0x74>
   a395c:   364ff701    tbz w1, #9, a383c <CSerialDevice::InterruptHandler()+0x5c>
   a3960:   b9495a60    ldr w0, [x19, #2392]
   a3964:   35fff6c0    cbnz    w0, a383c <CSerialDevice::InterruptHandler()+0x5c>
   a3968:   12800060    mov w0, #0xfffffffc
   a396c:   b9095a60    str w0, [x19, #2392]
   a3970:   17ffffb3    b   a383c <CSerialDevice::InterruptHandler()+0x5c>
   a3974:   9400136f    bl  a8730 <LeaveCritical>
   a3978:   3707fbf4    tbnz    w20, #0, a38f4 <CSerialDevice::InterruptHandler()+0x114>
   a397c:   a94153f3    ldp x19, x20, [sp, #16]
   a3980:   a8c27bfd    ldp x29, x30, [sp], #32
   a3984:   d65f03c0    ret
   a3988:   9400133a    bl  a8670 <EnterCritical>
   a398c:   f9401262    ldr x2, [x19, #32]
   a3990:   b9404040    ldr w0, [x2, #64]
   a3994:   91006043    add x3, x2, #0x18
   a3998:   b9004440    str w0, [x2, #68]
   a399c:   b9401840    ldr w0, [x2, #24]
   a39a0:   3627f380    tbz w0, #4, a3810 <CSerialDevice::InterruptHandler()+0x30>
   a39a4:   b9401840    ldr w0, [x2, #24]
   a39a8:   52800014    mov w20, #0x0
   a39ac:   362ff900    tbz w0, #5, a38cc <CSerialDevice::InterruptHandler()+0xec>
   a39b0:   b9518260    ldr w0, [x19, #4480]
   a39b4:   34fffe40    cbz w0, a397c <CSerialDevice::InterruptHandler()+0x19c>
   a39b8:   a94153f3    ldp x19, x20, [sp, #16]
   a39bc:   a8c27bfd    ldp x29, x30, [sp], #32
   a39c0:   1400135c    b   a8730 <LeaveCritical>
   a39c4:   d503201f    nop
   a39c8:   d503201f    nop
   a39cc:   d503201f    nop

00000000000a39d0 <CSerialDevice::InterruptStub(void*)>:
   a39d0:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   a39d4:   910003fd    mov x29, sp
   a39d8:   a90153f3    stp x19, x20, [sp, #16]
   a39dc:   f9001bf7    str x23, [sp, #48]
   a39e0:   d5033fbf    dmb sy
   a39e4:   f00000b7    adrp    x23, ba000 <font_data+0x1080>
   a39e8:   912602f7    add x23, x23, #0x980
   a39ec:   b94046f4    ldr w20, [x23, #68]
   a39f0:   340001f4    cbz w20, a3a2c <CSerialDevice::InterruptStub(void*)+0x5c>
   a39f4:   52800013    mov w19, #0x0
   a39f8:   a9025bf5    stp x21, x22, [sp, #32]
   a39fc:   52800036    mov w22, #0x1
   a3a00:   1ad322d5    lsl w21, w22, w19
   a3a04:   6a1402bf    tst w21, w20
   a3a08:   54000080    b.eq    a3a18 <CSerialDevice::InterruptStub(void*)+0x48>
   a3a0c:   f8735ae0    ldr x0, [x23, w19, uxtw #3]
   a3a10:   b4000160    cbz x0, a3a3c <CSerialDevice::InterruptStub(void*)+0x6c>
   a3a14:   97ffff73    bl  a37e0 <CSerialDevice::InterruptHandler()>
   a3a18:   11000673    add w19, w19, #0x1
   a3a1c:   6a350294    bics    w20, w20, w21
   a3a20:   7a451a62    ccmp    w19, #0x5, #0x2, ne
   a3a24:   54fffee9    b.ls    a3a00 <CSerialDevice::InterruptStub(void*)+0x30>
   a3a28:   a9425bf5    ldp x21, x22, [sp, #32]
   a3a2c:   a94153f3    ldp x19, x20, [sp, #16]
   a3a30:   f9401bf7    ldr x23, [sp, #48]
   a3a34:   a8c47bfd    ldp x29, x30, [sp], #64
   a3a38:   d65f03c0    ret
   a3a3c:   b00000a1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a3a40:   91204021    add x1, x1, #0x810
   a3a44:   9108c020    add x0, x1, #0x230
   a3a48:   528060e2    mov w2, #0x307
   a3a4c:   97ffe41d    bl  9cac0 <assertion_failed>

00000000000a3a50 <CSerialDevice::~CSerialDevice()>:
   a3a50:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   a3a54:   910003fd    mov x29, sp
   a3a58:   b00000a1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a3a5c:   911f2021    add x1, x1, #0x7c8
   a3a60:   a90153f3    stp x19, x20, [sp, #16]
   a3a64:   aa0003f3    mov x19, x0
   a3a68:   3940a000    ldrb    w0, [x0, #40]
   a3a6c:   f9000261    str x1, [x19]
   a3a70:   360007a0    tbz w0, #0, a3b64 <CSerialDevice::~CSerialDevice()+0x114>
   a3a74:   a9025bf5    stp x21, x22, [sp, #32]
   a3a78:   b00000b5    adrp    x21, b8000 <vtable for CGPIOPin+0x288>
   a3a7c:   912042b5    add x21, x21, #0x810
   a3a80:   f00000b4    adrp    x20, ba000 <font_data+0x1080>
   a3a84:   91260294    add x20, x20, #0x980
   a3a88:   97ffe7f6    bl  9da60 <CDeviceNameService::Get()>
   a3a8c:   b9401e62    ldr w2, [x19, #28]
   a3a90:   910742a1    add x1, x21, #0x1d0
   a3a94:   52800003    mov w3, #0x0
   a3a98:   11000442    add w2, w2, #0x1
   a3a9c:   97ffe81d    bl  9db10 <CDeviceNameService::RemoveDevice(char const*, unsigned int, bool)>
   a3aa0:   b9401e62    ldr w2, [x19, #28]
   a3aa4:   52800020    mov w0, #0x1
   a3aa8:   b9404681    ldr w1, [x20, #68]
   a3aac:   1ac22000    lsl w0, w0, w2
   a3ab0:   0a200020    bic w0, w1, w0
   a3ab4:   b9004680    str w0, [x20, #68]
   a3ab8:   d5033f9f    dsb sy
   a3abc:   f9401260    ldr x0, [x19, #32]
   a3ac0:   f9400a61    ldr x1, [x19, #16]
   a3ac4:   b900381f    str wzr, [x0, #56]
   a3ac8:   b900301f    str wzr, [x0, #48]
   a3acc:   b4000181    cbz x1, a3afc <CSerialDevice::~CSerialDevice()+0xac>
   a3ad0:   b9403280    ldr w0, [x20, #48]
   a3ad4:   51000400    sub w0, w0, #0x1
   a3ad8:   b9003280    str w0, [x20, #48]
   a3adc:   35000100    cbnz    w0, a3afc <CSerialDevice::~CSerialDevice()+0xac>
   a3ae0:   f9401e80    ldr x0, [x20, #56]
   a3ae4:   b40005e0    cbz x0, a3ba0 <CSerialDevice::~CSerialDevice()+0x150>
   a3ae8:   39410281    ldrb    w1, [x20, #64]
   a3aec:   36000541    tbz w1, #0, a3b94 <CSerialDevice::~CSerialDevice()+0x144>
   a3af0:   94001a1c    bl  aa360 <CInterruptSystem::DisconnectFIQ()>
   a3af4:   f9001e9f    str xzr, [x20, #56]
   a3af8:   3901029f    strb    wzr, [x20, #64]
   a3afc:   91030275    add x21, x19, #0xc0
   a3b00:   52800022    mov w2, #0x1
   a3b04:   aa1503e0    mov x0, x21
   a3b08:   52800001    mov w1, #0x0
   a3b0c:   97ffeb51    bl  9e850 <CGPIOPin::SetMode(TGPIOMode, bool)>
   a3b10:   91042276    add x22, x19, #0x108
   a3b14:   52800022    mov w2, #0x1
   a3b18:   aa1603e0    mov x0, x22
   a3b1c:   52800001    mov w1, #0x0
   a3b20:   97ffeb4c    bl  9e850 <CGPIOPin::SetMode(TGPIOMode, bool)>
   a3b24:   b9401e61    ldr w1, [x19, #28]
   a3b28:   aa1603e0    mov x0, x22
   a3b2c:   f8217a9f    str xzr, [x20, x1, lsl #3]
   a3b30:   3900a27f    strb    wzr, [x19, #40]
   a3b34:   97ffe887    bl  9dd50 <CGPIOPin::~CGPIOPin()>
   a3b38:   aa1503e0    mov x0, x21
   a3b3c:   97ffe885    bl  9dd50 <CGPIOPin::~CGPIOPin()>
   a3b40:   9101e260    add x0, x19, #0x78
   a3b44:   97ffe883    bl  9dd50 <CGPIOPin::~CGPIOPin()>
   a3b48:   9100c260    add x0, x19, #0x30
   a3b4c:   97ffe881    bl  9dd50 <CGPIOPin::~CGPIOPin()>
   a3b50:   a9425bf5    ldp x21, x22, [sp, #32]
   a3b54:   aa1303e0    mov x0, x19
   a3b58:   a94153f3    ldp x19, x20, [sp, #16]
   a3b5c:   a8c37bfd    ldp x29, x30, [sp], #48
   a3b60:   17ffe62c    b   9d410 <CDevice::~CDevice()>
   a3b64:   91042260    add x0, x19, #0x108
   a3b68:   97ffe87a    bl  9dd50 <CGPIOPin::~CGPIOPin()>
   a3b6c:   91030260    add x0, x19, #0xc0
   a3b70:   97ffe878    bl  9dd50 <CGPIOPin::~CGPIOPin()>
   a3b74:   9101e260    add x0, x19, #0x78
   a3b78:   97ffe876    bl  9dd50 <CGPIOPin::~CGPIOPin()>
   a3b7c:   9100c260    add x0, x19, #0x30
   a3b80:   97ffe874    bl  9dd50 <CGPIOPin::~CGPIOPin()>
   a3b84:   aa1303e0    mov x0, x19
   a3b88:   a94153f3    ldp x19, x20, [sp, #16]
   a3b8c:   a8c37bfd    ldp x29, x30, [sp], #48
   a3b90:   17ffe620    b   9d410 <CDevice::~CDevice()>
   a3b94:   52801321    mov w1, #0x99
   a3b98:   940019d2    bl  aa2e0 <CInterruptSystem::DisconnectIRQ(unsigned int)>
   a3b9c:   17ffffd6    b   a3af4 <CSerialDevice::~CSerialDevice()+0xa4>
   a3ba0:   52801c42    mov w2, #0xe2
   a3ba4:   aa1503e1    mov x1, x21
   a3ba8:   910902a0    add x0, x21, #0x240
   a3bac:   97ffe3c5    bl  9cac0 <assertion_failed>

00000000000a3bb0 <CSerialDevice::~CSerialDevice()>:
   a3bb0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a3bb4:   910003fd    mov x29, sp
   a3bb8:   f9000bf3    str x19, [sp, #16]
   a3bbc:   aa0003f3    mov x19, x0
   a3bc0:   97ffffa4    bl  a3a50 <CSerialDevice::~CSerialDevice()>
   a3bc4:   aa1303e0    mov x0, x19
   a3bc8:   f9400bf3    ldr x19, [sp, #16]
   a3bcc:   d2823101    mov x1, #0x1188
   a3bd0:   a8c27bfd    ldp x29, x30, [sp], #32
   a3bd4:   14000f23    b   a7860 <operator delete(void*, unsigned long)>
    ...

00000000000a3be0 <CString::~CString()>:
   a3be0:   aa0003e1    mov x1, x0
   a3be4:   b00000a2    adrp    x2, b8000 <vtable for CGPIOPin+0x288>
   a3be8:   9129e042    add x2, x2, #0xa78
   a3bec:   f9400400    ldr x0, [x0, #8]
   a3bf0:   f9000022    str x2, [x1]
   a3bf4:   b4000040    cbz x0, a3bfc <CString::~CString()+0x1c>
   a3bf8:   14000f0e    b   a7830 <operator delete[](void*)>
   a3bfc:   d65f03c0    ret

00000000000a3c00 <CString::~CString()>:
   a3c00:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a3c04:   910003fd    mov x29, sp
   a3c08:   b00000a1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a3c0c:   9129e021    add x1, x1, #0xa78
   a3c10:   f9000bf3    str x19, [sp, #16]
   a3c14:   aa0003f3    mov x19, x0
   a3c18:   f9400400    ldr x0, [x0, #8]
   a3c1c:   f9000261    str x1, [x19]
   a3c20:   b4000040    cbz x0, a3c28 <CString::~CString()+0x28>
   a3c24:   94000f03    bl  a7830 <operator delete[](void*)>
   a3c28:   aa1303e0    mov x0, x19
   a3c2c:   f9400bf3    ldr x19, [sp, #16]
   a3c30:   d2800401    mov x1, #0x20
   a3c34:   a8c27bfd    ldp x29, x30, [sp], #32
   a3c38:   14000f0a    b   a7860 <operator delete(void*, unsigned long)>
   a3c3c:   d503201f    nop

00000000000a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>:
   a3c40:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   a3c44:   910003fd    mov x29, sp
   a3c48:   f9400402    ldr x2, [x0, #8]
   a3c4c:   a9025bf5    stp x21, x22, [sp, #32]
   a3c50:   f9400c15    ldr x21, [x0, #24]
   a3c54:   a90153f3    stp x19, x20, [sp, #16]
   a3c58:   aa0003f3    mov x19, x0
   a3c5c:   b9401000    ldr w0, [x0, #16]
   a3c60:   cb0202b5    sub x21, x21, x2
   a3c64:   8b0102a1    add x1, x21, x1
   a3c68:   91000422    add x2, x1, #0x1
   a3c6c:   eb00005f    cmp x2, x0
   a3c70:   540000a8    b.hi    a3c84 <CString::ReserveSpace(unsigned long) [clone .part.0]+0x44>
   a3c74:   a94153f3    ldp x19, x20, [sp, #16]
   a3c78:   a9425bf5    ldp x21, x22, [sp, #32]
   a3c7c:   a8c37bfd    ldp x29, x30, [sp], #48
   a3c80:   d65f03c0    ret
   a3c84:   91010434    add x20, x1, #0x41
   a3c88:   aa1403e0    mov x0, x20
   a3c8c:   94000ed5    bl  a77e0 <operator new[](unsigned long)>
   a3c90:   f9400e61    ldr x1, [x19, #24]
   a3c94:   aa0003f6    mov x22, x0
   a3c98:   3900003f    strb    wzr, [x1]
   a3c9c:   f9400661    ldr x1, [x19, #8]
   a3ca0:   94000b38    bl  a6980 <strcpy>
   a3ca4:   f9400660    ldr x0, [x19, #8]
   a3ca8:   b4000040    cbz x0, a3cb0 <CString::ReserveSpace(unsigned long) [clone .part.0]+0x70>
   a3cac:   94000ee1    bl  a7830 <operator delete[](void*)>
   a3cb0:   8b1502d5    add x21, x22, x21
   a3cb4:   f9000676    str x22, [x19, #8]
   a3cb8:   b9001274    str w20, [x19, #16]
   a3cbc:   f9000e75    str x21, [x19, #24]
   a3cc0:   a94153f3    ldp x19, x20, [sp, #16]
   a3cc4:   a9425bf5    ldp x21, x22, [sp, #32]
   a3cc8:   a8c37bfd    ldp x29, x30, [sp], #48
   a3ccc:   d65f03c0    ret

00000000000a3cd0 <CString::CString()>:
   a3cd0:   b00000a1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a3cd4:   9129e021    add x1, x1, #0xa78
   a3cd8:   b900101f    str wzr, [x0, #16]
   a3cdc:   a9007c01    stp x1, xzr, [x0]
   a3ce0:   d65f03c0    ret
   a3ce4:   d503201f    nop
   a3ce8:   d503201f    nop
   a3cec:   d503201f    nop

00000000000a3cf0 <CString::CString(char const*)>:
   a3cf0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a3cf4:   910003fd    mov x29, sp
   a3cf8:   b00000a2    adrp    x2, b8000 <vtable for CGPIOPin+0x288>
   a3cfc:   9129e042    add x2, x2, #0xa78
   a3d00:   a90153f3    stp x19, x20, [sp, #16]
   a3d04:   aa0003f3    mov x19, x0
   a3d08:   aa0103e0    mov x0, x1
   a3d0c:   aa0103f4    mov x20, x1
   a3d10:   f9000262    str x2, [x19]
   a3d14:   94000a8b    bl  a6740 <strlen>
   a3d18:   11000400    add w0, w0, #0x1
   a3d1c:   b9001260    str w0, [x19, #16]
   a3d20:   94000eb0    bl  a77e0 <operator new[](unsigned long)>
   a3d24:   aa1403e1    mov x1, x20
   a3d28:   f9000660    str x0, [x19, #8]
   a3d2c:   a94153f3    ldp x19, x20, [sp, #16]
   a3d30:   a8c27bfd    ldp x29, x30, [sp], #32
   a3d34:   14000b13    b   a6980 <strcpy>
   a3d38:   d503201f    nop
   a3d3c:   d503201f    nop

00000000000a3d40 <CString::CString(CString const&)>:
   a3d40:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   a3d44:   910003fd    mov x29, sp
   a3d48:   f90013f5    str x21, [sp, #32]
   a3d4c:   aa0103f5    mov x21, x1
   a3d50:   b00000a1    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a3d54:   9129e021    add x1, x1, #0xa78
   a3d58:   a90153f3    stp x19, x20, [sp, #16]
   a3d5c:   aa0003f3    mov x19, x0
   a3d60:   b0000074    adrp    x20, b0000 <_etext+0xf9c>
   a3d64:   913b8294    add x20, x20, #0xee0
   a3d68:   f94006a0    ldr x0, [x21, #8]
   a3d6c:   f9000261    str x1, [x19]
   a3d70:   f100001f    cmp x0, #0x0
   a3d74:   9a800280    csel    x0, x20, x0, eq
   a3d78:   94000a72    bl  a6740 <strlen>
   a3d7c:   11000400    add w0, w0, #0x1
   a3d80:   b9001260    str w0, [x19, #16]
   a3d84:   94000e97    bl  a77e0 <operator new[](unsigned long)>
   a3d88:   f94006a1    ldr x1, [x21, #8]
   a3d8c:   f94013f5    ldr x21, [sp, #32]
   a3d90:   f9000660    str x0, [x19, #8]
   a3d94:   f100003f    cmp x1, #0x0
   a3d98:   9a810281    csel    x1, x20, x1, eq
   a3d9c:   a94153f3    ldp x19, x20, [sp, #16]
   a3da0:   a8c37bfd    ldp x29, x30, [sp], #48
   a3da4:   14000af7    b   a6980 <strcpy>
   a3da8:   d503201f    nop
   a3dac:   d503201f    nop

00000000000a3db0 <CString::CString(CString&&)>:
   a3db0:   f9400424    ldr x4, [x1, #8]
   a3db4:   b00000a2    adrp    x2, b8000 <vtable for CGPIOPin+0x288>
   a3db8:   9129e042    add x2, x2, #0xa78
   a3dbc:   f900043f    str xzr, [x1, #8]
   a3dc0:   b9401023    ldr w3, [x1, #16]
   a3dc4:   b900103f    str wzr, [x1, #16]
   a3dc8:   a9001002    stp x2, x4, [x0]
   a3dcc:   b9001003    str w3, [x0, #16]
   a3dd0:   d65f03c0    ret
   a3dd4:   d503201f    nop
   a3dd8:   d503201f    nop
   a3ddc:   d503201f    nop

00000000000a3de0 <CString::operator char const*() const>:
   a3de0:   f9400400    ldr x0, [x0, #8]
   a3de4:   b0000061    adrp    x1, b0000 <_etext+0xf9c>
   a3de8:   913b8021    add x1, x1, #0xee0
   a3dec:   f100001f    cmp x0, #0x0
   a3df0:   9a800020    csel    x0, x1, x0, eq
   a3df4:   d65f03c0    ret
   a3df8:   d503201f    nop
   a3dfc:   d503201f    nop

00000000000a3e00 <CString::operator=(char const*)>:
   a3e00:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a3e04:   910003fd    mov x29, sp
   a3e08:   a90153f3    stp x19, x20, [sp, #16]
   a3e0c:   aa0003f3    mov x19, x0
   a3e10:   aa0103f4    mov x20, x1
   a3e14:   f9400400    ldr x0, [x0, #8]
   a3e18:   b4000040    cbz x0, a3e20 <CString::operator=(char const*)+0x20>
   a3e1c:   94000e85    bl  a7830 <operator delete[](void*)>
   a3e20:   aa1403e0    mov x0, x20
   a3e24:   94000a47    bl  a6740 <strlen>
   a3e28:   11000400    add w0, w0, #0x1
   a3e2c:   b9001260    str w0, [x19, #16]
   a3e30:   94000e6c    bl  a77e0 <operator new[](unsigned long)>
   a3e34:   aa1403e1    mov x1, x20
   a3e38:   f9000660    str x0, [x19, #8]
   a3e3c:   94000ad1    bl  a6980 <strcpy>
   a3e40:   f9400660    ldr x0, [x19, #8]
   a3e44:   a94153f3    ldp x19, x20, [sp, #16]
   a3e48:   a8c27bfd    ldp x29, x30, [sp], #32
   a3e4c:   d65f03c0    ret

00000000000a3e50 <CString::operator=(CString const&)>:
   a3e50:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   a3e54:   910003fd    mov x29, sp
   a3e58:   a90153f3    stp x19, x20, [sp, #16]
   a3e5c:   aa0003f3    mov x19, x0
   a3e60:   f9400400    ldr x0, [x0, #8]
   a3e64:   f90013f5    str x21, [sp, #32]
   a3e68:   aa0103f5    mov x21, x1
   a3e6c:   b4000040    cbz x0, a3e74 <CString::operator=(CString const&)+0x24>
   a3e70:   94000e70    bl  a7830 <operator delete[](void*)>
   a3e74:   f94006a0    ldr x0, [x21, #8]
   a3e78:   b0000074    adrp    x20, b0000 <_etext+0xf9c>
   a3e7c:   913b8294    add x20, x20, #0xee0
   a3e80:   f100001f    cmp x0, #0x0
   a3e84:   9a800280    csel    x0, x20, x0, eq
   a3e88:   94000a2e    bl  a6740 <strlen>
   a3e8c:   11000400    add w0, w0, #0x1
   a3e90:   b9001260    str w0, [x19, #16]
   a3e94:   94000e53    bl  a77e0 <operator new[](unsigned long)>
   a3e98:   f9000660    str x0, [x19, #8]
   a3e9c:   f94006a1    ldr x1, [x21, #8]
   a3ea0:   f100003f    cmp x1, #0x0
   a3ea4:   9a810281    csel    x1, x20, x1, eq
   a3ea8:   94000ab6    bl  a6980 <strcpy>
   a3eac:   f94013f5    ldr x21, [sp, #32]
   a3eb0:   aa1303e0    mov x0, x19
   a3eb4:   a94153f3    ldp x19, x20, [sp, #16]
   a3eb8:   a8c37bfd    ldp x29, x30, [sp], #48
   a3ebc:   d65f03c0    ret

00000000000a3ec0 <CString::operator=(CString&&)>:
   a3ec0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a3ec4:   910003fd    mov x29, sp
   a3ec8:   a90153f3    stp x19, x20, [sp, #16]
   a3ecc:   aa0003f4    mov x20, x0
   a3ed0:   aa0103f3    mov x19, x1
   a3ed4:   f9400400    ldr x0, [x0, #8]
   a3ed8:   b4000040    cbz x0, a3ee0 <CString::operator=(CString&&)+0x20>
   a3edc:   94000e55    bl  a7830 <operator delete[](void*)>
   a3ee0:   f9400662    ldr x2, [x19, #8]
   a3ee4:   aa1403e0    mov x0, x20
   a3ee8:   b9401261    ldr w1, [x19, #16]
   a3eec:   f9000682    str x2, [x20, #8]
   a3ef0:   b9001281    str w1, [x20, #16]
   a3ef4:   f900067f    str xzr, [x19, #8]
   a3ef8:   b900127f    str wzr, [x19, #16]
   a3efc:   a94153f3    ldp x19, x20, [sp, #16]
   a3f00:   a8c27bfd    ldp x29, x30, [sp], #32
   a3f04:   d65f03c0    ret
   a3f08:   d503201f    nop
   a3f0c:   d503201f    nop

00000000000a3f10 <CString::GetLength() const>:
   a3f10:   f9400400    ldr x0, [x0, #8]
   a3f14:   b4000040    cbz x0, a3f1c <CString::GetLength() const+0xc>
   a3f18:   14000a0a    b   a6740 <strlen>
   a3f1c:   d2800000    mov x0, #0x0
   a3f20:   d65f03c0    ret
   a3f24:   d503201f    nop
   a3f28:   d503201f    nop
   a3f2c:   d503201f    nop

00000000000a3f30 <CString::Append(char const*)>:
   a3f30:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   a3f34:   910003fd    mov x29, sp
   a3f38:   52800022    mov w2, #0x1
   a3f3c:   a90153f3    stp x19, x20, [sp, #16]
   a3f40:   aa0003f3    mov x19, x0
   a3f44:   f9400400    ldr x0, [x0, #8]
   a3f48:   f90013f5    str x21, [sp, #32]
   a3f4c:   aa0103f5    mov x21, x1
   a3f50:   b9001262    str w2, [x19, #16]
   a3f54:   b40000a0    cbz x0, a3f68 <CString::Append(char const*)+0x38>
   a3f58:   940009fa    bl  a6740 <strlen>
   a3f5c:   b9401261    ldr w1, [x19, #16]
   a3f60:   0b000021    add w1, w1, w0
   a3f64:   b9001261    str w1, [x19, #16]
   a3f68:   aa1503e0    mov x0, x21
   a3f6c:   940009f5    bl  a6740 <strlen>
   a3f70:   b9401261    ldr w1, [x19, #16]
   a3f74:   0b000020    add w0, w1, w0
   a3f78:   b9001260    str w0, [x19, #16]
   a3f7c:   94000e19    bl  a77e0 <operator new[](unsigned long)>
   a3f80:   f9400661    ldr x1, [x19, #8]
   a3f84:   aa0003f4    mov x20, x0
   a3f88:   b40001a1    cbz x1, a3fbc <CString::Append(char const*)+0x8c>
   a3f8c:   94000a7d    bl  a6980 <strcpy>
   a3f90:   f9400660    ldr x0, [x19, #8]
   a3f94:   b4000040    cbz x0, a3f9c <CString::Append(char const*)+0x6c>
   a3f98:   94000e26    bl  a7830 <operator delete[](void*)>
   a3f9c:   aa1503e1    mov x1, x21
   a3fa0:   aa1403e0    mov x0, x20
   a3fa4:   94000a8f    bl  a69e0 <strcat>
   a3fa8:   f94013f5    ldr x21, [sp, #32]
   a3fac:   f9000674    str x20, [x19, #8]
   a3fb0:   a94153f3    ldp x19, x20, [sp, #16]
   a3fb4:   a8c37bfd    ldp x29, x30, [sp], #48
   a3fb8:   d65f03c0    ret
   a3fbc:   aa1503e1    mov x1, x21
   a3fc0:   3900001f    strb    wzr, [x0]
   a3fc4:   aa1403e0    mov x0, x20
   a3fc8:   94000a86    bl  a69e0 <strcat>
   a3fcc:   f94013f5    ldr x21, [sp, #32]
   a3fd0:   f9000674    str x20, [x19, #8]
   a3fd4:   a94153f3    ldp x19, x20, [sp, #16]
   a3fd8:   a8c37bfd    ldp x29, x30, [sp], #48
   a3fdc:   d65f03c0    ret

00000000000a3fe0 <CString::Compare(char const*) const>:
   a3fe0:   f9400400    ldr x0, [x0, #8]
   a3fe4:   140009e3    b   a6770 <strcmp>
   a3fe8:   d503201f    nop
   a3fec:   d503201f    nop

00000000000a3ff0 <CString::Find(char) const>:
   a3ff0:   f9400403    ldr x3, [x0, #8]
   a3ff4:   13001c21    sxtb    w1, w1
   a3ff8:   39c00062    ldrsb   w2, [x3]
   a3ffc:   34000122    cbz w2, a4020 <CString::Find(char) const+0x30>
   a4000:   d2800000    mov x0, #0x0
   a4004:   14000004    b   a4014 <CString::Find(char) const+0x24>
   a4008:   91000400    add x0, x0, #0x1
   a400c:   38e06862    ldrsb   w2, [x3, x0]
   a4010:   34000082    cbz w2, a4020 <CString::Find(char) const+0x30>
   a4014:   6b02003f    cmp w1, w2
   a4018:   54ffff81    b.ne    a4008 <CString::Find(char) const+0x18>
   a401c:   d65f03c0    ret
   a4020:   12800000    mov w0, #0xffffffff
   a4024:   d65f03c0    ret
   a4028:   d503201f    nop
   a402c:   d503201f    nop

00000000000a4030 <CString::Replace(char const*, char const*)>:
   a4030:   a9bb7bfd    stp x29, x30, [sp, #-80]!
   a4034:   910003fd    mov x29, sp
   a4038:   a9025bf5    stp x21, x22, [sp, #32]
   a403c:   aa0103f5    mov x21, x1
   a4040:   a90363f7    stp x23, x24, [sp, #48]
   a4044:   52800017    mov w23, #0x0
   a4048:   39c00021    ldrsb   w1, [x1]
   a404c:   350000c1    cbnz    w1, a4064 <CString::Replace(char const*, char const*)+0x34>
   a4050:   a9425bf5    ldp x21, x22, [sp, #32]
   a4054:   2a1703e0    mov w0, w23
   a4058:   a94363f7    ldp x23, x24, [sp, #48]
   a405c:   a8c57bfd    ldp x29, x30, [sp], #80
   a4060:   d65f03c0    ret
   a4064:   a90153f3    stp x19, x20, [sp, #16]
   a4068:   aa0003f4    mov x20, x0
   a406c:   aa0203f6    mov x22, x2
   a4070:   f9400413    ldr x19, [x0, #8]
   a4074:   a9046bf9    stp x25, x26, [sp, #64]
   a4078:   aa1303e0    mov x0, x19
   a407c:   940009b1    bl  a6740 <strlen>
   a4080:   11000400    add w0, w0, #0x1
   a4084:   94000dd7    bl  a77e0 <operator new[](unsigned long)>
   a4088:   aa1303e1    mov x1, x19
   a408c:   aa0003f8    mov x24, x0
   a4090:   94000a3c    bl  a6980 <strcpy>
   a4094:   f9400680    ldr x0, [x20, #8]
   a4098:   b4000040    cbz x0, a40a0 <CString::Replace(char const*, char const*)+0x70>
   a409c:   94000de5    bl  a7830 <operator delete[](void*)>
   a40a0:   52800801    mov w1, #0x40
   a40a4:   d2800800    mov x0, #0x40
   a40a8:   aa1803f3    mov x19, x24
   a40ac:   52800017    mov w23, #0x0
   a40b0:   b9001281    str w1, [x20, #16]
   a40b4:   94000dcb    bl  a77e0 <operator new[](unsigned long)>
   a40b8:   f9000680    str x0, [x20, #8]
   a40bc:   f9000e80    str x0, [x20, #24]
   a40c0:   39c002a1    ldrsb   w1, [x21]
   a40c4:   aa1303e0    mov x0, x19
   a40c8:   94000a56    bl  a6a20 <strchr>
   a40cc:   aa0003fa    mov x26, x0
   a40d0:   b4000500    cbz x0, a4170 <CString::Replace(char const*, char const*)+0x140>
   a40d4:   eb00027f    cmp x19, x0
   a40d8:   aa1303e3    mov x3, x19
   a40dc:   54000182    b.cs    a410c <CString::Replace(char const*, char const*)+0xdc>
   a40e0:   d2800021    mov x1, #0x1
   a40e4:   aa1403e0    mov x0, x20
   a40e8:   38c01679    ldrsb   w25, [x19], #1
   a40ec:   97fffed5    bl  a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>
   a40f0:   f9400e81    ldr x1, [x20, #24]
   a40f4:   eb13035f    cmp x26, x19
   a40f8:   91000420    add x0, x1, #0x1
   a40fc:   f9000e80    str x0, [x20, #24]
   a4100:   39000039    strb    w25, [x1]
   a4104:   54fffee1    b.ne    a40e0 <CString::Replace(char const*, char const*)+0xb0>
   a4108:   aa1a03e3    mov x3, x26
   a410c:   39c006a1    ldrsb   w1, [x21, #1]
   a4110:   91000753    add x19, x26, #0x1
   a4114:   910006a2    add x2, x21, #0x1
   a4118:   35000081    cbnz    w1, a4128 <CString::Replace(char const*, char const*)+0xf8>
   a411c:   1400002c    b   a41cc <CString::Replace(char const*, char const*)+0x19c>
   a4120:   38c01c41    ldrsb   w1, [x2, #1]!
   a4124:   34000541    cbz w1, a41cc <CString::Replace(char const*, char const*)+0x19c>
   a4128:   39c00260    ldrsb   w0, [x19]
   a412c:   91000673    add x19, x19, #0x1
   a4130:   6b01001f    cmp w0, w1
   a4134:   54ffff60    b.eq    a4120 <CString::Replace(char const*, char const*)+0xf0>
   a4138:   aa0303f3    mov x19, x3
   a413c:   d2800021    mov x1, #0x1
   a4140:   aa1403e0    mov x0, x20
   a4144:   38c01679    ldrsb   w25, [x19], #1
   a4148:   97fffebe    bl  a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>
   a414c:   f9400e80    ldr x0, [x20, #24]
   a4150:   91000401    add x1, x0, #0x1
   a4154:   f9000e81    str x1, [x20, #24]
   a4158:   39000019    strb    w25, [x0]
   a415c:   aa1303e0    mov x0, x19
   a4160:   39c002a1    ldrsb   w1, [x21]
   a4164:   94000a2f    bl  a6a20 <strchr>
   a4168:   aa0003fa    mov x26, x0
   a416c:   b5fffb40    cbnz    x0, a40d4 <CString::Replace(char const*, char const*)+0xa4>
   a4170:   aa1303e0    mov x0, x19
   a4174:   94000973    bl  a6740 <strlen>
   a4178:   aa0003f5    mov x21, x0
   a417c:   b4000080    cbz x0, a418c <CString::Replace(char const*, char const*)+0x15c>
   a4180:   aa0003e1    mov x1, x0
   a4184:   aa1403e0    mov x0, x20
   a4188:   97fffeae    bl  a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>
   a418c:   f9400e80    ldr x0, [x20, #24]
   a4190:   aa1303e1    mov x1, x19
   a4194:   940009fb    bl  a6980 <strcpy>
   a4198:   f9400e81    ldr x1, [x20, #24]
   a419c:   aa1803e0    mov x0, x24
   a41a0:   8b150022    add x2, x1, x21
   a41a4:   f9000e82    str x2, [x20, #24]
   a41a8:   3835683f    strb    wzr, [x1, x21]
   a41ac:   94000da1    bl  a7830 <operator delete[](void*)>
   a41b0:   a94153f3    ldp x19, x20, [sp, #16]
   a41b4:   2a1703e0    mov w0, w23
   a41b8:   a9425bf5    ldp x21, x22, [sp, #32]
   a41bc:   a94363f7    ldp x23, x24, [sp, #48]
   a41c0:   a9446bf9    ldp x25, x26, [sp, #64]
   a41c4:   a8c57bfd    ldp x29, x30, [sp], #80
   a41c8:   d65f03c0    ret
   a41cc:   aa1603e0    mov x0, x22
   a41d0:   9400095c    bl  a6740 <strlen>
   a41d4:   aa0003f9    mov x25, x0
   a41d8:   b4000080    cbz x0, a41e8 <CString::Replace(char const*, char const*)+0x1b8>
   a41dc:   aa0003e1    mov x1, x0
   a41e0:   aa1403e0    mov x0, x20
   a41e4:   97fffe97    bl  a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>
   a41e8:   f9400e80    ldr x0, [x20, #24]
   a41ec:   aa1603e1    mov x1, x22
   a41f0:   110006f7    add w23, w23, #0x1
   a41f4:   940009e3    bl  a6980 <strcpy>
   a41f8:   f9400e80    ldr x0, [x20, #24]
   a41fc:   8b190000    add x0, x0, x25
   a4200:   f9000e80    str x0, [x20, #24]
   a4204:   17ffffaf    b   a40c0 <CString::Replace(char const*, char const*)+0x90>
   a4208:   d503201f    nop
   a420c:   d503201f    nop

00000000000a4210 <CString::PutChar(char, unsigned long)>:
   a4210:   b40002e2    cbz x2, a426c <CString::PutChar(char, unsigned long)+0x5c>
   a4214:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   a4218:   910003fd    mov x29, sp
   a421c:   f90013f5    str x21, [sp, #32]
   a4220:   13001c35    sxtb    w21, w1
   a4224:   aa0203e1    mov x1, x2
   a4228:   a90153f3    stp x19, x20, [sp, #16]
   a422c:   aa0203f3    mov x19, x2
   a4230:   aa0003f4    mov x20, x0
   a4234:   97fffe83    bl  a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>
   a4238:   d1000661    sub x1, x19, #0x1
   a423c:   d503201f    nop
   a4240:   f9400e82    ldr x2, [x20, #24]
   a4244:   d1000421    sub x1, x1, #0x1
   a4248:   b100043f    cmn x1, #0x1
   a424c:   91000440    add x0, x2, #0x1
   a4250:   f9000e80    str x0, [x20, #24]
   a4254:   39000055    strb    w21, [x2]
   a4258:   54ffff41    b.ne    a4240 <CString::PutChar(char, unsigned long)+0x30>
   a425c:   a94153f3    ldp x19, x20, [sp, #16]
   a4260:   f94013f5    ldr x21, [sp, #32]
   a4264:   a8c37bfd    ldp x29, x30, [sp], #48
   a4268:   d65f03c0    ret
   a426c:   d65f03c0    ret

00000000000a4270 <CString::PutString(char const*)>:
   a4270:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   a4274:   910003fd    mov x29, sp
   a4278:   a90153f3    stp x19, x20, [sp, #16]
   a427c:   aa0003f3    mov x19, x0
   a4280:   aa0103e0    mov x0, x1
   a4284:   f90013f5    str x21, [sp, #32]
   a4288:   aa0103f5    mov x21, x1
   a428c:   9400092d    bl  a6740 <strlen>
   a4290:   aa0003f4    mov x20, x0
   a4294:   b4000080    cbz x0, a42a4 <CString::PutString(char const*)+0x34>
   a4298:   aa0003e1    mov x1, x0
   a429c:   aa1303e0    mov x0, x19
   a42a0:   97fffe68    bl  a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>
   a42a4:   f9400e60    ldr x0, [x19, #24]
   a42a8:   aa1503e1    mov x1, x21
   a42ac:   940009b5    bl  a6980 <strcpy>
   a42b0:   f9400e60    ldr x0, [x19, #24]
   a42b4:   f94013f5    ldr x21, [sp, #32]
   a42b8:   8b140000    add x0, x0, x20
   a42bc:   f9000e60    str x0, [x19, #24]
   a42c0:   a94153f3    ldp x19, x20, [sp, #16]
   a42c4:   a8c37bfd    ldp x29, x30, [sp], #48
   a42c8:   d65f03c0    ret
   a42cc:   d503201f    nop

00000000000a42d0 <CString::ReserveSpace(unsigned long)>:
   a42d0:   b40004a1    cbz x1, a4364 <CString::ReserveSpace(unsigned long)+0x94>
   a42d4:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   a42d8:   910003fd    mov x29, sp
   a42dc:   a90153f3    stp x19, x20, [sp, #16]
   a42e0:   aa0003f4    mov x20, x0
   a42e4:   f9400682    ldr x2, [x20, #8]
   a42e8:   a9025bf5    stp x21, x22, [sp, #32]
   a42ec:   f9400e95    ldr x21, [x20, #24]
   a42f0:   b9401000    ldr w0, [x0, #16]
   a42f4:   cb0202b5    sub x21, x21, x2
   a42f8:   8b150021    add x1, x1, x21
   a42fc:   91000422    add x2, x1, #0x1
   a4300:   eb00005f    cmp x2, x0
   a4304:   540000a8    b.hi    a4318 <CString::ReserveSpace(unsigned long)+0x48>
   a4308:   a94153f3    ldp x19, x20, [sp, #16]
   a430c:   a9425bf5    ldp x21, x22, [sp, #32]
   a4310:   a8c37bfd    ldp x29, x30, [sp], #48
   a4314:   d65f03c0    ret
   a4318:   91010433    add x19, x1, #0x41
   a431c:   aa1303e0    mov x0, x19
   a4320:   94000d30    bl  a77e0 <operator new[](unsigned long)>
   a4324:   f9400e81    ldr x1, [x20, #24]
   a4328:   aa0003f6    mov x22, x0
   a432c:   3900003f    strb    wzr, [x1]
   a4330:   f9400681    ldr x1, [x20, #8]
   a4334:   94000993    bl  a6980 <strcpy>
   a4338:   f9400680    ldr x0, [x20, #8]
   a433c:   b4000040    cbz x0, a4344 <CString::ReserveSpace(unsigned long)+0x74>
   a4340:   94000d3c    bl  a7830 <operator delete[](void*)>
   a4344:   8b1502d5    add x21, x22, x21
   a4348:   f9000696    str x22, [x20, #8]
   a434c:   b9001293    str w19, [x20, #16]
   a4350:   f9000e95    str x21, [x20, #24]
   a4354:   a94153f3    ldp x19, x20, [sp, #16]
   a4358:   a9425bf5    ldp x21, x22, [sp, #32]
   a435c:   a8c37bfd    ldp x29, x30, [sp], #48
   a4360:   d65f03c0    ret
   a4364:   d65f03c0    ret
   a4368:   d503201f    nop
   a436c:   d503201f    nop

00000000000a4370 <CString::ntoa(char*, unsigned long, unsigned int, bool)>:
   a4370:   2a0203e2    mov w2, w2
   a4374:   12001c63    and w3, w3, #0xff
   a4378:   eb02003f    cmp x1, x2
   a437c:   d2800024    mov x4, #0x1
   a4380:   540003c3    b.cc    a43f8 <CString::ntoa(char*, unsigned long, unsigned int, bool)+0x88>
   a4384:   d503201f    nop
   a4388:   9b027c84    mul x4, x4, x2
   a438c:   9ac40826    udiv    x6, x1, x4
   a4390:   eb0200df    cmp x6, x2
   a4394:   aa0603e5    mov x5, x6
   a4398:   54ffff82    b.cs    a4388 <CString::ntoa(char*, unsigned long, unsigned int, bool)+0x18>
   a439c:   52000068    eor w8, w3, #0x1
   a43a0:   aa0003e7    mov x7, x0
   a43a4:   531b0908    ubfiz   w8, w8, #5, #3
   a43a8:   1100dd08    add w8, w8, #0x37
   a43ac:   12001d08    and w8, w8, #0xff
   a43b0:   14000004    b   a43c0 <CString::ntoa(char*, unsigned long, unsigned int, bool)+0x50>
   a43b4:   9ac60825    udiv    x5, x1, x6
   a43b8:   aa0603e4    mov x4, x6
   a43bc:   aa0503e6    mov x6, x5
   a43c0:   12001ca3    and w3, w5, #0xff
   a43c4:   f10024bf    cmp x5, #0x9
   a43c8:   9b0484c1    msub    x1, x6, x4, x1
   a43cc:   1100c065    add w5, w3, #0x30
   a43d0:   0b030103    add w3, w8, w3
   a43d4:   9ac20886    udiv    x6, x4, x2
   a43d8:   13001ca5    sxtb    w5, w5
   a43dc:   13001c63    sxtb    w3, w3
   a43e0:   1a858063    csel    w3, w3, w5, hi
   a43e4:   eb02009f    cmp x4, x2
   a43e8:   380014e3    strb    w3, [x7], #1
   a43ec:   54fffe42    b.cs    a43b4 <CString::ntoa(char*, unsigned long, unsigned int, bool)+0x44>
   a43f0:   390000ff    strb    wzr, [x7]
   a43f4:   d65f03c0    ret
   a43f8:   aa0103e5    mov x5, x1
   a43fc:   aa0103e6    mov x6, x1
   a4400:   17ffffe7    b   a439c <CString::ntoa(char*, unsigned long, unsigned int, bool)+0x2c>
   a4404:   d503201f    nop
   a4408:   d503201f    nop
   a440c:   d503201f    nop

00000000000a4410 <CString::lltoa(char*, unsigned long long, unsigned int, bool)>:
   a4410:   2a0203e2    mov w2, w2
   a4414:   12001c63    and w3, w3, #0xff
   a4418:   eb02003f    cmp x1, x2
   a441c:   d2800024    mov x4, #0x1
   a4420:   540003c3    b.cc    a4498 <CString::lltoa(char*, unsigned long long, unsigned int, bool)+0x88>
   a4424:   d503201f    nop
   a4428:   9b027c84    mul x4, x4, x2
   a442c:   9ac40826    udiv    x6, x1, x4
   a4430:   eb0200df    cmp x6, x2
   a4434:   aa0603e5    mov x5, x6
   a4438:   54ffff82    b.cs    a4428 <CString::lltoa(char*, unsigned long long, unsigned int, bool)+0x18>
   a443c:   52000068    eor w8, w3, #0x1
   a4440:   aa0003e7    mov x7, x0
   a4444:   531b0908    ubfiz   w8, w8, #5, #3
   a4448:   1100dd08    add w8, w8, #0x37
   a444c:   12001d08    and w8, w8, #0xff
   a4450:   14000004    b   a4460 <CString::lltoa(char*, unsigned long long, unsigned int, bool)+0x50>
   a4454:   9ac60825    udiv    x5, x1, x6
   a4458:   aa0603e4    mov x4, x6
   a445c:   aa0503e6    mov x6, x5
   a4460:   12001ca3    and w3, w5, #0xff
   a4464:   f10024bf    cmp x5, #0x9
   a4468:   9b0484c1    msub    x1, x6, x4, x1
   a446c:   1100c065    add w5, w3, #0x30
   a4470:   0b030103    add w3, w8, w3
   a4474:   9ac20886    udiv    x6, x4, x2
   a4478:   13001ca5    sxtb    w5, w5
   a447c:   13001c63    sxtb    w3, w3
   a4480:   1a858063    csel    w3, w3, w5, hi
   a4484:   eb02009f    cmp x4, x2
   a4488:   380014e3    strb    w3, [x7], #1
   a448c:   54fffe42    b.cs    a4454 <CString::lltoa(char*, unsigned long long, unsigned int, bool)+0x44>
   a4490:   390000ff    strb    wzr, [x7]
   a4494:   d65f03c0    ret
   a4498:   aa0103e5    mov x5, x1
   a449c:   aa0103e6    mov x6, x1
   a44a0:   17ffffe7    b   a443c <CString::lltoa(char*, unsigned long long, unsigned int, bool)+0x2c>
   a44a4:   d503201f    nop
   a44a8:   d503201f    nop
   a44ac:   d503201f    nop

00000000000a44b0 <CString::ftoa(char*, double, unsigned int)>:
   a44b0:   a9b97bfd    stp x29, x30, [sp, #-112]!
   a44b4:   910003fd    mov x29, sp
   a44b8:   1e602018    fcmpe   d0, #0.0
   a44bc:   a90153f3    stp x19, x20, [sp, #16]
   a44c0:   aa0003f3    mov x19, x0
   a44c4:   a9025bf5    stp x21, x22, [sp, #32]
   a44c8:   2a0103f5    mov w21, w1
   a44cc:   a90363f7    stp x23, x24, [sp, #48]
   a44d0:   fd0023e8    str d8, [sp, #64]
   a44d4:   1e604008    fmov    d8, d0
   a44d8:   54000ec4    b.mi    a46b0 <CString::ftoa(char*, double, unsigned int)+0x200>
   a44dc:   aa0003f8    mov x24, x0
   a44e0:   d2e87e00    mov x0, #0x43f0000000000000
   a44e4:   9e670000    fmov    d0, x0
   a44e8:   1e602110    fcmpe   d8, d0
   a44ec:   54000ecc    b.gt    a46c4 <CString::ftoa(char*, double, unsigned int)+0x214>
   a44f0:   9e790114    fcvtzu  x20, d8
   a44f4:   d2800022    mov x2, #0x1
   a44f8:   f100269f    cmp x20, #0x9
   a44fc:   54000fa9    b.ls    a46f0 <CString::ftoa(char*, double, unsigned int)+0x240>
   a4500:   8b020842    add x2, x2, x2, lsl #2
   a4504:   d37ff842    lsl x2, x2, #1
   a4508:   9ac20a83    udiv    x3, x20, x2
   a450c:   f100247f    cmp x3, #0x9
   a4510:   54ffff88    b.hi    a4500 <CString::ftoa(char*, double, unsigned int)+0x50>
   a4514:   b202e7e7    mov x7, #0xcccccccccccccccc
   a4518:   aa1803e0    mov x0, x24
   a451c:   aa1403e5    mov x5, x20
   a4520:   f29999a7    movk    x7, #0xcccd
   a4524:   14000003    b   a4530 <CString::ftoa(char*, double, unsigned int)+0x80>
   a4528:   aa0303e2    mov x2, x3
   a452c:   9ac308a3    udiv    x3, x5, x3
   a4530:   12001c64    and w4, w3, #0xff
   a4534:   f100247f    cmp x3, #0x9
   a4538:   1100c083    add w3, w4, #0x30
   a453c:   11015c84    add w4, w4, #0x57
   a4540:   13001c63    sxtb    w3, w3
   a4544:   13001c84    sxtb    w4, w4
   a4548:   1a838084    csel    w4, w4, w3, hi
   a454c:   9ac208a6    udiv    x6, x5, x2
   a4550:   f100245f    cmp x2, #0x9
   a4554:   38001404    strb    w4, [x0], #1
   a4558:   9bc77c43    umulh   x3, x2, x7
   a455c:   d343fc63    lsr x3, x3, #3
   a4560:   9b0294c5    msub    x5, x6, x2, x5
   a4564:   54fffe28    b.hi    a4528 <CString::ftoa(char*, double, unsigned int)+0x78>
   a4568:   3900001f    strb    wzr, [x0]
   a456c:   35000115    cbnz    w21, a458c <CString::ftoa(char*, double, unsigned int)+0xdc>
   a4570:   a9425bf5    ldp x21, x22, [sp, #32]
   a4574:   aa1303e0    mov x0, x19
   a4578:   a94153f3    ldp x19, x20, [sp, #16]
   a457c:   a94363f7    ldp x23, x24, [sp, #48]
   a4580:   fd4023e8    ldr d8, [sp, #64]
   a4584:   a8c77bfd    ldp x29, x30, [sp], #112
   a4588:   d65f03c0    ret
   a458c:   aa1803e0    mov x0, x24
   a4590:   52800276    mov w22, #0x13
   a4594:   9400086b    bl  a6740 <strlen>
   a4598:   528005c1    mov w1, #0x2e
   a459c:   71004ebf    cmp w21, #0x13
   a45a0:   1a9692b6    csel    w22, w21, w22, ls
   a45a4:   8b000317    add x23, x24, x0
   a45a8:   710006bf    cmp w21, #0x1
   a45ac:   38206b01    strb    w1, [x24, x0]
   a45b0:   910006f5    add x21, x23, #0x1
   a45b4:   54000a60    b.eq    a4700 <CString::ftoa(char*, double, unsigned int)+0x250>
   a45b8:   52800040    mov w0, #0x2
   a45bc:   d2800141    mov x1, #0xa
   a45c0:   8b010821    add x1, x1, x1, lsl #2
   a45c4:   11000400    add w0, w0, #0x1
   a45c8:   6b0002df    cmp w22, w0
   a45cc:   d37ff821    lsl x1, x1, #1
   a45d0:   54ffff82    b.cs    a45c0 <CString::ftoa(char*, double, unsigned int)+0x110>
   a45d4:   9e630020    ucvtf   d0, x1
   a45d8:   9e630281    ucvtf   d1, x20
   a45dc:   d2800021    mov x1, #0x1
   a45e0:   1e613908    fsub    d8, d8, d1
   a45e4:   1e600908    fmul    d8, d8, d0
   a45e8:   9e790104    fcvtzu  x4, d8
   a45ec:   f100249f    cmp x4, #0x9
   a45f0:   540008c9    b.ls    a4708 <CString::ftoa(char*, double, unsigned int)+0x258>
   a45f4:   d503201f    nop
   a45f8:   8b010821    add x1, x1, x1, lsl #2
   a45fc:   d37ff821    lsl x1, x1, #1
   a4600:   9ac10882    udiv    x2, x4, x1
   a4604:   f100245f    cmp x2, #0x9
   a4608:   54ffff88    b.hi    a45f8 <CString::ftoa(char*, double, unsigned int)+0x148>
   a460c:   b202e7e7    mov x7, #0xcccccccccccccccc
   a4610:   910163e5    add x5, sp, #0x58
   a4614:   f29999a7    movk    x7, #0xcccd
   a4618:   14000003    b   a4624 <CString::ftoa(char*, double, unsigned int)+0x174>
   a461c:   aa0203e1    mov x1, x2
   a4620:   9ac20882    udiv    x2, x4, x2
   a4624:   12001c43    and w3, w2, #0xff
   a4628:   f100245f    cmp x2, #0x9
   a462c:   1100c060    add w0, w3, #0x30
   a4630:   11015c63    add w3, w3, #0x57
   a4634:   13001c00    sxtb    w0, w0
   a4638:   13001c63    sxtb    w3, w3
   a463c:   1a808063    csel    w3, w3, w0, hi
   a4640:   9ac10886    udiv    x6, x4, x1
   a4644:   f100243f    cmp x1, #0x9
   a4648:   380014a3    strb    w3, [x5], #1
   a464c:   9bc77c22    umulh   x2, x1, x7
   a4650:   d343fc42    lsr x2, x2, #3
   a4654:   9b0190c4    msub    x4, x6, x1, x4
   a4658:   54fffe28    b.hi    a461c <CString::ftoa(char*, double, unsigned int)+0x16c>
   a465c:   910163e0    add x0, sp, #0x58
   a4660:   390000bf    strb    wzr, [x5]
   a4664:   94000837    bl  a6740 <strlen>
   a4668:   4b0002d6    sub w22, w22, w0
   a466c:   510006c0    sub w0, w22, #0x1
   a4670:   34000456    cbz w22, a46f8 <CString::ftoa(char*, double, unsigned int)+0x248>
   a4674:   91000800    add x0, x0, #0x2
   a4678:   52800601    mov w1, #0x30
   a467c:   8b0002e0    add x0, x23, x0
   a4680:   380016a1    strb    w1, [x21], #1
   a4684:   eb0002bf    cmp x21, x0
   a4688:   54ffffc1    b.ne    a4680 <CString::ftoa(char*, double, unsigned int)+0x1d0>
   a468c:   910163e1    add x1, sp, #0x58
   a4690:   940008bc    bl  a6980 <strcpy>
   a4694:   a9425bf5    ldp x21, x22, [sp, #32]
   a4698:   aa1303e0    mov x0, x19
   a469c:   a94153f3    ldp x19, x20, [sp, #16]
   a46a0:   a94363f7    ldp x23, x24, [sp, #48]
   a46a4:   fd4023e8    ldr d8, [sp, #64]
   a46a8:   a8c77bfd    ldp x29, x30, [sp], #112
   a46ac:   d65f03c0    ret
   a46b0:   aa0003f8    mov x24, x0
   a46b4:   528005a0    mov w0, #0x2d
   a46b8:   1e614008    fneg    d8, d0
   a46bc:   38001700    strb    w0, [x24], #1
   a46c0:   17ffff88    b   a44e0 <CString::ftoa(char*, double, unsigned int)+0x30>
   a46c4:   aa1803e0    mov x0, x24
   a46c8:   f0000061    adrp    x1, b3000 <_etext+0x3f9c>
   a46cc:   910d6021    add x1, x1, #0x358
   a46d0:   940008ac    bl  a6980 <strcpy>
   a46d4:   a9425bf5    ldp x21, x22, [sp, #32]
   a46d8:   aa1303e0    mov x0, x19
   a46dc:   a94153f3    ldp x19, x20, [sp, #16]
   a46e0:   a94363f7    ldp x23, x24, [sp, #48]
   a46e4:   fd4023e8    ldr d8, [sp, #64]
   a46e8:   a8c77bfd    ldp x29, x30, [sp], #112
   a46ec:   d65f03c0    ret
   a46f0:   aa1403e3    mov x3, x20
   a46f4:   17ffff88    b   a4514 <CString::ftoa(char*, double, unsigned int)+0x64>
   a46f8:   aa1503e0    mov x0, x21
   a46fc:   17ffffe4    b   a468c <CString::ftoa(char*, double, unsigned int)+0x1dc>
   a4700:   1e649000    fmov    d0, #1.000000000000000000e+01
   a4704:   17ffffb5    b   a45d8 <CString::ftoa(char*, double, unsigned int)+0x128>
   a4708:   aa0403e2    mov x2, x4
   a470c:   17ffffc0    b   a460c <CString::ftoa(char*, double, unsigned int)+0x15c>

00000000000a4710 <CString::FormatV(char const*, std::__va_list)>:
   a4710:   a9b57bfd    stp x29, x30, [sp, #-176]!
   a4714:   910003fd    mov x29, sp
   a4718:   a90363f7    stp x23, x24, [sp, #48]
   a471c:   a90573fb    stp x27, x28, [sp, #80]
   a4720:   aa0103fb    mov x27, x1
   a4724:   aa0003fc    mov x28, x0
   a4728:   a9400458    ldp x24, x1, [x2]
   a472c:   a90153f3    stp x19, x20, [sp, #16]
   a4730:   aa0203f4    mov x20, x2
   a4734:   f90037e1    str x1, [sp, #104]
   a4738:   b9401c41    ldr w1, [x2, #28]
   a473c:   a9025bf5    stp x21, x22, [sp, #32]
   a4740:   f9400400    ldr x0, [x0, #8]
   a4744:   b90067e1    str w1, [sp, #100]
   a4748:   b9401855    ldr w21, [x2, #24]
   a474c:   b4000040    cbz x0, a4754 <CString::FormatV(char const*, std::__va_list)+0x44>
   a4750:   94000c38    bl  a7830 <operator delete[](void*)>
   a4754:   52800801    mov w1, #0x40
   a4758:   d2800800    mov x0, #0x40
   a475c:   b9001381    str w1, [x28, #16]
   a4760:   94000c20    bl  a77e0 <operator new[](unsigned long)>
   a4764:   f9000780    str x0, [x28, #8]
   a4768:   f9000f80    str x0, [x28, #24]
   a476c:   39c00373    ldrsb   w19, [x27]
   a4770:   34000ab3    cbz w19, a48c4 <CString::FormatV(char const*, std::__va_list)+0x1b4>
   a4774:   a9046bf9    stp x25, x26, [sp, #64]
   a4778:   7100967f    cmp w19, #0x25
   a477c:   54000b21    b.ne    a48e0 <CString::FormatV(char const*, std::__va_list)+0x1d0>
   a4780:   39c00764    ldrsb   w4, [x27, #1]
   a4784:   7100949f    cmp w4, #0x25
   a4788:   54001900    b.eq    a4aa8 <CString::FormatV(char const*, std::__va_list)+0x398>
   a478c:   71008c9f    cmp w4, #0x23
   a4790:   54001840    b.eq    a4a98 <CString::FormatV(char const*, std::__va_list)+0x388>
   a4794:   9100077b    add x27, x27, #0x1
   a4798:   52800007    mov w7, #0x0
   a479c:   7100b49f    cmp w4, #0x2d
   a47a0:   52800016    mov w22, #0x0
   a47a4:   54000081    b.ne    a47b4 <CString::FormatV(char const*, std::__va_list)+0xa4>
   a47a8:   39c00764    ldrsb   w4, [x27, #1]
   a47ac:   52800036    mov w22, #0x1
   a47b0:   9100077b    add x27, x27, #0x1
   a47b4:   7100c09f    cmp w4, #0x30
   a47b8:   52800017    mov w23, #0x0
   a47bc:   54000081    b.ne    a47cc <CString::FormatV(char const*, std::__va_list)+0xbc>
   a47c0:   39c00764    ldrsb   w4, [x27, #1]
   a47c4:   52800037    mov w23, #0x1
   a47c8:   9100077b    add x27, x27, #0x1
   a47cc:   5100c083    sub w3, w4, #0x30
   a47d0:   d2800013    mov x19, #0x0
   a47d4:   12001c60    and w0, w3, #0xff
   a47d8:   7100241f    cmp w0, #0x9
   a47dc:   54000128    b.hi    a4800 <CString::FormatV(char const*, std::__va_list)+0xf0>
   a47e0:   38c01f64    ldrsb   w4, [x27, #1]!
   a47e4:   8b130a73    add x19, x19, x19, lsl #2
   a47e8:   93401c63    sxtb    x3, w3
   a47ec:   8b130473    add x19, x3, x19, lsl #1
   a47f0:   5100c083    sub w3, w4, #0x30
   a47f4:   12001c62    and w2, w3, #0xff
   a47f8:   7100245f    cmp w2, #0x9
   a47fc:   54ffff29    b.ls    a47e0 <CString::FormatV(char const*, std::__va_list)+0xd0>
   a4800:   7100b89f    cmp w4, #0x2e
   a4804:   54002760    b.eq    a4cf0 <CString::FormatV(char const*, std::__va_list)+0x5e0>
   a4808:   39c00360    ldrsb   w0, [x27]
   a480c:   528000c1    mov w1, #0x6
   a4810:   7101b01f    cmp w0, #0x6c
   a4814:   52800004    mov w4, #0x0
   a4818:   52800019    mov w25, #0x0
   a481c:   54000b20    b.eq    a4980 <CString::FormatV(char const*, std::__va_list)+0x270>
   a4820:   7101bc1f    cmp w0, #0x6f
   a4824:   54000bc0    b.eq    a499c <CString::FormatV(char const*, std::__va_list)+0x28c>
   a4828:   540006cc    b.gt    a4900 <CString::FormatV(char const*, std::__va_list)+0x1f0>
   a482c:   7101901f    cmp w0, #0x64
   a4830:   54001860    b.eq    a4b3c <CString::FormatV(char const*, std::__va_list)+0x42c>
   a4834:   540014cd    b.le    a4acc <CString::FormatV(char const*, std::__va_list)+0x3bc>
   a4838:   7101981f    cmp w0, #0x66
   a483c:   540017c1    b.ne    a4b34 <CString::FormatV(char const*, std::__va_list)+0x424>
   a4840:   b94067e0    ldr w0, [sp, #100]
   a4844:   37f84780    tbnz    w0, #31, a5134 <CString::FormatV(char const*, std::__va_list)+0xa24>
   a4848:   91003f1a    add x26, x24, #0xf
   a484c:   927df35a    and x26, x26, #0xfffffffffffffff8
   a4850:   fd400300    ldr d0, [x24]
   a4854:   910203f9    add x25, sp, #0x80
   a4858:   aa1903e0    mov x0, x25
   a485c:   97ffff15    bl  a44b0 <CString::ftoa(char*, double, unsigned int)>
   a4860:   aa1903e0    mov x0, x25
   a4864:   940007b7    bl  a6740 <strlen>
   a4868:   aa0003f8    mov x24, x0
   a486c:   35004bf6    cbnz    w22, a51e8 <CString::FormatV(char const*, std::__va_list)+0xad8>
   a4870:   eb13001f    cmp x0, x19
   a4874:   54004163    b.cc    a50a0 <CString::FormatV(char const*, std::__va_list)+0x990>
   a4878:   aa1903e0    mov x0, x25
   a487c:   940007b1    bl  a6740 <strlen>
   a4880:   aa0003f3    mov x19, x0
   a4884:   b4000080    cbz x0, a4894 <CString::FormatV(char const*, std::__va_list)+0x184>
   a4888:   aa0003e1    mov x1, x0
   a488c:   aa1c03e0    mov x0, x28
   a4890:   97fffcec    bl  a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>
   a4894:   f9400f80    ldr x0, [x28, #24]
   a4898:   aa1903e1    mov x1, x25
   a489c:   94000839    bl  a6980 <strcpy>
   a48a0:   f9400f80    ldr x0, [x28, #24]
   a48a4:   8b130000    add x0, x0, x19
   a48a8:   f9000f80    str x0, [x28, #24]
   a48ac:   aa1a03f8    mov x24, x26
   a48b0:   9100077b    add x27, x27, #0x1
   a48b4:   39c00373    ldrsb   w19, [x27]
   a48b8:   35fff613    cbnz    w19, a4778 <CString::FormatV(char const*, std::__va_list)+0x68>
   a48bc:   f9400f80    ldr x0, [x28, #24]
   a48c0:   a9446bf9    ldp x25, x26, [sp, #64]
   a48c4:   3900001f    strb    wzr, [x0]
   a48c8:   a94153f3    ldp x19, x20, [sp, #16]
   a48cc:   a9425bf5    ldp x21, x22, [sp, #32]
   a48d0:   a94363f7    ldp x23, x24, [sp, #48]
   a48d4:   a94573fb    ldp x27, x28, [sp, #80]
   a48d8:   a8cb7bfd    ldp x29, x30, [sp], #176
   a48dc:   d65f03c0    ret
   a48e0:   d2800021    mov x1, #0x1
   a48e4:   aa1c03e0    mov x0, x28
   a48e8:   97fffcd6    bl  a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>
   a48ec:   f9400f80    ldr x0, [x28, #24]
   a48f0:   91000401    add x1, x0, #0x1
   a48f4:   f9000f81    str x1, [x28, #24]
   a48f8:   39000013    strb    w19, [x0]
   a48fc:   17ffffed    b   a48b0 <CString::FormatV(char const*, std::__va_list)+0x1a0>
   a4900:   7101d41f    cmp w0, #0x75
   a4904:   54002180    b.eq    a4d34 <CString::FormatV(char const*, std::__va_list)+0x624>
   a4908:   5400196c    b.gt    a4c34 <CString::FormatV(char const*, std::__va_list)+0x524>
   a490c:   7101c01f    cmp w0, #0x70
   a4910:   54001960    b.eq    a4c3c <CString::FormatV(char const*, std::__va_list)+0x52c>
   a4914:   7101cc1f    cmp w0, #0x73
   a4918:   54001d41    b.ne    a4cc0 <CString::FormatV(char const*, std::__va_list)+0x5b0>
   a491c:   37f83fb5    tbnz    w21, #31, a5110 <CString::FormatV(char const*, std::__va_list)+0xa00>
   a4920:   91003f19    add x25, x24, #0xf
   a4924:   927df339    and x25, x25, #0xfffffffffffffff8
   a4928:   f9400318    ldr x24, [x24]
   a492c:   aa1803e0    mov x0, x24
   a4930:   94000784    bl  a6740 <strlen>
   a4934:   aa0003fa    mov x26, x0
   a4938:   350041d6    cbnz    w22, a5170 <CString::FormatV(char const*, std::__va_list)+0xa60>
   a493c:   eb13001f    cmp x0, x19
   a4940:   54003cc3    b.cc    a50d8 <CString::FormatV(char const*, std::__va_list)+0x9c8>
   a4944:   aa1803e0    mov x0, x24
   a4948:   9400077e    bl  a6740 <strlen>
   a494c:   aa0003f3    mov x19, x0
   a4950:   b4000080    cbz x0, a4960 <CString::FormatV(char const*, std::__va_list)+0x250>
   a4954:   aa0003e1    mov x1, x0
   a4958:   aa1c03e0    mov x0, x28
   a495c:   97fffcb9    bl  a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>
   a4960:   f9400f80    ldr x0, [x28, #24]
   a4964:   aa1803e1    mov x1, x24
   a4968:   94000806    bl  a6980 <strcpy>
   a496c:   f9400f80    ldr x0, [x28, #24]
   a4970:   8b130000    add x0, x0, x19
   a4974:   f9000f80    str x0, [x28, #24]
   a4978:   aa1903f8    mov x24, x25
   a497c:   17ffffcd    b   a48b0 <CString::FormatV(char const*, std::__va_list)+0x1a0>
   a4980:   39c00760    ldrsb   w0, [x27, #1]
   a4984:   52800039    mov w25, #0x1
   a4988:   7101b01f    cmp w0, #0x6c
   a498c:   54000c80    b.eq    a4b1c <CString::FormatV(char const*, std::__va_list)+0x40c>
   a4990:   9100077b    add x27, x27, #0x1
   a4994:   7101bc1f    cmp w0, #0x6f
   a4998:   54fff481    b.ne    a4828 <CString::FormatV(char const*, std::__va_list)+0x118>
   a499c:   d2800102    mov x2, #0x8
   a49a0:   35003207    cbnz    w7, a4fe0 <CString::FormatV(char const*, std::__va_list)+0x8d0>
   a49a4:   34001824    cbz w4, a4ca8 <CString::FormatV(char const*, std::__va_list)+0x598>
   a49a8:   37f824d5    tbnz    w21, #31, a4e40 <CString::FormatV(char const*, std::__va_list)+0x730>
   a49ac:   91003f1a    add x26, x24, #0xf
   a49b0:   927df35a    and x26, x26, #0xfffffffffffffff8
   a49b4:   f9400307    ldr x7, [x24]
   a49b8:   eb0200ff    cmp x7, x2
   a49bc:   54004b43    b.cc    a5324 <CString::FormatV(char const*, std::__va_list)+0xc14>
   a49c0:   d2800021    mov x1, #0x1
   a49c4:   d503201f    nop
   a49c8:   9b027c21    mul x1, x1, x2
   a49cc:   9ac108e4    udiv    x4, x7, x1
   a49d0:   eb02009f    cmp x4, x2
   a49d4:   aa0403e3    mov x3, x4
   a49d8:   54ffff82    b.cs    a49c8 <CString::FormatV(char const*, std::__va_list)+0x2b8>
   a49dc:   7101601f    cmp w0, #0x58
   a49e0:   910203f9    add x25, sp, #0x80
   a49e4:   1a9f07e9    cset    w9, ne
   a49e8:   531b6929    lsl w9, w9, #5
   a49ec:   aa1903e8    mov x8, x25
   a49f0:   1100dd29    add w9, w9, #0x37
   a49f4:   14000004    b   a4a04 <CString::FormatV(char const*, std::__va_list)+0x2f4>
   a49f8:   9ac408e3    udiv    x3, x7, x4
   a49fc:   aa0403e1    mov x1, x4
   a4a00:   aa0303e4    mov x4, x3
   a4a04:   12001c60    and w0, w3, #0xff
   a4a08:   f100247f    cmp x3, #0x9
   a4a0c:   9b019c87    msub    x7, x4, x1, x7
   a4a10:   1100c003    add w3, w0, #0x30
   a4a14:   0b000120    add w0, w9, w0
   a4a18:   9ac20824    udiv    x4, x1, x2
   a4a1c:   13001c63    sxtb    w3, w3
   a4a20:   13001c00    sxtb    w0, w0
   a4a24:   1a838000    csel    w0, w0, w3, hi
   a4a28:   eb02003f    cmp x1, x2
   a4a2c:   38001500    strb    w0, [x8], #1
   a4a30:   54fffe42    b.cs    a49f8 <CString::FormatV(char const*, std::__va_list)+0x2e8>
   a4a34:   aa1903e0    mov x0, x25
   a4a38:   3900011f    strb    wzr, [x8]
   a4a3c:   94000741    bl  a6740 <strlen>
   a4a40:   aa0003f8    mov x24, x0
   a4a44:   350017d6    cbnz    w22, a4d3c <CString::FormatV(char const*, std::__va_list)+0x62c>
   a4a48:   eb00027f    cmp x19, x0
   a4a4c:   54fff169    b.ls    a4878 <CString::FormatV(char const*, std::__va_list)+0x168>
   a4a50:   cb000273    sub x19, x19, x0
   a4a54:   710002ff    cmp w23, #0x0
   a4a58:   52800402    mov w2, #0x20
   a4a5c:   aa1c03e0    mov x0, x28
   a4a60:   aa1303e1    mov x1, x19
   a4a64:   52800618    mov w24, #0x30
   a4a68:   1a821318    csel    w24, w24, w2, ne
   a4a6c:   97fffc75    bl  a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>
   a4a70:   d1000663    sub x3, x19, #0x1
   a4a74:   d503201f    nop
   a4a78:   f9400f80    ldr x0, [x28, #24]
   a4a7c:   d1000463    sub x3, x3, #0x1
   a4a80:   b100047f    cmn x3, #0x1
   a4a84:   91000401    add x1, x0, #0x1
   a4a88:   f9000f81    str x1, [x28, #24]
   a4a8c:   39000018    strb    w24, [x0]
   a4a90:   54ffff41    b.ne    a4a78 <CString::FormatV(char const*, std::__va_list)+0x368>
   a4a94:   17ffff79    b   a4878 <CString::FormatV(char const*, std::__va_list)+0x168>
   a4a98:   39c00b64    ldrsb   w4, [x27, #2]
   a4a9c:   52800027    mov w7, #0x1
   a4aa0:   91000b7b    add x27, x27, #0x2
   a4aa4:   17ffff3e    b   a479c <CString::FormatV(char const*, std::__va_list)+0x8c>
   a4aa8:   d2800021    mov x1, #0x1
   a4aac:   aa1c03e0    mov x0, x28
   a4ab0:   97fffc64    bl  a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>
   a4ab4:   f9400f80    ldr x0, [x28, #24]
   a4ab8:   91000b7b    add x27, x27, #0x2
   a4abc:   91000401    add x1, x0, #0x1
   a4ac0:   f9000f81    str x1, [x28, #24]
   a4ac4:   39000013    strb    w19, [x0]
   a4ac8:   17ffff7b    b   a48b4 <CString::FormatV(char const*, std::__va_list)+0x1a4>
   a4acc:   7101601f    cmp w0, #0x58
   a4ad0:   540027c0    b.eq    a4fc8 <CString::FormatV(char const*, std::__va_list)+0x8b8>
   a4ad4:   71018c1f    cmp w0, #0x63
   a4ad8:   54000f41    b.ne    a4cc0 <CString::FormatV(char const*, std::__va_list)+0x5b0>
   a4adc:   37f833d5    tbnz    w21, #31, a5154 <CString::FormatV(char const*, std::__va_list)+0xa44>
   a4ae0:   91002f19    add x25, x24, #0xb
   a4ae4:   927df339    and x25, x25, #0xfffffffffffffff8
   a4ae8:   39c00318    ldrsb   w24, [x24]
   a4aec:   35003bb6    cbnz    w22, a5260 <CString::FormatV(char const*, std::__va_list)+0xb50>
   a4af0:   f100067f    cmp x19, #0x1
   a4af4:   54002b08    b.hi    a5054 <CString::FormatV(char const*, std::__va_list)+0x944>
   a4af8:   d2800021    mov x1, #0x1
   a4afc:   aa1c03e0    mov x0, x28
   a4b00:   97fffc50    bl  a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>
   a4b04:   f9400f80    ldr x0, [x28, #24]
   a4b08:   91000401    add x1, x0, #0x1
   a4b0c:   f9000f81    str x1, [x28, #24]
   a4b10:   39000018    strb    w24, [x0]
   a4b14:   aa1903f8    mov x24, x25
   a4b18:   17ffff66    b   a48b0 <CString::FormatV(char const*, std::__va_list)+0x1a0>
   a4b1c:   39c00b60    ldrsb   w0, [x27, #2]
   a4b20:   9100077b    add x27, x27, #0x1
   a4b24:   2a1903e4    mov w4, w25
   a4b28:   9100077b    add x27, x27, #0x1
   a4b2c:   52800019    mov w25, #0x0
   a4b30:   17ffff99    b   a4994 <CString::FormatV(char const*, std::__va_list)+0x284>
   a4b34:   7101a41f    cmp w0, #0x69
   a4b38:   54000c41    b.ne    a4cc0 <CString::FormatV(char const*, std::__va_list)+0x5b0>
   a4b3c:   1200009a    and w26, w4, #0x1
   a4b40:   340018e4    cbz w4, a4e5c <CString::FormatV(char const*, std::__va_list)+0x74c>
   a4b44:   37f83e15    tbnz    w21, #31, a5304 <CString::FormatV(char const*, std::__va_list)+0xbf4>
   a4b48:   91003f01    add x1, x24, #0xf
   a4b4c:   aa1803e0    mov x0, x24
   a4b50:   927df038    and x24, x1, #0xfffffffffffffff8
   a4b54:   f9400002    ldr x2, [x0]
   a4b58:   b7f82ea2    tbnz    x2, #63, a512c <CString::FormatV(char const*, std::__va_list)+0xa1c>
   a4b5c:   5280001a    mov w26, #0x0
   a4b60:   f100245f    cmp x2, #0x9
   a4b64:   aa0203e3    mov x3, x2
   a4b68:   d2800020    mov x0, #0x1
   a4b6c:   54004aad    b.le    a54c0 <CString::FormatV(char const*, std::__va_list)+0xdb0>
   a4b70:   8b000800    add x0, x0, x0, lsl #2
   a4b74:   d37ff800    lsl x0, x0, #1
   a4b78:   9ac00841    udiv    x1, x2, x0
   a4b7c:   f100243f    cmp x1, #0x9
   a4b80:   54ffff88    b.hi    a4b70 <CString::FormatV(char const*, std::__va_list)+0x460>
   a4b84:   910203f9    add x25, sp, #0x80
   a4b88:   b202e7e9    mov x9, #0xcccccccccccccccc
   a4b8c:   f29999a9    movk    x9, #0xcccd
   a4b90:   aa1903e7    mov x7, x25
   a4b94:   14000003    b   a4ba0 <CString::FormatV(char const*, std::__va_list)+0x490>
   a4b98:   aa0103e0    mov x0, x1
   a4b9c:   9ac10861    udiv    x1, x3, x1
   a4ba0:   12001c22    and w2, w1, #0xff
   a4ba4:   f100243f    cmp x1, #0x9
   a4ba8:   1100c044    add w4, w2, #0x30
   a4bac:   11015c41    add w1, w2, #0x57
   a4bb0:   13001c21    sxtb    w1, w1
   a4bb4:   13001c82    sxtb    w2, w4
   a4bb8:   1a828021    csel    w1, w1, w2, hi
   a4bbc:   9ac00868    udiv    x8, x3, x0
   a4bc0:   380014e1    strb    w1, [x7], #1
   a4bc4:   f100241f    cmp x0, #0x9
   a4bc8:   9bc97c01    umulh   x1, x0, x9
   a4bcc:   d343fc21    lsr x1, x1, #3
   a4bd0:   9b008d03    msub    x3, x8, x0, x3
   a4bd4:   54fffe28    b.hi    a4b98 <CString::FormatV(char const*, std::__va_list)+0x488>
   a4bd8:   aa1903e0    mov x0, x25
   a4bdc:   390000ff    strb    wzr, [x7]
   a4be0:   940006d8    bl  a6740 <strlen>
   a4be4:   aa0003e2    mov x2, x0
   a4be8:   3500193a    cbnz    w26, a4f0c <CString::FormatV(char const*, std::__va_list)+0x7fc>
   a4bec:   35001a96    cbnz    w22, a4f3c <CString::FormatV(char const*, std::__va_list)+0x82c>
   a4bf0:   34003cf7    cbz w23, a538c <CString::FormatV(char const*, std::__va_list)+0xc7c>
   a4bf4:   eb02027f    cmp x19, x2
   a4bf8:   54004488    b.hi    a5488 <CString::FormatV(char const*, std::__va_list)+0xd78>
   a4bfc:   aa1903e0    mov x0, x25
   a4c00:   940006d0    bl  a6740 <strlen>
   a4c04:   aa0003f3    mov x19, x0
   a4c08:   b4000080    cbz x0, a4c18 <CString::FormatV(char const*, std::__va_list)+0x508>
   a4c0c:   aa0003e1    mov x1, x0
   a4c10:   aa1c03e0    mov x0, x28
   a4c14:   97fffc0b    bl  a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>
   a4c18:   f9400f80    ldr x0, [x28, #24]
   a4c1c:   aa1903e1    mov x1, x25
   a4c20:   94000758    bl  a6980 <strcpy>
   a4c24:   f9400f80    ldr x0, [x28, #24]
   a4c28:   8b130000    add x0, x0, x19
   a4c2c:   f9000f80    str x0, [x28, #24]
   a4c30:   17ffff20    b   a48b0 <CString::FormatV(char const*, std::__va_list)+0x1a0>
   a4c34:   7101e01f    cmp w0, #0x78
   a4c38:   54000441    b.ne    a4cc0 <CString::FormatV(char const*, std::__va_list)+0x5b0>
   a4c3c:   d2800202    mov x2, #0x10
   a4c40:   34ffeb27    cbz w7, a49a4 <CString::FormatV(char const*, std::__va_list)+0x294>
   a4c44:   f0000060    adrp    x0, b3000 <_etext+0x3f9c>
   a4c48:   910dc000    add x0, x0, #0x370
   a4c4c:   f9003be0    str x0, [sp, #112]
   a4c50:   f9403be0    ldr x0, [sp, #112]
   a4c54:   b9007be4    str w4, [sp, #120]
   a4c58:   940006ba    bl  a6740 <strlen>
   a4c5c:   b9407be4    ldr w4, [sp, #120]
   a4c60:   aa0003fa    mov x26, x0
   a4c64:   b40000c0    cbz x0, a4c7c <CString::FormatV(char const*, std::__va_list)+0x56c>
   a4c68:   aa0003e1    mov x1, x0
   a4c6c:   aa1c03e0    mov x0, x28
   a4c70:   b9007be4    str w4, [sp, #120]
   a4c74:   97fffbf3    bl  a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>
   a4c78:   b9407be4    ldr w4, [sp, #120]
   a4c7c:   b9007be4    str w4, [sp, #120]
   a4c80:   f9400f80    ldr x0, [x28, #24]
   a4c84:   f9403be1    ldr x1, [sp, #112]
   a4c88:   9400073e    bl  a6980 <strcpy>
   a4c8c:   f9400f80    ldr x0, [x28, #24]
   a4c90:   d2800202    mov x2, #0x10
   a4c94:   b9407be4    ldr w4, [sp, #120]
   a4c98:   8b1a0000    add x0, x0, x26
   a4c9c:   f9000f80    str x0, [x28, #24]
   a4ca0:   39c00360    ldrsb   w0, [x27]
   a4ca4:   35ffe824    cbnz    w4, a49a8 <CString::FormatV(char const*, std::__va_list)+0x298>
   a4ca8:   34000879    cbz w25, a4db4 <CString::FormatV(char const*, std::__va_list)+0x6a4>
   a4cac:   37f81b75    tbnz    w21, #31, a5018 <CString::FormatV(char const*, std::__va_list)+0x908>
   a4cb0:   91003f1a    add x26, x24, #0xf
   a4cb4:   f9400307    ldr x7, [x24]
   a4cb8:   927df35a    and x26, x26, #0xfffffffffffffff8
   a4cbc:   14000042    b   a4dc4 <CString::FormatV(char const*, std::__va_list)+0x6b4>
   a4cc0:   d2800021    mov x1, #0x1
   a4cc4:   aa1c03e0    mov x0, x28
   a4cc8:   97fffbde    bl  a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>
   a4ccc:   f9400f82    ldr x2, [x28, #24]
   a4cd0:   d2800021    mov x1, #0x1
   a4cd4:   528004a3    mov w3, #0x25
   a4cd8:   aa1c03e0    mov x0, x28
   a4cdc:   8b010044    add x4, x2, x1
   a4ce0:   f9000f84    str x4, [x28, #24]
   a4ce4:   39000043    strb    w3, [x2]
   a4ce8:   39c00373    ldrsb   w19, [x27]
   a4cec:   17fffeff    b   a48e8 <CString::FormatV(char const*, std::__va_list)+0x1d8>
   a4cf0:   39c00760    ldrsb   w0, [x27, #1]
   a4cf4:   9100077b    add x27, x27, #0x1
   a4cf8:   5100c001    sub w1, w0, #0x30
   a4cfc:   12001c21    and w1, w1, #0xff
   a4d00:   7100243f    cmp w1, #0x9
   a4d04:   52800001    mov w1, #0x0
   a4d08:   54ffd848    b.hi    a4810 <CString::FormatV(char const*, std::__va_list)+0x100>
   a4d0c:   d503201f    nop
   a4d10:   0b010821    add w1, w1, w1, lsl #2
   a4d14:   0b010401    add w1, w0, w1, lsl #1
   a4d18:   38c01f60    ldrsb   w0, [x27, #1]!
   a4d1c:   5100c021    sub w1, w1, #0x30
   a4d20:   5100c002    sub w2, w0, #0x30
   a4d24:   12001c42    and w2, w2, #0xff
   a4d28:   7100245f    cmp w2, #0x9
   a4d2c:   54ffff29    b.ls    a4d10 <CString::FormatV(char const*, std::__va_list)+0x600>
   a4d30:   17fffeb8    b   a4810 <CString::FormatV(char const*, std::__va_list)+0x100>
   a4d34:   d2800142    mov x2, #0xa
   a4d38:   17ffff1b    b   a49a4 <CString::FormatV(char const*, std::__va_list)+0x294>
   a4d3c:   aa1903e0    mov x0, x25
   a4d40:   94000680    bl  a6740 <strlen>
   a4d44:   aa0003f7    mov x23, x0
   a4d48:   b4000080    cbz x0, a4d58 <CString::FormatV(char const*, std::__va_list)+0x648>
   a4d4c:   aa0003e1    mov x1, x0
   a4d50:   aa1c03e0    mov x0, x28
   a4d54:   97fffbbb    bl  a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>
   a4d58:   f9400f80    ldr x0, [x28, #24]
   a4d5c:   aa1903e1    mov x1, x25
   a4d60:   94000708    bl  a6980 <strcpy>
   a4d64:   f9400f80    ldr x0, [x28, #24]
   a4d68:   eb18027f    cmp x19, x24
   a4d6c:   8b170000    add x0, x0, x23
   a4d70:   f9000f80    str x0, [x28, #24]
   a4d74:   54ffd9c9    b.ls    a48ac <CString::FormatV(char const*, std::__va_list)+0x19c>
   a4d78:   cb180278    sub x24, x19, x24
   a4d7c:   aa1c03e0    mov x0, x28
   a4d80:   aa1803e1    mov x1, x24
   a4d84:   97fffbaf    bl  a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>
   a4d88:   d1000700    sub x0, x24, #0x1
   a4d8c:   52800403    mov w3, #0x20
   a4d90:   f9400f81    ldr x1, [x28, #24]
   a4d94:   d1000400    sub x0, x0, #0x1
   a4d98:   b100041f    cmn x0, #0x1
   a4d9c:   91000422    add x2, x1, #0x1
   a4da0:   f9000f82    str x2, [x28, #24]
   a4da4:   39000023    strb    w3, [x1]
   a4da8:   54ffff41    b.ne    a4d90 <CString::FormatV(char const*, std::__va_list)+0x680>
   a4dac:   aa1a03f8    mov x24, x26
   a4db0:   17fffec0    b   a48b0 <CString::FormatV(char const*, std::__va_list)+0x1a0>
   a4db4:   37f81435    tbnz    w21, #31, a5038 <CString::FormatV(char const*, std::__va_list)+0x928>
   a4db8:   91002f1a    add x26, x24, #0xb
   a4dbc:   927df35a    and x26, x26, #0xfffffffffffffff8
   a4dc0:   b9400307    ldr w7, [x24]
   a4dc4:   eb0200ff    cmp x7, x2
   a4dc8:   d2800021    mov x1, #0x1
   a4dcc:   54002b43    b.cc    a5334 <CString::FormatV(char const*, std::__va_list)+0xc24>
   a4dd0:   9b027c21    mul x1, x1, x2
   a4dd4:   9ac108e4    udiv    x4, x7, x1
   a4dd8:   eb02009f    cmp x4, x2
   a4ddc:   aa0403e3    mov x3, x4
   a4de0:   54ffff82    b.cs    a4dd0 <CString::FormatV(char const*, std::__va_list)+0x6c0>
   a4de4:   7101601f    cmp w0, #0x58
   a4de8:   910203f9    add x25, sp, #0x80
   a4dec:   1a9f07e9    cset    w9, ne
   a4df0:   531b6929    lsl w9, w9, #5
   a4df4:   aa1903e8    mov x8, x25
   a4df8:   1100dd29    add w9, w9, #0x37
   a4dfc:   14000004    b   a4e0c <CString::FormatV(char const*, std::__va_list)+0x6fc>
   a4e00:   9ac408e3    udiv    x3, x7, x4
   a4e04:   aa0403e1    mov x1, x4
   a4e08:   aa0303e4    mov x4, x3
   a4e0c:   12001c60    and w0, w3, #0xff
   a4e10:   f100247f    cmp x3, #0x9
   a4e14:   9b019c87    msub    x7, x4, x1, x7
   a4e18:   1100c003    add w3, w0, #0x30
   a4e1c:   0b000120    add w0, w9, w0
   a4e20:   9ac20824    udiv    x4, x1, x2
   a4e24:   13001c63    sxtb    w3, w3
   a4e28:   13001c00    sxtb    w0, w0
   a4e2c:   1a838000    csel    w0, w0, w3, hi
   a4e30:   eb02003f    cmp x1, x2
   a4e34:   38001500    strb    w0, [x8], #1
   a4e38:   54fffe42    b.cs    a4e00 <CString::FormatV(char const*, std::__va_list)+0x6f0>
   a4e3c:   17fffefe    b   a4a34 <CString::FormatV(char const*, std::__va_list)+0x324>
   a4e40:   110022a1    add w1, w21, #0x8
   a4e44:   7100003f    cmp w1, #0x0
   a4e48:   5400120d    b.le    a5088 <CString::FormatV(char const*, std::__va_list)+0x978>
   a4e4c:   91003f1a    add x26, x24, #0xf
   a4e50:   2a0103f5    mov w21, w1
   a4e54:   927df35a    and x26, x26, #0xfffffffffffffff8
   a4e58:   17fffed7    b   a49b4 <CString::FormatV(char const*, std::__va_list)+0x2a4>
   a4e5c:   34002499    cbz w25, a52ec <CString::FormatV(char const*, std::__va_list)+0xbdc>
   a4e60:   37f83035    tbnz    w21, #31, a5464 <CString::FormatV(char const*, std::__va_list)+0xd54>
   a4e64:   aa1803e0    mov x0, x24
   a4e68:   91003f01    add x1, x24, #0xf
   a4e6c:   f9400002    ldr x2, [x0]
   a4e70:   927df038    and x24, x1, #0xfffffffffffffff8
   a4e74:   b6f80062    tbz x2, #63, a4e80 <CString::FormatV(char const*, std::__va_list)+0x770>
   a4e78:   cb0203e2    neg x2, x2
   a4e7c:   5280003a    mov w26, #0x1
   a4e80:   f100245f    cmp x2, #0x9
   a4e84:   aa0203e3    mov x3, x2
   a4e88:   d2800020    mov x0, #0x1
   a4e8c:   5400332d    b.le    a54f0 <CString::FormatV(char const*, std::__va_list)+0xde0>
   a4e90:   8b000800    add x0, x0, x0, lsl #2
   a4e94:   d37ff800    lsl x0, x0, #1
   a4e98:   9ac00841    udiv    x1, x2, x0
   a4e9c:   f100243f    cmp x1, #0x9
   a4ea0:   54ffff88    b.hi    a4e90 <CString::FormatV(char const*, std::__va_list)+0x780>
   a4ea4:   910203f9    add x25, sp, #0x80
   a4ea8:   b202e7e9    mov x9, #0xcccccccccccccccc
   a4eac:   f29999a9    movk    x9, #0xcccd
   a4eb0:   aa1903e7    mov x7, x25
   a4eb4:   14000003    b   a4ec0 <CString::FormatV(char const*, std::__va_list)+0x7b0>
   a4eb8:   aa0103e0    mov x0, x1
   a4ebc:   9ac10861    udiv    x1, x3, x1
   a4ec0:   12001c22    and w2, w1, #0xff
   a4ec4:   f100243f    cmp x1, #0x9
   a4ec8:   1100c044    add w4, w2, #0x30
   a4ecc:   11015c41    add w1, w2, #0x57
   a4ed0:   13001c21    sxtb    w1, w1
   a4ed4:   13001c82    sxtb    w2, w4
   a4ed8:   1a828021    csel    w1, w1, w2, hi
   a4edc:   9ac00868    udiv    x8, x3, x0
   a4ee0:   380014e1    strb    w1, [x7], #1
   a4ee4:   f100241f    cmp x0, #0x9
   a4ee8:   9bc97c01    umulh   x1, x0, x9
   a4eec:   d343fc21    lsr x1, x1, #3
   a4ef0:   9b008d03    msub    x3, x8, x0, x3
   a4ef4:   54fffe28    b.hi    a4eb8 <CString::FormatV(char const*, std::__va_list)+0x7a8>
   a4ef8:   aa1903e0    mov x0, x25
   a4efc:   390000ff    strb    wzr, [x7]
   a4f00:   94000610    bl  a6740 <strlen>
   a4f04:   aa0003e2    mov x2, x0
   a4f08:   34ffe73a    cbz w26, a4bec <CString::FormatV(char const*, std::__va_list)+0x4dc>
   a4f0c:   91000402    add x2, x0, #0x1
   a4f10:   34001d76    cbz w22, a52bc <CString::FormatV(char const*, std::__va_list)+0xbac>
   a4f14:   d2800021    mov x1, #0x1
   a4f18:   aa1c03e0    mov x0, x28
   a4f1c:   f9003be2    str x2, [sp, #112]
   a4f20:   97fffb48    bl  a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>
   a4f24:   f9400f80    ldr x0, [x28, #24]
   a4f28:   528005a1    mov w1, #0x2d
   a4f2c:   f9403be2    ldr x2, [sp, #112]
   a4f30:   91000403    add x3, x0, #0x1
   a4f34:   f9000f83    str x3, [x28, #24]
   a4f38:   39000001    strb    w1, [x0]
   a4f3c:   aa1903e0    mov x0, x25
   a4f40:   f9003be2    str x2, [sp, #112]
   a4f44:   940005ff    bl  a6740 <strlen>
   a4f48:   f9403be2    ldr x2, [sp, #112]
   a4f4c:   aa0003fa    mov x26, x0
   a4f50:   b40000a0    cbz x0, a4f64 <CString::FormatV(char const*, std::__va_list)+0x854>
   a4f54:   aa0003e1    mov x1, x0
   a4f58:   aa1c03e0    mov x0, x28
   a4f5c:   97fffb39    bl  a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>
   a4f60:   f9403be2    ldr x2, [sp, #112]
   a4f64:   aa1903e1    mov x1, x25
   a4f68:   f9003be2    str x2, [sp, #112]
   a4f6c:   f9400f80    ldr x0, [x28, #24]
   a4f70:   94000684    bl  a6980 <strcpy>
   a4f74:   f9400f80    ldr x0, [x28, #24]
   a4f78:   f9403be2    ldr x2, [sp, #112]
   a4f7c:   8b1a0000    add x0, x0, x26
   a4f80:   eb02027f    cmp x19, x2
   a4f84:   f9000f80    str x0, [x28, #24]
   a4f88:   54ffc949    b.ls    a48b0 <CString::FormatV(char const*, std::__va_list)+0x1a0>
   a4f8c:   cb020273    sub x19, x19, x2
   a4f90:   aa1c03e0    mov x0, x28
   a4f94:   aa1303e1    mov x1, x19
   a4f98:   97fffb2a    bl  a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>
   a4f9c:   d1000660    sub x0, x19, #0x1
   a4fa0:   52800403    mov w3, #0x20
   a4fa4:   d503201f    nop
   a4fa8:   f9400f81    ldr x1, [x28, #24]
   a4fac:   d1000400    sub x0, x0, #0x1
   a4fb0:   b100041f    cmn x0, #0x1
   a4fb4:   91000422    add x2, x1, #0x1
   a4fb8:   f9000f82    str x2, [x28, #24]
   a4fbc:   39000023    strb    w3, [x1]
   a4fc0:   54ffff41    b.ne    a4fa8 <CString::FormatV(char const*, std::__va_list)+0x898>
   a4fc4:   17fffe3b    b   a48b0 <CString::FormatV(char const*, std::__va_list)+0x1a0>
   a4fc8:   d2800202    mov x2, #0x10
   a4fcc:   34ffcec7    cbz w7, a49a4 <CString::FormatV(char const*, std::__va_list)+0x294>
   a4fd0:   f0000060    adrp    x0, b3000 <_etext+0x3f9c>
   a4fd4:   910da000    add x0, x0, #0x368
   a4fd8:   f9003be0    str x0, [sp, #112]
   a4fdc:   17ffff1d    b   a4c50 <CString::FormatV(char const*, std::__va_list)+0x540>
   a4fe0:   d2800021    mov x1, #0x1
   a4fe4:   aa1c03e0    mov x0, x28
   a4fe8:   b90073e4    str w4, [sp, #112]
   a4fec:   f9003fe2    str x2, [sp, #120]
   a4ff0:   97fffb14    bl  a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>
   a4ff4:   f9400f80    ldr x0, [x28, #24]
   a4ff8:   52800601    mov w1, #0x30
   a4ffc:   f9403fe2    ldr x2, [sp, #120]
   a5000:   b94073e4    ldr w4, [sp, #112]
   a5004:   91000407    add x7, x0, #0x1
   a5008:   f9000f87    str x7, [x28, #24]
   a500c:   39000001    strb    w1, [x0]
   a5010:   39c00360    ldrsb   w0, [x27]
   a5014:   17fffe64    b   a49a4 <CString::FormatV(char const*, std::__va_list)+0x294>
   a5018:   110022a1    add w1, w21, #0x8
   a501c:   7100003f    cmp w1, #0x0
   a5020:   5400202d    b.le    a5424 <CString::FormatV(char const*, std::__va_list)+0xd14>
   a5024:   91003f1a    add x26, x24, #0xf
   a5028:   f9400307    ldr x7, [x24]
   a502c:   2a0103f5    mov w21, w1
   a5030:   927df35a    and x26, x26, #0xfffffffffffffff8
   a5034:   17ffff64    b   a4dc4 <CString::FormatV(char const*, std::__va_list)+0x6b4>
   a5038:   110022a1    add w1, w21, #0x8
   a503c:   7100003f    cmp w1, #0x0
   a5040:   54001e6d    b.le    a540c <CString::FormatV(char const*, std::__va_list)+0xcfc>
   a5044:   91002f1a    add x26, x24, #0xb
   a5048:   2a0103f5    mov w21, w1
   a504c:   927df35a    and x26, x26, #0xfffffffffffffff8
   a5050:   17ffff5c    b   a4dc0 <CString::FormatV(char const*, std::__va_list)+0x6b0>
   a5054:   d1000661    sub x1, x19, #0x1
   a5058:   aa1c03e0    mov x0, x28
   a505c:   97fffaf9    bl  a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>
   a5060:   d1000a73    sub x19, x19, #0x2
   a5064:   52800402    mov w2, #0x20
   a5068:   f9400f80    ldr x0, [x28, #24]
   a506c:   d1000673    sub x19, x19, #0x1
   a5070:   b100067f    cmn x19, #0x1
   a5074:   91000401    add x1, x0, #0x1
   a5078:   f9000f81    str x1, [x28, #24]
   a507c:   39000002    strb    w2, [x0]
   a5080:   54ffff41    b.ne    a5068 <CString::FormatV(char const*, std::__va_list)+0x958>
   a5084:   17fffe9d    b   a4af8 <CString::FormatV(char const*, std::__va_list)+0x3e8>
   a5088:   f94037e3    ldr x3, [sp, #104]
   a508c:   aa1803fa    mov x26, x24
   a5090:   8b35c063    add x3, x3, w21, sxtw
   a5094:   2a0103f5    mov w21, w1
   a5098:   aa0303f8    mov x24, x3
   a509c:   17fffe46    b   a49b4 <CString::FormatV(char const*, std::__va_list)+0x2a4>
   a50a0:   cb000278    sub x24, x19, x0
   a50a4:   aa1c03e0    mov x0, x28
   a50a8:   aa1803e1    mov x1, x24
   a50ac:   97fffae5    bl  a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>
   a50b0:   d1000700    sub x0, x24, #0x1
   a50b4:   52800403    mov w3, #0x20
   a50b8:   f9400f81    ldr x1, [x28, #24]
   a50bc:   d1000400    sub x0, x0, #0x1
   a50c0:   b100041f    cmn x0, #0x1
   a50c4:   91000422    add x2, x1, #0x1
   a50c8:   f9000f82    str x2, [x28, #24]
   a50cc:   39000023    strb    w3, [x1]
   a50d0:   54ffff41    b.ne    a50b8 <CString::FormatV(char const*, std::__va_list)+0x9a8>
   a50d4:   17fffde9    b   a4878 <CString::FormatV(char const*, std::__va_list)+0x168>
   a50d8:   cb00027a    sub x26, x19, x0
   a50dc:   aa1c03e0    mov x0, x28
   a50e0:   aa1a03e1    mov x1, x26
   a50e4:   97fffad7    bl  a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>
   a50e8:   d1000740    sub x0, x26, #0x1
   a50ec:   52800403    mov w3, #0x20
   a50f0:   f9400f81    ldr x1, [x28, #24]
   a50f4:   d1000400    sub x0, x0, #0x1
   a50f8:   b100041f    cmn x0, #0x1
   a50fc:   91000422    add x2, x1, #0x1
   a5100:   f9000f82    str x2, [x28, #24]
   a5104:   39000023    strb    w3, [x1]
   a5108:   54ffff41    b.ne    a50f0 <CString::FormatV(char const*, std::__va_list)+0x9e0>
   a510c:   17fffe0e    b   a4944 <CString::FormatV(char const*, std::__va_list)+0x234>
   a5110:   110022a0    add w0, w21, #0x8
   a5114:   7100001f    cmp w0, #0x0
   a5118:   5400114d    b.le    a5340 <CString::FormatV(char const*, std::__va_list)+0xc30>
   a511c:   91003f19    add x25, x24, #0xf
   a5120:   2a0003f5    mov w21, w0
   a5124:   927df339    and x25, x25, #0xfffffffffffffff8
   a5128:   17fffe00    b   a4928 <CString::FormatV(char const*, std::__va_list)+0x218>
   a512c:   cb0203e2    neg x2, x2
   a5130:   17fffe8c    b   a4b60 <CString::FormatV(char const*, std::__va_list)+0x450>
   a5134:   b94067e0    ldr w0, [sp, #100]
   a5138:   11004000    add w0, w0, #0x10
   a513c:   7100001f    cmp w0, #0x0
   a5140:   540010cd    b.le    a5358 <CString::FormatV(char const*, std::__va_list)+0xc48>
   a5144:   91003f1a    add x26, x24, #0xf
   a5148:   b90067e0    str w0, [sp, #100]
   a514c:   927df35a    and x26, x26, #0xfffffffffffffff8
   a5150:   17fffdc0    b   a4850 <CString::FormatV(char const*, std::__va_list)+0x140>
   a5154:   110022a0    add w0, w21, #0x8
   a5158:   7100001f    cmp w0, #0x0
   a515c:   540010cd    b.le    a5374 <CString::FormatV(char const*, std::__va_list)+0xc64>
   a5160:   91002f19    add x25, x24, #0xb
   a5164:   2a0003f5    mov w21, w0
   a5168:   927df339    and x25, x25, #0xfffffffffffffff8
   a516c:   17fffe5f    b   a4ae8 <CString::FormatV(char const*, std::__va_list)+0x3d8>
   a5170:   aa1803e0    mov x0, x24
   a5174:   94000573    bl  a6740 <strlen>
   a5178:   aa0003f6    mov x22, x0
   a517c:   b4000080    cbz x0, a518c <CString::FormatV(char const*, std::__va_list)+0xa7c>
   a5180:   aa0003e1    mov x1, x0
   a5184:   aa1c03e0    mov x0, x28
   a5188:   97fffaae    bl  a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>
   a518c:   f9400f80    ldr x0, [x28, #24]
   a5190:   aa1803e1    mov x1, x24
   a5194:   940005fb    bl  a6980 <strcpy>
   a5198:   f9400f80    ldr x0, [x28, #24]
   a519c:   eb13035f    cmp x26, x19
   a51a0:   8b160000    add x0, x0, x22
   a51a4:   f9000f80    str x0, [x28, #24]
   a51a8:   54ffbe82    b.cs    a4978 <CString::FormatV(char const*, std::__va_list)+0x268>
   a51ac:   cb1a027a    sub x26, x19, x26
   a51b0:   aa1c03e0    mov x0, x28
   a51b4:   aa1a03e1    mov x1, x26
   a51b8:   97fffaa2    bl  a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>
   a51bc:   d1000740    sub x0, x26, #0x1
   a51c0:   52800403    mov w3, #0x20
   a51c4:   f9400f81    ldr x1, [x28, #24]
   a51c8:   d1000400    sub x0, x0, #0x1
   a51cc:   b100041f    cmn x0, #0x1
   a51d0:   91000422    add x2, x1, #0x1
   a51d4:   f9000f82    str x2, [x28, #24]
   a51d8:   39000023    strb    w3, [x1]
   a51dc:   54ffff41    b.ne    a51c4 <CString::FormatV(char const*, std::__va_list)+0xab4>
   a51e0:   aa1903f8    mov x24, x25
   a51e4:   17fffdb3    b   a48b0 <CString::FormatV(char const*, std::__va_list)+0x1a0>
   a51e8:   aa1903e0    mov x0, x25
   a51ec:   94000555    bl  a6740 <strlen>
   a51f0:   aa0003f6    mov x22, x0
   a51f4:   b4000080    cbz x0, a5204 <CString::FormatV(char const*, std::__va_list)+0xaf4>
   a51f8:   aa0003e1    mov x1, x0
   a51fc:   aa1c03e0    mov x0, x28
   a5200:   97fffa90    bl  a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>
   a5204:   f9400f80    ldr x0, [x28, #24]
   a5208:   aa1903e1    mov x1, x25
   a520c:   940005dd    bl  a6980 <strcpy>
   a5210:   f9400f80    ldr x0, [x28, #24]
   a5214:   eb13031f    cmp x24, x19
   a5218:   8b160000    add x0, x0, x22
   a521c:   f9000f80    str x0, [x28, #24]
   a5220:   54ffb462    b.cs    a48ac <CString::FormatV(char const*, std::__va_list)+0x19c>
   a5224:   cb180278    sub x24, x19, x24
   a5228:   aa1c03e0    mov x0, x28
   a522c:   aa1803e1    mov x1, x24
   a5230:   97fffa84    bl  a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>
   a5234:   d1000700    sub x0, x24, #0x1
   a5238:   52800403    mov w3, #0x20
   a523c:   f9400f81    ldr x1, [x28, #24]
   a5240:   d1000400    sub x0, x0, #0x1
   a5244:   b100041f    cmn x0, #0x1
   a5248:   91000422    add x2, x1, #0x1
   a524c:   f9000f82    str x2, [x28, #24]
   a5250:   39000023    strb    w3, [x1]
   a5254:   54ffff41    b.ne    a523c <CString::FormatV(char const*, std::__va_list)+0xb2c>
   a5258:   aa1a03f8    mov x24, x26
   a525c:   17fffd95    b   a48b0 <CString::FormatV(char const*, std::__va_list)+0x1a0>
   a5260:   d2800021    mov x1, #0x1
   a5264:   aa1c03e0    mov x0, x28
   a5268:   97fffa76    bl  a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>
   a526c:   f9400f80    ldr x0, [x28, #24]
   a5270:   f100067f    cmp x19, #0x1
   a5274:   91000401    add x1, x0, #0x1
   a5278:   f9000f81    str x1, [x28, #24]
   a527c:   39000018    strb    w24, [x0]
   a5280:   54ffb7c9    b.ls    a4978 <CString::FormatV(char const*, std::__va_list)+0x268>
   a5284:   d1000661    sub x1, x19, #0x1
   a5288:   aa1c03e0    mov x0, x28
   a528c:   97fffa6d    bl  a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>
   a5290:   d1000a73    sub x19, x19, #0x2
   a5294:   52800402    mov w2, #0x20
   a5298:   f9400f80    ldr x0, [x28, #24]
   a529c:   d1000673    sub x19, x19, #0x1
   a52a0:   b100067f    cmn x19, #0x1
   a52a4:   91000401    add x1, x0, #0x1
   a52a8:   f9000f81    str x1, [x28, #24]
   a52ac:   39000002    strb    w2, [x0]
   a52b0:   54ffff41    b.ne    a5298 <CString::FormatV(char const*, std::__va_list)+0xb88>
   a52b4:   aa1903f8    mov x24, x25
   a52b8:   17fffd7e    b   a48b0 <CString::FormatV(char const*, std::__va_list)+0x1a0>
   a52bc:   350008b7    cbnz    w23, a53d0 <CString::FormatV(char const*, std::__va_list)+0xcc0>
   a52c0:   eb02027f    cmp x19, x2
   a52c4:   54000688    b.hi    a5394 <CString::FormatV(char const*, std::__va_list)+0xc84>
   a52c8:   d2800021    mov x1, #0x1
   a52cc:   aa1c03e0    mov x0, x28
   a52d0:   97fffa5c    bl  a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>
   a52d4:   f9400f80    ldr x0, [x28, #24]
   a52d8:   528005a1    mov w1, #0x2d
   a52dc:   91000402    add x2, x0, #0x1
   a52e0:   f9000f82    str x2, [x28, #24]
   a52e4:   39000001    strb    w1, [x0]
   a52e8:   17fffe45    b   a4bfc <CString::FormatV(char const*, std::__va_list)+0x4ec>
   a52ec:   37f80ab5    tbnz    w21, #31, a5440 <CString::FormatV(char const*, std::__va_list)+0xd30>
   a52f0:   aa1803e0    mov x0, x24
   a52f4:   91002f01    add x1, x24, #0xb
   a52f8:   b9800002    ldrsw   x2, [x0]
   a52fc:   927df038    and x24, x1, #0xfffffffffffffff8
   a5300:   17fffedd    b   a4e74 <CString::FormatV(char const*, std::__va_list)+0x764>
   a5304:   110022a1    add w1, w21, #0x8
   a5308:   7100003f    cmp w1, #0x0
   a530c:   5400078d    b.le    a53fc <CString::FormatV(char const*, std::__va_list)+0xcec>
   a5310:   91003f02    add x2, x24, #0xf
   a5314:   aa1803e0    mov x0, x24
   a5318:   2a0103f5    mov w21, w1
   a531c:   927df058    and x24, x2, #0xfffffffffffffff8
   a5320:   17fffe0d    b   a4b54 <CString::FormatV(char const*, std::__va_list)+0x444>
   a5324:   aa0703e3    mov x3, x7
   a5328:   d2800021    mov x1, #0x1
   a532c:   aa0703e4    mov x4, x7
   a5330:   17fffdab    b   a49dc <CString::FormatV(char const*, std::__va_list)+0x2cc>
   a5334:   aa0703e3    mov x3, x7
   a5338:   aa0703e4    mov x4, x7
   a533c:   17fffeaa    b   a4de4 <CString::FormatV(char const*, std::__va_list)+0x6d4>
   a5340:   f94037e1    ldr x1, [sp, #104]
   a5344:   aa1803f9    mov x25, x24
   a5348:   8b35c021    add x1, x1, w21, sxtw
   a534c:   2a0003f5    mov w21, w0
   a5350:   aa0103f8    mov x24, x1
   a5354:   17fffd75    b   a4928 <CString::FormatV(char const*, std::__va_list)+0x218>
   a5358:   f9400a82    ldr x2, [x20, #16]
   a535c:   aa1803fa    mov x26, x24
   a5360:   b94067e3    ldr w3, [sp, #100]
   a5364:   8b23c042    add x2, x2, w3, sxtw
   a5368:   aa0203f8    mov x24, x2
   a536c:   b90067e0    str w0, [sp, #100]
   a5370:   17fffd38    b   a4850 <CString::FormatV(char const*, std::__va_list)+0x140>
   a5374:   f94037e1    ldr x1, [sp, #104]
   a5378:   aa1803f9    mov x25, x24
   a537c:   8b35c021    add x1, x1, w21, sxtw
   a5380:   2a0003f5    mov w21, w0
   a5384:   aa0103f8    mov x24, x1
   a5388:   17fffdd8    b   a4ae8 <CString::FormatV(char const*, std::__va_list)+0x3d8>
   a538c:   eb13001f    cmp x0, x19
   a5390:   54ffc362    b.cs    a4bfc <CString::FormatV(char const*, std::__va_list)+0x4ec>
   a5394:   cb020273    sub x19, x19, x2
   a5398:   aa1c03e0    mov x0, x28
   a539c:   aa1303e1    mov x1, x19
   a53a0:   97fffa28    bl  a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>
   a53a4:   d1000660    sub x0, x19, #0x1
   a53a8:   52800403    mov w3, #0x20
   a53ac:   f9400f81    ldr x1, [x28, #24]
   a53b0:   d1000400    sub x0, x0, #0x1
   a53b4:   b100041f    cmn x0, #0x1
   a53b8:   91000422    add x2, x1, #0x1
   a53bc:   f9000f82    str x2, [x28, #24]
   a53c0:   39000023    strb    w3, [x1]
   a53c4:   54ffff41    b.ne    a53ac <CString::FormatV(char const*, std::__va_list)+0xc9c>
   a53c8:   34ffc1ba    cbz w26, a4bfc <CString::FormatV(char const*, std::__va_list)+0x4ec>
   a53cc:   17ffffbf    b   a52c8 <CString::FormatV(char const*, std::__va_list)+0xbb8>
   a53d0:   d2800021    mov x1, #0x1
   a53d4:   aa1c03e0    mov x0, x28
   a53d8:   f9003be2    str x2, [sp, #112]
   a53dc:   97fffa19    bl  a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>
   a53e0:   f9400f80    ldr x0, [x28, #24]
   a53e4:   528005a1    mov w1, #0x2d
   a53e8:   f9403be2    ldr x2, [sp, #112]
   a53ec:   91000403    add x3, x0, #0x1
   a53f0:   f9000f83    str x3, [x28, #24]
   a53f4:   39000001    strb    w1, [x0]
   a53f8:   17fffdff    b   a4bf4 <CString::FormatV(char const*, std::__va_list)+0x4e4>
   a53fc:   f94037e0    ldr x0, [sp, #104]
   a5400:   8b35c000    add x0, x0, w21, sxtw
   a5404:   2a0103f5    mov w21, w1
   a5408:   17fffdd3    b   a4b54 <CString::FormatV(char const*, std::__va_list)+0x444>
   a540c:   f94037e3    ldr x3, [sp, #104]
   a5410:   aa1803fa    mov x26, x24
   a5414:   8b35c063    add x3, x3, w21, sxtw
   a5418:   2a0103f5    mov w21, w1
   a541c:   aa0303f8    mov x24, x3
   a5420:   17fffe68    b   a4dc0 <CString::FormatV(char const*, std::__va_list)+0x6b0>
   a5424:   f94037e3    ldr x3, [sp, #104]
   a5428:   aa1803fa    mov x26, x24
   a542c:   8b35c063    add x3, x3, w21, sxtw
   a5430:   aa0303f8    mov x24, x3
   a5434:   2a0103f5    mov w21, w1
   a5438:   f9400307    ldr x7, [x24]
   a543c:   17fffe62    b   a4dc4 <CString::FormatV(char const*, std::__va_list)+0x6b4>
   a5440:   110022a1    add w1, w21, #0x8
   a5444:   7100003f    cmp w1, #0x0
   a5448:   5400040d    b.le    a54c8 <CString::FormatV(char const*, std::__va_list)+0xdb8>
   a544c:   91002f02    add x2, x24, #0xb
   a5450:   aa1803e0    mov x0, x24
   a5454:   2a0103f5    mov w21, w1
   a5458:   927df058    and x24, x2, #0xfffffffffffffff8
   a545c:   b9800002    ldrsw   x2, [x0]
   a5460:   17fffe85    b   a4e74 <CString::FormatV(char const*, std::__va_list)+0x764>
   a5464:   110022a1    add w1, w21, #0x8
   a5468:   7100003f    cmp w1, #0x0
   a546c:   5400038d    b.le    a54dc <CString::FormatV(char const*, std::__va_list)+0xdcc>
   a5470:   91003f02    add x2, x24, #0xf
   a5474:   aa1803e0    mov x0, x24
   a5478:   2a0103f5    mov w21, w1
   a547c:   927df058    and x24, x2, #0xfffffffffffffff8
   a5480:   f9400002    ldr x2, [x0]
   a5484:   17fffe7c    b   a4e74 <CString::FormatV(char const*, std::__va_list)+0x764>
   a5488:   cb020273    sub x19, x19, x2
   a548c:   aa1c03e0    mov x0, x28
   a5490:   aa1303e1    mov x1, x19
   a5494:   97fff9eb    bl  a3c40 <CString::ReserveSpace(unsigned long) [clone .part.0]>
   a5498:   d1000660    sub x0, x19, #0x1
   a549c:   52800603    mov w3, #0x30
   a54a0:   f9400f81    ldr x1, [x28, #24]
   a54a4:   d1000400    sub x0, x0, #0x1
   a54a8:   b100041f    cmn x0, #0x1
   a54ac:   91000422    add x2, x1, #0x1
   a54b0:   f9000f82    str x2, [x28, #24]
   a54b4:   39000023    strb    w3, [x1]
   a54b8:   54ffff41    b.ne    a54a0 <CString::FormatV(char const*, std::__va_list)+0xd90>
   a54bc:   17fffdd0    b   a4bfc <CString::FormatV(char const*, std::__va_list)+0x4ec>
   a54c0:   aa0203e1    mov x1, x2
   a54c4:   17fffdb0    b   a4b84 <CString::FormatV(char const*, std::__va_list)+0x474>
   a54c8:   f94037e0    ldr x0, [sp, #104]
   a54cc:   8b35c000    add x0, x0, w21, sxtw
   a54d0:   2a0103f5    mov w21, w1
   a54d4:   b9800002    ldrsw   x2, [x0]
   a54d8:   17fffe67    b   a4e74 <CString::FormatV(char const*, std::__va_list)+0x764>
   a54dc:   f94037e0    ldr x0, [sp, #104]
   a54e0:   8b35c000    add x0, x0, w21, sxtw
   a54e4:   2a0103f5    mov w21, w1
   a54e8:   f9400002    ldr x2, [x0]
   a54ec:   17fffe62    b   a4e74 <CString::FormatV(char const*, std::__va_list)+0x764>
   a54f0:   aa0203e1    mov x1, x2
   a54f4:   17fffe6c    b   a4ea4 <CString::FormatV(char const*, std::__va_list)+0x794>
   a54f8:   d503201f    nop
   a54fc:   d503201f    nop

00000000000a5500 <CString::Format(char const*, ...)>:
   a5500:   a9b07bfd    stp x29, x30, [sp, #-256]!
   a5504:   910403e8    add x8, sp, #0x100
   a5508:   910403ea    add x10, sp, #0x100
   a550c:   910003fd    mov x29, sp
   a5510:   910343ec    add x12, sp, #0xd0
   a5514:   128005e9    mov w9, #0xffffffd0
   a5518:   a9032be8    stp x8, x10, [sp, #48]
   a551c:   12800fe8    mov w8, #0xffffff80
   a5520:   a9432fea    ldp x10, x11, [sp, #48]
   a5524:   f90023ec    str x12, [sp, #64]
   a5528:   b9004be9    str w9, [sp, #72]
   a552c:   b9004fe8    str w8, [sp, #76]
   a5530:   a94427e8    ldp x8, x9, [sp, #64]
   a5534:   a90d0fe2    stp x2, x3, [sp, #208]
   a5538:   910043e2    add x2, sp, #0x10
   a553c:   a9012fea    stp x10, x11, [sp, #16]
   a5540:   a90227e8    stp x8, x9, [sp, #32]
   a5544:   3d8017e0    str q0, [sp, #80]
   a5548:   3d801be1    str q1, [sp, #96]
   a554c:   3d801fe2    str q2, [sp, #112]
   a5550:   3d8023e3    str q3, [sp, #128]
   a5554:   3d8027e4    str q4, [sp, #144]
   a5558:   3d802be5    str q5, [sp, #160]
   a555c:   3d802fe6    str q6, [sp, #176]
   a5560:   3d8033e7    str q7, [sp, #192]
   a5564:   a90e17e4    stp x4, x5, [sp, #224]
   a5568:   a90f1fe6    stp x6, x7, [sp, #240]
   a556c:   97fffc69    bl  a4710 <CString::FormatV(char const*, std::__va_list)>
   a5570:   a8d07bfd    ldp x29, x30, [sp], #256
   a5574:   d65f03c0    ret
    ...

00000000000a5580 <__aeabi_atexit>:
   a5580:   d65f03c0    ret
   a5584:   d503201f    nop
   a5588:   d503201f    nop
   a558c:   d503201f    nop

00000000000a5590 <__cxa_atexit>:
   a5590:   d65f03c0    ret
   a5594:   d503201f    nop
   a5598:   d503201f    nop
   a559c:   d503201f    nop

00000000000a55a0 <__errno>:
   a55a0:   b00000a0    adrp    x0, ba000 <font_data+0x1080>
   a55a4:   91272000    add x0, x0, #0x9c8
   a55a8:   d65f03c0    ret
   a55ac:   d503201f    nop

00000000000a55b0 <set_qemu_exit_status>:
   a55b0:   d65f03c0    ret
   a55b4:   d503201f    nop
   a55b8:   d503201f    nop
   a55bc:   d503201f    nop

00000000000a55c0 <halt>:
   a55c0:   d50342df    msr daifset, #0x2
   a55c4:   d50341df    msr daifset, #0x1

   a55c8:   d5033f9f    dsb sy
   a55cc:   d503207f    wfi
   a55d0:   17fffffe    b   a55c8 <halt+0x8>
   a55d4:   d503201f    nop
   a55d8:   d503201f    nop
   a55dc:   d503201f    nop

00000000000a55e0 <reboot>:
   a55e0:   d2800480    mov x0, #0x24
   a55e4:   f2bfc200    movk    x0, #0xfe10, lsl #16
   a55e8:   52800021    mov w1, #0x1
   a55ec:   72ab4001    movk    w1, #0x5a00, lsl #16
   a55f0:   11007c22    add w2, w1, #0x1f
   a55f4:   b9000001    str w1, [x0]
   a55f8:   b81f8002    stur    w2, [x0, #-8]
   a55fc:   14000000    b   a55fc <reboot+0x1c>

00000000000a5600 <sysinit>:                                            // https://github.com/rsta2/circle/blob/c21f2efdad86c1062f255fbf891135a2a356713e/lib/sysinit.cpp#L187
   a5600:   d11003ff    sub sp, sp, #0x400                             // stack is 1024 bytes!
   a5604:   a9007bfd    stp x29, x30, [sp]
   a5608:   910003fd    mov x29, sp
   a560c:   a90153f3    stp x19, x20, [sp, #16]
   a5610:   f90013f5    str x21, [sp, #32]
   a5614:   d50341ff    msr daifclr, #0x1                              // enable FIQ
   a5618:   d50342ff    msr daifclr, #0x2                              // enable IRQ
   a561c:   b00000b3    adrp    x19, ba000 <font_data+0x1080>
   a5620:   912ec273    add x19, x19, #0xbb0                           // x19 = 0xbabb0 (_bss_end)
   a5624:   b00000a0    adrp    x0, ba000 <font_data+0x1080>
   a5628:   91220000    add x0, x0, #0x880                             // x0 = 0xba880 (_bss_start)
   a562c:   cb000262    sub x2, x19, x0                                // x2 = 0xbabb0 - 0xba880 ( = 0x330) = bss size
   a5630:   52800001    mov w1, #0x0                                   // x1 = 0
   a5634:   940005b9    bl  a6d18 <memset>                             // clear BSS
   a5638:   f14a027f    cmp x19, #0x280, lsl #12                       // compare bss end to 0x280000 (MEM_KERNEL_END = MEM_KERNEL_START + KERNEL_MAX_SIZE)
   a563c:   54000568    b.hi    a56e8 <sysinit+0xe8>                   // halt if kernel bigger than allowed size
   a5640:   910143e0    add x0, sp, #0x50                              // x0 = SP + 0x50
   a5644:   b00000b5    adrp    x21, ba000 <font_data+0x1080>
   a5648:   9113c2b5    add x21, x21, #0x4f0                           // x21 = 0xba4f0
   a564c:   97ffea0d    bl  9fe80 <CMachineInfo::CMachineInfo()>       // init CMachineInfo
   a5650:   52800021    mov w1, #0x1
   a5654:   910343e0    add x0, sp, #0xd0
   a5658:   94000b92    bl  a84a0 <CMemorySystem::CMemorySystem(bool)> // init CMemorySystem
   a565c:   910143e0    add x0, sp, #0x50
   a5660:   97ffec80    bl  a0860 <CMachineInfo::FetchDTB()>           // Fetch dtb files from boot partition
   a5664:   9100c3e0    add x0, sp, #0x30
   a5668:   97fff99a    bl  a3cd0 <CString::CString()>
   a566c:   d0000061    adrp    x1, b3000 <_etext+0x3f9c>
   a5670:   52800024    mov w4, #0x1
   a5674:   910de021    add x1, x1, #0x378
   a5678:   52800063    mov w3, #0x3
   a567c:   528005a2    mov w2, #0x2d
   a5680:   9100c3e0    add x0, sp, #0x30
   a5684:   97ffff9f    bl  a5500 <CString::Format(char const*, ...)>
   a5688:   9100c3e0    add x0, sp, #0x30
   a568c:   97fff9d5    bl  a3de0 <CString::operator char const*() const>
   a5690:   b00000a2    adrp    x2, ba000 <font_data+0x1080>
   a5694:   91272042    add x2, x2, #0x9c8
   a5698:   aa0003e1    mov x1, x0
   a569c:   91002040    add x0, x2, #0x8
   a56a0:   940004b8    bl  a6980 <strcpy>                             // Copy circle version number to a string

   a56a4:   b00000a0    adrp    x0, ba000 <font_data+0x1080>           // call registered static constructors, if specified
   a56a8:   91158000    add x0, x0, #0x560                             // <- ......
   a56ac:   eb0002bf    cmp x21, x0
   a56b0:   54000162    b.cs    a56dc <sysinit+0xdc>
   a56b4:   d1000414    sub x20, x0, #0x1
   a56b8:   d2800013    mov x19, #0x0
   a56bc:   cb150294    sub x20, x20, x21
   a56c0:   d343fe94    lsr x20, x20, #3
   a56c4:   d503201f    nop

   a56c8:   f8737aa0    ldr x0, [x21, x19, lsl #3]
   a56cc:   d63f0000    blr x0
   a56d0:   eb14027f    cmp x19, x20
   a56d4:   91000673    add x19, x19, #0x1
   a56d8:   54ffff81    b.ne    a56c8 <sysinit+0xc8>                   // ...... ->

   a56dc:   97ff6c49    bl  80800 <main>                               // call main (MAINPROC)
   a56e0:   7100041f    cmp w0, #0x1
   a56e4:   54000040    b.eq    a56ec <sysinit+0xec>

   a56e8:   97ffffb6    bl  a55c0 <halt>
   a56ec:   94000695    bl  a7140 <IsChainBootEnabled>
   a56f0:   37000040    tbnz    w0, #0, a56f8 <sysinit+0xf8>
   a56f4:   97ffffbb    bl  a55e0 <reboot>
   a56f8:   910343e0    add x0, sp, #0xd0
   a56fc:   94000afd    bl  a82f0 <CMemorySystem::Destructor()>
   a5700:   d50341df    msr daifset, #0x1
   a5704:   94000697    bl  a7160 <DoChainBoot>
   a5708:   97ffffb6    bl  a55e0 <reboot>
   a570c:   00000000    udf #0

00000000000a5710 <CTimer::CTimer(CInterruptSystem*)>:
   a5710:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a5714:   910003fd    mov x29, sp
   a5718:   d2800022    mov x2, #0x1
   a571c:   f9000bf3    str x19, [sp, #16]
   a5720:   aa0003f3    mov x19, x0
   a5724:   91008000    add x0, x0, #0x20
   a5728:   b9000e7f    str wzr, [x19, #12]
   a572c:   b900127f    str wzr, [x19, #16]
   a5730:   f9000261    str x1, [x19]
   a5734:   b900167f    str wzr, [x19, #20]
   a5738:   f9000e62    str x2, [x19, #24]
   a573c:   97ffecd5    bl  a0a90 <CPtrList::CPtrList()>
   a5740:   d2800023    mov x3, #0x1
   a5744:   52801902    mov w2, #0xc8
   a5748:   f9001e7f    str xzr, [x19, #56]
   a574c:   f2c1a803    movk    x3, #0xd40, lsl #32
   a5750:   f2e00063    movk    x3, #0x3, lsl #48
   a5754:   b900627f    str wzr, [x19, #96]
   a5758:   b00000a0    adrp    x0, ba000 <font_data+0x1080>
   a575c:   b9003262    str w2, [x19, #48]
   a5760:   f944f401    ldr x1, [x0, #2536]
   a5764:   f9001663    str x3, [x19, #40]
   a5768:   b50000a1    cbnz    x1, a577c <CTimer::CTimer(CInterruptSystem*)+0x6c>
   a576c:   f904f413    str x19, [x0, #2536]
   a5770:   f9400bf3    ldr x19, [sp, #16]
   a5774:   a8c27bfd    ldp x29, x30, [sp], #32
   a5778:   d65f03c0    ret
   a577c:   d0000061    adrp    x1, b3000 <_etext+0x3f9c>
   a5780:   d0000060    adrp    x0, b3000 <_etext+0x3f9c>
   a5784:   910e2021    add x1, x1, #0x388
   a5788:   910e6000    add x0, x0, #0x398
   a578c:   52800802    mov w2, #0x40
   a5790:   97ffdccc    bl  9cac0 <assertion_failed>
   a5794:   d503201f    nop
   a5798:   d503201f    nop
   a579c:   d503201f    nop

00000000000a57a0 <CTimer::~CTimer()>:
   a57a0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   a57a4:   910003fd    mov x29, sp
   a57a8:   a90153f3    stp x19, x20, [sp, #16]
   a57ac:   a9025bf5    stp x21, x22, [sp, #32]
   a57b0:   aa0003f5    mov x21, x0
   a57b4:   f9400000    ldr x0, [x0]
   a57b8:   b4000620    cbz x0, a587c <CTimer::~CTimer()+0xdc>
   a57bc:   d2800001    mov x1, #0x0
   a57c0:   d51be221    msr cntp_ctl_el0, x1
   a57c4:   528003c1    mov w1, #0x1e
   a57c8:   910082b5    add x21, x21, #0x20
   a57cc:   940012c5    bl  aa2e0 <CInterruptSystem::DisconnectIRQ(unsigned int)>
   a57d0:   aa1503e0    mov x0, x21
   a57d4:   5289a876    mov w22, #0x4d43
   a57d8:   72a96a96    movk    w22, #0x4b54, lsl #16
   a57dc:   97ffecbd    bl  a0ad0 <CPtrList::GetFirst()>
   a57e0:   aa0003f3    mov x19, x0
   a57e4:   b4000260    cbz x0, a5830 <CTimer::~CTimer()+0x90>
   a57e8:   aa1303e1    mov x1, x19
   a57ec:   aa1503e0    mov x0, x21
   a57f0:   97ffecd4    bl  a0b40 <CPtrList::GetPtr(TPtrListElement*)>
   a57f4:   aa0003f4    mov x20, x0
   a57f8:   b40002a0    cbz x0, a584c <CTimer::~CTimer()+0xac>
   a57fc:   b9400000    ldr w0, [x0]
   a5800:   6b16001f    cmp w0, w22
   a5804:   54000301    b.ne    a5864 <CTimer::~CTimer()+0xc4>
   a5808:   aa1303e1    mov x1, x19
   a580c:   aa1503e0    mov x0, x21
   a5810:   97ffed64    bl  a0da0 <CPtrList::Remove(TPtrListElement*)>
   a5814:   aa1403e0    mov x0, x20
   a5818:   d2800501    mov x1, #0x28
   a581c:   94000811    bl  a7860 <operator delete(void*, unsigned long)>
   a5820:   aa1503e0    mov x0, x21
   a5824:   97ffecab    bl  a0ad0 <CPtrList::GetFirst()>
   a5828:   aa0003f3    mov x19, x0
   a582c:   b5fffde0    cbnz    x0, a57e8 <CTimer::~CTimer()+0x48>
   a5830:   b00000a1    adrp    x1, ba000 <font_data+0x1080>
   a5834:   a94153f3    ldp x19, x20, [sp, #16]
   a5838:   aa1503e0    mov x0, x21
   a583c:   a9425bf5    ldp x21, x22, [sp, #32]
   a5840:   a8c37bfd    ldp x29, x30, [sp], #48
   a5844:   f904f43f    str xzr, [x1, #2536]
   a5848:   17ffec96    b   a0aa0 <CPtrList::~CPtrList()>
   a584c:   d0000061    adrp    x1, b3000 <_etext+0x3f9c>
   a5850:   b0000060    adrp    x0, b2000 <_etext+0x2f9c>
   a5854:   910e2021    add x1, x1, #0x388
   a5858:   910f8000    add x0, x0, #0x3e0
   a585c:   52800ae2    mov w2, #0x57
   a5860:   97ffdc98    bl  9cac0 <assertion_failed>
   a5864:   d0000061    adrp    x1, b3000 <_etext+0x3f9c>
   a5868:   d0000060    adrp    x0, b3000 <_etext+0x3f9c>
   a586c:   910e2021    add x1, x1, #0x388
   a5870:   910f0000    add x0, x0, #0x3c0
   a5874:   52800b02    mov w2, #0x58
   a5878:   97ffdc92    bl  9cac0 <assertion_failed>
   a587c:   d0000061    adrp    x1, b3000 <_etext+0x3f9c>
   a5880:   d0000060    adrp    x0, b3000 <_etext+0x3f9c>
   a5884:   910e2021    add x1, x1, #0x388
   a5888:   910ea000    add x0, x0, #0x3a8
   a588c:   528008c2    mov w2, #0x46
   a5890:   97ffdc8c    bl  9cac0 <assertion_failed>
   a5894:   d503201f    nop
   a5898:   d503201f    nop
   a589c:   d503201f    nop

00000000000a58a0 <CTimer::SetTimeZone(int)>:
   a58a0:   11167c22    add w2, w1, #0x59f
   a58a4:   712cf85f    cmp w2, #0xb3e
   a58a8:   54000089    b.ls    a58b8 <CTimer::SetTimeZone(int)+0x18>
   a58ac:   52800002    mov w2, #0x0
   a58b0:   2a0203e0    mov w0, w2
   a58b4:   d65f03c0    ret
   a58b8:   52800022    mov w2, #0x1
   a58bc:   b9001c01    str w1, [x0, #28]
   a58c0:   2a0203e0    mov w0, w2
   a58c4:   d65f03c0    ret
   a58c8:   d503201f    nop
   a58cc:   d503201f    nop

00000000000a58d0 <CTimer::GetTimeZone() const>:
   a58d0:   b9401c00    ldr w0, [x0, #28]
   a58d4:   d65f03c0    ret
   a58d8:   d503201f    nop
   a58dc:   d503201f    nop

00000000000a58e0 <CTimer::SetTime(unsigned int, bool)>:
   a58e0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a58e4:   910003fd    mov x29, sp
   a58e8:   a90153f3    stp x19, x20, [sp, #16]
   a58ec:   aa0003f3    mov x19, x0
   a58f0:   2a0103f4    mov w20, w1
   a58f4:   b9401c00    ldr w0, [x0, #28]
   a58f8:   531c6c03    lsl w3, w0, #4
   a58fc:   4b000063    sub w3, w3, w0
   a5900:   531e7463    lsl w3, w3, #2
   a5904:   37000062    tbnz    w2, #0, a5910 <CTimer::SetTime(unsigned int, bool)+0x30>
   a5908:   37f802e3    tbnz    w3, #31, a5964 <CTimer::SetTime(unsigned int, bool)+0x84>
   a590c:   0b030294    add w20, w20, w3
   a5910:   f9401e62    ldr x2, [x19, #56]
   a5914:   b4000102    cbz x2, a5934 <CTimer::SetTime(unsigned int, bool)+0x54>
   a5918:   b9401661    ldr w1, [x19, #20]
   a591c:   4b030280    sub w0, w20, w3
   a5920:   6b01007f    cmp w3, w1
   a5924:   4b030021    sub w1, w1, w3
   a5928:   1a9fd021    csel    w1, w1, wzr, le
   a592c:   d63f0040    blr x2
   a5930:   36000200    tbz w0, #0, a5970 <CTimer::SetTime(unsigned int, bool)+0x90>
   a5934:   b9401a60    ldr w0, [x19, #24]
   a5938:   35000080    cbnz    w0, a5948 <CTimer::SetTime(unsigned int, bool)+0x68>
   a593c:   b9001674    str w20, [x19, #20]
   a5940:   52800020    mov w0, #0x1
   a5944:   1400000c    b   a5974 <CTimer::SetTime(unsigned int, bool)+0x94>
   a5948:   94000b4a    bl  a8670 <EnterCritical>
   a594c:   b9401a60    ldr w0, [x19, #24]
   a5950:   b9001674    str w20, [x19, #20]
   a5954:   34ffff60    cbz w0, a5940 <CTimer::SetTime(unsigned int, bool)+0x60>
   a5958:   94000b76    bl  a8730 <LeaveCritical>
   a595c:   52800020    mov w0, #0x1
   a5960:   14000005    b   a5974 <CTimer::SetTime(unsigned int, bool)+0x94>
   a5964:   4b0303e0    neg w0, w3
   a5968:   6b01001f    cmp w0, w1
   a596c:   54fffd0d    b.le    a590c <CTimer::SetTime(unsigned int, bool)+0x2c>
   a5970:   52800000    mov w0, #0x0
   a5974:   a94153f3    ldp x19, x20, [sp, #16]
   a5978:   a8c27bfd    ldp x29, x30, [sp], #32
   a597c:   d65f03c0    ret

00000000000a5980 <CTimer::GetClockTicks()>:
   a5980:   d5033fdf    isb
   a5984:   d53be020    mrs x0, cntpct_el0
   a5988:   d53be001    mrs x1, cntfrq_el0
   a598c:   d2884802    mov x2, #0x4240
   a5990:   f2a001e2    movk    x2, #0xf, lsl #16
   a5994:   9b027c00    mul x0, x0, x2
   a5998:   9ac10800    udiv    x0, x0, x1
   a599c:   d65f03c0    ret

00000000000a59a0 <CTimer::GetTicks() const>:
   a59a0:   b9400c00    ldr w0, [x0, #12]
   a59a4:   d65f03c0    ret
   a59a8:   d503201f    nop
   a59ac:   d503201f    nop

00000000000a59b0 <CTimer::GetUptime() const>:
   a59b0:   b9401000    ldr w0, [x0, #16]
   a59b4:   d65f03c0    ret
   a59b8:   d503201f    nop
   a59bc:   d503201f    nop

00000000000a59c0 <CTimer::GetTime() const>:
   a59c0:   b9401400    ldr w0, [x0, #20]
   a59c4:   d65f03c0    ret
   a59c8:   d503201f    nop
   a59cc:   d503201f    nop

00000000000a59d0 <CTimer::GetLocalTime(unsigned int*, unsigned int*)>:
   a59d0:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   a59d4:   910003fd    mov x29, sp
   a59d8:   a90153f3    stp x19, x20, [sp, #16]
   a59dc:   aa0003f3    mov x19, x0
   a59e0:   aa0103f4    mov x20, x1
   a59e4:   b9401800    ldr w0, [x0, #24]
   a59e8:   a9025bf5    stp x21, x22, [sp, #32]
   a59ec:   aa0203f5    mov x21, x2
   a59f0:   f9001bf7    str x23, [sp, #48]
   a59f4:   350002a0    cbnz    w0, a5a48 <CTimer::GetLocalTime(unsigned int*, unsigned int*)+0x78>
   a59f8:   b9401677    ldr w23, [x19, #20]
   a59fc:   b9400e76    ldr w22, [x19, #12]
   a5a00:   b4000334    cbz x20, a5a64 <CTimer::GetLocalTime(unsigned int*, unsigned int*)+0x94>
   a5a04:   b9000297    str w23, [x20]
   a5a08:   b40003b5    cbz x21, a5a7c <CTimer::GetLocalTime(unsigned int*, unsigned int*)+0xac>
   a5a0c:   5290a3e0    mov w0, #0x851f
   a5a10:   72aa3d60    movk    w0, #0x51eb, lsl #16
   a5a14:   a94153f3    ldp x19, x20, [sp, #16]
   a5a18:   52800c82    mov w2, #0x64
   a5a1c:   5284e201    mov w1, #0x2710
   a5a20:   9ba07ec0    umull   x0, w22, w0
   a5a24:   f9401bf7    ldr x23, [sp, #48]
   a5a28:   d365fc00    lsr x0, x0, #37
   a5a2c:   1b02d800    msub    w0, w0, w2, w22
   a5a30:   1b017c00    mul w0, w0, w1
   a5a34:   b90002a0    str w0, [x21]
   a5a38:   52800020    mov w0, #0x1
   a5a3c:   a9425bf5    ldp x21, x22, [sp, #32]
   a5a40:   a8c47bfd    ldp x29, x30, [sp], #64
   a5a44:   d65f03c0    ret
   a5a48:   94000b0a    bl  a8670 <EnterCritical>
   a5a4c:   b9401677    ldr w23, [x19, #20]
   a5a50:   b9400e76    ldr w22, [x19, #12]
   a5a54:   b9401a60    ldr w0, [x19, #24]
   a5a58:   34fffd40    cbz w0, a5a00 <CTimer::GetLocalTime(unsigned int*, unsigned int*)+0x30>
   a5a5c:   94000b35    bl  a8730 <LeaveCritical>
   a5a60:   b5fffd34    cbnz    x20, a5a04 <CTimer::GetLocalTime(unsigned int*, unsigned int*)+0x34>
   a5a64:   d0000061    adrp    x1, b3000 <_etext+0x3f9c>
   a5a68:   d0000060    adrp    x0, b3000 <_etext+0x3f9c>
   a5a6c:   910e2021    add x1, x1, #0x388
   a5a70:   910fa000    add x0, x0, #0x3e8
   a5a74:   52802142    mov w2, #0x10a
   a5a78:   97ffdc12    bl  9cac0 <assertion_failed>
   a5a7c:   d0000061    adrp    x1, b3000 <_etext+0x3f9c>
   a5a80:   d0000060    adrp    x0, b3000 <_etext+0x3f9c>
   a5a84:   910e2021    add x1, x1, #0x388
   a5a88:   910fe000    add x0, x0, #0x3f8
   a5a8c:   528021a2    mov w2, #0x10d
   a5a90:   97ffdc0c    bl  9cac0 <assertion_failed>
   a5a94:   d503201f    nop
   a5a98:   d503201f    nop
   a5a9c:   d503201f    nop

00000000000a5aa0 <CTimer::GetUniversalTime() const>:
   a5aa0:   b9401c02    ldr w2, [x0, #28]
   a5aa4:   b9401400    ldr w0, [x0, #20]
   a5aa8:   531c6c41    lsl w1, w2, #4
   a5aac:   4b020021    sub w1, w1, w2
   a5ab0:   531e7421    lsl w1, w1, #2
   a5ab4:   6b010000    subs    w0, w0, w1
   a5ab8:   1a9fa000    csel    w0, w0, wzr, ge
   a5abc:   d65f03c0    ret

00000000000a5ac0 <CTimer::GetUniversalTime(unsigned int*, unsigned int*)>:
   a5ac0:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   a5ac4:   910003fd    mov x29, sp
   a5ac8:   a90153f3    stp x19, x20, [sp, #16]
   a5acc:   aa0003f3    mov x19, x0
   a5ad0:   aa0103f4    mov x20, x1
   a5ad4:   b9401800    ldr w0, [x0, #24]
   a5ad8:   a9025bf5    stp x21, x22, [sp, #32]
   a5adc:   aa0203f5    mov x21, x2
   a5ae0:   f9001bf7    str x23, [sp, #48]
   a5ae4:   35000440    cbnz    w0, a5b6c <CTimer::GetUniversalTime(unsigned int*, unsigned int*)+0xac>
   a5ae8:   b9401676    ldr w22, [x19, #20]
   a5aec:   b9400e77    ldr w23, [x19, #12]
   a5af0:   b9401e61    ldr w1, [x19, #28]
   a5af4:   531c6c20    lsl w0, w1, #4
   a5af8:   4b010000    sub w0, w0, w1
   a5afc:   531e7400    lsl w0, w0, #2
   a5b00:   6b0002df    cmp w22, w0
   a5b04:   5400028b    b.lt    a5b54 <CTimer::GetUniversalTime(unsigned int*, unsigned int*)+0x94>
   a5b08:   b4000414    cbz x20, a5b88 <CTimer::GetUniversalTime(unsigned int*, unsigned int*)+0xc8>
   a5b0c:   4b0002d6    sub w22, w22, w0
   a5b10:   b9000296    str w22, [x20]
   a5b14:   b4000475    cbz x21, a5ba0 <CTimer::GetUniversalTime(unsigned int*, unsigned int*)+0xe0>
   a5b18:   5290a3e1    mov w1, #0x851f
   a5b1c:   72aa3d61    movk    w1, #0x51eb, lsl #16
   a5b20:   a94153f3    ldp x19, x20, [sp, #16]
   a5b24:   52800c83    mov w3, #0x64
   a5b28:   5284e202    mov w2, #0x2710
   a5b2c:   9ba17ee1    umull   x1, w23, w1
   a5b30:   52800020    mov w0, #0x1
   a5b34:   d365fc21    lsr x1, x1, #37
   a5b38:   1b03dc21    msub    w1, w1, w3, w23
   a5b3c:   f9401bf7    ldr x23, [sp, #48]
   a5b40:   1b027c21    mul w1, w1, w2
   a5b44:   b90002a1    str w1, [x21]
   a5b48:   a9425bf5    ldp x21, x22, [sp, #32]
   a5b4c:   a8c47bfd    ldp x29, x30, [sp], #64
   a5b50:   d65f03c0    ret
   a5b54:   a94153f3    ldp x19, x20, [sp, #16]
   a5b58:   52800000    mov w0, #0x0
   a5b5c:   a9425bf5    ldp x21, x22, [sp, #32]
   a5b60:   f9401bf7    ldr x23, [sp, #48]
   a5b64:   a8c47bfd    ldp x29, x30, [sp], #64
   a5b68:   d65f03c0    ret
   a5b6c:   94000ac1    bl  a8670 <EnterCritical>
   a5b70:   b9401676    ldr w22, [x19, #20]
   a5b74:   b9400e77    ldr w23, [x19, #12]
   a5b78:   b9401a60    ldr w0, [x19, #24]
   a5b7c:   34fffba0    cbz w0, a5af0 <CTimer::GetUniversalTime(unsigned int*, unsigned int*)+0x30>
   a5b80:   94000aec    bl  a8730 <LeaveCritical>
   a5b84:   17ffffdb    b   a5af0 <CTimer::GetUniversalTime(unsigned int*, unsigned int*)+0x30>
   a5b88:   d0000061    adrp    x1, b3000 <_etext+0x3f9c>
   a5b8c:   d0000060    adrp    x0, b3000 <_etext+0x3f9c>
   a5b90:   910e2021    add x1, x1, #0x388
   a5b94:   910fa000    add x0, x0, #0x3e8
   a5b98:   528025e2    mov w2, #0x12f
   a5b9c:   97ffdbc9    bl  9cac0 <assertion_failed>
   a5ba0:   d0000061    adrp    x1, b3000 <_etext+0x3f9c>
   a5ba4:   d0000060    adrp    x0, b3000 <_etext+0x3f9c>
   a5ba8:   910e2021    add x1, x1, #0x388
   a5bac:   910fe000    add x0, x0, #0x3f8
   a5bb0:   52802642    mov w2, #0x132
   a5bb4:   97ffdbc3    bl  9cac0 <assertion_failed>
   a5bb8:   d503201f    nop
   a5bbc:   d503201f    nop

00000000000a5bc0 <CTimer::GetTimeString()>:
   a5bc0:   a9bb7bfd    stp x29, x30, [sp, #-80]!
   a5bc4:   910003fd    mov x29, sp
   a5bc8:   a90153f3    stp x19, x20, [sp, #16]
   a5bcc:   aa0003f3    mov x19, x0
   a5bd0:   b9401800    ldr w0, [x0, #24]
   a5bd4:   a9046bf9    stp x25, x26, [sp, #64]
   a5bd8:   35000e20    cbnz    w0, a5d9c <CTimer::GetTimeString()+0x1dc>
   a5bdc:   b9401674    ldr w20, [x19, #20]
   a5be0:   b9400e7a    ldr w26, [x19, #12]
   a5be4:   2a1a0280    orr w0, w20, w26
   a5be8:   34000ea0    cbz w0, a5dbc <CTimer::GetTimeString()+0x1fc>
   a5bec:   a9025bf5    stp x21, x22, [sp, #32]
   a5bf0:   52911136    mov w22, #0x8889
   a5bf4:   72b11116    movk    w22, #0x8888, lsl #16
   a5bf8:   52955573    mov w19, #0xaaab
   a5bfc:   72b55553    movk    w19, #0xaaaa, lsl #16
   a5c00:   9bb67e99    umull   x25, w20, w22
   a5c04:   528b8523    mov w3, #0x5c29
   a5c08:   72b851e3    movk    w3, #0xc28f, lsl #16
   a5c0c:   a90363f7    stp x23, x24, [sp, #48]
   a5c10:   528b8502    mov w2, #0x5c28
   a5c14:   72a051e2    movk    w2, #0x28f, lsl #16
   a5c18:   529ae144    mov w4, #0xd70a
   a5c1c:   72a01464    movk    w4, #0xa3, lsl #16
   a5c20:   d365ff21    lsr x1, x25, #37
   a5c24:   5280f655    mov w21, #0x7b2
   a5c28:   531c6c20    lsl w0, w1, #4
   a5c2c:   9bb67c36    umull   x22, w1, w22
   a5c30:   4b010000    sub w0, w0, w1
   a5c34:   4b000a99    sub w25, w20, w0, lsl #2
   a5c38:   d365fed8    lsr x24, x22, #37
   a5c3c:   531c6f00    lsl w0, w24, #4
   a5c40:   9bb37f13    umull   x19, w24, w19
   a5c44:   4b180000    sub w0, w0, w24
   a5c48:   4b000836    sub w22, w1, w0, lsl #2
   a5c4c:   d364fe73    lsr x19, x19, #36
   a5c50:   14000008    b   a5c70 <CTimer::GetTimeString()+0xb0>
   a5c54:   f24006bf    tst x21, #0x3
   a5c58:   1a9f17e0    cset    w0, eq
   a5c5c:   1105b401    add w1, w0, #0x16d
   a5c60:   6b01027f    cmp w19, w1
   a5c64:   540001a3    b.cc    a5c98 <CTimer::GetTimeString()+0xd8>
   a5c68:   4b010273    sub w19, w19, w1
   a5c6c:   110006b5    add w21, w21, #0x1
   a5c70:   1b037ea0    mul w0, w21, w3
   a5c74:   13800801    ror w1, w0, #2
   a5c78:   6b02003f    cmp w1, w2
   a5c7c:   54fffec8    b.hi    a5c54 <CTimer::GetTimeString()+0x94>
   a5c80:   13801000    ror w0, w0, #4
   a5c84:   6b04001f    cmp w0, w4
   a5c88:   1a9f87e0    cset    w0, ls
   a5c8c:   1105b401    add w1, w0, #0x16d
   a5c90:   6b01027f    cmp w19, w1
   a5c94:   54fffea2    b.cs    a5c68 <CTimer::GetTimeString()+0xa8>
   a5c98:   f0000082    adrp    x2, b8000 <vtable for CGPIOPin+0x288>
   a5c9c:   912a4042    add x2, x2, #0xa90
   a5ca0:   52800014    mov w20, #0x0
   a5ca4:   14000003    b   a5cb0 <CTimer::GetTimeString()+0xf0>
   a5ca8:   4b010273    sub w19, w19, w1
   a5cac:   11000694    add w20, w20, #0x1
   a5cb0:   7100001f    cmp w0, #0x0
   a5cb4:   7a411a80    ccmp    w20, #0x1, #0x0, ne
   a5cb8:   540003e0    b.eq    a5d34 <CTimer::GetTimeString()+0x174>
   a5cbc:   b8745841    ldr w1, [x2, w20, uxtw #2]
   a5cc0:   6b01027f    cmp w19, w1
   a5cc4:   54ffff22    b.cs    a5ca8 <CTimer::GetTimeString()+0xe8>
   a5cc8:   5290a3f7    mov w23, #0x851f
   a5ccc:   72aa3d77    movk    w23, #0x51eb, lsl #16
   a5cd0:   52800c81    mov w1, #0x64
   a5cd4:   d2800400    mov x0, #0x20
   a5cd8:   9bb77f57    umull   x23, w26, w23
   a5cdc:   d365fef7    lsr x23, x23, #37
   a5ce0:   1b01eaf7    msub    w23, w23, w1, w26
   a5ce4:   940006b7    bl  a77c0 <operator new(unsigned long)>
   a5ce8:   aa0003fa    mov x26, x0
   a5cec:   97fff7f9    bl  a3cd0 <CString::CString()>
   a5cf0:   711edebf    cmp w21, #0x7b7
   a5cf4:   54000248    b.hi    a5d3c <CTimer::GetTimeString()+0x17c>
   a5cf8:   d0000061    adrp    x1, b3000 <_etext+0x3f9c>
   a5cfc:   2a1703e5    mov w5, w23
   a5d00:   2a1903e4    mov w4, w25
   a5d04:   2a1603e3    mov w3, w22
   a5d08:   2a1803e2    mov w2, w24
   a5d0c:   aa1a03e0    mov x0, x26
   a5d10:   9110c021    add x1, x1, #0x430
   a5d14:   97fffdfb    bl  a5500 <CString::Format(char const*, ...)>
   a5d18:   a94153f3    ldp x19, x20, [sp, #16]
   a5d1c:   aa1a03e0    mov x0, x26
   a5d20:   a9425bf5    ldp x21, x22, [sp, #32]
   a5d24:   a94363f7    ldp x23, x24, [sp, #48]
   a5d28:   a9446bf9    ldp x25, x26, [sp, #64]
   a5d2c:   a8c57bfd    ldp x29, x30, [sp], #80
   a5d30:   d65f03c0    ret
   a5d34:   528003a1    mov w1, #0x1d
   a5d38:   17ffffe2    b   a5cc0 <CTimer::GetTimeString()+0x100>
   a5d3c:   52955564    mov w4, #0xaaab
   a5d40:   72b55544    movk    w4, #0xaaaa, lsl #16
   a5d44:   b00000a0    adrp    x0, ba000 <font_data+0x1080>
   a5d48:   911e4000    add x0, x0, #0x790
   a5d4c:   9ba47f04    umull   x4, w24, w4
   a5d50:   d0000061    adrp    x1, b3000 <_etext+0x3f9c>
   a5d54:   f8745802    ldr x2, [x0, w20, uxtw #3]
   a5d58:   2a1703e7    mov w7, w23
   a5d5c:   2a1903e6    mov w6, w25
   a5d60:   2a1603e5    mov w5, w22
   a5d64:   11000663    add w3, w19, #0x1
   a5d68:   d364fc84    lsr x4, x4, #36
   a5d6c:   aa1a03e0    mov x0, x26
   a5d70:   0b040484    add w4, w4, w4, lsl #1
   a5d74:   91104021    add x1, x1, #0x410
   a5d78:   4b040f04    sub w4, w24, w4, lsl #3
   a5d7c:   97fffde1    bl  a5500 <CString::Format(char const*, ...)>
   a5d80:   a94153f3    ldp x19, x20, [sp, #16]
   a5d84:   aa1a03e0    mov x0, x26
   a5d88:   a9425bf5    ldp x21, x22, [sp, #32]
   a5d8c:   a94363f7    ldp x23, x24, [sp, #48]
   a5d90:   a9446bf9    ldp x25, x26, [sp, #64]
   a5d94:   a8c57bfd    ldp x29, x30, [sp], #80
   a5d98:   d65f03c0    ret
   a5d9c:   94000a35    bl  a8670 <EnterCritical>
   a5da0:   b9401674    ldr w20, [x19, #20]
   a5da4:   b9400e7a    ldr w26, [x19, #12]
   a5da8:   b9401a60    ldr w0, [x19, #24]
   a5dac:   34fff1c0    cbz w0, a5be4 <CTimer::GetTimeString()+0x24>
   a5db0:   94000a60    bl  a8730 <LeaveCritical>
   a5db4:   2a1a0280    orr w0, w20, w26
   a5db8:   35fff1a0    cbnz    w0, a5bec <CTimer::GetTimeString()+0x2c>
   a5dbc:   d280001a    mov x26, #0x0
   a5dc0:   a94153f3    ldp x19, x20, [sp, #16]
   a5dc4:   aa1a03e0    mov x0, x26
   a5dc8:   a9446bf9    ldp x25, x26, [sp, #64]
   a5dcc:   a8c57bfd    ldp x29, x30, [sp], #80
   a5dd0:   d65f03c0    ret
   a5dd4:   d503201f    nop
   a5dd8:   d503201f    nop
   a5ddc:   d503201f    nop

00000000000a5de0 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned long, void*, void*), void*, void*)>:
   a5de0:   a9bb7bfd    stp x29, x30, [sp, #-80]!
   a5de4:   910003fd    mov x29, sp
   a5de8:   a90363f7    stp x23, x24, [sp, #48]
   a5dec:   aa0003f7    mov x23, x0
   a5df0:   d2800500    mov x0, #0x28
   a5df4:   aa0303f8    mov x24, x3
   a5df8:   a90153f3    stp x19, x20, [sp, #16]
   a5dfc:   2a0103f4    mov w20, w1
   a5e00:   aa0203f3    mov x19, x2
   a5e04:   a9025bf5    stp x21, x22, [sp, #32]
   a5e08:   f90023f9    str x25, [sp, #64]
   a5e0c:   aa0403f9    mov x25, x4
   a5e10:   9400066c    bl  a77c0 <operator new(unsigned long)>
   a5e14:   b9400ef6    ldr w22, [x23, #12]
   a5e18:   0b1402d6    add w22, w22, w20
   a5e1c:   b40007d3    cbz x19, a5f14 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned long, void*, void*), void*, void*)+0x134>
   a5e20:   aa0003f5    mov x21, x0
   a5e24:   5289a861    mov w1, #0x4d43
   a5e28:   72a96a81    movk    w1, #0x4b54, lsl #16
   a5e2c:   b9402ae0    ldr w0, [x23, #40]
   a5e30:   f90006b3    str x19, [x21, #8]
   a5e34:   b90002a1    str w1, [x21]
   a5e38:   b90012b6    str w22, [x21, #16]
   a5e3c:   a901e6b8    stp x24, x25, [x21, #24]
   a5e40:   35000500    cbnz    w0, a5ee0 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned long, void*, void*), void*, void*)+0x100>
   a5e44:   910082f4    add x20, x23, #0x20
   a5e48:   aa1403e0    mov x0, x20
   a5e4c:   97ffeb21    bl  a0ad0 <CPtrList::GetFirst()>
   a5e50:   aa0003f3    mov x19, x0
   a5e54:   b4000700    cbz x0, a5f34 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned long, void*, void*), void*, void*)+0x154>
   a5e58:   aa1303e1    mov x1, x19
   a5e5c:   aa1403e0    mov x0, x20
   a5e60:   5289a878    mov w24, #0x4d43
   a5e64:   72a96a98    movk    w24, #0x4b54, lsl #16
   a5e68:   97ffeb36    bl  a0b40 <CPtrList::GetPtr(TPtrListElement*)>
   a5e6c:   b4000220    cbz x0, a5eb0 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned long, void*, void*), void*, void*)+0xd0>
   a5e70:   b9400001    ldr w1, [x0]
   a5e74:   6b18003f    cmp w1, w24
   a5e78:   54000281    b.ne    a5ec8 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned long, void*, void*), void*, void*)+0xe8>
   a5e7c:   b9401000    ldr w0, [x0, #16]
   a5e80:   aa1303e1    mov x1, x19
   a5e84:   4b160000    sub w0, w0, w22
   a5e88:   7100001f    cmp w0, #0x0
   a5e8c:   aa1403e0    mov x0, x20
   a5e90:   540002cc    b.gt    a5ee8 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned long, void*, void*), void*, void*)+0x108>
   a5e94:   97ffeb13    bl  a0ae0 <CPtrList::GetNext(TPtrListElement*)>
   a5e98:   b40004e0    cbz x0, a5f34 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned long, void*, void*), void*, void*)+0x154>
   a5e9c:   aa0003f3    mov x19, x0
   a5ea0:   aa1403e0    mov x0, x20
   a5ea4:   aa1303e1    mov x1, x19
   a5ea8:   97ffeb26    bl  a0b40 <CPtrList::GetPtr(TPtrListElement*)>
   a5eac:   b5fffe20    cbnz    x0, a5e70 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned long, void*, void*), void*, void*)+0x90>
   a5eb0:   d0000061    adrp    x1, b3000 <_etext+0x3f9c>
   a5eb4:   d0000060    adrp    x0, b3000 <_etext+0x3f9c>
   a5eb8:   910e2021    add x1, x1, #0x388
   a5ebc:   91112000    add x0, x0, #0x448
   a5ec0:   52803322    mov w2, #0x199
   a5ec4:   97ffdaff    bl  9cac0 <assertion_failed>
   a5ec8:   d0000061    adrp    x1, b3000 <_etext+0x3f9c>
   a5ecc:   d0000060    adrp    x0, b3000 <_etext+0x3f9c>
   a5ed0:   910e2021    add x1, x1, #0x388
   a5ed4:   91116000    add x0, x0, #0x458
   a5ed8:   52803342    mov w2, #0x19a
   a5edc:   97ffdaf9    bl  9cac0 <assertion_failed>
   a5ee0:   940009e4    bl  a8670 <EnterCritical>
   a5ee4:   17ffffd8    b   a5e44 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned long, void*, void*), void*, void*)+0x64>
   a5ee8:   aa1503e2    mov x2, x21
   a5eec:   97ffeb2d    bl  a0ba0 <CPtrList::InsertBefore(TPtrListElement*, void*)>
   a5ef0:   b9402ae0    ldr w0, [x23, #40]
   a5ef4:   350001c0    cbnz    w0, a5f2c <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned long, void*, void*), void*, void*)+0x14c>
   a5ef8:   a94153f3    ldp x19, x20, [sp, #16]
   a5efc:   aa1503e0    mov x0, x21
   a5f00:   a9425bf5    ldp x21, x22, [sp, #32]
   a5f04:   a94363f7    ldp x23, x24, [sp, #48]
   a5f08:   f94023f9    ldr x25, [sp, #64]
   a5f0c:   a8c57bfd    ldp x29, x30, [sp], #80
   a5f10:   d65f03c0    ret
   a5f14:   d0000061    adrp    x1, b3000 <_etext+0x3f9c>
   a5f18:   d0000060    adrp    x0, b3000 <_etext+0x3f9c>
   a5f1c:   910e2021    add x1, x1, #0x388
   a5f20:   9126e000    add x0, x0, #0x9b8
   a5f24:   52803122    mov w2, #0x189
   a5f28:   97ffdae6    bl  9cac0 <assertion_failed>
   a5f2c:   94000a01    bl  a8730 <LeaveCritical>
   a5f30:   17fffff2    b   a5ef8 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned long, void*, void*), void*, void*)+0x118>
   a5f34:   aa1303e1    mov x1, x19
   a5f38:   aa1403e0    mov x0, x20
   a5f3c:   aa1503e2    mov x2, x21
   a5f40:   97ffeb58    bl  a0ca0 <CPtrList::InsertAfter(TPtrListElement*, void*)>
   a5f44:   17ffffeb    b   a5ef0 <CTimer::StartKernelTimer(unsigned int, void (*)(unsigned long, void*, void*), void*, void*)+0x110>
   a5f48:   d503201f    nop
   a5f4c:   d503201f    nop

00000000000a5f50 <CTimer::CancelKernelTimer(unsigned long)>:
   a5f50:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   a5f54:   910003fd    mov x29, sp
   a5f58:   a90153f3    stp x19, x20, [sp, #16]
   a5f5c:   f90013f5    str x21, [sp, #32]
   a5f60:   b4000421    cbz x1, a5fe4 <CTimer::CancelKernelTimer(unsigned long)+0x94>
   a5f64:   aa0003f4    mov x20, x0
   a5f68:   b9402800    ldr w0, [x0, #40]
   a5f6c:   aa0103f3    mov x19, x1
   a5f70:   350002e0    cbnz    w0, a5fcc <CTimer::CancelKernelTimer(unsigned long)+0x7c>
   a5f74:   91008295    add x21, x20, #0x20
   a5f78:   aa1303e1    mov x1, x19
   a5f7c:   aa1503e0    mov x0, x21
   a5f80:   97ffebd4    bl  a0ed0 <CPtrList::Find(void*)>
   a5f84:   aa0003e1    mov x1, x0
   a5f88:   b4000160    cbz x0, a5fb4 <CTimer::CancelKernelTimer(unsigned long)+0x64>
   a5f8c:   b9400262    ldr w2, [x19]
   a5f90:   5289a860    mov w0, #0x4d43
   a5f94:   72a96a80    movk    w0, #0x4b54, lsl #16
   a5f98:   6b00005f    cmp w2, w0
   a5f9c:   54000301    b.ne    a5ffc <CTimer::CancelKernelTimer(unsigned long)+0xac>
   a5fa0:   aa1503e0    mov x0, x21
   a5fa4:   97ffeb7f    bl  a0da0 <CPtrList::Remove(TPtrListElement*)>
   a5fa8:   aa1303e0    mov x0, x19
   a5fac:   d2800501    mov x1, #0x28
   a5fb0:   9400062c    bl  a7860 <operator delete(void*, unsigned long)>
   a5fb4:   b9402a80    ldr w0, [x20, #40]
   a5fb8:   350000e0    cbnz    w0, a5fd4 <CTimer::CancelKernelTimer(unsigned long)+0x84>
   a5fbc:   a94153f3    ldp x19, x20, [sp, #16]
   a5fc0:   f94013f5    ldr x21, [sp, #32]
   a5fc4:   a8c37bfd    ldp x29, x30, [sp], #48
   a5fc8:   d65f03c0    ret
   a5fcc:   940009a9    bl  a8670 <EnterCritical>
   a5fd0:   17ffffe9    b   a5f74 <CTimer::CancelKernelTimer(unsigned long)+0x24>
   a5fd4:   a94153f3    ldp x19, x20, [sp, #16]
   a5fd8:   f94013f5    ldr x21, [sp, #32]
   a5fdc:   a8c37bfd    ldp x29, x30, [sp], #48
   a5fe0:   140009d4    b   a8730 <LeaveCritical>
   a5fe4:   d0000061    adrp    x1, b3000 <_etext+0x3f9c>
   a5fe8:   b0000060    adrp    x0, b2000 <_etext+0x2f9c>
   a5fec:   910e2021    add x1, x1, #0x388
   a5ff0:   910f8000    add x0, x0, #0x3e0
   a5ff4:   528036c2    mov w2, #0x1b6
   a5ff8:   97ffdab2    bl  9cac0 <assertion_failed>
   a5ffc:   d0000061    adrp    x1, b3000 <_etext+0x3f9c>
   a6000:   b0000060    adrp    x0, b3000 <_etext+0x3f9c>
   a6004:   910e2021    add x1, x1, #0x388
   a6008:   910f0000    add x0, x0, #0x3c0
   a600c:   528037a2    mov w2, #0x1bd
   a6010:   97ffdaac    bl  9cac0 <assertion_failed>
   a6014:   d503201f    nop
   a6018:   d503201f    nop
   a601c:   d503201f    nop

00000000000a6020 <CTimer::PollKernelTimers()>:
   a6020:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   a6024:   910003fd    mov x29, sp
   a6028:   a90153f3    stp x19, x20, [sp, #16]
   a602c:   a9025bf5    stp x21, x22, [sp, #32]
   a6030:   aa0003f5    mov x21, x0
   a6034:   b9402800    ldr w0, [x0, #40]
   a6038:   350007c0    cbnz    w0, a6130 <CTimer::PollKernelTimers()+0x110>
   a603c:   910082b6    add x22, x21, #0x20
   a6040:   aa1603e0    mov x0, x22
   a6044:   97ffeaa3    bl  a0ad0 <CPtrList::GetFirst()>
   a6048:   aa0003f4    mov x20, x0
   a604c:   b40004e0    cbz x0, a60e8 <CTimer::PollKernelTimers()+0xc8>
   a6050:   f9001bf7    str x23, [sp, #48]
   a6054:   5289a877    mov w23, #0x4d43
   a6058:   72a96a97    movk    w23, #0x4b54, lsl #16
   a605c:   aa1403e1    mov x1, x20
   a6060:   aa1603e0    mov x0, x22
   a6064:   97ffeab7    bl  a0b40 <CPtrList::GetPtr(TPtrListElement*)>
   a6068:   aa0003f3    mov x19, x0
   a606c:   b4000660    cbz x0, a6138 <CTimer::PollKernelTimers()+0x118>
   a6070:   b9400000    ldr w0, [x0]
   a6074:   6b17001f    cmp w0, w23
   a6078:   540006c1    b.ne    a6150 <CTimer::PollKernelTimers()+0x130>
   a607c:   b9401260    ldr w0, [x19, #16]
   a6080:   b9400ea1    ldr w1, [x21, #12]
   a6084:   4b010000    sub w0, w0, w1
   a6088:   7100001f    cmp w0, #0x0
   a608c:   540002cc    b.gt    a60e4 <CTimer::PollKernelTimers()+0xc4>
   a6090:   aa1403e1    mov x1, x20
   a6094:   aa1603e0    mov x0, x22
   a6098:   97ffea92    bl  a0ae0 <CPtrList::GetNext(TPtrListElement*)>
   a609c:   aa0003e2    mov x2, x0
   a60a0:   aa1403e1    mov x1, x20
   a60a4:   aa1603e0    mov x0, x22
   a60a8:   aa0203f4    mov x20, x2
   a60ac:   97ffeb3d    bl  a0da0 <CPtrList::Remove(TPtrListElement*)>
   a60b0:   b9402aa0    ldr w0, [x21, #40]
   a60b4:   350002c0    cbnz    w0, a610c <CTimer::PollKernelTimers()+0xec>
   a60b8:   f9400663    ldr x3, [x19, #8]
   a60bc:   b40002e3    cbz x3, a6118 <CTimer::PollKernelTimers()+0xf8>
   a60c0:   a9418a61    ldp x1, x2, [x19, #24]
   a60c4:   aa1303e0    mov x0, x19
   a60c8:   d63f0060    blr x3
   a60cc:   aa1303e0    mov x0, x19
   a60d0:   d2800501    mov x1, #0x28
   a60d4:   940005e3    bl  a7860 <operator delete(void*, unsigned long)>
   a60d8:   b9402aa0    ldr w0, [x21, #40]
   a60dc:   35000120    cbnz    w0, a6100 <CTimer::PollKernelTimers()+0xe0>
   a60e0:   b5fffbf4    cbnz    x20, a605c <CTimer::PollKernelTimers()+0x3c>
   a60e4:   f9401bf7    ldr x23, [sp, #48]
   a60e8:   b9402aa0    ldr w0, [x21, #40]
   a60ec:   350003e0    cbnz    w0, a6168 <CTimer::PollKernelTimers()+0x148>
   a60f0:   a94153f3    ldp x19, x20, [sp, #16]
   a60f4:   a9425bf5    ldp x21, x22, [sp, #32]
   a60f8:   a8c47bfd    ldp x29, x30, [sp], #64
   a60fc:   d65f03c0    ret
   a6100:   9400095c    bl  a8670 <EnterCritical>
   a6104:   b5fffad4    cbnz    x20, a605c <CTimer::PollKernelTimers()+0x3c>
   a6108:   17fffff7    b   a60e4 <CTimer::PollKernelTimers()+0xc4>
   a610c:   94000989    bl  a8730 <LeaveCritical>
   a6110:   f9400663    ldr x3, [x19, #8]
   a6114:   b5fffd63    cbnz    x3, a60c0 <CTimer::PollKernelTimers()+0xa0>
   a6118:   b0000061    adrp    x1, b3000 <_etext+0x3f9c>
   a611c:   b0000060    adrp    x0, b3000 <_etext+0x3f9c>
   a6120:   910e2021    add x1, x1, #0x388
   a6124:   9126e000    add x0, x0, #0x9b8
   a6128:   52803c22    mov w2, #0x1e1
   a612c:   97ffda65    bl  9cac0 <assertion_failed>
   a6130:   94000950    bl  a8670 <EnterCritical>
   a6134:   17ffffc2    b   a603c <CTimer::PollKernelTimers()+0x1c>
   a6138:   b0000061    adrp    x1, b3000 <_etext+0x3f9c>
   a613c:   90000060    adrp    x0, b2000 <_etext+0x2f9c>
   a6140:   910e2021    add x1, x1, #0x388
   a6144:   910f8000    add x0, x0, #0x3e0
   a6148:   52803a42    mov w2, #0x1d2
   a614c:   97ffda5d    bl  9cac0 <assertion_failed>
   a6150:   b0000061    adrp    x1, b3000 <_etext+0x3f9c>
   a6154:   b0000060    adrp    x0, b3000 <_etext+0x3f9c>
   a6158:   910e2021    add x1, x1, #0x388
   a615c:   910f0000    add x0, x0, #0x3c0
   a6160:   52803a62    mov w2, #0x1d3
   a6164:   97ffda57    bl  9cac0 <assertion_failed>
   a6168:   a94153f3    ldp x19, x20, [sp, #16]
   a616c:   a9425bf5    ldp x21, x22, [sp, #32]
   a6170:   a8c47bfd    ldp x29, x30, [sp], #64
   a6174:   1400096f    b   a8730 <LeaveCritical>
   a6178:   d503201f    nop
   a617c:   d503201f    nop

00000000000a6180 <CTimer::InterruptHandler()>:
   a6180:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   a6184:   910003fd    mov x29, sp
   a6188:   a90153f3    stp x19, x20, [sp, #16]
   a618c:   aa0003f4    mov x20, x0
   a6190:   f90013f5    str x21, [sp, #32]
   a6194:   d53be241    mrs x1, cntp_cval_el0
   a6198:   b9400800    ldr w0, [x0, #8]
   a619c:   8b010000    add x0, x0, x1
   a61a0:   d51be240    msr cntp_cval_el0, x0
   a61a4:   b9401a80    ldr w0, [x20, #24]
   a61a8:   35000460    cbnz    w0, a6234 <CTimer::InterruptHandler()+0xb4>
   a61ac:   b9400e81    ldr w1, [x20, #12]
   a61b0:   528b8520    mov w0, #0x5c29
   a61b4:   72b851e0    movk    w0, #0xc28f, lsl #16
   a61b8:   528b8502    mov w2, #0x5c28
   a61bc:   72a051e2    movk    w2, #0x28f, lsl #16
   a61c0:   11000421    add w1, w1, #0x1
   a61c4:   1b007c20    mul w0, w1, w0
   a61c8:   b9000e81    str w1, [x20, #12]
   a61cc:   13800800    ror w0, w0, #2
   a61d0:   6b02001f    cmp w0, w2
   a61d4:   54000229    b.ls    a6218 <CTimer::InterruptHandler()+0x98>
   a61d8:   aa1403e0    mov x0, x20
   a61dc:   91010295    add x21, x20, #0x40
   a61e0:   97ffff90    bl  a6020 <CTimer::PollKernelTimers()>
   a61e4:   b9406280    ldr w0, [x20, #96]
   a61e8:   d2800013    mov x19, #0x0
   a61ec:   340000e0    cbz w0, a6208 <CTimer::InterruptHandler()+0x88>
   a61f0:   f8737aa0    ldr x0, [x21, x19, lsl #3]
   a61f4:   91000673    add x19, x19, #0x1
   a61f8:   d63f0000    blr x0
   a61fc:   b9406280    ldr w0, [x20, #96]
   a6200:   6b13001f    cmp w0, w19
   a6204:   54ffff68    b.hi    a61f0 <CTimer::InterruptHandler()+0x70>
   a6208:   a94153f3    ldp x19, x20, [sp, #16]
   a620c:   f94013f5    ldr x21, [sp, #32]
   a6210:   a8c37bfd    ldp x29, x30, [sp], #48
   a6214:   d65f03c0    ret
   a6218:   b9401280    ldr w0, [x20, #16]
   a621c:   11000400    add w0, w0, #0x1
   a6220:   b9001280    str w0, [x20, #16]
   a6224:   b9401680    ldr w0, [x20, #20]
   a6228:   11000400    add w0, w0, #0x1
   a622c:   b9001680    str w0, [x20, #20]
   a6230:   17ffffea    b   a61d8 <CTimer::InterruptHandler()+0x58>
   a6234:   9400090f    bl  a8670 <EnterCritical>
   a6238:   b9400e81    ldr w1, [x20, #12]
   a623c:   528b8520    mov w0, #0x5c29
   a6240:   72b851e0    movk    w0, #0xc28f, lsl #16
   a6244:   528b8503    mov w3, #0x5c28
   a6248:   72a051e3    movk    w3, #0x28f, lsl #16
   a624c:   b9401a82    ldr w2, [x20, #24]
   a6250:   11000421    add w1, w1, #0x1
   a6254:   1b007c20    mul w0, w1, w0
   a6258:   b9000e81    str w1, [x20, #12]
   a625c:   13800800    ror w0, w0, #2
   a6260:   6b03001f    cmp w0, w3
   a6264:   54000089    b.ls    a6274 <CTimer::InterruptHandler()+0xf4>
   a6268:   34fffb82    cbz w2, a61d8 <CTimer::InterruptHandler()+0x58>
   a626c:   94000931    bl  a8730 <LeaveCritical>
   a6270:   17ffffda    b   a61d8 <CTimer::InterruptHandler()+0x58>
   a6274:   b9401280    ldr w0, [x20, #16]
   a6278:   11000400    add w0, w0, #0x1
   a627c:   b9001280    str w0, [x20, #16]
   a6280:   b9401680    ldr w0, [x20, #20]
   a6284:   11000400    add w0, w0, #0x1
   a6288:   b9001680    str w0, [x20, #20]
   a628c:   17fffff7    b   a6268 <CTimer::InterruptHandler()+0xe8>

00000000000a6290 <CTimer::InterruptHandler(void*)>:
   a6290:   b4000040    cbz x0, a6298 <CTimer::InterruptHandler(void*)+0x8>
   a6294:   17ffffbb    b   a6180 <CTimer::InterruptHandler()>
   a6298:   b0000061    adrp    x1, b3000 <_etext+0x3f9c>
   a629c:   b0000040    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   a62a0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a62a4:   910e2021    add x1, x1, #0x388
   a62a8:   910003fd    mov x29, sp
   a62ac:   91128000    add x0, x0, #0x4a0
   a62b0:   52804502    mov w2, #0x228
   a62b4:   97ffda03    bl  9cac0 <assertion_failed>
   a62b8:   d503201f    nop
   a62bc:   d503201f    nop

00000000000a62c0 <CTimer::TuneMsDelay()>:
   a62c0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   a62c4:   910003fd    mov x29, sp
   a62c8:   52807d01    mov w1, #0x3e8
   a62cc:   a90153f3    stp x19, x20, [sp, #16]
   a62d0:   aa0003f3    mov x19, x0
   a62d4:   5290a3f4    mov w20, #0x851f
   a62d8:   72aa3d74    movk    w20, #0x51eb, lsl #16
   a62dc:   a9025bf5    stp x21, x22, [sp, #32]
   a62e0:   5284e215    mov w21, #0x2710
   a62e4:   b9400c16    ldr w22, [x0, #12]
   a62e8:   b9402c00    ldr w0, [x0, #44]
   a62ec:   1b017c00    mul w0, w0, w1
   a62f0:   940016f4    bl  abec0 <DelayLoop>
   a62f4:   b9400e61    ldr w1, [x19, #12]
   a62f8:   5289ba62    mov w2, #0x4dd3
   a62fc:   72a20c42    movk    w2, #0x1062, lsl #16
   a6300:   b9402e60    ldr w0, [x19, #44]
   a6304:   4b160021    sub w1, w1, w22
   a6308:   1ac10ab5    udiv    w21, w21, w1
   a630c:   1b007ea0    mul w0, w21, w0
   a6310:   9bb47c00    umull   x0, w0, w20
   a6314:   d365fc00    lsr x0, x0, #37
   a6318:   1107d001    add w1, w0, #0x1f4
   a631c:   b9002e60    str w0, [x19, #44]
   a6320:   9ba27c20    umull   x0, w1, w2
   a6324:   d366fc00    lsr x0, x0, #38
   a6328:   b9003260    str w0, [x19, #48]
   a632c:   97ffe4b5    bl  9f600 <CLogger::Get()>
   a6330:   9bb47ea4    umull   x4, w21, w20
   a6334:   52800c85    mov w5, #0x64
   a6338:   d0000081    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a633c:   912a4021    add x1, x1, #0xa90
   a6340:   b0000063    adrp    x3, b3000 <_etext+0x3f9c>
   a6344:   a94153f3    ldp x19, x20, [sp, #16]
   a6348:   9100c021    add x1, x1, #0x30
   a634c:   91120063    add x3, x3, #0x480
   a6350:   d365fc84    lsr x4, x4, #37
   a6354:   52800062    mov w2, #0x3
   a6358:   1b05d485    msub    w5, w4, w5, w21
   a635c:   a9425bf5    ldp x21, x22, [sp, #32]
   a6360:   a8c37bfd    ldp x29, x30, [sp], #48
   a6364:   17ffe68f    b   9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   a6368:   d503201f    nop
   a636c:   d503201f    nop

00000000000a6370 <CTimer::Initialize()>:
   a6370:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a6374:   910003fd    mov x29, sp
   a6378:   a90153f3    stp x19, x20, [sp, #16]
   a637c:   aa0003f3    mov x19, x0
   a6380:   f9400000    ldr x0, [x0]
   a6384:   b40004c0    cbz x0, a641c <CTimer::Initialize()+0xac>
   a6388:   aa1303e3    mov x3, x19
   a638c:   528003c1    mov w1, #0x1e
   a6390:   90000002    adrp    x2, a6000 <CTimer::CancelKernelTimer(unsigned long)+0xb0>
   a6394:   910a4042    add x2, x2, #0x290
   a6398:   94000fb2    bl  aa260 <CInterruptSystem::ConnectIRQ(unsigned int, void (*)(void*), void*)>
   a639c:   d53be001    mrs x1, cntfrq_el0
   a63a0:   d28b8520    mov x0, #0x5c29
   a63a4:   f2b851e0    movk    x0, #0xc28f, lsl #16
   a63a8:   f2c51ea0    movk    x0, #0x28f5, lsl #32
   a63ac:   f2f1eb80    movk    x0, #0x8f5c, lsl #48
   a63b0:   d291eb82    mov x2, #0x8f5c
   a63b4:   f2beb842    movk    x2, #0xf5c2, lsl #16
   a63b8:   9b007c20    mul x0, x1, x0
   a63bc:   f2cb8502    movk    x2, #0x5c28, lsl #32
   a63c0:   f2e051e2    movk    x2, #0x28f, lsl #48
   a63c4:   93c00800    ror x0, x0, #2
   a63c8:   eb02001f    cmp x0, x2
   a63cc:   54000348    b.hi    a6434 <CTimer::Initialize()+0xc4>
   a63d0:   d29eb860    mov x0, #0xf5c3
   a63d4:   f2ab8500    movk    x0, #0x5c28, lsl #16
   a63d8:   d342fc21    lsr x1, x1, #2
   a63dc:   f2d851e0    movk    x0, #0xc28f, lsl #32
   a63e0:   f2e51ea0    movk    x0, #0x28f5, lsl #48
   a63e4:   9bc07c21    umulh   x1, x1, x0
   a63e8:   d342fc21    lsr x1, x1, #2
   a63ec:   b9000a61    str w1, [x19, #8]
   a63f0:   d53be020    mrs x0, cntpct_el0
   a63f4:   8b214001    add x1, x0, w1, uxtw
   a63f8:   d51be241    msr cntp_cval_el0, x1
   a63fc:   d2800034    mov x20, #0x1
   a6400:   d51be234    msr cntp_ctl_el0, x20
   a6404:   aa1303e0    mov x0, x19
   a6408:   97ffffae    bl  a62c0 <CTimer::TuneMsDelay()>
   a640c:   2a1403e0    mov w0, w20
   a6410:   a94153f3    ldp x19, x20, [sp, #16]
   a6414:   a8c27bfd    ldp x29, x30, [sp], #32
   a6418:   d65f03c0    ret
   a641c:   b0000061    adrp    x1, b3000 <_etext+0x3f9c>
   a6420:   b0000060    adrp    x0, b3000 <_etext+0x3f9c>
   a6424:   910e2021    add x1, x1, #0x388
   a6428:   910ea000    add x0, x0, #0x3a8
   a642c:   52800c82    mov w2, #0x64
   a6430:   97ffd9a4    bl  9cac0 <assertion_failed>
   a6434:   b0000061    adrp    x1, b3000 <_etext+0x3f9c>
   a6438:   b0000060    adrp    x0, b3000 <_etext+0x3f9c>
   a643c:   910e2021    add x1, x1, #0x388
   a6440:   91126000    add x0, x0, #0x498
   a6444:   52800f82    mov w2, #0x7c
   a6448:   97ffd99e    bl  9cac0 <assertion_failed>
   a644c:   d503201f    nop

00000000000a6450 <CTimer::RegisterUpdateTimeHandler(bool (*)(unsigned int, unsigned int))>:
   a6450:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a6454:   910003fd    mov x29, sp
   a6458:   f9401c02    ldr x2, [x0, #56]
   a645c:   b50000a2    cbnz    x2, a6470 <CTimer::RegisterUpdateTimeHandler(bool (*)(unsigned int, unsigned int))+0x20>
   a6460:   f9001c01    str x1, [x0, #56]
   a6464:   b4000121    cbz x1, a6488 <CTimer::RegisterUpdateTimeHandler(bool (*)(unsigned int, unsigned int))+0x38>
   a6468:   a8c17bfd    ldp x29, x30, [sp], #16
   a646c:   d65f03c0    ret
   a6470:   b0000061    adrp    x1, b3000 <_etext+0x3f9c>
   a6474:   b0000060    adrp    x0, b3000 <_etext+0x3f9c>
   a6478:   910e2021    add x1, x1, #0x388
   a647c:   9112c000    add x0, x0, #0x4b0
   a6480:   528047c2    mov w2, #0x23e
   a6484:   97ffd98f    bl  9cac0 <assertion_failed>
   a6488:   b0000061    adrp    x1, b3000 <_etext+0x3f9c>
   a648c:   b0000060    adrp    x0, b3000 <_etext+0x3f9c>
   a6490:   910e2021    add x1, x1, #0x388
   a6494:   91134000    add x0, x0, #0x4d0
   a6498:   52804802    mov w2, #0x240
   a649c:   97ffd989    bl  9cac0 <assertion_failed>

00000000000a64a0 <CTimer::RegisterPeriodicHandler(void (*)())>:
   a64a0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a64a4:   910003fd    mov x29, sp
   a64a8:   b40001c1    cbz x1, a64e0 <CTimer::RegisterPeriodicHandler(void (*)())+0x40>
   a64ac:   b9406002    ldr w2, [x0, #96]
   a64b0:   71000c5f    cmp w2, #0x3
   a64b4:   54000228    b.hi    a64f8 <CTimer::RegisterPeriodicHandler(void (*)())+0x58>
   a64b8:   b9406002    ldr w2, [x0, #96]
   a64bc:   2a0203e2    mov w2, w2
   a64c0:   91002042    add x2, x2, #0x8
   a64c4:   f8227801    str x1, [x0, x2, lsl #3]
   a64c8:   d5033f9f    dsb sy
   a64cc:   b9406001    ldr w1, [x0, #96]
   a64d0:   11000421    add w1, w1, #0x1
   a64d4:   b9006001    str w1, [x0, #96]
   a64d8:   a8c17bfd    ldp x29, x30, [sp], #16
   a64dc:   d65f03c0    ret
   a64e0:   b0000061    adrp    x1, b3000 <_etext+0x3f9c>
   a64e4:   b0000060    adrp    x0, b3000 <_etext+0x3f9c>
   a64e8:   910e2021    add x1, x1, #0x388
   a64ec:   9126e000    add x0, x0, #0x9b8
   a64f0:   528048a2    mov w2, #0x245
   a64f4:   97ffd973    bl  9cac0 <assertion_failed>
   a64f8:   b0000061    adrp    x1, b3000 <_etext+0x3f9c>
   a64fc:   b0000060    adrp    x0, b3000 <_etext+0x3f9c>
   a6500:   910e2021    add x1, x1, #0x388
   a6504:   9113c000    add x0, x0, #0x4f0
   a6508:   528048e2    mov w2, #0x247
   a650c:   97ffd96d    bl  9cac0 <assertion_failed>

00000000000a6510 <CTimer::SimpleMsDelay(unsigned int)>:
   a6510:   34000280    cbz w0, a6560 <CTimer::SimpleMsDelay(unsigned int)+0x50>
   a6514:   52807d01    mov w1, #0x3e8
   a6518:   1b017c00    mul w0, w0, w1
   a651c:   34000220    cbz w0, a6560 <CTimer::SimpleMsDelay(unsigned int)+0x50>
   a6520:   11000401    add w1, w0, #0x1
   a6524:   d5033fdf    isb
   a6528:   d53be023    mrs x3, cntpct_el0
   a652c:   d53be000    mrs x0, cntfrq_el0
   a6530:   d2884804    mov x4, #0x4240
   a6534:   f2a001e4    movk    x4, #0xf, lsl #16
   a6538:   9b047c63    mul x3, x3, x4
   a653c:   9ac00863    udiv    x3, x3, x0
   a6540:   d5033fdf    isb
   a6544:   d53be020    mrs x0, cntpct_el0
   a6548:   d53be002    mrs x2, cntfrq_el0
   a654c:   9b047c00    mul x0, x0, x4
   a6550:   9ac20800    udiv    x0, x0, x2
   a6554:   4b030000    sub w0, w0, w3
   a6558:   6b00003f    cmp w1, w0
   a655c:   54ffff28    b.hi    a6540 <CTimer::SimpleMsDelay(unsigned int)+0x30>
   a6560:   d65f03c0    ret
   a6564:   d503201f    nop
   a6568:   d503201f    nop
   a656c:   d503201f    nop

00000000000a6570 <CTimer::SimpleusDelay(unsigned int)>:
   a6570:   34000240    cbz w0, a65b8 <CTimer::SimpleusDelay(unsigned int)+0x48>
   a6574:   11000401    add w1, w0, #0x1
   a6578:   d5033fdf    isb
   a657c:   d53be023    mrs x3, cntpct_el0
   a6580:   d53be000    mrs x0, cntfrq_el0
   a6584:   d2884804    mov x4, #0x4240
   a6588:   f2a001e4    movk    x4, #0xf, lsl #16
   a658c:   9b047c63    mul x3, x3, x4
   a6590:   9ac00863    udiv    x3, x3, x0
   a6594:   d503201f    nop
   a6598:   d5033fdf    isb
   a659c:   d53be020    mrs x0, cntpct_el0
   a65a0:   d53be002    mrs x2, cntfrq_el0
   a65a4:   9b047c00    mul x0, x0, x4
   a65a8:   9ac20800    udiv    x0, x0, x2
   a65ac:   4b030000    sub w0, w0, w3
   a65b0:   6b00003f    cmp w1, w0
   a65b4:   54ffff28    b.hi    a6598 <CTimer::SimpleusDelay(unsigned int)+0x28>
   a65b8:   d65f03c0    ret
   a65bc:   d503201f    nop

00000000000a65c0 <CTimer::IsLeapYear(unsigned int)>:
   a65c0:   528b8521    mov w1, #0x5c29
   a65c4:   72b851e1    movk    w1, #0xc28f, lsl #16
   a65c8:   528b8502    mov w2, #0x5c28
   a65cc:   72a051e2    movk    w2, #0x28f, lsl #16
   a65d0:   1b017c01    mul w1, w0, w1
   a65d4:   13810823    ror w3, w1, #2
   a65d8:   6b02007f    cmp w3, w2
   a65dc:   54000089    b.ls    a65ec <CTimer::IsLeapYear(unsigned int)+0x2c>
   a65e0:   f240041f    tst x0, #0x3
   a65e4:   1a9f17e0    cset    w0, eq
   a65e8:   d65f03c0    ret
   a65ec:   529ae140    mov w0, #0xd70a
   a65f0:   72a01460    movk    w0, #0xa3, lsl #16
   a65f4:   13811021    ror w1, w1, #4
   a65f8:   6b00003f    cmp w1, w0
   a65fc:   1a9f87e0    cset    w0, ls
   a6600:   d65f03c0    ret
   a6604:   d503201f    nop
   a6608:   d503201f    nop
   a660c:   d503201f    nop

00000000000a6610 <CTimer::GetDaysOfMonth(unsigned int, unsigned int)>:
   a6610:   7100041f    cmp w0, #0x1
   a6614:   2a0003e2    mov w2, w0
   a6618:   540000a0    b.eq    a662c <CTimer::GetDaysOfMonth(unsigned int, unsigned int)+0x1c>
   a661c:   d0000080    adrp    x0, b8000 <vtable for CGPIOPin+0x288>
   a6620:   912a4000    add x0, x0, #0xa90
   a6624:   b8625800    ldr w0, [x0, w2, uxtw #2]
   a6628:   d65f03c0    ret
   a662c:   528b8520    mov w0, #0x5c29
   a6630:   72b851e0    movk    w0, #0xc28f, lsl #16
   a6634:   528b8503    mov w3, #0x5c28
   a6638:   72a051e3    movk    w3, #0x28f, lsl #16
   a663c:   1b007c20    mul w0, w1, w0
   a6640:   13800804    ror w4, w0, #2
   a6644:   6b03009f    cmp w4, w3
   a6648:   540000a9    b.ls    a665c <CTimer::GetDaysOfMonth(unsigned int, unsigned int)+0x4c>
   a664c:   f240043f    tst x1, #0x3
   a6650:   528003a0    mov w0, #0x1d
   a6654:   54fffe41    b.ne    a661c <CTimer::GetDaysOfMonth(unsigned int, unsigned int)+0xc>
   a6658:   d65f03c0    ret
   a665c:   13801000    ror w0, w0, #4
   a6660:   529ae141    mov w1, #0xd70a
   a6664:   72a01461    movk    w1, #0xa3, lsl #16
   a6668:   6b01001f    cmp w0, w1
   a666c:   528003a0    mov w0, #0x1d
   a6670:   54fffd68    b.hi    a661c <CTimer::GetDaysOfMonth(unsigned int, unsigned int)+0xc>
   a6674:   d65f03c0    ret
   a6678:   d503201f    nop
   a667c:   d503201f    nop

00000000000a6680 <CTimer::Get()>:
   a6680:   900000a0    adrp    x0, ba000 <font_data+0x1080>
   a6684:   f944f400    ldr x0, [x0, #2536]
   a6688:   b4000040    cbz x0, a6690 <CTimer::Get()+0x10>
   a668c:   d65f03c0    ret
   a6690:   b0000061    adrp    x1, b3000 <_etext+0x3f9c>
   a6694:   b0000040    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   a6698:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a669c:   910e2021    add x1, x1, #0x388
   a66a0:   910003fd    mov x29, sp
   a66a4:   91020000    add x0, x0, #0x80
   a66a8:   52805102    mov w2, #0x288
   a66ac:   97ffd905    bl  9cac0 <assertion_failed>

00000000000a66b0 <memmove>:
   a66b0:   eb01001f    cmp x0, x1
   a66b4:   54000089    b.ls    a66c4 <memmove+0x14>
   a66b8:   8b020023    add x3, x1, x2
   a66bc:   eb03001f    cmp x0, x3
   a66c0:   54000043    b.cc    a66c8 <memmove+0x18>
   a66c4:   140001ad    b   a6d78 <memcpy>
   a66c8:   d1000443    sub x3, x2, #0x1
   a66cc:   b40000c2    cbz x2, a66e4 <memmove+0x34>
   a66d0:   38e36822    ldrsb   w2, [x1, x3]
   a66d4:   38236802    strb    w2, [x0, x3]
   a66d8:   d1000463    sub x3, x3, #0x1
   a66dc:   b100047f    cmn x3, #0x1
   a66e0:   54ffff81    b.ne    a66d0 <memmove+0x20>
   a66e4:   d65f03c0    ret
   a66e8:   d503201f    nop
   a66ec:   d503201f    nop

00000000000a66f0 <memcmp>:
   a66f0:   b40001a2    cbz x2, a6724 <memcmp+0x34>
   a66f4:   d2800003    mov x3, #0x0
   a66f8:   14000004    b   a6708 <memcmp+0x18>
   a66fc:   54000183    b.cc    a672c <memcmp+0x3c>
   a6700:   eb02007f    cmp x3, x2
   a6704:   54000100    b.eq    a6724 <memcmp+0x34>
   a6708:   38636805    ldrb    w5, [x0, x3]
   a670c:   38636824    ldrb    w4, [x1, x3]
   a6710:   91000463    add x3, x3, #0x1
   a6714:   6b0400bf    cmp w5, w4
   a6718:   54ffff29    b.ls    a66fc <memcmp+0xc>
   a671c:   52800020    mov w0, #0x1
   a6720:   d65f03c0    ret
   a6724:   52800000    mov w0, #0x0
   a6728:   d65f03c0    ret
   a672c:   12800000    mov w0, #0xffffffff
   a6730:   d65f03c0    ret
   a6734:   d503201f    nop
   a6738:   d503201f    nop
   a673c:   d503201f    nop

00000000000a6740 <strlen>:
   a6740:   aa0003e2    mov x2, x0
   a6744:   39c00000    ldrsb   w0, [x0]
   a6748:   340000c0    cbz w0, a6760 <strlen+0x20>
   a674c:   d2800000    mov x0, #0x0
   a6750:   91000400    add x0, x0, #0x1
   a6754:   38e06841    ldrsb   w1, [x2, x0]
   a6758:   35ffffc1    cbnz    w1, a6750 <strlen+0x10>
   a675c:   d65f03c0    ret
   a6760:   d2800000    mov x0, #0x0
   a6764:   d65f03c0    ret
   a6768:   d503201f    nop
   a676c:   d503201f    nop

00000000000a6770 <strcmp>:
   a6770:   39c00002    ldrsb   w2, [x0]
   a6774:   35000102    cbnz    w2, a6794 <strcmp+0x24>
   a6778:   14000017    b   a67d4 <strcmp+0x64>
   a677c:   6b02007f    cmp w3, w2
   a6780:   5400018b    b.lt    a67b0 <strcmp+0x40>
   a6784:   540001ac    b.gt    a67b8 <strcmp+0x48>
   a6788:   38c01c02    ldrsb   w2, [x0, #1]!
   a678c:   340001a2    cbz w2, a67c0 <strcmp+0x50>
   a6790:   aa0403e1    mov x1, x4
   a6794:   39c00023    ldrsb   w3, [x1]
   a6798:   91000424    add x4, x1, #0x1
   a679c:   35ffff03    cbnz    w3, a677c <strcmp+0xc>
   a67a0:   6b03005f    cmp w2, w3
   a67a4:   5a9fa3e0    csetm   w0, lt
   a67a8:   1a9fd400    csinc   w0, w0, wzr, le
   a67ac:   d65f03c0    ret
   a67b0:   52800020    mov w0, #0x1
   a67b4:   d65f03c0    ret
   a67b8:   12800000    mov w0, #0xffffffff
   a67bc:   d65f03c0    ret
   a67c0:   39c00423    ldrsb   w3, [x1, #1]
   a67c4:   6b03005f    cmp w2, w3
   a67c8:   5a9fa3e0    csetm   w0, lt
   a67cc:   1a9fd400    csinc   w0, w0, wzr, le
   a67d0:   17fffff7    b   a67ac <strcmp+0x3c>
   a67d4:   39c00023    ldrsb   w3, [x1]
   a67d8:   17fffff2    b   a67a0 <strcmp+0x30>
   a67dc:   d503201f    nop

00000000000a67e0 <strcasecmp>:
   a67e0:   1400000c    b   a6810 <strcasecmp+0x30>
   a67e4:   51008063    sub w3, w3, #0x20
   a67e8:   39c00022    ldrsb   w2, [x1]
   a67ec:   51018444    sub w4, w2, #0x61
   a67f0:   7100649f    cmp w4, #0x19
   a67f4:   54000288    b.hi    a6844 <strcasecmp+0x64>
   a67f8:   51008042    sub w2, w2, #0x20
   a67fc:   6b02007f    cmp w3, w2
   a6800:   91000400    add x0, x0, #0x1
   a6804:   91000421    add x1, x1, #0x1
   a6808:   5400028c    b.gt    a6858 <strcasecmp+0x78>
   a680c:   540002ab    b.lt    a6860 <strcasecmp+0x80>
   a6810:   39c00003    ldrsb   w3, [x0]
   a6814:   51018462    sub w2, w3, #0x61
   a6818:   7100645f    cmp w2, #0x19
   a681c:   54fffe49    b.ls    a67e4 <strcasecmp+0x4>
   a6820:   35fffe43    cbnz    w3, a67e8 <strcasecmp+0x8>
   a6824:   39c00022    ldrsb   w2, [x1]
   a6828:   51018440    sub w0, w2, #0x61
   a682c:   7100641f    cmp w0, #0x19
   a6830:   540000c8    b.hi    a6848 <strcasecmp+0x68>
   a6834:   51008042    sub w2, w2, #0x20
   a6838:   6b03005f    cmp w2, w3
   a683c:   5a9fd3e0    csetm   w0, gt
   a6840:   d65f03c0    ret
   a6844:   35fffdc2    cbnz    w2, a67fc <strcasecmp+0x1c>
   a6848:   6b03005f    cmp w2, w3
   a684c:   52800020    mov w0, #0x1
   a6850:   54ffff4a    b.ge    a6838 <strcasecmp+0x58>
   a6854:   d65f03c0    ret
   a6858:   52800020    mov w0, #0x1
   a685c:   d65f03c0    ret
   a6860:   12800000    mov w0, #0xffffffff
   a6864:   d65f03c0    ret
   a6868:   d503201f    nop
   a686c:   d503201f    nop

00000000000a6870 <strncmp>:
   a6870:   b5000162    cbnz    x2, a689c <strncmp+0x2c>
   a6874:   14000012    b   a68bc <strncmp+0x4c>
   a6878:   39c00024    ldrsb   w4, [x1]
   a687c:   34000144    cbz w4, a68a4 <strncmp+0x34>
   a6880:   6b04007f    cmp w3, w4
   a6884:   91000400    add x0, x0, #0x1
   a6888:   91000421    add x1, x1, #0x1
   a688c:   540001cc    b.gt    a68c4 <strncmp+0x54>
   a6890:   540001eb    b.lt    a68cc <strncmp+0x5c>
   a6894:   f1000442    subs    x2, x2, #0x1
   a6898:   54000120    b.eq    a68bc <strncmp+0x4c>
   a689c:   39c00003    ldrsb   w3, [x0]
   a68a0:   35fffec3    cbnz    w3, a6878 <strncmp+0x8>
   a68a4:   39c00002    ldrsb   w2, [x0]
   a68a8:   39c00020    ldrsb   w0, [x1]
   a68ac:   6b00005f    cmp w2, w0
   a68b0:   5a9fa3e0    csetm   w0, lt
   a68b4:   1a9fd400    csinc   w0, w0, wzr, le
   a68b8:   d65f03c0    ret
   a68bc:   52800000    mov w0, #0x0
   a68c0:   d65f03c0    ret
   a68c4:   52800020    mov w0, #0x1
   a68c8:   d65f03c0    ret
   a68cc:   12800000    mov w0, #0xffffffff
   a68d0:   d65f03c0    ret
   a68d4:   d503201f    nop
   a68d8:   d503201f    nop
   a68dc:   d503201f    nop

00000000000a68e0 <strncasecmp>:
   a68e0:   b50001e2    cbnz    x2, a691c <strncasecmp+0x3c>
   a68e4:   1400001c    b   a6954 <strncasecmp+0x74>
   a68e8:   51008084    sub w4, w4, #0x20
   a68ec:   39c00023    ldrsb   w3, [x1]
   a68f0:   51018465    sub w5, w3, #0x61
   a68f4:   710064bf    cmp w5, #0x19
   a68f8:   54000328    b.hi    a695c <strncasecmp+0x7c>
   a68fc:   51008063    sub w3, w3, #0x20
   a6900:   91000400    add x0, x0, #0x1
   a6904:   6b04007f    cmp w3, w4
   a6908:   5400032b    b.lt    a696c <strncasecmp+0x8c>
   a690c:   5400034c    b.gt    a6974 <strncasecmp+0x94>
   a6910:   f1000442    subs    x2, x2, #0x1
   a6914:   91000421    add x1, x1, #0x1
   a6918:   540001e0    b.eq    a6954 <strncasecmp+0x74>
   a691c:   39c00004    ldrsb   w4, [x0]
   a6920:   51018483    sub w3, w4, #0x61
   a6924:   7100647f    cmp w3, #0x19
   a6928:   54fffe09    b.ls    a68e8 <strncasecmp+0x8>
   a692c:   35fffe04    cbnz    w4, a68ec <strncasecmp+0xc>
   a6930:   39c00023    ldrsb   w3, [x1]
   a6934:   51018461    sub w1, w3, #0x61
   a6938:   51008060    sub w0, w3, #0x20
   a693c:   7100683f    cmp w1, #0x1a
   a6940:   1a833003    csel    w3, w0, w3, cc
   a6944:   6b03009f    cmp w4, w3
   a6948:   5a9fa3e0    csetm   w0, lt
   a694c:   1a9fd400    csinc   w0, w0, wzr, le
   a6950:   d65f03c0    ret
   a6954:   52800000    mov w0, #0x0
   a6958:   d65f03c0    ret
   a695c:   34ffff43    cbz w3, a6944 <strncasecmp+0x64>
   a6960:   6b04007f    cmp w3, w4
   a6964:   91000400    add x0, x0, #0x1
   a6968:   54fffd2a    b.ge    a690c <strncasecmp+0x2c>
   a696c:   52800020    mov w0, #0x1
   a6970:   d65f03c0    ret
   a6974:   12800000    mov w0, #0xffffffff
   a6978:   d65f03c0    ret
   a697c:   d503201f    nop

00000000000a6980 <strcpy>:
   a6980:   39c00022    ldrsb   w2, [x1]
   a6984:   aa0003e3    mov x3, x0
   a6988:   340000a2    cbz w2, a699c <strcpy+0x1c>
   a698c:   d503201f    nop
   a6990:   38001462    strb    w2, [x3], #1
   a6994:   38c01c22    ldrsb   w2, [x1, #1]!
   a6998:   35ffffc2    cbnz    w2, a6990 <strcpy+0x10>
   a699c:   3900007f    strb    wzr, [x3]
   a69a0:   d65f03c0    ret
   a69a4:   d503201f    nop
   a69a8:   d503201f    nop
   a69ac:   d503201f    nop

00000000000a69b0 <strncpy>:
   a69b0:   b4000142    cbz x2, a69d8 <strncpy+0x28>
   a69b4:   aa0003e4    mov x4, x0
   a69b8:   14000003    b   a69c4 <strncpy+0x14>
   a69bc:   38001483    strb    w3, [x4], #1
   a69c0:   540000c0    b.eq    a69d8 <strncpy+0x28>
   a69c4:   39c00023    ldrsb   w3, [x1]
   a69c8:   f1000442    subs    x2, x2, #0x1
   a69cc:   91000421    add x1, x1, #0x1
   a69d0:   35ffff63    cbnz    w3, a69bc <strncpy+0xc>
   a69d4:   3900009f    strb    wzr, [x4]
   a69d8:   d65f03c0    ret
   a69dc:   d503201f    nop

00000000000a69e0 <strcat>:
   a69e0:   39c00002    ldrsb   w2, [x0]
   a69e4:   34000182    cbz w2, a6a14 <strcat+0x34>
   a69e8:   aa0003e2    mov x2, x0
   a69ec:   d503201f    nop
   a69f0:   38c01c43    ldrsb   w3, [x2, #1]!
   a69f4:   35ffffe3    cbnz    w3, a69f0 <strcat+0x10>
   a69f8:   39c00023    ldrsb   w3, [x1]
   a69fc:   34000083    cbz w3, a6a0c <strcat+0x2c>
   a6a00:   38001443    strb    w3, [x2], #1
   a6a04:   38c01c23    ldrsb   w3, [x1, #1]!
   a6a08:   35ffffc3    cbnz    w3, a6a00 <strcat+0x20>
   a6a0c:   3900005f    strb    wzr, [x2]
   a6a10:   d65f03c0    ret
   a6a14:   aa0003e2    mov x2, x0
   a6a18:   17fffff8    b   a69f8 <strcat+0x18>
   a6a1c:   d503201f    nop

00000000000a6a20 <strchr>:
   a6a20:   39c00002    ldrsb   w2, [x0]
   a6a24:   35000082    cbnz    w2, a6a34 <strchr+0x14>
   a6a28:   14000006    b   a6a40 <strchr+0x20>
   a6a2c:   38c01c02    ldrsb   w2, [x0, #1]!
   a6a30:   34000082    cbz w2, a6a40 <strchr+0x20>
   a6a34:   6b01005f    cmp w2, w1
   a6a38:   54ffffa1    b.ne    a6a2c <strchr+0xc>
   a6a3c:   d65f03c0    ret
   a6a40:   d2800000    mov x0, #0x0
   a6a44:   d65f03c0    ret
   a6a48:   d503201f    nop
   a6a4c:   d503201f    nop

00000000000a6a50 <strstr>:
   a6a50:   39c00002    ldrsb   w2, [x0]
   a6a54:   39c00025    ldrsb   w5, [x1]
   a6a58:   35000082    cbnz    w2, a6a68 <strstr+0x18>
   a6a5c:   710000bf    cmp w5, #0x0
   a6a60:   9a9f0000    csel    x0, x0, xzr, eq
   a6a64:   d65f03c0    ret
   a6a68:   34ffffe5    cbz w5, a6a64 <strstr+0x14>
   a6a6c:   2a0503e3    mov w3, w5
   a6a70:   d2800002    mov x2, #0x0
   a6a74:   14000003    b   a6a80 <strstr+0x30>
   a6a78:   38e26823    ldrsb   w3, [x1, x2]
   a6a7c:   34ffff43    cbz w3, a6a64 <strstr+0x14>
   a6a80:   38e26804    ldrsb   w4, [x0, x2]
   a6a84:   91000442    add x2, x2, #0x1
   a6a88:   6b03009f    cmp w4, w3
   a6a8c:   54ffff60    b.eq    a6a78 <strstr+0x28>
   a6a90:   38c01c02    ldrsb   w2, [x0, #1]!
   a6a94:   35fffec2    cbnz    w2, a6a6c <strstr+0x1c>
   a6a98:   d2800000    mov x0, #0x0
   a6a9c:   d65f03c0    ret

00000000000a6aa0 <strtok_r>:
   a6aa0:   b40004a0    cbz x0, a6b34 <strtok_r+0x94>
   a6aa4:   39c00004    ldrsb   w4, [x0]
   a6aa8:   34000404    cbz w4, a6b28 <strtok_r+0x88>
   a6aac:   39c00027    ldrsb   w7, [x1]
   a6ab0:   34000167    cbz w7, a6adc <strtok_r+0x3c>
   a6ab4:   d503201f    nop
   a6ab8:   aa0103e5    mov x5, x1
   a6abc:   2a0703e3    mov w3, w7
   a6ac0:   14000003    b   a6acc <strtok_r+0x2c>
   a6ac4:   38c01ca3    ldrsb   w3, [x5, #1]!
   a6ac8:   340000a3    cbz w3, a6adc <strtok_r+0x3c>
   a6acc:   6b04007f    cmp w3, w4
   a6ad0:   54ffffa1    b.ne    a6ac4 <strtok_r+0x24>
   a6ad4:   38c01c04    ldrsb   w4, [x0, #1]!
   a6ad8:   17fffff8    b   a6ab8 <strtok_r+0x18>
   a6adc:   34000264    cbz w4, a6b28 <strtok_r+0x88>
   a6ae0:   aa0003e6    mov x6, x0
   a6ae4:   350000e7    cbnz    w7, a6b00 <strtok_r+0x60>
   a6ae8:   38c01cc4    ldrsb   w4, [x6, #1]!
   a6aec:   35ffffe4    cbnz    w4, a6ae8 <strtok_r+0x48>
   a6af0:   f9000046    str x6, [x2]
   a6af4:   d65f03c0    ret
   a6af8:   38c01cc4    ldrsb   w4, [x6, #1]!
   a6afc:   34ffffa4    cbz w4, a6af0 <strtok_r+0x50>
   a6b00:   aa0103e5    mov x5, x1
   a6b04:   2a0703e3    mov w3, w7
   a6b08:   14000003    b   a6b14 <strtok_r+0x74>
   a6b0c:   38c01ca3    ldrsb   w3, [x5, #1]!
   a6b10:   34ffff43    cbz w3, a6af8 <strtok_r+0x58>
   a6b14:   6b04007f    cmp w3, w4
   a6b18:   54ffffa1    b.ne    a6b0c <strtok_r+0x6c>
   a6b1c:   380014df    strb    wzr, [x6], #1
   a6b20:   f9000046    str x6, [x2]
   a6b24:   17fffff4    b   a6af4 <strtok_r+0x54>
   a6b28:   d2800000    mov x0, #0x0
   a6b2c:   f900005f    str xzr, [x2]
   a6b30:   d65f03c0    ret
   a6b34:   f9400040    ldr x0, [x2]
   a6b38:   b5fffb60    cbnz    x0, a6aa4 <strtok_r+0x4>
   a6b3c:   d2800000    mov x0, #0x0
   a6b40:   17fffffc    b   a6b30 <strtok_r+0x90>
   a6b44:   d503201f    nop
   a6b48:   d503201f    nop
   a6b4c:   d503201f    nop

00000000000a6b50 <strtoul>:
   a6b50:   aa0003e5    mov x5, x0
   a6b54:   b4000041    cbz x1, a6b5c <strtoul+0xc>
   a6b58:   f9000020    str x0, [x1]
   a6b5c:   51000840    sub w0, w2, #0x2
   a6b60:   7100881f    cmp w0, #0x22
   a6b64:   7a408844    ccmp    w2, #0x0, #0x4, hi
   a6b68:   54000a41    b.ne    a6cb0 <strtoul+0x160>
   a6b6c:   d503201f    nop
   a6b70:   39c000a3    ldrsb   w3, [x5]
   a6b74:   51002464    sub w4, w3, #0x9
   a6b78:   7100807f    cmp w3, #0x20
   a6b7c:   12001c84    and w4, w4, #0xff
   a6b80:   54000300    b.eq    a6be0 <strtoul+0x90>
   a6b84:   7100109f    cmp w4, #0x4
   a6b88:   540002c9    b.ls    a6be0 <strtoul+0x90>
   a6b8c:   7100ac7f    cmp w3, #0x2b
   a6b90:   540002c0    b.eq    a6be8 <strtoul+0x98>
   a6b94:   7100b47f    cmp w3, #0x2d
   a6b98:   52800009    mov w9, #0x0
   a6b9c:   540002c1    b.ne    a6bf4 <strtoul+0xa4>
   a6ba0:   39c004a3    ldrsb   w3, [x5, #1]
   a6ba4:   52800029    mov w9, #0x1
   a6ba8:   910004a5    add x5, x5, #0x1
   a6bac:   7100c07f    cmp w3, #0x30
   a6bb0:   54000261    b.ne    a6bfc <strtoul+0xac>
   a6bb4:   39c004a3    ldrsb   w3, [x5, #1]
   a6bb8:   910004a4    add x4, x5, #0x1
   a6bbc:   121a7860    and w0, w3, #0xffffffdf
   a6bc0:   7101601f    cmp w0, #0x58
   a6bc4:   540007a1    b.ne    a6cb8 <strtoul+0x168>
   a6bc8:   721b785f    tst w2, #0xffffffef
   a6bcc:   54000721    b.ne    a6cb0 <strtoul+0x160>
   a6bd0:   39c008a3    ldrsb   w3, [x5, #2]
   a6bd4:   52800202    mov w2, #0x10
   a6bd8:   910008a5    add x5, x5, #0x2
   a6bdc:   1400000b    b   a6c08 <strtoul+0xb8>
   a6be0:   910004a5    add x5, x5, #0x1
   a6be4:   17ffffe3    b   a6b70 <strtoul+0x20>
   a6be8:   39c004a3    ldrsb   w3, [x5, #1]
   a6bec:   52800009    mov w9, #0x0
   a6bf0:   910004a5    add x5, x5, #0x1
   a6bf4:   7100c07f    cmp w3, #0x30
   a6bf8:   54fffde0    b.eq    a6bb4 <strtoul+0x64>
   a6bfc:   7100005f    cmp w2, #0x0
   a6c00:   52800140    mov w0, #0xa
   a6c04:   1a801042    csel    w2, w2, w0, ne
   a6c08:   7100bc7f    cmp w3, #0x2f
   a6c0c:   2a0303e4    mov w4, w3
   a6c10:   540004cd    b.le    a6ca8 <strtoul+0x158>
   a6c14:   52800027    mov w7, #0x1
   a6c18:   d2800006    mov x6, #0x0
   a6c1c:   93407c48    sxtw    x8, w2
   a6c20:   51018463    sub w3, w3, #0x61
   a6c24:   7100647f    cmp w3, #0x19
   a6c28:   54000248    b.hi    a6c70 <strtoul+0x120>
   a6c2c:   51008084    sub w4, w4, #0x20
   a6c30:   51001c84    sub w4, w4, #0x7
   a6c34:   5100c084    sub w4, w4, #0x30
   a6c38:   6b02009f    cmp w4, w2
   a6c3c:   93407c80    sxtw    x0, w4
   a6c40:   5400024a    b.ge    a6c88 <strtoul+0x138>
   a6c44:   9b060100    madd    x0, x8, x6, x0
   a6c48:   52800007    mov w7, #0x0
   a6c4c:   eb06001f    cmp x0, x6
   a6c50:   aa0003e6    mov x6, x0
   a6c54:   540003a3    b.cc    a6cc8 <strtoul+0x178>
   a6c58:   38c01ca4    ldrsb   w4, [x5, #1]!
   a6c5c:   7100bc9f    cmp w4, #0x2f
   a6c60:   2a0403e3    mov w3, w4
   a6c64:   54fffdec    b.gt    a6c20 <strtoul+0xd0>
   a6c68:   52800022    mov w2, #0x1
   a6c6c:   14000009    b   a6c90 <strtoul+0x140>
   a6c70:   7101009f    cmp w4, #0x40
   a6c74:   54fffdec    b.gt    a6c30 <strtoul+0xe0>
   a6c78:   5100c084    sub w4, w4, #0x30
   a6c7c:   6b02009f    cmp w4, w2
   a6c80:   93407c80    sxtw    x0, w4
   a6c84:   54fffe0b    b.lt    a6c44 <strtoul+0xf4>
   a6c88:   520000e2    eor w2, w7, #0x1
   a6c8c:   aa0603e0    mov x0, x6
   a6c90:   0a090042    and w2, w2, w9
   a6c94:   b4000041    cbz x1, a6c9c <strtoul+0x14c>
   a6c98:   f9000025    str x5, [x1]
   a6c9c:   7100005f    cmp w2, #0x0
   a6ca0:   da800400    cneg    x0, x0, ne
   a6ca4:   d65f03c0    ret
   a6ca8:   b4000041    cbz x1, a6cb0 <strtoul+0x160>
   a6cac:   f9000025    str x5, [x1]
   a6cb0:   d2800000    mov x0, #0x0
   a6cb4:   d65f03c0    ret
   a6cb8:   aa0403e5    mov x5, x4
   a6cbc:   35fffa62    cbnz    w2, a6c08 <strtoul+0xb8>
   a6cc0:   52800102    mov w2, #0x8
   a6cc4:   17ffffd1    b   a6c08 <strtoul+0xb8>
   a6cc8:   b4000041    cbz x1, a6cd0 <strtoul+0x180>
   a6ccc:   f9000025    str x5, [x1]
   a6cd0:   92800000    mov x0, #0xffffffffffffffff
   a6cd4:   d65f03c0    ret
   a6cd8:   d503201f    nop
   a6cdc:   d503201f    nop

00000000000a6ce0 <strtoull>:
   a6ce0:   17ffff9c    b   a6b50 <strtoul>
   a6ce4:   d503201f    nop
   a6ce8:   d503201f    nop
   a6cec:   d503201f    nop

00000000000a6cf0 <atoi>:
   a6cf0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a6cf4:   52800142    mov w2, #0xa
   a6cf8:   910003fd    mov x29, sp
   a6cfc:   d2800001    mov x1, #0x0
   a6d00:   97ffff94    bl  a6b50 <strtoul>
   a6d04:   a8c17bfd    ldp x29, x30, [sp], #16
   a6d08:   d65f03c0    ret
   a6d0c:   d503201f    nop

00000000000a6d10 <char2int>:
   a6d10:   13001c00    sxtb    w0, w0
   a6d14:   d65f03c0    ret

memset:
  tst x0, #0x7
  b.ne    2f
  cmp x2, #0x10
  b.cc    6f
  orr w8, w1, w1, lsl #8
  orr w9, w8, w8, lsl #16
  mov x10, x0
1:
  stp w9, w9, [x10]
  add x8, x10, #0x10
  sub x2, x2, #0x10
  cmp x2, #0xf
  stp w9, w9, [x10, #8]
  mov x10, x8
  b.hi    1b
  b   3f
2:
  mov x8, x0
3:
  cbz x2, 5f
4:
  subs    x2, x2, #0x1
  strb    w1, [x8], #1
  b.ne    4b
5:
  ret
6:
  mov x8, x0
  cbnz    x2, 4b
  b   5b

00000000000a6d18 <memset>:
   a6d18:   f240081f    tst x0, #0x7
   a6d1c:   540001c1    b.ne    a6d54 <memset+0x3c>
   a6d20:   f100405f    cmp x2, #0x10
   a6d24:   54000243    b.cc    a6d6c <memset+0x54>
   a6d28:   2a012028    orr w8, w1, w1, lsl #8
   a6d2c:   2a084109    orr w9, w8, w8, lsl #16
   a6d30:   aa0003ea    mov x10, x0
   a6d34:   29002549    stp w9, w9, [x10]
   a6d38:   91004148    add x8, x10, #0x10
   a6d3c:   d1004042    sub x2, x2, #0x10
   a6d40:   f1003c5f    cmp x2, #0xf
   a6d44:   29012549    stp w9, w9, [x10, #8]
   a6d48:   aa0803ea    mov x10, x8
   a6d4c:   54ffff48    b.hi    a6d34 <memset+0x1c>
   a6d50:   14000002    b   a6d58 <memset+0x40>
   a6d54:   aa0003e8    mov x8, x0
   a6d58:   b4000082    cbz x2, a6d68 <memset+0x50>
   a6d5c:   f1000442    subs    x2, x2, #0x1
   a6d60:   38001501    strb    w1, [x8], #1
   a6d64:   54ffffc1    b.ne    a6d5c <memset+0x44>
   a6d68:   d65f03c0    ret
   a6d6c:   aa0003e8    mov x8, x0
   a6d70:   b5ffff62    cbnz    x2, a6d5c <memset+0x44>
   a6d74:   17fffffd    b   a6d68 <memset+0x50>

00000000000a6d78 <memcpy>:
   a6d78:   aa0003e8    mov x8, x0
   a6d7c:   f101fc5f    cmp x2, #0x7f
   a6d80:   540001c9    b.ls    a6db8 <memcpy+0x40>
   a6d84:   f240083f    tst x1, #0x7
   a6d88:   54000181    b.ne    a6db8 <memcpy+0x40>
   a6d8c:   f240083f    tst x1, #0x7
   a6d90:   54000141    b.ne    a6db8 <memcpy+0x40>
   a6d94:   d2800803    mov x3, #0x40
   a6d98:   a8c11424    ldp x4, x5, [x1], #16
   a6d9c:   a8c11c26    ldp x6, x7, [x1], #16
   a6da0:   d1008042    sub x2, x2, #0x20
   a6da4:   a8811404    stp x4, x5, [x0], #16
   a6da8:   a8811c06    stp x6, x7, [x0], #16
   a6dac:   f8a36821    prfm    pldl1strm, [x1, x3]
   a6db0:   f1007c5f    cmp x2, #0x1f
   a6db4:   54ffff28    b.hi    a6d98 <memcpy+0x20>
   a6db8:   f100005f    cmp x2, #0x0
   a6dbc:   540000a0    b.eq    a6dd0 <memcpy+0x58>
   a6dc0:   38401423    ldrb    w3, [x1], #1
   a6dc4:   f1000442    subs    x2, x2, #0x1
   a6dc8:   38001403    strb    w3, [x0], #1
   a6dcc:   54ffffa1    b.ne    a6dc0 <memcpy+0x48>
   a6dd0:   aa0803e0    mov x0, x8
   a6dd4:   d65f03c0    ret
    ...

00000000000a6de0 <CVirtualGPIOPin::~CVirtualGPIOPin()>:
   a6de0:   d65f03c0    ret
   a6de4:   d503201f    nop
   a6de8:   d503201f    nop
   a6dec:   d503201f    nop

00000000000a6df0 <CVirtualGPIOPin::~CVirtualGPIOPin()>:
   a6df0:   d2800301    mov x1, #0x18
   a6df4:   1400029b    b   a7860 <operator delete(void*, unsigned long)>
   a6df8:   d503201f    nop
   a6dfc:   d503201f    nop

00000000000a6e00 <CVirtualGPIOPin::Write(unsigned int)>:
   a6e00:   a9bb7bfd    stp x29, x30, [sp, #-80]!
   a6e04:   910003fd    mov x29, sp
   a6e08:   a90153f3    stp x19, x20, [sp, #16]
   a6e0c:   2a0103f4    mov w20, w1
   a6e10:   aa0003f3    mov x19, x0
   a6e14:   39402001    ldrb    w1, [x0, #8]
   a6e18:   b9400c00    ldr w0, [x0, #12]
   a6e1c:   36000261    tbz w1, #0, a6e68 <CVirtualGPIOPin::Write(unsigned int)+0x68>
   a6e20:   350006c0    cbnz    w0, a6ef8 <CVirtualGPIOPin::Write(unsigned int)+0xf8>
   a6e24:   52800001    mov w1, #0x0
   a6e28:   9100c3e0    add x0, sp, #0x30
   a6e2c:   97ffd749    bl  9cb50 <CBcmPropertyTags::CBcmPropertyTags(bool)>
   a6e30:   52801043    mov w3, #0x82
   a6e34:   9100e3e2    add x2, sp, #0x38
   a6e38:   9100c3e0    add x0, sp, #0x30
   a6e3c:   52900821    mov w1, #0x8041
   a6e40:   72a00061    movk    w1, #0x3, lsl #16
   a6e44:   52800104    mov w4, #0x8
   a6e48:   2908d3e3    stp w3, w20, [sp, #68]
   a6e4c:   52800283    mov w3, #0x14
   a6e50:   97ffd7a0    bl  9ccd0 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   a6e54:   9100c3e0    add x0, sp, #0x30
   a6e58:   97ffd742    bl  9cb60 <CBcmPropertyTags::~CBcmPropertyTags()>
   a6e5c:   a94153f3    ldp x19, x20, [sp, #16]
   a6e60:   a8c57bfd    ldp x29, x30, [sp], #80
   a6e64:   d65f03c0    ret
   a6e68:   2a000280    orr w0, w20, w0
   a6e6c:   7100041f    cmp w0, #0x1
   a6e70:   54ffff68    b.hi    a6e5c <CVirtualGPIOPin::Write(unsigned int)+0x5c>
   a6e74:   a9025bf5    stp x21, x22, [sp, #32]
   a6e78:   900000b5    adrp    x21, ba000 <font_data+0x1080>
   a6e7c:   9127c2b6    add x22, x21, #0x9f0
   a6e80:   f944faa0    ldr x0, [x21, #2544]
   a6e84:   b50000a0    cbnz    x0, a6e98 <CVirtualGPIOPin::Write(unsigned int)+0x98>
   a6e88:   a94153f3    ldp x19, x20, [sp, #16]
   a6e8c:   a9425bf5    ldp x21, x22, [sp, #32]
   a6e90:   a8c57bfd    ldp x29, x30, [sp], #80
   a6e94:   d65f03c0    ret
   a6e98:   b9400ac0    ldr w0, [x22, #8]
   a6e9c:   35000440    cbnz    w0, a6f24 <CVirtualGPIOPin::Write(unsigned int)+0x124>
   a6ea0:   79402a60    ldrh    w0, [x19, #20]
   a6ea4:   b9001274    str w20, [x19, #16]
   a6ea8:   79402e61    ldrh    w1, [x19, #22]
   a6eac:   4b010002    sub w2, w0, w1
   a6eb0:   13003c42    sxth    w2, w2
   a6eb4:   7100005f    cmp w2, #0x0
   a6eb8:   540002cd    b.le    a6f10 <CVirtualGPIOPin::Write(unsigned int)+0x110>
   a6ebc:   35000134    cbnz    w20, a6ee0 <CVirtualGPIOPin::Write(unsigned int)+0xe0>
   a6ec0:   11000421    add w1, w1, #0x1
   a6ec4:   12003c21    and w1, w1, #0xffff
   a6ec8:   79002e61    strh    w1, [x19, #22]
   a6ecc:   b9400e62    ldr w2, [x19, #12]
   a6ed0:   2a004020    orr w0, w1, w0, lsl #16
   a6ed4:   f944faa3    ldr x3, [x21, #2544]
   a6ed8:   531e7441    lsl w1, w2, #2
   a6edc:   b8214860    str w0, [x3, w1, uxtw]
   a6ee0:   b9400ac0    ldr w0, [x22, #8]
   a6ee4:   34fffd20    cbz w0, a6e88 <CVirtualGPIOPin::Write(unsigned int)+0x88>
   a6ee8:   a94153f3    ldp x19, x20, [sp, #16]
   a6eec:   a9425bf5    ldp x21, x22, [sp, #32]
   a6ef0:   a8c57bfd    ldp x29, x30, [sp], #80
   a6ef4:   1400060f    b   a8730 <LeaveCritical>
   a6ef8:   d0000081    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a6efc:   912ba021    add x1, x1, #0xae8
   a6f00:   a9025bf5    stp x21, x22, [sp, #32]
   a6f04:   91006020    add x0, x1, #0x18
   a6f08:   52800b62    mov w2, #0x5b
   a6f0c:   97ffd6ed    bl  9cac0 <assertion_failed>
   a6f10:   34fffe94    cbz w20, a6ee0 <CVirtualGPIOPin::Write(unsigned int)+0xe0>
   a6f14:   11000400    add w0, w0, #0x1
   a6f18:   12003c00    and w0, w0, #0xffff
   a6f1c:   79002a60    strh    w0, [x19, #20]
   a6f20:   17ffffeb    b   a6ecc <CVirtualGPIOPin::Write(unsigned int)+0xcc>
   a6f24:   940005d3    bl  a8670 <EnterCritical>
   a6f28:   17ffffde    b   a6ea0 <CVirtualGPIOPin::Write(unsigned int)+0xa0>
   a6f2c:   d503201f    nop

00000000000a6f30 <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int, bool)>:
   a6f30:   a9bb7bfd    stp x29, x30, [sp, #-80]!
   a6f34:   910003fd    mov x29, sp
   a6f38:   72001c42    ands    w2, w2, #0xff
   a6f3c:   7a410822    ccmp    w1, #0x1, #0x2, eq
   a6f40:   a90153f3    stp x19, x20, [sp, #16]
   a6f44:   aa0003f3    mov x19, x0
   a6f48:   d0000080    adrp    x0, b8000 <vtable for CGPIOPin+0x288>
   a6f4c:   912b6000    add x0, x0, #0xad8
   a6f50:   f9000260    str x0, [x19]
   a6f54:   39002262    strb    w2, [x19, #8]
   a6f58:   b9000e61    str w1, [x19, #12]
   a6f5c:   b900167f    str wzr, [x19, #20]
   a6f60:   54000089    b.ls    a6f70 <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int, bool)+0x40>
   a6f64:   a94153f3    ldp x19, x20, [sp, #16]
   a6f68:   a8c57bfd    ldp x29, x30, [sp], #80
   a6f6c:   d65f03c0    ret
   a6f70:   f90013f5    str x21, [sp, #32]
   a6f74:   900000b4    adrp    x20, ba000 <font_data+0x1080>
   a6f78:   9127c295    add x21, x20, #0x9f0
   a6f7c:   b9400aa0    ldr w0, [x21, #8]
   a6f80:   350001c0    cbnz    w0, a6fb8 <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int, bool)+0x88>
   a6f84:   f944fa80    ldr x0, [x20, #2544]
   a6f88:   b40001e0    cbz x0, a6fc4 <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int, bool)+0x94>
   a6f8c:   b9400e61    ldr w1, [x19, #12]
   a6f90:   531e7421    lsl w1, w1, #2
   a6f94:   b821481f    str wzr, [x0, w1, uxtw]
   a6f98:   b9400aa0    ldr w0, [x21, #8]
   a6f9c:   35000440    cbnz    w0, a7024 <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int, bool)+0xf4>
   a6fa0:   f94013f5    ldr x21, [sp, #32]
   a6fa4:   aa1303e0    mov x0, x19
   a6fa8:   52800001    mov w1, #0x0
   a6fac:   a94153f3    ldp x19, x20, [sp, #16]
   a6fb0:   a8c57bfd    ldp x29, x30, [sp], #80
   a6fb4:   17ffff93    b   a6e00 <CVirtualGPIOPin::Write(unsigned int)>
   a6fb8:   940005ae    bl  a8670 <EnterCritical>
   a6fbc:   f944fa80    ldr x0, [x20, #2544]
   a6fc0:   b5fffe60    cbnz    x0, a6f8c <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int, bool)+0x5c>
   a6fc4:   52800020    mov w0, #0x1
   a6fc8:   9400059e    bl  a8640 <CMemorySystem::GetCoherentPage(unsigned int)>
   a6fcc:   aa0003e2    mov x2, x0
   a6fd0:   52800001    mov w1, #0x0
   a6fd4:   9100e3e0    add x0, sp, #0x38
   a6fd8:   f904fa82    str x2, [x20, #2544]
   a6fdc:   97ffd6dd    bl  9cb50 <CBcmPropertyTags::CBcmPropertyTags(bool)>
   a6fe0:   f944fa85    ldr x5, [x20, #2544]
   a6fe4:   52900401    mov w1, #0x8020
   a6fe8:   72a00081    movk    w1, #0x4, lsl #16
   a6fec:   9100e3e0    add x0, sp, #0x38
   a6ff0:   910103e2    add x2, sp, #0x40
   a6ff4:   52800084    mov w4, #0x4
   a6ff8:   52800203    mov w3, #0x10
   a6ffc:   320204a5    orr w5, w5, #0xc0000000
   a7000:   b9004fe5    str w5, [sp, #76]
   a7004:   97ffd733    bl  9ccd0 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   a7008:   360001c0    tbz w0, #0, a7040 <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int, bool)+0x110>
   a700c:   9100e3e0    add x0, sp, #0x38
   a7010:   97ffd6d4    bl  9cb60 <CBcmPropertyTags::~CBcmPropertyTags()>
   a7014:   f944fa80    ldr x0, [x20, #2544]
   a7018:   b5fffba0    cbnz    x0, a6f8c <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int, bool)+0x5c>
   a701c:   b9400aa0    ldr w0, [x21, #8]
   a7020:   34fffc00    cbz w0, a6fa0 <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int, bool)+0x70>
   a7024:   940005c3    bl  a8730 <LeaveCritical>
   a7028:   f94013f5    ldr x21, [sp, #32]
   a702c:   aa1303e0    mov x0, x19
   a7030:   52800001    mov w1, #0x0
   a7034:   a94153f3    ldp x19, x20, [sp, #16]
   a7038:   a8c57bfd    ldp x29, x30, [sp], #80
   a703c:   17ffff71    b   a6e00 <CVirtualGPIOPin::Write(unsigned int)>
   a7040:   52800201    mov w1, #0x10
   a7044:   72a00081    movk    w1, #0x4, lsl #16
   a7048:   910103e2    add x2, sp, #0x40
   a704c:   52800004    mov w4, #0x0
   a7050:   52800203    mov w3, #0x10
   a7054:   9100e3e0    add x0, sp, #0x38
   a7058:   97ffd71e    bl  9ccd0 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   a705c:   360000a0    tbz w0, #0, a7070 <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int, bool)+0x140>
   a7060:   b9404fe0    ldr w0, [sp, #76]
   a7064:   92407400    and x0, x0, #0x3fffffff
   a7068:   f904fa80    str x0, [x20, #2544]
   a706c:   17ffffe8    b   a700c <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int, bool)+0xdc>
   a7070:   f904fa9f    str xzr, [x20, #2544]
   a7074:   17ffffe6    b   a700c <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int, bool)+0xdc>
   a7078:   d503201f    nop
   a707c:   d503201f    nop

00000000000a7080 <CVirtualGPIOPin::Invert()>:
   a7080:   b9401001    ldr w1, [x0, #16]
   a7084:   52000021    eor w1, w1, #0x1
   a7088:   17ffff5e    b   a6e00 <CVirtualGPIOPin::Write(unsigned int)>
   a708c:   00000000    udf #0

00000000000a7090 <_GLOBAL__sub_I__ZN15CVirtualGPIOPin18s_nGPIOBaseAddressE>:
   a7090:   f0000080    adrp    x0, ba000 <font_data+0x1080>
   a7094:   b909f81f    str wzr, [x0, #2552]
   a7098:   d65f03c0    ret
   a709c:   00000000    udf #0

00000000000a70a0 <ChainBootStub(void const*, unsigned long)>:
   a70a0:   91000c21    add x1, x1, #0x3
   a70a4:   d342fc21    lsr x1, x1, #2
   a70a8:   b4000181    cbz x1, a70d8 <ChainBootStub(void const*, unsigned long)+0x38>
   a70ac:   d1420004    sub x4, x0, #0x80, lsl #12
   a70b0:   91408021    add x1, x1, #0x20, lsl #12
   a70b4:   d1001084    sub x4, x4, #0x4
   a70b8:   d37ef421    lsl x1, x1, #2
   a70bc:   d2a00100    mov x0, #0x80000
   a70c0:   aa0003e2    mov x2, x0
   a70c4:   91001000    add x0, x0, #0x4
   a70c8:   b8646803    ldr w3, [x0, x4]
   a70cc:   eb01001f    cmp x0, x1
   a70d0:   b9000043    str w3, [x2]
   a70d4:   54ffff61    b.ne    a70c0 <ChainBootStub(void const*, unsigned long)+0x20>
   a70d8:   d508751f    ic  iallu
   a70dc:   d5033f9f    dsb sy
   a70e0:   d5033fdf    isb
   a70e4:   d2a00100    mov x0, #0x80000
   a70e8:   aa0003f0    mov x16, x0
   a70ec:   d61f0200    br  x16

00000000000a70f0 <EnableChainBoot>:
   a70f0:   aa0003e6    mov x6, x0
   a70f4:   aa0103e5    mov x5, x1
   a70f8:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a70fc:   f0000083    adrp    x3, ba000 <font_data+0x1080>
   a7100:   91280064    add x4, x3, #0xa00
   a7104:   90000001    adrp    x1, a7000 <CVirtualGPIOPin::CVirtualGPIOPin(unsigned int, bool)+0xd0>
   a7108:   910003fd    mov x29, sp
   a710c:   d2808002    mov x2, #0x400
   a7110:   91028021    add x1, x1, #0xa0
   a7114:   f9050066    str x6, [x3, #2560]
   a7118:   b27623e0    mov x0, #0x7fc00
   a711c:   f9000485    str x5, [x4, #8]
   a7120:   97ffff16    bl  a6d78 <memcpy>
   a7124:   d508751f    ic  iallu
   a7128:   d5033f9f    dsb sy
   a712c:   d5033fdf    isb
   a7130:   a8c17bfd    ldp x29, x30, [sp], #16
   a7134:   d65f03c0    ret
   a7138:   d503201f    nop
   a713c:   d503201f    nop

00000000000a7140 <IsChainBootEnabled>:
   a7140:   f0000080    adrp    x0, ba000 <font_data+0x1080>
   a7144:   f9450000    ldr x0, [x0, #2560]
   a7148:   f100001f    cmp x0, #0x0
   a714c:   1a9f07e0    cset    w0, ne
   a7150:   d65f03c0    ret
   a7154:   d503201f    nop
   a7158:   d503201f    nop
   a715c:   d503201f    nop

00000000000a7160 <DoChainBoot>:
   a7160:   d4000002    hvc #0x0
   a7164:   f0000080    adrp    x0, ba000 <font_data+0x1080>
   a7168:   91280001    add x1, x0, #0xa00
   a716c:   b27623e2    mov x2, #0x7fc00
   a7170:   f9400421    ldr x1, [x1, #8]
   a7174:   aa0203f0    mov x16, x2
   a7178:   f9450000    ldr x0, [x0, #2560]
   a717c:   d61f0200    br  x16

00000000000a7180 <CMACAddress::CMACAddress()>:
   a7180:   3900001f    strb    wzr, [x0]
   a7184:   d65f03c0    ret
   a7188:   d503201f    nop
   a718c:   d503201f    nop

00000000000a7190 <CMACAddress::CMACAddress(unsigned char const*)>:
   a7190:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a7194:   910003fd    mov x29, sp
   a7198:   f9000bf3    str x19, [sp, #16]
   a719c:   b4000141    cbz x1, a71c4 <CMACAddress::CMACAddress(unsigned char const*)+0x34>
   a71a0:   aa0003f3    mov x19, x0
   a71a4:   d28000c2    mov x2, #0x6
   a71a8:   91000400    add x0, x0, #0x1
   a71ac:   97fffef3    bl  a6d78 <memcpy>
   a71b0:   52800020    mov w0, #0x1
   a71b4:   39000260    strb    w0, [x19]
   a71b8:   f9400bf3    ldr x19, [sp, #16]
   a71bc:   a8c27bfd    ldp x29, x30, [sp], #32
   a71c0:   d65f03c0    ret
   a71c4:   90000061    adrp    x1, b3000 <_etext+0x3f9c>
   a71c8:   90000060    adrp    x0, b3000 <_etext+0x3f9c>
   a71cc:   91162021    add x1, x1, #0x588
   a71d0:   91166000    add x0, x0, #0x598
   a71d4:   52800682    mov w2, #0x34
   a71d8:   97ffd63a    bl  9cac0 <assertion_failed>
   a71dc:   d503201f    nop

00000000000a71e0 <CMACAddress::~CMACAddress()>:
   a71e0:   d65f03c0    ret
   a71e4:   d503201f    nop
   a71e8:   d503201f    nop
   a71ec:   d503201f    nop

00000000000a71f0 <CMACAddress::operator==(CMACAddress const&) const>:
   a71f0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a71f4:   910003fd    mov x29, sp
   a71f8:   39400002    ldrb    w2, [x0]
   a71fc:   36000162    tbz w2, #0, a7228 <CMACAddress::operator==(CMACAddress const&) const+0x38>
   a7200:   39400022    ldrb    w2, [x1]
   a7204:   91000400    add x0, x0, #0x1
   a7208:   360001c2    tbz w2, #0, a7240 <CMACAddress::operator==(CMACAddress const&) const+0x50>
   a720c:   91000421    add x1, x1, #0x1
   a7210:   d28000c2    mov x2, #0x6
   a7214:   97fffd37    bl  a66f0 <memcmp>
   a7218:   7100001f    cmp w0, #0x0
   a721c:   a8c17bfd    ldp x29, x30, [sp], #16
   a7220:   1a9f17e0    cset    w0, eq
   a7224:   d65f03c0    ret
   a7228:   90000061    adrp    x1, b3000 <_etext+0x3f9c>
   a722c:   f0000040    adrp    x0, b2000 <_etext+0x2f9c>
   a7230:   91162021    add x1, x1, #0x588
   a7234:   911ca000    add x0, x0, #0x728
   a7238:   52800522    mov w2, #0x29
   a723c:   97ffd621    bl  9cac0 <assertion_failed>
   a7240:   90000061    adrp    x1, b3000 <_etext+0x3f9c>
   a7244:   f0000040    adrp    x0, b2000 <_etext+0x2f9c>
   a7248:   91162021    add x1, x1, #0x588
   a724c:   911ca000    add x0, x0, #0x728
   a7250:   52800822    mov w2, #0x41
   a7254:   97ffd61b    bl  9cac0 <assertion_failed>
   a7258:   d503201f    nop
   a725c:   d503201f    nop

00000000000a7260 <CMACAddress::operator!=(CMACAddress const&) const>:
   a7260:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a7264:   910003fd    mov x29, sp
   a7268:   39400002    ldrb    w2, [x0]
   a726c:   36000162    tbz w2, #0, a7298 <CMACAddress::operator!=(CMACAddress const&) const+0x38>
   a7270:   39400022    ldrb    w2, [x1]
   a7274:   91000400    add x0, x0, #0x1
   a7278:   360001c2    tbz w2, #0, a72b0 <CMACAddress::operator!=(CMACAddress const&) const+0x50>
   a727c:   91000421    add x1, x1, #0x1
   a7280:   d28000c2    mov x2, #0x6
   a7284:   97fffd1b    bl  a66f0 <memcmp>
   a7288:   7100001f    cmp w0, #0x0
   a728c:   a8c17bfd    ldp x29, x30, [sp], #16
   a7290:   1a9f07e0    cset    w0, ne
   a7294:   d65f03c0    ret
   a7298:   90000061    adrp    x1, b3000 <_etext+0x3f9c>
   a729c:   f0000040    adrp    x0, b2000 <_etext+0x2f9c>
   a72a0:   91162021    add x1, x1, #0x588
   a72a4:   911ca000    add x0, x0, #0x728
   a72a8:   52800522    mov w2, #0x29
   a72ac:   97ffd605    bl  9cac0 <assertion_failed>
   a72b0:   90000061    adrp    x1, b3000 <_etext+0x3f9c>
   a72b4:   f0000040    adrp    x0, b2000 <_etext+0x2f9c>
   a72b8:   91162021    add x1, x1, #0x588
   a72bc:   911ca000    add x0, x0, #0x728
   a72c0:   52800822    mov w2, #0x41
   a72c4:   97ffd5ff    bl  9cac0 <assertion_failed>
   a72c8:   d503201f    nop
   a72cc:   d503201f    nop

00000000000a72d0 <CMACAddress::Set(unsigned char const*)>:
   a72d0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a72d4:   910003fd    mov x29, sp
   a72d8:   f9000bf3    str x19, [sp, #16]
   a72dc:   b4000141    cbz x1, a7304 <CMACAddress::Set(unsigned char const*)+0x34>
   a72e0:   aa0003f3    mov x19, x0
   a72e4:   d28000c2    mov x2, #0x6
   a72e8:   91000400    add x0, x0, #0x1
   a72ec:   97fffea3    bl  a6d78 <memcpy>
   a72f0:   52800020    mov w0, #0x1
   a72f4:   39000260    strb    w0, [x19]
   a72f8:   f9400bf3    ldr x19, [sp, #16]
   a72fc:   a8c27bfd    ldp x29, x30, [sp], #32
   a7300:   d65f03c0    ret
   a7304:   90000061    adrp    x1, b3000 <_etext+0x3f9c>
   a7308:   90000060    adrp    x0, b3000 <_etext+0x3f9c>
   a730c:   91162021    add x1, x1, #0x588
   a7310:   91166000    add x0, x0, #0x598
   a7314:   52800682    mov w2, #0x34
   a7318:   97ffd5ea    bl  9cac0 <assertion_failed>
   a731c:   d503201f    nop

00000000000a7320 <CMACAddress::SetBroadcast()>:
   a7320:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a7324:   910003fd    mov x29, sp
   a7328:   d28000c2    mov x2, #0x6
   a732c:   52801fe1    mov w1, #0xff
   a7330:   f9000bf3    str x19, [sp, #16]
   a7334:   aa0003f3    mov x19, x0
   a7338:   91000400    add x0, x0, #0x1
   a733c:   97fffe77    bl  a6d18 <memset>
   a7340:   52800020    mov w0, #0x1
   a7344:   39000260    strb    w0, [x19]
   a7348:   f9400bf3    ldr x19, [sp, #16]
   a734c:   a8c27bfd    ldp x29, x30, [sp], #32
   a7350:   d65f03c0    ret
   a7354:   d503201f    nop
   a7358:   d503201f    nop
   a735c:   d503201f    nop

00000000000a7360 <CMACAddress::Get() const>:
   a7360:   39400001    ldrb    w1, [x0]
   a7364:   36000061    tbz w1, #0, a7370 <CMACAddress::Get() const+0x10>
   a7368:   91000400    add x0, x0, #0x1
   a736c:   d65f03c0    ret
   a7370:   90000061    adrp    x1, b3000 <_etext+0x3f9c>
   a7374:   f0000040    adrp    x0, b2000 <_etext+0x2f9c>
   a7378:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a737c:   91162021    add x1, x1, #0x588
   a7380:   910003fd    mov x29, sp
   a7384:   911ca000    add x0, x0, #0x728
   a7388:   52800822    mov w2, #0x41
   a738c:   97ffd5cd    bl  9cac0 <assertion_failed>

00000000000a7390 <CMACAddress::CopyTo(unsigned char*) const>:
   a7390:   aa0003e2    mov x2, x0
   a7394:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a7398:   aa0103e0    mov x0, x1
   a739c:   910003fd    mov x29, sp
   a73a0:   39400041    ldrb    w1, [x2]
   a73a4:   360000c1    tbz w1, #0, a73bc <CMACAddress::CopyTo(unsigned char*) const+0x2c>
   a73a8:   b4000160    cbz x0, a73d4 <CMACAddress::CopyTo(unsigned char*) const+0x44>
   a73ac:   91000441    add x1, x2, #0x1
   a73b0:   a8c17bfd    ldp x29, x30, [sp], #16
   a73b4:   d28000c2    mov x2, #0x6
   a73b8:   17fffe70    b   a6d78 <memcpy>
   a73bc:   90000061    adrp    x1, b3000 <_etext+0x3f9c>
   a73c0:   f0000040    adrp    x0, b2000 <_etext+0x2f9c>
   a73c4:   91162021    add x1, x1, #0x588
   a73c8:   911ca000    add x0, x0, #0x728
   a73cc:   528008e2    mov w2, #0x47
   a73d0:   97ffd5bc    bl  9cac0 <assertion_failed>
   a73d4:   90000061    adrp    x1, b3000 <_etext+0x3f9c>
   a73d8:   90000040    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   a73dc:   91162021    add x1, x1, #0x588
   a73e0:   91260000    add x0, x0, #0x980
   a73e4:   52800902    mov w2, #0x48
   a73e8:   97ffd5b6    bl  9cac0 <assertion_failed>
   a73ec:   d503201f    nop

00000000000a73f0 <CMACAddress::IsBroadcast() const>:
   a73f0:   aa0003e1    mov x1, x0
   a73f4:   91001c03    add x3, x0, #0x7
   a73f8:   38401420    ldrb    w0, [x1], #1
   a73fc:   36000140    tbz w0, #0, a7424 <CMACAddress::IsBroadcast() const+0x34>
   a7400:   39400022    ldrb    w2, [x1]
   a7404:   7103fc5f    cmp w2, #0xff
   a7408:   540000a1    b.ne    a741c <CMACAddress::IsBroadcast() const+0x2c>
   a740c:   91000421    add x1, x1, #0x1
   a7410:   eb03003f    cmp x1, x3
   a7414:   54ffff61    b.ne    a7400 <CMACAddress::IsBroadcast() const+0x10>
   a7418:   d65f03c0    ret
   a741c:   52800000    mov w0, #0x0
   a7420:   d65f03c0    ret
   a7424:   90000061    adrp    x1, b3000 <_etext+0x3f9c>
   a7428:   f0000040    adrp    x0, b2000 <_etext+0x2f9c>
   a742c:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a7430:   91162021    add x1, x1, #0x588
   a7434:   910003fd    mov x29, sp
   a7438:   911ca000    add x0, x0, #0x728
   a743c:   528009c2    mov w2, #0x4e
   a7440:   97ffd5a0    bl  9cac0 <assertion_failed>
   a7444:   d503201f    nop
   a7448:   d503201f    nop
   a744c:   d503201f    nop

00000000000a7450 <CMACAddress::GetSize() const>:
   a7450:   528000c0    mov w0, #0x6
   a7454:   d65f03c0    ret
   a7458:   d503201f    nop
   a745c:   d503201f    nop

00000000000a7460 <CMACAddress::Format(CString*) const>:
   a7460:   aa0003e2    mov x2, x0
   a7464:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a7468:   aa0103e0    mov x0, x1
   a746c:   910003fd    mov x29, sp
   a7470:   39400041    ldrb    w1, [x2]
   a7474:   36000181    tbz w1, #0, a74a4 <CMACAddress::Format(CString*) const+0x44>
   a7478:   b4000220    cbz x0, a74bc <CMACAddress::Format(CString*) const+0x5c>
   a747c:   90000061    adrp    x1, b3000 <_etext+0x3f9c>
   a7480:   39401847    ldrb    w7, [x2, #6]
   a7484:   a8c17bfd    ldp x29, x30, [sp], #16
   a7488:   9116e021    add x1, x1, #0x5b8
   a748c:   39401446    ldrb    w6, [x2, #5]
   a7490:   39401045    ldrb    w5, [x2, #4]
   a7494:   39400c44    ldrb    w4, [x2, #3]
   a7498:   39400843    ldrb    w3, [x2, #2]
   a749c:   39400442    ldrb    w2, [x2, #1]
   a74a0:   17fff818    b   a5500 <CString::Format(char const*, ...)>
   a74a4:   90000061    adrp    x1, b3000 <_etext+0x3f9c>
   a74a8:   f0000040    adrp    x0, b2000 <_etext+0x2f9c>
   a74ac:   91162021    add x1, x1, #0x588
   a74b0:   911ca000    add x0, x0, #0x728
   a74b4:   52800c42    mov w2, #0x62
   a74b8:   97ffd582    bl  9cac0 <assertion_failed>
   a74bc:   90000061    adrp    x1, b3000 <_etext+0x3f9c>
   a74c0:   90000060    adrp    x0, b3000 <_etext+0x3f9c>
   a74c4:   91162021    add x1, x1, #0x588
   a74c8:   9116a000    add x0, x0, #0x5a8
   a74cc:   52800c62    mov w2, #0x63
   a74d0:   97ffd57c    bl  9cac0 <assertion_failed>
    ...

00000000000a74e0 <CNetDevice::AddNetDevice()>:
   a74e0:   f0000081    adrp    x1, ba000 <font_data+0x1080>
   a74e4:   91284023    add x3, x1, #0xa10
   a74e8:   b94a1022    ldr w2, [x1, #2576]
   a74ec:   7100105f    cmp w2, #0x4
   a74f0:   540000a8    b.hi    a7504 <CNetDevice::AddNetDevice()+0x24>
   a74f4:   91004063    add x3, x3, #0x10
   a74f8:   11000444    add w4, w2, #0x1
   a74fc:   b90a1024    str w4, [x1, #2576]
   a7500:   f8225860    str x0, [x3, w2, uxtw #3]
   a7504:   d65f03c0    ret
   a7508:   d503201f    nop
   a750c:   d503201f    nop

00000000000a7510 <CNetDevice::GetSpeedString(TNetDeviceSpeed)>:
   a7510:   7100141f    cmp w0, #0x5
   a7514:   540000ac    b.gt    a7528 <CNetDevice::GetSpeedString(TNetDeviceSpeed)+0x18>
   a7518:   f0000081    adrp    x1, ba000 <font_data+0x1080>
   a751c:   911fc021    add x1, x1, #0x7f0
   a7520:   f860d820    ldr x0, [x1, w0, sxtw #3]
   a7524:   d65f03c0    ret
   a7528:   90000060    adrp    x0, b3000 <_etext+0x3f9c>
   a752c:   91176000    add x0, x0, #0x5d8
   a7530:   d65f03c0    ret
   a7534:   d503201f    nop
   a7538:   d503201f    nop
   a753c:   d503201f    nop

00000000000a7540 <CNetDevice::GetNetDevice(unsigned int)>:
   a7540:   f0000081    adrp    x1, ba000 <font_data+0x1080>
   a7544:   91284022    add x2, x1, #0xa10
   a7548:   b94a1021    ldr w1, [x1, #2576]
   a754c:   6b00003f    cmp w1, w0
   a7550:   54000089    b.ls    a7560 <CNetDevice::GetNetDevice(unsigned int)+0x20>
   a7554:   91004042    add x2, x2, #0x10
   a7558:   f8605840    ldr x0, [x2, w0, uxtw #3]
   a755c:   d65f03c0    ret
   a7560:   d2800000    mov x0, #0x0
   a7564:   d65f03c0    ret
   a7568:   d503201f    nop
   a756c:   d503201f    nop

00000000000a7570 <CNetDevice::GetNetDevice(TNetDeviceType)>:
   a7570:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   a7574:   910003fd    mov x29, sp
   a7578:   a9025bf5    stp x21, x22, [sp, #32]
   a757c:   f0000081    adrp    x1, ba000 <font_data+0x1080>
   a7580:   91284036    add x22, x1, #0xa10
   a7584:   b94a1021    ldr w1, [x1, #2576]
   a7588:   a90153f3    stp x19, x20, [sp, #16]
   a758c:   340004a1    cbz w1, a7620 <CNetDevice::GetNetDevice(TNetDeviceType)+0xb0>
   a7590:   f9400ad4    ldr x20, [x22, #16]
   a7594:   b4000474    cbz x20, a7620 <CNetDevice::GetNetDevice(TNetDeviceType)+0xb0>
   a7598:   7100081f    cmp w0, #0x2
   a759c:   2a0003f5    mov w21, w0
   a75a0:   54000340    b.eq    a7608 <CNetDevice::GetNetDevice(TNetDeviceType)+0x98>
   a75a4:   d2800013    mov x19, #0x0
   a75a8:   a90363f7    stp x23, x24, [sp, #48]
   a75ac:   90ffff97    adrp    x23, 97000 <CLAN7800Device::WaitReg(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)+0x80>
   a75b0:   912702f7    add x23, x23, #0x9c0
   a75b4:   910042d8    add x24, x22, #0x10
   a75b8:   14000009    b   a75dc <CNetDevice::GetNetDevice(TNetDeviceType)+0x6c>
   a75bc:   6b15001f    cmp w0, w21
   a75c0:   91000673    add x19, x19, #0x1
   a75c4:   54000200    b.eq    a7604 <CNetDevice::GetNetDevice(TNetDeviceType)+0x94>
   a75c8:   b94002c1    ldr w1, [x22]
   a75cc:   6b13003f    cmp w1, w19
   a75d0:   54000269    b.ls    a761c <CNetDevice::GetNetDevice(TNetDeviceType)+0xac>
   a75d4:   f8737b14    ldr x20, [x24, x19, lsl #3]
   a75d8:   b4000234    cbz x20, a761c <CNetDevice::GetNetDevice(TNetDeviceType)+0xac>
   a75dc:   f9400281    ldr x1, [x20]
   a75e0:   52800000    mov w0, #0x0
   a75e4:   f9400821    ldr x1, [x1, #16]
   a75e8:   eb17003f    cmp x1, x23
   a75ec:   54fffe80    b.eq    a75bc <CNetDevice::GetNetDevice(TNetDeviceType)+0x4c>
   a75f0:   aa1403e0    mov x0, x20
   a75f4:   91000673    add x19, x19, #0x1
   a75f8:   d63f0020    blr x1
   a75fc:   6b15001f    cmp w0, w21
   a7600:   54fffe41    b.ne    a75c8 <CNetDevice::GetNetDevice(TNetDeviceType)+0x58>
   a7604:   a94363f7    ldp x23, x24, [sp, #48]
   a7608:   aa1403e0    mov x0, x20
   a760c:   a94153f3    ldp x19, x20, [sp, #16]
   a7610:   a9425bf5    ldp x21, x22, [sp, #32]
   a7614:   a8c47bfd    ldp x29, x30, [sp], #64
   a7618:   d65f03c0    ret
   a761c:   a94363f7    ldp x23, x24, [sp, #48]
   a7620:   d2800014    mov x20, #0x0
   a7624:   aa1403e0    mov x0, x20
   a7628:   a94153f3    ldp x19, x20, [sp, #16]
   a762c:   a9425bf5    ldp x21, x22, [sp, #32]
   a7630:   a8c47bfd    ldp x29, x30, [sp], #64
   a7634:   d65f03c0    ret
    ...

00000000000a7640 <operator new(unsigned long, int)>:
   a7640:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a7644:   910003fd    mov x29, sp
   a7648:   7100043f    cmp w1, #0x1
   a764c:   a90153f3    stp x19, x20, [sp, #16]
   a7650:   aa0003f3    mov x19, x0
   a7654:   54000280    b.eq    a76a4 <operator new(unsigned long, int)+0x64>
   a7658:   7100083f    cmp w1, #0x2
   a765c:   54000120    b.eq    a7680 <operator new(unsigned long, int)+0x40>
   a7660:   35000301    cbnz    w1, a76c0 <operator new(unsigned long, int)+0x80>
   a7664:   f0000080    adrp    x0, ba000 <font_data+0x1080>
   a7668:   aa1303e1    mov x1, x19
   a766c:   a94153f3    ldp x19, x20, [sp, #16]
   a7670:   a8c27bfd    ldp x29, x30, [sp], #32
   a7674:   f9452800    ldr x0, [x0, #2640]
   a7678:   91006000    add x0, x0, #0x18
   a767c:   140000b9    b   a7960 <CHeapAllocator::Allocate(unsigned long)>
   a7680:   f0000094    adrp    x20, ba000 <font_data+0x1080>
   a7684:   aa0003e1    mov x1, x0
   a7688:   f9452a80    ldr x0, [x20, #2640]
   a768c:   91064000    add x0, x0, #0x190
   a7690:   940000b4    bl  a7960 <CHeapAllocator::Allocate(unsigned long)>
   a7694:   b40001e0    cbz x0, a76d0 <operator new(unsigned long, int)+0x90>
   a7698:   a94153f3    ldp x19, x20, [sp, #16]
   a769c:   a8c27bfd    ldp x29, x30, [sp], #32
   a76a0:   d65f03c0    ret
   a76a4:   f0000080    adrp    x0, ba000 <font_data+0x1080>
   a76a8:   aa1303e1    mov x1, x19
   a76ac:   a94153f3    ldp x19, x20, [sp, #16]
   a76b0:   a8c27bfd    ldp x29, x30, [sp], #32
   a76b4:   f9452800    ldr x0, [x0, #2640]
   a76b8:   91064000    add x0, x0, #0x190
   a76bc:   140000a9    b   a7960 <CHeapAllocator::Allocate(unsigned long)>
   a76c0:   a94153f3    ldp x19, x20, [sp, #16]
   a76c4:   d2800000    mov x0, #0x0
   a76c8:   a8c27bfd    ldp x29, x30, [sp], #32
   a76cc:   d65f03c0    ret
   a76d0:   f9452a80    ldr x0, [x20, #2640]
   a76d4:   aa1303e1    mov x1, x19
   a76d8:   a94153f3    ldp x19, x20, [sp, #16]
   a76dc:   a8c27bfd    ldp x29, x30, [sp], #32
   a76e0:   91006000    add x0, x0, #0x18
   a76e4:   1400009f    b   a7960 <CHeapAllocator::Allocate(unsigned long)>
   a76e8:   d503201f    nop
   a76ec:   d503201f    nop

00000000000a76f0 <operator new[](unsigned long, int)>:
   a76f0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a76f4:   910003fd    mov x29, sp
   a76f8:   7100043f    cmp w1, #0x1
   a76fc:   a90153f3    stp x19, x20, [sp, #16]
   a7700:   aa0003f3    mov x19, x0
   a7704:   54000280    b.eq    a7754 <operator new[](unsigned long, int)+0x64>
   a7708:   7100083f    cmp w1, #0x2
   a770c:   54000120    b.eq    a7730 <operator new[](unsigned long, int)+0x40>
   a7710:   35000301    cbnz    w1, a7770 <operator new[](unsigned long, int)+0x80>
   a7714:   f0000080    adrp    x0, ba000 <font_data+0x1080>
   a7718:   aa1303e1    mov x1, x19
   a771c:   a94153f3    ldp x19, x20, [sp, #16]
   a7720:   a8c27bfd    ldp x29, x30, [sp], #32
   a7724:   f9452800    ldr x0, [x0, #2640]
   a7728:   91006000    add x0, x0, #0x18
   a772c:   1400008d    b   a7960 <CHeapAllocator::Allocate(unsigned long)>
   a7730:   f0000094    adrp    x20, ba000 <font_data+0x1080>
   a7734:   aa0003e1    mov x1, x0
   a7738:   f9452a80    ldr x0, [x20, #2640]
   a773c:   91064000    add x0, x0, #0x190
   a7740:   94000088    bl  a7960 <CHeapAllocator::Allocate(unsigned long)>
   a7744:   b40001e0    cbz x0, a7780 <operator new[](unsigned long, int)+0x90>
   a7748:   a94153f3    ldp x19, x20, [sp, #16]
   a774c:   a8c27bfd    ldp x29, x30, [sp], #32
   a7750:   d65f03c0    ret
   a7754:   f0000080    adrp    x0, ba000 <font_data+0x1080>
   a7758:   aa1303e1    mov x1, x19
   a775c:   a94153f3    ldp x19, x20, [sp, #16]
   a7760:   a8c27bfd    ldp x29, x30, [sp], #32
   a7764:   f9452800    ldr x0, [x0, #2640]
   a7768:   91064000    add x0, x0, #0x190
   a776c:   1400007d    b   a7960 <CHeapAllocator::Allocate(unsigned long)>
   a7770:   a94153f3    ldp x19, x20, [sp, #16]
   a7774:   d2800000    mov x0, #0x0
   a7778:   a8c27bfd    ldp x29, x30, [sp], #32
   a777c:   d65f03c0    ret
   a7780:   f9452a80    ldr x0, [x20, #2640]
   a7784:   aa1303e1    mov x1, x19
   a7788:   a94153f3    ldp x19, x20, [sp, #16]
   a778c:   a8c27bfd    ldp x29, x30, [sp], #32
   a7790:   91006000    add x0, x0, #0x18
   a7794:   14000073    b   a7960 <CHeapAllocator::Allocate(unsigned long)>
   a7798:   d503201f    nop
   a779c:   d503201f    nop

00000000000a77a0 <operator new(unsigned long, void*)>:
   a77a0:   aa0103e0    mov x0, x1
   a77a4:   d65f03c0    ret
   a77a8:   d503201f    nop
   a77ac:   d503201f    nop

00000000000a77b0 <operator new[](unsigned long, void*)>:
   a77b0:   aa0103e0    mov x0, x1
   a77b4:   d65f03c0    ret
   a77b8:   d503201f    nop
   a77bc:   d503201f    nop

00000000000a77c0 <operator new(unsigned long)>:
   a77c0:   f0000081    adrp    x1, ba000 <font_data+0x1080>
   a77c4:   f9452822    ldr x2, [x1, #2640]
   a77c8:   aa0003e1    mov x1, x0
   a77cc:   91006040    add x0, x2, #0x18
   a77d0:   14000064    b   a7960 <CHeapAllocator::Allocate(unsigned long)>
   a77d4:   d503201f    nop
   a77d8:   d503201f    nop
   a77dc:   d503201f    nop

00000000000a77e0 <operator new[](unsigned long)>:
   a77e0:   f0000081    adrp    x1, ba000 <font_data+0x1080>
   a77e4:   f9452822    ldr x2, [x1, #2640]
   a77e8:   aa0003e1    mov x1, x0
   a77ec:   91006040    add x0, x2, #0x18
   a77f0:   1400005c    b   a7960 <CHeapAllocator::Allocate(unsigned long)>
   a77f4:   d503201f    nop
   a77f8:   d503201f    nop
   a77fc:   d503201f    nop

00000000000a7800 <operator delete(void*)>:
   a7800:   aa0003e1    mov x1, x0
   a7804:   b24077e2    mov x2, #0x3fffffff
   a7808:   f0000080    adrp    x0, ba000 <font_data+0x1080>
   a780c:   eb02003f    cmp x1, x2
   a7810:   f9452800    ldr x0, [x0, #2640]
   a7814:   54000068    b.hi    a7820 <operator delete(void*)+0x20>
   a7818:   91006000    add x0, x0, #0x18
   a781c:   140000d9    b   a7b80 <CHeapAllocator::Free(void*)>
   a7820:   91064000    add x0, x0, #0x190
   a7824:   140000d7    b   a7b80 <CHeapAllocator::Free(void*)>
   a7828:   d503201f    nop
   a782c:   d503201f    nop

00000000000a7830 <operator delete[](void*)>:
   a7830:   aa0003e1    mov x1, x0
   a7834:   b24077e2    mov x2, #0x3fffffff
   a7838:   f0000080    adrp    x0, ba000 <font_data+0x1080>
   a783c:   eb02003f    cmp x1, x2
   a7840:   f9452800    ldr x0, [x0, #2640]
   a7844:   54000068    b.hi    a7850 <operator delete[](void*)+0x20>
   a7848:   91006000    add x0, x0, #0x18
   a784c:   140000cd    b   a7b80 <CHeapAllocator::Free(void*)>
   a7850:   91064000    add x0, x0, #0x190
   a7854:   140000cb    b   a7b80 <CHeapAllocator::Free(void*)>
   a7858:   d503201f    nop
   a785c:   d503201f    nop

00000000000a7860 <operator delete(void*, unsigned long)>:
   a7860:   aa0003e1    mov x1, x0
   a7864:   b24077e2    mov x2, #0x3fffffff
   a7868:   f0000080    adrp    x0, ba000 <font_data+0x1080>
   a786c:   eb02003f    cmp x1, x2
   a7870:   f9452800    ldr x0, [x0, #2640]
   a7874:   54000068    b.hi    a7880 <operator delete(void*, unsigned long)+0x20>
   a7878:   91006000    add x0, x0, #0x18
   a787c:   140000c1    b   a7b80 <CHeapAllocator::Free(void*)>
   a7880:   91064000    add x0, x0, #0x190
   a7884:   140000bf    b   a7b80 <CHeapAllocator::Free(void*)>
   a7888:   d503201f    nop
   a788c:   d503201f    nop

00000000000a7890 <operator delete[](void*, unsigned long)>:
   a7890:   aa0003e1    mov x1, x0
   a7894:   b24077e2    mov x2, #0x3fffffff
   a7898:   f0000080    adrp    x0, ba000 <font_data+0x1080>
   a789c:   eb02003f    cmp x1, x2
   a78a0:   f9452800    ldr x0, [x0, #2640]
   a78a4:   54000068    b.hi    a78b0 <operator delete[](void*, unsigned long)+0x20>
   a78a8:   91006000    add x0, x0, #0x18
   a78ac:   140000b5    b   a7b80 <CHeapAllocator::Free(void*)>
   a78b0:   91064000    add x0, x0, #0x190
   a78b4:   140000b3    b   a7b80 <CHeapAllocator::Free(void*)>
    ...

00000000000a78c0 <CHeapAllocator::CHeapAllocator(char const*)>:
   a78c0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a78c4:   aa0003e3    mov x3, x0
   a78c8:   aa0103e5    mov x5, x1
   a78cc:   910003fd    mov x29, sp
   a78d0:   52800024    mov w4, #0x1
   a78d4:   52800001    mov w1, #0x0
   a78d8:   d2802a02    mov x2, #0x150
   a78dc:   f9000bf3    str x19, [sp, #16]
   a78e0:   91008013    add x19, x0, #0x20
   a78e4:   aa1303e0    mov x0, x19
   a78e8:   a9007c65    stp x5, xzr, [x3]
   a78ec:   a9017c7f    stp xzr, xzr, [x3, #16]
   a78f0:   b9017064    str w4, [x3, #368]
   a78f4:   97fffd09    bl  a6d18 <memset>
   a78f8:   f0000081    adrp    x1, ba000 <font_data+0x1080>
   a78fc:   91208021    add x1, x1, #0x820
   a7900:   aa1303e0    mov x0, x19
   a7904:   91007023    add x3, x1, #0x1c
   a7908:   b8404422    ldr w2, [x1], #4
   a790c:   eb03003f    cmp x1, x3
   a7910:   b8010402    str w2, [x0], #16
   a7914:   54ffffa1    b.ne    a7908 <CHeapAllocator::CHeapAllocator(char const*)+0x48>
   a7918:   f9400bf3    ldr x19, [sp, #16]
   a791c:   a8c27bfd    ldp x29, x30, [sp], #32
   a7920:   d65f03c0    ret
   a7924:   d503201f    nop
   a7928:   d503201f    nop
   a792c:   d503201f    nop

00000000000a7930 <CHeapAllocator::~CHeapAllocator()>:
   a7930:   d65f03c0    ret
   a7934:   d503201f    nop
   a7938:   d503201f    nop
   a793c:   d503201f    nop

00000000000a7940 <CHeapAllocator::Setup(unsigned long, unsigned long, unsigned long)>:
   a7940:   8b020022    add x2, x1, x2
   a7944:   f9000c03    str x3, [x0, #24]
   a7948:   a9008801    stp x1, x2, [x0, #8]
   a794c:   d65f03c0    ret

00000000000a7950 <CHeapAllocator::GetFreeSpace() const>:
   a7950:   a9408001    ldp x1, x0, [x0, #8]
   a7954:   cb010000    sub x0, x0, x1
   a7958:   d65f03c0    ret
   a795c:   d503201f    nop

00000000000a7960 <CHeapAllocator::Allocate(unsigned long)>:
   a7960:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   a7964:   910003fd    mov x29, sp
   a7968:   f90013f5    str x21, [sp, #32]
   a796c:   aa0003f5    mov x21, x0
   a7970:   f9400400    ldr x0, [x0, #8]
   a7974:   b4000c00    cbz x0, a7af4 <CHeapAllocator::Allocate(unsigned long)+0x194>
   a7978:   b94172a0    ldr w0, [x21, #368]
   a797c:   a90153f3    stp x19, x20, [sp, #16]
   a7980:   aa0103f4    mov x20, x1
   a7984:   35000bc0    cbnz    w0, a7afc <CHeapAllocator::Allocate(unsigned long)+0x19c>
   a7988:   910082a3    add x3, x21, #0x20
   a798c:   b94022a2    ldr w2, [x21, #32]
   a7990:   35000082    cbnz    w2, a79a0 <CHeapAllocator::Allocate(unsigned long)+0x40>
   a7994:   14000035    b   a7a68 <CHeapAllocator::Allocate(unsigned long)+0x108>
   a7998:   b8410c62    ldr w2, [x3, #16]!
   a799c:   34000662    cbz w2, a7a68 <CHeapAllocator::Allocate(unsigned long)+0x108>
   a79a0:   2a0203e2    mov w2, w2
   a79a4:   eb14005f    cmp x2, x20
   a79a8:   54ffff83    b.cc    a7998 <CHeapAllocator::Allocate(unsigned long)+0x38>
   a79ac:   f9400473    ldr x19, [x3, #8]
   a79b0:   aa0203f4    mov x20, x2
   a79b4:   b40005b3    cbz x19, a7a68 <CHeapAllocator::Allocate(unsigned long)+0x108>
   a79b8:   39400265    ldrb    w5, [x19]
   a79bc:   5289a864    mov w4, #0x4d43
   a79c0:   72a84984    movk    w4, #0x424c, lsl #16
   a79c4:   39400662    ldrb    w2, [x19, #1]
   a79c8:   39400a61    ldrb    w1, [x19, #2]
   a79cc:   39400e60    ldrb    w0, [x19, #3]
   a79d0:   aa0220a2    orr x2, x5, x2, lsl #8
   a79d4:   aa014041    orr x1, x2, x1, lsl #16
   a79d8:   aa006020    orr x0, x1, x0, lsl #24
   a79dc:   6b04001f    cmp w0, w4
   a79e0:   54000c01    b.ne    a7b60 <CHeapAllocator::Allocate(unsigned long)+0x200>
   a79e4:   39402264    ldrb    w4, [x19, #8]
   a79e8:   39402662    ldrb    w2, [x19, #9]
   a79ec:   39402a61    ldrb    w1, [x19, #10]
   a79f0:   39402e60    ldrb    w0, [x19, #11]
   a79f4:   aa022082    orr x2, x4, x2, lsl #8
   a79f8:   39403264    ldrb    w4, [x19, #12]
   a79fc:   aa014041    orr x1, x2, x1, lsl #16
   a7a00:   39403662    ldrb    w2, [x19, #13]
   a7a04:   aa006020    orr x0, x1, x0, lsl #24
   a7a08:   39403a61    ldrb    w1, [x19, #14]
   a7a0c:   aa048004    orr x4, x0, x4, lsl #32
   a7a10:   39403e60    ldrb    w0, [x19, #15]
   a7a14:   aa02a082    orr x2, x4, x2, lsl #40
   a7a18:   aa01c041    orr x1, x2, x1, lsl #48
   a7a1c:   aa00e020    orr x0, x1, x0, lsl #56
   a7a20:   f9000460    str x0, [x3, #8]
   a7a24:   b94172a0    ldr w0, [x21, #368]
   a7a28:   350005a0    cbnz    w0, a7adc <CHeapAllocator::Allocate(unsigned long)+0x17c>
   a7a2c:   f240167f    tst x19, #0x3f
   a7a30:   3900227f    strb    wzr, [x19, #8]
   a7a34:   91010260    add x0, x19, #0x40
   a7a38:   3900267f    strb    wzr, [x19, #9]
   a7a3c:   39002a7f    strb    wzr, [x19, #10]
   a7a40:   39002e7f    strb    wzr, [x19, #11]
   a7a44:   3900327f    strb    wzr, [x19, #12]
   a7a48:   3900367f    strb    wzr, [x19, #13]
   a7a4c:   39003a7f    strb    wzr, [x19, #14]
   a7a50:   39003e7f    strb    wzr, [x19, #15]
   a7a54:   540006e1    b.ne    a7b30 <CHeapAllocator::Allocate(unsigned long)+0x1d0>
   a7a58:   a94153f3    ldp x19, x20, [sp, #16]
   a7a5c:   f94013f5    ldr x21, [sp, #32]
   a7a60:   a8c37bfd    ldp x29, x30, [sp], #48
   a7a64:   d65f03c0    ret
   a7a68:   f94006b3    ldr x19, [x21, #8]
   a7a6c:   9101fe80    add x0, x20, #0x7f
   a7a70:   927ae400    and x0, x0, #0xffffffffffffffc0
   a7a74:   f9400ea2    ldr x2, [x21, #24]
   a7a78:   8b000260    add x0, x19, x0
   a7a7c:   eb00027f    cmp x19, x0
   a7a80:   54000322    b.cs    a7ae4 <CHeapAllocator::Allocate(unsigned long)+0x184>
   a7a84:   f9400aa1    ldr x1, [x21, #16]
   a7a88:   cb020021    sub x1, x1, x2
   a7a8c:   eb01001f    cmp x0, x1
   a7a90:   540002a8    b.hi    a7ae4 <CHeapAllocator::Allocate(unsigned long)+0x184>
   a7a94:   f90006a0    str x0, [x21, #8]
   a7a98:   53083e81    ubfx    w1, w20, #8, #8
   a7a9c:   53105e80    ubfx    w0, w20, #16, #8
   a7aa0:   52800865    mov w5, #0x43
   a7aa4:   528009a4    mov w4, #0x4d
   a7aa8:   39001274    strb    w20, [x19, #4]
   a7aac:   52800983    mov w3, #0x4c
   a7ab0:   52800842    mov w2, #0x42
   a7ab4:   39001661    strb    w1, [x19, #5]
   a7ab8:   53187e94    lsr w20, w20, #24
   a7abc:   39000265    strb    w5, [x19]
   a7ac0:   39000664    strb    w4, [x19, #1]
   a7ac4:   39000a63    strb    w3, [x19, #2]
   a7ac8:   39000e62    strb    w2, [x19, #3]
   a7acc:   39001a60    strb    w0, [x19, #6]
   a7ad0:   39001e74    strb    w20, [x19, #7]
   a7ad4:   b94172a0    ldr w0, [x21, #368]
   a7ad8:   34fffaa0    cbz w0, a7a2c <CHeapAllocator::Allocate(unsigned long)+0xcc>
   a7adc:   94000315    bl  a8730 <LeaveCritical>
   a7ae0:   17ffffd3    b   a7a2c <CHeapAllocator::Allocate(unsigned long)+0xcc>
   a7ae4:   b94172a0    ldr w0, [x21, #368]
   a7ae8:   b50000e2    cbnz    x2, a7b04 <CHeapAllocator::Allocate(unsigned long)+0x1a4>
   a7aec:   350002e0    cbnz    w0, a7b48 <CHeapAllocator::Allocate(unsigned long)+0x1e8>
   a7af0:   a94153f3    ldp x19, x20, [sp, #16]
   a7af4:   d2800000    mov x0, #0x0
   a7af8:   17ffffd9    b   a7a5c <CHeapAllocator::Allocate(unsigned long)+0xfc>
   a7afc:   940002dd    bl  a8670 <EnterCritical>
   a7b00:   17ffffa2    b   a7988 <CHeapAllocator::Allocate(unsigned long)+0x28>
   a7b04:   f9000ebf    str xzr, [x21, #24]
   a7b08:   35000280    cbnz    w0, a7b58 <CHeapAllocator::Allocate(unsigned long)+0x1f8>
   a7b0c:   97ffdebd    bl  9f600 <CLogger::Get()>
   a7b10:   f94002a1    ldr x1, [x21]
   a7b14:   90000063    adrp    x3, b3000 <_etext+0x3f9c>
   a7b18:   911ae063    add x3, x3, #0x6b8
   a7b1c:   52800002    mov w2, #0x0
   a7b20:   97ffe0a0    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   a7b24:   a94153f3    ldp x19, x20, [sp, #16]
   a7b28:   d2800000    mov x0, #0x0
   a7b2c:   17ffffcc    b   a7a5c <CHeapAllocator::Allocate(unsigned long)+0xfc>
   a7b30:   90000061    adrp    x1, b3000 <_etext+0x3f9c>
   a7b34:   90000060    adrp    x0, b3000 <_etext+0x3f9c>
   a7b38:   9119c021    add x1, x1, #0x670
   a7b3c:   911b2000    add x0, x0, #0x6c8
   a7b40:   528011c2    mov w2, #0x8e
   a7b44:   97ffd3df    bl  9cac0 <assertion_failed>
   a7b48:   940002fa    bl  a8730 <LeaveCritical>
   a7b4c:   a94153f3    ldp x19, x20, [sp, #16]
   a7b50:   d2800000    mov x0, #0x0
   a7b54:   17ffffc2    b   a7a5c <CHeapAllocator::Allocate(unsigned long)+0xfc>
   a7b58:   940002f6    bl  a8730 <LeaveCritical>
   a7b5c:   17ffffec    b   a7b0c <CHeapAllocator::Allocate(unsigned long)+0x1ac>
   a7b60:   90000061    adrp    x1, b3000 <_etext+0x3f9c>
   a7b64:   90000060    adrp    x0, b3000 <_etext+0x3f9c>
   a7b68:   9119c021    add x1, x1, #0x670
   a7b6c:   911a2000    add x0, x0, #0x688
   a7b70:   52800bc2    mov w2, #0x5e
   a7b74:   97ffd3d3    bl  9cac0 <assertion_failed>
   a7b78:   d503201f    nop
   a7b7c:   d503201f    nop

00000000000a7b80 <CHeapAllocator::Free(void*)>:
   a7b80:   b4000701    cbz x1, a7c60 <CHeapAllocator::Free(void*)+0xe0>
   a7b84:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   a7b88:   910003fd    mov x29, sp
   a7b8c:   5289a864    mov w4, #0x4d43
   a7b90:   72a84984    movk    w4, #0x424c, lsl #16
   a7b94:   a90153f3    stp x19, x20, [sp, #16]
   a7b98:   d1010034    sub x20, x1, #0x40
   a7b9c:   f90013f5    str x21, [sp, #32]
   a7ba0:   aa0003f5    mov x21, x0
   a7ba4:   385c0025    ldurb   w5, [x1, #-64]
   a7ba8:   385c1023    ldurb   w3, [x1, #-63]
   a7bac:   385c2022    ldurb   w2, [x1, #-62]
   a7bb0:   385c3020    ldurb   w0, [x1, #-61]
   a7bb4:   aa0320a1    orr x1, x5, x3, lsl #8
   a7bb8:   aa024021    orr x1, x1, x2, lsl #16
   a7bbc:   aa006020    orr x0, x1, x0, lsl #24
   a7bc0:   6b04001f    cmp w0, w4
   a7bc4:   54000801    b.ne    a7cc4 <CHeapAllocator::Free(void*)+0x144>
   a7bc8:   b94022a1    ldr w1, [x21, #32]
   a7bcc:   910082b3    add x19, x21, #0x20
   a7bd0:   34000401    cbz w1, a7c50 <CHeapAllocator::Free(void*)+0xd0>
   a7bd4:   39401284    ldrb    w4, [x20, #4]
   a7bd8:   39401683    ldrb    w3, [x20, #5]
   a7bdc:   39401a80    ldrb    w0, [x20, #6]
   a7be0:   39401e82    ldrb    w2, [x20, #7]
   a7be4:   aa032083    orr x3, x4, x3, lsl #8
   a7be8:   aa004060    orr x0, x3, x0, lsl #16
   a7bec:   2a026002    orr w2, w0, w2, lsl #24
   a7bf0:   14000003    b   a7bfc <CHeapAllocator::Free(void*)+0x7c>
   a7bf4:   b8410e61    ldr w1, [x19, #16]!
   a7bf8:   340002c1    cbz w1, a7c50 <CHeapAllocator::Free(void*)+0xd0>
   a7bfc:   6b02003f    cmp w1, w2
   a7c00:   54ffffa1    b.ne    a7bf4 <CHeapAllocator::Free(void*)+0x74>
   a7c04:   b94172a0    ldr w0, [x21, #368]
   a7c08:   350002e0    cbnz    w0, a7c64 <CHeapAllocator::Free(void*)+0xe4>
   a7c0c:   f9400660    ldr x0, [x19, #8]
   a7c10:   53083c06    ubfx    w6, w0, #8, #8
   a7c14:   53105c05    ubfx    w5, w0, #16, #8
   a7c18:   39002280    strb    w0, [x20, #8]
   a7c1c:   53187c04    lsr w4, w0, #24
   a7c20:   d3609c03    ubfx    x3, x0, #32, #8
   a7c24:   d368bc02    ubfx    x2, x0, #40, #8
   a7c28:   d370dc01    ubfx    x1, x0, #48, #8
   a7c2c:   39002686    strb    w6, [x20, #9]
   a7c30:   d378fc00    lsr x0, x0, #56
   a7c34:   39002a85    strb    w5, [x20, #10]
   a7c38:   39002e84    strb    w4, [x20, #11]
   a7c3c:   39003283    strb    w3, [x20, #12]
   a7c40:   39003682    strb    w2, [x20, #13]
   a7c44:   39003a81    strb    w1, [x20, #14]
   a7c48:   39003e80    strb    w0, [x20, #15]
   a7c4c:   f9000674    str x20, [x19, #8]
   a7c50:   a94153f3    ldp x19, x20, [sp, #16]
   a7c54:   f94013f5    ldr x21, [sp, #32]
   a7c58:   a8c37bfd    ldp x29, x30, [sp], #48
   a7c5c:   d65f03c0    ret
   a7c60:   d65f03c0    ret
   a7c64:   94000283    bl  a8670 <EnterCritical>
   a7c68:   f9400660    ldr x0, [x19, #8]
   a7c6c:   b94172a1    ldr w1, [x21, #368]
   a7c70:   53083c07    ubfx    w7, w0, #8, #8
   a7c74:   53105c06    ubfx    w6, w0, #16, #8
   a7c78:   39002280    strb    w0, [x20, #8]
   a7c7c:   53187c05    lsr w5, w0, #24
   a7c80:   d3609c04    ubfx    x4, x0, #32, #8
   a7c84:   d368bc03    ubfx    x3, x0, #40, #8
   a7c88:   d370dc02    ubfx    x2, x0, #48, #8
   a7c8c:   39002687    strb    w7, [x20, #9]
   a7c90:   d378fc00    lsr x0, x0, #56
   a7c94:   39002a86    strb    w6, [x20, #10]
   a7c98:   39002e85    strb    w5, [x20, #11]
   a7c9c:   39003284    strb    w4, [x20, #12]
   a7ca0:   39003683    strb    w3, [x20, #13]
   a7ca4:   39003a82    strb    w2, [x20, #14]
   a7ca8:   39003e80    strb    w0, [x20, #15]
   a7cac:   f9000674    str x20, [x19, #8]
   a7cb0:   34fffd01    cbz w1, a7c50 <CHeapAllocator::Free(void*)+0xd0>
   a7cb4:   a94153f3    ldp x19, x20, [sp, #16]
   a7cb8:   f94013f5    ldr x21, [sp, #32]
   a7cbc:   a8c37bfd    ldp x29, x30, [sp], #48
   a7cc0:   1400029c    b   a8730 <LeaveCritical>
   a7cc4:   90000061    adrp    x1, b3000 <_etext+0x3f9c>
   a7cc8:   90000060    adrp    x0, b3000 <_etext+0x3f9c>
   a7ccc:   9119c021    add x1, x1, #0x670
   a7cd0:   911a2000    add x0, x0, #0x688
   a7cd4:   528017e2    mov w2, #0xbf
   a7cd8:   97ffd37a    bl  9cac0 <assertion_failed>
   a7cdc:   d503201f    nop

00000000000a7ce0 <CHeapAllocator::ReAllocate(void*, unsigned long)>:
   a7ce0:   b4000701    cbz x1, a7dc0 <CHeapAllocator::ReAllocate(void*, unsigned long)+0xe0>
   a7ce4:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   a7ce8:   910003fd    mov x29, sp
   a7cec:   a9025bf5    stp x21, x22, [sp, #32]
   a7cf0:   b40006c2    cbz x2, a7dc8 <CHeapAllocator::ReAllocate(void*, unsigned long)+0xe8>
   a7cf4:   5289a865    mov w5, #0x4d43
   a7cf8:   72a84985    movk    w5, #0x424c, lsl #16
   a7cfc:   a90153f3    stp x19, x20, [sp, #16]
   a7d00:   aa0103f3    mov x19, x1
   a7d04:   d1010034    sub x20, x1, #0x40
   a7d08:   385c0026    ldurb   w6, [x1, #-64]
   a7d0c:   385c1024    ldurb   w4, [x1, #-63]
   a7d10:   385c2023    ldurb   w3, [x1, #-62]
   a7d14:   385c3021    ldurb   w1, [x1, #-61]
   a7d18:   aa0420c4    orr x4, x6, x4, lsl #8
   a7d1c:   aa034083    orr x3, x4, x3, lsl #16
   a7d20:   aa016061    orr x1, x3, x1, lsl #24
   a7d24:   6b05003f    cmp w1, w5
   a7d28:   54000561    b.ne    a7dd4 <CHeapAllocator::ReAllocate(void*, unsigned long)+0xf4>
   a7d2c:   39401285    ldrb    w5, [x20, #4]
   a7d30:   aa1303f6    mov x22, x19
   a7d34:   39401684    ldrb    w4, [x20, #5]
   a7d38:   39401a83    ldrb    w3, [x20, #6]
   a7d3c:   39401e81    ldrb    w1, [x20, #7]
   a7d40:   aa0420a4    orr x4, x5, x4, lsl #8
   a7d44:   aa034083    orr x3, x4, x3, lsl #16
   a7d48:   aa016061    orr x1, x3, x1, lsl #24
   a7d4c:   eb02003f    cmp x1, x2
   a7d50:   540000c3    b.cc    a7d68 <CHeapAllocator::ReAllocate(void*, unsigned long)+0x88>
   a7d54:   a94153f3    ldp x19, x20, [sp, #16]
   a7d58:   aa1603e0    mov x0, x22
   a7d5c:   a9425bf5    ldp x21, x22, [sp, #32]
   a7d60:   a8c37bfd    ldp x29, x30, [sp], #48
   a7d64:   d65f03c0    ret
   a7d68:   aa0203e1    mov x1, x2
   a7d6c:   aa0003f5    mov x21, x0
   a7d70:   97fffefc    bl  a7960 <CHeapAllocator::Allocate(unsigned long)>
   a7d74:   aa0003f6    mov x22, x0
   a7d78:   b4fffee0    cbz x0, a7d54 <CHeapAllocator::ReAllocate(void*, unsigned long)+0x74>
   a7d7c:   39401285    ldrb    w5, [x20, #4]
   a7d80:   aa1303e1    mov x1, x19
   a7d84:   39401683    ldrb    w3, [x20, #5]
   a7d88:   39401a82    ldrb    w2, [x20, #6]
   a7d8c:   39401e84    ldrb    w4, [x20, #7]
   a7d90:   aa0320a3    orr x3, x5, x3, lsl #8
   a7d94:   aa024062    orr x2, x3, x2, lsl #16
   a7d98:   aa046042    orr x2, x2, x4, lsl #24
   a7d9c:   97fffbf7    bl  a6d78 <memcpy>
   a7da0:   aa1303e1    mov x1, x19
   a7da4:   aa1503e0    mov x0, x21
   a7da8:   97ffff76    bl  a7b80 <CHeapAllocator::Free(void*)>
   a7dac:   a94153f3    ldp x19, x20, [sp, #16]
   a7db0:   aa1603e0    mov x0, x22
   a7db4:   a9425bf5    ldp x21, x22, [sp, #32]
   a7db8:   a8c37bfd    ldp x29, x30, [sp], #48
   a7dbc:   d65f03c0    ret
   a7dc0:   aa0203e1    mov x1, x2
   a7dc4:   17fffee7    b   a7960 <CHeapAllocator::Allocate(unsigned long)>
   a7dc8:   d2800016    mov x22, #0x0
   a7dcc:   97ffff6d    bl  a7b80 <CHeapAllocator::Free(void*)>
   a7dd0:   17ffffe2    b   a7d58 <CHeapAllocator::ReAllocate(void*, unsigned long)+0x78>
   a7dd4:   90000061    adrp    x1, b3000 <_etext+0x3f9c>
   a7dd8:   90000060    adrp    x0, b3000 <_etext+0x3f9c>
   a7ddc:   9119c021    add x1, x1, #0x670
   a7de0:   911a2000    add x0, x0, #0x688
   a7de4:   52801462    mov w2, #0xa3
   a7de8:   97ffd336    bl  9cac0 <assertion_failed>
   a7dec:   00000000    udf #0

00000000000a7df0 <CNumberPool::CNumberPool(unsigned int, unsigned int)>:
   a7df0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a7df4:   910003fd    mov x29, sp
   a7df8:   7100fc5f    cmp w2, #0x3f
   a7dfc:   29000801    stp w1, w2, [x0]
   a7e00:   f900041f    str xzr, [x0, #8]
   a7e04:   540000a8    b.hi    a7e18 <CNumberPool::CNumberPool(unsigned int, unsigned int)+0x28>
   a7e08:   6b02003f    cmp w1, w2
   a7e0c:   54000128    b.hi    a7e30 <CNumberPool::CNumberPool(unsigned int, unsigned int)+0x40>
   a7e10:   a8c17bfd    ldp x29, x30, [sp], #16
   a7e14:   d65f03c0    ret
   a7e18:   90000061    adrp    x1, b3000 <_etext+0x3f9c>
   a7e1c:   90000060    adrp    x0, b3000 <_etext+0x3f9c>
   a7e20:   911be021    add x1, x1, #0x6f8
   a7e24:   911c2000    add x0, x0, #0x708
   a7e28:   528003a2    mov w2, #0x1d
   a7e2c:   97ffd325    bl  9cac0 <assertion_failed>
   a7e30:   90000061    adrp    x1, b3000 <_etext+0x3f9c>
   a7e34:   90000060    adrp    x0, b3000 <_etext+0x3f9c>
   a7e38:   911be021    add x1, x1, #0x6f8
   a7e3c:   911c6000    add x0, x0, #0x718
   a7e40:   528003c2    mov w2, #0x1e
   a7e44:   97ffd31f    bl  9cac0 <assertion_failed>
   a7e48:   d503201f    nop
   a7e4c:   d503201f    nop

00000000000a7e50 <CNumberPool::~CNumberPool()>:
   a7e50:   d65f03c0    ret
   a7e54:   d503201f    nop
   a7e58:   d503201f    nop
   a7e5c:   d503201f    nop

00000000000a7e60 <CNumberPool::AllocateNumber(bool, char const*)>:
   a7e60:   aa0003e7    mov x7, x0
   a7e64:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a7e68:   910003fd    mov x29, sp
   a7e6c:   12001c21    and w1, w1, #0xff
   a7e70:   b9400000    ldr w0, [x0]
   a7e74:   b94004e5    ldr w5, [x7, #4]
   a7e78:   f9000bf3    str x19, [sp, #16]
   a7e7c:   aa0203f3    mov x19, x2
   a7e80:   6b0000bf    cmp w5, w0
   a7e84:   540001e3    b.cc    a7ec0 <CNumberPool::AllocateNumber(bool, char const*)+0x60>
   a7e88:   f94004e4    ldr x4, [x7, #8]
   a7e8c:   52800026    mov w6, #0x1
   a7e90:   1ac020c3    lsl w3, w6, w0
   a7e94:   93407c63    sxtw    x3, w3
   a7e98:   ea04007f    tst x3, x4
   a7e9c:   540000c1    b.ne    a7eb4 <CNumberPool::AllocateNumber(bool, char const*)+0x54>
   a7ea0:   14000014    b   a7ef0 <CNumberPool::AllocateNumber(bool, char const*)+0x90>
   a7ea4:   1ac020c3    lsl w3, w6, w0
   a7ea8:   93407c63    sxtw    x3, w3
   a7eac:   ea04007f    tst x3, x4
   a7eb0:   54000200    b.eq    a7ef0 <CNumberPool::AllocateNumber(bool, char const*)+0x90>
   a7eb4:   11000400    add w0, w0, #0x1
   a7eb8:   6b0000bf    cmp w5, w0
   a7ebc:   54ffff42    b.cs    a7ea4 <CNumberPool::AllocateNumber(bool, char const*)+0x44>
   a7ec0:   36000101    tbz w1, #0, a7ee0 <CNumberPool::AllocateNumber(bool, char const*)+0x80>
   a7ec4:   b4000213    cbz x19, a7f04 <CNumberPool::AllocateNumber(bool, char const*)+0xa4>
   a7ec8:   97ffddce    bl  9f600 <CLogger::Get()>
   a7ecc:   90000063    adrp    x3, b3000 <_etext+0x3f9c>
   a7ed0:   911ce063    add x3, x3, #0x738
   a7ed4:   aa1303e1    mov x1, x19
   a7ed8:   52800002    mov w2, #0x0
   a7edc:   97ffdfb1    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   a7ee0:   f9400bf3    ldr x19, [sp, #16]
   a7ee4:   52800800    mov w0, #0x40
   a7ee8:   a8c27bfd    ldp x29, x30, [sp], #32
   a7eec:   d65f03c0    ret
   a7ef0:   aa030084    orr x4, x4, x3
   a7ef4:   f9400bf3    ldr x19, [sp, #16]
   a7ef8:   f90004e4    str x4, [x7, #8]
   a7efc:   a8c27bfd    ldp x29, x30, [sp], #32
   a7f00:   d65f03c0    ret
   a7f04:   90000061    adrp    x1, b3000 <_etext+0x3f9c>
   a7f08:   90000060    adrp    x0, b3000 <_etext+0x3f9c>
   a7f0c:   911be021    add x1, x1, #0x6f8
   a7f10:   911ca000    add x0, x0, #0x728
   a7f14:   52800682    mov w2, #0x34
   a7f18:   97ffd2ea    bl  9cac0 <assertion_failed>
   a7f1c:   d503201f    nop

00000000000a7f20 <CNumberPool::FreeNumber(unsigned int)>:
   a7f20:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a7f24:   910003fd    mov x29, sp
   a7f28:   b9400002    ldr w2, [x0]
   a7f2c:   6b01005f    cmp w2, w1
   a7f30:   54000208    b.hi    a7f70 <CNumberPool::FreeNumber(unsigned int)+0x50>
   a7f34:   b9400402    ldr w2, [x0, #4]
   a7f38:   6b01005f    cmp w2, w1
   a7f3c:   540001a3    b.cc    a7f70 <CNumberPool::FreeNumber(unsigned int)+0x50>
   a7f40:   f9400403    ldr x3, [x0, #8]
   a7f44:   52800022    mov w2, #0x1
   a7f48:   1ac12041    lsl w1, w2, w1
   a7f4c:   93407c22    sxtw    x2, w1
   a7f50:   ea03005f    tst x2, x3
   a7f54:   540001a0    b.eq    a7f88 <CNumberPool::FreeNumber(unsigned int)+0x68>
   a7f58:   2a2103e1    mvn w1, w1
   a7f5c:   93407c21    sxtw    x1, w1
   a7f60:   8a030021    and x1, x1, x3
   a7f64:   f9000401    str x1, [x0, #8]
   a7f68:   a8c17bfd    ldp x29, x30, [sp], #16
   a7f6c:   d65f03c0    ret
   a7f70:   90000061    adrp    x1, b3000 <_etext+0x3f9c>
   a7f74:   90000060    adrp    x0, b3000 <_etext+0x3f9c>
   a7f78:   911be021    add x1, x1, #0x6f8
   a7f7c:   911d4000    add x0, x0, #0x750
   a7f80:   52800842    mov w2, #0x42
   a7f84:   97ffd2cf    bl  9cac0 <assertion_failed>
   a7f88:   90000061    adrp    x1, b3000 <_etext+0x3f9c>
   a7f8c:   90000060    adrp    x0, b3000 <_etext+0x3f9c>
   a7f90:   911be021    add x1, x1, #0x6f8
   a7f94:   911de000    add x0, x0, #0x778
   a7f98:   52800862    mov w2, #0x43
   a7f9c:   97ffd2c9    bl  9cac0 <assertion_failed>

00000000000a7fa0 <CExceptionHandler::~CExceptionHandler()>:
   a7fa0:   f0000080    adrp    x0, ba000 <font_data+0x1080>
   a7fa4:   f905241f    str xzr, [x0, #2632]
   a7fa8:   d65f03c0    ret
   a7fac:   d503201f    nop

00000000000a7fb0 <CExceptionHandler::~CExceptionHandler()>:
   a7fb0:   f0000082    adrp    x2, ba000 <font_data+0x1080>
   a7fb4:   d2800101    mov x1, #0x8
   a7fb8:   f905245f    str xzr, [x2, #2632]
   a7fbc:   17fffe29    b   a7860 <operator delete(void*, unsigned long)>

00000000000a7fc0 <CExceptionHandler::Throw(unsigned int, TAbortFrame*)>:
   a7fc0:   d101c3ff    sub sp, sp, #0x70
   a7fc4:   a9027bfd    stp x29, x30, [sp, #32]
   a7fc8:   910083fd    add x29, sp, #0x20
   a7fcc:   a90353f3    stp x19, x20, [sp, #48]
   a7fd0:   a9045bf5    stp x21, x22, [sp, #64]
   a7fd4:   a90563f7    stp x23, x24, [sp, #80]
   a7fd8:   f90033f9    str x25, [sp, #96]
   a7fdc:   b4001122    cbz x2, a8200 <CExceptionHandler::Throw(unsigned int, TAbortFrame*)+0x240>
   a7fe0:   aa0203f3    mov x19, x2
   a7fe4:   39408043    ldrb    w3, [x2, #32]
   a7fe8:   2a0103f7    mov w23, w1
   a7fec:   39408442    ldrb    w2, [x2, #33]
   a7ff0:   39408a60    ldrb    w0, [x19, #34]
   a7ff4:   39408e61    ldrb    w1, [x19, #35]
   a7ff8:   aa022062    orr x2, x3, x2, lsl #8
   a7ffc:   39409263    ldrb    w3, [x19, #36]
   a8000:   aa004040    orr x0, x2, x0, lsl #16
   a8004:   39409662    ldrb    w2, [x19, #37]
   a8008:   aa016001    orr x1, x0, x1, lsl #24
   a800c:   39409a60    ldrb    w0, [x19, #38]
   a8010:   aa038023    orr x3, x1, x3, lsl #32
   a8014:   39402261    ldrb    w1, [x19, #8]
   a8018:   aa02a062    orr x2, x3, x2, lsl #40
   a801c:   39409e74    ldrb    w20, [x19, #39]
   a8020:   aa00c040    orr x0, x2, x0, lsl #48
   a8024:   92400c21    and x1, x1, #0xf
   a8028:   f100143f    cmp x1, #0x5
   a802c:   aa14e014    orr x20, x0, x20, lsl #56
   a8030:   54000201    b.ne    a8070 <CExceptionHandler::Throw(unsigned int, TAbortFrame*)+0xb0>
   a8034:   3940a262    ldrb    w2, [x19, #40]
   a8038:   3940a661    ldrb    w1, [x19, #41]
   a803c:   3940aa60    ldrb    w0, [x19, #42]
   a8040:   3940ae63    ldrb    w3, [x19, #43]
   a8044:   aa012041    orr x1, x2, x1, lsl #8
   a8048:   3940b262    ldrb    w2, [x19, #44]
   a804c:   aa004020    orr x0, x1, x0, lsl #16
   a8050:   3940b661    ldrb    w1, [x19, #45]
   a8054:   aa036003    orr x3, x0, x3, lsl #24
   a8058:   3940ba60    ldrb    w0, [x19, #46]
   a805c:   aa028062    orr x2, x3, x2, lsl #32
   a8060:   3940be74    ldrb    w20, [x19, #47]
   a8064:   aa01a041    orr x1, x2, x1, lsl #40
   a8068:   aa00c020    orr x0, x1, x0, lsl #48
   a806c:   aa14e014    orr x20, x0, x20, lsl #56
   a8070:   39400264    ldrb    w4, [x19]
   a8074:   d2c007e0    mov x0, #0x3f00000000
   a8078:   f2e00600    movk    x0, #0x30, lsl #48
   a807c:   39400663    ldrb    w3, [x19, #1]
   a8080:   39400a61    ldrb    w1, [x19, #2]
   a8084:   39400e62    ldrb    w2, [x19, #3]
   a8088:   aa032083    orr x3, x4, x3, lsl #8
   a808c:   aa014061    orr x1, x3, x1, lsl #16
   a8090:   d3429c59    ubfx    x25, x2, #2, #38
   a8094:   aa026022    orr x2, x1, x2, lsl #24
   a8098:   9ad92400    lsr x0, x0, x25
   a809c:   92406056    and x22, x2, #0x1ffffff
   a80a0:   92400018    and x24, x0, #0x1
   a80a4:   36000200    tbz w0, #0, a80e4 <CExceptionHandler::Throw(unsigned int, TAbortFrame*)+0x124>
   a80a8:   3940c262    ldrb    w2, [x19, #48]
   a80ac:   3940c661    ldrb    w1, [x19, #49]
   a80b0:   3940ca60    ldrb    w0, [x19, #50]
   a80b4:   3940ce63    ldrb    w3, [x19, #51]
   a80b8:   aa012041    orr x1, x2, x1, lsl #8
   a80bc:   3940d262    ldrb    w2, [x19, #52]
   a80c0:   aa004020    orr x0, x1, x0, lsl #16
   a80c4:   3940d661    ldrb    w1, [x19, #53]
   a80c8:   aa036003    orr x3, x0, x3, lsl #24
   a80cc:   3940da60    ldrb    w0, [x19, #54]
   a80d0:   aa028062    orr x2, x3, x2, lsl #32
   a80d4:   3940de78    ldrb    w24, [x19, #55]
   a80d8:   aa01a041    orr x1, x2, x1, lsl #40
   a80dc:   aa00c020    orr x0, x1, x0, lsl #48
   a80e0:   aa18e018    orr x24, x0, x24, lsl #56
   a80e4:   90000095    adrp    x21, b8000 <vtable for CGPIOPin+0x288>
   a80e8:   912ce2b5    add x21, x21, #0xb38
   a80ec:   aa1503e1    mov x1, x21
   a80f0:   aa1403e0    mov x0, x20
   a80f4:   97ffd487    bl  9d310 <debug_stacktrace(unsigned long const*, char const*)>
   a80f8:   97ffdd42    bl  9f600 <CLogger::Get()>
   a80fc:   3940426a    ldrb    w10, [x19, #16]
   a8100:   d0000084    adrp    x4, ba000 <font_data+0x1080>
   a8104:   91210084    add x4, x4, #0x840
   a8108:   f90003f8    str x24, [sp]
   a810c:   f0000043    adrp    x3, b3000 <_etext+0x3f9c>
   a8110:   aa1603e7    mov x7, x22
   a8114:   39404668    ldrb    w8, [x19, #17]
   a8118:   aa1903e6    mov x6, x25
   a811c:   aa1503e1    mov x1, x21
   a8120:   f90007f4    str x20, [sp, #8]
   a8124:   911ee063    add x3, x3, #0x7b8
   a8128:   52800002    mov w2, #0x0
   a812c:   39402269    ldrb    w9, [x19, #8]
   a8130:   39402665    ldrb    w5, [x19, #9]
   a8134:   aa082148    orr x8, x10, x8, lsl #8
   a8138:   39404a6c    ldrb    w12, [x19, #18]
   a813c:   39402a6b    ldrb    w11, [x19, #10]
   a8140:   aa052125    orr x5, x9, x5, lsl #8
   a8144:   39404e69    ldrb    w9, [x19, #19]
   a8148:   aa0c410c    orr x12, x8, x12, lsl #16
   a814c:   3940626d    ldrb    w13, [x19, #24]
   a8150:   aa0b40ab    orr x11, x5, x11, lsl #16
   a8154:   3940666a    ldrb    w10, [x19, #25]
   a8158:   aa096189    orr x9, x12, x9, lsl #24
   a815c:   39402e68    ldrb    w8, [x19, #11]
   a8160:   39406a65    ldrb    w5, [x19, #26]
   a8164:   aa0a21aa    orr x10, x13, x10, lsl #8
   a8168:   3940526c    ldrb    w12, [x19, #20]
   a816c:   aa086168    orr x8, x11, x8, lsl #24
   a8170:   3940326b    ldrb    w11, [x19, #12]
   a8174:   aa054145    orr x5, x10, x5, lsl #16
   a8178:   39406e6a    ldrb    w10, [x19, #27]
   a817c:   aa0c812c    orr x12, x9, x12, lsl #32
   a8180:   39405669    ldrb    w9, [x19, #21]
   a8184:   aa0b810b    orr x11, x8, x11, lsl #32
   a8188:   39403668    ldrb    w8, [x19, #13]
   a818c:   aa0a60aa    orr x10, x5, x10, lsl #24
   a8190:   39407265    ldrb    w5, [x19, #28]
   a8194:   aa09a189    orr x9, x12, x9, lsl #40
   a8198:   39405a6c    ldrb    w12, [x19, #22]
   a819c:   aa08a168    orr x8, x11, x8, lsl #40
   a81a0:   39403a6b    ldrb    w11, [x19, #14]
   a81a4:   aa058145    orr x5, x10, x5, lsl #32
   a81a8:   3940766a    ldrb    w10, [x19, #29]
   a81ac:   aa0cc12c    orr x12, x9, x12, lsl #48
   a81b0:   39405e69    ldrb    w9, [x19, #23]
   a81b4:   aa0bc10b    orr x11, x8, x11, lsl #48
   a81b8:   39403e68    ldrb    w8, [x19, #15]
   a81bc:   aa0aa0aa    orr x10, x5, x10, lsl #40
   a81c0:   39407a65    ldrb    w5, [x19, #30]
   a81c4:   aa09e189    orr x9, x12, x9, lsl #56
   a81c8:   39407e6c    ldrb    w12, [x19, #31]
   a81cc:   aa08e168    orr x8, x11, x8, lsl #56
   a81d0:   f8775884    ldr x4, [x4, w23, uxtw #3]
   a81d4:   aa05c145    orr x5, x10, x5, lsl #48
   a81d8:   a90123e9    stp x9, x8, [sp, #16]
   a81dc:   aa0ce0a5    orr x5, x5, x12, lsl #56
   a81e0:   97ffdef0    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   a81e4:   a9427bfd    ldp x29, x30, [sp, #32]
   a81e8:   a94353f3    ldp x19, x20, [sp, #48]
   a81ec:   a9445bf5    ldp x21, x22, [sp, #64]
   a81f0:   a94563f7    ldp x23, x24, [sp, #80]
   a81f4:   f94033f9    ldr x25, [sp, #96]
   a81f8:   9101c3ff    add sp, sp, #0x70
   a81fc:   d65f03c0    ret
   a8200:   f0000041    adrp    x1, b3000 <_etext+0x3f9c>
   a8204:   f0000040    adrp    x0, b3000 <_etext+0x3f9c>
   a8208:   911e4021    add x1, x1, #0x790
   a820c:   911ea000    add x0, x0, #0x7a8
   a8210:   528006c2    mov w2, #0x36
   a8214:   97ffd22b    bl  9cac0 <assertion_failed>
   a8218:   d503201f    nop
   a821c:   d503201f    nop

00000000000a8220 <CExceptionHandler::CExceptionHandler()>:
   a8220:   90000081    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a8224:   912c8021    add x1, x1, #0xb20
   a8228:   d0000082    adrp    x2, ba000 <font_data+0x1080>
   a822c:   f9452443    ldr x3, [x2, #2632]
   a8230:   f9000001    str x1, [x0]
   a8234:   b5000063    cbnz    x3, a8240 <CExceptionHandler::CExceptionHandler()+0x20>
   a8238:   f9052440    str x0, [x2, #2632]
   a823c:   d65f03c0    ret
   a8240:   f0000041    adrp    x1, b3000 <_etext+0x3f9c>
   a8244:   f0000040    adrp    x0, b3000 <_etext+0x3f9c>
   a8248:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a824c:   911e4021    add x1, x1, #0x790
   a8250:   910003fd    mov x29, sp
   a8254:   910e6000    add x0, x0, #0x398
   a8258:   52800562    mov w2, #0x2b
   a825c:   97ffd219    bl  9cac0 <assertion_failed>

00000000000a8260 <CExceptionHandler::Get()>:
   a8260:   d0000080    adrp    x0, ba000 <font_data+0x1080>
   a8264:   f9452400    ldr x0, [x0, #2632]
   a8268:   b4000040    cbz x0, a8270 <CExceptionHandler::Get()+0x10>
   a826c:   d65f03c0    ret
   a8270:   f0000041    adrp    x1, b3000 <_etext+0x3f9c>
   a8274:   f0000020    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   a8278:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a827c:   911e4021    add x1, x1, #0x790
   a8280:   910003fd    mov x29, sp
   a8284:   91020000    add x0, x0, #0x80
   a8288:   52800a82    mov w2, #0x54
   a828c:   97ffd20d    bl  9cac0 <assertion_failed>

00000000000a8290 <ExceptionHandler>:
   a8290:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a8294:   910003fd    mov x29, sp
   a8298:   a90153f3    stp x19, x20, [sp, #16]
   a829c:   aa0003f3    mov x19, x0
   a82a0:   aa0103f4    mov x20, x1
   a82a4:   9400091b    bl  aa710 <CInterruptSystem::DisableFIQ()>
   a82a8:   d50341ff    msr daifclr, #0x1
   a82ac:   d0000080    adrp    x0, ba000 <font_data+0x1080>
   a82b0:   f9452400    ldr x0, [x0, #2632]
   a82b4:   b4000120    cbz x0, a82d8 <ExceptionHandler+0x48>
   a82b8:   f9400003    ldr x3, [x0]
   a82bc:   aa1403e2    mov x2, x20
   a82c0:   2a1303e1    mov w1, w19
   a82c4:   a94153f3    ldp x19, x20, [sp, #16]
   a82c8:   a8c27bfd    ldp x29, x30, [sp], #32
   a82cc:   f9400863    ldr x3, [x3, #16]
   a82d0:   aa0303f0    mov x16, x3
   a82d4:   d61f0200    br  x16
   a82d8:   f0000041    adrp    x1, b3000 <_etext+0x3f9c>
   a82dc:   f0000020    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   a82e0:   911e4021    add x1, x1, #0x790
   a82e4:   91020000    add x0, x0, #0x80
   a82e8:   52800a82    mov w2, #0x54
   a82ec:   97ffd1f5    bl  9cac0 <assertion_failed>

00000000000a82f0 <CMemorySystem::Destructor()>:
   a82f0:   d0000082    adrp    x2, ba000 <font_data+0x1080>
   a82f4:   f9452841    ldr x1, [x2, #2640]
   a82f8:   eb00003f    cmp x1, x0
   a82fc:   54000040    b.eq    a8304 <CMemorySystem::Destructor()+0x14>
   a8300:   d65f03c0    ret
   a8304:   39400020    ldrb    w0, [x1]
   a8308:   f905285f    str xzr, [x2, #2640]
   a830c:   3607ffa0    tbz w0, #0, a8300 <CMemorySystem::Destructor()+0x10>
   a8310:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a8314:   910003fd    mov x29, sp
   a8318:   d5381000    mrs x0, sctlr_el1
   a831c:   928000a1    mov x1, #0xfffffffffffffffa
   a8320:   8a010000    and x0, x0, x1
   a8324:   d5181000    msr sctlr_el1, x0
   a8328:   d5033f9f    dsb sy
   a832c:   d5033fdf    isb
   a8330:   94000174    bl  a8900 <CleanDataCache>
   a8334:   94000117    bl  a8790 <InvalidateDataCache>
   a8338:   d508871f    tlbi    vmalle1
   a833c:   d5033f9f    dsb sy
   a8340:   d5033fdf    isb
   a8344:   a8c17bfd    ldp x29, x30, [sp], #16
   a8348:   d65f03c0    ret
   a834c:   d503201f    nop

00000000000a8350 <CMemorySystem::~CMemorySystem()>:
   a8350:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a8354:   910003fd    mov x29, sp
   a8358:   f9000bf3    str x19, [sp, #16]
   a835c:   aa0003f3    mov x19, x0
   a8360:   97ffffe4    bl  a82f0 <CMemorySystem::Destructor()>
   a8364:   910c2260    add x0, x19, #0x308
   a8368:   9400136a    bl  ad110 <CPageAllocator::~CPageAllocator()>
   a836c:   91064260    add x0, x19, #0x190
   a8370:   97fffd70    bl  a7930 <CHeapAllocator::~CHeapAllocator()>
   a8374:   91006260    add x0, x19, #0x18
   a8378:   f9400bf3    ldr x19, [sp, #16]
   a837c:   a8c27bfd    ldp x29, x30, [sp], #32
   a8380:   17fffd6c    b   a7930 <CHeapAllocator::~CHeapAllocator()>
   a8384:   d503201f    nop
   a8388:   d503201f    nop
   a838c:   d503201f    nop

00000000000a8390 <CMemorySystem::GetMemSize() const>:
   a8390:   d0000080    adrp    x0, ba000 <font_data+0x1080>
   a8394:   f9452801    ldr x1, [x0, #2640]
   a8398:   b4000081    cbz x1, a83a8 <CMemorySystem::GetMemSize() const+0x18>
   a839c:   a9408022    ldp x2, x0, [x1, #8]
   a83a0:   8b000040    add x0, x2, x0
   a83a4:   d65f03c0    ret
   a83a8:   90000081    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a83ac:   912d0021    add x1, x1, #0xb40
   a83b0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a83b4:   91004020    add x0, x1, #0x10
   a83b8:   910003fd    mov x29, sp
   a83bc:   52801162    mov w2, #0x8b
   a83c0:   97ffd1c0    bl  9cac0 <assertion_failed>
   a83c4:   d503201f    nop
   a83c8:   d503201f    nop
   a83cc:   d503201f    nop

00000000000a83d0 <CMemorySystem::Get()>:
   a83d0:   d0000080    adrp    x0, ba000 <font_data+0x1080>
   a83d4:   f9452800    ldr x0, [x0, #2640]
   a83d8:   b4000040    cbz x0, a83e0 <CMemorySystem::Get()+0x10>
   a83dc:   d65f03c0    ret
   a83e0:   90000081    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a83e4:   912d0021    add x1, x1, #0xb40
   a83e8:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a83ec:   91004020    add x0, x1, #0x10
   a83f0:   910003fd    mov x29, sp
   a83f4:   52801222    mov w2, #0x91
   a83f8:   97ffd1b2    bl  9cac0 <assertion_failed>
   a83fc:   d503201f    nop

00000000000a8400 <CMemorySystem::EnableMMU()>:
   a8400:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a8404:   910003fd    mov x29, sp
   a8408:   39400001    ldrb    w1, [x0]
   a840c:   36000341    tbz w1, #0, a8474 <CMemorySystem::EnableMMU()+0x74>
   a8410:   d2809fe1    mov x1, #0x4ff
   a8414:   d518a201    msr mair_el1, x1
   a8418:   f9419400    ldr x0, [x0, #808]
   a841c:   b4000360    cbz x0, a8488 <CMemorySystem::EnableMMU()+0x88>
   a8420:   940001c4    bl  a8b30 <CTranslationTable::GetBaseAddress() const>
   a8424:   d5182000    msr ttbr0_el1, x0
   a8428:   d5382040    mrs x0, tcr_el1
   a842c:   929ff7e2    mov x2, #0xffffffffffff0040
   a8430:   f2bff7e2    movk    x2, #0xffbf, lsl #16
   a8434:   f2dfff02    movk    x2, #0xfff8, lsl #32
   a8438:   d28ea381    mov x1, #0x751c
   a843c:   f2a01001    movk    x1, #0x80, lsl #16
   a8440:   8a020000    and x0, x0, x2
   a8444:   f2c00021    movk    x1, #0x1, lsl #32
   a8448:   aa010000    orr x0, x0, x1
   a844c:   d5182040    msr tcr_el1, x0
   a8450:   d5381000    mrs x0, sctlr_el1
   a8454:   92800042    mov x2, #0xfffffffffffffffd
   a8458:   f2bffee2    movk    x2, #0xfff7, lsl #16
   a845c:   d28200a1    mov x1, #0x1005
   a8460:   8a020000    and x0, x0, x2
   a8464:   aa010000    orr x0, x0, x1
   a8468:   d5181000    msr sctlr_el1, x0
   a846c:   a8c17bfd    ldp x29, x30, [sp], #16
   a8470:   d65f03c0    ret
   a8474:   90000081    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a8478:   912d0021    add x1, x1, #0xb40
   a847c:   91008020    add x0, x1, #0x20
   a8480:   528012e2    mov w2, #0x97
   a8484:   97ffd18f    bl  9cac0 <assertion_failed>
   a8488:   90000081    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a848c:   912d0021    add x1, x1, #0xb40
   a8490:   9100c020    add x0, x1, #0x30
   a8494:   528013c2    mov w2, #0x9e
   a8498:   97ffd18a    bl  9cac0 <assertion_failed>
   a849c:   d503201f    nop

00000000000a84a0 <CMemorySystem::CMemorySystem(bool)>:
   a84a0:   a9ba7bfd    stp x29, x30, [sp, #-96]!
   a84a4:   910003fd    mov x29, sp
   a84a8:   a90153f3    stp x19, x20, [sp, #16]
   a84ac:   aa0003f3    mov x19, x0
   a84b0:   90000094    adrp    x20, b8000 <vtable for CGPIOPin+0x288>
   a84b4:   912d0294    add x20, x20, #0xb40
   a84b8:   a9025bf5    stp x21, x22, [sp, #32]
   a84bc:   91006016    add x22, x0, #0x18
   a84c0:   910c2275    add x21, x19, #0x308
   a84c4:   aa1603e0    mov x0, x22
   a84c8:   f9001bf7    str x23, [sp, #48]
   a84cc:   91064277    add x23, x19, #0x190
   a84d0:   39000261    strb    w1, [x19]
   a84d4:   91014281    add x1, x20, #0x50
   a84d8:   a900fe7f    stp xzr, xzr, [x19, #8]
   a84dc:   97fffcf9    bl  a78c0 <CHeapAllocator::CHeapAllocator(char const*)>
   a84e0:   91016281    add x1, x20, #0x58
   a84e4:   aa1703e0    mov x0, x23
   a84e8:   97fffcf6    bl  a78c0 <CHeapAllocator::CHeapAllocator(char const*)>
   a84ec:   aa1503e0    mov x0, x21
   a84f0:   94001300    bl  ad0f0 <CPageAllocator::CPageAllocator()>
   a84f4:   d0000080    adrp    x0, ba000 <font_data+0x1080>
   a84f8:   f901967f    str xzr, [x19, #808]
   a84fc:   f9452801    ldr x1, [x0, #2640]
   a8500:   b40000c1    cbz x1, a8518 <CMemorySystem::CMemorySystem(bool)+0x78>
   a8504:   a94153f3    ldp x19, x20, [sp, #16]
   a8508:   a9425bf5    ldp x21, x22, [sp, #32]
   a850c:   f9401bf7    ldr x23, [sp, #48]
   a8510:   a8c67bfd    ldp x29, x30, [sp], #96
   a8514:   d65f03c0    ret
   a8518:   52800021    mov w1, #0x1
   a851c:   f9052813    str x19, [x0, #2640]
   a8520:   910103e0    add x0, sp, #0x40
   a8524:   97ffd18b    bl  9cb50 <CBcmPropertyTags::CBcmPropertyTags(bool)>
   a8528:   528000a1    mov w1, #0x5
   a852c:   72a00021    movk    w1, #0x1, lsl #16
   a8530:   910123e2    add x2, sp, #0x48
   a8534:   910103e0    add x0, sp, #0x40
   a8538:   52800004    mov w4, #0x0
   a853c:   52800283    mov w3, #0x14
   a8540:   97ffd1e4    bl  9ccd0 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   a8544:   360003c0    tbz w0, #0, a85bc <CMemorySystem::CMemorySystem(bool)+0x11c>
   a8548:   b94057e0    ldr w0, [sp, #84]
   a854c:   350006c0    cbnz    w0, a8624 <CMemorySystem::CMemorySystem(bool)+0x184>
   a8550:   b9405be1    ldr w1, [sp, #88]
   a8554:   b2689ff4    mov x20, #0xffffffffff000000
   a8558:   d1640282    sub x2, x20, #0x900, lsl #12
   a855c:   8b020022    add x2, x1, x2
   a8560:   8b140034    add x20, x1, x20
   a8564:   d2a00083    mov x3, #0x40000
   a8568:   aa1603e0    mov x0, x22
   a856c:   f9000661    str x1, [x19, #8]
   a8570:   d2a01201    mov x1, #0x900000
   a8574:   97fffcf3    bl  a7940 <CHeapAllocator::Setup(unsigned long, unsigned long, unsigned long)>
   a8578:   97ffe13a    bl  a0a60 <CMachineInfo::Get()>
   a857c:   97ffdf85    bl  a0390 <CMachineInfo::GetRAMSize() const>
   a8580:   7110001f    cmp w0, #0x400
   a8584:   540003a8    b.hi    a85f8 <CMemorySystem::CMemorySystem(bool)+0x158>
   a8588:   aa1503e0    mov x0, x21
   a858c:   aa1403e1    mov x1, x20
   a8590:   d2a02002    mov x2, #0x1000000
   a8594:   940012e3    bl  ad120 <CPageAllocator::Setup(unsigned long, unsigned long)>
   a8598:   39400260    ldrb    w0, [x19]
   a859c:   370001c0    tbnz    w0, #0, a85d4 <CMemorySystem::CMemorySystem(bool)+0x134>
   a85a0:   910103e0    add x0, sp, #0x40
   a85a4:   97ffd16f    bl  9cb60 <CBcmPropertyTags::~CBcmPropertyTags()>
   a85a8:   a94153f3    ldp x19, x20, [sp, #16]
   a85ac:   a9425bf5    ldp x21, x22, [sp, #32]
   a85b0:   f9401bf7    ldr x23, [sp, #48]
   a85b4:   a8c67bfd    ldp x29, x30, [sp], #96
   a85b8:   d65f03c0    ret
   a85bc:   52a38000    mov w0, #0x1c000000
   a85c0:   d2a34e02    mov x2, #0x1a700000
   a85c4:   91640054    add x20, x2, #0x900, lsl #12
   a85c8:   d2a38001    mov x1, #0x1c000000
   a85cc:   290a83ff    stp wzr, w0, [sp, #84]
   a85d0:   17ffffe5    b   a8564 <CMemorySystem::CMemorySystem(bool)+0xc4>
   a85d4:   d2800200    mov x0, #0x10
   a85d8:   97fffc7a    bl  a77c0 <operator new(unsigned long)>
   a85dc:   f9400661    ldr x1, [x19, #8]
   a85e0:   aa0003f4    mov x20, x0
   a85e4:   9400021b    bl  a8e50 <CTranslationTable::CTranslationTable(unsigned long)>
   a85e8:   aa1303e0    mov x0, x19
   a85ec:   f9019674    str x20, [x19, #808]
   a85f0:   97ffff84    bl  a8400 <CMemorySystem::EnableMMU()>
   a85f4:   17ffffeb    b   a85a0 <CMemorySystem::CMemorySystem(bool)+0x100>
   a85f8:   51100000    sub w0, w0, #0x400
   a85fc:   d2b00001    mov x1, #0x80000000
   a8600:   530c2c02    lsl w2, w0, #20
   a8604:   d2800003    mov x3, #0x0
   a8608:   eb01005f    cmp x2, x1
   a860c:   aa1703e0    mov x0, x23
   a8610:   9a819042    csel    x2, x2, x1, ls
   a8614:   d2a80001    mov x1, #0x40000000
   a8618:   f9000a62    str x2, [x19, #16]
   a861c:   97fffcc9    bl  a7940 <CHeapAllocator::Setup(unsigned long, unsigned long, unsigned long)>
   a8620:   17ffffda    b   a8588 <CMemorySystem::CMemorySystem(bool)+0xe8>
   a8624:   528006e2    mov w2, #0x37
   a8628:   aa1403e1    mov x1, x20
   a862c:   9101a280    add x0, x20, #0x68
   a8630:   97ffd124    bl  9cac0 <assertion_failed>
   a8634:   d503201f    nop
   a8638:   d503201f    nop
   a863c:   d503201f    nop

00000000000a8640 <CMemorySystem::GetCoherentPage(unsigned int)>:
   a8640:   53103c00    lsl w0, w0, #16
   a8644:   91540000    add x0, x0, #0x500, lsl #12
   a8648:   d65f03c0    ret
   a864c:   00000000    udf #0

00000000000a8650 <CurrentExecutionLevel>:
   a8650:   d53b4221    mrs x1, daif
   a8654:   52800040    mov w0, #0x2
   a8658:   f27a003f    tst x1, #0x40
   a865c:   53071c21    ubfx    w1, w1, #7, #1
   a8660:   1a800020    csel    w0, w1, w0, eq
   a8664:   d65f03c0    ret
   a8668:   d503201f    nop
   a866c:   d503201f    nop

00000000000a8670 <EnterCritical>:
   a8670:   51000401    sub w1, w0, #0x1
   a8674:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a8678:   910003fd    mov x29, sp
   a867c:   7100043f    cmp w1, #0x1
   a8680:   540002c8    b.hi    a86d8 <EnterCritical+0x68>
   a8684:   d53b4224    mrs x4, daif
   a8688:   7100081f    cmp w0, #0x2
   a868c:   54000321    b.ne    a86f0 <EnterCritical+0x80>
   a8690:   d50343df    msr daifset, #0x3
   a8694:   d0000081    adrp    x1, ba000 <font_data+0x1080>
   a8698:   91298023    add x3, x1, #0xa60
   a869c:   b94a6022    ldr w2, [x1, #2656]
   a86a0:   71004c5f    cmp w2, #0x13
   a86a4:   54000348    b.hi    a870c <EnterCritical+0x9c>
   a86a8:   b94a6022    ldr w2, [x1, #2656]
   a86ac:   7100041f    cmp w0, #0x1
   a86b0:   91004063    add x3, x3, #0x10
   a86b4:   11000440    add w0, w2, #0x1
   a86b8:   2a0203e2    mov w2, w2
   a86bc:   b90a6020    str w0, [x1, #2656]
   a86c0:   f8227864    str x4, [x3, x2, lsl #3]
   a86c4:   54000041    b.ne    a86cc <EnterCritical+0x5c>
   a86c8:   d50341ff    msr daifclr, #0x1
   a86cc:   d5033fbf    dmb sy
   a86d0:   a8c17bfd    ldp x29, x30, [sp], #16
   a86d4:   d65f03c0    ret
   a86d8:   f0000041    adrp    x1, b3000 <_etext+0x3f9c>
   a86dc:   f0000040    adrp    x0, b3000 <_etext+0x3f9c>
   a86e0:   91212021    add x1, x1, #0x848
   a86e4:   91218000    add x0, x0, #0x860
   a86e8:   52800c62    mov w2, #0x63
   a86ec:   97ffd0f5    bl  9cac0 <assertion_failed>
   a86f0:   3637fd04    tbz w4, #6, a8690 <EnterCritical+0x20>
   a86f4:   f0000041    adrp    x1, b3000 <_etext+0x3f9c>
   a86f8:   f0000040    adrp    x0, b3000 <_etext+0x3f9c>
   a86fc:   91212021    add x1, x1, #0x848
   a8700:   91226000    add x0, x0, #0x898
   a8704:   52800d22    mov w2, #0x69
   a8708:   97ffd0ee    bl  9cac0 <assertion_failed>
   a870c:   f0000041    adrp    x1, b3000 <_etext+0x3f9c>
   a8710:   f0000040    adrp    x0, b3000 <_etext+0x3f9c>
   a8714:   91212021    add x1, x1, #0x848
   a8718:   91232000    add x0, x0, #0x8c8
   a871c:   52800da2    mov w2, #0x6d
   a8720:   97ffd0e8    bl  9cac0 <assertion_failed>
   a8724:   d503201f    nop
   a8728:   d503201f    nop
   a872c:   d503201f    nop

00000000000a8730 <LeaveCritical>:
   a8730:   d5033fbf    dmb sy
   a8734:   d50341df    msr daifset, #0x1
   a8738:   d0000080    adrp    x0, ba000 <font_data+0x1080>
   a873c:   b94a6001    ldr w1, [x0, #2656]
   a8740:   34000121    cbz w1, a8764 <LeaveCritical+0x34>
   a8744:   b94a6001    ldr w1, [x0, #2656]
   a8748:   91298002    add x2, x0, #0xa60
   a874c:   91004042    add x2, x2, #0x10
   a8750:   51000423    sub w3, w1, #0x1
   a8754:   b90a6003    str w3, [x0, #2656]
   a8758:   f8637840    ldr x0, [x2, x3, lsl #3]
   a875c:   d51b4220    msr daif, x0
   a8760:   d65f03c0    ret
   a8764:   f0000041    adrp    x1, b3000 <_etext+0x3f9c>
   a8768:   f0000040    adrp    x0, b3000 <_etext+0x3f9c>
   a876c:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a8770:   91212021    add x1, x1, #0x848
   a8774:   910003fd    mov x29, sp
   a8778:   9123c000    add x0, x0, #0x8f0
   a877c:   52800fc2    mov w2, #0x7e
   a8780:   97ffd0d0    bl  9cac0 <assertion_failed>
   a8784:   d503201f    nop
   a8788:   d503201f    nop
   a878c:   d503201f    nop

00000000000a8790 <InvalidateDataCache>:
   a8790:   d2800000    mov x0, #0x0
   a8794:   d503201f    nop
   a8798:   d5087640    dc  isw, x0
   a879c:   32010001    orr w1, w0, #0x80000000
   a87a0:   d5087641    dc  isw, x1
   a87a4:   91010000    add x0, x0, #0x40
   a87a8:   f140101f    cmp x0, #0x4, lsl #12
   a87ac:   54ffff61    b.ne    a8798 <InvalidateDataCache+0x8>
   a87b0:   52800050    mov w16, #0x2
   a87b4:   72a20010    movk    w16, #0x1000, lsl #16
   a87b8:   5280004f    mov w15, #0x2
   a87bc:   72a4000f    movk    w15, #0x2000, lsl #16
   a87c0:   5280004e    mov w14, #0x2
   a87c4:   72a6000e    movk    w14, #0x3000, lsl #16
   a87c8:   5280004d    mov w13, #0x2
   a87cc:   72a8000d    movk    w13, #0x4000, lsl #16
   a87d0:   5280004c    mov w12, #0x2
   a87d4:   72aa000c    movk    w12, #0x5000, lsl #16
   a87d8:   5280004b    mov w11, #0x2
   a87dc:   72ac000b    movk    w11, #0x6000, lsl #16
   a87e0:   5280004a    mov w10, #0x2
   a87e4:   72ae000a    movk    w10, #0x7000, lsl #16
   a87e8:   52800049    mov w9, #0x2
   a87ec:   72b00009    movk    w9, #0x8000, lsl #16
   a87f0:   52800048    mov w8, #0x2
   a87f4:   72b20008    movk    w8, #0x9000, lsl #16
   a87f8:   52800047    mov w7, #0x2
   a87fc:   72b40007    movk    w7, #0xa000, lsl #16
   a8800:   52800046    mov w6, #0x2
   a8804:   72b60006    movk    w6, #0xb000, lsl #16
   a8808:   52800045    mov w5, #0x2
   a880c:   72b80005    movk    w5, #0xc000, lsl #16
   a8810:   52800044    mov w4, #0x2
   a8814:   72ba0004    movk    w4, #0xd000, lsl #16
   a8818:   52800043    mov w3, #0x2
   a881c:   72bc0003    movk    w3, #0xe000, lsl #16
   a8820:   52800042    mov w2, #0x2
   a8824:   72be0002    movk    w2, #0xf000, lsl #16
   a8828:   52800000    mov w0, #0x0
   a882c:   d503201f    nop
   a8830:   321f0001    orr w1, w0, #0x2
   a8834:   d5087641    dc  isw, x1
   a8838:   2a100001    orr w1, w0, w16
   a883c:   d5087641    dc  isw, x1
   a8840:   2a0f0001    orr w1, w0, w15
   a8844:   d5087641    dc  isw, x1
   a8848:   2a0e0001    orr w1, w0, w14
   a884c:   d5087641    dc  isw, x1
   a8850:   2a0d0001    orr w1, w0, w13
   a8854:   d5087641    dc  isw, x1
   a8858:   2a0c0001    orr w1, w0, w12
   a885c:   d5087641    dc  isw, x1
   a8860:   2a0b0001    orr w1, w0, w11
   a8864:   d5087641    dc  isw, x1
   a8868:   2a0a0001    orr w1, w0, w10
   a886c:   d5087641    dc  isw, x1
   a8870:   2a090001    orr w1, w0, w9
   a8874:   d5087641    dc  isw, x1
   a8878:   2a080001    orr w1, w0, w8
   a887c:   d5087641    dc  isw, x1
   a8880:   2a070001    orr w1, w0, w7
   a8884:   d5087641    dc  isw, x1
   a8888:   2a060001    orr w1, w0, w6
   a888c:   d5087641    dc  isw, x1
   a8890:   2a050001    orr w1, w0, w5
   a8894:   d5087641    dc  isw, x1
   a8898:   2a040001    orr w1, w0, w4
   a889c:   d5087641    dc  isw, x1
   a88a0:   2a030001    orr w1, w0, w3
   a88a4:   d5087641    dc  isw, x1
   a88a8:   2a020001    orr w1, w0, w2
   a88ac:   d5087641    dc  isw, x1
   a88b0:   11010000    add w0, w0, #0x40
   a88b4:   7140401f    cmp w0, #0x10, lsl #12
   a88b8:   54fffbc1    b.ne    a8830 <InvalidateDataCache+0xa0>
   a88bc:   d5033f9f    dsb sy
   a88c0:   d65f03c0    ret
   a88c4:   d503201f    nop
   a88c8:   d503201f    nop
   a88cc:   d503201f    nop

00000000000a88d0 <InvalidateDataCacheL1Only>:
   a88d0:   d2800000    mov x0, #0x0
   a88d4:   d503201f    nop
   a88d8:   d5087640    dc  isw, x0
   a88dc:   32010001    orr w1, w0, #0x80000000
   a88e0:   d5087641    dc  isw, x1
   a88e4:   91010000    add x0, x0, #0x40
   a88e8:   f140101f    cmp x0, #0x4, lsl #12
   a88ec:   54ffff61    b.ne    a88d8 <InvalidateDataCacheL1Only+0x8>
   a88f0:   d5033f9f    dsb sy
   a88f4:   d65f03c0    ret
   a88f8:   d503201f    nop
   a88fc:   d503201f    nop

00000000000a8900 <CleanDataCache>:
   a8900:   d2800000    mov x0, #0x0
   a8904:   d503201f    nop
   a8908:   d5087a40    dc  csw, x0
   a890c:   32010001    orr w1, w0, #0x80000000
   a8910:   d5087a41    dc  csw, x1
   a8914:   91010000    add x0, x0, #0x40
   a8918:   f140101f    cmp x0, #0x4, lsl #12
   a891c:   54ffff61    b.ne    a8908 <CleanDataCache+0x8>
   a8920:   52800050    mov w16, #0x2
   a8924:   72a20010    movk    w16, #0x1000, lsl #16
   a8928:   5280004f    mov w15, #0x2
   a892c:   72a4000f    movk    w15, #0x2000, lsl #16
   a8930:   5280004e    mov w14, #0x2
   a8934:   72a6000e    movk    w14, #0x3000, lsl #16
   a8938:   5280004d    mov w13, #0x2
   a893c:   72a8000d    movk    w13, #0x4000, lsl #16
   a8940:   5280004c    mov w12, #0x2
   a8944:   72aa000c    movk    w12, #0x5000, lsl #16
   a8948:   5280004b    mov w11, #0x2
   a894c:   72ac000b    movk    w11, #0x6000, lsl #16
   a8950:   5280004a    mov w10, #0x2
   a8954:   72ae000a    movk    w10, #0x7000, lsl #16
   a8958:   52800049    mov w9, #0x2
   a895c:   72b00009    movk    w9, #0x8000, lsl #16
   a8960:   52800048    mov w8, #0x2
   a8964:   72b20008    movk    w8, #0x9000, lsl #16
   a8968:   52800047    mov w7, #0x2
   a896c:   72b40007    movk    w7, #0xa000, lsl #16
   a8970:   52800046    mov w6, #0x2
   a8974:   72b60006    movk    w6, #0xb000, lsl #16
   a8978:   52800045    mov w5, #0x2
   a897c:   72b80005    movk    w5, #0xc000, lsl #16
   a8980:   52800044    mov w4, #0x2
   a8984:   72ba0004    movk    w4, #0xd000, lsl #16
   a8988:   52800043    mov w3, #0x2
   a898c:   72bc0003    movk    w3, #0xe000, lsl #16
   a8990:   52800042    mov w2, #0x2
   a8994:   72be0002    movk    w2, #0xf000, lsl #16
   a8998:   52800000    mov w0, #0x0
   a899c:   d503201f    nop
   a89a0:   321f0001    orr w1, w0, #0x2
   a89a4:   d5087a41    dc  csw, x1
   a89a8:   2a100001    orr w1, w0, w16
   a89ac:   d5087a41    dc  csw, x1
   a89b0:   2a0f0001    orr w1, w0, w15
   a89b4:   d5087a41    dc  csw, x1
   a89b8:   2a0e0001    orr w1, w0, w14
   a89bc:   d5087a41    dc  csw, x1
   a89c0:   2a0d0001    orr w1, w0, w13
   a89c4:   d5087a41    dc  csw, x1
   a89c8:   2a0c0001    orr w1, w0, w12
   a89cc:   d5087a41    dc  csw, x1
   a89d0:   2a0b0001    orr w1, w0, w11
   a89d4:   d5087a41    dc  csw, x1
   a89d8:   2a0a0001    orr w1, w0, w10
   a89dc:   d5087a41    dc  csw, x1
   a89e0:   2a090001    orr w1, w0, w9
   a89e4:   d5087a41    dc  csw, x1
   a89e8:   2a080001    orr w1, w0, w8
   a89ec:   d5087a41    dc  csw, x1
   a89f0:   2a070001    orr w1, w0, w7
   a89f4:   d5087a41    dc  csw, x1
   a89f8:   2a060001    orr w1, w0, w6
   a89fc:   d5087a41    dc  csw, x1
   a8a00:   2a050001    orr w1, w0, w5
   a8a04:   d5087a41    dc  csw, x1
   a8a08:   2a040001    orr w1, w0, w4
   a8a0c:   d5087a41    dc  csw, x1
   a8a10:   2a030001    orr w1, w0, w3
   a8a14:   d5087a41    dc  csw, x1
   a8a18:   2a020001    orr w1, w0, w2
   a8a1c:   d5087a41    dc  csw, x1
   a8a20:   11010000    add w0, w0, #0x40
   a8a24:   7140401f    cmp w0, #0x10, lsl #12
   a8a28:   54fffbc1    b.ne    a89a0 <CleanDataCache+0xa0>
   a8a2c:   d5033f9f    dsb sy
   a8a30:   d65f03c0    ret
   a8a34:   d503201f    nop
   a8a38:   d503201f    nop
   a8a3c:   d503201f    nop

00000000000a8a40 <InvalidateDataCacheRange>:
   a8a40:   d5087620    dc  ivac, x0
   a8a44:   f101003f    cmp x1, #0x40
   a8a48:   54000149    b.ls    a8a70 <InvalidateDataCacheRange+0x30>
   a8a4c:   d1010421    sub x1, x1, #0x41
   a8a50:   91010000    add x0, x0, #0x40
   a8a54:   927ae421    and x1, x1, #0xffffffffffffffc0
   a8a58:   8b000021    add x1, x1, x0
   a8a5c:   d503201f    nop
   a8a60:   d5087620    dc  ivac, x0
   a8a64:   eb01001f    cmp x0, x1
   a8a68:   91010000    add x0, x0, #0x40
   a8a6c:   54ffffa1    b.ne    a8a60 <InvalidateDataCacheRange+0x20>
   a8a70:   d5033f9f    dsb sy
   a8a74:   d65f03c0    ret
   a8a78:   d503201f    nop
   a8a7c:   d503201f    nop

00000000000a8a80 <CleanDataCacheRange>:
   a8a80:   d50b7a20    dc  cvac, x0
   a8a84:   f101003f    cmp x1, #0x40
   a8a88:   54000149    b.ls    a8ab0 <CleanDataCacheRange+0x30>
   a8a8c:   d1010421    sub x1, x1, #0x41
   a8a90:   91010000    add x0, x0, #0x40
   a8a94:   927ae421    and x1, x1, #0xffffffffffffffc0
   a8a98:   8b000021    add x1, x1, x0
   a8a9c:   d503201f    nop
   a8aa0:   d50b7a20    dc  cvac, x0
   a8aa4:   eb01001f    cmp x0, x1
   a8aa8:   91010000    add x0, x0, #0x40
   a8aac:   54ffffa1    b.ne    a8aa0 <CleanDataCacheRange+0x20>
   a8ab0:   d5033f9f    dsb sy
   a8ab4:   d65f03c0    ret
   a8ab8:   d503201f    nop
   a8abc:   d503201f    nop

00000000000a8ac0 <CleanAndInvalidateDataCacheRange>:
   a8ac0:   d50b7e20    dc  civac, x0
   a8ac4:   f101003f    cmp x1, #0x40
   a8ac8:   54000149    b.ls    a8af0 <CleanAndInvalidateDataCacheRange+0x30>
   a8acc:   d1010421    sub x1, x1, #0x41
   a8ad0:   91010000    add x0, x0, #0x40
   a8ad4:   927ae421    and x1, x1, #0xffffffffffffffc0
   a8ad8:   8b000021    add x1, x1, x0
   a8adc:   d503201f    nop
   a8ae0:   d50b7e20    dc  civac, x0
   a8ae4:   eb01001f    cmp x0, x1
   a8ae8:   91010000    add x0, x0, #0x40
   a8aec:   54ffffa1    b.ne    a8ae0 <CleanAndInvalidateDataCacheRange+0x20>
   a8af0:   d5033f9f    dsb sy
   a8af4:   d65f03c0    ret
   a8af8:   d503201f    nop
   a8afc:   d503201f    nop

00000000000a8b00 <SyncDataAndInstructionCache>:
   a8b00:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a8b04:   910003fd    mov x29, sp
   a8b08:   97ffff7e    bl  a8900 <CleanDataCache>
   a8b0c:   d508751f    ic  iallu
   a8b10:   d5033f9f    dsb sy
   a8b14:   d5033fdf    isb
   a8b18:   a8c17bfd    ldp x29, x30, [sp], #16
   a8b1c:   d65f03c0    ret

00000000000a8b20 <CTranslationTable::~CTranslationTable()>:
   a8b20:   f9400400    ldr x0, [x0, #8]
   a8b24:   14000a3f    b   ab420 <pfree>
   a8b28:   d503201f    nop
   a8b2c:   d503201f    nop

00000000000a8b30 <CTranslationTable::GetBaseAddress() const>:
   a8b30:   f9400400    ldr x0, [x0, #8]
   a8b34:   b4000040    cbz x0, a8b3c <CTranslationTable::GetBaseAddress() const+0xc>
   a8b38:   d65f03c0    ret
   a8b3c:   f0000041    adrp    x1, b3000 <_etext+0x3f9c>
   a8b40:   f0000040    adrp    x0, b3000 <_etext+0x3f9c>
   a8b44:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a8b48:   91242021    add x1, x1, #0x908
   a8b4c:   910003fd    mov x29, sp
   a8b50:   91248000    add x0, x0, #0x920
   a8b54:   52800b62    mov w2, #0x5b
   a8b58:   97ffcfda    bl  9cac0 <assertion_failed>
   a8b5c:   d503201f    nop

00000000000a8b60 <CTranslationTable::CreateLevel3Table(unsigned long)>:
   a8b60:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   a8b64:   910003fd    mov x29, sp
   a8b68:   f9000fe0    str x0, [sp, #24]
   a8b6c:   f9000be1    str x1, [sp, #16]
   a8b70:   94000a28    bl  ab410 <palloc>
   a8b74:   f9001be0    str x0, [sp, #48]
   a8b78:   f9401be0    ldr x0, [sp, #48]
   a8b7c:   f100001f    cmp x0, #0x0
   a8b80:   1a9f07e0    cset    w0, ne
   a8b84:   12001c00    and w0, w0, #0xff
   a8b88:   92401c00    and x0, x0, #0xff
   a8b8c:   f100001f    cmp x0, #0x0
   a8b90:   540000e1    b.ne    a8bac <CTranslationTable::CreateLevel3Table(unsigned long)+0x4c>
   a8b94:   52800c42    mov w2, #0x62
   a8b98:   f0000040    adrp    x0, b3000 <_etext+0x3f9c>
   a8b9c:   91242001    add x1, x0, #0x908
   a8ba0:   f0000040    adrp    x0, b3000 <_etext+0x3f9c>
   a8ba4:   9124c000    add x0, x0, #0x930
   a8ba8:   97ffcfc6    bl  9cac0 <assertion_failed>
   a8bac:   b9003fff    str wzr, [sp, #60]
   a8bb0:   140000a1    b   a8e34 <CTranslationTable::CreateLevel3Table(unsigned long)+0x2d4>
   a8bb4:   b9403fe0    ldr w0, [sp, #60]
   a8bb8:   d37df000    lsl x0, x0, #3
   a8bbc:   f9401be1    ldr x1, [sp, #48]
   a8bc0:   8b000020    add x0, x1, x0
   a8bc4:   f90017e0    str x0, [sp, #40]
   a8bc8:   f94017e0    ldr x0, [sp, #40]
   a8bcc:   39400001    ldrb    w1, [x0]
   a8bd0:   32000421    orr w1, w1, #0x3
   a8bd4:   39000001    strb    w1, [x0]
   a8bd8:   f94017e0    ldr x0, [sp, #40]
   a8bdc:   39400001    ldrb    w1, [x0]
   a8be0:   121b7021    and w1, w1, #0xffffffe3
   a8be4:   39000001    strb    w1, [x0]
   a8be8:   f94017e0    ldr x0, [sp, #40]
   a8bec:   39400001    ldrb    w1, [x0]
   a8bf0:   121a7821    and w1, w1, #0xffffffdf
   a8bf4:   39000001    strb    w1, [x0]
   a8bf8:   f94017e0    ldr x0, [sp, #40]
   a8bfc:   39400001    ldrb    w1, [x0]
   a8c00:   12001421    and w1, w1, #0x3f
   a8c04:   39000001    strb    w1, [x0]
   a8c08:   f94017e0    ldr x0, [sp, #40]
   a8c0c:   39400401    ldrb    w1, [x0, #1]
   a8c10:   32000421    orr w1, w1, #0x3
   a8c14:   39000401    strb    w1, [x0, #1]
   a8c18:   f94017e0    ldr x0, [sp, #40]
   a8c1c:   39400401    ldrb    w1, [x0, #1]
   a8c20:   321e0021    orr w1, w1, #0x4
   a8c24:   39000401    strb    w1, [x0, #1]
   a8c28:   f94017e0    ldr x0, [sp, #40]
   a8c2c:   39400401    ldrb    w1, [x0, #1]
   a8c30:   121c7821    and w1, w1, #0xfffffff7
   a8c34:   39000401    strb    w1, [x0, #1]
   a8c38:   f94017e0    ldr x0, [sp, #40]
   a8c3c:   39400401    ldrb    w1, [x0, #1]
   a8c40:   12000c21    and w1, w1, #0xf
   a8c44:   39000401    strb    w1, [x0, #1]
   a8c48:   f9400be0    ldr x0, [sp, #16]
   a8c4c:   d350fc00    lsr x0, x0, #16
   a8c50:   2a0003e1    mov w1, w0
   a8c54:   f94017e0    ldr x0, [sp, #40]
   a8c58:   2a0103e2    mov w2, w1
   a8c5c:   92401c44    and x4, x2, #0xff
   a8c60:   39400802    ldrb    w2, [x0, #2]
   a8c64:   52800003    mov w3, #0x0
   a8c68:   0a030042    and w2, w2, w3
   a8c6c:   2a0203e3    mov w3, w2
   a8c70:   2a0403e2    mov w2, w4
   a8c74:   2a020062    orr w2, w3, w2
   a8c78:   39000802    strb    w2, [x0, #2]
   a8c7c:   53087c22    lsr w2, w1, #8
   a8c80:   2a0203e2    mov w2, w2
   a8c84:   92401c44    and x4, x2, #0xff
   a8c88:   39400c02    ldrb    w2, [x0, #3]
   a8c8c:   52800003    mov w3, #0x0
   a8c90:   0a030042    and w2, w2, w3
   a8c94:   2a0203e3    mov w3, w2
   a8c98:   2a0403e2    mov w2, w4
   a8c9c:   2a020062    orr w2, w3, w2
   a8ca0:   39000c02    strb    w2, [x0, #3]
   a8ca4:   53107c22    lsr w2, w1, #16
   a8ca8:   2a0203e2    mov w2, w2
   a8cac:   92401c44    and x4, x2, #0xff
   a8cb0:   39401002    ldrb    w2, [x0, #4]
   a8cb4:   52800003    mov w3, #0x0
   a8cb8:   0a030042    and w2, w2, w3
   a8cbc:   2a0203e3    mov w3, w2
   a8cc0:   2a0403e2    mov w2, w4
   a8cc4:   2a020062    orr w2, w3, w2
   a8cc8:   39001002    strb    w2, [x0, #4]
   a8ccc:   53187c21    lsr w1, w1, #24
   a8cd0:   2a0103e3    mov w3, w1
   a8cd4:   39401401    ldrb    w1, [x0, #5]
   a8cd8:   52800002    mov w2, #0x0
   a8cdc:   0a020021    and w1, w1, w2
   a8ce0:   2a0103e2    mov w2, w1
   a8ce4:   2a0303e1    mov w1, w3
   a8ce8:   2a010041    orr w1, w2, w1
   a8cec:   39001401    strb    w1, [x0, #5]
   a8cf0:   f94017e0    ldr x0, [sp, #40]
   a8cf4:   39401801    ldrb    w1, [x0, #6]
   a8cf8:   121c6c21    and w1, w1, #0xfffffff0
   a8cfc:   39001801    strb    w1, [x0, #6]
   a8d00:   f94017e0    ldr x0, [sp, #40]
   a8d04:   39401801    ldrb    w1, [x0, #6]
   a8d08:   121b7821    and w1, w1, #0xffffffef
   a8d0c:   39001801    strb    w1, [x0, #6]
   a8d10:   f94017e0    ldr x0, [sp, #40]
   a8d14:   39401801    ldrb    w1, [x0, #6]
   a8d18:   121a7821    and w1, w1, #0xffffffdf
   a8d1c:   39001801    strb    w1, [x0, #6]
   a8d20:   f94017e0    ldr x0, [sp, #40]
   a8d24:   39401801    ldrb    w1, [x0, #6]
   a8d28:   321a0021    orr w1, w1, #0x40
   a8d2c:   39001801    strb    w1, [x0, #6]
   a8d30:   f94017e0    ldr x0, [sp, #40]
   a8d34:   39401801    ldrb    w1, [x0, #6]
   a8d38:   12001821    and w1, w1, #0x7f
   a8d3c:   39001801    strb    w1, [x0, #6]
   a8d40:   39401c01    ldrb    w1, [x0, #7]
   a8d44:   52800002    mov w2, #0x0
   a8d48:   0a020021    and w1, w1, w2
   a8d4c:   39001c01    strb    w1, [x0, #7]
   a8d50:   f0000020    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   a8d54:   91019000    add x0, x0, #0x64
   a8d58:   f9400be1    ldr x1, [sp, #16]
   a8d5c:   eb00003f    cmp x1, x0
   a8d60:   540005e3    b.cc    a8e1c <CTranslationTable::CreateLevel3Table(unsigned long)+0x2bc>
   a8d64:   f94017e0    ldr x0, [sp, #40]
   a8d68:   39401801    ldrb    w1, [x0, #6]
   a8d6c:   321b0021    orr w1, w1, #0x20
   a8d70:   39001801    strb    w1, [x0, #6]
   a8d74:   f9400fe0    ldr x0, [sp, #24]
   a8d78:   f9400000    ldr x0, [x0]
   a8d7c:   f9400be1    ldr x1, [sp, #16]
   a8d80:   eb00003f    cmp x1, x0
   a8d84:   540000a3    b.cc    a8d98 <CTranslationTable::CreateLevel3Table(unsigned long)+0x238>
   a8d88:   f9400be1    ldr x1, [sp, #16]
   a8d8c:   b24077e0    mov x0, #0x3fffffff
   a8d90:   eb00003f    cmp x1, x0
   a8d94:   540000a9    b.ls    a8da8 <CTranslationTable::CreateLevel3Table(unsigned long)+0x248>
   a8d98:   f9400be1    ldr x1, [sp, #16]
   a8d9c:   12a80000    mov w0, #0xbfffffff
   a8da0:   eb00003f    cmp x1, x0
   a8da4:   54000189    b.ls    a8dd4 <CTranslationTable::CreateLevel3Table(unsigned long)+0x274>
   a8da8:   f94017e1    ldr x1, [sp, #40]
   a8dac:   39400020    ldrb    w0, [x1]
   a8db0:   52800022    mov w2, #0x1
   a8db4:   331e0840    bfi w0, w2, #2, #3
   a8db8:   39000020    strb    w0, [x1]
   a8dbc:   f94017e1    ldr x1, [sp, #40]
   a8dc0:   39400420    ldrb    w0, [x1, #1]
   a8dc4:   52800042    mov w2, #0x2
   a8dc8:   33000440    bfxil   w0, w2, #0, #2
   a8dcc:   39000420    strb    w0, [x1, #1]
   a8dd0:   14000013    b   a8e1c <CTranslationTable::CreateLevel3Table(unsigned long)+0x2bc>
   a8dd4:   f9400be1    ldr x1, [sp, #16]
   a8dd8:   12bff600    mov w0, #0x4fffff
   a8ddc:   eb00003f    cmp x1, x0
   a8de0:   540001e9    b.ls    a8e1c <CTranslationTable::CreateLevel3Table(unsigned long)+0x2bc>
   a8de4:   f9400be1    ldr x1, [sp, #16]
   a8de8:   12bfee00    mov w0, #0x8fffff
   a8dec:   eb00003f    cmp x1, x0
   a8df0:   54000168    b.hi    a8e1c <CTranslationTable::CreateLevel3Table(unsigned long)+0x2bc>
   a8df4:   f94017e1    ldr x1, [sp, #40]
   a8df8:   39400020    ldrb    w0, [x1]
   a8dfc:   52800042    mov w2, #0x2
   a8e00:   331e0840    bfi w0, w2, #2, #3
   a8e04:   39000020    strb    w0, [x1]
   a8e08:   f94017e1    ldr x1, [sp, #40]
   a8e0c:   39400420    ldrb    w0, [x1, #1]
   a8e10:   52800042    mov w2, #0x2
   a8e14:   33000440    bfxil   w0, w2, #0, #2
   a8e18:   39000420    strb    w0, [x1, #1]
   a8e1c:   f9400be0    ldr x0, [sp, #16]
   a8e20:   91404000    add x0, x0, #0x10, lsl #12
   a8e24:   f9000be0    str x0, [sp, #16]
   a8e28:   b9403fe0    ldr w0, [sp, #60]
   a8e2c:   11000400    add w0, w0, #0x1
   a8e30:   b9003fe0    str w0, [sp, #60]
   a8e34:   b9403fe1    ldr w1, [sp, #60]
   a8e38:   5283ffe0    mov w0, #0x1fff
   a8e3c:   6b00003f    cmp w1, w0
   a8e40:   54ffeba9    b.ls    a8bb4 <CTranslationTable::CreateLevel3Table(unsigned long)+0x54>
   a8e44:   f9401be0    ldr x0, [sp, #48]
   a8e48:   a8c47bfd    ldp x29, x30, [sp], #64
   a8e4c:   d65f03c0    ret

00000000000a8e50 <CTranslationTable::CTranslationTable(unsigned long)>:
   a8e50:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   a8e54:   910003fd    mov x29, sp
   a8e58:   f9000fe0    str x0, [sp, #24]
   a8e5c:   f9000be1    str x1, [sp, #16]
   a8e60:   f9400fe0    ldr x0, [sp, #24]
   a8e64:   f9400be1    ldr x1, [sp, #16]
   a8e68:   f9000001    str x1, [x0]
   a8e6c:   f9400fe0    ldr x0, [sp, #24]
   a8e70:   f900041f    str xzr, [x0, #8]
   a8e74:   94000967    bl  ab410 <palloc>
   a8e78:   aa0003e1    mov x1, x0
   a8e7c:   f9400fe0    ldr x0, [sp, #24]
   a8e80:   f9000401    str x1, [x0, #8]
   a8e84:   f9400fe0    ldr x0, [sp, #24]
   a8e88:   f9400400    ldr x0, [x0, #8]
   a8e8c:   f100001f    cmp x0, #0x0
   a8e90:   1a9f07e0    cset    w0, ne
   a8e94:   12001c00    and w0, w0, #0xff
   a8e98:   92401c00    and x0, x0, #0xff
   a8e9c:   f100001f    cmp x0, #0x0
   a8ea0:   540000e1    b.ne    a8ebc <CTranslationTable::CTranslationTable(unsigned long)+0x6c>
   a8ea4:   528005e2    mov w2, #0x2f
   a8ea8:   f0000040    adrp    x0, b3000 <_etext+0x3f9c>
   a8eac:   91242001    add x1, x0, #0x908
   a8eb0:   f0000040    adrp    x0, b3000 <_etext+0x3f9c>
   a8eb4:   91248000    add x0, x0, #0x920
   a8eb8:   97ffcf02    bl  9cac0 <assertion_failed>
   a8ebc:   f9400fe0    ldr x0, [sp, #24]
   a8ec0:   f9400400    ldr x0, [x0, #8]
   a8ec4:   d2a00022    mov x2, #0x10000
   a8ec8:   52800001    mov w1, #0x0
   a8ecc:   97fff793    bl  a6d18 <memset>
   a8ed0:   b9003fff    str wzr, [sp, #60]
   a8ed4:   1400007e    b   a90cc <CTranslationTable::CTranslationTable(unsigned long)+0x27c>
   a8ed8:   b9403fe0    ldr w0, [sp, #60]
   a8edc:   d3638800    lsl x0, x0, #29
   a8ee0:   f9001be0    str x0, [sp, #48]
   a8ee4:   f9401be1    ldr x1, [sp, #48]
   a8ee8:   b2407fe0    mov x0, #0xffffffff
   a8eec:   eb00003f    cmp x1, x0
   a8ef0:   54000149    b.ls    a8f18 <CTranslationTable::CTranslationTable(unsigned long)+0xc8>
   a8ef4:   f9401be1    ldr x1, [sp, #48]
   a8ef8:   d2c000c0    mov x0, #0x600000000
   a8efc:   eb00003f    cmp x1, x0
   a8f00:   54000de3    b.cc    a90bc <CTranslationTable::CTranslationTable(unsigned long)+0x26c>
   a8f04:   f9401be1    ldr x1, [sp, #48]
   a8f08:   b24067e0    mov x0, #0x3ffffff
   a8f0c:   f2c000c0    movk    x0, #0x6, lsl #32
   a8f10:   eb00003f    cmp x1, x0
   a8f14:   54000d48    b.hi    a90bc <CTranslationTable::CTranslationTable(unsigned long)+0x26c>
   a8f18:   f9401be1    ldr x1, [sp, #48]
   a8f1c:   f9400fe0    ldr x0, [sp, #24]
   a8f20:   97ffff10    bl  a8b60 <CTranslationTable::CreateLevel3Table(unsigned long)>
   a8f24:   f90017e0    str x0, [sp, #40]
   a8f28:   f94017e0    ldr x0, [sp, #40]
   a8f2c:   f100001f    cmp x0, #0x0
   a8f30:   1a9f07e0    cset    w0, ne
   a8f34:   12001c00    and w0, w0, #0xff
   a8f38:   92401c00    and x0, x0, #0xff
   a8f3c:   f100001f    cmp x0, #0x0
   a8f40:   540000e1    b.ne    a8f5c <CTranslationTable::CTranslationTable(unsigned long)+0x10c>
   a8f44:   52800822    mov w2, #0x41
   a8f48:   f0000040    adrp    x0, b3000 <_etext+0x3f9c>
   a8f4c:   91242001    add x1, x0, #0x908
   a8f50:   f0000040    adrp    x0, b3000 <_etext+0x3f9c>
   a8f54:   9124c000    add x0, x0, #0x930
   a8f58:   97ffceda    bl  9cac0 <assertion_failed>
   a8f5c:   f9400fe0    ldr x0, [sp, #24]
   a8f60:   f9400401    ldr x1, [x0, #8]
   a8f64:   b9403fe0    ldr w0, [sp, #60]
   a8f68:   d37df000    lsl x0, x0, #3
   a8f6c:   8b000020    add x0, x1, x0
   a8f70:   f90013e0    str x0, [sp, #32]
   a8f74:   f94013e0    ldr x0, [sp, #32]
   a8f78:   39400001    ldrb    w1, [x0]
   a8f7c:   32000421    orr w1, w1, #0x3
   a8f80:   39000001    strb    w1, [x0]
   a8f84:   f94013e0    ldr x0, [sp, #32]
   a8f88:   39400001    ldrb    w1, [x0]
   a8f8c:   12000421    and w1, w1, #0x3
   a8f90:   39000001    strb    w1, [x0]
   a8f94:   39400401    ldrb    w1, [x0, #1]
   a8f98:   52800002    mov w2, #0x0
   a8f9c:   0a020021    and w1, w1, w2
   a8fa0:   39000401    strb    w1, [x0, #1]
   a8fa4:   f94017e0    ldr x0, [sp, #40]
   a8fa8:   d350fc00    lsr x0, x0, #16
   a8fac:   2a0003e1    mov w1, w0
   a8fb0:   f94013e0    ldr x0, [sp, #32]
   a8fb4:   2a0103e2    mov w2, w1
   a8fb8:   92401c44    and x4, x2, #0xff
   a8fbc:   39400802    ldrb    w2, [x0, #2]
   a8fc0:   52800003    mov w3, #0x0
   a8fc4:   0a030042    and w2, w2, w3
   a8fc8:   2a0203e3    mov w3, w2
   a8fcc:   2a0403e2    mov w2, w4
   a8fd0:   2a020062    orr w2, w3, w2
   a8fd4:   39000802    strb    w2, [x0, #2]
   a8fd8:   53087c22    lsr w2, w1, #8
   a8fdc:   2a0203e2    mov w2, w2
   a8fe0:   92401c44    and x4, x2, #0xff
   a8fe4:   39400c02    ldrb    w2, [x0, #3]
   a8fe8:   52800003    mov w3, #0x0
   a8fec:   0a030042    and w2, w2, w3
   a8ff0:   2a0203e3    mov w3, w2
   a8ff4:   2a0403e2    mov w2, w4
   a8ff8:   2a020062    orr w2, w3, w2
   a8ffc:   39000c02    strb    w2, [x0, #3]
   a9000:   53107c22    lsr w2, w1, #16
   a9004:   2a0203e2    mov w2, w2
   a9008:   92401c44    and x4, x2, #0xff
   a900c:   39401002    ldrb    w2, [x0, #4]
   a9010:   52800003    mov w3, #0x0
   a9014:   0a030042    and w2, w2, w3
   a9018:   2a0203e3    mov w3, w2
   a901c:   2a0403e2    mov w2, w4
   a9020:   2a020062    orr w2, w3, w2
   a9024:   39001002    strb    w2, [x0, #4]
   a9028:   53187c21    lsr w1, w1, #24
   a902c:   2a0103e3    mov w3, w1
   a9030:   39401401    ldrb    w1, [x0, #5]
   a9034:   52800002    mov w2, #0x0
   a9038:   0a020021    and w1, w1, w2
   a903c:   2a0103e2    mov w2, w1
   a9040:   2a0303e1    mov w1, w3
   a9044:   2a010041    orr w1, w2, w1
   a9048:   39001401    strb    w1, [x0, #5]
   a904c:   f94013e0    ldr x0, [sp, #32]
   a9050:   39401801    ldrb    w1, [x0, #6]
   a9054:   121c6c21    and w1, w1, #0xfffffff0
   a9058:   39001801    strb    w1, [x0, #6]
   a905c:   f94013e0    ldr x0, [sp, #32]
   a9060:   39401801    ldrb    w1, [x0, #6]
   a9064:   12000c21    and w1, w1, #0xf
   a9068:   39001801    strb    w1, [x0, #6]
   a906c:   39401c01    ldrb    w1, [x0, #7]
   a9070:   121d7021    and w1, w1, #0xfffffff8
   a9074:   39001c01    strb    w1, [x0, #7]
   a9078:   f94013e0    ldr x0, [sp, #32]
   a907c:   39401c01    ldrb    w1, [x0, #7]
   a9080:   121c7821    and w1, w1, #0xfffffff7
   a9084:   39001c01    strb    w1, [x0, #7]
   a9088:   f94013e0    ldr x0, [sp, #32]
   a908c:   39401c01    ldrb    w1, [x0, #7]
   a9090:   121b7821    and w1, w1, #0xffffffef
   a9094:   39001c01    strb    w1, [x0, #7]
   a9098:   f94013e0    ldr x0, [sp, #32]
   a909c:   39401c01    ldrb    w1, [x0, #7]
   a90a0:   12197421    and w1, w1, #0xffffff9f
   a90a4:   39001c01    strb    w1, [x0, #7]
   a90a8:   f94013e0    ldr x0, [sp, #32]
   a90ac:   39401c01    ldrb    w1, [x0, #7]
   a90b0:   12001821    and w1, w1, #0x7f
   a90b4:   39001c01    strb    w1, [x0, #7]
   a90b8:   14000002    b   a90c0 <CTranslationTable::CTranslationTable(unsigned long)+0x270>
   a90bc:   d503201f    nop
   a90c0:   b9403fe0    ldr w0, [sp, #60]
   a90c4:   11000400    add w0, w0, #0x1
   a90c8:   b9003fe0    str w0, [sp, #60]
   a90cc:   b9403fe0    ldr w0, [sp, #60]
   a90d0:   7101fc1f    cmp w0, #0x7f
   a90d4:   54fff029    b.ls    a8ed8 <CTranslationTable::CTranslationTable(unsigned long)+0x88>
   a90d8:   d5033f9f    dsb sy
   a90dc:   d503201f    nop
   a90e0:   a8c47bfd    ldp x29, x30, [sp], #64
   a90e4:   d65f03c0    ret
    ...

00000000000a90f0 <CBcmPCIeHostBridge::InterruptHandler(void*)>:
   a90f0:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   a90f4:   910003fd    mov x29, sp
   a90f8:   a90153f3    stp x19, x20, [sp, #16]
   a90fc:   a9025bf5    stp x21, x22, [sp, #32]
   a9100:   f9001bf7    str x23, [sp, #48]
   a9104:   b40004e0    cbz x0, a91a0 <CBcmPCIeHostBridge::InterruptHandler(void*)+0xb0>
   a9108:   aa0003f6    mov x22, x0
   a910c:   f9400800    ldr x0, [x0, #16]
   a9110:   52800037    mov w23, #0x1
   a9114:   b9400014    ldr w20, [x0]
   a9118:   34000334    cbz w20, a917c <CBcmPCIeHostBridge::InterruptHandler(void*)+0x8c>
   a911c:   52800013    mov w19, #0x0
   a9120:   1400000a    b   a9148 <CBcmPCIeHostBridge::InterruptHandler(void*)+0x58>
   a9124:   f94016c1    ldr x1, [x22, #40]
   a9128:   2a1303e0    mov w0, w19
   a912c:   0a350294    bic w20, w20, w21
   a9130:   d63f0040    blr x2
   a9134:   f9400ac0    ldr x0, [x22, #16]
   a9138:   11000673    add w19, w19, #0x1
   a913c:   7100029f    cmp w20, #0x0
   a9140:   7a5f1a62    ccmp    w19, #0x1f, #0x2, ne
   a9144:   54000188    b.hi    a9174 <CBcmPCIeHostBridge::InterruptHandler(void*)+0x84>
   a9148:   1ad322f5    lsl w21, w23, w19
   a914c:   6a1402bf    tst w21, w20
   a9150:   54ffff40    b.eq    a9138 <CBcmPCIeHostBridge::InterruptHandler(void*)+0x48>
   a9154:   f94012c2    ldr x2, [x22, #32]
   a9158:   b9000815    str w21, [x0, #8]
   a915c:   b5fffe42    cbnz    x2, a9124 <CBcmPCIeHostBridge::InterruptHandler(void*)+0x34>
   a9160:   f0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a9164:   912f2021    add x1, x1, #0xbc8
   a9168:   9100a020    add x0, x1, #0x28
   a916c:   52806b62    mov w2, #0x35b
   a9170:   97ffce54    bl  9cac0 <assertion_failed>
   a9174:   b9400014    ldr w20, [x0]
   a9178:   35fffd34    cbnz    w20, a911c <CBcmPCIeHostBridge::InterruptHandler(void*)+0x2c>
   a917c:   f94002c1    ldr x1, [x22]
   a9180:   d2880c00    mov x0, #0x4060
   a9184:   52800022    mov w2, #0x1
   a9188:   a94153f3    ldp x19, x20, [sp, #16]
   a918c:   a9425bf5    ldp x21, x22, [sp, #32]
   a9190:   b8206822    str w2, [x1, x0]
   a9194:   f9401bf7    ldr x23, [sp, #48]
   a9198:   a8c47bfd    ldp x29, x30, [sp], #64
   a919c:   d65f03c0    ret
   a91a0:   f0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a91a4:   912f2021    add x1, x1, #0xbc8
   a91a8:   91006020    add x0, x1, #0x18
   a91ac:   52806942    mov w2, #0x34a
   a91b0:   97ffce44    bl  9cac0 <assertion_failed>
   a91b4:   d503201f    nop
   a91b8:   d503201f    nop
   a91bc:   d503201f    nop

00000000000a91c0 <CBcmPCIeHostBridge::CBcmPCIeHostBridge(CInterruptSystem*)>:
   a91c0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a91c4:   910003fd    mov x29, sp
   a91c8:   f9000bf3    str x19, [sp, #16]
   a91cc:   aa0003f3    mov x19, x0
   a91d0:   f9000001    str x1, [x0]
   a91d4:   97fff52b    bl  a6680 <CTimer::Get()>
   a91d8:   f0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a91dc:   912f2021    add x1, x1, #0xbc8
   a91e0:   b9004a7f    str wzr, [x19, #72]
   a91e4:   91010022    add x2, x1, #0x40
   a91e8:   d2bfaa03    mov x3, #0xfd500000
   a91ec:   b9006a7f    str wzr, [x19, #104]
   a91f0:   91014021    add x1, x1, #0x50
   a91f4:   b9007a7f    str wzr, [x19, #120]
   a91f8:   a9008e60    stp x0, x3, [x19, #8]
   a91fc:   a9020662    stp x2, x1, [x19, #32]
   a9200:   f900467f    str xzr, [x19, #136]
   a9204:   f9400bf3    ldr x19, [sp, #16]
   a9208:   a8c27bfd    ldp x29, x30, [sp], #32
   a920c:   d65f03c0    ret

00000000000a9210 <CBcmPCIeHostBridge::DisconnectMSI()>:
   a9210:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a9214:   910003fd    mov x29, sp
   a9218:   12800004    mov w4, #0xffffffff
   a921c:   d2880882    mov x2, #0x4044
   a9220:   f9404401    ldr x1, [x0, #136]
   a9224:   f9400823    ldr x3, [x1, #16]
   a9228:   f9400021    ldr x1, [x1]
   a922c:   f9000bf3    str x19, [sp, #16]
   a9230:   aa0003f3    mov x19, x0
   a9234:   f9400000    ldr x0, [x0]
   a9238:   b9001064    str w4, [x3, #16]
   a923c:   b822683f    str wzr, [x1, x2]
   a9240:   b4000160    cbz x0, a926c <CBcmPCIeHostBridge::DisconnectMSI()+0x5c>
   a9244:   52801681    mov w1, #0xb4
   a9248:   94000426    bl  aa2e0 <CInterruptSystem::DisconnectIRQ(unsigned int)>
   a924c:   f9404660    ldr x0, [x19, #136]
   a9250:   b4000060    cbz x0, a925c <CBcmPCIeHostBridge::DisconnectMSI()+0x4c>
   a9254:   d2800601    mov x1, #0x30
   a9258:   97fff982    bl  a7860 <operator delete(void*, unsigned long)>
   a925c:   f900467f    str xzr, [x19, #136]
   a9260:   f9400bf3    ldr x19, [sp, #16]
   a9264:   a8c27bfd    ldp x29, x30, [sp], #32
   a9268:   d65f03c0    ret
   a926c:   f0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a9270:   912f2021    add x1, x1, #0xbc8
   a9274:   91016020    add x0, x1, #0x58
   a9278:   52802602    mov w2, #0x130
   a927c:   97ffce11    bl  9cac0 <assertion_failed>

00000000000a9280 <CBcmPCIeHostBridge::~CBcmPCIeHostBridge()>:
   a9280:   f9404401    ldr x1, [x0, #136]
   a9284:   b4000041    cbz x1, a928c <CBcmPCIeHostBridge::~CBcmPCIeHostBridge()+0xc>
   a9288:   17ffffe2    b   a9210 <CBcmPCIeHostBridge::DisconnectMSI()>
   a928c:   d65f03c0    ret

00000000000a9290 <CBcmPCIeHostBridge::DumpStatus(unsigned int, unsigned int)>:
   a9290:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   a9294:   910003fd    mov x29, sp
   a9298:   a90153f3    stp x19, x20, [sp, #16]
   a929c:   2a0103f3    mov w19, w1
   a92a0:   f9400814    ldr x20, [x0, #16]
   a92a4:   a9025bf5    stp x21, x22, [sp, #32]
   a92a8:   aa0003f5    mov x21, x0
   a92ac:   2a0203f6    mov w22, w2
   a92b0:   97ffd8d4    bl  9f600 <CLogger::Get()>
   a92b4:   12800004    mov w4, #0xffffffff
   a92b8:   b4000074    cbz x20, a92c4 <CBcmPCIeHostBridge::DumpStatus(unsigned int, unsigned int)+0x34>
   a92bc:   79400e84    ldrh    w4, [x20, #6]
   a92c0:   12003c84    and w4, w4, #0xffff
   a92c4:   f0000074    adrp    x20, b8000 <vtable for CGPIOPin+0x288>
   a92c8:   912f2294    add x20, x20, #0xbc8
   a92cc:   9101c283    add x3, x20, #0x70
   a92d0:   91022281    add x1, x20, #0x88
   a92d4:   52800082    mov w2, #0x4
   a92d8:   97ffdab2    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   a92dc:   71007e7f    cmp w19, #0x1f
   a92e0:   54000308    b.hi    a9340 <CBcmPCIeHostBridge::DumpStatus(unsigned int, unsigned int)+0xb0>
   a92e4:   71001edf    cmp w22, #0x7
   a92e8:   54000348    b.hi    a9350 <CBcmPCIeHostBridge::DumpStatus(unsigned int, unsigned int)+0xc0>
   a92ec:   f94012a1    ldr x1, [x21, #32]
   a92f0:   2a130ed3    orr w19, w22, w19, lsl #3
   a92f4:   f9400aa0    ldr x0, [x21, #16]
   a92f8:   53144e73    lsl w19, w19, #12
   a92fc:   320c0273    orr w19, w19, #0x100000
   a9300:   b9800422    ldrsw   x2, [x1, #4]
   a9304:   b8206853    str w19, [x2, x0]
   a9308:   b9800833    ldrsw   x19, [x1, #8]
   a930c:   8b000273    add x19, x19, x0
   a9310:   97ffd8bc    bl  9f600 <CLogger::Get()>
   a9314:   12800004    mov w4, #0xffffffff
   a9318:   b4000073    cbz x19, a9324 <CBcmPCIeHostBridge::DumpStatus(unsigned int, unsigned int)+0x94>
   a931c:   79400e64    ldrh    w4, [x19, #6]
   a9320:   12003c84    and w4, w4, #0xffff
   a9324:   a9425bf5    ldp x21, x22, [sp, #32]
   a9328:   9102c283    add x3, x20, #0xb0
   a932c:   91022281    add x1, x20, #0x88
   a9330:   52800082    mov w2, #0x4
   a9334:   a94153f3    ldp x19, x20, [sp, #16]
   a9338:   a8c37bfd    ldp x29, x30, [sp], #48
   a933c:   17ffda99    b   9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   a9340:   528027e2    mov w2, #0x13f
   a9344:   aa1403e1    mov x1, x20
   a9348:   91024280    add x0, x20, #0x90
   a934c:   97ffcddd    bl  9cac0 <assertion_failed>
   a9350:   52802802    mov w2, #0x140
   a9354:   aa1403e1    mov x1, x20
   a9358:   91028280    add x0, x20, #0xa0
   a935c:   97ffcdd9    bl  9cac0 <assertion_failed>

00000000000a9360 <CBcmPCIeHostBridge::enable_bridge()>:
   a9360:   f9400801    ldr x1, [x0, #16]
   a9364:   b4000441    cbz x1, a93ec <CBcmPCIeHostBridge::enable_bridge()+0x8c>
   a9368:   b9400822    ldr w2, [x1, #8]
   a936c:   52808000    mov w0, #0x400
   a9370:   72a000c0    movk    w0, #0x6, lsl #16
   a9374:   6b42201f    cmp w0, w2, lsr #8
   a9378:   540003a1    b.ne    a93ec <CBcmPCIeHostBridge::enable_bridge()+0x8c>
   a937c:   39403820    ldrb    w0, [x1, #14]
   a9380:   12001c00    and w0, w0, #0xff
   a9384:   7100041f    cmp w0, #0x1
   a9388:   54000321    b.ne    a93ec <CBcmPCIeHostBridge::enable_bridge()+0x8c>
   a938c:   52800203    mov w3, #0x10
   a9390:   1280ffe2    mov w2, #0xfffff800
   a9394:   39003023    strb    w3, [x1, #12]
   a9398:   39006420    strb    w0, [x1, #25]
   a939c:   39006820    strb    w0, [x1, #26]
   a93a0:   79004022    strh    w2, [x1, #32]
   a93a4:   79004422    strh    w2, [x1, #34]
   a93a8:   3900f820    strb    w0, [x1, #62]
   a93ac:   3942b020    ldrb    w0, [x1, #172]
   a93b0:   12001c00    and w0, w0, #0xff
   a93b4:   7100401f    cmp w0, #0x10
   a93b8:   540000c1    b.ne    a93d0 <CBcmPCIeHostBridge::enable_bridge()+0x70>
   a93bc:   528028c2    mov w2, #0x146
   a93c0:   39032020    strb    w0, [x1, #200]
   a93c4:   52800000    mov w0, #0x0
   a93c8:   79000822    strh    w2, [x1, #4]
   a93cc:   d65f03c0    ret
   a93d0:   f0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a93d4:   912f2021    add x1, x1, #0xbc8
   a93d8:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a93dc:   91032020    add x0, x1, #0xc8
   a93e0:   910003fd    mov x29, sp
   a93e4:   52804142    mov w2, #0x20a
   a93e8:   97ffcdb6    bl  9cac0 <assertion_failed>
   a93ec:   12800000    mov w0, #0xffffffff
   a93f0:   d65f03c0    ret
   a93f4:   d503201f    nop
   a93f8:   d503201f    nop
   a93fc:   d503201f    nop

00000000000a9400 <CBcmPCIeHostBridge::enable_device(unsigned int, unsigned int, unsigned int)>:
   a9400:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a9404:   6b4163ff    cmp wzr, w1, lsr #24
   a9408:   910003fd    mov x29, sp
   a940c:   54000401    b.ne    a948c <CBcmPCIeHostBridge::enable_device(unsigned int, unsigned int, unsigned int)+0x8c>
   a9410:   71007c5f    cmp w2, #0x1f
   a9414:   54000468    b.hi    a94a0 <CBcmPCIeHostBridge::enable_device(unsigned int, unsigned int, unsigned int)+0xa0>
   a9418:   71001c7f    cmp w3, #0x7
   a941c:   540004c8    b.hi    a94b4 <CBcmPCIeHostBridge::enable_device(unsigned int, unsigned int, unsigned int)+0xb4>
   a9420:   f9401004    ldr x4, [x0, #32]
   a9424:   2a020c62    orr w2, w3, w2, lsl #3
   a9428:   f9400800    ldr x0, [x0, #16]
   a942c:   53144c42    lsl w2, w2, #12
   a9430:   320c0042    orr w2, w2, #0x100000
   a9434:   b9800483    ldrsw   x3, [x4, #4]
   a9438:   b8206862    str w2, [x3, x0]
   a943c:   b9800882    ldrsw   x2, [x4, #8]
   a9440:   ab000042    adds    x2, x2, x0
   a9444:   54000420    b.eq    a94c8 <CBcmPCIeHostBridge::enable_device(unsigned int, unsigned int, unsigned int)+0xc8>
   a9448:   b9400840    ldr w0, [x2, #8]
   a944c:   6b40203f    cmp w1, w0, lsr #8
   a9450:   540003c1    b.ne    a94c8 <CBcmPCIeHostBridge::enable_device(unsigned int, unsigned int, unsigned int)+0xc8>
   a9454:   39403840    ldrb    w0, [x2, #14]
   a9458:   72001c1f    tst w0, #0xff
   a945c:   54000361    b.ne    a94c8 <CBcmPCIeHostBridge::enable_device(unsigned int, unsigned int, unsigned int)+0xc8>
   a9460:   52800204    mov w4, #0x10
   a9464:   52800083    mov w3, #0x4
   a9468:   72bf0003    movk    w3, #0xf800, lsl #16
   a946c:   528028c1    mov w1, #0x146
   a9470:   39003044    strb    w4, [x2, #12]
   a9474:   52800000    mov w0, #0x0
   a9478:   b9001043    str w3, [x2, #16]
   a947c:   b900145f    str wzr, [x2, #20]
   a9480:   79000841    strh    w1, [x2, #4]
   a9484:   a8c17bfd    ldp x29, x30, [sp], #16
   a9488:   d65f03c0    ret
   a948c:   f0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a9490:   912f2021    add x1, x1, #0xbc8
   a9494:   91044020    add x0, x1, #0x110
   a9498:   528042e2    mov w2, #0x217
   a949c:   97ffcd89    bl  9cac0 <assertion_failed>
   a94a0:   f0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a94a4:   912f2021    add x1, x1, #0xbc8
   a94a8:   91024020    add x0, x1, #0x90
   a94ac:   52804302    mov w2, #0x218
   a94b0:   97ffcd84    bl  9cac0 <assertion_failed>
   a94b4:   f0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a94b8:   912f2021    add x1, x1, #0xbc8
   a94bc:   91028020    add x0, x1, #0xa0
   a94c0:   52804322    mov w2, #0x219
   a94c4:   97ffcd7f    bl  9cac0 <assertion_failed>
   a94c8:   12800000    mov w0, #0xffffffff
   a94cc:   17ffffee    b   a9484 <CBcmPCIeHostBridge::enable_device(unsigned int, unsigned int, unsigned int)+0x84>

00000000000a94d0 <CBcmPCIeHostBridge::EnableDevice(unsigned int, unsigned int, unsigned int)>:
   a94d0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a94d4:   910003fd    mov x29, sp
   a94d8:   97ffffca    bl  a9400 <CBcmPCIeHostBridge::enable_device(unsigned int, unsigned int, unsigned int)>
   a94dc:   7100001f    cmp w0, #0x0
   a94e0:   a8c17bfd    ldp x29, x30, [sp], #16
   a94e4:   1a9f17e0    cset    w0, eq
   a94e8:   d65f03c0    ret
   a94ec:   d503201f    nop

00000000000a94f0 <CBcmPCIeHostBridge::pcie_set_pci_ranges()>:
   a94f0:   aa0003e1    mov x1, x0
   a94f4:   b9404800    ldr w0, [x0, #72]
   a94f8:   35000140    cbnz    w0, a9520 <CBcmPCIeHostBridge::pcie_set_pci_ranges()+0x30>
   a94fc:   d2c000c4    mov x4, #0x600000000
   a9500:   d2bf0005    mov x5, #0xf8000000
   a9504:   d2a08003    mov x3, #0x4000000
   a9508:   52800022    mov w2, #0x1
   a950c:   52800000    mov w0, #0x0
   a9510:   a9031025    stp x5, x4, [x1, #48]
   a9514:   f9002023    str x3, [x1, #64]
   a9518:   b9004822    str w2, [x1, #72]
   a951c:   d65f03c0    ret
   a9520:   f0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a9524:   912f2021    add x1, x1, #0xbc8
   a9528:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a952c:   9104a020    add x0, x1, #0x128
   a9530:   910003fd    mov x29, sp
   a9534:   52804882    mov w2, #0x244
   a9538:   97ffcd62    bl  9cac0 <assertion_failed>
   a953c:   d503201f    nop

00000000000a9540 <CBcmPCIeHostBridge::pcie_set_dma_ranges()>:
   a9540:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   a9544:   910003fd    mov x29, sp
   a9548:   f9000bf3    str x19, [sp, #16]
   a954c:   aa0003f3    mov x19, x0
   a9550:   b9406800    ldr w0, [x0, #104]
   a9554:   35000200    cbnz    w0, a9594 <CBcmPCIeHostBridge::pcie_set_dma_ranges()+0x54>
   a9558:   97ffdd42    bl  a0a60 <CMachineInfo::Get()>
   a955c:   9100a3e8    add x8, sp, #0x28
   a9560:   97ffdcdc    bl  a08d0 <CMachineInfo::GetPCIeDMAMemory() const>
   a9564:   52800022    mov w2, #0x1
   a9568:   a9428fe1    ldp x1, x3, [sp, #40]
   a956c:   b0000084    adrp    x4, ba000 <font_data+0x1080>
   a9570:   52800000    mov w0, #0x0
   a9574:   b9006a62    str w2, [x19, #104]
   a9578:   f9401fe2    ldr x2, [sp, #56]
   a957c:   f9058881    str x1, [x4, #2832]
   a9580:   a9050e61    stp x1, x3, [x19, #80]
   a9584:   f9003262    str x2, [x19, #96]
   a9588:   f9400bf3    ldr x19, [sp, #16]
   a958c:   a8c47bfd    ldp x29, x30, [sp], #64
   a9590:   d65f03c0    ret
   a9594:   f0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a9598:   912f2021    add x1, x1, #0xbc8
   a959c:   91050020    add x0, x1, #0x140
   a95a0:   52804a22    mov w2, #0x251
   a95a4:   97ffcd47    bl  9cac0 <assertion_failed>
   a95a8:   d503201f    nop
   a95ac:   d503201f    nop

00000000000a95b0 <CBcmPCIeHostBridge::pcie_set_outbound_win(unsigned int, unsigned long, unsigned long, unsigned long)>:
   a95b0:   f9400806    ldr x6, [x0, #16]
   a95b4:   531d7020    lsl w0, w1, #3
   a95b8:   d2880189    mov x9, #0x400c
   a95bc:   d360fc68    lsr x8, x3, #32
   a95c0:   d2880207    mov x7, #0x4010
   a95c4:   531e7421    lsl w1, w1, #2
   a95c8:   d2880e05    mov x5, #0x4070
   a95cc:   d1000484    sub x4, x4, #0x1
   a95d0:   8b020084    add x4, x4, x2
   a95d4:   8b060000    add x0, x0, x6
   a95d8:   8b060021    add x1, x1, x6
   a95dc:   d2881086    mov x6, #0x4084
   a95e0:   b8296803    str w3, [x0, x9]
   a95e4:   d354fc49    lsr x9, x2, #20
   a95e8:   d360fc42    lsr x2, x2, #32
   a95ec:   b8276808    str w8, [x0, x7]
   a95f0:   d354fc88    lsr x8, x4, #20
   a95f4:   d2881007    mov x7, #0x4080
   a95f8:   b8656823    ldr w3, [x1, x5]
   a95fc:   d360fc84    lsr x4, x4, #32
   a9600:   331c2d23    bfi w3, w9, #4, #12
   a9604:   b8256823    str w3, [x1, x5]
   a9608:   b8656823    ldr w3, [x1, x5]
   a960c:   330c2d03    bfi w3, w8, #20, #12
   a9610:   b8256823    str w3, [x1, x5]
   a9614:   b8676801    ldr w1, [x0, x7]
   a9618:   33001c41    bfxil   w1, w2, #0, #8
   a961c:   b8276801    str w1, [x0, x7]
   a9620:   b8666801    ldr w1, [x0, x6]
   a9624:   33001c81    bfxil   w1, w4, #0, #8
   a9628:   b8266801    str w1, [x0, x6]
   a962c:   d65f03c0    ret

00000000000a9630 <CBcmPCIeHostBridge::pcie_setup()>:
   a9630:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   a9634:   910003fd    mov x29, sp
   a9638:   52800021    mov w1, #0x1
   a963c:   a90153f3    stp x19, x20, [sp, #16]
   a9640:   aa0003f3    mov x19, x0
   a9644:   a9420004    ldp x4, x0, [x0, #32]
   a9648:   a9025bf5    stp x21, x22, [sp, #32]
   a964c:   29401807    ldp w7, w6, [x0]
   a9650:   b9800083    ldrsw   x3, [x4]
   a9654:   1ac62020    lsl w0, w1, w6
   a9658:   a9408a66    ldp x6, x2, [x19, #8]
   a965c:   b8626865    ldr w5, [x3, x2]
   a9660:   4a050000    eor w0, w0, w5
   a9664:   0a070000    and w0, w0, w7
   a9668:   4a050000    eor w0, w0, w5
   a966c:   b8226860    str w0, [x3, x2]
   a9670:   b9800080    ldrsw   x0, [x4]
   a9674:   b8626861    ldr w1, [x3, x2]
   a9678:   b8626801    ldr w1, [x0, x2]
   a967c:   32000021    orr w1, w1, #0x1
   a9680:   b8226801    str w1, [x0, x2]
   a9684:   b8626800    ldr w0, [x0, x2]
   a9688:   b40019c6    cbz x6, a99c0 <CBcmPCIeHostBridge::pcie_setup()+0x390>
   a968c:   52800c80    mov w0, #0x64
   a9690:   97fff3b8    bl  a6570 <CTimer::SimpleusDelay(unsigned int)>
   a9694:   a9420e62    ldp x2, x3, [x19, #32]
   a9698:   d2884081    mov x1, #0x4204
   a969c:   a9408264    ldp x4, x0, [x19, #8]
   a96a0:   b9800042    ldrsw   x2, [x2]
   a96a4:   b9400063    ldr w3, [x3]
   a96a8:   b8606845    ldr w5, [x2, x0]
   a96ac:   0a2300a3    bic w3, w5, w3
   a96b0:   b8206843    str w3, [x2, x0]
   a96b4:   b8606842    ldr w2, [x2, x0]
   a96b8:   b8616802    ldr w2, [x0, x1]
   a96bc:   12047842    and w2, w2, #0xf7ffffff
   a96c0:   b8216802    str w2, [x0, x1]
   a96c4:   b8616800    ldr w0, [x0, x1]
   a96c8:   b40017c4    cbz x4, a99c0 <CBcmPCIeHostBridge::pcie_setup()+0x390>
   a96cc:   52800c80    mov w0, #0x64
   a96d0:   97fff3a8    bl  a6570 <CTimer::SimpleusDelay(unsigned int)>
   a96d4:   f9400a6a    ldr x10, [x19, #16]
   a96d8:   d2880d80    mov x0, #0x406c
   a96dc:   d2880101    mov x1, #0x4008
   a96e0:   52860002    mov w2, #0x3000
   a96e4:   b8606940    ldr w0, [x10, x0]
   a96e8:   8b010147    add x7, x10, x1
   a96ec:   12003c00    and w0, w0, #0xffff
   a96f0:   b9001a60    str w0, [x19, #24]
   a96f4:   b8216942    str w2, [x10, x1]
   a96f8:   b9406a60    ldr w0, [x19, #104]
   a96fc:   7100041f    cmp w0, #0x1
   a9700:   54001761    b.ne    a99ec <CBcmPCIeHostBridge::pcie_setup()+0x3bc>
   a9704:   f9403261    ldr x1, [x19, #96]
   a9708:   b9007a60    str w0, [x19, #120]
   a970c:   f9402a65    ldr x5, [x19, #80]
   a9710:   d1000420    sub x0, x1, #0x1
   a9714:   f9003a61    str x1, [x19, #112]
   a9718:   ea05001f    tst x0, x5
   a971c:   54001721    b.ne    a9a00 <CBcmPCIeHostBridge::pcie_setup()+0x3d0>
   a9720:   b27e77e0    mov x0, #0xfffffffc
   a9724:   eb0000bf    cmp x5, x0
   a9728:   54000b09    b.ls    a9888 <CBcmPCIeHostBridge::pcie_setup()+0x258>
   a972c:   f100043f    cmp x1, #0x1
   a9730:   f9004260    str x0, [x19, #128]
   a9734:   121b68a6    and w6, w5, #0xffffffe0
   a9738:   540016e9    b.ls    a9a14 <CBcmPCIeHostBridge::pcie_setup()+0x3e4>
   a973c:   52800000    mov w0, #0x0
   a9740:   d2800024    mov x4, #0x1
   a9744:   d503201f    nop
   a9748:   2a0003e3    mov w3, w0
   a974c:   11000400    add w0, w0, #0x1
   a9750:   9ac02082    lsl x2, x4, x0
   a9754:   eb02003f    cmp x1, x2
   a9758:   54ffff88    b.hi    a9748 <CBcmPCIeHostBridge::pcie_setup()+0x118>
   a975c:   51002c60    sub w0, w3, #0xb
   a9760:   71000c1f    cmp w0, #0x3
   a9764:   540009c9    b.ls    a989c <CBcmPCIeHostBridge::pcie_setup()+0x26c>
   a9768:   51003c60    sub w0, w3, #0xf
   a976c:   51003863    sub w3, w3, #0xe
   a9770:   7100581f    cmp w0, #0x16
   a9774:   2a0300c3    orr w3, w6, w3
   a9778:   1a863066    csel    w6, w3, w6, cc
   a977c:   d2880683    mov x3, #0x4034
   a9780:   d360fca5    lsr x5, x5, #32
   a9784:   d2880702    mov x2, #0x4038
   a9788:   52800000    mov w0, #0x0
   a978c:   d2800024    mov x4, #0x1
   a9790:   b8236946    str w6, [x10, x3]
   a9794:   b8226945    str w5, [x10, x2]
   a9798:   2a0003e2    mov w2, w0
   a979c:   11000400    add w0, w0, #0x1
   a97a0:   9ac02083    lsl x3, x4, x0
   a97a4:   eb03003f    cmp x1, x3
   a97a8:   54ffff88    b.hi    a9798 <CBcmPCIeHostBridge::pcie_setup()+0x168>
   a97ac:   51003842    sub w2, w2, #0xe
   a97b0:   53051042    lsl w2, w2, #27
   a97b4:   b94000e0    ldr w0, [x7]
   a97b8:   33006802    bfxil   w2, w0, #0, #27
   a97bc:   b90000e2    str w2, [x7]
   a97c0:   b9407a74    ldr w20, [x19, #120]
   a97c4:   7100069f    cmp w20, #0x1
   a97c8:   54001381    b.ne    a9a38 <CBcmPCIeHostBridge::pcie_setup()+0x408>
   a97cc:   d2880586    mov x6, #0x402c
   a97d0:   d2880785    mov x5, #0x403c
   a97d4:   f9401267    ldr x7, [x19, #32]
   a97d8:   d2886104    mov x4, #0x4308
   a97dc:   12800003    mov w3, #0xffffffff
   a97e0:   b8666941    ldr w1, [x10, x6]
   a97e4:   d2886202    mov x2, #0x4310
   a97e8:   d2880d16    mov x22, #0x4068
   a97ec:   52800000    mov w0, #0x0
   a97f0:   121b6821    and w1, w1, #0xffffffe0
   a97f4:   b8266941    str w1, [x10, x6]
   a97f8:   b8656941    ldr w1, [x10, x5]
   a97fc:   121b6821    and w1, w1, #0xffffffe0
   a9800:   b8256941    str w1, [x10, x5]
   a9804:   b8246943    str w3, [x10, x4]
   a9808:   b8646941    ldr w1, [x10, x4]
   a980c:   b8226943    str w3, [x10, x2]
   a9810:   b8626941    ldr w1, [x10, x2]
   a9814:   b940b942    ldr w2, [x10, #184]
   a9818:   7941b941    ldrh    w1, [x10, #220]
   a981c:   121c6c42    and w2, w2, #0xfffffff0
   a9820:   321f0042    orr w2, w2, #0x2
   a9824:   121c2c21    and w1, w1, #0xfff0
   a9828:   b900b942    str w2, [x10, #184]
   a982c:   321f0021    orr w1, w1, #0x2
   a9830:   b98000e2    ldrsw   x2, [x7]
   a9834:   7901b941    strh    w1, [x10, #220]
   a9838:   b86a6841    ldr w1, [x2, x10]
   a983c:   121f7821    and w1, w1, #0xfffffffe
   a9840:   b82a6841    str w1, [x2, x10]
   a9844:   b86a6841    ldr w1, [x2, x10]
   a9848:   8b160142    add x2, x10, x22
   a984c:   b8766941    ldr w1, [x10, x22]
   a9850:   f27b003f    tst x1, #0x20
   a9854:   121c0021    and w1, w1, #0x10
   a9858:   7a401824    ccmp    w1, #0x0, #0x4, ne
   a985c:   54000421    b.ne    a98e0 <CBcmPCIeHostBridge::pcie_setup()+0x2b0>
   a9860:   0b140015    add w21, w0, w20
   a9864:   f9400661    ldr x1, [x19, #8]
   a9868:   710192bf    cmp w21, #0x64
   a986c:   540001ed    b.le    a98a8 <CBcmPCIeHostBridge::pcie_setup()+0x278>
   a9870:   b5000b21    cbnz    x1, a99d4 <CBcmPCIeHostBridge::pcie_setup()+0x3a4>
   a9874:   f0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a9878:   912f2021    add x1, x1, #0xbc8
   a987c:   91058020    add x0, x1, #0x160
   a9880:   52806da2    mov w2, #0x36d
   a9884:   97ffcc8f    bl  9cac0 <assertion_failed>
   a9888:   8b050022    add x2, x1, x5
   a988c:   b27e87e3    mov x3, #0xffffffffc
   a9890:   eb00005f    cmp x2, x0
   a9894:   9a808060    csel    x0, x3, x0, hi
   a9898:   17ffffa5    b   a972c <CBcmPCIeHostBridge::pcie_setup()+0xfc>
   a989c:   11004463    add w3, w3, #0x11
   a98a0:   2a0300c6    orr w6, w6, w3
   a98a4:   17ffffb6    b   a977c <CBcmPCIeHostBridge::pcie_setup()+0x14c>
   a98a8:   b4fffe61    cbz x1, a9874 <CBcmPCIeHostBridge::pcie_setup()+0x244>
   a98ac:   2a1403e0    mov w0, w20
   a98b0:   531f7a94    lsl w20, w20, #1
   a98b4:   97fff317    bl  a6510 <CTimer::SimpleMsDelay(unsigned int)>
   a98b8:   710192bf    cmp w21, #0x64
   a98bc:   f9400a6a    ldr x10, [x19, #16]
   a98c0:   54000ea0    b.eq    a9a94 <CBcmPCIeHostBridge::pcie_setup()+0x464>
   a98c4:   b8766941    ldr w1, [x10, x22]
   a98c8:   2a1503e0    mov w0, w21
   a98cc:   8b160142    add x2, x10, x22
   a98d0:   f27b003f    tst x1, #0x20
   a98d4:   121c0021    and w1, w1, #0x10
   a98d8:   7a401824    ccmp    w1, #0x0, #0x4, ne
   a98dc:   54fffc20    b.eq    a9860 <CBcmPCIeHostBridge::pcie_setup()+0x230>
   a98e0:   b9400040    ldr w0, [x2]
   a98e4:   f27b001f    tst x0, #0x20
   a98e8:   121c0000    and w0, w0, #0x10
   a98ec:   7a401804    ccmp    w0, #0x0, #0x4, ne
   a98f0:   54000c00    b.eq    a9a70 <CBcmPCIeHostBridge::pcie_setup()+0x440>
   a98f4:   b9400040    ldr w0, [x2]
   a98f8:   36380aa0    tbz w0, #7, a9a4c <CBcmPCIeHostBridge::pcie_setup()+0x41c>
   a98fc:   b9404a60    ldr w0, [x19, #72]
   a9900:   7100001f    cmp w0, #0x0
   a9904:   540000cd    b.le    a991c <CBcmPCIeHostBridge::pcie_setup()+0x2ec>
   a9908:   a9430a63    ldp x3, x2, [x19, #48]
   a990c:   52800001    mov w1, #0x0
   a9910:   aa1303e0    mov x0, x19
   a9914:   f9402264    ldr x4, [x19, #64]
   a9918:   97ffff26    bl  a95b0 <CBcmPCIeHostBridge::pcie_set_outbound_win(unsigned int, unsigned long, unsigned long, unsigned long)>
   a991c:   b9443d40    ldr w0, [x10, #1084]
   a9920:   52808001    mov w1, #0x400
   a9924:   72a000c1    movk    w1, #0x6, lsl #16
   a9928:   12081c00    and w0, w0, #0xff000000
   a992c:   2a010000    orr w0, w0, w1
   a9930:   b9043d40    str w0, [x10, #1084]
   a9934:   b9443d40    ldr w0, [x10, #1084]
   a9938:   79417d45    ldrh    w5, [x10, #190]
   a993c:   12003cb4    and w20, w5, #0xffff
   a9940:   d34424b5    ubfx    x21, x5, #4, #6
   a9944:   97ffd72f    bl  9f600 <CLogger::Get()>
   a9948:   12000e82    and w2, w20, #0xf
   a994c:   f0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a9950:   912f2021    add x1, x1, #0xbc8
   a9954:   51000442    sub w2, w2, #0x1
   a9958:   7100085f    cmp w2, #0x2
   a995c:   91056024    add x4, x1, #0x158
   a9960:   540002a9    b.ls    a99b4 <CBcmPCIeHostBridge::pcie_setup()+0x384>
   a9964:   91084023    add x3, x1, #0x210
   a9968:   52800062    mov w2, #0x3
   a996c:   91022021    add x1, x1, #0x88
   a9970:   2a1503e5    mov w5, w21
   a9974:   97ffd90b    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   a9978:   f9400a61    ldr x1, [x19, #16]
   a997c:   d2884082    mov x2, #0x4204
   a9980:   52800000    mov w0, #0x0
   a9984:   b9418823    ldr w3, [x1, #392]
   a9988:   121c7463    and w3, w3, #0xfffffff3
   a998c:   b9018823    str w3, [x1, #392]
   a9990:   b9418823    ldr w3, [x1, #392]
   a9994:   b8626823    ldr w3, [x1, x2]
   a9998:   321f0063    orr w3, w3, #0x2
   a999c:   b8226823    str w3, [x1, x2]
   a99a0:   b8626821    ldr w1, [x1, x2]
   a99a4:   a94153f3    ldp x19, x20, [sp, #16]
   a99a8:   a9425bf5    ldp x21, x22, [sp, #32]
   a99ac:   a8c37bfd    ldp x29, x30, [sp], #48
   a99b0:   d65f03c0    ret
   a99b4:   9107e023    add x3, x1, #0x1f8
   a99b8:   f8625864    ldr x4, [x3, w2, uxtw #3]
   a99bc:   17ffffea    b   a9964 <CBcmPCIeHostBridge::pcie_setup()+0x334>
   a99c0:   f0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a99c4:   912f2021    add x1, x1, #0xbc8
   a99c8:   91058020    add x0, x1, #0x160
   a99cc:   52806ce2    mov w2, #0x367
   a99d0:   97ffcc3c    bl  9cac0 <assertion_failed>
   a99d4:   52800c81    mov w1, #0x64
   a99d8:   4b000020    sub w0, w1, w0
   a99dc:   97fff2cd    bl  a6510 <CTimer::SimpleMsDelay(unsigned int)>
   a99e0:   f9400a6a    ldr x10, [x19, #16]
   a99e4:   8b160142    add x2, x10, x22
   a99e8:   17ffffbe    b   a98e0 <CBcmPCIeHostBridge::pcie_setup()+0x2b0>
   a99ec:   f0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a99f0:   912f2021    add x1, x1, #0xbc8
   a99f4:   9105c020    add x0, x1, #0x170
   a99f8:   528031a2    mov w2, #0x18d
   a99fc:   97ffcc31    bl  9cac0 <assertion_failed>
   a9a00:   f0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a9a04:   912f2021    add x1, x1, #0xbc8
   a9a08:   91062020    add x0, x1, #0x188
   a9a0c:   528032e2    mov w2, #0x197
   a9a10:   97ffcc2c    bl  9cac0 <assertion_failed>
   a9a14:   d2880682    mov x2, #0x4034
   a9a18:   d360fca5    lsr x5, x5, #32
   a9a1c:   d2880700    mov x0, #0x4038
   a9a20:   f100003f    cmp x1, #0x0
   a9a24:   b8226946    str w6, [x10, x2]
   a9a28:   52af0002    mov w2, #0x78000000
   a9a2c:   5a820442    cneg    w2, w2, ne
   a9a30:   b8206945    str w5, [x10, x0]
   a9a34:   17ffff60    b   a97b4 <CBcmPCIeHostBridge::pcie_setup()+0x184>
   a9a38:   f0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a9a3c:   912f2021    add x1, x1, #0xbc8
   a9a40:   9106c020    add x0, x1, #0x1b0
   a9a44:   528035a2    mov w2, #0x1ad
   a9a48:   97ffcc1e    bl  9cac0 <assertion_failed>
   a9a4c:   97ffd6ed    bl  9f600 <CLogger::Get()>
   a9a50:   f0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a9a54:   912f2021    add x1, x1, #0xbc8
   a9a58:   91074023    add x3, x1, #0x1d0
   a9a5c:   52800022    mov w2, #0x1
   a9a60:   91022021    add x1, x1, #0x88
   a9a64:   97ffd8cf    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   a9a68:   12800000    mov w0, #0xffffffff
   a9a6c:   17ffffce    b   a99a4 <CBcmPCIeHostBridge::pcie_setup()+0x374>
   a9a70:   97ffd6e4    bl  9f600 <CLogger::Get()>
   a9a74:   f0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a9a78:   912f2021    add x1, x1, #0xbc8
   a9a7c:   91070023    add x3, x1, #0x1c0
   a9a80:   52800022    mov w2, #0x1
   a9a84:   91022021    add x1, x1, #0x88
   a9a88:   97ffd8c6    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   a9a8c:   12800000    mov w0, #0xffffffff
   a9a90:   17ffffc5    b   a99a4 <CBcmPCIeHostBridge::pcie_setup()+0x374>
   a9a94:   8b160142    add x2, x10, x22
   a9a98:   17ffff92    b   a98e0 <CBcmPCIeHostBridge::pcie_setup()+0x2b0>
   a9a9c:   d503201f    nop

00000000000a9aa0 <CBcmPCIeHostBridge::pcie_probe()>:
   a9aa0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   a9aa4:   910003fd    mov x29, sp
   a9aa8:   b9404801    ldr w1, [x0, #72]
   a9aac:   f9000bf3    str x19, [sp, #16]
   a9ab0:   35000241    cbnz    w1, a9af8 <CBcmPCIeHostBridge::pcie_probe()+0x58>
   a9ab4:   d2c000c3    mov x3, #0x600000000
   a9ab8:   d2bf0004    mov x4, #0xf8000000
   a9abc:   d2a08002    mov x2, #0x4000000
   a9ac0:   52800021    mov w1, #0x1
   a9ac4:   a9030c04    stp x4, x3, [x0, #48]
   a9ac8:   aa0003f3    mov x19, x0
   a9acc:   f9002002    str x2, [x0, #64]
   a9ad0:   b9004801    str w1, [x0, #72]
   a9ad4:   97fffe9b    bl  a9540 <CBcmPCIeHostBridge::pcie_set_dma_ranges()>
   a9ad8:   34000080    cbz w0, a9ae8 <CBcmPCIeHostBridge::pcie_probe()+0x48>
   a9adc:   f9400bf3    ldr x19, [sp, #16]
   a9ae0:   a8c27bfd    ldp x29, x30, [sp], #32
   a9ae4:   d65f03c0    ret
   a9ae8:   aa1303e0    mov x0, x19
   a9aec:   f9400bf3    ldr x19, [sp, #16]
   a9af0:   a8c27bfd    ldp x29, x30, [sp], #32
   a9af4:   17fffecf    b   a9630 <CBcmPCIeHostBridge::pcie_setup()>
   a9af8:   f0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a9afc:   912f2021    add x1, x1, #0xbc8
   a9b00:   9104a020    add x0, x1, #0x128
   a9b04:   52804882    mov w2, #0x244
   a9b08:   97ffcbee    bl  9cac0 <assertion_failed>
   a9b0c:   d503201f    nop

00000000000a9b10 <CBcmPCIeHostBridge::Initialize()>:
   a9b10:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   a9b14:   910003fd    mov x29, sp
   a9b18:   b9404801    ldr w1, [x0, #72]
   a9b1c:   a90153f3    stp x19, x20, [sp, #16]
   a9b20:   f90013f5    str x21, [sp, #32]
   a9b24:   35000601    cbnz    w1, a9be4 <CBcmPCIeHostBridge::Initialize()+0xd4>
   a9b28:   d2c000c2    mov x2, #0x600000000
   a9b2c:   d2bf0003    mov x3, #0xf8000000
   a9b30:   d2a08001    mov x1, #0x4000000
   a9b34:   52800035    mov w21, #0x1
   a9b38:   a9030803    stp x3, x2, [x0, #48]
   a9b3c:   aa0003f3    mov x19, x0
   a9b40:   f9002001    str x1, [x0, #64]
   a9b44:   b9004815    str w21, [x0, #72]
   a9b48:   97fffe7e    bl  a9540 <CBcmPCIeHostBridge::pcie_set_dma_ranges()>
   a9b4c:   2a0003f4    mov w20, w0
   a9b50:   340001c0    cbz w0, a9b88 <CBcmPCIeHostBridge::Initialize()+0x78>
   a9b54:   97ffd6ab    bl  9f600 <CLogger::Get()>
   a9b58:   f0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a9b5c:   912f2021    add x1, x1, #0xbc8
   a9b60:   9108a023    add x3, x1, #0x228
   a9b64:   2a1403e4    mov w4, w20
   a9b68:   91022021    add x1, x1, #0x88
   a9b6c:   52800022    mov w2, #0x1
   a9b70:   97ffd88c    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   a9b74:   52800000    mov w0, #0x0
   a9b78:   a94153f3    ldp x19, x20, [sp, #16]
   a9b7c:   f94013f5    ldr x21, [sp, #32]
   a9b80:   a8c37bfd    ldp x29, x30, [sp], #48
   a9b84:   d65f03c0    ret
   a9b88:   aa1303e0    mov x0, x19
   a9b8c:   97fffea9    bl  a9630 <CBcmPCIeHostBridge::pcie_setup()>
   a9b90:   2a0003f4    mov w20, w0
   a9b94:   35fffe00    cbnz    w0, a9b54 <CBcmPCIeHostBridge::Initialize()+0x44>
   a9b98:   aa1303e0    mov x0, x19
   a9b9c:   97fffdf1    bl  a9360 <CBcmPCIeHostBridge::enable_bridge()>
   a9ba0:   2a0003f3    mov w19, w0
   a9ba4:   2a1503e0    mov w0, w21
   a9ba8:   350000b3    cbnz    w19, a9bbc <CBcmPCIeHostBridge::Initialize()+0xac>
   a9bac:   a94153f3    ldp x19, x20, [sp, #16]
   a9bb0:   f94013f5    ldr x21, [sp, #32]
   a9bb4:   a8c37bfd    ldp x29, x30, [sp], #48
   a9bb8:   d65f03c0    ret
   a9bbc:   97ffd691    bl  9f600 <CLogger::Get()>
   a9bc0:   f0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a9bc4:   912f2021    add x1, x1, #0xbc8
   a9bc8:   91094023    add x3, x1, #0x250
   a9bcc:   2a1303e4    mov w4, w19
   a9bd0:   2a1503e2    mov w2, w21
   a9bd4:   91022021    add x1, x1, #0x88
   a9bd8:   97ffd872    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   a9bdc:   52800000    mov w0, #0x0
   a9be0:   17ffffe6    b   a9b78 <CBcmPCIeHostBridge::Initialize()+0x68>
   a9be4:   f0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a9be8:   912f2021    add x1, x1, #0xbc8
   a9bec:   9104a020    add x0, x1, #0x128
   a9bf0:   52804882    mov w2, #0x244
   a9bf4:   97ffcbb3    bl  9cac0 <assertion_failed>
   a9bf8:   d503201f    nop
   a9bfc:   d503201f    nop

00000000000a9c00 <CBcmPCIeHostBridge::pcie_map_conf(unsigned int, unsigned int, int)>:
   a9c00:   aa0003e4    mov x4, x0
   a9c04:   340001c1    cbz w1, a9c3c <CBcmPCIeHostBridge::pcie_map_conf(unsigned int, unsigned int, int)+0x3c>
   a9c08:   f9401000    ldr x0, [x0, #32]
   a9c0c:   53140845    ubfiz   w5, w2, #12, #3
   a9c10:   13037c42    asr w2, w2, #3
   a9c14:   2a0150a1    orr w1, w5, w1, lsl #20
   a9c18:   53111042    ubfiz   w2, w2, #15, #5
   a9c1c:   f9400884    ldr x4, [x4, #16]
   a9c20:   8b23c083    add x3, x4, w3, sxtw
   a9c24:   2a020021    orr w1, w1, w2
   a9c28:   b9800402    ldrsw   x2, [x0, #4]
   a9c2c:   b8246841    str w1, [x2, x4]
   a9c30:   b9800800    ldrsw   x0, [x0, #8]
   a9c34:   8b000060    add x0, x3, x0
   a9c38:   d65f03c0    ret
   a9c3c:   721d105f    tst w2, #0xf8
   a9c40:   d2800000    mov x0, #0x0
   a9c44:   54ffffa1    b.ne    a9c38 <CBcmPCIeHostBridge::pcie_map_conf(unsigned int, unsigned int, int)+0x38>
   a9c48:   f9400880    ldr x0, [x4, #16]
   a9c4c:   8b23c000    add x0, x0, w3, sxtw
   a9c50:   d65f03c0    ret
   a9c54:   d503201f    nop
   a9c58:   d503201f    nop
   a9c5c:   d503201f    nop

00000000000a9c60 <CBcmPCIeHostBridge::find_pci_capability(unsigned long, unsigned char)>:
   a9c60:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a9c64:   910003fd    mov x29, sp
   a9c68:   b40002e0    cbz x0, a9cc4 <CBcmPCIeHostBridge::find_pci_capability(unsigned long, unsigned char)+0x64>
   a9c6c:   12001c21    and w1, w1, #0xff
   a9c70:   34000341    cbz w1, a9cd8 <CBcmPCIeHostBridge::find_pci_capability(unsigned long, unsigned char)+0x78>
   a9c74:   79400c02    ldrh    w2, [x0, #6]
   a9c78:   aa0003e3    mov x3, x0
   a9c7c:   d2800000    mov x0, #0x0
   a9c80:   36200182    tbz w2, #4, a9cb0 <CBcmPCIeHostBridge::find_pci_capability(unsigned long, unsigned char)+0x50>
   a9c84:   3940d062    ldrb    w2, [x3, #52]
   a9c88:   72001c42    ands    w2, w2, #0xff
   a9c8c:   540000a1    b.ne    a9ca0 <CBcmPCIeHostBridge::find_pci_capability(unsigned long, unsigned char)+0x40>
   a9c90:   14000008    b   a9cb0 <CBcmPCIeHostBridge::find_pci_capability(unsigned long, unsigned char)+0x50>
   a9c94:   39400402    ldrb    w2, [x0, #1]
   a9c98:   72001c42    ands    w2, w2, #0xff
   a9c9c:   540000e0    b.eq    a9cb8 <CBcmPCIeHostBridge::find_pci_capability(unsigned long, unsigned char)+0x58>
   a9ca0:   38624864    ldrb    w4, [x3, w2, uxtw]
   a9ca4:   8b220060    add x0, x3, w2, uxtb
   a9ca8:   6b24003f    cmp w1, w4, uxtb
   a9cac:   54ffff41    b.ne    a9c94 <CBcmPCIeHostBridge::find_pci_capability(unsigned long, unsigned char)+0x34>
   a9cb0:   a8c17bfd    ldp x29, x30, [sp], #16
   a9cb4:   d65f03c0    ret
   a9cb8:   d2800000    mov x0, #0x0
   a9cbc:   a8c17bfd    ldp x29, x30, [sp], #16
   a9cc0:   d65f03c0    ret
   a9cc4:   f0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a9cc8:   912f2021    add x1, x1, #0xbc8
   a9ccc:   9109c020    add x0, x1, #0x270
   a9cd0:   52805282    mov w2, #0x294
   a9cd4:   97ffcb7b    bl  9cac0 <assertion_failed>
   a9cd8:   f0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a9cdc:   912f2021    add x1, x1, #0xbc8
   a9ce0:   910a0020    add x0, x1, #0x280
   a9ce4:   528052a2    mov w2, #0x295
   a9ce8:   97ffcb76    bl  9cac0 <assertion_failed>
   a9cec:   d503201f    nop

00000000000a9cf0 <CBcmPCIeHostBridge::pcie_bridge_sw_init_set(unsigned int)>:
   a9cf0:   a9420c02    ldp x2, x3, [x0, #32]
   a9cf4:   f9400800    ldr x0, [x0, #16]
   a9cf8:   b9800042    ldrsw   x2, [x2]
   a9cfc:   29401464    ldp w4, w5, [x3]
   a9d00:   b8606843    ldr w3, [x2, x0]
   a9d04:   1ac52021    lsl w1, w1, w5
   a9d08:   4a030021    eor w1, w1, w3
   a9d0c:   0a040021    and w1, w1, w4
   a9d10:   4a030021    eor w1, w1, w3
   a9d14:   b8206841    str w1, [x2, x0]
   a9d18:   b8606840    ldr w0, [x2, x0]
   a9d1c:   d65f03c0    ret

00000000000a9d20 <CBcmPCIeHostBridge::pcie_perst_set(unsigned int)>:
   a9d20:   f9401002    ldr x2, [x0, #32]
   a9d24:   f9400800    ldr x0, [x0, #16]
   a9d28:   b9800042    ldrsw   x2, [x2]
   a9d2c:   b8606843    ldr w3, [x2, x0]
   a9d30:   33000023    bfxil   w3, w1, #0, #1
   a9d34:   b8206843    str w3, [x2, x0]
   a9d38:   b8606840    ldr w0, [x2, x0]
   a9d3c:   d65f03c0    ret

00000000000a9d40 <CBcmPCIeHostBridge::pcie_link_up()>:
   a9d40:   f9400800    ldr x0, [x0, #16]
   a9d44:   d2880d01    mov x1, #0x4068
   a9d48:   b8616800    ldr w0, [x0, x1]
   a9d4c:   f27b001f    tst x0, #0x20
   a9d50:   121c0000    and w0, w0, #0x10
   a9d54:   7a401804    ccmp    w0, #0x0, #0x4, ne
   a9d58:   1a9f07e0    cset    w0, ne
   a9d5c:   d65f03c0    ret

00000000000a9d60 <CBcmPCIeHostBridge::pcie_rc_mode()>:
   a9d60:   f9400800    ldr x0, [x0, #16]
   a9d64:   d2880d01    mov x1, #0x4068
   a9d68:   b8616800    ldr w0, [x0, x1]
   a9d6c:   53071c00    ubfx    w0, w0, #7, #1
   a9d70:   d65f03c0    ret
   a9d74:   d503201f    nop
   a9d78:   d503201f    nop
   a9d7c:   d503201f    nop

00000000000a9d80 <CBcmPCIeHostBridge::msi_set_regs(TPCIeMSIData*)>:
   a9d80:   b9401801    ldr w1, [x0, #24]
   a9d84:   710c083f    cmp w1, #0x302
   a9d88:   54000209    b.ls    a9dc8 <CBcmPCIeHostBridge::msi_set_regs(TPCIeMSIData*)+0x48>
   a9d8c:   a9409c01    ldp x1, x7, [x0, #8]
   a9d90:   12800008    mov w8, #0xffffffff
   a9d94:   d2880885    mov x5, #0x4044
   a9d98:   d2880904    mov x4, #0x4048
   a9d9c:   d2880982    mov x2, #0x404c
   a9da0:   528ca803    mov w3, #0x6540
   a9da4:   72bffc03    movk    w3, #0xffe0, lsl #16
   a9da8:   f9400000    ldr x0, [x0]
   a9dac:   32000026    orr w6, w1, #0x1
   a9db0:   d360fc21    lsr x1, x1, #32
   a9db4:   b90014e8    str w8, [x7, #20]
   a9db8:   b8256806    str w6, [x0, x5]
   a9dbc:   b8246801    str w1, [x0, x4]
   a9dc0:   b8226803    str w3, [x0, x2]
   a9dc4:   d65f03c0    ret
   a9dc8:   f0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a9dcc:   912f2021    add x1, x1, #0xbc8
   a9dd0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a9dd4:   910a4020    add x0, x1, #0x290
   a9dd8:   910003fd    mov x29, sp
   a9ddc:   52805ca2    mov w2, #0x2e5
   a9de0:   97ffcb38    bl  9cac0 <assertion_failed>
   a9de4:   d503201f    nop
   a9de8:   d503201f    nop
   a9dec:   d503201f    nop

00000000000a9df0 <CBcmPCIeHostBridge::pcie_enable_msi(void (*)(unsigned int, void*), void*)>:
   a9df0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   a9df4:   910003fd    mov x29, sp
   a9df8:   a90153f3    stp x19, x20, [sp, #16]
   a9dfc:   f90013f5    str x21, [sp, #32]
   a9e00:   b4000481    cbz x1, a9e90 <CBcmPCIeHostBridge::pcie_enable_msi(void (*)(unsigned int, void*), void*)+0xa0>
   a9e04:   aa0003f3    mov x19, x0
   a9e08:   d2800600    mov x0, #0x30
   a9e0c:   aa0103f4    mov x20, x1
   a9e10:   aa0203f5    mov x21, x2
   a9e14:   97fff66b    bl  a77c0 <operator new(unsigned long)>
   a9e18:   d2800602    mov x2, #0x30
   a9e1c:   52800001    mov w1, #0x0
   a9e20:   f9004660    str x0, [x19, #136]
   a9e24:   97fff3bd    bl  a6d18 <memset>
   a9e28:   f9400a64    ldr x4, [x19, #16]
   a9e2c:   a9480e62    ldp x2, x3, [x19, #128]
   a9e30:   b9401a61    ldr w1, [x19, #24]
   a9e34:   f9400260    ldr x0, [x19]
   a9e38:   a9000864    stp x4, x2, [x3]
   a9e3c:   b9001861    str w1, [x3, #24]
   a9e40:   a9025474    stp x20, x21, [x3, #32]
   a9e44:   b4000300    cbz x0, a9ea4 <CBcmPCIeHostBridge::pcie_enable_msi(void (*)(unsigned int, void*), void*)+0xb4>
   a9e48:   90000002    adrp    x2, a9000 <CTranslationTable::CTranslationTable(unsigned long)+0x1b0>
   a9e4c:   9103c042    add x2, x2, #0xf0
   a9e50:   52801681    mov w1, #0xb4
   a9e54:   94000103    bl  aa260 <CInterruptSystem::ConnectIRQ(unsigned int, void (*)(void*), void*)>
   a9e58:   b9401a60    ldr w0, [x19, #24]
   a9e5c:   710c081f    cmp w0, #0x302
   a9e60:   540002c9    b.ls    a9eb8 <CBcmPCIeHostBridge::pcie_enable_msi(void (*)(unsigned int, void*), void*)+0xc8>
   a9e64:   f9404660    ldr x0, [x19, #136]
   a9e68:   d288a002    mov x2, #0x4500
   a9e6c:   f9400001    ldr x1, [x0]
   a9e70:   8b020021    add x1, x1, x2
   a9e74:   f9000801    str x1, [x0, #16]
   a9e78:   97ffffc2    bl  a9d80 <CBcmPCIeHostBridge::msi_set_regs(TPCIeMSIData*)>
   a9e7c:   a94153f3    ldp x19, x20, [sp, #16]
   a9e80:   52800000    mov w0, #0x0
   a9e84:   f94013f5    ldr x21, [sp, #32]
   a9e88:   a8c37bfd    ldp x29, x30, [sp], #48
   a9e8c:   d65f03c0    ret
   a9e90:   f0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a9e94:   912f2021    add x1, x1, #0xbc8
   a9e98:   910ac020    add x0, x1, #0x2b0
   a9e9c:   52805962    mov w2, #0x2cb
   a9ea0:   97ffcb08    bl  9cac0 <assertion_failed>
   a9ea4:   f0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a9ea8:   912f2021    add x1, x1, #0xbc8
   a9eac:   91016020    add x0, x1, #0x58
   a9eb0:   52805b02    mov w2, #0x2d8
   a9eb4:   97ffcb03    bl  9cac0 <assertion_failed>
   a9eb8:   f0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a9ebc:   912f2021    add x1, x1, #0xbc8
   a9ec0:   910b0020    add x0, x1, #0x2c0
   a9ec4:   52805b62    mov w2, #0x2db
   a9ec8:   97ffcafe    bl  9cac0 <assertion_failed>
   a9ecc:   d503201f    nop

00000000000a9ed0 <CBcmPCIeHostBridge::ConnectMSI(void (*)(unsigned int, void*), void*)>:
   a9ed0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   a9ed4:   910003fd    mov x29, sp
   a9ed8:   97ffffc6    bl  a9df0 <CBcmPCIeHostBridge::pcie_enable_msi(void (*)(unsigned int, void*), void*)>
   a9edc:   7100001f    cmp w0, #0x0
   a9ee0:   a8c17bfd    ldp x29, x30, [sp], #16
   a9ee4:   1a9f17e0    cset    w0, eq
   a9ee8:   d65f03c0    ret
   a9eec:   d503201f    nop

00000000000a9ef0 <CBcmPCIeHostBridge::cfg_index(int, int, int)>:
   a9ef0:   121e7442    and w2, w2, #0xfffffffc
   a9ef4:   53141c21    ubfiz   w1, w1, #12, #8
   a9ef8:   2a005040    orr w0, w2, w0, lsl #20
   a9efc:   2a000020    orr w0, w1, w0
   a9f00:   d65f03c0    ret
   a9f04:   d503201f    nop
   a9f08:   d503201f    nop
   a9f0c:   d503201f    nop

00000000000a9f10 <CBcmPCIeHostBridge::set_gen(unsigned long, int)>:
   a9f10:   b940b803    ldr w3, [x0, #184]
   a9f14:   7941b802    ldrh    w2, [x0, #220]
   a9f18:   121c6c63    and w3, w3, #0xfffffff0
   a9f1c:   2a010063    orr w3, w3, w1
   a9f20:   121c2c42    and w2, w2, #0xfff0
   a9f24:   2a010041    orr w1, w2, w1
   a9f28:   b900b803    str w3, [x0, #184]
   a9f2c:   12003c21    and w1, w1, #0xffff
   a9f30:   7901b801    strh    w1, [x0, #220]
   a9f34:   d65f03c0    ret
   a9f38:   d503201f    nop
   a9f3c:   d503201f    nop

00000000000a9f40 <CBcmPCIeHostBridge::link_speed_to_str(int)>:
   a9f40:   51000400    sub w0, w0, #0x1
   a9f44:   7100081f    cmp w0, #0x2
   a9f48:   540000c8    b.hi    a9f60 <CBcmPCIeHostBridge::link_speed_to_str(int)+0x20>
   a9f4c:   f0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   a9f50:   912f2021    add x1, x1, #0xbc8
   a9f54:   9107e021    add x1, x1, #0x1f8
   a9f58:   f8605820    ldr x0, [x1, w0, uxtw #3]
   a9f5c:   d65f03c0    ret
   a9f60:   f0000060    adrp    x0, b8000 <vtable for CGPIOPin+0x288>
   a9f64:   912f2000    add x0, x0, #0xbc8
   a9f68:   91056000    add x0, x0, #0x158
   a9f6c:   d65f03c0    ret

00000000000a9f70 <CBcmPCIeHostBridge::encode_ibar_size(unsigned long)>:
   a9f70:   f100041f    cmp x0, #0x1
   a9f74:   54000249    b.ls    a9fbc <CBcmPCIeHostBridge::encode_ibar_size(unsigned long)+0x4c>
   a9f78:   52800001    mov w1, #0x0
   a9f7c:   d2800024    mov x4, #0x1
   a9f80:   2a0103e3    mov w3, w1
   a9f84:   11000421    add w1, w1, #0x1
   a9f88:   9ac12082    lsl x2, x4, x1
   a9f8c:   eb02001f    cmp x0, x2
   a9f90:   54ffff88    b.hi    a9f80 <CBcmPCIeHostBridge::encode_ibar_size(unsigned long)+0x10>
   a9f94:   51002c60    sub w0, w3, #0xb
   a9f98:   71000c1f    cmp w0, #0x3
   a9f9c:   540000c9    b.ls    a9fb4 <CBcmPCIeHostBridge::encode_ibar_size(unsigned long)+0x44>
   a9fa0:   51003c60    sub w0, w3, #0xf
   a9fa4:   51003863    sub w3, w3, #0xe
   a9fa8:   7100581f    cmp w0, #0x16
   a9fac:   1a9f3060    csel    w0, w3, wzr, cc
   a9fb0:   d65f03c0    ret
   a9fb4:   11004460    add w0, w3, #0x11
   a9fb8:   d65f03c0    ret
   a9fbc:   52800000    mov w0, #0x0
   a9fc0:   d65f03c0    ret
   a9fc4:   d503201f    nop
   a9fc8:   d503201f    nop
   a9fcc:   d503201f    nop

00000000000a9fd0 <CBcmPCIeHostBridge::rd_fld(unsigned long, unsigned int, int)>:
   a9fd0:   b9400000    ldr w0, [x0]
   a9fd4:   0a000020    and w0, w1, w0
   a9fd8:   1ac22400    lsr w0, w0, w2
   a9fdc:   d65f03c0    ret

00000000000a9fe0 <CBcmPCIeHostBridge::wr_fld(unsigned long, unsigned int, int, unsigned int)>:
   a9fe0:   b9400004    ldr w4, [x0]
   a9fe4:   1ac22063    lsl w3, w3, w2
   a9fe8:   4a040063    eor w3, w3, w4
   a9fec:   0a010063    and w3, w3, w1
   a9ff0:   4a040063    eor w3, w3, w4
   a9ff4:   b9000003    str w3, [x0]
   a9ff8:   d65f03c0    ret
   a9ffc:   d503201f    nop

00000000000aa000 <CBcmPCIeHostBridge::wr_fld_rb(unsigned long, unsigned int, int, unsigned int)>:
   aa000:   b9400004    ldr w4, [x0]
   aa004:   1ac22063    lsl w3, w3, w2
   aa008:   4a040063    eor w3, w3, w4
   aa00c:   0a010063    and w3, w3, w1
   aa010:   4a040063    eor w3, w3, w4
   aa014:   b9000003    str w3, [x0]
   aa018:   b9400000    ldr w0, [x0]
   aa01c:   d65f03c0    ret

00000000000aa020 <CBcmPCIeHostBridge::usleep_range(unsigned int, unsigned int)>:
   aa020:   f9400402    ldr x2, [x0, #8]
   aa024:   b4000062    cbz x2, aa030 <CBcmPCIeHostBridge::usleep_range(unsigned int, unsigned int)+0x10>
   aa028:   2a0103e0    mov w0, w1
   aa02c:   17fff151    b   a6570 <CTimer::SimpleusDelay(unsigned int)>
   aa030:   d0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   aa034:   912f2021    add x1, x1, #0xbc8
   aa038:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   aa03c:   91058020    add x0, x1, #0x160
   aa040:   910003fd    mov x29, sp
   aa044:   52806ce2    mov w2, #0x367
   aa048:   97ffca9e    bl  9cac0 <assertion_failed>
   aa04c:   d503201f    nop

00000000000aa050 <CBcmPCIeHostBridge::msleep(unsigned int)>:
   aa050:   f9400402    ldr x2, [x0, #8]
   aa054:   b4000062    cbz x2, aa060 <CBcmPCIeHostBridge::msleep(unsigned int)+0x10>
   aa058:   2a0103e0    mov w0, w1
   aa05c:   17fff12d    b   a6510 <CTimer::SimpleMsDelay(unsigned int)>
   aa060:   d0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   aa064:   912f2021    add x1, x1, #0xbc8
   aa068:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   aa06c:   91058020    add x0, x1, #0x160
   aa070:   910003fd    mov x29, sp
   aa074:   52806da2    mov w2, #0x36d
   aa078:   97ffca92    bl  9cac0 <assertion_failed>
   aa07c:   d503201f    nop

00000000000aa080 <CBcmPCIeHostBridge::ilog2(unsigned long)>:
   aa080:   aa0003e2    mov x2, x0
   aa084:   52800000    mov w0, #0x0
   aa088:   f100045f    cmp x2, #0x1
   aa08c:   540000e9    b.ls    aa0a8 <CBcmPCIeHostBridge::ilog2(unsigned long)+0x28>
   aa090:   d2800023    mov x3, #0x1
   aa094:   d503201f    nop
   aa098:   11000400    add w0, w0, #0x1
   aa09c:   9ac02061    lsl x1, x3, x0
   aa0a0:   eb02003f    cmp x1, x2
   aa0a4:   54ffffa3    b.cc    aa098 <CBcmPCIeHostBridge::ilog2(unsigned long)+0x18>
   aa0a8:   d65f03c0    ret
   aa0ac:   00000000    udf #0

00000000000aa0b0 <CInterruptSystem::CInterruptSystem()>:
   aa0b0:   aa0003e1    mov x1, x0
   aa0b4:   91200002    add x2, x0, #0x800
   aa0b8:   91002021    add x1, x1, #0x8
   aa0bc:   f81f803f    stur    xzr, [x1, #-8]
   aa0c0:   f903fc3f    str xzr, [x1, #2040]
   aa0c4:   eb02003f    cmp x1, x2
   aa0c8:   54ffff81    b.ne    aa0b8 <CInterruptSystem::CInterruptSystem()+0x8>
   aa0cc:   90000081    adrp    x1, ba000 <font_data+0x1080>
   aa0d0:   f9058c20    str x0, [x1, #2840]
   aa0d4:   d65f03c0    ret
   aa0d8:   d503201f    nop
   aa0dc:   d503201f    nop

00000000000aa0e0 <CInterruptSystem::~CInterruptSystem()>:
   aa0e0:   d50342df    msr daifset, #0x2
   aa0e4:   d2820001    mov x1, #0x1000
   aa0e8:   f2bff081    movk    x1, #0xff84, lsl #16
   aa0ec:   90000080    adrp    x0, ba000 <font_data+0x1080>
   aa0f0:   b900003f    str wzr, [x1]
   aa0f4:   f9058c1f    str xzr, [x0, #2840]
   aa0f8:   d65f03c0    ret
   aa0fc:   d503201f    nop

00000000000aa100 <CInterruptSystem::Initialize()>:
   aa100:   d2a000e0    mov x0, #0x70000
   aa104:   f0000009    adrp    x9, ad000 <CGPIOManager::InterruptHandler()+0x30>
   aa108:   913e1129    add x9, x9, #0xf84
   aa10c:   9000002a    adrp    x10, ae000 <SErrorStub+0xc>
   aa110:   910a214a    add x10, x10, #0x288
   aa114:   d2800001    mov x1, #0x0
   aa118:   a9be7bfd    stp x29, x30, [sp, #-32]!
   aa11c:   52a28008    mov w8, #0x14000000
   aa120:   910003fd    mov x29, sp
   aa124:   f9000fe0    str x0, [sp, #24]
   aa128:   f100203f    cmp x1, #0x8
   aa12c:   540007a0    b.eq    aa220 <CInterruptSystem::Initialize()+0x120>
   aa130:   f9400fe0    ldr x0, [sp, #24]
   aa134:   d3797c24    ubfiz   x4, x1, #7, #32
   aa138:   f9400fe5    ldr x5, [sp, #24]
   aa13c:   8b011c00    add x0, x0, x1, lsl #7
   aa140:   91000421    add x1, x1, #0x1
   aa144:   f100403f    cmp x1, #0x10
   aa148:   cb000120    sub x0, x9, x0
   aa14c:   8b0400a2    add x2, x5, x4
   aa150:   9342fc00    asr x0, x0, #2
   aa154:   2a080003    orr w3, w0, w8
   aa158:   53083c07    ubfx    w7, w0, #8, #8
   aa15c:   53187c63    lsr w3, w3, #24
   aa160:   53105c06    ubfx    w6, w0, #16, #8
   aa164:   382468a0    strb    w0, [x5, x4]
   aa168:   39000447    strb    w7, [x2, #1]
   aa16c:   39000846    strb    w6, [x2, #2]
   aa170:   39000c43    strb    w3, [x2, #3]
   aa174:   54fffda1    b.ne    aa128 <CInterruptSystem::Initialize()+0x28>
   aa178:   97fffa62    bl  a8b00 <SyncDataAndInstructionCache>
   aa17c:   d2820003    mov x3, #0x1000
   aa180:   f2bff083    movk    x3, #0xff84, lsl #16
   aa184:   12800000    mov w0, #0xffffffff
   aa188:   91060061    add x1, x3, #0x180
   aa18c:   91068062    add x2, x3, #0x1a0
   aa190:   b900007f    str wzr, [x3]
   aa194:   d503201f    nop
   aa198:   b9000020    str w0, [x1]
   aa19c:   91001021    add x1, x1, #0x4
   aa1a0:   b900fc20    str w0, [x1, #252]
   aa1a4:   b901fc20    str w0, [x1, #508]
   aa1a8:   eb02003f    cmp x1, x2
   aa1ac:   54ffff61    b.ne    aa198 <CInterruptSystem::Initialize()+0x98>
   aa1b0:   91098020    add x0, x1, #0x260
   aa1b4:   52941403    mov w3, #0xa0a0
   aa1b8:   72b41403    movk    w3, #0xa0a0, lsl #16
   aa1bc:   910d8021    add x1, x1, #0x360
   aa1c0:   3200c3e2    mov w2, #0x1010101
   aa1c4:   d503201f    nop
   aa1c8:   b9000003    str w3, [x0]
   aa1cc:   91001000    add x0, x0, #0x4
   aa1d0:   b903fc02    str w2, [x0, #1020]
   aa1d4:   eb01001f    cmp x0, x1
   aa1d8:   54ffff81    b.ne    aa1c8 <CInterruptSystem::Initialize()+0xc8>
   aa1dc:   911c0001    add x1, x0, #0x700
   aa1e0:   911d0000    add x0, x0, #0x740
   aa1e4:   d503201f    nop
   aa1e8:   b800443f    str wzr, [x1], #4
   aa1ec:   eb00003f    cmp x1, x0
   aa1f0:   54ffffc1    b.ne    aa1e8 <CInterruptSystem::Initialize()+0xe8>
   aa1f4:   d1310021    sub x1, x1, #0xc40
   aa1f8:   52800020    mov w0, #0x1
   aa1fc:   52801e03    mov w3, #0xf0
   aa200:   d2840082    mov x2, #0x2004
   aa204:   f2bff082    movk    x2, #0xff84, lsl #16
   aa208:   b9000020    str w0, [x1]
   aa20c:   b9000043    str w3, [x2]
   aa210:   b9100020    str w0, [x1, #4096]
   aa214:   d50342ff    msr daifclr, #0x2
   aa218:   a8c27bfd    ldp x29, x30, [sp], #32
   aa21c:   d65f03c0    ret
   aa220:   f9400fe0    ldr x0, [sp, #24]
   aa224:   d2800121    mov x1, #0x9
   aa228:   f9400fe2    ldr x2, [sp, #24]
   aa22c:   91100000    add x0, x0, #0x400
   aa230:   cb000140    sub x0, x10, x0
   aa234:   9342fc00    asr x0, x0, #2
   aa238:   2a080003    orr w3, w0, w8
   aa23c:   53083c05    ubfx    w5, w0, #8, #8
   aa240:   53187c63    lsr w3, w3, #24
   aa244:   53105c04    ubfx    w4, w0, #16, #8
   aa248:   39100040    strb    w0, [x2, #1024]
   aa24c:   39100445    strb    w5, [x2, #1025]
   aa250:   39100844    strb    w4, [x2, #1026]
   aa254:   39100c43    strb    w3, [x2, #1027]
   aa258:   17ffffb6    b   aa130 <CInterruptSystem::Initialize()+0x30>
   aa25c:   d503201f    nop

00000000000aa260 <CInterruptSystem::ConnectIRQ(unsigned int, void (*)(void*), void*)>:
   aa260:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   aa264:   7103fc3f    cmp w1, #0xff
   aa268:   910003fd    mov x29, sp
   aa26c:   54000208    b.hi    aa2ac <CInterruptSystem::ConnectIRQ(unsigned int, void (*)(void*), void*)+0x4c>
   aa270:   2a0103e6    mov w6, w1
   aa274:   8b214c07    add x7, x0, w1, uxtw #3
   aa278:   f8667804    ldr x4, [x0, x6, lsl #3]
   aa27c:   b5000244    cbnz    x4, aa2c4 <CInterruptSystem::ConnectIRQ(unsigned int, void (*)(void*), void*)+0x64>
   aa280:   52808804    mov w4, #0x440
   aa284:   72a7fc24    movk    w4, #0x3fe1, lsl #16
   aa288:   f8267802    str x2, [x0, x6, lsl #3]
   aa28c:   0b411480    add w0, w4, w1, lsr #5
   aa290:   52800025    mov w5, #0x1
   aa294:   f90400e3    str x3, [x7, #2048]
   aa298:   1ac120a1    lsl w1, w5, w1
   aa29c:   531e7400    lsl w0, w0, #2
   aa2a0:   b9000001    str w1, [x0]
   aa2a4:   a8c17bfd    ldp x29, x30, [sp], #16
   aa2a8:   d65f03c0    ret
   aa2ac:   b0000041    adrp    x1, b3000 <_etext+0x3f9c>
   aa2b0:   b0000040    adrp    x0, b3000 <_etext+0x3f9c>
   aa2b4:   91250021    add x1, x1, #0x940
   aa2b8:   91256000    add x0, x0, #0x958
   aa2bc:   52801642    mov w2, #0xb2
   aa2c0:   97ffca00    bl  9cac0 <assertion_failed>
   aa2c4:   b0000041    adrp    x1, b3000 <_etext+0x3f9c>
   aa2c8:   b0000040    adrp    x0, b3000 <_etext+0x3f9c>
   aa2cc:   91250021    add x1, x1, #0x940
   aa2d0:   9125c000    add x0, x0, #0x970
   aa2d4:   52801662    mov w2, #0xb3
   aa2d8:   97ffc9fa    bl  9cac0 <assertion_failed>
   aa2dc:   d503201f    nop

00000000000aa2e0 <CInterruptSystem::DisconnectIRQ(unsigned int)>:
   aa2e0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   aa2e4:   7103fc3f    cmp w1, #0xff
   aa2e8:   910003fd    mov x29, sp
   aa2ec:   54000208    b.hi    aa32c <CInterruptSystem::DisconnectIRQ(unsigned int)+0x4c>
   aa2f0:   2a0103e4    mov w4, w1
   aa2f4:   8b214c05    add x5, x0, w1, uxtw #3
   aa2f8:   f8647802    ldr x2, [x0, x4, lsl #3]
   aa2fc:   b4000242    cbz x2, aa344 <CInterruptSystem::DisconnectIRQ(unsigned int)+0x64>
   aa300:   52808c02    mov w2, #0x460
   aa304:   72a7fc22    movk    w2, #0x3fe1, lsl #16
   aa308:   0b411442    add w2, w2, w1, lsr #5
   aa30c:   52800023    mov w3, #0x1
   aa310:   1ac12063    lsl w3, w3, w1
   aa314:   531e7441    lsl w1, w2, #2
   aa318:   b9000023    str w3, [x1]
   aa31c:   f824781f    str xzr, [x0, x4, lsl #3]
   aa320:   f90400bf    str xzr, [x5, #2048]
   aa324:   a8c17bfd    ldp x29, x30, [sp], #16
   aa328:   d65f03c0    ret
   aa32c:   b0000041    adrp    x1, b3000 <_etext+0x3f9c>
   aa330:   b0000040    adrp    x0, b3000 <_etext+0x3f9c>
   aa334:   91250021    add x1, x1, #0x940
   aa338:   91256000    add x0, x0, #0x958
   aa33c:   528017a2    mov w2, #0xbd
   aa340:   97ffc9e0    bl  9cac0 <assertion_failed>
   aa344:   b0000041    adrp    x1, b3000 <_etext+0x3f9c>
   aa348:   b0000040    adrp    x0, b3000 <_etext+0x3f9c>
   aa34c:   91250021    add x1, x1, #0x940
   aa350:   91264000    add x0, x0, #0x990
   aa354:   528017c2    mov w2, #0xbe
   aa358:   97ffc9da    bl  9cac0 <assertion_failed>
   aa35c:   d503201f    nop

00000000000aa360 <CInterruptSystem::DisconnectFIQ()>:
   aa360:   90000085    adrp    x5, ba000 <font_data+0x1080>
   aa364:   912180a2    add x2, x5, #0x860
   aa368:   a9be7bfd    stp x29, x30, [sp, #-32]!
   aa36c:   910003fd    mov x29, sp
   aa370:   396180a4    ldrb    w4, [x5, #2144]
   aa374:   39400443    ldrb    w3, [x2, #1]
   aa378:   39400841    ldrb    w1, [x2, #2]
   aa37c:   39400c40    ldrb    w0, [x2, #3]
   aa380:   aa032083    orr x3, x4, x3, lsl #8
   aa384:   39401044    ldrb    w4, [x2, #4]
   aa388:   aa014061    orr x1, x3, x1, lsl #16
   aa38c:   39401443    ldrb    w3, [x2, #5]
   aa390:   aa006020    orr x0, x1, x0, lsl #24
   aa394:   39401841    ldrb    w1, [x2, #6]
   aa398:   aa048004    orr x4, x0, x4, lsl #32
   aa39c:   39401c40    ldrb    w0, [x2, #7]
   aa3a0:   aa03a083    orr x3, x4, x3, lsl #40
   aa3a4:   aa01c061    orr x1, x3, x1, lsl #48
   aa3a8:   aa00e020    orr x0, x1, x0, lsl #56
   aa3ac:   b4000560    cbz x0, aa458 <CInterruptSystem::DisconnectFIQ()+0xf8>
   aa3b0:   d2801a81    mov x1, #0xd4
   aa3b4:   528928c0    mov w0, #0x4946
   aa3b8:   72aa6a20    movk    w0, #0x5351, lsl #16
   aa3bc:   f9000fe1    str x1, [sp, #24]
   aa3c0:   f9400fe1    ldr x1, [sp, #24]
   aa3c4:   b9400021    ldr w1, [x1]
   aa3c8:   6b00003f    cmp w1, w0
   aa3cc:   54000221    b.ne    aa410 <CInterruptSystem::DisconnectFIQ()+0xb0>
   aa3d0:   39404044    ldrb    w4, [x2, #16]
   aa3d4:   39404441    ldrb    w1, [x2, #17]
   aa3d8:   39404840    ldrb    w0, [x2, #18]
   aa3dc:   39404c43    ldrb    w3, [x2, #19]
   aa3e0:   aa012081    orr x1, x4, x1, lsl #8
   aa3e4:   aa004020    orr x0, x1, x0, lsl #16
   aa3e8:   aa036003    orr x3, x0, x3, lsl #24
   aa3ec:   b4000123    cbz x3, aa410 <CInterruptSystem::DisconnectFIQ()+0xb0>
   aa3f0:   d2800024    mov x4, #0x1
   aa3f4:   aa0403e0    mov x0, x4
   aa3f8:   aa0303e1    mov x1, x3
   aa3fc:   d4000003    smc #0x0
   aa400:   3900405f    strb    wzr, [x2, #16]
   aa404:   3900445f    strb    wzr, [x2, #17]
   aa408:   3900485f    strb    wzr, [x2, #18]
   aa40c:   39004c5f    strb    wzr, [x2, #19]
   aa410:   392180bf    strb    wzr, [x5, #2144]
   aa414:   3900045f    strb    wzr, [x2, #1]
   aa418:   3900085f    strb    wzr, [x2, #2]
   aa41c:   39000c5f    strb    wzr, [x2, #3]
   aa420:   3900105f    strb    wzr, [x2, #4]
   aa424:   3900145f    strb    wzr, [x2, #5]
   aa428:   3900185f    strb    wzr, [x2, #6]
   aa42c:   39001c5f    strb    wzr, [x2, #7]
   aa430:   3900205f    strb    wzr, [x2, #8]
   aa434:   3900245f    strb    wzr, [x2, #9]
   aa438:   3900285f    strb    wzr, [x2, #10]
   aa43c:   39002c5f    strb    wzr, [x2, #11]
   aa440:   3900305f    strb    wzr, [x2, #12]
   aa444:   3900345f    strb    wzr, [x2, #13]
   aa448:   3900385f    strb    wzr, [x2, #14]
   aa44c:   39003c5f    strb    wzr, [x2, #15]
   aa450:   a8c27bfd    ldp x29, x30, [sp], #32
   aa454:   d65f03c0    ret
   aa458:   b0000041    adrp    x1, b3000 <_etext+0x3f9c>
   aa45c:   b0000040    adrp    x0, b3000 <_etext+0x3f9c>
   aa460:   91250021    add x1, x1, #0x940
   aa464:   9126c000    add x0, x0, #0x9b0
   aa468:   52801a82    mov w2, #0xd4
   aa46c:   97ffc995    bl  9cac0 <assertion_failed>

00000000000aa470 <CInterruptSystem::EnableIRQ(unsigned int)>:
   aa470:   7103fc1f    cmp w0, #0xff
   aa474:   54000128    b.hi    aa498 <CInterruptSystem::EnableIRQ(unsigned int)+0x28>
   aa478:   52808801    mov w1, #0x440
   aa47c:   72a7fc21    movk    w1, #0x3fe1, lsl #16
   aa480:   0b401421    add w1, w1, w0, lsr #5
   aa484:   52800022    mov w2, #0x1
   aa488:   1ac02042    lsl w2, w2, w0
   aa48c:   531e7420    lsl w0, w1, #2
   aa490:   b9000002    str w2, [x0]
   aa494:   d65f03c0    ret
   aa498:   b0000041    adrp    x1, b3000 <_etext+0x3f9c>
   aa49c:   b0000040    adrp    x0, b3000 <_etext+0x3f9c>
   aa4a0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   aa4a4:   91250021    add x1, x1, #0x940
   aa4a8:   910003fd    mov x29, sp
   aa4ac:   91256000    add x0, x0, #0x958
   aa4b0:   52801bc2    mov w2, #0xde
   aa4b4:   97ffc983    bl  9cac0 <assertion_failed>
   aa4b8:   d503201f    nop
   aa4bc:   d503201f    nop

00000000000aa4c0 <CInterruptSystem::DisableIRQ(unsigned int)>:
   aa4c0:   7103fc1f    cmp w0, #0xff
   aa4c4:   54000128    b.hi    aa4e8 <CInterruptSystem::DisableIRQ(unsigned int)+0x28>
   aa4c8:   52808c01    mov w1, #0x460
   aa4cc:   72a7fc21    movk    w1, #0x3fe1, lsl #16
   aa4d0:   0b401421    add w1, w1, w0, lsr #5
   aa4d4:   52800022    mov w2, #0x1
   aa4d8:   1ac02042    lsl w2, w2, w0
   aa4dc:   531e7420    lsl w0, w1, #2
   aa4e0:   b9000002    str w2, [x0]
   aa4e4:   d65f03c0    ret
   aa4e8:   b0000041    adrp    x1, b3000 <_etext+0x3f9c>
   aa4ec:   b0000040    adrp    x0, b3000 <_etext+0x3f9c>
   aa4f0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   aa4f4:   91250021    add x1, x1, #0x940
   aa4f8:   910003fd    mov x29, sp
   aa4fc:   91256000    add x0, x0, #0x958
   aa500:   52801ca2    mov w2, #0xe5
   aa504:   97ffc96f    bl  9cac0 <assertion_failed>
   aa508:   d503201f    nop
   aa50c:   d503201f    nop

00000000000aa510 <CInterruptSystem::EnableFIQ(unsigned int)>:
   aa510:   d2801a82    mov x2, #0xd4
   aa514:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   aa518:   910003fd    mov x29, sp
   aa51c:   528928c1    mov w1, #0x4946
   aa520:   72aa6a21    movk    w1, #0x5351, lsl #16
   aa524:   f9000bf3    str x19, [sp, #16]
   aa528:   2a0003f3    mov w19, w0
   aa52c:   f90017e2    str x2, [sp, #40]
   aa530:   f94017e0    ldr x0, [sp, #40]
   aa534:   b9400000    ldr w0, [x0]
   aa538:   6b01001f    cmp w0, w1
   aa53c:   54000100    b.eq    aa55c <CInterruptSystem::EnableFIQ(unsigned int)+0x4c>
   aa540:   97ffd430    bl  9f600 <CLogger::Get()>
   aa544:   b0000043    adrp    x3, b3000 <_etext+0x3f9c>
   aa548:   b0000041    adrp    x1, b3000 <_etext+0x3f9c>
   aa54c:   91272063    add x3, x3, #0x9c8
   aa550:   9127c021    add x1, x1, #0x9f0
   aa554:   52800002    mov w2, #0x0
   aa558:   97ffd612    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   aa55c:   71003e7f    cmp w19, #0xf
   aa560:   54000289    b.ls    aa5b0 <CInterruptSystem::EnableFIQ(unsigned int)+0xa0>
   aa564:   7103fe7f    cmp w19, #0xff
   aa568:   54000308    b.hi    aa5c8 <CInterruptSystem::EnableFIQ(unsigned int)+0xb8>
   aa56c:   d3483e65    ubfx    x5, x19, #8, #8
   aa570:   d3505e64    ubfx    x4, x19, #16, #8
   aa574:   53187e61    lsr w1, w19, #24
   aa578:   90000080    adrp    x0, ba000 <font_data+0x1080>
   aa57c:   91218000    add x0, x0, #0x860
   aa580:   2a1303e3    mov w3, w19
   aa584:   d2800002    mov x2, #0x0
   aa588:   39004013    strb    w19, [x0, #16]
   aa58c:   39004405    strb    w5, [x0, #17]
   aa590:   39004804    strb    w4, [x0, #18]
   aa594:   39004c01    strb    w1, [x0, #19]
   aa598:   aa0203e0    mov x0, x2
   aa59c:   aa0303e1    mov x1, x3
   aa5a0:   d4000003    smc #0x0
   aa5a4:   f9400bf3    ldr x19, [sp, #16]
   aa5a8:   a8c37bfd    ldp x29, x30, [sp], #48
   aa5ac:   d65f03c0    ret
   aa5b0:   b0000041    adrp    x1, b3000 <_etext+0x3f9c>
   aa5b4:   b0000040    adrp    x0, b3000 <_etext+0x3f9c>
   aa5b8:   91250021    add x1, x1, #0x940
   aa5bc:   9127e000    add x0, x0, #0x9f8
   aa5c0:   52801e82    mov w2, #0xf4
   aa5c4:   97ffc93f    bl  9cac0 <assertion_failed>
   aa5c8:   b0000041    adrp    x1, b3000 <_etext+0x3f9c>
   aa5cc:   b0000040    adrp    x0, b3000 <_etext+0x3f9c>
   aa5d0:   91250021    add x1, x1, #0x940
   aa5d4:   91282000    add x0, x0, #0xa08
   aa5d8:   52801ea2    mov w2, #0xf5
   aa5dc:   97ffc939    bl  9cac0 <assertion_failed>

00000000000aa5e0 <CInterruptSystem::ConnectFIQ(unsigned int, void (*)(void*), void*)>:
   aa5e0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   aa5e4:   7104003f    cmp w1, #0x100
   aa5e8:   910003fd    mov x29, sp
   aa5ec:   540006a8    b.hi    aa6c0 <CInterruptSystem::ConnectFIQ(unsigned int, void (*)(void*), void*)+0xe0>
   aa5f0:   b4000742    cbz x2, aa6d8 <CInterruptSystem::ConnectFIQ(unsigned int, void (*)(void*), void*)+0xf8>
   aa5f4:   90000089    adrp    x9, ba000 <font_data+0x1080>
   aa5f8:   91218124    add x4, x9, #0x860
   aa5fc:   39400487    ldrb    w7, [x4, #1]
   aa600:   2a0103e0    mov w0, w1
   aa604:   39618121    ldrb    w1, [x9, #2144]
   aa608:   39400886    ldrb    w6, [x4, #2]
   aa60c:   39400c85    ldrb    w5, [x4, #3]
   aa610:   aa072027    orr x7, x1, x7, lsl #8
   aa614:   39401088    ldrb    w8, [x4, #4]
   aa618:   aa0640e6    orr x6, x7, x6, lsl #16
   aa61c:   39401487    ldrb    w7, [x4, #5]
   aa620:   aa0560c5    orr x5, x6, x5, lsl #24
   aa624:   39401886    ldrb    w6, [x4, #6]
   aa628:   aa0880a8    orr x8, x5, x8, lsl #32
   aa62c:   39401c85    ldrb    w5, [x4, #7]
   aa630:   aa07a107    orr x7, x8, x7, lsl #40
   aa634:   aa06c0e6    orr x6, x7, x6, lsl #48
   aa638:   aa05e0c5    orr x5, x6, x5, lsl #56
   aa63c:   b50005a5    cbnz    x5, aa6f0 <CInterruptSystem::ConnectFIQ(unsigned int, void (*)(void*), void*)+0x110>
   aa640:   53083c47    ubfx    w7, w2, #8, #8
   aa644:   53105c46    ubfx    w6, w2, #16, #8
   aa648:   39218122    strb    w2, [x9, #2144]
   aa64c:   53187c45    lsr w5, w2, #24
   aa650:   d3609c41    ubfx    x1, x2, #32, #8
   aa654:   39002083    strb    w3, [x4, #8]
   aa658:   d368bc4b    ubfx    x11, x2, #40, #8
   aa65c:   d370dc4a    ubfx    x10, x2, #48, #8
   aa660:   39000487    strb    w7, [x4, #1]
   aa664:   53083c69    ubfx    w9, w3, #8, #8
   aa668:   53105c68    ubfx    w8, w3, #16, #8
   aa66c:   39000886    strb    w6, [x4, #2]
   aa670:   53187c67    lsr w7, w3, #24
   aa674:   d3609c66    ubfx    x6, x3, #32, #8
   aa678:   39000c85    strb    w5, [x4, #3]
   aa67c:   d378fc42    lsr x2, x2, #56
   aa680:   d368bc65    ubfx    x5, x3, #40, #8
   aa684:   39001081    strb    w1, [x4, #4]
   aa688:   d370dc61    ubfx    x1, x3, #48, #8
   aa68c:   d378fc63    lsr x3, x3, #56
   aa690:   3900148b    strb    w11, [x4, #5]
   aa694:   3900188a    strb    w10, [x4, #6]
   aa698:   39001c82    strb    w2, [x4, #7]
   aa69c:   39002489    strb    w9, [x4, #9]
   aa6a0:   39002888    strb    w8, [x4, #10]
   aa6a4:   39002c87    strb    w7, [x4, #11]
   aa6a8:   39003086    strb    w6, [x4, #12]
   aa6ac:   39003485    strb    w5, [x4, #13]
   aa6b0:   39003881    strb    w1, [x4, #14]
   aa6b4:   39003c83    strb    w3, [x4, #15]
   aa6b8:   a8c17bfd    ldp x29, x30, [sp], #16
   aa6bc:   17ffff95    b   aa510 <CInterruptSystem::EnableFIQ(unsigned int)>
   aa6c0:   b0000041    adrp    x1, b3000 <_etext+0x3f9c>
   aa6c4:   b0000040    adrp    x0, b3000 <_etext+0x3f9c>
   aa6c8:   91250021    add x1, x1, #0x940
   aa6cc:   91288000    add x0, x0, #0xa20
   aa6d0:   52801902    mov w2, #0xc8
   aa6d4:   97ffc8fb    bl  9cac0 <assertion_failed>
   aa6d8:   b0000041    adrp    x1, b3000 <_etext+0x3f9c>
   aa6dc:   b0000040    adrp    x0, b3000 <_etext+0x3f9c>
   aa6e0:   91250021    add x1, x1, #0x940
   aa6e4:   9126e000    add x0, x0, #0x9b8
   aa6e8:   52801922    mov w2, #0xc9
   aa6ec:   97ffc8f5    bl  9cac0 <assertion_failed>
   aa6f0:   b0000041    adrp    x1, b3000 <_etext+0x3f9c>
   aa6f4:   b0000040    adrp    x0, b3000 <_etext+0x3f9c>
   aa6f8:   91250021    add x1, x1, #0x940
   aa6fc:   9128e000    add x0, x0, #0xa38
   aa700:   52801942    mov w2, #0xca
   aa704:   97ffc8ef    bl  9cac0 <assertion_failed>
   aa708:   d503201f    nop
   aa70c:   d503201f    nop

00000000000aa710 <CInterruptSystem::DisableFIQ()>:
   aa710:   d10043ff    sub sp, sp, #0x10
   aa714:   d2801a81    mov x1, #0xd4
   aa718:   528928c0    mov w0, #0x4946
   aa71c:   72aa6a20    movk    w0, #0x5351, lsl #16
   aa720:   f90007e1    str x1, [sp, #8]
   aa724:   f94007e1    ldr x1, [sp, #8]
   aa728:   b9400021    ldr w1, [x1]
   aa72c:   6b00003f    cmp w1, w0
   aa730:   54000261    b.ne    aa77c <CInterruptSystem::DisableFIQ()+0x6c>
   aa734:   90000082    adrp    x2, ba000 <font_data+0x1080>
   aa738:   91218042    add x2, x2, #0x860
   aa73c:   39404044    ldrb    w4, [x2, #16]
   aa740:   39404441    ldrb    w1, [x2, #17]
   aa744:   39404840    ldrb    w0, [x2, #18]
   aa748:   39404c43    ldrb    w3, [x2, #19]
   aa74c:   aa012081    orr x1, x4, x1, lsl #8
   aa750:   aa004020    orr x0, x1, x0, lsl #16
   aa754:   aa036003    orr x3, x0, x3, lsl #24
   aa758:   b4000123    cbz x3, aa77c <CInterruptSystem::DisableFIQ()+0x6c>
   aa75c:   d2800024    mov x4, #0x1
   aa760:   aa0403e0    mov x0, x4
   aa764:   aa0303e1    mov x1, x3
   aa768:   d4000003    smc #0x0
   aa76c:   3900405f    strb    wzr, [x2, #16]
   aa770:   3900445f    strb    wzr, [x2, #17]
   aa774:   3900485f    strb    wzr, [x2, #18]
   aa778:   39004c5f    strb    wzr, [x2, #19]
   aa77c:   910043ff    add sp, sp, #0x10
   aa780:   d65f03c0    ret
   aa784:   d503201f    nop
   aa788:   d503201f    nop
   aa78c:   d503201f    nop

00000000000aa790 <CInterruptSystem::Get()>:
   aa790:   90000080    adrp    x0, ba000 <font_data+0x1080>
   aa794:   f9458c00    ldr x0, [x0, #2840]
   aa798:   b4000040    cbz x0, aa7a0 <CInterruptSystem::Get()+0x10>
   aa79c:   d65f03c0    ret
   aa7a0:   b0000041    adrp    x1, b3000 <_etext+0x3f9c>
   aa7a4:   b0000020    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   aa7a8:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   aa7ac:   91250021    add x1, x1, #0x940
   aa7b0:   910003fd    mov x29, sp
   aa7b4:   91020000    add x0, x0, #0x80
   aa7b8:   528021e2    mov w2, #0x10f
   aa7bc:   97ffc8c1    bl  9cac0 <assertion_failed>

00000000000aa7c0 <CInterruptSystem::CallIRQHandler(unsigned int)>:
   aa7c0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   aa7c4:   7103fc3f    cmp w1, #0xff
   aa7c8:   910003fd    mov x29, sp
   aa7cc:   54000268    b.hi    aa818 <CInterruptSystem::CallIRQHandler(unsigned int)+0x58>
   aa7d0:   f8615802    ldr x2, [x0, w1, uxtw #3]
   aa7d4:   8b214c00    add x0, x0, w1, uxtw #3
   aa7d8:   b40000c2    cbz x2, aa7f0 <CInterruptSystem::CallIRQHandler(unsigned int)+0x30>
   aa7dc:   f9440000    ldr x0, [x0, #2048]
   aa7e0:   d63f0040    blr x2
   aa7e4:   a8c17bfd    ldp x29, x30, [sp], #16
   aa7e8:   52800020    mov w0, #0x1
   aa7ec:   d65f03c0    ret
   aa7f0:   52808c02    mov w2, #0x460
   aa7f4:   72a7fc22    movk    w2, #0x3fe1, lsl #16
   aa7f8:   0b411442    add w2, w2, w1, lsr #5
   aa7fc:   52800023    mov w3, #0x1
   aa800:   52800000    mov w0, #0x0
   aa804:   1ac12063    lsl w3, w3, w1
   aa808:   531e7441    lsl w1, w2, #2
   aa80c:   b9000023    str w3, [x1]
   aa810:   a8c17bfd    ldp x29, x30, [sp], #16
   aa814:   d65f03c0    ret
   aa818:   b0000041    adrp    x1, b3000 <_etext+0x3f9c>
   aa81c:   b0000040    adrp    x0, b3000 <_etext+0x3f9c>
   aa820:   91250021    add x1, x1, #0x940
   aa824:   91256000    add x0, x0, #0x958
   aa828:   528022a2    mov w2, #0x115
   aa82c:   97ffc8a5    bl  9cac0 <assertion_failed>

00000000000aa830 <CInterruptSystem::InterruptHandler()>:
   aa830:   a9be7bfd    stp x29, x30, [sp, #-32]!
   aa834:   d2840180    mov x0, #0x200c
   aa838:   f2bff080    movk    x0, #0xff84, lsl #16
   aa83c:   910003fd    mov x29, sp
   aa840:   f9000bf3    str x19, [sp, #16]
   aa844:   b9400013    ldr w19, [x0]
   aa848:   7218067f    tst w19, #0x300
   aa84c:   12002661    and w1, w19, #0x3ff
   aa850:   540001a1    b.ne    aa884 <CInterruptSystem::InterruptHandler()+0x54>
   aa854:   721c167f    tst w19, #0x3f0
   aa858:   540000a0    b.eq    aa86c <CInterruptSystem::InterruptHandler()+0x3c>
   aa85c:   90000080    adrp    x0, ba000 <font_data+0x1080>
   aa860:   f9458c00    ldr x0, [x0, #2840]
   aa864:   b4000200    cbz x0, aa8a4 <CInterruptSystem::InterruptHandler()+0x74>
   aa868:   97ffffd6    bl  aa7c0 <CInterruptSystem::CallIRQHandler(unsigned int)>
   aa86c:   d2840200    mov x0, #0x2010
   aa870:   f2bff080    movk    x0, #0xff84, lsl #16
   aa874:   b9000013    str w19, [x0]
   aa878:   f9400bf3    ldr x19, [sp, #16]
   aa87c:   a8c27bfd    ldp x29, x30, [sp], #32
   aa880:   d65f03c0    ret
   aa884:   710fec3f    cmp w1, #0x3fb
   aa888:   54ffff88    b.hi    aa878 <CInterruptSystem::InterruptHandler()+0x48>
   aa88c:   b0000041    adrp    x1, b3000 <_etext+0x3f9c>
   aa890:   b0000040    adrp    x0, b3000 <_etext+0x3f9c>
   aa894:   91250021    add x1, x1, #0x940
   aa898:   91294000    add x0, x0, #0xa50
   aa89c:   52802842    mov w2, #0x142
   aa8a0:   97ffc888    bl  9cac0 <assertion_failed>
   aa8a4:   b0000041    adrp    x1, b3000 <_etext+0x3f9c>
   aa8a8:   b0000020    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   aa8ac:   91250021    add x1, x1, #0x940
   aa8b0:   91020000    add x0, x0, #0x80
   aa8b4:   52802602    mov w2, #0x130
   aa8b8:   97ffc882    bl  9cac0 <assertion_failed>
   aa8bc:   d503201f    nop

00000000000aa8c0 <InterruptHandler>:
   aa8c0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   aa8c4:   d2840180    mov x0, #0x200c
   aa8c8:   f2bff080    movk    x0, #0xff84, lsl #16
   aa8cc:   910003fd    mov x29, sp
   aa8d0:   f9000bf3    str x19, [sp, #16]
   aa8d4:   b9400013    ldr w19, [x0]
   aa8d8:   7218067f    tst w19, #0x300
   aa8dc:   12002661    and w1, w19, #0x3ff
   aa8e0:   540001a1    b.ne    aa914 <InterruptHandler+0x54>
   aa8e4:   721c167f    tst w19, #0x3f0
   aa8e8:   540000a0    b.eq    aa8fc <InterruptHandler+0x3c>
   aa8ec:   90000080    adrp    x0, ba000 <font_data+0x1080>
   aa8f0:   f9458c00    ldr x0, [x0, #2840]
   aa8f4:   b4000200    cbz x0, aa934 <InterruptHandler+0x74>
   aa8f8:   97ffffb2    bl  aa7c0 <CInterruptSystem::CallIRQHandler(unsigned int)>
   aa8fc:   d2840200    mov x0, #0x2010
   aa900:   f2bff080    movk    x0, #0xff84, lsl #16
   aa904:   b9000013    str w19, [x0]
   aa908:   f9400bf3    ldr x19, [sp, #16]
   aa90c:   a8c27bfd    ldp x29, x30, [sp], #32
   aa910:   d65f03c0    ret
   aa914:   710fec3f    cmp w1, #0x3fb
   aa918:   54ffff88    b.hi    aa908 <InterruptHandler+0x48>
   aa91c:   b0000041    adrp    x1, b3000 <_etext+0x3f9c>
   aa920:   b0000040    adrp    x0, b3000 <_etext+0x3f9c>
   aa924:   91250021    add x1, x1, #0x940
   aa928:   91294000    add x0, x0, #0xa50
   aa92c:   52802842    mov w2, #0x142
   aa930:   97ffc864    bl  9cac0 <assertion_failed>
   aa934:   b0000041    adrp    x1, b3000 <_etext+0x3f9c>
   aa938:   b0000020    adrp    x0, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   aa93c:   91250021    add x1, x1, #0x940
   aa940:   91020000    add x0, x0, #0x80
   aa944:   52802602    mov w2, #0x130
   aa948:   97ffc85e    bl  9cac0 <assertion_failed>
   aa94c:   d503201f    nop

00000000000aa950 <CInterruptSystem::InitializeSecondary()>:
   aa950:   52801e02    mov w2, #0xf0
   aa954:   d2840080    mov x0, #0x2004
   aa958:   f2bff080    movk    x0, #0xff84, lsl #16
   aa95c:   52800021    mov w1, #0x1
   aa960:   b9000002    str w2, [x0]
   aa964:   b81fc001    stur    w1, [x0, #-4]
   aa968:   d65f03c0    ret
   aa96c:   d503201f    nop

00000000000aa970 <CInterruptSystem::SendIPI(unsigned int, unsigned int)>:
   aa970:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   aa974:   71001c1f    cmp w0, #0x7
   aa978:   910003fd    mov x29, sp
   aa97c:   54000188    b.hi    aa9ac <CInterruptSystem::SendIPI(unsigned int, unsigned int)+0x3c>
   aa980:   71003c3f    cmp w1, #0xf
   aa984:   54000208    b.hi    aa9c4 <CInterruptSystem::SendIPI(unsigned int, unsigned int)+0x54>
   aa988:   52800022    mov w2, #0x1
   aa98c:   11004000    add w0, w0, #0x10
   aa990:   1ac02040    lsl w0, w2, w0
   aa994:   d283e002    mov x2, #0x1f00
   aa998:   f2bff082    movk    x2, #0xff84, lsl #16
   aa99c:   2a010001    orr w1, w0, w1
   aa9a0:   b9000041    str w1, [x2]
   aa9a4:   a8c17bfd    ldp x29, x30, [sp], #16
   aa9a8:   d65f03c0    ret
   aa9ac:   b0000041    adrp    x1, b3000 <_etext+0x3f9c>
   aa9b0:   b0000040    adrp    x0, b3000 <_etext+0x3f9c>
   aa9b4:   91250021    add x1, x1, #0x940
   aa9b8:   91298000    add x0, x0, #0xa60
   aa9bc:   52802aa2    mov w2, #0x155
   aa9c0:   97ffc840    bl  9cac0 <assertion_failed>
   aa9c4:   b0000041    adrp    x1, b3000 <_etext+0x3f9c>
   aa9c8:   b0000040    adrp    x0, b3000 <_etext+0x3f9c>
   aa9cc:   91250021    add x1, x1, #0x940
   aa9d0:   9129c000    add x0, x0, #0xa70
   aa9d4:   52802ac2    mov w2, #0x156
   aa9d8:   97ffc83a    bl  9cac0 <assertion_failed>
   aa9dc:   d503201f    nop

00000000000aa9e0 <CInterruptSystem::CallSecureMonitor(unsigned int, unsigned int)>:
   aa9e0:   2a0003e2    mov w2, w0
   aa9e4:   2a0103e3    mov w3, w1
   aa9e8:   aa0203e0    mov x0, x2
   aa9ec:   aa0303e1    mov x1, x3
   aa9f0:   d4000003    smc #0x0
   aa9f4:   d65f03c0    ret
   aa9f8:   d503201f    nop
   aa9fc:   d503201f    nop

00000000000aaa00 <CInterruptSystem::SecureMonitorHandler(unsigned int, unsigned int)>:
   aaa00:   53057c22    lsr w2, w1, #5
   aaa04:   121e7424    and w4, w1, #0xfffffffc
   aaa08:   531d0425    ubfiz   w5, w1, #3, #2
   aaa0c:   52828007    mov w7, #0x1400
   aaa10:   72bff087    movk    w7, #0xff84, lsl #16
   aaa14:   52800026    mov w6, #0x1
   aaa18:   52801fe3    mov w3, #0xff
   aaa1c:   531e7442    lsl w2, w2, #2
   aaa20:   0b070084    add w4, w4, w7
   aaa24:   1ac120c1    lsl w1, w6, w1
   aaa28:   1ac52063    lsl w3, w3, w5
   aaa2c:   350002c0    cbnz    w0, aaa84 <CInterruptSystem::SecureMonitorHandler(unsigned int, unsigned int)+0x84>
   aaa30:   d2820006    mov x6, #0x1000
   aaa34:   f2bff086    movk    x6, #0xff84, lsl #16
   aaa38:   52800068    mov w8, #0x3
   aaa3c:   52800167    mov w7, #0xb
   aaa40:   515ef840    sub w0, w2, #0x7be, lsl #12
   aaa44:   515ef842    sub w2, w2, #0x7be, lsl #12
   aaa48:   513e0000    sub w0, w0, #0xf80
   aaa4c:   b90000c8    str w8, [x6]
   aaa50:   513c0042    sub w2, w2, #0xf00
   aaa54:   b91000c7    str w7, [x6, #4096]
   aaa58:   52800806    mov w6, #0x40
   aaa5c:   b9400007    ldr w7, [x0]
   aaa60:   1ac520c5    lsl w5, w6, w5
   aaa64:   0a2100e6    bic w6, w7, w1
   aaa68:   b9000006    str w6, [x0]
   aaa6c:   b9400080    ldr w0, [x4]
   aaa70:   0a230003    bic w3, w0, w3
   aaa74:   2a050063    orr w3, w3, w5
   aaa78:   b9000083    str w3, [x4]
   aaa7c:   b9000041    str w1, [x2]
   aaa80:   d65f03c0    ret
   aaa84:   7100041f    cmp w0, #0x1
   aaa88:   54ffffc1    b.ne    aaa80 <CInterruptSystem::SecureMonitorHandler(unsigned int, unsigned int)+0x80>
   aaa8c:   515ef846    sub w6, w2, #0x7be, lsl #12
   aaa90:   52801400    mov w0, #0xa0
   aaa94:   513a00c6    sub w6, w6, #0xe80
   aaa98:   1ac52000    lsl w0, w0, w5
   aaa9c:   515ef842    sub w2, w2, #0x7be, lsl #12
   aaaa0:   52800045    mov w5, #0x2
   aaaa4:   b90000c1    str w1, [x6]
   aaaa8:   513e0042    sub w2, w2, #0xf80
   aaaac:   d2840006    mov x6, #0x2000
   aaab0:   f2bff086    movk    x6, #0xff84, lsl #16
   aaab4:   b9400088    ldr w8, [x4]
   aaab8:   d14004c7    sub x7, x6, #0x1, lsl #12
   aaabc:   0a230103    bic w3, w8, w3
   aaac0:   2a000063    orr w3, w3, w0
   aaac4:   b9000083    str w3, [x4]
   aaac8:   b9400040    ldr w0, [x2]
   aaacc:   2a000021    orr w1, w1, w0
   aaad0:   b9000041    str w1, [x2]
   aaad4:   b90000c5    str w5, [x6]
   aaad8:   b90000e5    str w5, [x7]
   aaadc:   d65f03c0    ret

00000000000aaae0 <SecureMonitorHandler>:
   aaae0:   17ffffc8    b   aaa00 <CInterruptSystem::SecureMonitorHandler(unsigned int, unsigned int)>
    ...

00000000000aaaf0 <CDeviceTreeBlob::CDeviceTreeBlob(void const*)>:
   aaaf0:   f900001f    str xzr, [x0]
   aaaf4:   b40006c1    cbz x1, aabcc <CDeviceTreeBlob::CDeviceTreeBlob(void const*)+0xdc>
   aaaf8:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   aaafc:   910003fd    mov x29, sp
   aab00:   39400024    ldrb    w4, [x1]
   aab04:   a90153f3    stp x19, x20, [sp, #16]
   aab08:   aa0103f3    mov x19, x1
   aab0c:   aa0003f4    mov x20, x0
   aab10:   5281ba00    mov w0, #0xdd0
   aab14:   72bdbfc0    movk    w0, #0xedfe, lsl #16
   aab18:   39400423    ldrb    w3, [x1, #1]
   aab1c:   39400822    ldrb    w2, [x1, #2]
   aab20:   39400c21    ldrb    w1, [x1, #3]
   aab24:   aa032083    orr x3, x4, x3, lsl #8
   aab28:   aa024062    orr x2, x3, x2, lsl #16
   aab2c:   aa016041    orr x1, x2, x1, lsl #24
   aab30:   6b00003f    cmp w1, w0
   aab34:   54000301    b.ne    aab94 <CDeviceTreeBlob::CDeviceTreeBlob(void const*)+0xa4>
   aab38:   39406264    ldrb    w4, [x19, #24]
   aab3c:   52a20003    mov w3, #0x10000000
   aab40:   39406662    ldrb    w2, [x19, #25]
   aab44:   39406a61    ldrb    w1, [x19, #26]
   aab48:   39406e60    ldrb    w0, [x19, #27]
   aab4c:   aa022082    orr x2, x4, x2, lsl #8
   aab50:   aa014041    orr x1, x2, x1, lsl #16
   aab54:   aa006020    orr x0, x1, x0, lsl #24
   aab58:   6b03001f    cmp w0, w3
   aab5c:   540001c1    b.ne    aab94 <CDeviceTreeBlob::CDeviceTreeBlob(void const*)+0xa4>
   aab60:   39401264    ldrb    w4, [x19, #4]
   aab64:   529ffb03    mov w3, #0xffd8
   aab68:   72a001e3    movk    w3, #0xf, lsl #16
   aab6c:   39401661    ldrb    w1, [x19, #5]
   aab70:   39401a60    ldrb    w0, [x19, #6]
   aab74:   39401e62    ldrb    w2, [x19, #7]
   aab78:   aa012081    orr x1, x4, x1, lsl #8
   aab7c:   aa004020    orr x0, x1, x0, lsl #16
   aab80:   aa026002    orr x2, x0, x2, lsl #24
   aab84:   5ac00842    rev w2, w2
   aab88:   5100a040    sub w0, w2, #0x28
   aab8c:   6b03001f    cmp w0, w3
   aab90:   54000089    b.ls    aaba0 <CDeviceTreeBlob::CDeviceTreeBlob(void const*)+0xb0>
   aab94:   a94153f3    ldp x19, x20, [sp, #16]
   aab98:   a8c37bfd    ldp x29, x30, [sp], #48
   aab9c:   d65f03c0    ret
   aaba0:   f90013f5    str x21, [sp, #32]
   aaba4:   2a0203f5    mov w21, w2
   aaba8:   aa1503e0    mov x0, x21
   aabac:   97fff30d    bl  a77e0 <operator new[](unsigned long)>
   aabb0:   aa1503e2    mov x2, x21
   aabb4:   f94013f5    ldr x21, [sp, #32]
   aabb8:   aa1303e1    mov x1, x19
   aabbc:   f9000280    str x0, [x20]
   aabc0:   a94153f3    ldp x19, x20, [sp, #16]
   aabc4:   a8c37bfd    ldp x29, x30, [sp], #48
   aabc8:   17fff06c    b   a6d78 <memcpy>
   aabcc:   d65f03c0    ret

00000000000aabd0 <CDeviceTreeBlob::~CDeviceTreeBlob()>:
   aabd0:   f9400000    ldr x0, [x0]
   aabd4:   b4000040    cbz x0, aabdc <CDeviceTreeBlob::~CDeviceTreeBlob()+0xc>
   aabd8:   17fff316    b   a7830 <operator delete[](void*)>
   aabdc:   d65f03c0    ret

00000000000aabe0 <CDeviceTreeBlob::FindNodeInternal(char const*, TDeviceTreeNode const*, TDeviceTreeNode const**) const>:
   aabe0:   a9bb7bfd    stp x29, x30, [sp, #-80]!
   aabe4:   910003fd    mov x29, sp
   aabe8:   a90153f3    stp x19, x20, [sp, #16]
   aabec:   aa0003f4    mov x20, x0
   aabf0:   aa0203f3    mov x19, x2
   aabf4:   a9025bf5    stp x21, x22, [sp, #32]
   aabf8:   aa0103f6    mov x22, x1
   aabfc:   aa0303f5    mov x21, x3
   aac00:   a90363f7    stp x23, x24, [sp, #48]
   aac04:   b40007f6    cbz x22, aad00 <CDeviceTreeBlob::FindNodeInternal(char const*, TDeviceTreeNode const*, TDeviceTreeNode const**) const+0x120>
   aac08:   f9400280    ldr x0, [x20]
   aac0c:   b40018c0    cbz x0, aaf24 <CDeviceTreeBlob::FindNodeInternal(char const*, TDeviceTreeNode const*, TDeviceTreeNode const**) const+0x344>
   aac10:   b4000853    cbz x19, aad18 <CDeviceTreeBlob::FindNodeInternal(char const*, TDeviceTreeNode const*, TDeviceTreeNode const**) const+0x138>
   aac14:   39400264    ldrb    w4, [x19]
   aac18:   52a08002    mov w2, #0x4000000
   aac1c:   39400661    ldrb    w1, [x19, #1]
   aac20:   39400a60    ldrb    w0, [x19, #2]
   aac24:   39400e63    ldrb    w3, [x19, #3]
   aac28:   aa012081    orr x1, x4, x1, lsl #8
   aac2c:   aa004020    orr x0, x1, x0, lsl #16
   aac30:   aa036003    orr x3, x0, x3, lsl #24
   aac34:   6b02007f    cmp w3, w2
   aac38:   2a0303e2    mov w2, w3
   aac3c:   54000141    b.ne    aac64 <CDeviceTreeBlob::FindNodeInternal(char const*, TDeviceTreeNode const*, TDeviceTreeNode const**) const+0x84>
   aac40:   38404e60    ldrb    w0, [x19, #4]!
   aac44:   39400666    ldrb    w6, [x19, #1]
   aac48:   39400a65    ldrb    w5, [x19, #2]
   aac4c:   39400e62    ldrb    w2, [x19, #3]
   aac50:   aa062006    orr x6, x0, x6, lsl #8
   aac54:   aa0540c5    orr x5, x6, x5, lsl #16
   aac58:   aa0260a2    orr x2, x5, x2, lsl #24
   aac5c:   6b03005f    cmp w2, w3
   aac60:   54ffff00    b.eq    aac40 <CDeviceTreeBlob::FindNodeInternal(char const*, TDeviceTreeNode const*, TDeviceTreeNode const**) const+0x60>
   aac64:   52a02000    mov w0, #0x1000000
   aac68:   6b00005f    cmp w2, w0
   aac6c:   540010c1    b.ne    aae84 <CDeviceTreeBlob::FindNodeInternal(char const*, TDeviceTreeNode const*, TDeviceTreeNode const**) const+0x2a4>
   aac70:   39c002c0    ldrsb   w0, [x22]
   aac74:   35000100    cbnz    w0, aac94 <CDeviceTreeBlob::FindNodeInternal(char const*, TDeviceTreeNode const*, TDeviceTreeNode const**) const+0xb4>
   aac78:   aa1303e0    mov x0, x19
   aac7c:   910003bf    mov sp, x29
   aac80:   a94153f3    ldp x19, x20, [sp, #16]
   aac84:   a9425bf5    ldp x21, x22, [sp, #32]
   aac88:   a94363f7    ldp x23, x24, [sp, #48]
   aac8c:   a8c57bfd    ldp x29, x30, [sp], #80
   aac90:   d65f03c0    ret
   aac94:   528005e1    mov w1, #0x2f
   aac98:   aa1603e0    mov x0, x22
   aac9c:   97ffef61    bl  a6a20 <strchr>
   aaca0:   b4001140    cbz x0, aaec8 <CDeviceTreeBlob::FindNodeInternal(char const*, TDeviceTreeNode const*, TDeviceTreeNode const**) const+0x2e8>
   aaca4:   cb160017    sub x23, x0, x22
   aaca8:   b4001197    cbz x23, aaed8 <CDeviceTreeBlob::FindNodeInternal(char const*, TDeviceTreeNode const*, TDeviceTreeNode const**) const+0x2f8>
   aacac:   910042e0    add x0, x23, #0x10
   aacb0:   aa1603e1    mov x1, x22
   aacb4:   927cec00    and x0, x0, #0xfffffffffffffff0
   aacb8:   aa1703e2    mov x2, x23
   aacbc:   cb2063ff    sub sp, sp, x0
   aacc0:   91001278    add x24, x19, #0x4
   aacc4:   910003e0    mov x0, sp
   aacc8:   97fff02c    bl  a6d78 <memcpy>
   aaccc:   910003e1    mov x1, sp
   aacd0:   aa1803e0    mov x0, x24
   aacd4:   38376bff    strb    wzr, [sp, x23]
   aacd8:   97ffeea6    bl  a6770 <strcmp>
   aacdc:   350003a0    cbnz    w0, aad50 <CDeviceTreeBlob::FindNodeInternal(char const*, TDeviceTreeNode const*, TDeviceTreeNode const**) const+0x170>
   aace0:   38f76ac0    ldrsb   w0, [x22, x23]
   aace4:   8b1702d7    add x23, x22, x23
   aace8:   7100bc1f    cmp w0, #0x2f
   aacec:   54fffc61    b.ne    aac78 <CDeviceTreeBlob::FindNodeInternal(char const*, TDeviceTreeNode const*, TDeviceTreeNode const**) const+0x98>
   aacf0:   910006f6    add x22, x23, #0x1
   aacf4:   d2800015    mov x21, #0x0
   aacf8:   b5fff896    cbnz    x22, aac08 <CDeviceTreeBlob::FindNodeInternal(char const*, TDeviceTreeNode const*, TDeviceTreeNode const**) const+0x28>
   aacfc:   d503201f    nop
   aad00:   b0000041    adrp    x1, b3000 <_etext+0x3f9c>
   aad04:   b0000040    adrp    x0, b3000 <_etext+0x3f9c>
   aad08:   912a0021    add x1, x1, #0xa80
   aad0c:   912a6000    add x0, x0, #0xa98
   aad10:   52801082    mov w2, #0x84
   aad14:   97ffc76b    bl  9cac0 <assertion_failed>
   aad18:   39402003    ldrb    w3, [x0, #8]
   aad1c:   39402402    ldrb    w2, [x0, #9]
   aad20:   39402801    ldrb    w1, [x0, #10]
   aad24:   39402c13    ldrb    w19, [x0, #11]
   aad28:   aa022062    orr x2, x3, x2, lsl #8
   aad2c:   39c002c3    ldrsb   w3, [x22]
   aad30:   aa014041    orr x1, x2, x1, lsl #16
   aad34:   aa136033    orr x19, x1, x19, lsl #24
   aad38:   7100bc7f    cmp w3, #0x2f
   aad3c:   5ac00a73    rev w19, w19
   aad40:   8b130013    add x19, x0, x19
   aad44:   54000dc1    b.ne    aaefc <CDeviceTreeBlob::FindNodeInternal(char const*, TDeviceTreeNode const*, TDeviceTreeNode const**) const+0x31c>
   aad48:   910006d6    add x22, x22, #0x1
   aad4c:   17ffffb2    b   aac14 <CDeviceTreeBlob::FindNodeInternal(char const*, TDeviceTreeNode const*, TDeviceTreeNode const**) const+0x34>
   aad50:   aa1803e0    mov x0, x24
   aad54:   97ffee7b    bl  a6740 <strlen>
   aad58:   91001001    add x1, x0, #0x4
   aad5c:   927ef421    and x1, x1, #0xfffffffffffffffc
   aad60:   38616b04    ldrb    w4, [x24, x1]
   aad64:   8b010300    add x0, x24, x1
   aad68:   14000011    b   aadac <CDeviceTreeBlob::FindNodeInternal(char const*, TDeviceTreeNode const*, TDeviceTreeNode const**) const+0x1cc>
   aad6c:   7100103f    cmp w1, #0x4
   aad70:   d2800081    mov x1, #0x4
   aad74:   54000180    b.eq    aada4 <CDeviceTreeBlob::FindNodeInternal(char const*, TDeviceTreeNode const*, TDeviceTreeNode const**) const+0x1c4>
   aad78:   39401004    ldrb    w4, [x0, #4]
   aad7c:   39401403    ldrb    w3, [x0, #5]
   aad80:   39401802    ldrb    w2, [x0, #6]
   aad84:   39401c01    ldrb    w1, [x0, #7]
   aad88:   aa032083    orr x3, x4, x3, lsl #8
   aad8c:   aa024062    orr x2, x3, x2, lsl #16
   aad90:   aa016041    orr x1, x2, x1, lsl #24
   aad94:   5ac00821    rev w1, w1
   aad98:   11000c21    add w1, w1, #0x3
   aad9c:   927e7421    and x1, x1, #0xfffffffc
   aada0:   91003021    add x1, x1, #0xc
   aada4:   8b010000    add x0, x0, x1
   aada8:   39400004    ldrb    w4, [x0]
   aadac:   39400403    ldrb    w3, [x0, #1]
   aadb0:   39400801    ldrb    w1, [x0, #2]
   aadb4:   39400c02    ldrb    w2, [x0, #3]
   aadb8:   aa032083    orr x3, x4, x3, lsl #8
   aadbc:   aa014061    orr x1, x3, x1, lsl #16
   aadc0:   aa026022    orr x2, x1, x2, lsl #24
   aadc4:   5ac00841    rev w1, w2
   aadc8:   51000c23    sub w3, w1, #0x3
   aadcc:   7100047f    cmp w3, #0x1
   aadd0:   54fffce9    b.ls    aad6c <CDeviceTreeBlob::FindNodeInternal(char const*, TDeviceTreeNode const*, TDeviceTreeNode const**) const+0x18c>
   aadd4:   52a02003    mov w3, #0x1000000
   aadd8:   6b03005f    cmp w2, w3
   aaddc:   54000461    b.ne    aae68 <CDeviceTreeBlob::FindNodeInternal(char const*, TDeviceTreeNode const*, TDeviceTreeNode const**) const+0x288>
   aade0:   52a02017    mov w23, #0x1000000
   aade4:   aa0003e2    mov x2, x0
   aade8:   910123a3    add x3, x29, #0x48
   aadec:   f90027bf    str xzr, [x29, #72]
   aadf0:   aa1603e1    mov x1, x22
   aadf4:   aa1403e0    mov x0, x20
   aadf8:   97ffff7a    bl  aabe0 <CDeviceTreeBlob::FindNodeInternal(char const*, TDeviceTreeNode const*, TDeviceTreeNode const**) const>
   aadfc:   b5fff400    cbnz    x0, aac7c <CDeviceTreeBlob::FindNodeInternal(char const*, TDeviceTreeNode const*, TDeviceTreeNode const**) const+0x9c>
   aae00:   f94027a0    ldr x0, [x29, #72]
   aae04:   b4fff3c0    cbz x0, aac7c <CDeviceTreeBlob::FindNodeInternal(char const*, TDeviceTreeNode const*, TDeviceTreeNode const**) const+0x9c>
   aae08:   39400004    ldrb    w4, [x0]
   aae0c:   39400403    ldrb    w3, [x0, #1]
   aae10:   39400802    ldrb    w2, [x0, #2]
   aae14:   39400c01    ldrb    w1, [x0, #3]
   aae18:   aa032083    orr x3, x4, x3, lsl #8
   aae1c:   aa024062    orr x2, x3, x2, lsl #16
   aae20:   aa016041    orr x1, x2, x1, lsl #24
   aae24:   6b17003f    cmp w1, w23
   aae28:   54fffde0    b.eq    aade4 <CDeviceTreeBlob::FindNodeInternal(char const*, TDeviceTreeNode const*, TDeviceTreeNode const**) const+0x204>
   aae2c:   52a08002    mov w2, #0x4000000
   aae30:   2a0103e5    mov w5, w1
   aae34:   6b02003f    cmp w1, w2
   aae38:   54000161    b.ne    aae64 <CDeviceTreeBlob::FindNodeInternal(char const*, TDeviceTreeNode const*, TDeviceTreeNode const**) const+0x284>
   aae3c:   d503201f    nop
   aae40:   38404c04    ldrb    w4, [x0, #4]!
   aae44:   39400403    ldrb    w3, [x0, #1]
   aae48:   39400802    ldrb    w2, [x0, #2]
   aae4c:   39400c01    ldrb    w1, [x0, #3]
   aae50:   aa032083    orr x3, x4, x3, lsl #8
   aae54:   aa024062    orr x2, x3, x2, lsl #16
   aae58:   aa016041    orr x1, x2, x1, lsl #24
   aae5c:   6b05003f    cmp w1, w5
   aae60:   54ffff00    b.eq    aae40 <CDeviceTreeBlob::FindNodeInternal(char const*, TDeviceTreeNode const*, TDeviceTreeNode const**) const+0x260>
   aae64:   5ac00821    rev w1, w1
   aae68:   f10002bf    cmp x21, #0x0
   aae6c:   7a421820    ccmp    w1, #0x2, #0x0, ne
   aae70:   54000061    b.ne    aae7c <CDeviceTreeBlob::FindNodeInternal(char const*, TDeviceTreeNode const*, TDeviceTreeNode const**) const+0x29c>
   aae74:   91001000    add x0, x0, #0x4
   aae78:   f90002a0    str x0, [x21]
   aae7c:   d2800000    mov x0, #0x0
   aae80:   17ffff7f    b   aac7c <CDeviceTreeBlob::FindNodeInternal(char const*, TDeviceTreeNode const*, TDeviceTreeNode const**) const+0x9c>
   aae84:   97ffd1df    bl  9f600 <CLogger::Get()>
   aae88:   39400267    ldrb    w7, [x19]
   aae8c:   b0000043    adrp    x3, b3000 <_etext+0x3f9c>
   aae90:   d0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   aae94:   912b6063    add x3, x3, #0xad8
   aae98:   913b0021    add x1, x1, #0xec0
   aae9c:   39400666    ldrb    w6, [x19, #1]
   aaea0:   52800042    mov w2, #0x2
   aaea4:   39400a65    ldrb    w5, [x19, #2]
   aaea8:   39400e64    ldrb    w4, [x19, #3]
   aaeac:   aa0620e6    orr x6, x7, x6, lsl #8
   aaeb0:   aa0540c5    orr x5, x6, x5, lsl #16
   aaeb4:   aa0460a4    orr x4, x5, x4, lsl #24
   aaeb8:   5ac00884    rev w4, w4
   aaebc:   97ffd3b9    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   aaec0:   d2800000    mov x0, #0x0
   aaec4:   17ffff6e    b   aac7c <CDeviceTreeBlob::FindNodeInternal(char const*, TDeviceTreeNode const*, TDeviceTreeNode const**) const+0x9c>
   aaec8:   aa1603e0    mov x0, x22
   aaecc:   97ffee1d    bl  a6740 <strlen>
   aaed0:   aa0003f7    mov x23, x0
   aaed4:   17ffff75    b   aaca8 <CDeviceTreeBlob::FindNodeInternal(char const*, TDeviceTreeNode const*, TDeviceTreeNode const**) const+0xc8>
   aaed8:   97ffd1ca    bl  9f600 <CLogger::Get()>
   aaedc:   b0000043    adrp    x3, b3000 <_etext+0x3f9c>
   aaee0:   d0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   aaee4:   912be063    add x3, x3, #0xaf8
   aaee8:   913b0021    add x1, x1, #0xec0
   aaeec:   52800042    mov w2, #0x2
   aaef0:   97ffd3ac    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   aaef4:   d2800000    mov x0, #0x0
   aaef8:   17ffff61    b   aac7c <CDeviceTreeBlob::FindNodeInternal(char const*, TDeviceTreeNode const*, TDeviceTreeNode const**) const+0x9c>
   aaefc:   97ffd1c1    bl  9f600 <CLogger::Get()>
   aaf00:   b0000043    adrp    x3, b3000 <_etext+0x3f9c>
   aaf04:   d0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   aaf08:   aa1603e4    mov x4, x22
   aaf0c:   912b0063    add x3, x3, #0xac0
   aaf10:   913b0021    add x1, x1, #0xec0
   aaf14:   52800042    mov w2, #0x2
   aaf18:   97ffd3a2    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   aaf1c:   d2800000    mov x0, #0x0
   aaf20:   17ffff57    b   aac7c <CDeviceTreeBlob::FindNodeInternal(char const*, TDeviceTreeNode const*, TDeviceTreeNode const**) const+0x9c>
   aaf24:   97ffd1b7    bl  9f600 <CLogger::Get()>
   aaf28:   b0000043    adrp    x3, b3000 <_etext+0x3f9c>
   aaf2c:   d0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   aaf30:   912aa063    add x3, x3, #0xaa8
   aaf34:   913b0021    add x1, x1, #0xec0
   aaf38:   52800042    mov w2, #0x2
   aaf3c:   97ffd399    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   aaf40:   d2800000    mov x0, #0x0
   aaf44:   17ffff4e    b   aac7c <CDeviceTreeBlob::FindNodeInternal(char const*, TDeviceTreeNode const*, TDeviceTreeNode const**) const+0x9c>
   aaf48:   d503201f    nop
   aaf4c:   d503201f    nop

00000000000aaf50 <CDeviceTreeBlob::FindNode(char const*, TDeviceTreeNode const*) const>:
   aaf50:   d2800003    mov x3, #0x0
   aaf54:   17ffff23    b   aabe0 <CDeviceTreeBlob::FindNodeInternal(char const*, TDeviceTreeNode const*, TDeviceTreeNode const**) const>
   aaf58:   d503201f    nop
   aaf5c:   d503201f    nop

00000000000aaf60 <CDeviceTreeBlob::FindProperty(TDeviceTreeNode const*, char const*) const>:
   aaf60:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   aaf64:   910003fd    mov x29, sp
   aaf68:   a90153f3    stp x19, x20, [sp, #16]
   aaf6c:   a9025bf5    stp x21, x22, [sp, #32]
   aaf70:   b4000e81    cbz x1, ab140 <CDeviceTreeBlob::FindProperty(TDeviceTreeNode const*, char const*) const+0x1e0>
   aaf74:   aa0203f4    mov x20, x2
   aaf78:   b4000f02    cbz x2, ab158 <CDeviceTreeBlob::FindProperty(TDeviceTreeNode const*, char const*) const+0x1f8>
   aaf7c:   aa0003f5    mov x21, x0
   aaf80:   f9400000    ldr x0, [x0]
   aaf84:   b4000aa0    cbz x0, ab0d8 <CDeviceTreeBlob::FindProperty(TDeviceTreeNode const*, char const*) const+0x178>
   aaf88:   39400024    ldrb    w4, [x1]
   aaf8c:   aa0103f6    mov x22, x1
   aaf90:   52a02003    mov w3, #0x1000000
   aaf94:   39400422    ldrb    w2, [x1, #1]
   aaf98:   39400821    ldrb    w1, [x1, #2]
   aaf9c:   39400ec0    ldrb    w0, [x22, #3]
   aafa0:   aa022082    orr x2, x4, x2, lsl #8
   aafa4:   aa014041    orr x1, x2, x1, lsl #16
   aafa8:   aa006020    orr x0, x1, x0, lsl #24
   aafac:   6b03001f    cmp w0, w3
   aafb0:   540009e1    b.ne    ab0ec <CDeviceTreeBlob::FindProperty(TDeviceTreeNode const*, char const*) const+0x18c>
   aafb4:   910012c0    add x0, x22, #0x4
   aafb8:   97ffede2    bl  a6740 <strlen>
   aafbc:   91001000    add x0, x0, #0x4
   aafc0:   927ef400    and x0, x0, #0xfffffffffffffffc
   aafc4:   91001000    add x0, x0, #0x4
   aafc8:   8b0002d3    add x19, x22, x0
   aafcc:   38606ac2    ldrb    w2, [x22, x0]
   aafd0:   39400661    ldrb    w1, [x19, #1]
   aafd4:   39400a60    ldrb    w0, [x19, #2]
   aafd8:   39400e63    ldrb    w3, [x19, #3]
   aafdc:   aa012041    orr x1, x2, x1, lsl #8
   aafe0:   aa004020    orr x0, x1, x0, lsl #16
   aafe4:   aa036003    orr x3, x0, x3, lsl #24
   aafe8:   5ac00863    rev w3, w3
   aafec:   51000c60    sub w0, w3, #0x3
   aaff0:   7100041f    cmp w0, #0x1
   aaff4:   54000628    b.hi    ab0b8 <CDeviceTreeBlob::FindProperty(TDeviceTreeNode const*, char const*) const+0x158>
   aaff8:   7100107f    cmp w3, #0x4
   aaffc:   d2800083    mov x3, #0x4
   ab000:   54000440    b.eq    ab088 <CDeviceTreeBlob::FindProperty(TDeviceTreeNode const*, char const*) const+0x128>
   ab004:   f94002a0    ldr x0, [x21]
   ab008:   aa1403e1    mov x1, x20
   ab00c:   39402264    ldrb    w4, [x19, #8]
   ab010:   39402666    ldrb    w6, [x19, #9]
   ab014:   39403002    ldrb    w2, [x0, #12]
   ab018:   39403403    ldrb    w3, [x0, #13]
   ab01c:   aa062086    orr x6, x4, x6, lsl #8
   ab020:   39403805    ldrb    w5, [x0, #14]
   ab024:   39402a64    ldrb    w4, [x19, #10]
   ab028:   aa032043    orr x3, x2, x3, lsl #8
   ab02c:   39403c02    ldrb    w2, [x0, #15]
   ab030:   aa054065    orr x5, x3, x5, lsl #16
   ab034:   39402e63    ldrb    w3, [x19, #11]
   ab038:   aa0440c4    orr x4, x6, x4, lsl #16
   ab03c:   aa0260a2    orr x2, x5, x2, lsl #24
   ab040:   aa036083    orr x3, x4, x3, lsl #24
   ab044:   5ac00842    rev w2, w2
   ab048:   5ac00863    rev w3, w3
   ab04c:   8b030042    add x2, x2, x3
   ab050:   8b020000    add x0, x0, x2
   ab054:   97ffedc7    bl  a6770 <strcmp>
   ab058:   340006a0    cbz w0, ab12c <CDeviceTreeBlob::FindProperty(TDeviceTreeNode const*, char const*) const+0x1cc>
   ab05c:   39401262    ldrb    w2, [x19, #4]
   ab060:   39401661    ldrb    w1, [x19, #5]
   ab064:   39401a60    ldrb    w0, [x19, #6]
   ab068:   39401e63    ldrb    w3, [x19, #7]
   ab06c:   aa012041    orr x1, x2, x1, lsl #8
   ab070:   aa004020    orr x0, x1, x0, lsl #16
   ab074:   aa036003    orr x3, x0, x3, lsl #24
   ab078:   5ac00863    rev w3, w3
   ab07c:   11000c63    add w3, w3, #0x3
   ab080:   927e7463    and x3, x3, #0xfffffffc
   ab084:   91003063    add x3, x3, #0xc
   ab088:   8b030273    add x19, x19, x3
   ab08c:   39400260    ldrb    w0, [x19]
   ab090:   39400662    ldrb    w2, [x19, #1]
   ab094:   39400a61    ldrb    w1, [x19, #2]
   ab098:   39400e63    ldrb    w3, [x19, #3]
   ab09c:   aa022002    orr x2, x0, x2, lsl #8
   ab0a0:   aa014041    orr x1, x2, x1, lsl #16
   ab0a4:   aa036023    orr x3, x1, x3, lsl #24
   ab0a8:   5ac00863    rev w3, w3
   ab0ac:   51000c60    sub w0, w3, #0x3
   ab0b0:   7100041f    cmp w0, #0x1
   ab0b4:   54fffa29    b.ls    aaff8 <CDeviceTreeBlob::FindProperty(TDeviceTreeNode const*, char const*) const+0x98>
   ab0b8:   97ffd152    bl  9f600 <CLogger::Get()>
   ab0bc:   90000043    adrp    x3, b3000 <_etext+0x3f9c>
   ab0c0:   b0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   ab0c4:   aa1403e4    mov x4, x20
   ab0c8:   912ca063    add x3, x3, #0xb28
   ab0cc:   913b0021    add x1, x1, #0xec0
   ab0d0:   52800042    mov w2, #0x2
   ab0d4:   97ffd333    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   ab0d8:   a94153f3    ldp x19, x20, [sp, #16]
   ab0dc:   d2800000    mov x0, #0x0
   ab0e0:   a9425bf5    ldp x21, x22, [sp, #32]
   ab0e4:   a8c37bfd    ldp x29, x30, [sp], #48
   ab0e8:   d65f03c0    ret
   ab0ec:   97ffd145    bl  9f600 <CLogger::Get()>
   ab0f0:   394002c7    ldrb    w7, [x22]
   ab0f4:   90000043    adrp    x3, b3000 <_etext+0x3f9c>
   ab0f8:   b0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   ab0fc:   912b6063    add x3, x3, #0xad8
   ab100:   913b0021    add x1, x1, #0xec0
   ab104:   394006c6    ldrb    w6, [x22, #1]
   ab108:   52800042    mov w2, #0x2
   ab10c:   39400ac5    ldrb    w5, [x22, #2]
   ab110:   39400ec4    ldrb    w4, [x22, #3]
   ab114:   aa0620e6    orr x6, x7, x6, lsl #8
   ab118:   aa0540c5    orr x5, x6, x5, lsl #16
   ab11c:   aa0460a4    orr x4, x5, x4, lsl #24
   ab120:   5ac00884    rev w4, w4
   ab124:   97ffd31f    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   ab128:   17ffffec    b   ab0d8 <CDeviceTreeBlob::FindProperty(TDeviceTreeNode const*, char const*) const+0x178>
   ab12c:   a9425bf5    ldp x21, x22, [sp, #32]
   ab130:   aa1303e0    mov x0, x19
   ab134:   a94153f3    ldp x19, x20, [sp, #16]
   ab138:   a8c37bfd    ldp x29, x30, [sp], #48
   ab13c:   d65f03c0    ret
   ab140:   90000041    adrp    x1, b3000 <_etext+0x3f9c>
   ab144:   90000040    adrp    x0, b3000 <_etext+0x3f9c>
   ab148:   912a0021    add x1, x1, #0xa80
   ab14c:   912c6000    add x0, x0, #0xb18
   ab150:   52802162    mov w2, #0x10b
   ab154:   97ffc65b    bl  9cac0 <assertion_failed>
   ab158:   90000041    adrp    x1, b3000 <_etext+0x3f9c>
   ab15c:   b0000020    adrp    x0, b0000 <_etext+0xf9c>
   ab160:   912a0021    add x1, x1, #0xa80
   ab164:   91128000    add x0, x0, #0x4a0
   ab168:   52802182    mov w2, #0x10c
   ab16c:   97ffc655    bl  9cac0 <assertion_failed>

00000000000ab170 <CDeviceTreeBlob::GetPropertyValueLength(TDeviceTreeProperty const*) const>:
   ab170:   b40001c1    cbz x1, ab1a8 <CDeviceTreeBlob::GetPropertyValueLength(TDeviceTreeProperty const*) const+0x38>
   ab174:   f9400000    ldr x0, [x0]
   ab178:   b4000140    cbz x0, ab1a0 <CDeviceTreeBlob::GetPropertyValueLength(TDeviceTreeProperty const*) const+0x30>
   ab17c:   39401024    ldrb    w4, [x1, #4]
   ab180:   39401423    ldrb    w3, [x1, #5]
   ab184:   39401822    ldrb    w2, [x1, #6]
   ab188:   39401c20    ldrb    w0, [x1, #7]
   ab18c:   aa032081    orr x1, x4, x3, lsl #8
   ab190:   aa024021    orr x1, x1, x2, lsl #16
   ab194:   aa006020    orr x0, x1, x0, lsl #24
   ab198:   5ac00800    rev w0, w0
   ab19c:   d65f03c0    ret
   ab1a0:   d2800000    mov x0, #0x0
   ab1a4:   d65f03c0    ret
   ab1a8:   90000041    adrp    x1, b3000 <_etext+0x3f9c>
   ab1ac:   90000040    adrp    x0, b3000 <_etext+0x3f9c>
   ab1b0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   ab1b4:   912a0021    add x1, x1, #0xa80
   ab1b8:   910003fd    mov x29, sp
   ab1bc:   912d0000    add x0, x0, #0xb40
   ab1c0:   52802802    mov w2, #0x140
   ab1c4:   97ffc63f    bl  9cac0 <assertion_failed>
   ab1c8:   d503201f    nop
   ab1cc:   d503201f    nop

00000000000ab1d0 <CDeviceTreeBlob::GetPropertyValue(TDeviceTreeProperty const*) const>:
   ab1d0:   b40000c1    cbz x1, ab1e8 <CDeviceTreeBlob::GetPropertyValue(TDeviceTreeProperty const*) const+0x18>
   ab1d4:   f9400000    ldr x0, [x0]
   ab1d8:   91003021    add x1, x1, #0xc
   ab1dc:   f100001f    cmp x0, #0x0
   ab1e0:   9a801020    csel    x0, x1, x0, ne
   ab1e4:   d65f03c0    ret
   ab1e8:   90000041    adrp    x1, b3000 <_etext+0x3f9c>
   ab1ec:   90000040    adrp    x0, b3000 <_etext+0x3f9c>
   ab1f0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   ab1f4:   912a0021    add x1, x1, #0xa80
   ab1f8:   910003fd    mov x29, sp
   ab1fc:   912d0000    add x0, x0, #0xb40
   ab200:   52802982    mov w2, #0x14c
   ab204:   97ffc62f    bl  9cac0 <assertion_failed>
   ab208:   d503201f    nop
   ab20c:   d503201f    nop

00000000000ab210 <CDeviceTreeBlob::GetPropertyValueWord(TDeviceTreeProperty const*, unsigned int) const>:
   ab210:   a9be7bfd    stp x29, x30, [sp, #-32]!
   ab214:   910003fd    mov x29, sp
   ab218:   b4000521    cbz x1, ab2bc <CDeviceTreeBlob::GetPropertyValueWord(TDeviceTreeProperty const*, unsigned int) const+0xac>
   ab21c:   f9400000    ldr x0, [x0]
   ab220:   b4000480    cbz x0, ab2b0 <CDeviceTreeBlob::GetPropertyValueWord(TDeviceTreeProperty const*, unsigned int) const+0xa0>
   ab224:   f9000bf3    str x19, [sp, #16]
   ab228:   aa0103f3    mov x19, x1
   ab22c:   39401025    ldrb    w5, [x1, #4]
   ab230:   11000441    add w1, w2, #0x1
   ab234:   39401664    ldrb    w4, [x19, #5]
   ab238:   39401a63    ldrb    w3, [x19, #6]
   ab23c:   39401e60    ldrb    w0, [x19, #7]
   ab240:   aa0420a4    orr x4, x5, x4, lsl #8
   ab244:   aa034083    orr x3, x4, x3, lsl #16
   ab248:   aa006060    orr x0, x3, x0, lsl #24
   ab24c:   5ac00800    rev w0, w0
   ab250:   eb01081f    cmp x0, x1, lsl #2
   ab254:   540000e3    b.cc    ab270 <CDeviceTreeBlob::GetPropertyValueWord(TDeviceTreeProperty const*, unsigned int) const+0x60>
   ab258:   8b224a62    add x2, x19, w2, uxtw #2
   ab25c:   b9400c40    ldr w0, [x2, #12]
   ab260:   f9400bf3    ldr x19, [sp, #16]
   ab264:   a8c27bfd    ldp x29, x30, [sp], #32
   ab268:   5ac00800    rev w0, w0
   ab26c:   d65f03c0    ret
   ab270:   97ffd0e4    bl  9f600 <CLogger::Get()>
   ab274:   39401267    ldrb    w7, [x19, #4]
   ab278:   90000043    adrp    x3, b3000 <_etext+0x3f9c>
   ab27c:   b0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   ab280:   912d4063    add x3, x3, #0xb50
   ab284:   913b0021    add x1, x1, #0xec0
   ab288:   39401666    ldrb    w6, [x19, #5]
   ab28c:   52800042    mov w2, #0x2
   ab290:   39401a65    ldrb    w5, [x19, #6]
   ab294:   39401e64    ldrb    w4, [x19, #7]
   ab298:   aa0620e6    orr x6, x7, x6, lsl #8
   ab29c:   aa0540c5    orr x5, x6, x5, lsl #16
   ab2a0:   aa0460a4    orr x4, x5, x4, lsl #24
   ab2a4:   5ac00884    rev w4, w4
   ab2a8:   97ffd2be    bl  9fda0 <CLogger::Write(char const*, TLogSeverity, char const*, ...)>
   ab2ac:   f9400bf3    ldr x19, [sp, #16]
   ab2b0:   52800000    mov w0, #0x0
   ab2b4:   a8c27bfd    ldp x29, x30, [sp], #32
   ab2b8:   d65f03c0    ret
   ab2bc:   90000041    adrp    x1, b3000 <_etext+0x3f9c>
   ab2c0:   90000040    adrp    x0, b3000 <_etext+0x3f9c>
   ab2c4:   f9000bf3    str x19, [sp, #16]
   ab2c8:   912a0021    add x1, x1, #0xa80
   ab2cc:   912d0000    add x0, x0, #0xb40
   ab2d0:   52802b22    mov w2, #0x159
   ab2d4:   97ffc5fb    bl  9cac0 <assertion_failed>
    ...

00000000000ab2e0 <malloc>:
   ab2e0:   f0000061    adrp    x1, ba000 <font_data+0x1080>
   ab2e4:   f9452822    ldr x2, [x1, #2640]
   ab2e8:   aa0003e1    mov x1, x0
   ab2ec:   91006040    add x0, x2, #0x18
   ab2f0:   17fff19c    b   a7960 <CHeapAllocator::Allocate(unsigned long)>
   ab2f4:   d503201f    nop
   ab2f8:   d503201f    nop
   ab2fc:   d503201f    nop

00000000000ab300 <memalign>:
   ab300:   f101001f    cmp x0, #0x40
   ab304:   540000a8    b.hi    ab318 <memalign+0x18>
   ab308:   f0000060    adrp    x0, ba000 <font_data+0x1080>
   ab30c:   f9452800    ldr x0, [x0, #2640]
   ab310:   91006000    add x0, x0, #0x18
   ab314:   17fff193    b   a7960 <CHeapAllocator::Allocate(unsigned long)>
   ab318:   b0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   ab31c:   913b2021    add x1, x1, #0xec8
   ab320:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   ab324:   91004020    add x0, x1, #0x10
   ab328:   910003fd    mov x29, sp
   ab32c:   52800422    mov w2, #0x21
   ab330:   97ffc5e4    bl  9cac0 <assertion_failed>
   ab334:   d503201f    nop
   ab338:   d503201f    nop
   ab33c:   d503201f    nop

00000000000ab340 <free>:
   ab340:   aa0003e1    mov x1, x0
   ab344:   b24077e2    mov x2, #0x3fffffff
   ab348:   f0000060    adrp    x0, ba000 <font_data+0x1080>
   ab34c:   eb02003f    cmp x1, x2
   ab350:   f9452800    ldr x0, [x0, #2640]
   ab354:   54000068    b.hi    ab360 <free+0x20>
   ab358:   91006000    add x0, x0, #0x18
   ab35c:   17fff209    b   a7b80 <CHeapAllocator::Free(void*)>
   ab360:   91064000    add x0, x0, #0x190
   ab364:   17fff207    b   a7b80 <CHeapAllocator::Free(void*)>
   ab368:   d503201f    nop
   ab36c:   d503201f    nop

00000000000ab370 <calloc>:
   ab370:   a9be7bfd    stp x29, x30, [sp, #-32]!
   ab374:   910003fd    mov x29, sp
   ab378:   a90153f3    stp x19, x20, [sp, #16]
   ab37c:   9b007c33    mul x19, x1, x0
   ab380:   f100027f    cmp x19, #0x0
   ab384:   9a9f1673    csinc   x19, x19, xzr, ne
   ab388:   eb13001f    cmp x0, x19
   ab38c:   540001e8    b.hi    ab3c8 <calloc+0x58>
   ab390:   f0000060    adrp    x0, ba000 <font_data+0x1080>
   ab394:   aa1303e1    mov x1, x19
   ab398:   f9452800    ldr x0, [x0, #2640]
   ab39c:   91006000    add x0, x0, #0x18
   ab3a0:   97fff170    bl  a7960 <CHeapAllocator::Allocate(unsigned long)>
   ab3a4:   aa0003f4    mov x20, x0
   ab3a8:   b4000080    cbz x0, ab3b8 <calloc+0x48>
   ab3ac:   aa1303e2    mov x2, x19
   ab3b0:   52800001    mov w1, #0x0
   ab3b4:   97ffee59    bl  a6d18 <memset>
   ab3b8:   aa1403e0    mov x0, x20
   ab3bc:   a94153f3    ldp x19, x20, [sp, #16]
   ab3c0:   a8c27bfd    ldp x29, x30, [sp], #32
   ab3c4:   d65f03c0    ret
   ab3c8:   b0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   ab3cc:   913b2021    add x1, x1, #0xec8
   ab3d0:   9100c020    add x0, x1, #0x30
   ab3d4:   52800622    mov w2, #0x31
   ab3d8:   97ffc5ba    bl  9cac0 <assertion_failed>
   ab3dc:   d503201f    nop

00000000000ab3e0 <realloc>:
   ab3e0:   b24077e2    mov x2, #0x3fffffff
   ab3e4:   f0000063    adrp    x3, ba000 <font_data+0x1080>
   ab3e8:   eb02001f    cmp x0, x2
   ab3ec:   f9452863    ldr x3, [x3, #2640]
   ab3f0:   aa0103e2    mov x2, x1
   ab3f4:   aa0003e1    mov x1, x0
   ab3f8:   54000068    b.hi    ab404 <realloc+0x24>
   ab3fc:   91006060    add x0, x3, #0x18
   ab400:   17fff238    b   a7ce0 <CHeapAllocator::ReAllocate(void*, unsigned long)>
   ab404:   91064060    add x0, x3, #0x190
   ab408:   17fff236    b   a7ce0 <CHeapAllocator::ReAllocate(void*, unsigned long)>
   ab40c:   d503201f    nop

00000000000ab410 <palloc>:
   ab410:   f0000060    adrp    x0, ba000 <font_data+0x1080>
   ab414:   f9452800    ldr x0, [x0, #2640]
   ab418:   910c2000    add x0, x0, #0x308
   ab41c:   1400075d    b   ad190 <CPageAllocator::Allocate()>

00000000000ab420 <pfree>:
   ab420:   f0000061    adrp    x1, ba000 <font_data+0x1080>
   ab424:   f9452822    ldr x2, [x1, #2640]
   ab428:   aa0003e1    mov x1, x0
   ab42c:   910c2040    add x0, x2, #0x308
   ab430:   1400078c    b   ad260 <CPageAllocator::Free(void*)>
    ...

00000000000ab440 <CBcmFrameBuffer::SetDisplay() [clone .part.0]>:
   ab440:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   ab444:   910003fd    mov x29, sp
   ab448:   52800001    mov w1, #0x0
   ab44c:   f9000bf3    str x19, [sp, #16]
   ab450:   aa0003f3    mov x19, x0
   ab454:   9100a3e0    add x0, sp, #0x28
   ab458:   97ffc5be    bl  9cb50 <CBcmPropertyTags::CBcmPropertyTags(bool)>
   ab45c:   b9401665    ldr w5, [x19, #20]
   ab460:   52900261    mov w1, #0x8013
   ab464:   72a00081    movk    w1, #0x4, lsl #16
   ab468:   9100c3e2    add x2, sp, #0x30
   ab46c:   9100a3e0    add x0, sp, #0x28
   ab470:   52800084    mov w4, #0x4
   ab474:   52800203    mov w3, #0x10
   ab478:   b9003fe5    str w5, [sp, #60]
   ab47c:   97ffc615    bl  9ccd0 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   ab480:   36000080    tbz w0, #0, ab490 <CBcmFrameBuffer::SetDisplay() [clone .part.0]+0x50>
   ab484:   b9401661    ldr w1, [x19, #20]
   ab488:   f0000060    adrp    x0, ba000 <font_data+0x1080>
   ab48c:   b9085801    str w1, [x0, #2136]
   ab490:   9100a3e0    add x0, sp, #0x28
   ab494:   97ffc5b3    bl  9cb60 <CBcmPropertyTags::~CBcmPropertyTags()>
   ab498:   f9400bf3    ldr x19, [sp, #16]
   ab49c:   a8c47bfd    ldp x29, x30, [sp], #64
   ab4a0:   d65f03c0    ret
   ab4a4:   d503201f    nop
   ab4a8:   d503201f    nop
   ab4ac:   d503201f    nop

00000000000ab4b0 <CBcmFrameBuffer::GetNumDisplays() [clone .part.0]>:
   ab4b0:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   ab4b4:   52800001    mov w1, #0x0
   ab4b8:   910003fd    mov x29, sp
   ab4bc:   9100a3e0    add x0, sp, #0x28
   ab4c0:   f9000bf3    str x19, [sp, #16]
   ab4c4:   97ffc5a3    bl  9cb50 <CBcmPropertyTags::CBcmPropertyTags(bool)>
   ab4c8:   9100c3e2    add x2, sp, #0x30
   ab4cc:   52800004    mov w4, #0x0
   ab4d0:   52800203    mov w3, #0x10
   ab4d4:   9100a3e0    add x0, sp, #0x28
   ab4d8:   52800261    mov w1, #0x13
   ab4dc:   72a00081    movk    w1, #0x4, lsl #16
   ab4e0:   97ffc5fc    bl  9ccd0 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   ab4e4:   2a0003e2    mov w2, w0
   ab4e8:   f0000061    adrp    x1, ba000 <font_data+0x1080>
   ab4ec:   b9403ff3    ldr w19, [sp, #60]
   ab4f0:   f240005f    tst x2, #0x1
   ab4f4:   9100a3e0    add x0, sp, #0x28
   ab4f8:   1a9f1673    csinc   w19, w19, wzr, ne
   ab4fc:   b90b2033    str w19, [x1, #2848]
   ab500:   97ffc598    bl  9cb60 <CBcmPropertyTags::~CBcmPropertyTags()>
   ab504:   2a1303e0    mov w0, w19
   ab508:   f9400bf3    ldr x19, [sp, #16]
   ab50c:   a8c47bfd    ldp x29, x30, [sp], #64
   ab510:   d65f03c0    ret
   ab514:   d503201f    nop
   ab518:   d503201f    nop
   ab51c:   d503201f    nop

00000000000ab520 <CBcmFrameBuffer::CBcmFrameBuffer(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, bool)>:
   ab520:   a9bb7bfd    stp x29, x30, [sp, #-80]!
   ab524:   910003fd    mov x29, sp
   ab528:   a90153f3    stp x19, x20, [sp, #16]
   ab52c:   aa0003f3    mov x19, x0
   ab530:   f0000060    adrp    x0, ba000 <font_data+0x1080>
   ab534:   2a0603f4    mov w20, w6
   ab538:   f90013f5    str x21, [sp, #32]
   ab53c:   12001cf5    and w21, w7, #0xff
   ab540:   b94b2000    ldr w0, [x0, #2848]
   ab544:   29000a61    stp w1, w2, [x19]
   ab548:   29011664    stp w4, w5, [x19, #8]
   ab54c:   29021a63    stp w3, w6, [x19, #16]
   ab550:   f9000e7f    str xzr, [x19, #24]
   ab554:   b900227f    str wzr, [x19, #32]
   ab558:   f900167f    str xzr, [x19, #40]
   ab55c:   35000040    cbnz    w0, ab564 <CBcmFrameBuffer::CBcmFrameBuffer(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, bool)+0x44>
   ab560:   97ffffd4    bl  ab4b0 <CBcmFrameBuffer::GetNumDisplays() [clone .part.0]>
   ab564:   6b00029f    cmp w20, w0
   ab568:   540006e2    b.cs    ab644 <CBcmFrameBuffer::CBcmFrameBuffer(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, bool)+0x124>
   ab56c:   b9400260    ldr w0, [x19]
   ab570:   34000060    cbz w0, ab57c <CBcmFrameBuffer::CBcmFrameBuffer(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, bool)+0x5c>
   ab574:   b9400660    ldr w0, [x19, #4]
   ab578:   35000400    cbnz    w0, ab5f8 <CBcmFrameBuffer::CBcmFrameBuffer(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, bool)+0xd8>
   ab57c:   f0000060    adrp    x0, ba000 <font_data+0x1080>
   ab580:   b9401661    ldr w1, [x19, #20]
   ab584:   b9485800    ldr w0, [x0, #2136]
   ab588:   6b00003f    cmp w1, w0
   ab58c:   54000060    b.eq    ab598 <CBcmFrameBuffer::CBcmFrameBuffer(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, bool)+0x78>
   ab590:   aa1303e0    mov x0, x19
   ab594:   97ffffab    bl  ab440 <CBcmFrameBuffer::SetDisplay() [clone .part.0]>
   ab598:   52800001    mov w1, #0x0
   ab59c:   9100c3e0    add x0, sp, #0x30
   ab5a0:   97ffc56c    bl  9cb50 <CBcmPropertyTags::CBcmPropertyTags(bool)>
   ab5a4:   52800061    mov w1, #0x3
   ab5a8:   72a00081    movk    w1, #0x4, lsl #16
   ab5ac:   9100e3e2    add x2, sp, #0x38
   ab5b0:   9100c3e0    add x0, sp, #0x30
   ab5b4:   52800004    mov w4, #0x0
   ab5b8:   52800283    mov w3, #0x14
   ab5bc:   97ffc5c5    bl  9ccd0 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   ab5c0:   36000120    tbz w0, #0, ab5e4 <CBcmFrameBuffer::CBcmFrameBuffer(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, bool)+0xc4>
   ab5c4:   294883e1    ldp w1, w0, [sp, #68]
   ab5c8:   5280d202    mov w2, #0x690
   ab5cc:   510a0023    sub w3, w1, #0x280
   ab5d0:   29000261    stp w1, w0, [x19]
   ab5d4:   51078001    sub w1, w0, #0x1e0
   ab5d8:   7136007f    cmp w3, #0xd80
   ab5dc:   7a429022    ccmp    w1, w2, #0x2, ls
   ab5e0:   54000089    b.ls    ab5f0 <CBcmFrameBuffer::CBcmFrameBuffer(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, bool)+0xd0>
   ab5e4:   d2805000    mov x0, #0x280
   ab5e8:   f2c03c00    movk    x0, #0x1e0, lsl #32
   ab5ec:   f9000260    str x0, [x19]
   ab5f0:   9100c3e0    add x0, sp, #0x30
   ab5f4:   97ffc55b    bl  9cb60 <CBcmPropertyTags::~CBcmPropertyTags()>
   ab5f8:   b9400a60    ldr w0, [x19, #8]
   ab5fc:   340002c0    cbz w0, ab654 <CBcmFrameBuffer::CBcmFrameBuffer(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, bool)+0x134>
   ab600:   b9400e60    ldr w0, [x19, #12]
   ab604:   34000280    cbz w0, ab654 <CBcmFrameBuffer::CBcmFrameBuffer(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, bool)+0x134>
   ab608:   b9401260    ldr w0, [x19, #16]
   ab60c:   7100201f    cmp w0, #0x8
   ab610:   540002e9    b.ls    ab66c <CBcmFrameBuffer::CBcmFrameBuffer(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, bool)+0x14c>
   ab614:   d503201f    nop
   ab618:   b0000061    adrp    x1, b8000 <vtable for CGPIOPin+0x288>
   ab61c:   d2800e02    mov x2, #0x70
   ab620:   913c4021    add x1, x1, #0xf10
   ab624:   9100c260    add x0, x19, #0x30
   ab628:   97ffedd4    bl  a6d78 <memcpy>
   ab62c:   fd400660    ldr d0, [x19, #8]
   ab630:   29400662    ldp w2, w1, [x19]
   ab634:   b9401260    ldr w0, [x19, #16]
   ab638:   fd002a60    str d0, [x19, #80]
   ab63c:   29078662    stp w2, w1, [x19, #60]
   ab640:   b9006660    str w0, [x19, #100]
   ab644:   a94153f3    ldp x19, x20, [sp, #16]
   ab648:   f94013f5    ldr x21, [sp, #32]
   ab64c:   a8c57bfd    ldp x29, x30, [sp], #80
   ab650:   d65f03c0    ret
   ab654:   29400261    ldp w1, w0, [x19]
   ab658:   1b0002a0    madd    w0, w21, w0, w0
   ab65c:   29010261    stp w1, w0, [x19, #8]
   ab660:   b9401260    ldr w0, [x19, #16]
   ab664:   7100201f    cmp w0, #0x8
   ab668:   54fffd88    b.hi    ab618 <CBcmFrameBuffer::CBcmFrameBuffer(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, bool)+0xf8>
   ab66c:   d2808280    mov x0, #0x414
   ab670:   97fff05c    bl  a77e0 <operator new[](unsigned long)>
   ab674:   aa0003e3    mov x3, x0
   ab678:   d2808002    mov x2, #0x400
   ab67c:   52800001    mov w1, #0x0
   ab680:   91005000    add x0, x0, #0x14
   ab684:   f9001663    str x3, [x19, #40]
   ab688:   97ffeda4    bl  a6d18 <memset>
   ab68c:   17ffffe3    b   ab618 <CBcmFrameBuffer::CBcmFrameBuffer(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, bool)+0xf8>

00000000000ab690 <CBcmFrameBuffer::~CBcmFrameBuffer()>:
   ab690:   f9401400    ldr x0, [x0, #40]
   ab694:   b4000060    cbz x0, ab6a0 <CBcmFrameBuffer::~CBcmFrameBuffer()+0x10>
   ab698:   d2800281    mov x1, #0x14
   ab69c:   17fff071    b   a7860 <operator delete(void*, unsigned long)>
   ab6a0:   d65f03c0    ret
   ab6a4:   d503201f    nop
   ab6a8:   d503201f    nop
   ab6ac:   d503201f    nop

00000000000ab6b0 <CBcmFrameBuffer::SetPalette(unsigned char, unsigned short)>:
   ab6b0:   b9401003    ldr w3, [x0, #16]
   ab6b4:   12001c21    and w1, w1, #0xff
   ab6b8:   12003c42    and w2, w2, #0xffff
   ab6bc:   7100207f    cmp w3, #0x8
   ab6c0:   54000288    b.hi    ab710 <CBcmFrameBuffer::SetPalette(unsigned char, unsigned short)+0x60>
   ab6c4:   f9401403    ldr x3, [x0, #40]
   ab6c8:   530d1044    ubfiz   w4, w2, #19, #5
   ab6cc:   53057c40    lsr w0, w2, #5
   ab6d0:   530b7c42    lsr w2, w2, #11
   ab6d4:   53161400    ubfiz   w0, w0, #10, #6
   ab6d8:   2a020c82    orr w2, w4, w2, lsl #3
   ab6dc:   32081c00    orr w0, w0, #0xff000000
   ab6e0:   d37e1c21    ubfiz   x1, x1, #2, #8
   ab6e4:   91004021    add x1, x1, #0x10
   ab6e8:   d3483c05    ubfx    x5, x0, #8, #8
   ab6ec:   2a020004    orr w4, w0, w2
   ab6f0:   2a020000    orr w0, w0, w2
   ab6f4:   8b010061    add x1, x3, x1
   ab6f8:   d3505c82    ubfx    x2, x4, #16, #8
   ab6fc:   53187c84    lsr w4, w4, #24
   ab700:   39001020    strb    w0, [x1, #4]
   ab704:   39001425    strb    w5, [x1, #5]
   ab708:   39001822    strb    w2, [x1, #6]
   ab70c:   39001c24    strb    w4, [x1, #7]
   ab710:   d65f03c0    ret
   ab714:   d503201f    nop
   ab718:   d503201f    nop
   ab71c:   d503201f    nop

00000000000ab720 <CBcmFrameBuffer::SetPalette32(unsigned char, unsigned int)>:
   ab720:   b9401003    ldr w3, [x0, #16]
   ab724:   12001c21    and w1, w1, #0xff
   ab728:   7100207f    cmp w3, #0x8
   ab72c:   54000188    b.hi    ab75c <CBcmFrameBuffer::SetPalette32(unsigned char, unsigned int)+0x3c>
   ab730:   f9401400    ldr x0, [x0, #40]
   ab734:   d37e1c21    ubfiz   x1, x1, #2, #8
   ab738:   d3483c45    ubfx    x5, x2, #8, #8
   ab73c:   91004021    add x1, x1, #0x10
   ab740:   d3505c44    ubfx    x4, x2, #16, #8
   ab744:   53187c43    lsr w3, w2, #24
   ab748:   8b010000    add x0, x0, x1
   ab74c:   39001002    strb    w2, [x0, #4]
   ab750:   39001405    strb    w5, [x0, #5]
   ab754:   39001804    strb    w4, [x0, #6]
   ab758:   39001c03    strb    w3, [x0, #7]
   ab75c:   d65f03c0    ret

00000000000ab760 <CBcmFrameBuffer::GetWidth() const>:
   ab760:   b9400000    ldr w0, [x0]
   ab764:   d65f03c0    ret
   ab768:   d503201f    nop
   ab76c:   d503201f    nop

00000000000ab770 <CBcmFrameBuffer::GetHeight() const>:
   ab770:   b9400400    ldr w0, [x0, #4]
   ab774:   d65f03c0    ret
   ab778:   d503201f    nop
   ab77c:   d503201f    nop

00000000000ab780 <CBcmFrameBuffer::GetVirtWidth() const>:
   ab780:   b9400800    ldr w0, [x0, #8]
   ab784:   d65f03c0    ret
   ab788:   d503201f    nop
   ab78c:   d503201f    nop

00000000000ab790 <CBcmFrameBuffer::GetVirtHeight() const>:
   ab790:   b9400c00    ldr w0, [x0, #12]
   ab794:   d65f03c0    ret
   ab798:   d503201f    nop
   ab79c:   d503201f    nop

00000000000ab7a0 <CBcmFrameBuffer::GetPitch() const>:
   ab7a0:   b9402000    ldr w0, [x0, #32]
   ab7a4:   d65f03c0    ret
   ab7a8:   d503201f    nop
   ab7ac:   d503201f    nop

00000000000ab7b0 <CBcmFrameBuffer::GetDepth() const>:
   ab7b0:   b9401000    ldr w0, [x0, #16]
   ab7b4:   d65f03c0    ret
   ab7b8:   d503201f    nop
   ab7bc:   d503201f    nop

00000000000ab7c0 <CBcmFrameBuffer::GetBuffer() const>:
   ab7c0:   b9401800    ldr w0, [x0, #24]
   ab7c4:   d65f03c0    ret
   ab7c8:   d503201f    nop
   ab7cc:   d503201f    nop

00000000000ab7d0 <CBcmFrameBuffer::GetSize() const>:
   ab7d0:   b9401c00    ldr w0, [x0, #28]
   ab7d4:   d65f03c0    ret
   ab7d8:   d503201f    nop
   ab7dc:   d503201f    nop

00000000000ab7e0 <CBcmFrameBuffer::UpdatePalette()>:
   ab7e0:   b9401001    ldr w1, [x0, #16]
   ab7e4:   7100203f    cmp w1, #0x8
   ab7e8:   54000069    b.ls    ab7f4 <CBcmFrameBuffer::UpdatePalette()+0x14>
   ab7ec:   52800020    mov w0, #0x1
   ab7f0:   d65f03c0    ret
   ab7f4:   f0000061    adrp    x1, ba000 <font_data+0x1080>
   ab7f8:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   ab7fc:   910003fd    mov x29, sp
   ab800:   b9485821    ldr w1, [x1, #2136]
   ab804:   f9000bf3    str x19, [sp, #16]
   ab808:   aa0003f3    mov x19, x0
   ab80c:   b9401402    ldr w2, [x0, #20]
   ab810:   6b01005f    cmp w2, w1
   ab814:   54000040    b.eq    ab81c <CBcmFrameBuffer::UpdatePalette()+0x3c>
   ab818:   97ffff0a    bl  ab440 <CBcmFrameBuffer::SetDisplay() [clone .part.0]>
   ab81c:   f9401662    ldr x2, [x19, #40]
   ab820:   52800023    mov w3, #0x1
   ab824:   9100a3e0    add x0, sp, #0x28
   ab828:   52800001    mov w1, #0x0
   ab82c:   3900305f    strb    wzr, [x2, #12]
   ab830:   3900345f    strb    wzr, [x2, #13]
   ab834:   3900385f    strb    wzr, [x2, #14]
   ab838:   39003c5f    strb    wzr, [x2, #15]
   ab83c:   3900405f    strb    wzr, [x2, #16]
   ab840:   39004443    strb    w3, [x2, #17]
   ab844:   3900485f    strb    wzr, [x2, #18]
   ab848:   39004c5f    strb    wzr, [x2, #19]
   ab84c:   97ffc4c1    bl  9cb50 <CBcmPropertyTags::CBcmPropertyTags(bool)>
   ab850:   f9401662    ldr x2, [x19, #40]
   ab854:   52900161    mov w1, #0x800b
   ab858:   72a00081    movk    w1, #0x4, lsl #16
   ab85c:   9100a3e0    add x0, sp, #0x28
   ab860:   52808104    mov w4, #0x408
   ab864:   52808283    mov w3, #0x414
   ab868:   97ffc51a    bl  9ccd0 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   ab86c:   36000140    tbz w0, #0, ab894 <CBcmFrameBuffer::UpdatePalette()+0xb4>
   ab870:   f9401660    ldr x0, [x19, #40]
   ab874:   39403003    ldrb    w3, [x0, #12]
   ab878:   39403402    ldrb    w2, [x0, #13]
   ab87c:   39403801    ldrb    w1, [x0, #14]
   ab880:   39403c00    ldrb    w0, [x0, #15]
   ab884:   aa022062    orr x2, x3, x2, lsl #8
   ab888:   aa014041    orr x1, x2, x1, lsl #16
   ab88c:   aa006020    orr x0, x1, x0, lsl #24
   ab890:   b40000e0    cbz x0, ab8ac <CBcmFrameBuffer::UpdatePalette()+0xcc>
   ab894:   9100a3e0    add x0, sp, #0x28
   ab898:   97ffc4b2    bl  9cb60 <CBcmPropertyTags::~CBcmPropertyTags()>
   ab89c:   f9400bf3    ldr x19, [sp, #16]
   ab8a0:   52800000    mov w0, #0x0
   ab8a4:   a8c37bfd    ldp x29, x30, [sp], #48
   ab8a8:   d65f03c0    ret
   ab8ac:   9100a3e0    add x0, sp, #0x28
   ab8b0:   97ffc4ac    bl  9cb60 <CBcmPropertyTags::~CBcmPropertyTags()>
   ab8b4:   f9400bf3    ldr x19, [sp, #16]
   ab8b8:   52800020    mov w0, #0x1
   ab8bc:   a8c37bfd    ldp x29, x30, [sp], #48
   ab8c0:   d65f03c0    ret
   ab8c4:   d503201f    nop
   ab8c8:   d503201f    nop
   ab8cc:   d503201f    nop

00000000000ab8d0 <CBcmFrameBuffer::Initialize()>:
   ab8d0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   ab8d4:   f0000061    adrp    x1, ba000 <font_data+0x1080>
   ab8d8:   910003fd    mov x29, sp
   ab8dc:   a90153f3    stp x19, x20, [sp, #16]
   ab8e0:   aa0003f3    mov x19, x0
   ab8e4:   b94b2020    ldr w0, [x1, #2848]
   ab8e8:   b9401674    ldr w20, [x19, #20]
   ab8ec:   35000040    cbnz    w0, ab8f4 <CBcmFrameBuffer::Initialize()+0x24>
   ab8f0:   97fffef0    bl  ab4b0 <CBcmFrameBuffer::GetNumDisplays() [clone .part.0]>
   ab8f4:   6b00029f    cmp w20, w0
   ab8f8:   52800014    mov w20, #0x0
   ab8fc:   540000a3    b.cc    ab910 <CBcmFrameBuffer::Initialize()+0x40>
   ab900:   2a1403e0    mov w0, w20
   ab904:   a94153f3    ldp x19, x20, [sp, #16]
   ab908:   a8c37bfd    ldp x29, x30, [sp], #48
   ab90c:   d65f03c0    ret
   ab910:   f0000060    adrp    x0, ba000 <font_data+0x1080>
   ab914:   b9401661    ldr w1, [x19, #20]
   ab918:   b9485800    ldr w0, [x0, #2136]
   ab91c:   6b00003f    cmp w1, w0
   ab920:   54000060    b.eq    ab92c <CBcmFrameBuffer::Initialize()+0x5c>
   ab924:   aa1303e0    mov x0, x19
   ab928:   97fffec6    bl  ab440 <CBcmFrameBuffer::SetDisplay() [clone .part.0]>
   ab92c:   52800001    mov w1, #0x0
   ab930:   9100a3e0    add x0, sp, #0x28
   ab934:   97ffc487    bl  9cb50 <CBcmPropertyTags::CBcmPropertyTags(bool)>
   ab938:   9100c261    add x1, x19, #0x30
   ab93c:   9100a3e0    add x0, sp, #0x28
   ab940:   52800e02    mov w2, #0x70
   ab944:   97ffc48b    bl  9cb70 <CBcmPropertyTags::GetTags(void*, unsigned int)>
   ab948:   12001c14    and w20, w0, #0xff
   ab94c:   360002c0    tbz w0, #0, ab9a4 <CBcmFrameBuffer::Initialize()+0xd4>
   ab950:   b9403e60    ldr w0, [x19, #60]
   ab954:   52800014    mov w20, #0x0
   ab958:   34000260    cbz w0, ab9a4 <CBcmFrameBuffer::Initialize()+0xd4>
   ab95c:   b9404260    ldr w0, [x19, #64]
   ab960:   34000220    cbz w0, ab9a4 <CBcmFrameBuffer::Initialize()+0xd4>
   ab964:   b9405260    ldr w0, [x19, #80]
   ab968:   340001e0    cbz w0, ab9a4 <CBcmFrameBuffer::Initialize()+0xd4>
   ab96c:   b9405660    ldr w0, [x19, #84]
   ab970:   340001a0    cbz w0, ab9a4 <CBcmFrameBuffer::Initialize()+0xd4>
   ab974:   b9406660    ldr w0, [x19, #100]
   ab978:   34000160    cbz w0, ab9a4 <CBcmFrameBuffer::Initialize()+0xd4>
   ab97c:   b9408a60    ldr w0, [x19, #136]
   ab980:   34000120    cbz w0, ab9a4 <CBcmFrameBuffer::Initialize()+0xd4>
   ab984:   b9408e63    ldr w3, [x19, #140]
   ab988:   12007401    and w1, w0, #0x3fffffff
   ab98c:   aa1303e0    mov x0, x19
   ab990:   b9409e62    ldr w2, [x19, #156]
   ab994:   29030e61    stp w1, w3, [x19, #24]
   ab998:   b9002262    str w2, [x19, #32]
   ab99c:   97ffff91    bl  ab7e0 <CBcmFrameBuffer::UpdatePalette()>
   ab9a0:   12001c14    and w20, w0, #0xff
   ab9a4:   9100a3e0    add x0, sp, #0x28
   ab9a8:   97ffc46e    bl  9cb60 <CBcmPropertyTags::~CBcmPropertyTags()>
   ab9ac:   2a1403e0    mov w0, w20
   ab9b0:   a94153f3    ldp x19, x20, [sp, #16]
   ab9b4:   a8c37bfd    ldp x29, x30, [sp], #48
   ab9b8:   d65f03c0    ret
   ab9bc:   d503201f    nop

00000000000ab9c0 <CBcmFrameBuffer::SetVirtualOffset(unsigned int, unsigned int)>:
   ab9c0:   a9bb7bfd    stp x29, x30, [sp, #-80]!
   ab9c4:   f0000064    adrp    x4, ba000 <font_data+0x1080>
   ab9c8:   910003fd    mov x29, sp
   ab9cc:   b9401403    ldr w3, [x0, #20]
   ab9d0:   a90153f3    stp x19, x20, [sp, #16]
   ab9d4:   2a0103f3    mov w19, w1
   ab9d8:   2a0203f4    mov w20, w2
   ab9dc:   b9485881    ldr w1, [x4, #2136]
   ab9e0:   f90013f5    str x21, [sp, #32]
   ab9e4:   6b01007f    cmp w3, w1
   ab9e8:   54000040    b.eq    ab9f0 <CBcmFrameBuffer::SetVirtualOffset(unsigned int, unsigned int)+0x30>
   ab9ec:   97fffe95    bl  ab440 <CBcmFrameBuffer::SetDisplay() [clone .part.0]>
   ab9f0:   52800001    mov w1, #0x0
   ab9f4:   9100c3e0    add x0, sp, #0x30
   ab9f8:   97ffc456    bl  9cb50 <CBcmPropertyTags::CBcmPropertyTags(bool)>
   ab9fc:   9100e3e2    add x2, sp, #0x38
   aba00:   9100c3e0    add x0, sp, #0x30
   aba04:   2908d3f3    stp w19, w20, [sp, #68]
   aba08:   52900121    mov w1, #0x8009
   aba0c:   72a00081    movk    w1, #0x4, lsl #16
   aba10:   52800104    mov w4, #0x8
   aba14:   52800283    mov w3, #0x14
   aba18:   97ffc4ae    bl  9ccd0 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   aba1c:   12001c15    and w21, w0, #0xff
   aba20:   360000a0    tbz w0, #0, aba34 <CBcmFrameBuffer::SetVirtualOffset(unsigned int, unsigned int)+0x74>
   aba24:   b94047e0    ldr w0, [sp, #68]
   aba28:   52800015    mov w21, #0x0
   aba2c:   6b13001f    cmp w0, w19
   aba30:   54000100    b.eq    aba50 <CBcmFrameBuffer::SetVirtualOffset(unsigned int, unsigned int)+0x90>
   aba34:   9100c3e0    add x0, sp, #0x30
   aba38:   97ffc44a    bl  9cb60 <CBcmPropertyTags::~CBcmPropertyTags()>
   aba3c:   a94153f3    ldp x19, x20, [sp, #16]
   aba40:   2a1503e0    mov w0, w21
   aba44:   f94013f5    ldr x21, [sp, #32]
   aba48:   a8c57bfd    ldp x29, x30, [sp], #80
   aba4c:   d65f03c0    ret
   aba50:   b9404be0    ldr w0, [sp, #72]
   aba54:   6b14001f    cmp w0, w20
   aba58:   9100c3e0    add x0, sp, #0x30
   aba5c:   1a9f17f5    cset    w21, eq
   aba60:   97ffc440    bl  9cb60 <CBcmPropertyTags::~CBcmPropertyTags()>
   aba64:   a94153f3    ldp x19, x20, [sp, #16]
   aba68:   2a1503e0    mov w0, w21
   aba6c:   f94013f5    ldr x21, [sp, #32]
   aba70:   a8c57bfd    ldp x29, x30, [sp], #80
   aba74:   d65f03c0    ret
   aba78:   d503201f    nop
   aba7c:   d503201f    nop

00000000000aba80 <CBcmFrameBuffer::WaitForVerticalSync()>:
   aba80:   f0000061    adrp    x1, ba000 <font_data+0x1080>
   aba84:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   aba88:   910003fd    mov x29, sp
   aba8c:   b9401402    ldr w2, [x0, #20]
   aba90:   f9000bf3    str x19, [sp, #16]
   aba94:   b9485821    ldr w1, [x1, #2136]
   aba98:   6b01005f    cmp w2, w1
   aba9c:   54000040    b.eq    abaa4 <CBcmFrameBuffer::WaitForVerticalSync()+0x24>
   abaa0:   97fffe68    bl  ab440 <CBcmFrameBuffer::SetDisplay() [clone .part.0]>
   abaa4:   9100a3e0    add x0, sp, #0x28
   abaa8:   52800001    mov w1, #0x0
   abaac:   97ffc429    bl  9cb50 <CBcmPropertyTags::CBcmPropertyTags(bool)>
   abab0:   9100c3e2    add x2, sp, #0x30
   abab4:   52800004    mov w4, #0x0
   abab8:   52800203    mov w3, #0x10
   ababc:   9100a3e0    add x0, sp, #0x28
   abac0:   529001c1    mov w1, #0x800e
   abac4:   72a00081    movk    w1, #0x4, lsl #16
   abac8:   97ffc482    bl  9ccd0 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   abacc:   2a0003f3    mov w19, w0
   abad0:   9100a3e0    add x0, sp, #0x28
   abad4:   97ffc423    bl  9cb60 <CBcmPropertyTags::~CBcmPropertyTags()>
   abad8:   2a1303e0    mov w0, w19
   abadc:   f9400bf3    ldr x19, [sp, #16]
   abae0:   a8c47bfd    ldp x29, x30, [sp], #64
   abae4:   d65f03c0    ret
   abae8:   d503201f    nop
   abaec:   d503201f    nop

00000000000abaf0 <CBcmFrameBuffer::SetBacklightBrightness(unsigned int)>:
   abaf0:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   abaf4:   f0000063    adrp    x3, ba000 <font_data+0x1080>
   abaf8:   910003fd    mov x29, sp
   abafc:   b9401402    ldr w2, [x0, #20]
   abb00:   f9000bf3    str x19, [sp, #16]
   abb04:   2a0103f3    mov w19, w1
   abb08:   b9485861    ldr w1, [x3, #2136]
   abb0c:   6b01005f    cmp w2, w1
   abb10:   54000040    b.eq    abb18 <CBcmFrameBuffer::SetBacklightBrightness(unsigned int)+0x28>
   abb14:   97fffe4b    bl  ab440 <CBcmFrameBuffer::SetDisplay() [clone .part.0]>
   abb18:   9100a3e0    add x0, sp, #0x28
   abb1c:   52800001    mov w1, #0x0
   abb20:   97ffc40c    bl  9cb50 <CBcmPropertyTags::CBcmPropertyTags(bool)>
   abb24:   9100c3e2    add x2, sp, #0x30
   abb28:   52800084    mov w4, #0x4
   abb2c:   b9003ff3    str w19, [sp, #60]
   abb30:   52800203    mov w3, #0x10
   abb34:   9100a3e0    add x0, sp, #0x28
   abb38:   529001e1    mov w1, #0x800f
   abb3c:   72a00081    movk    w1, #0x4, lsl #16
   abb40:   97ffc464    bl  9ccd0 <CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)>
   abb44:   2a0003f3    mov w19, w0
   abb48:   9100a3e0    add x0, sp, #0x28
   abb4c:   97ffc405    bl  9cb60 <CBcmPropertyTags::~CBcmPropertyTags()>
   abb50:   2a1303e0    mov w0, w19
   abb54:   f9400bf3    ldr x19, [sp, #16]
   abb58:   a8c47bfd    ldp x29, x30, [sp], #64
   abb5c:   d65f03c0    ret

00000000000abb60 <CBcmFrameBuffer::SetDisplay()>:
   abb60:   f0000061    adrp    x1, ba000 <font_data+0x1080>
   abb64:   b9401402    ldr w2, [x0, #20]
   abb68:   b9485821    ldr w1, [x1, #2136]
   abb6c:   6b01005f    cmp w2, w1
   abb70:   54000040    b.eq    abb78 <CBcmFrameBuffer::SetDisplay()+0x18>
   abb74:   17fffe33    b   ab440 <CBcmFrameBuffer::SetDisplay() [clone .part.0]>
   abb78:   d65f03c0    ret
   abb7c:   d503201f    nop

00000000000abb80 <CBcmFrameBuffer::GetNumDisplays()>:
   abb80:   f0000060    adrp    x0, ba000 <font_data+0x1080>
   abb84:   b94b2000    ldr w0, [x0, #2848]
   abb88:   34000040    cbz w0, abb90 <CBcmFrameBuffer::GetNumDisplays()+0x10>
   abb8c:   d65f03c0    ret
   abb90:   17fffe48    b   ab4b0 <CBcmFrameBuffer::GetNumDisplays() [clone .part.0]>
    ...

00000000000abba0 <CBcmMailBox::CBcmMailBox(unsigned int, bool)>:
   abba0:   b9000001    str w1, [x0]
   abba4:   39001002    strb    w2, [x0, #4]
   abba8:   d65f03c0    ret
   abbac:   d503201f    nop

00000000000abbb0 <CBcmMailBox::~CBcmMailBox()>:
   abbb0:   d65f03c0    ret
   abbb4:   d503201f    nop
   abbb8:   d503201f    nop
   abbbc:   d503201f    nop

00000000000abbc0 <CBcmMailBox::WriteRead(unsigned int)>:
   abbc0:   a9bc7bfd    stp x29, x30, [sp, #-64]!
   abbc4:   910003fd    mov x29, sp
   abbc8:   a90153f3    stp x19, x20, [sp, #16]
   abbcc:   aa0003f4    mov x20, x0
   abbd0:   39401000    ldrb    w0, [x0, #4]
   abbd4:   f90013f5    str x21, [sp, #32]
   abbd8:   2a0103f5    mov w21, w1
   abbdc:   37000080    tbnz    w0, #0, abbec <CBcmMailBox::WriteRead(unsigned int)+0x2c>
   abbe0:   f0000060    adrp    x0, ba000 <font_data+0x1080>
   abbe4:   b94b2800    ldr w0, [x0, #2856]                                                      // w0 = [0xbab28]
   abbe8:   35000580    cbnz    w0, abc98 <CBcmMailBox::WriteRead(unsigned int)+0xd8>

   abbec:   d2971313    mov x19, #0xb898
   abbf0:   f2bfc013    movk    x19, #0xfe00, lsl #16                                            // x19 = 0xfe00b898  == mailbox_status register
   abbf4:   b9400260    ldr w0, [x19]
   abbf8:   37f00120    tbnz    w0, #30, abc1c <CBcmMailBox::WriteRead(unsigned int)+0x5c>
   abbfc:   d1006273    sub x19, x19, #0x18
   abc00:   b9400261    ldr w1, [x19]
   abc04:   52800280    mov w0, #0x14
   abc08:   97ffea42    bl  a6510 <CTimer::SimpleMsDelay(unsigned int)>
   abc0c:   d2971302    mov x2, #0xb898
   abc10:   f2bfc002    movk    x2, #0xfe00, lsl #16
   abc14:   b9400042    ldr w2, [x2]
   abc18:   36f7ff42    tbz w2, #30, abc00 <CBcmMailBox::WriteRead(unsigned int)+0x40>
   abc1c:   d2971700    mov x0, #0xb8b8
   abc20:   f2bfc000    movk    x0, #0xfe00, lsl #16
   abc24:   d503201f    nop
   abc28:   b9400002    ldr w2, [x0]
   abc2c:   37ffffe2    tbnz    w2, #31, abc28 <CBcmMailBox::WriteRead(unsigned int)+0x68>
   abc30:   f2400ebf    tst x21, #0xf
   abc34:   54000441    b.ne    abcbc <CBcmMailBox::WriteRead(unsigned int)+0xfc>
   abc38:   b9400281    ldr w1, [x20]
   abc3c:   d2971302    mov x2, #0xb898
   abc40:   f2bfc002    movk    x2, #0xfe00, lsl #16
   abc44:   d1006044    sub x4, x2, #0x18
   abc48:   2a0102b5    orr w21, w21, w1
   abc4c:   b81e8015    stur    w21, [x0, #-24]
   abc50:   b9400280    ldr w0, [x20]
   abc54:   d503201f    nop
   abc58:   b9400041    ldr w1, [x2]
   abc5c:   37f7ffe1    tbnz    w1, #30, abc58 <CBcmMailBox::WriteRead(unsigned int)+0x98>
   abc60:   b9400081    ldr w1, [x4]
   abc64:   12000c23    and w3, w1, #0xf
   abc68:   6b00007f    cmp w3, w0
   abc6c:   54ffff61    b.ne    abc58 <CBcmMailBox::WriteRead(unsigned int)+0x98>
   abc70:   39401282    ldrb    w2, [x20, #4]
   abc74:   121c6c20    and w0, w1, #0xfffffff0
   abc78:   37000082    tbnz    w2, #0, abc88 <CBcmMailBox::WriteRead(unsigned int)+0xc8>
   abc7c:   f0000061    adrp    x1, ba000 <font_data+0x1080>
   abc80:   b94b2821    ldr w1, [x1, #2856]
   abc84:   350000e1    cbnz    w1, abca0 <CBcmMailBox::WriteRead(unsigned int)+0xe0>
   abc88:   a94153f3    ldp x19, x20, [sp, #16]
   abc8c:   f94013f5    ldr x21, [sp, #32]
   abc90:   a8c47bfd    ldp x29, x30, [sp], #64
   abc94:   d65f03c0    ret

   abc98:   97fff276    bl  a8670 <EnterCritical>
   abc9c:   17ffffd4    b   abbec <CBcmMailBox::WriteRead(unsigned int)+0x2c>
   abca0:   b9003fe0    str w0, [sp, #60]
   abca4:   97fff2a3    bl  a8730 <LeaveCritical>
   abca8:   a94153f3    ldp x19, x20, [sp, #16]
   abcac:   f94013f5    ldr x21, [sp, #32]
   abcb0:   b9403fe0    ldr w0, [sp, #60]
   abcb4:   a8c47bfd    ldp x29, x30, [sp], #64
   abcb8:   d65f03c0    ret
   abcbc:   90000041    adrp    x1, b3000 <_etext+0x3f9c>
   abcc0:   90000040    adrp    x0, b3000 <_etext+0x3f9c>
   abcc4:   912dc021    add x1, x1, #0xb70
   abcc8:   912e0000    add x0, x0, #0xb80
   abccc:   52800c42    mov w2, #0x62
   abcd0:   97ffc37c    bl  9cac0 <assertion_failed>
   abcd4:   d503201f    nop
   abcd8:   d503201f    nop
   abcdc:   d503201f    nop

00000000000abce0 <CBcmMailBox::Flush()>:
   abce0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   abce4:   910003fd    mov x29, sp
   abce8:   f9000bf3    str x19, [sp, #16]
   abcec:   d2971313    mov x19, #0xb898
   abcf0:   f2bfc013    movk    x19, #0xfe00, lsl #16
   abcf4:   b9400260    ldr w0, [x19]
   abcf8:   37f00120    tbnz    w0, #30, abd1c <CBcmMailBox::Flush()+0x3c>
   abcfc:   d1006273    sub x19, x19, #0x18
   abd00:   b9400261    ldr w1, [x19]
   abd04:   52800280    mov w0, #0x14
   abd08:   97ffea02    bl  a6510 <CTimer::SimpleMsDelay(unsigned int)>
   abd0c:   d2971300    mov x0, #0xb898
   abd10:   f2bfc000    movk    x0, #0xfe00, lsl #16
   abd14:   b9400000    ldr w0, [x0]
   abd18:   36f7ff40    tbz w0, #30, abd00 <CBcmMailBox::Flush()+0x20>
   abd1c:   f9400bf3    ldr x19, [sp, #16]
   abd20:   a8c27bfd    ldp x29, x30, [sp], #32
   abd24:   d65f03c0    ret
   abd28:   d503201f    nop
   abd2c:   d503201f    nop

00000000000abd30 <CBcmMailBox::Read()>:
   abd30:   b9400004    ldr w4, [x0]
   abd34:   d2971301    mov x1, #0xb898
   abd38:   f2bfc001    movk    x1, #0xfe00, lsl #16
   abd3c:   d1006023    sub x3, x1, #0x18
   abd40:   b9400020    ldr w0, [x1]
   abd44:   37f7ffe0    tbnz    w0, #30, abd40 <CBcmMailBox::Read()+0x10>
   abd48:   b9400060    ldr w0, [x3]
   abd4c:   12000c02    and w2, w0, #0xf
   abd50:   6b04005f    cmp w2, w4
   abd54:   54ffff61    b.ne    abd40 <CBcmMailBox::Read()+0x10>
   abd58:   121c6c00    and w0, w0, #0xfffffff0
   abd5c:   d65f03c0    ret

00000000000abd60 <CBcmMailBox::Write(unsigned int)>:
   abd60:   d2971703    mov x3, #0xb8b8
   abd64:   f2bfc003    movk    x3, #0xfe00, lsl #16
   abd68:   b9400062    ldr w2, [x3]
   abd6c:   37ffffe2    tbnz    w2, #31, abd68 <CBcmMailBox::Write(unsigned int)+0x8>
   abd70:   f2400c3f    tst x1, #0xf
   abd74:   540000a1    b.ne    abd88 <CBcmMailBox::Write(unsigned int)+0x28>
   abd78:   b9400000    ldr w0, [x0]
   abd7c:   2a000021    orr w1, w1, w0
   abd80:   b81e8061    stur    w1, [x3, #-24]
   abd84:   d65f03c0    ret
   abd88:   90000041    adrp    x1, b3000 <_etext+0x3f9c>
   abd8c:   90000040    adrp    x0, b3000 <_etext+0x3f9c>
   abd90:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   abd94:   912dc021    add x1, x1, #0xb70
   abd98:   910003fd    mov x29, sp
   abd9c:   912e0000    add x0, x0, #0xb80
   abda0:   52800c42    mov w2, #0x62
   abda4:   97ffc347    bl  9cac0 <assertion_failed>
    ...

00000000000abdb0 <_GLOBAL__sub_I__ZN11CBcmMailBox10s_SpinLockE>:
   abdb0:   f0000060    adrp    x0, ba000 <font_data+0x1080>
   abdb4:   b90b281f    str wzr, [x0, #2856]
   abdb8:   d65f03c0    ret
   abdbc:   00000000    udf #0

00000000000abdc0 <CCharGenerator::CCharGenerator()>:
   abdc0:   52800101    mov w1, #0x8
   abdc4:   b9000001    str w1, [x0]
   abdc8:   d65f03c0    ret
   abdcc:   d503201f    nop

00000000000abdd0 <CCharGenerator::~CCharGenerator()>:
   abdd0:   d65f03c0    ret
   abdd4:   d503201f    nop
   abdd8:   d503201f    nop
   abddc:   d503201f    nop

00000000000abde0 <CCharGenerator::GetCharWidth() const>:
   abde0:   b9400000    ldr w0, [x0]
   abde4:   d65f03c0    ret
   abde8:   d503201f    nop
   abdec:   d503201f    nop

00000000000abdf0 <CCharGenerator::GetCharHeight() const>:
   abdf0:   52800260    mov w0, #0x13
   abdf4:   d65f03c0    ret
   abdf8:   d503201f    nop
   abdfc:   d503201f    nop

00000000000abe00 <CCharGenerator::GetUnderline() const>:
   abe00:   52800200    mov w0, #0x10
   abe04:   d65f03c0    ret
   abe08:   d503201f    nop
   abe0c:   d503201f    nop

00000000000abe10 <CCharGenerator::GetPixel(char, unsigned int, unsigned int) const>:
   abe10:   12001c21    and w1, w1, #0xff
   abe14:   51008421    sub w1, w1, #0x21
   abe18:   7103783f    cmp w1, #0xde
   abe1c:   54000208    b.hi    abe5c <CCharGenerator::GetPixel(char, unsigned int, unsigned int) const+0x4c>
   abe20:   b9400000    ldr w0, [x0]
   abe24:   6b02001f    cmp w0, w2
   abe28:   540001e9    b.ls    abe64 <CCharGenerator::GetPixel(char, unsigned int, unsigned int) const+0x54>
   abe2c:   71003c7f    cmp w3, #0xf
   abe30:   52800000    mov w0, #0x0
   abe34:   54000168    b.hi    abe60 <CCharGenerator::GetPixel(char, unsigned int, unsigned int) const+0x50>
   abe38:   b0000060    adrp    x0, b8000 <vtable for CGPIOPin+0x288>
   abe3c:   913e0000    add x0, x0, #0xf80
   abe40:   8b215001    add x1, x0, w1, uxtw #4
   abe44:   38634821    ldrb    w1, [x1, w3, uxtw]
   abe48:   52801000    mov w0, #0x80
   abe4c:   1ac22800    asr w0, w0, w2
   abe50:   6a00003f    tst w1, w0
   abe54:   1a9f07e0    cset    w0, ne
   abe58:   d65f03c0    ret
   abe5c:   52800000    mov w0, #0x0
   abe60:   d65f03c0    ret
   abe64:   90000041    adrp    x1, b3000 <_etext+0x3f9c>
   abe68:   90000040    adrp    x0, b3000 <_etext+0x3f9c>
   abe6c:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   abe70:   912e6021    add x1, x1, #0xb98
   abe74:   910003fd    mov x29, sp
   abe78:   912ec000    add x0, x0, #0xbb0
   abe7c:   528009c2    mov w2, #0x4e
   abe80:   97ffc310    bl  9cac0 <assertion_failed>
    ...

00000000000abec0 <DelayLoop>:
   abec0:   2a0103e1    mov w1, w1
   abec4:   2a0203e2    mov w2, w2
   abec8:   71000400    subs    w0, w0, #0x1
   abecc:   54ffffa1    b.ne    abec0 <DelayLoop>
   abed0:   d65f03c0    ret
    ...

00000000000abee0 <CDMAChannel::CDMAChannel(unsigned int, CInterruptSystem*)>:
   abee0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   abee4:   910003fd    mov x29, sp
   abee8:   a90153f3    stp x19, x20, [sp, #16]
   abeec:   aa0003f3    mov x19, x0
   abef0:   2a0103f4    mov w20, w1
   abef4:   f90013f5    str x21, [sp, #32]
   abef8:   aa0203f5    mov x21, x2
   abefc:   97ffd2d9    bl  a0a60 <CMachineInfo::Get()>
   abf00:   2a1403e1    mov w1, w20
   abf04:   97ffd1eb    bl  a06b0 <CMachineInfo::AllocateDMAChannel(unsigned int)>
   abf08:   71020e9f    cmp w20, #0x83
   abf0c:   51002e94    sub w20, w20, #0xb
   abf10:   b9000260    str w0, [x19]
   abf14:   7a431a80    ccmp    w20, #0x3, #0x0, ne
   abf18:   a900fe7f    stp xzr, xzr, [x19, #8]
   abf1c:   f9000e75    str x21, [x19, #24]
   abf20:   3900827f    strb    wzr, [x19, #32]
   abf24:   a902fe7f    stp xzr, xzr, [x19, #40]
   abf28:   3900e27f    strb    wzr, [x19, #56]
   abf2c:   f9002a7f    str xzr, [x19, #80]
   abf30:   540001c8    b.hi    abf68 <CDMAChannel::CDMAChannel(unsigned int, CInterruptSystem*)+0x88>
   abf34:   7102001f    cmp w0, #0x80
   abf38:   54000600    b.eq    abff8 <CDMAChannel::CDMAChannel(unsigned int, CInterruptSystem*)+0x118>
   abf3c:   d2800a00    mov x0, #0x50
   abf40:   97ffee20    bl  a77c0 <operator new(unsigned long)>
   abf44:   f9400e62    ldr x2, [x19, #24]
   abf48:   aa0003f4    mov x20, x0
   abf4c:   b9400261    ldr w1, [x19]
   abf50:   940008e4    bl  ae2e0 <CDMA4Channel::CDMA4Channel(unsigned int, CInterruptSystem*)>
   abf54:   f94013f5    ldr x21, [sp, #32]
   abf58:   f9002a74    str x20, [x19, #80]
   abf5c:   a94153f3    ldp x19, x20, [sp, #16]
   abf60:   a8c37bfd    ldp x29, x30, [sp], #48
   abf64:   d65f03c0    ret
   abf68:   7102001f    cmp w0, #0x80
   abf6c:   54000500    b.eq    ac00c <CDMAChannel::CDMAChannel(unsigned int, CInterruptSystem*)+0x12c>
   abf70:   71001c1f    cmp w0, #0x7
   abf74:   54000568    b.hi    ac020 <CDMAChannel::CDMAChannel(unsigned int, CInterruptSystem*)+0x140>
   abf78:   52800001    mov w1, #0x0
   abf7c:   d28007e0    mov x0, #0x3f
   abf80:   97ffeddc    bl  a76f0 <operator new[](unsigned long, int)>
   abf84:   91007c02    add x2, x0, #0x1f
   abf88:   aa0003e3    mov x3, x0
   abf8c:   b9400265    ldr w5, [x19]
   abf90:   927be842    and x2, x2, #0xffffffffffffffe0
   abf94:   d28ffe04    mov x4, #0x7ff0
   abf98:   f2bfc004    movk    x4, #0xfe00, lsl #16
   abf9c:   f9000663    str x3, [x19, #8]
   abfa0:   52800021    mov w1, #0x1
   abfa4:   f9000c5f    str xzr, [x2, #24]
   abfa8:   52807d00    mov w0, #0x3e8
   abfac:   b9400083    ldr w3, [x4]
   abfb0:   1ac52021    lsl w1, w1, w5
   abfb4:   f9000a62    str x2, [x19, #16]
   abfb8:   2a030021    orr w1, w1, w3
   abfbc:   b9000081    str w1, [x4]
   abfc0:   97ffe96c    bl  a6570 <CTimer::SimpleusDelay(unsigned int)>
   abfc4:   b9400261    ldr w1, [x19]
   abfc8:   52b00000    mov w0, #0x80000000
   abfcc:   117f8021    add w1, w1, #0xfe0, lsl #12
   abfd0:   1101c021    add w1, w1, #0x70
   abfd4:   53185c21    lsl w1, w1, #8
   abfd8:   b9000020    str w0, [x1]
   abfdc:   d503201f    nop
   abfe0:   b9400020    ldr w0, [x1]
   abfe4:   37ffffe0    tbnz    w0, #31, abfe0 <CDMAChannel::CDMAChannel(unsigned int, CInterruptSystem*)+0x100>
   abfe8:   a94153f3    ldp x19, x20, [sp, #16]
   abfec:   f94013f5    ldr x21, [sp, #32]
   abff0:   a8c37bfd    ldp x29, x30, [sp], #48
   abff4:   d65f03c0    ret
   abff8:   d0000061    adrp    x1, b9000 <font_data+0x80>
   abffc:   9135c021    add x1, x1, #0xd70
   ac000:   91004020    add x0, x1, #0x10
   ac004:   528005e2    mov w2, #0x2f
   ac008:   97ffc2ae    bl  9cac0 <assertion_failed>
   ac00c:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac010:   9135c021    add x1, x1, #0xd70
   ac014:   91004020    add x0, x1, #0x10
   ac018:   52800722    mov w2, #0x39
   ac01c:   97ffc2a9    bl  9cac0 <assertion_failed>
   ac020:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac024:   9135c021    add x1, x1, #0xd70
   ac028:   9100c020    add x0, x1, #0x30
   ac02c:   52800742    mov w2, #0x3a
   ac030:   97ffc2a4    bl  9cac0 <assertion_failed>
   ac034:   d503201f    nop
   ac038:   d503201f    nop
   ac03c:   d503201f    nop

00000000000ac040 <CDMAChannel::~CDMAChannel()>:
   ac040:   a9be7bfd    stp x29, x30, [sp, #-32]!
   ac044:   910003fd    mov x29, sp
   ac048:   a90153f3    stp x19, x20, [sp, #16]
   ac04c:   aa0003f3    mov x19, x0
   ac050:   f9402814    ldr x20, [x0, #80]
   ac054:   b9400001    ldr w1, [x0]
   ac058:   b40001f4    cbz x20, ac094 <CDMAChannel::~CDMAChannel()+0x54>
   ac05c:   51002c21    sub w1, w1, #0xb
   ac060:   71000c3f    cmp w1, #0x3
   ac064:   540006e8    b.hi    ac140 <CDMAChannel::~CDMAChannel()+0x100>
   ac068:   aa1403e0    mov x0, x20
   ac06c:   940008e1    bl  ae3f0 <CDMA4Channel::~CDMA4Channel()>
   ac070:   aa1403e0    mov x0, x20
   ac074:   d2800a01    mov x1, #0x50
   ac078:   97ffedfa    bl  a7860 <operator delete(void*, unsigned long)>
   ac07c:   f9002a7f    str xzr, [x19, #80]
   ac080:   97ffd278    bl  a0a60 <CMachineInfo::Get()>
   ac084:   b9400261    ldr w1, [x19]
   ac088:   a94153f3    ldp x19, x20, [sp, #16]
   ac08c:   a8c27bfd    ldp x29, x30, [sp], #32
   ac090:   17ffd1cc    b   a07c0 <CMachineInfo::FreeDMAChannel(unsigned int)>
   ac094:   71001c3f    cmp w1, #0x7
   ac098:   540005e8    b.hi    ac154 <CDMAChannel::~CDMAChannel()+0x114>
   ac09c:   52800e00    mov w0, #0x70
   ac0a0:   72a01fc0    movk    w0, #0xfe, lsl #16
   ac0a4:   0b000021    add w1, w1, w0
   ac0a8:   52b00002    mov w2, #0x80000000
   ac0ac:   53185c21    lsl w1, w1, #8
   ac0b0:   b9000022    str w2, [x1]
   ac0b4:   b9400263    ldr w3, [x19]
   ac0b8:   0b000061    add w1, w3, w0
   ac0bc:   53185c21    lsl w1, w1, #8
   ac0c0:   b9400020    ldr w0, [x1]
   ac0c4:   37ffffe0    tbnz    w0, #31, ac0c0 <CDMAChannel::~CDMAChannel()+0x80>
   ac0c8:   d28ffe02    mov x2, #0x7ff0
   ac0cc:   f2bfc002    movk    x2, #0xfe00, lsl #16
   ac0d0:   f9400e60    ldr x0, [x19, #24]
   ac0d4:   52800021    mov w1, #0x1
   ac0d8:   1ac32021    lsl w1, w1, w3
   ac0dc:   b9400043    ldr w3, [x2]
   ac0e0:   0a210061    bic w1, w3, w1
   ac0e4:   b9000041    str w1, [x2]
   ac0e8:   f900167f    str xzr, [x19, #40]
   ac0ec:   b4000120    cbz x0, ac110 <CDMAChannel::~CDMAChannel()+0xd0>
   ac0f0:   39408261    ldrb    w1, [x19, #32]
   ac0f4:   360000c1    tbz w1, #0, ac10c <CDMAChannel::~CDMAChannel()+0xcc>
   ac0f8:   b9400261    ldr w1, [x19]
   ac0fc:   7100303f    cmp w1, #0xc
   ac100:   54000348    b.hi    ac168 <CDMAChannel::~CDMAChannel()+0x128>
   ac104:   1101c021    add w1, w1, #0x70
   ac108:   97fff876    bl  aa2e0 <CInterruptSystem::DisconnectIRQ(unsigned int)>
   ac10c:   f9000e7f    str xzr, [x19, #24]
   ac110:   97ffd254    bl  a0a60 <CMachineInfo::Get()>
   ac114:   b9400261    ldr w1, [x19]
   ac118:   97ffd1aa    bl  a07c0 <CMachineInfo::FreeDMAChannel(unsigned int)>
   ac11c:   f9400660    ldr x0, [x19, #8]
   ac120:   f9000a7f    str xzr, [x19, #16]
   ac124:   b4000080    cbz x0, ac134 <CDMAChannel::~CDMAChannel()+0xf4>
   ac128:   a94153f3    ldp x19, x20, [sp, #16]
   ac12c:   a8c27bfd    ldp x29, x30, [sp], #32
   ac130:   17ffedc0    b   a7830 <operator delete[](void*)>
   ac134:   a94153f3    ldp x19, x20, [sp, #16]
   ac138:   a8c27bfd    ldp x29, x30, [sp], #32
   ac13c:   d65f03c0    ret
   ac140:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac144:   9135c021    add x1, x1, #0xd70
   ac148:   91014020    add x0, x1, #0x50
   ac14c:   52800aa2    mov w2, #0x55
   ac150:   97ffc25c    bl  9cac0 <assertion_failed>
   ac154:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac158:   9135c021    add x1, x1, #0xd70
   ac15c:   9100c020    add x0, x1, #0x30
   ac160:   52800c42    mov w2, #0x62
   ac164:   97ffc257    bl  9cac0 <assertion_failed>
   ac168:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac16c:   9135c021    add x1, x1, #0xd70
   ac170:   91026020    add x0, x1, #0x98
   ac174:   52800e82    mov w2, #0x74
   ac178:   97ffc252    bl  9cac0 <assertion_failed>
   ac17c:   d503201f    nop

00000000000ac180 <CDMAChannel::SetupMemCopy(void*, void const*, unsigned long, unsigned int, bool)>:
   ac180:   aa0003e9    mov x9, x0
   ac184:   f9402800    ldr x0, [x0, #80]
   ac188:   12001ca5    and w5, w5, #0xff
   ac18c:   b50008e0    cbnz    x0, ac2a8 <CDMAChannel::SetupMemCopy(void*, void const*, unsigned long, unsigned int, bool)+0x128>
   ac190:   a9be7bfd    stp x29, x30, [sp, #-32]!
   ac194:   910003fd    mov x29, sp
   ac198:   a90153f3    stp x19, x20, [sp, #16]
   ac19c:   aa0103f4    mov x20, x1
   ac1a0:   b4000a21    cbz x1, ac2e4 <CDMAChannel::SetupMemCopy(void*, void const*, unsigned long, unsigned int, bool)+0x164>
   ac1a4:   aa0203e8    mov x8, x2
   ac1a8:   b4000a82    cbz x2, ac2f8 <CDMAChannel::SetupMemCopy(void*, void const*, unsigned long, unsigned int, bool)+0x178>
   ac1ac:   aa0303f3    mov x19, x3
   ac1b0:   b40007e3    cbz x3, ac2ac <CDMAChannel::SetupMemCopy(void*, void const*, unsigned long, unsigned int, bool)+0x12c>
   ac1b4:   71003c9f    cmp w4, #0xf
   ac1b8:   54000aa8    b.hi    ac30c <CDMAChannel::SetupMemCopy(void*, void const*, unsigned long, unsigned int, bool)+0x18c>
   ac1bc:   f9400926    ldr x6, [x9, #16]
   ac1c0:   b4000b06    cbz x6, ac320 <CDMAChannel::SetupMemCopy(void*, void const*, unsigned long, unsigned int, bool)+0x1a0>
   ac1c4:   b24077e0    mov x0, #0x3fffffff
   ac1c8:   eb00007f    cmp x3, x0
   ac1cc:   54000b48    b.hi    ac334 <CDMAChannel::SetupMemCopy(void*, void const*, unsigned long, unsigned int, bool)+0x1b4>
   ac1d0:   b9400120    ldr w0, [x9]
   ac1d4:   528e0402    mov w2, #0x7020
   ac1d8:   72bfc002    movk    w2, #0xfe00, lsl #16
   ac1dc:   d29fffe1    mov x1, #0xffff
   ac1e0:   0b002040    add w0, w2, w0, lsl #8
   ac1e4:   b9400000    ldr w0, [x0]
   ac1e8:   f264001f    tst x0, #0x10000000
   ac1ec:   fa411060    ccmp    x3, x1, #0x0, ne
   ac1f0:   54000ac8    b.hi    ac348 <CDMAChannel::SetupMemCopy(void*, void const*, unsigned long, unsigned int, bool)+0x1c8>
   ac1f4:   52806603    mov w3, #0x330
   ac1f8:   32020501    orr w1, w8, #0xc0000000
   ac1fc:   390010c8    strb    w8, [x6, #4]
   ac200:   2a043064    orr w4, w3, w4, lsl #12
   ac204:   53187c21    lsr w1, w1, #24
   ac208:   53083d02    ubfx    w2, w8, #8, #8
   ac20c:   390000c3    strb    w3, [x6]
   ac210:   32020680    orr w0, w20, #0xc0000000
   ac214:   53105d0b    ubfx    w11, w8, #16, #8
   ac218:   53087c83    lsr w3, w4, #8
   ac21c:   d3505c8c    ubfx    x12, x4, #16, #8
   ac220:   390014c2    strb    w2, [x6, #5]
   ac224:   53187c00    lsr w0, w0, #24
   ac228:   53187c84    lsr w4, w4, #24
   ac22c:   39001cc1    strb    w1, [x6, #7]
   ac230:   53083e8a    ubfx    w10, w20, #8, #8
   ac234:   53105e87    ubfx    w7, w20, #16, #8
   ac238:   390004c3    strb    w3, [x6, #1]
   ac23c:   53105e62    ubfx    w2, w19, #16, #8
   ac240:   53083e63    ubfx    w3, w19, #8, #8
   ac244:   390008cc    strb    w12, [x6, #2]
   ac248:   53187e61    lsr w1, w19, #24
   ac24c:   39000cc4    strb    w4, [x6, #3]
   ac250:   390018cb    strb    w11, [x6, #6]
   ac254:   390020d4    strb    w20, [x6, #8]
   ac258:   390024ca    strb    w10, [x6, #9]
   ac25c:   390028c7    strb    w7, [x6, #10]
   ac260:   39002cc0    strb    w0, [x6, #11]
   ac264:   390030d3    strb    w19, [x6, #12]
   ac268:   390034c3    strb    w3, [x6, #13]
   ac26c:   390038c2    strb    w2, [x6, #14]
   ac270:   39003cc1    strb    w1, [x6, #15]
   ac274:   390040df    strb    wzr, [x6, #16]
   ac278:   390044df    strb    wzr, [x6, #17]
   ac27c:   390048df    strb    wzr, [x6, #18]
   ac280:   39004cdf    strb    wzr, [x6, #19]
   ac284:   390050df    strb    wzr, [x6, #20]
   ac288:   390054df    strb    wzr, [x6, #21]
   ac28c:   390058df    strb    wzr, [x6, #22]
   ac290:   39005cdf    strb    wzr, [x6, #23]
   ac294:   37000165    tbnz    w5, #0, ac2c0 <CDMAChannel::SetupMemCopy(void*, void const*, unsigned long, unsigned int, bool)+0x140>
   ac298:   a94153f3    ldp x19, x20, [sp, #16]
   ac29c:   f900213f    str xzr, [x9, #64]
   ac2a0:   a8c27bfd    ldp x29, x30, [sp], #32
   ac2a4:   d65f03c0    ret
   ac2a8:   1400088e    b   ae4e0 <CDMA4Channel::SetupMemCopy(void*, void const*, unsigned long, unsigned int, bool)>
   ac2ac:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac2b0:   9135c021    add x1, x1, #0xd70
   ac2b4:   91036020    add x0, x1, #0xd8
   ac2b8:   52801222    mov w2, #0x91
   ac2bc:   97ffc201    bl  9cac0 <assertion_failed>
   ac2c0:   aa0803e0    mov x0, x8
   ac2c4:   aa1303e1    mov x1, x19
   ac2c8:   a9044d34    stp x20, x19, [x9, #64]
   ac2cc:   97fff1fd    bl  a8ac0 <CleanAndInvalidateDataCacheRange>
   ac2d0:   aa1303e1    mov x1, x19
   ac2d4:   aa1403e0    mov x0, x20
   ac2d8:   a94153f3    ldp x19, x20, [sp, #16]
   ac2dc:   a8c27bfd    ldp x29, x30, [sp], #32
   ac2e0:   17fff1f8    b   a8ac0 <CleanAndInvalidateDataCacheRange>
   ac2e4:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac2e8:   9135c021    add x1, x1, #0xd70
   ac2ec:   9102c020    add x0, x1, #0xb0
   ac2f0:   528011e2    mov w2, #0x8f
   ac2f4:   97ffc1f3    bl  9cac0 <assertion_failed>
   ac2f8:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac2fc:   9135c021    add x1, x1, #0xd70
   ac300:   91032020    add x0, x1, #0xc8
   ac304:   52801202    mov w2, #0x90
   ac308:   97ffc1ee    bl  9cac0 <assertion_failed>
   ac30c:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac310:   9135c021    add x1, x1, #0xd70
   ac314:   9103a020    add x0, x1, #0xe8
   ac318:   52801242    mov w2, #0x92
   ac31c:   97ffc1e9    bl  9cac0 <assertion_failed>
   ac320:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac324:   9135c021    add x1, x1, #0xd70
   ac328:   91040020    add x0, x1, #0x100
   ac32c:   52801282    mov w2, #0x94
   ac330:   97ffc1e4    bl  9cac0 <assertion_failed>
   ac334:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac338:   9135c021    add x1, x1, #0xd70
   ac33c:   91046020    add x0, x1, #0x118
   ac340:   528012a2    mov w2, #0x95
   ac344:   97ffc1df    bl  9cac0 <assertion_failed>
   ac348:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac34c:   9135c021    add x1, x1, #0xd70
   ac350:   9104c020    add x0, x1, #0x130
   ac354:   528012c2    mov w2, #0x96
   ac358:   97ffc1da    bl  9cac0 <assertion_failed>
   ac35c:   d503201f    nop

00000000000ac360 <CDMAChannel::SetupIORead(void*, unsigned int, unsigned long, TDREQ)>:
   ac360:   aa0003e9    mov x9, x0
   ac364:   f9402800    ldr x0, [x0, #80]
   ac368:   b50008a0    cbnz    x0, ac47c <CDMAChannel::SetupIORead(void*, unsigned int, unsigned long, TDREQ)+0x11c>
   ac36c:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   ac370:   910003fd    mov x29, sp
   ac374:   aa0103e8    mov x8, x1
   ac378:   b40008e1    cbz x1, ac494 <CDMAChannel::SetupIORead(void*, unsigned int, unsigned long, TDREQ)+0x134>
   ac37c:   aa0303e6    mov x6, x3
   ac380:   b4000943    cbz x3, ac4a8 <CDMAChannel::SetupIORead(void*, unsigned int, unsigned long, TDREQ)+0x148>
   ac384:   b24077e0    mov x0, #0x3fffffff
   ac388:   eb00007f    cmp x3, x0
   ac38c:   540007a8    b.hi    ac480 <CDMAChannel::SetupIORead(void*, unsigned int, unsigned long, TDREQ)+0x120>
   ac390:   2a0203e5    mov w5, w2
   ac394:   b9400122    ldr w2, [x9]
   ac398:   528e0401    mov w1, #0x7020
   ac39c:   72bfc001    movk    w1, #0xfe00, lsl #16
   ac3a0:   d29fffe0    mov x0, #0xffff
   ac3a4:   0b022022    add w2, w1, w2, lsl #8
   ac3a8:   b9400041    ldr w1, [x2]
   ac3ac:   f264003f    tst x1, #0x10000000
   ac3b0:   fa401060    ccmp    x3, x0, #0x0, ne
   ac3b4:   54000988    b.hi    ac4e4 <CDMAChannel::SetupIORead(void*, unsigned int, unsigned long, TDREQ)+0x184>
   ac3b8:   72005ca2    ands    w2, w5, #0xffffff
   ac3bc:   54000800    b.eq    ac4bc <CDMAChannel::SetupIORead(void*, unsigned int, unsigned long, TDREQ)+0x15c>
   ac3c0:   f9400925    ldr x5, [x9, #16]
   ac3c4:   52afc000    mov w0, #0x7e000000
   ac3c8:   0b000042    add w2, w2, w0
   ac3cc:   b4000825    cbz x5, ac4d0 <CDMAChannel::SetupIORead(void*, unsigned int, unsigned long, TDREQ)+0x170>
   ac3d0:   52808700    mov w0, #0x438
   ac3d4:   2a0403e7    mov w7, w4
   ac3d8:   390008a4    strb    w4, [x5, #2]
   ac3dc:   d3483ce4    ubfx    x4, x7, #8, #8
   ac3e0:   53087c07    lsr w7, w0, #8
   ac3e4:   390010a2    strb    w2, [x5, #4]
   ac3e8:   32020503    orr w3, w8, #0xc0000000
   ac3ec:   d3483c41    ubfx    x1, x2, #8, #8
   ac3f0:   390000a0    strb    w0, [x5]
   ac3f4:   53187c63    lsr w3, w3, #24
   ac3f8:   d3505c40    ubfx    x0, x2, #16, #8
   ac3fc:   390004a7    strb    w7, [x5, #1]
   ac400:   53187c42    lsr w2, w2, #24
   ac404:   53083d0c    ubfx    w12, w8, #8, #8
   ac408:   39000ca4    strb    w4, [x5, #3]
   ac40c:   53105d0b    ubfx    w11, w8, #16, #8
   ac410:   53083cca    ubfx    w10, w6, #8, #8
   ac414:   390014a1    strb    w1, [x5, #5]
   ac418:   53105cc7    ubfx    w7, w6, #16, #8
   ac41c:   53187cc4    lsr w4, w6, #24
   ac420:   390018a0    strb    w0, [x5, #6]
   ac424:   39001ca2    strb    w2, [x5, #7]
   ac428:   aa0603e1    mov x1, x6
   ac42c:   aa0803e0    mov x0, x8
   ac430:   390020a8    strb    w8, [x5, #8]
   ac434:   390024ac    strb    w12, [x5, #9]
   ac438:   390028ab    strb    w11, [x5, #10]
   ac43c:   39002ca3    strb    w3, [x5, #11]
   ac440:   390030a6    strb    w6, [x5, #12]
   ac444:   390034aa    strb    w10, [x5, #13]
   ac448:   390038a7    strb    w7, [x5, #14]
   ac44c:   39003ca4    strb    w4, [x5, #15]
   ac450:   390040bf    strb    wzr, [x5, #16]
   ac454:   390044bf    strb    wzr, [x5, #17]
   ac458:   390048bf    strb    wzr, [x5, #18]
   ac45c:   39004cbf    strb    wzr, [x5, #19]
   ac460:   390050bf    strb    wzr, [x5, #20]
   ac464:   390054bf    strb    wzr, [x5, #21]
   ac468:   390058bf    strb    wzr, [x5, #22]
   ac46c:   39005cbf    strb    wzr, [x5, #23]
   ac470:   a9041928    stp x8, x6, [x9, #64]
   ac474:   a8c17bfd    ldp x29, x30, [sp], #16
   ac478:   17fff192    b   a8ac0 <CleanAndInvalidateDataCacheRange>
   ac47c:   14000889    b   ae6a0 <CDMA4Channel::SetupIORead(void*, unsigned int, unsigned long, TDREQ)>
   ac480:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac484:   9135c021    add x1, x1, #0xd70
   ac488:   91046020    add x0, x1, #0x118
   ac48c:   528017e2    mov w2, #0xbf
   ac490:   97ffc18c    bl  9cac0 <assertion_failed>
   ac494:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac498:   9135c021    add x1, x1, #0xd70
   ac49c:   9102c020    add x0, x1, #0xb0
   ac4a0:   528017a2    mov w2, #0xbd
   ac4a4:   97ffc187    bl  9cac0 <assertion_failed>
   ac4a8:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac4ac:   9135c021    add x1, x1, #0xd70
   ac4b0:   91036020    add x0, x1, #0xd8
   ac4b4:   528017c2    mov w2, #0xbe
   ac4b8:   97ffc182    bl  9cac0 <assertion_failed>
   ac4bc:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac4c0:   9135c021    add x1, x1, #0xd70
   ac4c4:   91062020    add x0, x1, #0x188
   ac4c8:   52801882    mov w2, #0xc4
   ac4cc:   97ffc17d    bl  9cac0 <assertion_failed>
   ac4d0:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac4d4:   9135c021    add x1, x1, #0xd70
   ac4d8:   91040020    add x0, x1, #0x100
   ac4dc:   528018e2    mov w2, #0xc7
   ac4e0:   97ffc178    bl  9cac0 <assertion_failed>
   ac4e4:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac4e8:   9135c021    add x1, x1, #0xd70
   ac4ec:   9104c020    add x0, x1, #0x130
   ac4f0:   52801802    mov w2, #0xc0
   ac4f4:   97ffc173    bl  9cac0 <assertion_failed>
   ac4f8:   d503201f    nop
   ac4fc:   d503201f    nop

00000000000ac500 <CDMAChannel::SetupIOWrite(unsigned int, void const*, unsigned long, TDREQ)>:
   ac500:   f9402808    ldr x8, [x0, #80]
   ac504:   b50008c8    cbnz    x8, ac61c <CDMAChannel::SetupIOWrite(unsigned int, void const*, unsigned long, TDREQ)+0x11c>
   ac508:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   ac50c:   910003fd    mov x29, sp
   ac510:   aa0003e9    mov x9, x0
   ac514:   aa0203e0    mov x0, x2
   ac518:   b4000902    cbz x2, ac638 <CDMAChannel::SetupIOWrite(unsigned int, void const*, unsigned long, TDREQ)+0x138>
   ac51c:   aa0303e6    mov x6, x3
   ac520:   b4000963    cbz x3, ac64c <CDMAChannel::SetupIOWrite(unsigned int, void const*, unsigned long, TDREQ)+0x14c>
   ac524:   2a0103e5    mov w5, w1
   ac528:   b24077e1    mov x1, #0x3fffffff
   ac52c:   eb01007f    cmp x3, x1
   ac530:   540007a8    b.hi    ac624 <CDMAChannel::SetupIOWrite(unsigned int, void const*, unsigned long, TDREQ)+0x124>
   ac534:   b9400121    ldr w1, [x9]
   ac538:   528e0403    mov w3, #0x7020
   ac53c:   72bfc003    movk    w3, #0xfe00, lsl #16
   ac540:   d29fffe2    mov x2, #0xffff
   ac544:   0b012061    add w1, w3, w1, lsl #8
   ac548:   b9400021    ldr w1, [x1]
   ac54c:   f264003f    tst x1, #0x10000000
   ac550:   fa4210c0    ccmp    x6, x2, #0x0, ne
   ac554:   540009a8    b.hi    ac688 <CDMAChannel::SetupIOWrite(unsigned int, void const*, unsigned long, TDREQ)+0x188>
   ac558:   72005ca1    ands    w1, w5, #0xffffff
   ac55c:   54000820    b.eq    ac660 <CDMAChannel::SetupIOWrite(unsigned int, void const*, unsigned long, TDREQ)+0x160>
   ac560:   f9400925    ldr x5, [x9, #16]
   ac564:   52afc002    mov w2, #0x7e000000
   ac568:   0b020021    add w1, w1, w2
   ac56c:   b4000845    cbz x5, ac674 <CDMAChannel::SetupIOWrite(unsigned int, void const*, unsigned long, TDREQ)+0x174>
   ac570:   52806903    mov w3, #0x348
   ac574:   53083c07    ubfx    w7, w0, #8, #8
   ac578:   390010a0    strb    w0, [x5, #4]
   ac57c:   2a044064    orr w4, w3, w4, lsl #16
   ac580:   32020402    orr w2, w0, #0xc0000000
   ac584:   d3483c2b    ubfx    x11, x1, #8, #8
   ac588:   d3505c2a    ubfx    x10, x1, #16, #8
   ac58c:   53187c42    lsr w2, w2, #24
   ac590:   390014a7    strb    w7, [x5, #5]
   ac594:   d3482483    ubfx    x3, x4, #8, #2
   ac598:   d3505c8e    ubfx    x14, x4, #16, #8
   ac59c:   390020a1    strb    w1, [x5, #8]
   ac5a0:   53187c8d    lsr w13, w4, #24
   ac5a4:   53105c0c    ubfx    w12, w0, #16, #8
   ac5a8:   390000a4    strb    w4, [x5]
   ac5ac:   53083cc8    ubfx    w8, w6, #8, #8
   ac5b0:   53187c24    lsr w4, w1, #24
   ac5b4:   390004a3    strb    w3, [x5, #1]
   ac5b8:   53105cc7    ubfx    w7, w6, #16, #8
   ac5bc:   53187cc3    lsr w3, w6, #24
   ac5c0:   390008ae    strb    w14, [x5, #2]
   ac5c4:   39000cad    strb    w13, [x5, #3]
   ac5c8:   aa0603e1    mov x1, x6
   ac5cc:   390018ac    strb    w12, [x5, #6]
   ac5d0:   39001ca2    strb    w2, [x5, #7]
   ac5d4:   390024ab    strb    w11, [x5, #9]
   ac5d8:   390028aa    strb    w10, [x5, #10]
   ac5dc:   39002ca4    strb    w4, [x5, #11]
   ac5e0:   390030a6    strb    w6, [x5, #12]
   ac5e4:   390034a8    strb    w8, [x5, #13]
   ac5e8:   390038a7    strb    w7, [x5, #14]
   ac5ec:   39003ca3    strb    w3, [x5, #15]
   ac5f0:   390040bf    strb    wzr, [x5, #16]
   ac5f4:   390044bf    strb    wzr, [x5, #17]
   ac5f8:   390048bf    strb    wzr, [x5, #18]
   ac5fc:   39004cbf    strb    wzr, [x5, #19]
   ac600:   390050bf    strb    wzr, [x5, #20]
   ac604:   390054bf    strb    wzr, [x5, #21]
   ac608:   390058bf    strb    wzr, [x5, #22]
   ac60c:   39005cbf    strb    wzr, [x5, #23]
   ac610:   f900213f    str xzr, [x9, #64]
   ac614:   a8c17bfd    ldp x29, x30, [sp], #16
   ac618:   17fff12a    b   a8ac0 <CleanAndInvalidateDataCacheRange>
   ac61c:   aa0803e0    mov x0, x8
   ac620:   1400087c    b   ae810 <CDMA4Channel::SetupIOWrite(unsigned int, void const*, unsigned long, TDREQ)>
   ac624:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac628:   9135c021    add x1, x1, #0xd70
   ac62c:   91046020    add x0, x1, #0x118
   ac630:   52801ce2    mov w2, #0xe7
   ac634:   97ffc123    bl  9cac0 <assertion_failed>
   ac638:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac63c:   9135c021    add x1, x1, #0xd70
   ac640:   91032020    add x0, x1, #0xc8
   ac644:   52801ca2    mov w2, #0xe5
   ac648:   97ffc11e    bl  9cac0 <assertion_failed>
   ac64c:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac650:   9135c021    add x1, x1, #0xd70
   ac654:   91036020    add x0, x1, #0xd8
   ac658:   52801cc2    mov w2, #0xe6
   ac65c:   97ffc119    bl  9cac0 <assertion_failed>
   ac660:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac664:   9135c021    add x1, x1, #0xd70
   ac668:   91062020    add x0, x1, #0x188
   ac66c:   52801d82    mov w2, #0xec
   ac670:   97ffc114    bl  9cac0 <assertion_failed>
   ac674:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac678:   9135c021    add x1, x1, #0xd70
   ac67c:   91040020    add x0, x1, #0x100
   ac680:   52801de2    mov w2, #0xef
   ac684:   97ffc10f    bl  9cac0 <assertion_failed>
   ac688:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac68c:   9135c021    add x1, x1, #0xd70
   ac690:   9104c020    add x0, x1, #0x130
   ac694:   52801d02    mov w2, #0xe8
   ac698:   97ffc10a    bl  9cac0 <assertion_failed>
   ac69c:   d503201f    nop

00000000000ac6a0 <CDMAChannel::SetupMemCopy2D(void*, void const*, unsigned long, unsigned int, unsigned long, unsigned int)>:
   ac6a0:   aa0003ed    mov x13, x0
   ac6a4:   f9402800    ldr x0, [x0, #80]
   ac6a8:   b50009e0    cbnz    x0, ac7e4 <CDMAChannel::SetupMemCopy2D(void*, void const*, unsigned long, unsigned int, unsigned long, unsigned int)+0x144>
   ac6ac:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   ac6b0:   910003fd    mov x29, sp
   ac6b4:   aa0103e8    mov x8, x1
   ac6b8:   b4000a21    cbz x1, ac7fc <CDMAChannel::SetupMemCopy2D(void*, void const*, unsigned long, unsigned int, unsigned long, unsigned int)+0x15c>
   ac6bc:   aa0203ee    mov x14, x2
   ac6c0:   b4000a82    cbz x2, ac810 <CDMAChannel::SetupMemCopy2D(void*, void const*, unsigned long, unsigned int, unsigned long, unsigned int)+0x170>
   ac6c4:   aa0303ec    mov x12, x3
   ac6c8:   b4000903    cbz x3, ac7e8 <CDMAChannel::SetupMemCopy2D(void*, void const*, unsigned long, unsigned int, unsigned long, unsigned int)+0x148>
   ac6cc:   d29fffe0    mov x0, #0xffff
   ac6d0:   eb00007f    cmp x3, x0
   ac6d4:   54000a88    b.hi    ac824 <CDMAChannel::SetupMemCopy2D(void*, void const*, unsigned long, unsigned int, unsigned long, unsigned int)+0x184>
   ac6d8:   2a0403e9    mov w9, w4
   ac6dc:   34000ae4    cbz w4, ac838 <CDMAChannel::SetupMemCopy2D(void*, void const*, unsigned long, unsigned int, unsigned long, unsigned int)+0x198>
   ac6e0:   5287ffe1    mov w1, #0x3fff
   ac6e4:   6b01009f    cmp w4, w1
   ac6e8:   54000b28    b.hi    ac84c <CDMAChannel::SetupMemCopy2D(void*, void const*, unsigned long, unsigned int, unsigned long, unsigned int)+0x1ac>
   ac6ec:   eb0000bf    cmp x5, x0
   ac6f0:   aa0503eb    mov x11, x5
   ac6f4:   54000b68    b.hi    ac860 <CDMAChannel::SetupMemCopy2D(void*, void const*, unsigned long, unsigned int, unsigned long, unsigned int)+0x1c0>
   ac6f8:   71003cdf    cmp w6, #0xf
   ac6fc:   54000bc8    b.hi    ac874 <CDMAChannel::SetupMemCopy2D(void*, void const*, unsigned long, unsigned int, unsigned long, unsigned int)+0x1d4>
   ac700:   b94001a0    ldr w0, [x13]
   ac704:   528e0401    mov w1, #0x7020
   ac708:   72bfc001    movk    w1, #0xfe00, lsl #16
   ac70c:   0b002020    add w0, w1, w0, lsl #8
   ac710:   b9400000    ldr w0, [x0]
   ac714:   37e00ba0    tbnz    w0, #28, ac888 <CDMAChannel::SetupMemCopy2D(void*, void const*, unsigned long, unsigned int, unsigned long, unsigned int)+0x1e8>
   ac718:   f94009a7    ldr x7, [x13, #16]
   ac71c:   b4000c07    cbz x7, ac89c <CDMAChannel::SetupMemCopy2D(void*, void const*, unsigned long, unsigned int, unsigned long, unsigned int)+0x1fc>
   ac720:   52806641    mov w1, #0x332
   ac724:   51000480    sub w0, w4, #0x1
   ac728:   390010e2    strb    w2, [x7, #4]
   ac72c:   2a063026    orr w6, w1, w6, lsl #12
   ac730:   32020444    orr w4, w2, #0xc0000000
   ac734:   32020503    orr w3, w8, #0xc0000000
   ac738:   2a004180    orr w0, w12, w0, lsl #16
   ac73c:   53083ca5    ubfx    w5, w5, #8, #8
   ac740:   53083d8f    ubfx    w15, w12, #8, #8
   ac744:   53087cd0    lsr w16, w6, #8
   ac748:   53187cc1    lsr w1, w6, #24
   ac74c:   390020e8    strb    w8, [x7, #8]
   ac750:   d3505cd1    ubfx    x17, x6, #16, #8
   ac754:   d3505c0a    ubfx    x10, x0, #16, #8
   ac758:   390000e6    strb    w6, [x7]
   ac75c:   53187c02    lsr w2, w0, #24
   ac760:   53083d06    ubfx    w6, w8, #8, #8
   ac764:   390004f0    strb    w16, [x7, #1]
   ac768:   53105dc0    ubfx    w0, w14, #16, #8
   ac76c:   53187c84    lsr w4, w4, #24
   ac770:   39000ce1    strb    w1, [x7, #3]
   ac774:   53187c63    lsr w3, w3, #24
   ac778:   53083dd0    ubfx    w16, w14, #8, #8
   ac77c:   390008f1    strb    w17, [x7, #2]
   ac780:   53105d08    ubfx    w8, w8, #16, #8
   ac784:   2a0903e1    mov w1, w9
   ac788:   390018e0    strb    w0, [x7, #6]
   ac78c:   390014f0    strb    w16, [x7, #5]
   ac790:   aa0e03e0    mov x0, x14
   ac794:   39001ce4    strb    w4, [x7, #7]
   ac798:   9b0c7c21    mul x1, x1, x12
   ac79c:   390024e6    strb    w6, [x7, #9]
   ac7a0:   390028e8    strb    w8, [x7, #10]
   ac7a4:   39002ce3    strb    w3, [x7, #11]
   ac7a8:   390030ec    strb    w12, [x7, #12]
   ac7ac:   390034ef    strb    w15, [x7, #13]
   ac7b0:   390038ea    strb    w10, [x7, #14]
   ac7b4:   39003ce2    strb    w2, [x7, #15]
   ac7b8:   390040ff    strb    wzr, [x7, #16]
   ac7bc:   390044ff    strb    wzr, [x7, #17]
   ac7c0:   390048eb    strb    w11, [x7, #18]
   ac7c4:   39004ce5    strb    w5, [x7, #19]
   ac7c8:   390050ff    strb    wzr, [x7, #20]
   ac7cc:   390054ff    strb    wzr, [x7, #21]
   ac7d0:   390058ff    strb    wzr, [x7, #22]
   ac7d4:   39005cff    strb    wzr, [x7, #23]
   ac7d8:   f90021bf    str xzr, [x13, #64]
   ac7dc:   a8c17bfd    ldp x29, x30, [sp], #16
   ac7e0:   17fff0b8    b   a8ac0 <CleanAndInvalidateDataCacheRange>
   ac7e4:   14000867    b   ae980 <CDMA4Channel::SetupMemCopy2D(void*, void const*, unsigned long, unsigned int, unsigned long, unsigned int)>
   ac7e8:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac7ec:   9135c021    add x1, x1, #0xd70
   ac7f0:   91066020    add x0, x1, #0x198
   ac7f4:   52802222    mov w2, #0x111
   ac7f8:   97ffc0b2    bl  9cac0 <assertion_failed>
   ac7fc:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac800:   9135c021    add x1, x1, #0xd70
   ac804:   9102c020    add x0, x1, #0xb0
   ac808:   528021e2    mov w2, #0x10f
   ac80c:   97ffc0ad    bl  9cac0 <assertion_failed>
   ac810:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac814:   9135c021    add x1, x1, #0xd70
   ac818:   91032020    add x0, x1, #0xc8
   ac81c:   52802202    mov w2, #0x110
   ac820:   97ffc0a8    bl  9cac0 <assertion_failed>
   ac824:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac828:   9135c021    add x1, x1, #0xd70
   ac82c:   9106c020    add x0, x1, #0x1b0
   ac830:   52802242    mov w2, #0x112
   ac834:   97ffc0a3    bl  9cac0 <assertion_failed>
   ac838:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac83c:   9135c021    add x1, x1, #0xd70
   ac840:   91072020    add x0, x1, #0x1c8
   ac844:   52802262    mov w2, #0x113
   ac848:   97ffc09e    bl  9cac0 <assertion_failed>
   ac84c:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac850:   9135c021    add x1, x1, #0xd70
   ac854:   91076020    add x0, x1, #0x1d8
   ac858:   52802282    mov w2, #0x114
   ac85c:   97ffc099    bl  9cac0 <assertion_failed>
   ac860:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac864:   9135c021    add x1, x1, #0xd70
   ac868:   9107c020    add x0, x1, #0x1f0
   ac86c:   528022a2    mov w2, #0x115
   ac870:   97ffc094    bl  9cac0 <assertion_failed>
   ac874:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac878:   9135c021    add x1, x1, #0xd70
   ac87c:   9103a020    add x0, x1, #0xe8
   ac880:   528022c2    mov w2, #0x116
   ac884:   97ffc08f    bl  9cac0 <assertion_failed>
   ac888:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac88c:   9135c021    add x1, x1, #0xd70
   ac890:   91082020    add x0, x1, #0x208
   ac894:   52802302    mov w2, #0x118
   ac898:   97ffc08a    bl  9cac0 <assertion_failed>
   ac89c:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac8a0:   9135c021    add x1, x1, #0xd70
   ac8a4:   91040020    add x0, x1, #0x100
   ac8a8:   52802342    mov w2, #0x11a
   ac8ac:   97ffc085    bl  9cac0 <assertion_failed>

00000000000ac8b0 <CDMAChannel::SetCompletionRoutine(void (*)(unsigned int, bool, void*), void*)>:
   ac8b0:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   ac8b4:   910003fd    mov x29, sp
   ac8b8:   a90153f3    stp x19, x20, [sp, #16]
   ac8bc:   aa0003f3    mov x19, x0
   ac8c0:   f9402800    ldr x0, [x0, #80]
   ac8c4:   b5000240    cbnz    x0, ac90c <CDMAChannel::SetCompletionRoutine(void (*)(unsigned int, bool, void*), void*)+0x5c>
   ac8c8:   aa0103f4    mov x20, x1
   ac8cc:   b9400261    ldr w1, [x19]
   ac8d0:   f90013f5    str x21, [sp, #32]
   ac8d4:   7100203f    cmp w1, #0x8
   ac8d8:   540003c8    b.hi    ac950 <CDMAChannel::SetCompletionRoutine(void (*)(unsigned int, bool, void*), void*)+0xa0>
   ac8dc:   f9400e60    ldr x0, [x19, #24]
   ac8e0:   b4000420    cbz x0, ac964 <CDMAChannel::SetCompletionRoutine(void (*)(unsigned int, bool, void*), void*)+0xb4>
   ac8e4:   aa0203f5    mov x21, x2
   ac8e8:   39408262    ldrb    w2, [x19, #32]
   ac8ec:   36000162    tbz w2, #0, ac918 <CDMAChannel::SetCompletionRoutine(void (*)(unsigned int, bool, void*), void*)+0x68>
   ac8f0:   f9001674    str x20, [x19, #40]
   ac8f4:   b4000254    cbz x20, ac93c <CDMAChannel::SetCompletionRoutine(void (*)(unsigned int, bool, void*), void*)+0x8c>
   ac8f8:   f9001a75    str x21, [x19, #48]
   ac8fc:   a94153f3    ldp x19, x20, [sp, #16]
   ac900:   f94013f5    ldr x21, [sp, #32]
   ac904:   a8c37bfd    ldp x29, x30, [sp], #48
   ac908:   d65f03c0    ret
   ac90c:   a94153f3    ldp x19, x20, [sp, #16]
   ac910:   a8c37bfd    ldp x29, x30, [sp], #48
   ac914:   1400089b    b   aeb80 <CDMA4Channel::SetCompletionRoutine(void (*)(unsigned int, bool, void*), void*)>
   ac918:   90000002    adrp    x2, ac000 <CDMAChannel::CDMAChannel(unsigned int, CInterruptSystem*)+0x120>
   ac91c:   1101c021    add w1, w1, #0x70
   ac920:   91350042    add x2, x2, #0xd40
   ac924:   aa1303e3    mov x3, x19
   ac928:   97fff64e    bl  aa260 <CInterruptSystem::ConnectIRQ(unsigned int, void (*)(void*), void*)>
   ac92c:   52800020    mov w0, #0x1
   ac930:   f9001674    str x20, [x19, #40]
   ac934:   39008260    strb    w0, [x19, #32]
   ac938:   b5fffe14    cbnz    x20, ac8f8 <CDMAChannel::SetCompletionRoutine(void (*)(unsigned int, bool, void*), void*)+0x48>
   ac93c:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac940:   9135c021    add x1, x1, #0xd70
   ac944:   9109e020    add x0, x1, #0x278
   ac948:   52802882    mov w2, #0x144
   ac94c:   97ffc05d    bl  9cac0 <assertion_failed>
   ac950:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac954:   9135c021    add x1, x1, #0xd70
   ac958:   91090020    add x0, x1, #0x240
   ac95c:   52802722    mov w2, #0x139
   ac960:   97ffc058    bl  9cac0 <assertion_failed>
   ac964:   b0000061    adrp    x1, b9000 <font_data+0x80>
   ac968:   9135c021    add x1, x1, #0xd70
   ac96c:   91098020    add x0, x1, #0x260
   ac970:   52802742    mov w2, #0x13a
   ac974:   97ffc053    bl  9cac0 <assertion_failed>
   ac978:   d503201f    nop
   ac97c:   d503201f    nop

00000000000ac980 <CDMAChannel::Start()>:
   ac980:   a9be7bfd    stp x29, x30, [sp, #-32]!
   ac984:   910003fd    mov x29, sp
   ac988:   a90153f3    stp x19, x20, [sp, #16]
   ac98c:   aa0003f3    mov x19, x0
   ac990:   f9402800    ldr x0, [x0, #80]
   ac994:   b50006e0    cbnz    x0, aca70 <CDMAChannel::Start()+0xf0>
   ac998:   b9400262    ldr w2, [x19]
   ac99c:   71001c5f    cmp w2, #0x7
   ac9a0:   540006e8    b.hi    aca7c <CDMAChannel::Start()+0xfc>
   ac9a4:   f9400a60    ldr x0, [x19, #16]
   ac9a8:   b4000740    cbz x0, aca90 <CDMAChannel::Start()+0x110>
   ac9ac:   f9401661    ldr x1, [x19, #40]
   ac9b0:   b4000281    cbz x1, aca00 <CDMAChannel::Start()+0x80>
   ac9b4:   f9400e61    ldr x1, [x19, #24]
   ac9b8:   b40008a1    cbz x1, acacc <CDMAChannel::Start()+0x14c>
   ac9bc:   39408261    ldrb    w1, [x19, #32]
   ac9c0:   36000901    tbz w1, #0, acae0 <CDMAChannel::Start()+0x160>
   ac9c4:   39400005    ldrb    w5, [x0]
   ac9c8:   39400404    ldrb    w4, [x0, #1]
   ac9cc:   39400803    ldrb    w3, [x0, #2]
   ac9d0:   39400c01    ldrb    w1, [x0, #3]
   ac9d4:   aa0420a4    orr x4, x5, x4, lsl #8
   ac9d8:   aa034083    orr x3, x4, x3, lsl #16
   ac9dc:   aa016061    orr x1, x3, x1, lsl #24
   ac9e0:   32000025    orr w5, w1, #0x1
   ac9e4:   53083c24    ubfx    w4, w1, #8, #8
   ac9e8:   53105c23    ubfx    w3, w1, #16, #8
   ac9ec:   d358dc21    ubfx    x1, x1, #24, #32
   ac9f0:   39000005    strb    w5, [x0]
   ac9f4:   39000404    strb    w4, [x0, #1]
   ac9f8:   39000803    strb    w3, [x0, #2]
   ac9fc:   39000c01    strb    w1, [x0, #3]
   aca00:   52800e14    mov w20, #0x70
   aca04:   72a01fd4    movk    w20, #0xfe, lsl #16
   aca08:   0b140041    add w1, w2, w20
   aca0c:   53185c23    lsl w3, w1, #8
   aca10:   53185c21    lsl w1, w1, #8
   aca14:   b9400063    ldr w3, [x3]
   aca18:   37100463    tbnz    w3, #2, acaa4 <CDMAChannel::Start()+0x124>
   aca1c:   d28ffc04    mov x4, #0x7fe0
   aca20:   f2bfc004    movk    x4, #0xfe00, lsl #16
   aca24:   b9400084    ldr w4, [x4]
   aca28:   52800023    mov w3, #0x1
   aca2c:   1ac22062    lsl w2, w3, w2
   aca30:   6a04005f    tst w2, w4
   aca34:   54000421    b.ne    acab8 <CDMAChannel::Start()+0x138>
   aca38:   11001022    add w2, w1, #0x4
   aca3c:   32020403    orr w3, w0, #0xc0000000
   aca40:   d2800401    mov x1, #0x20
   aca44:   b9000043    str w3, [x2]
   aca48:   97fff01e    bl  a8ac0 <CleanAndInvalidateDataCacheRange>
   aca4c:   b9400260    ldr w0, [x19]
   aca50:   52800021    mov w1, #0x1
   aca54:   72a21e21    movk    w1, #0x10f1, lsl #16
   aca58:   0b140000    add w0, w0, w20
   aca5c:   a94153f3    ldp x19, x20, [sp, #16]
   aca60:   53185c00    lsl w0, w0, #8
   aca64:   b9000001    str w1, [x0]
   aca68:   a8c27bfd    ldp x29, x30, [sp], #32
   aca6c:   d65f03c0    ret
   aca70:   a94153f3    ldp x19, x20, [sp, #16]
   aca74:   a8c27bfd    ldp x29, x30, [sp], #32
   aca78:   14000876    b   aec50 <CDMA4Channel::Start()>
   aca7c:   b0000061    adrp    x1, b9000 <font_data+0x80>
   aca80:   9135c021    add x1, x1, #0xd70
   aca84:   9100c020    add x0, x1, #0x30
   aca88:   52802a82    mov w2, #0x154
   aca8c:   97ffc00d    bl  9cac0 <assertion_failed>
   aca90:   b0000061    adrp    x1, b9000 <font_data+0x80>
   aca94:   9135c021    add x1, x1, #0xd70
   aca98:   91040020    add x0, x1, #0x100
   aca9c:   52802aa2    mov w2, #0x155
   acaa0:   97ffc008    bl  9cac0 <assertion_failed>
   acaa4:   b0000061    adrp    x1, b9000 <font_data+0x80>
   acaa8:   9135c021    add x1, x1, #0xd70
   acaac:   910aa020    add x0, x1, #0x2a8
   acab0:   52802c02    mov w2, #0x160
   acab4:   97ffc003    bl  9cac0 <assertion_failed>
   acab8:   b0000061    adrp    x1, b9000 <font_data+0x80>
   acabc:   9135c021    add x1, x1, #0xd70
   acac0:   910b8020    add x0, x1, #0x2e0
   acac4:   52802c22    mov w2, #0x161
   acac8:   97ffbffe    bl  9cac0 <assertion_failed>
   acacc:   b0000061    adrp    x1, b9000 <font_data+0x80>
   acad0:   9135c021    add x1, x1, #0xd70
   acad4:   91098020    add x0, x1, #0x260
   acad8:   52802b22    mov w2, #0x159
   acadc:   97ffbff9    bl  9cac0 <assertion_failed>
   acae0:   b0000061    adrp    x1, b9000 <font_data+0x80>
   acae4:   9135c021    add x1, x1, #0xd70
   acae8:   910a6020    add x0, x1, #0x298
   acaec:   52802b42    mov w2, #0x15a
   acaf0:   97ffbff4    bl  9cac0 <assertion_failed>
   acaf4:   d503201f    nop
   acaf8:   d503201f    nop
   acafc:   d503201f    nop

00000000000acb00 <CDMAChannel::Wait()>:
   acb00:   a9be7bfd    stp x29, x30, [sp, #-32]!
   acb04:   910003fd    mov x29, sp
   acb08:   f9000bf3    str x19, [sp, #16]
   acb0c:   aa0003f3    mov x19, x0
   acb10:   f9402800    ldr x0, [x0, #80]
   acb14:   b4000080    cbz x0, acb24 <CDMAChannel::Wait()+0x24>
   acb18:   f9400bf3    ldr x19, [sp, #16]
   acb1c:   a8c27bfd    ldp x29, x30, [sp], #32
   acb20:   140008ac    b   aedd0 <CDMA4Channel::Wait()>
   acb24:   b9400262    ldr w2, [x19]
   acb28:   71001c5f    cmp w2, #0x7
   acb2c:   54000328    b.hi    acb90 <CDMAChannel::Wait()+0x90>
   acb30:   117f8042    add w2, w2, #0xfe0, lsl #12
   acb34:   f9401660    ldr x0, [x19, #40]
   acb38:   1101c042    add w2, w2, #0x70
   acb3c:   53185c42    lsl w2, w2, #8
   acb40:   b5000320    cbnz    x0, acba4 <CDMAChannel::Wait()+0xa4>
   acb44:   d503201f    nop
   acb48:   b9400041    ldr w1, [x2]
   acb4c:   3707ffe1    tbnz    w1, #0, acb48 <CDMAChannel::Wait()+0x48>
   acb50:   d2780021    eor x1, x1, #0x100
   acb54:   f9402260    ldr x0, [x19, #64]
   acb58:   53082021    ubfx    w1, w1, #8, #1
   acb5c:   3900e261    strb    w1, [x19, #56]
   acb60:   b50000a0    cbnz    x0, acb74 <CDMAChannel::Wait()+0x74>
   acb64:   f9400bf3    ldr x19, [sp, #16]
   acb68:   2a0103e0    mov w0, w1
   acb6c:   a8c27bfd    ldp x29, x30, [sp], #32
   acb70:   d65f03c0    ret
   acb74:   f9402661    ldr x1, [x19, #72]
   acb78:   97ffefd2    bl  a8ac0 <CleanAndInvalidateDataCacheRange>
   acb7c:   3940e261    ldrb    w1, [x19, #56]
   acb80:   f9400bf3    ldr x19, [sp, #16]
   acb84:   a8c27bfd    ldp x29, x30, [sp], #32
   acb88:   2a0103e0    mov w0, w1
   acb8c:   d65f03c0    ret
   acb90:   b0000061    adrp    x1, b9000 <font_data+0x80>
   acb94:   9135c021    add x1, x1, #0xd70
   acb98:   9100c020    add x0, x1, #0x30
   acb9c:   52802f02    mov w2, #0x178
   acba0:   97ffbfc8    bl  9cac0 <assertion_failed>
   acba4:   b0000061    adrp    x1, b9000 <font_data+0x80>
   acba8:   9135c021    add x1, x1, #0xd70
   acbac:   910c6020    add x0, x1, #0x318
   acbb0:   52802f22    mov w2, #0x179
   acbb4:   97ffbfc3    bl  9cac0 <assertion_failed>
   acbb8:   d503201f    nop
   acbbc:   d503201f    nop

00000000000acbc0 <CDMAChannel::GetStatus()>:
   acbc0:   aa0003e1    mov x1, x0
   acbc4:   f9402800    ldr x0, [x0, #80]
   acbc8:   b4000040    cbz x0, acbd0 <CDMAChannel::GetStatus()+0x10>
   acbcc:   140008b1    b   aee90 <CDMA4Channel::GetStatus()>
   acbd0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   acbd4:   910003fd    mov x29, sp
   acbd8:   b9400020    ldr w0, [x1]
   acbdc:   71001c1f    cmp w0, #0x7
   acbe0:   54000128    b.hi    acc04 <CDMAChannel::GetStatus()+0x44>
   acbe4:   117f8000    add w0, w0, #0xfe0, lsl #12
   acbe8:   1101c000    add w0, w0, #0x70
   acbec:   53185c00    lsl w0, w0, #8
   acbf0:   b9400000    ldr w0, [x0]
   acbf4:   37000120    tbnz    w0, #0, acc18 <CDMAChannel::GetStatus()+0x58>
   acbf8:   3940e020    ldrb    w0, [x1, #56]
   acbfc:   a8c17bfd    ldp x29, x30, [sp], #16
   acc00:   d65f03c0    ret
   acc04:   b0000061    adrp    x1, b9000 <font_data+0x80>
   acc08:   9135c021    add x1, x1, #0xd70
   acc0c:   9100c020    add x0, x1, #0x30
   acc10:   52803302    mov w2, #0x198
   acc14:   97ffbfab    bl  9cac0 <assertion_failed>
   acc18:   b0000061    adrp    x1, b9000 <font_data+0x80>
   acc1c:   9135c021    add x1, x1, #0xd70
   acc20:   910ce020    add x0, x1, #0x338
   acc24:   52803322    mov w2, #0x199
   acc28:   97ffbfa6    bl  9cac0 <assertion_failed>
   acc2c:   d503201f    nop

00000000000acc30 <CDMAChannel::InterruptHandler()>:
   acc30:   a9be7bfd    stp x29, x30, [sp, #-32]!
   acc34:   910003fd    mov x29, sp
   acc38:   f9000bf3    str x19, [sp, #16]
   acc3c:   aa0003f3    mov x19, x0
   acc40:   f9402000    ldr x0, [x0, #64]
   acc44:   b5000400    cbnz    x0, accc4 <CDMAChannel::InterruptHandler()+0x94>
   acc48:   b9400261    ldr w1, [x19]
   acc4c:   71001c3f    cmp w1, #0x7
   acc50:   54000448    b.hi    accd8 <CDMAChannel::InterruptHandler()+0xa8>
   acc54:   d28ffc02    mov x2, #0x7fe0
   acc58:   f2bfc002    movk    x2, #0xfe00, lsl #16
   acc5c:   b9400043    ldr w3, [x2]
   acc60:   52800020    mov w0, #0x1
   acc64:   1ac12000    lsl w0, w0, w1
   acc68:   6a03001f    tst w0, w3
   acc6c:   54000400    b.eq    accec <CDMAChannel::InterruptHandler()+0xbc>
   acc70:   b9000040    str w0, [x2]
   acc74:   b9400260    ldr w0, [x19]
   acc78:   117f8000    add w0, w0, #0xfe0, lsl #12
   acc7c:   1101c000    add w0, w0, #0x70
   acc80:   53185c00    lsl w0, w0, #8
   acc84:   b9400001    ldr w1, [x0]
   acc88:   361003c1    tbz w1, #2, acd00 <CDMAChannel::InterruptHandler()+0xd0>
   acc8c:   37000441    tbnz    w1, #0, acd14 <CDMAChannel::InterruptHandler()+0xe4>
   acc90:   d2780021    eor x1, x1, #0x100
   acc94:   52800082    mov w2, #0x4
   acc98:   f9401663    ldr x3, [x19, #40]
   acc9c:   53082021    ubfx    w1, w1, #8, #1
   acca0:   b9000002    str w2, [x0]
   acca4:   3900e261    strb    w1, [x19, #56]
   acca8:   b4000403    cbz x3, acd28 <CDMAChannel::InterruptHandler()+0xf8>
   accac:   f9401a62    ldr x2, [x19, #48]
   accb0:   aa0303f0    mov x16, x3
   accb4:   b9400260    ldr w0, [x19]
   accb8:   f9400bf3    ldr x19, [sp, #16]
   accbc:   a8c27bfd    ldp x29, x30, [sp], #32
   accc0:   d61f0200    br  x16
   accc4:   f9402661    ldr x1, [x19, #72]
   accc8:   97ffef7e    bl  a8ac0 <CleanAndInvalidateDataCacheRange>
   acccc:   b9400261    ldr w1, [x19]
   accd0:   71001c3f    cmp w1, #0x7
   accd4:   54fffc09    b.ls    acc54 <CDMAChannel::InterruptHandler()+0x24>
   accd8:   b0000061    adrp    x1, b9000 <font_data+0x80>
   accdc:   9135c021    add x1, x1, #0xd70
   acce0:   9100c020    add x0, x1, #0x30
   acce4:   528034e2    mov w2, #0x1a7
   acce8:   97ffbf76    bl  9cac0 <assertion_failed>
   accec:   b0000061    adrp    x1, b9000 <font_data+0x80>
   accf0:   9135c021    add x1, x1, #0xd70
   accf4:   910dc020    add x0, x1, #0x370
   accf8:   528035a2    mov w2, #0x1ad
   accfc:   97ffbf71    bl  9cac0 <assertion_failed>
   acd00:   b0000061    adrp    x1, b9000 <font_data+0x80>
   acd04:   9135c021    add x1, x1, #0xd70
   acd08:   910e2020    add x0, x1, #0x388
   acd0c:   52803622    mov w2, #0x1b1
   acd10:   97ffbf6c    bl  9cac0 <assertion_failed>
   acd14:   b0000061    adrp    x1, b9000 <font_data+0x80>
   acd18:   9135c021    add x1, x1, #0xd70
   acd1c:   910e6020    add x0, x1, #0x398
   acd20:   52803642    mov w2, #0x1b2
   acd24:   97ffbf67    bl  9cac0 <assertion_failed>
   acd28:   b0000061    adrp    x1, b9000 <font_data+0x80>
   acd2c:   9135c021    add x1, x1, #0xd70
   acd30:   9109e020    add x0, x1, #0x278
   acd34:   52803722    mov w2, #0x1b9
   acd38:   97ffbf62    bl  9cac0 <assertion_failed>
   acd3c:   d503201f    nop

00000000000acd40 <CDMAChannel::InterruptStub(void*)>:
   acd40:   b4000040    cbz x0, acd48 <CDMAChannel::InterruptStub(void*)+0x8>
   acd44:   17ffffbb    b   acc30 <CDMAChannel::InterruptHandler()>
   acd48:   b0000061    adrp    x1, b9000 <font_data+0x80>
   acd4c:   9135c021    add x1, x1, #0xd70
   acd50:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   acd54:   910ec020    add x0, x1, #0x3b0
   acd58:   910003fd    mov x29, sp
   acd5c:   52803802    mov w2, #0x1c0
   acd60:   97ffbf58    bl  9cac0 <assertion_failed>
    ...

00000000000acd70 <CGPIOManager::CGPIOManager(CInterruptSystem*)>:
   acd70:   91004002    add x2, x0, #0x10
   acd74:   91070003    add x3, x0, #0x1c0
   acd78:   f9000001    str x1, [x0]
   acd7c:   3900201f    strb    wzr, [x0, #8]
   acd80:   f800845f    str xzr, [x2], #8
   acd84:   eb03005f    cmp x2, x3
   acd88:   54ffffc1    b.ne    acd80 <CGPIOManager::CGPIOManager(CInterruptSystem*)+0x10>
   acd8c:   d65f03c0    ret

00000000000acd90 <CGPIOManager::~CGPIOManager()>:
   acd90:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   acd94:   91004001    add x1, x0, #0x10
   acd98:   910003fd    mov x29, sp
   acd9c:   91070003    add x3, x0, #0x1c0
   acda0:   14000004    b   acdb0 <CGPIOManager::~CGPIOManager()+0x20>
   acda4:   91002021    add x1, x1, #0x8
   acda8:   eb03003f    cmp x1, x3
   acdac:   54000120    b.eq    acdd0 <CGPIOManager::~CGPIOManager()+0x40>
   acdb0:   f9400022    ldr x2, [x1]
   acdb4:   b4ffff82    cbz x2, acda4 <CGPIOManager::~CGPIOManager()+0x14>
   acdb8:   f0000021    adrp    x1, b3000 <_etext+0x3f9c>
   acdbc:   f0000020    adrp    x0, b3000 <_etext+0x3f9c>
   acdc0:   912f2021    add x1, x1, #0xbc8
   acdc4:   912f6000    add x0, x0, #0xbd8
   acdc8:   52800582    mov w2, #0x2c
   acdcc:   97ffbf3d    bl  9cac0 <assertion_failed>
   acdd0:   39402001    ldrb    w1, [x0, #8]
   acdd4:   360000c1    tbz w1, #0, acdec <CGPIOManager::~CGPIOManager()+0x5c>
   acdd8:   f9400000    ldr x0, [x0]
   acddc:   b40000c0    cbz x0, acdf4 <CGPIOManager::~CGPIOManager()+0x64>
   acde0:   a8c17bfd    ldp x29, x30, [sp], #16
   acde4:   52801281    mov w1, #0x94
   acde8:   17fff53e    b   aa2e0 <CInterruptSystem::DisconnectIRQ(unsigned int)>
   acdec:   a8c17bfd    ldp x29, x30, [sp], #16
   acdf0:   d65f03c0    ret
   acdf4:   f0000021    adrp    x1, b3000 <_etext+0x3f9c>
   acdf8:   f0000020    adrp    x0, b3000 <_etext+0x3f9c>
   acdfc:   912f2021    add x1, x1, #0xbc8
   ace00:   912fc000    add x0, x0, #0xbf0
   ace04:   52800642    mov w2, #0x32
   ace08:   97ffbf2e    bl  9cac0 <assertion_failed>
   ace0c:   d503201f    nop

00000000000ace10 <CGPIOManager::Initialize()>:
   ace10:   a9be7bfd    stp x29, x30, [sp, #-32]!
   ace14:   910003fd    mov x29, sp
   ace18:   f9000bf3    str x19, [sp, #16]
   ace1c:   aa0003f3    mov x19, x0
   ace20:   39402000    ldrb    w0, [x0, #8]
   ace24:   370001a0    tbnz    w0, #0, ace58 <CGPIOManager::Initialize()+0x48>
   ace28:   f9400260    ldr x0, [x19]
   ace2c:   b4000220    cbz x0, ace70 <CGPIOManager::Initialize()+0x60>
   ace30:   aa1303e3    mov x3, x19
   ace34:   52801281    mov w1, #0x94
   ace38:   b0000002    adrp    x2, ad000 <CGPIOManager::InterruptHandler()+0x30>
   ace3c:   91030042    add x2, x2, #0xc0
   ace40:   97fff508    bl  aa260 <CInterruptSystem::ConnectIRQ(unsigned int, void (*)(void*), void*)>
   ace44:   52800020    mov w0, #0x1
   ace48:   39002260    strb    w0, [x19, #8]
   ace4c:   f9400bf3    ldr x19, [sp, #16]
   ace50:   a8c27bfd    ldp x29, x30, [sp], #32
   ace54:   d65f03c0    ret
   ace58:   f0000021    adrp    x1, b3000 <_etext+0x3f9c>
   ace5c:   f0000020    adrp    x0, b3000 <_etext+0x3f9c>
   ace60:   912f2021    add x1, x1, #0xbc8
   ace64:   91302000    add x0, x0, #0xc08
   ace68:   52800762    mov w2, #0x3b
   ace6c:   97ffbf15    bl  9cac0 <assertion_failed>
   ace70:   f0000021    adrp    x1, b3000 <_etext+0x3f9c>
   ace74:   f0000020    adrp    x0, b3000 <_etext+0x3f9c>
   ace78:   912f2021    add x1, x1, #0xbc8
   ace7c:   912fc000    add x0, x0, #0xbf0
   ace80:   52800782    mov w2, #0x3c
   ace84:   97ffbf0f    bl  9cac0 <assertion_failed>
   ace88:   d503201f    nop
   ace8c:   d503201f    nop

00000000000ace90 <CGPIOManager::ConnectInterrupt(CGPIOPin*)>:
   ace90:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   ace94:   910003fd    mov x29, sp
   ace98:   39402002    ldrb    w2, [x0, #8]
   ace9c:   36000162    tbz w2, #0, acec8 <CGPIOManager::ConnectInterrupt(CGPIOPin*)+0x38>
   acea0:   b4000201    cbz x1, acee0 <CGPIOManager::ConnectInterrupt(CGPIOPin*)+0x50>
   acea4:   b9400822    ldr w2, [x1, #8]
   acea8:   7100d45f    cmp w2, #0x35
   aceac:   54000268    b.hi    acef8 <CGPIOManager::ConnectInterrupt(CGPIOPin*)+0x68>
   aceb0:   8b224c02    add x2, x0, w2, uxtw #3
   aceb4:   f9400840    ldr x0, [x2, #16]
   aceb8:   b50002c0    cbnz    x0, acf10 <CGPIOManager::ConnectInterrupt(CGPIOPin*)+0x80>
   acebc:   f9000841    str x1, [x2, #16]
   acec0:   a8c17bfd    ldp x29, x30, [sp], #16
   acec4:   d65f03c0    ret
   acec8:   f0000021    adrp    x1, b3000 <_etext+0x3f9c>
   acecc:   f0000020    adrp    x0, b3000 <_etext+0x3f9c>
   aced0:   912f2021    add x1, x1, #0xbc8
   aced4:   91308000    add x0, x0, #0xc20
   aced8:   528008a2    mov w2, #0x45
   acedc:   97ffbef9    bl  9cac0 <assertion_failed>
   acee0:   f0000021    adrp    x1, b3000 <_etext+0x3f9c>
   acee4:   f0000020    adrp    x0, b3000 <_etext+0x3f9c>
   acee8:   912f2021    add x1, x1, #0xbc8
   aceec:   9130c000    add x0, x0, #0xc30
   acef0:   528008e2    mov w2, #0x47
   acef4:   97ffbef3    bl  9cac0 <assertion_failed>
   acef8:   f0000021    adrp    x1, b3000 <_etext+0x3f9c>
   acefc:   f0000020    adrp    x0, b3000 <_etext+0x3f9c>
   acf00:   912f2021    add x1, x1, #0xbc8
   acf04:   91310000    add x0, x0, #0xc40
   acf08:   52800922    mov w2, #0x49
   acf0c:   97ffbeed    bl  9cac0 <assertion_failed>
   acf10:   f0000021    adrp    x1, b3000 <_etext+0x3f9c>
   acf14:   f0000020    adrp    x0, b3000 <_etext+0x3f9c>
   acf18:   912f2021    add x1, x1, #0xbc8
   acf1c:   912f6000    add x0, x0, #0xbd8
   acf20:   52800962    mov w2, #0x4b
   acf24:   97ffbee7    bl  9cac0 <assertion_failed>
   acf28:   d503201f    nop
   acf2c:   d503201f    nop

00000000000acf30 <CGPIOManager::DisconnectInterrupt(CGPIOPin*)>:
   acf30:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   acf34:   910003fd    mov x29, sp
   acf38:   39402002    ldrb    w2, [x0, #8]
   acf3c:   36000162    tbz w2, #0, acf68 <CGPIOManager::DisconnectInterrupt(CGPIOPin*)+0x38>
   acf40:   b4000201    cbz x1, acf80 <CGPIOManager::DisconnectInterrupt(CGPIOPin*)+0x50>
   acf44:   b9400821    ldr w1, [x1, #8]
   acf48:   7100d43f    cmp w1, #0x35
   acf4c:   54000268    b.hi    acf98 <CGPIOManager::DisconnectInterrupt(CGPIOPin*)+0x68>
   acf50:   8b214c01    add x1, x0, w1, uxtw #3
   acf54:   f9400820    ldr x0, [x1, #16]
   acf58:   b40002c0    cbz x0, acfb0 <CGPIOManager::DisconnectInterrupt(CGPIOPin*)+0x80>
   acf5c:   f900083f    str xzr, [x1, #16]
   acf60:   a8c17bfd    ldp x29, x30, [sp], #16
   acf64:   d65f03c0    ret
   acf68:   f0000021    adrp    x1, b3000 <_etext+0x3f9c>
   acf6c:   f0000020    adrp    x0, b3000 <_etext+0x3f9c>
   acf70:   912f2021    add x1, x1, #0xbc8
   acf74:   91308000    add x0, x0, #0xc20
   acf78:   52800a42    mov w2, #0x52
   acf7c:   97ffbed1    bl  9cac0 <assertion_failed>
   acf80:   f0000021    adrp    x1, b3000 <_etext+0x3f9c>
   acf84:   f0000020    adrp    x0, b3000 <_etext+0x3f9c>
   acf88:   912f2021    add x1, x1, #0xbc8
   acf8c:   9130c000    add x0, x0, #0xc30
   acf90:   52800a82    mov w2, #0x54
   acf94:   97ffbecb    bl  9cac0 <assertion_failed>
   acf98:   f0000021    adrp    x1, b3000 <_etext+0x3f9c>
   acf9c:   f0000020    adrp    x0, b3000 <_etext+0x3f9c>
   acfa0:   912f2021    add x1, x1, #0xbc8
   acfa4:   91310000    add x0, x0, #0xc40
   acfa8:   52800ac2    mov w2, #0x56
   acfac:   97ffbec5    bl  9cac0 <assertion_failed>
   acfb0:   f0000021    adrp    x1, b3000 <_etext+0x3f9c>
   acfb4:   f0000020    adrp    x0, b3000 <_etext+0x3f9c>
   acfb8:   912f2021    add x1, x1, #0xbc8
   acfbc:   91316000    add x0, x0, #0xc58
   acfc0:   52800b02    mov w2, #0x58
   acfc4:   97ffbebf    bl  9cac0 <assertion_failed>
   acfc8:   d503201f    nop
   acfcc:   d503201f    nop

00000000000acfd0 <CGPIOManager::InterruptHandler()>:
   acfd0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   acfd4:   910003fd    mov x29, sp
   acfd8:   39402001    ldrb    w1, [x0, #8]
   acfdc:   a90153f3    stp x19, x20, [sp, #16]
   acfe0:   36000621    tbz w1, #0, ad0a4 <CGPIOManager::InterruptHandler()+0xd4>
   acfe4:   d2800801    mov x1, #0x40
   acfe8:   f2bfc401    movk    x1, #0xfe20, lsl #16
   acfec:   b9400021    ldr w1, [x1]
   acff0:   52800013    mov w19, #0x0
   acff4:   d503201f    nop
   acff8:   37000141    tbnz    w1, #0, ad020 <CGPIOManager::InterruptHandler()+0x50>
   acffc:   11000673    add w19, w19, #0x1
   ad000:   53017c21    lsr w1, w1, #1
   ad004:   f240127f    tst x19, #0x1f
   ad008:   540002c0    b.eq    ad060 <CGPIOManager::InterruptHandler()+0x90>
   ad00c:   7100da7f    cmp w19, #0x36
   ad010:   54ffff41    b.ne    acff8 <CGPIOManager::InterruptHandler()+0x28>
   ad014:   a94153f3    ldp x19, x20, [sp, #16]
   ad018:   a8c27bfd    ldp x29, x30, [sp], #32
   ad01c:   d65f03c0    ret
   ad020:   2a1303e1    mov w1, w19
   ad024:   91000821    add x1, x1, #0x2
   ad028:   f8617814    ldr x20, [x0, x1, lsl #3]
   ad02c:   b4000254    cbz x20, ad074 <CGPIOManager::InterruptHandler()+0xa4>
   ad030:   aa1403e0    mov x0, x20
   ad034:   97ffc6a3    bl  9eac0 <CGPIOPin::InterruptHandler()>
   ad038:   3940e280    ldrb    w0, [x20, #56]
   ad03c:   3607fec0    tbz w0, #0, ad014 <CGPIOManager::InterruptHandler()+0x44>
   ad040:   29418680    ldp w0, w1, [x20, #12]
   ad044:   52800802    mov w2, #0x40
   ad048:   72bfc402    movk    w2, #0xfe20, lsl #16
   ad04c:   a94153f3    ldp x19, x20, [sp, #16]
   ad050:   0b020000    add w0, w0, w2
   ad054:   b9000001    str w1, [x0]
   ad058:   a8c27bfd    ldp x29, x30, [sp], #32
   ad05c:   d65f03c0    ret
   ad060:   d2800881    mov x1, #0x44
   ad064:   f2bfc401    movk    x1, #0xfe20, lsl #16
   ad068:   b9400021    ldr w1, [x1]
   ad06c:   52800413    mov w19, #0x20
   ad070:   17ffffe2    b   acff8 <CGPIOManager::InterruptHandler()+0x28>
   ad074:   2a1303e0    mov w0, w19
   ad078:   97ffc6b6    bl  9eb50 <CGPIOPin::DisableAllInterrupts(unsigned int)>
   ad07c:   52800200    mov w0, #0x10
   ad080:   72a7f100    movk    w0, #0x3f88, lsl #16
   ad084:   0b531400    add w0, w0, w19, lsr #5
   ad088:   52800021    mov w1, #0x1
   ad08c:   1ad32021    lsl w1, w1, w19
   ad090:   a94153f3    ldp x19, x20, [sp, #16]
   ad094:   531e7400    lsl w0, w0, #2
   ad098:   b9000001    str w1, [x0]
   ad09c:   a8c27bfd    ldp x29, x30, [sp], #32
   ad0a0:   d65f03c0    ret
   ad0a4:   d0000021    adrp    x1, b3000 <_etext+0x3f9c>
   ad0a8:   d0000020    adrp    x0, b3000 <_etext+0x3f9c>
   ad0ac:   912f2021    add x1, x1, #0xbc8
   ad0b0:   91308000    add x0, x0, #0xc20
   ad0b4:   52800bc2    mov w2, #0x5e
   ad0b8:   97ffbe82    bl  9cac0 <assertion_failed>
   ad0bc:   d503201f    nop

00000000000ad0c0 <CGPIOManager::InterruptStub(void*)>:
   ad0c0:   b4000040    cbz x0, ad0c8 <CGPIOManager::InterruptStub(void*)+0x8>
   ad0c4:   17ffffc3    b   acfd0 <CGPIOManager::InterruptHandler()>
   ad0c8:   d0000021    adrp    x1, b3000 <_etext+0x3f9c>
   ad0cc:   d0000020    adrp    x0, b3000 <_etext+0x3f9c>
   ad0d0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   ad0d4:   912f2021    add x1, x1, #0xbc8
   ad0d8:   910003fd    mov x29, sp
   ad0dc:   9131c000    add x0, x0, #0xc70
   ad0e0:   528011c2    mov w2, #0x8e
   ad0e4:   97ffbe77    bl  9cac0 <assertion_failed>
    ...

00000000000ad0f0 <CPageAllocator::CPageAllocator()>:
   ad0f0:   52800021    mov w1, #0x1
   ad0f4:   a9007c1f    stp xzr, xzr, [x0]
   ad0f8:   f900081f    str xzr, [x0, #16]
   ad0fc:   b9001801    str w1, [x0, #24]
   ad100:   d65f03c0    ret
   ad104:   d503201f    nop
   ad108:   d503201f    nop
   ad10c:   d503201f    nop

00000000000ad110 <CPageAllocator::~CPageAllocator()>:
   ad110:   d65f03c0    ret
   ad114:   d503201f    nop
   ad118:   d503201f    nop
   ad11c:   d503201f    nop

00000000000ad120 <CPageAllocator::Setup(unsigned long, unsigned long)>:
   ad120:   d10083ff    sub sp, sp, #0x20
   ad124:   f9000fe0    str x0, [sp, #24]
   ad128:   f9000be1    str x1, [sp, #16]
   ad12c:   f90007e2    str x2, [sp, #8]
   ad130:   f9400be1    ldr x1, [sp, #16]
   ad134:   d29fffe0    mov x0, #0xffff
   ad138:   8b000020    add x0, x1, x0
   ad13c:   9270bc00    and x0, x0, #0xffffffffffff0000
   ad140:   aa0003e1    mov x1, x0
   ad144:   f9400fe0    ldr x0, [sp, #24]
   ad148:   f9000001    str x1, [x0]
   ad14c:   f9400be1    ldr x1, [sp, #16]
   ad150:   f94007e0    ldr x0, [sp, #8]
   ad154:   8b000020    add x0, x1, x0
   ad158:   9270bc00    and x0, x0, #0xffffffffffff0000
   ad15c:   aa0003e1    mov x1, x0
   ad160:   f9400fe0    ldr x0, [sp, #24]
   ad164:   f9000401    str x1, [x0, #8]
   ad168:   d503201f    nop
   ad16c:   910083ff    add sp, sp, #0x20
   ad170:   d65f03c0    ret
   ad174:   d503201f    nop
   ad178:   d503201f    nop
   ad17c:   d503201f    nop

00000000000ad180 <CPageAllocator::GetFreeSpace() const>:
   ad180:   a9400001    ldp x1, x0, [x0]
   ad184:   cb010000    sub x0, x0, x1
   ad188:   d65f03c0    ret
   ad18c:   d503201f    nop

00000000000ad190 <CPageAllocator::Allocate()>:
   ad190:   a9be7bfd    stp x29, x30, [sp, #-32]!
   ad194:   910003fd    mov x29, sp
   ad198:   a90153f3    stp x19, x20, [sp, #16]
   ad19c:   aa0003f3    mov x19, x0
   ad1a0:   f9400000    ldr x0, [x0]
   ad1a4:   b4000460    cbz x0, ad230 <CPageAllocator::Allocate()+0xa0>
   ad1a8:   b9401a60    ldr w0, [x19, #24]
   ad1ac:   35000220    cbnz    w0, ad1f0 <CPageAllocator::Allocate()+0x60>
   ad1b0:   f9400a74    ldr x20, [x19, #16]
   ad1b4:   b4000254    cbz x20, ad1fc <CPageAllocator::Allocate()+0x6c>
   ad1b8:   b9400281    ldr w1, [x20]
   ad1bc:   5289a860    mov w0, #0x4d43
   ad1c0:   72aa08e0    movk    w0, #0x5047, lsl #16
   ad1c4:   6b00003f    cmp w1, w0
   ad1c8:   540003e1    b.ne    ad244 <CPageAllocator::Allocate()+0xb4>
   ad1cc:   f9400681    ldr x1, [x20, #8]
   ad1d0:   b9401a60    ldr w0, [x19, #24]
   ad1d4:   f9000a61    str x1, [x19, #16]
   ad1d8:   b900029f    str wzr, [x20]
   ad1dc:   35000200    cbnz    w0, ad21c <CPageAllocator::Allocate()+0x8c>
   ad1e0:   aa1403e0    mov x0, x20
   ad1e4:   a94153f3    ldp x19, x20, [sp, #16]
   ad1e8:   a8c27bfd    ldp x29, x30, [sp], #32
   ad1ec:   d65f03c0    ret
   ad1f0:   97ffed20    bl  a8670 <EnterCritical>
   ad1f4:   f9400a74    ldr x20, [x19, #16]
   ad1f8:   b5fffe14    cbnz    x20, ad1b8 <CPageAllocator::Allocate()+0x28>
   ad1fc:   a9400e62    ldp x2, x3, [x19]
   ad200:   b9401a60    ldr w0, [x19, #24]
   ad204:   91404041    add x1, x2, #0x10, lsl #12
   ad208:   eb03003f    cmp x1, x3
   ad20c:   f9000261    str x1, [x19]
   ad210:   54fffe68    b.hi    ad1dc <CPageAllocator::Allocate()+0x4c>
   ad214:   aa0203f4    mov x20, x2
   ad218:   34fffe40    cbz w0, ad1e0 <CPageAllocator::Allocate()+0x50>
   ad21c:   97ffed45    bl  a8730 <LeaveCritical>
   ad220:   aa1403e0    mov x0, x20
   ad224:   a94153f3    ldp x19, x20, [sp, #16]
   ad228:   a8c27bfd    ldp x29, x30, [sp], #32
   ad22c:   d65f03c0    ret
   ad230:   b0000061    adrp    x1, ba000 <font_data+0x1080>
   ad234:   9104c021    add x1, x1, #0x130
   ad238:   91006020    add x0, x1, #0x18
   ad23c:   528006c2    mov w2, #0x36
   ad240:   97ffbe20    bl  9cac0 <assertion_failed>
   ad244:   b0000061    adrp    x1, ba000 <font_data+0x1080>
   ad248:   9104c021    add x1, x1, #0x130
   ad24c:   9100a020    add x0, x1, #0x28
   ad250:   52800882    mov w2, #0x44
   ad254:   97ffbe1b    bl  9cac0 <assertion_failed>
   ad258:   d503201f    nop
   ad25c:   d503201f    nop

00000000000ad260 <CPageAllocator::Free(void*)>:
   ad260:   b40003a1    cbz x1, ad2d4 <CPageAllocator::Free(void*)+0x74>
   ad264:   a9be7bfd    stp x29, x30, [sp, #-32]!
   ad268:   910003fd    mov x29, sp
   ad26c:   a90153f3    stp x19, x20, [sp, #16]
   ad270:   aa0003f4    mov x20, x0
   ad274:   aa0103f3    mov x19, x1
   ad278:   b9401800    ldr w0, [x0, #24]
   ad27c:   35000140    cbnz    w0, ad2a4 <CPageAllocator::Free(void*)+0x44>
   ad280:   f9400a80    ldr x0, [x20, #16]
   ad284:   5289a861    mov w1, #0x4d43
   ad288:   72aa08e1    movk    w1, #0x5047, lsl #16
   ad28c:   b9000261    str w1, [x19]
   ad290:   f9000660    str x0, [x19, #8]
   ad294:   f9000a93    str x19, [x20, #16]
   ad298:   a94153f3    ldp x19, x20, [sp, #16]
   ad29c:   a8c27bfd    ldp x29, x30, [sp], #32
   ad2a0:   d65f03c0    ret
   ad2a4:   97ffecf3    bl  a8670 <EnterCritical>
   ad2a8:   f9400a81    ldr x1, [x20, #16]
   ad2ac:   5289a862    mov w2, #0x4d43
   ad2b0:   72aa08e2    movk    w2, #0x5047, lsl #16
   ad2b4:   b9401a80    ldr w0, [x20, #24]
   ad2b8:   b9000262    str w2, [x19]
   ad2bc:   f9000661    str x1, [x19, #8]
   ad2c0:   f9000a93    str x19, [x20, #16]
   ad2c4:   34fffea0    cbz w0, ad298 <CPageAllocator::Free(void*)+0x38>
   ad2c8:   a94153f3    ldp x19, x20, [sp, #16]
   ad2cc:   a8c27bfd    ldp x29, x30, [sp], #32
   ad2d0:   17ffed18    b   a8730 <LeaveCritical>
   ad2d4:   d65f03c0    ret
    ...

00000000000ad800 <VectorTable>:
   ad800:   140001ef    b   adfbc <SynchronousStub>
   ad804:   d503201f    nop
   ad808:   d503201f    nop
   ad80c:   d503201f    nop
   ad810:   d503201f    nop
   ad814:   d503201f    nop
   ad818:   d503201f    nop
   ad81c:   d503201f    nop
   ad820:   d503201f    nop
   ad824:   d503201f    nop
   ad828:   d503201f    nop
   ad82c:   d503201f    nop
   ad830:   d503201f    nop
   ad834:   d503201f    nop
   ad838:   d503201f    nop
   ad83c:   d503201f    nop
   ad840:   d503201f    nop
   ad844:   d503201f    nop
   ad848:   d503201f    nop
   ad84c:   d503201f    nop
   ad850:   d503201f    nop
   ad854:   d503201f    nop
   ad858:   d503201f    nop
   ad85c:   d503201f    nop
   ad860:   d503201f    nop
   ad864:   d503201f    nop
   ad868:   d503201f    nop
   ad86c:   d503201f    nop
   ad870:   d503201f    nop
   ad874:   d503201f    nop
   ad878:   d503201f    nop
   ad87c:   d503201f    nop
   ad880:   140001eb    b   ae02c <IRQStub>
   ad884:   d503201f    nop
   ad888:   d503201f    nop
   ad88c:   d503201f    nop
   ad890:   d503201f    nop
   ad894:   d503201f    nop
   ad898:   d503201f    nop
   ad89c:   d503201f    nop
   ad8a0:   d503201f    nop
   ad8a4:   d503201f    nop
   ad8a8:   d503201f    nop
   ad8ac:   d503201f    nop
   ad8b0:   d503201f    nop
   ad8b4:   d503201f    nop
   ad8b8:   d503201f    nop
   ad8bc:   d503201f    nop
   ad8c0:   d503201f    nop
   ad8c4:   d503201f    nop
   ad8c8:   d503201f    nop
   ad8cc:   d503201f    nop
   ad8d0:   d503201f    nop
   ad8d4:   d503201f    nop
   ad8d8:   d503201f    nop
   ad8dc:   d503201f    nop
   ad8e0:   d503201f    nop
   ad8e4:   d503201f    nop
   ad8e8:   d503201f    nop
   ad8ec:   d503201f    nop
   ad8f0:   d503201f    nop
   ad8f4:   d503201f    nop
   ad8f8:   d503201f    nop
   ad8fc:   d503201f    nop
   ad900:   14000217    b   ae15c <FIQStub>
   ad904:   d503201f    nop
   ad908:   d503201f    nop
   ad90c:   d503201f    nop
   ad910:   d503201f    nop
   ad914:   d503201f    nop
   ad918:   d503201f    nop
   ad91c:   d503201f    nop
   ad920:   d503201f    nop
   ad924:   d503201f    nop
   ad928:   d503201f    nop
   ad92c:   d503201f    nop
   ad930:   d503201f    nop
   ad934:   d503201f    nop
   ad938:   d503201f    nop
   ad93c:   d503201f    nop
   ad940:   d503201f    nop
   ad944:   d503201f    nop
   ad948:   d503201f    nop
   ad94c:   d503201f    nop
   ad950:   d503201f    nop
   ad954:   d503201f    nop
   ad958:   d503201f    nop
   ad95c:   d503201f    nop
   ad960:   d503201f    nop
   ad964:   d503201f    nop
   ad968:   d503201f    nop
   ad96c:   d503201f    nop
   ad970:   d503201f    nop
   ad974:   d503201f    nop
   ad978:   d503201f    nop
   ad97c:   d503201f    nop
   ad980:   1400019d    b   adff4 <SErrorStub>
   ad984:   d503201f    nop
   ad988:   d503201f    nop
   ad98c:   d503201f    nop
   ad990:   d503201f    nop
   ad994:   d503201f    nop
   ad998:   d503201f    nop
   ad99c:   d503201f    nop
   ad9a0:   d503201f    nop
   ad9a4:   d503201f    nop
   ad9a8:   d503201f    nop
   ad9ac:   d503201f    nop
   ad9b0:   d503201f    nop
   ad9b4:   d503201f    nop
   ad9b8:   d503201f    nop
   ad9bc:   d503201f    nop
   ad9c0:   d503201f    nop
   ad9c4:   d503201f    nop
   ad9c8:   d503201f    nop
   ad9cc:   d503201f    nop
   ad9d0:   d503201f    nop
   ad9d4:   d503201f    nop
   ad9d8:   d503201f    nop
   ad9dc:   d503201f    nop
   ad9e0:   d503201f    nop
   ad9e4:   d503201f    nop
   ad9e8:   d503201f    nop
   ad9ec:   d503201f    nop
   ad9f0:   d503201f    nop
   ad9f4:   d503201f    nop
   ad9f8:   d503201f    nop
   ad9fc:   d503201f    nop
   ada00:   1400016f    b   adfbc <SynchronousStub>
   ada04:   d503201f    nop
   ada08:   d503201f    nop
   ada0c:   d503201f    nop
   ada10:   d503201f    nop
   ada14:   d503201f    nop
   ada18:   d503201f    nop
   ada1c:   d503201f    nop
   ada20:   d503201f    nop
   ada24:   d503201f    nop
   ada28:   d503201f    nop
   ada2c:   d503201f    nop
   ada30:   d503201f    nop
   ada34:   d503201f    nop
   ada38:   d503201f    nop
   ada3c:   d503201f    nop
   ada40:   d503201f    nop
   ada44:   d503201f    nop
   ada48:   d503201f    nop
   ada4c:   d503201f    nop
   ada50:   d503201f    nop
   ada54:   d503201f    nop
   ada58:   d503201f    nop
   ada5c:   d503201f    nop
   ada60:   d503201f    nop
   ada64:   d503201f    nop
   ada68:   d503201f    nop
   ada6c:   d503201f    nop
   ada70:   d503201f    nop
   ada74:   d503201f    nop
   ada78:   d503201f    nop
   ada7c:   d503201f    nop
   ada80:   1400016b    b   ae02c <IRQStub>
   ada84:   d503201f    nop
   ada88:   d503201f    nop
   ada8c:   d503201f    nop
   ada90:   d503201f    nop
   ada94:   d503201f    nop
   ada98:   d503201f    nop
   ada9c:   d503201f    nop
   adaa0:   d503201f    nop
   adaa4:   d503201f    nop
   adaa8:   d503201f    nop
   adaac:   d503201f    nop
   adab0:   d503201f    nop
   adab4:   d503201f    nop
   adab8:   d503201f    nop
   adabc:   d503201f    nop
   adac0:   d503201f    nop
   adac4:   d503201f    nop
   adac8:   d503201f    nop
   adacc:   d503201f    nop
   adad0:   d503201f    nop
   adad4:   d503201f    nop
   adad8:   d503201f    nop
   adadc:   d503201f    nop
   adae0:   d503201f    nop
   adae4:   d503201f    nop
   adae8:   d503201f    nop
   adaec:   d503201f    nop
   adaf0:   d503201f    nop
   adaf4:   d503201f    nop
   adaf8:   d503201f    nop
   adafc:   d503201f    nop
   adb00:   14000197    b   ae15c <FIQStub>
   adb04:   d503201f    nop
   adb08:   d503201f    nop
   adb0c:   d503201f    nop
   adb10:   d503201f    nop
   adb14:   d503201f    nop
   adb18:   d503201f    nop
   adb1c:   d503201f    nop
   adb20:   d503201f    nop
   adb24:   d503201f    nop
   adb28:   d503201f    nop
   adb2c:   d503201f    nop
   adb30:   d503201f    nop
   adb34:   d503201f    nop
   adb38:   d503201f    nop
   adb3c:   d503201f    nop
   adb40:   d503201f    nop
   adb44:   d503201f    nop
   adb48:   d503201f    nop
   adb4c:   d503201f    nop
   adb50:   d503201f    nop
   adb54:   d503201f    nop
   adb58:   d503201f    nop
   adb5c:   d503201f    nop
   adb60:   d503201f    nop
   adb64:   d503201f    nop
   adb68:   d503201f    nop
   adb6c:   d503201f    nop
   adb70:   d503201f    nop
   adb74:   d503201f    nop
   adb78:   d503201f    nop
   adb7c:   d503201f    nop
   adb80:   1400011d    b   adff4 <SErrorStub>
   adb84:   d503201f    nop
   adb88:   d503201f    nop
   adb8c:   d503201f    nop
   adb90:   d503201f    nop
   adb94:   d503201f    nop
   adb98:   d503201f    nop
   adb9c:   d503201f    nop
   adba0:   d503201f    nop
   adba4:   d503201f    nop
   adba8:   d503201f    nop
   adbac:   d503201f    nop
   adbb0:   d503201f    nop
   adbb4:   d503201f    nop
   adbb8:   d503201f    nop
   adbbc:   d503201f    nop
   adbc0:   d503201f    nop
   adbc4:   d503201f    nop
   adbc8:   d503201f    nop
   adbcc:   d503201f    nop
   adbd0:   d503201f    nop
   adbd4:   d503201f    nop
   adbd8:   d503201f    nop
   adbdc:   d503201f    nop
   adbe0:   d503201f    nop
   adbe4:   d503201f    nop
   adbe8:   d503201f    nop
   adbec:   d503201f    nop
   adbf0:   d503201f    nop
   adbf4:   d503201f    nop
   adbf8:   d503201f    nop
   adbfc:   d503201f    nop
   adc00:   140001a8    b   ae2a0 <HVCStub>
   adc04:   d503201f    nop
   adc08:   d503201f    nop
   adc0c:   d503201f    nop
   adc10:   d503201f    nop
   adc14:   d503201f    nop
   adc18:   d503201f    nop
   adc1c:   d503201f    nop
   adc20:   d503201f    nop
   adc24:   d503201f    nop
   adc28:   d503201f    nop
   adc2c:   d503201f    nop
   adc30:   d503201f    nop
   adc34:   d503201f    nop
   adc38:   d503201f    nop
   adc3c:   d503201f    nop
   adc40:   d503201f    nop
   adc44:   d503201f    nop
   adc48:   d503201f    nop
   adc4c:   d503201f    nop
   adc50:   d503201f    nop
   adc54:   d503201f    nop
   adc58:   d503201f    nop
   adc5c:   d503201f    nop
   adc60:   d503201f    nop
   adc64:   d503201f    nop
   adc68:   d503201f    nop
   adc6c:   d503201f    nop
   adc70:   d503201f    nop
   adc74:   d503201f    nop
   adc78:   d503201f    nop
   adc7c:   d503201f    nop
   adc80:   140000c1    b   adf84 <UnexpectedStub>
   adc84:   d503201f    nop
   adc88:   d503201f    nop
   adc8c:   d503201f    nop
   adc90:   d503201f    nop
   adc94:   d503201f    nop
   adc98:   d503201f    nop
   adc9c:   d503201f    nop
   adca0:   d503201f    nop
   adca4:   d503201f    nop
   adca8:   d503201f    nop
   adcac:   d503201f    nop
   adcb0:   d503201f    nop
   adcb4:   d503201f    nop
   adcb8:   d503201f    nop
   adcbc:   d503201f    nop
   adcc0:   d503201f    nop
   adcc4:   d503201f    nop
   adcc8:   d503201f    nop
   adccc:   d503201f    nop
   adcd0:   d503201f    nop
   adcd4:   d503201f    nop
   adcd8:   d503201f    nop
   adcdc:   d503201f    nop
   adce0:   d503201f    nop
   adce4:   d503201f    nop
   adce8:   d503201f    nop
   adcec:   d503201f    nop
   adcf0:   d503201f    nop
   adcf4:   d503201f    nop
   adcf8:   d503201f    nop
   adcfc:   d503201f    nop
   add00:   140000a1    b   adf84 <UnexpectedStub>
   add04:   d503201f    nop
   add08:   d503201f    nop
   add0c:   d503201f    nop
   add10:   d503201f    nop
   add14:   d503201f    nop
   add18:   d503201f    nop
   add1c:   d503201f    nop
   add20:   d503201f    nop
   add24:   d503201f    nop
   add28:   d503201f    nop
   add2c:   d503201f    nop
   add30:   d503201f    nop
   add34:   d503201f    nop
   add38:   d503201f    nop
   add3c:   d503201f    nop
   add40:   d503201f    nop
   add44:   d503201f    nop
   add48:   d503201f    nop
   add4c:   d503201f    nop
   add50:   d503201f    nop
   add54:   d503201f    nop
   add58:   d503201f    nop
   add5c:   d503201f    nop
   add60:   d503201f    nop
   add64:   d503201f    nop
   add68:   d503201f    nop
   add6c:   d503201f    nop
   add70:   d503201f    nop
   add74:   d503201f    nop
   add78:   d503201f    nop
   add7c:   d503201f    nop
   add80:   14000081    b   adf84 <UnexpectedStub>
   add84:   d503201f    nop
   add88:   d503201f    nop
   add8c:   d503201f    nop
   add90:   d503201f    nop
   add94:   d503201f    nop
   add98:   d503201f    nop
   add9c:   d503201f    nop
   adda0:   d503201f    nop
   adda4:   d503201f    nop
   adda8:   d503201f    nop
   addac:   d503201f    nop
   addb0:   d503201f    nop
   addb4:   d503201f    nop
   addb8:   d503201f    nop
   addbc:   d503201f    nop
   addc0:   d503201f    nop
   addc4:   d503201f    nop
   addc8:   d503201f    nop
   addcc:   d503201f    nop
   addd0:   d503201f    nop
   addd4:   d503201f    nop
   addd8:   d503201f    nop
   adddc:   d503201f    nop
   adde0:   d503201f    nop
   adde4:   d503201f    nop
   adde8:   d503201f    nop
   addec:   d503201f    nop
   addf0:   d503201f    nop
   addf4:   d503201f    nop
   addf8:   d503201f    nop
   addfc:   d503201f    nop
   ade00:   14000061    b   adf84 <UnexpectedStub>
   ade04:   d503201f    nop
   ade08:   d503201f    nop
   ade0c:   d503201f    nop
   ade10:   d503201f    nop
   ade14:   d503201f    nop
   ade18:   d503201f    nop
   ade1c:   d503201f    nop
   ade20:   d503201f    nop
   ade24:   d503201f    nop
   ade28:   d503201f    nop
   ade2c:   d503201f    nop
   ade30:   d503201f    nop
   ade34:   d503201f    nop
   ade38:   d503201f    nop
   ade3c:   d503201f    nop
   ade40:   d503201f    nop
   ade44:   d503201f    nop
   ade48:   d503201f    nop
   ade4c:   d503201f    nop
   ade50:   d503201f    nop
   ade54:   d503201f    nop
   ade58:   d503201f    nop
   ade5c:   d503201f    nop
   ade60:   d503201f    nop
   ade64:   d503201f    nop
   ade68:   d503201f    nop
   ade6c:   d503201f    nop
   ade70:   d503201f    nop
   ade74:   d503201f    nop
   ade78:   d503201f    nop
   ade7c:   d503201f    nop
   ade80:   14000041    b   adf84 <UnexpectedStub>
   ade84:   d503201f    nop
   ade88:   d503201f    nop
   ade8c:   d503201f    nop
   ade90:   d503201f    nop
   ade94:   d503201f    nop
   ade98:   d503201f    nop
   ade9c:   d503201f    nop
   adea0:   d503201f    nop
   adea4:   d503201f    nop
   adea8:   d503201f    nop
   adeac:   d503201f    nop
   adeb0:   d503201f    nop
   adeb4:   d503201f    nop
   adeb8:   d503201f    nop
   adebc:   d503201f    nop
   adec0:   d503201f    nop
   adec4:   d503201f    nop
   adec8:   d503201f    nop
   adecc:   d503201f    nop
   aded0:   d503201f    nop
   aded4:   d503201f    nop
   aded8:   d503201f    nop
   adedc:   d503201f    nop
   adee0:   d503201f    nop
   adee4:   d503201f    nop
   adee8:   d503201f    nop
   adeec:   d503201f    nop
   adef0:   d503201f    nop
   adef4:   d503201f    nop
   adef8:   d503201f    nop
   adefc:   d503201f    nop
   adf00:   14000021    b   adf84 <UnexpectedStub>
   adf04:   d503201f    nop
   adf08:   d503201f    nop
   adf0c:   d503201f    nop
   adf10:   d503201f    nop
   adf14:   d503201f    nop
   adf18:   d503201f    nop
   adf1c:   d503201f    nop
   adf20:   d503201f    nop
   adf24:   d503201f    nop
   adf28:   d503201f    nop
   adf2c:   d503201f    nop
   adf30:   d503201f    nop
   adf34:   d503201f    nop
   adf38:   d503201f    nop
   adf3c:   d503201f    nop
   adf40:   d503201f    nop
   adf44:   d503201f    nop
   adf48:   d503201f    nop
   adf4c:   d503201f    nop
   adf50:   d503201f    nop
   adf54:   d503201f    nop
   adf58:   d503201f    nop
   adf5c:   d503201f    nop
   adf60:   d503201f    nop
   adf64:   d503201f    nop
   adf68:   d503201f    nop
   adf6c:   d503201f    nop
   adf70:   d503201f    nop
   adf74:   d503201f    nop
   adf78:   d503201f    nop
   adf7c:   d503201f    nop
   adf80:   14000001    b   adf84 <UnexpectedStub>

00000000000adf84 <UnexpectedStub>:
   adf84:   d5385200    mrs x0, esr_el1
   adf88:   d5384001    mrs x1, spsr_el1
   adf8c:   aa1e03e2    mov x2, x30
   adf90:   d5384023    mrs x3, elr_el1
   adf94:   d5384104    mrs x4, sp_el0
   adf98:   910003e5    mov x5, sp
   adf9c:   d5386006    mrs x6, far_el1
   adfa0:   f81f0fe6    str x6, [sp, #-16]!
   adfa4:   a9bf17e4    stp x4, x5, [sp, #-16]!
   adfa8:   a9bf0fe2    stp x2, x3, [sp, #-16]!
   adfac:   a9bf07e0    stp x0, x1, [sp, #-16]!
   adfb0:   d2800000    mov x0, #0x0
   adfb4:   910003e1    mov x1, sp
   adfb8:   17ffe8b6    b   a8290 <ExceptionHandler>

00000000000adfbc <SynchronousStub>:
   adfbc:   d5385200    mrs x0, esr_el1
   adfc0:   d5384001    mrs x1, spsr_el1
   adfc4:   aa1e03e2    mov x2, x30
   adfc8:   d5384023    mrs x3, elr_el1
   adfcc:   d5384104    mrs x4, sp_el0
   adfd0:   910003e5    mov x5, sp
   adfd4:   d5386006    mrs x6, far_el1
   adfd8:   f81f0fe6    str x6, [sp, #-16]!
   adfdc:   a9bf17e4    stp x4, x5, [sp, #-16]!
   adfe0:   a9bf0fe2    stp x2, x3, [sp, #-16]!
   adfe4:   a9bf07e0    stp x0, x1, [sp, #-16]!
   adfe8:   d2800020    mov x0, #0x1
   adfec:   910003e1    mov x1, sp
   adff0:   17ffe8a8    b   a8290 <ExceptionHandler>

00000000000adff4 <SErrorStub>:
   adff4:   d5385200    mrs x0, esr_el1
   adff8:   d5384001    mrs x1, spsr_el1
   adffc:   aa1e03e2    mov x2, x30
   ae000:   d5384023    mrs x3, elr_el1
   ae004:   d5384104    mrs x4, sp_el0
   ae008:   910003e5    mov x5, sp
   ae00c:   d5386006    mrs x6, far_el1
   ae010:   f81f0fe6    str x6, [sp, #-16]!
   ae014:   a9bf17e4    stp x4, x5, [sp, #-16]!
   ae018:   a9bf0fe2    stp x2, x3, [sp, #-16]!
   ae01c:   a9bf07e0    stp x0, x1, [sp, #-16]!
   ae020:   d2800040    mov x0, #0x2
   ae024:   910003e1    mov x1, sp
   ae028:   17ffe89a    b   a8290 <ExceptionHandler>

00000000000ae02c <IRQStub>:
   ae02c:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   ae030:   d538403d    mrs x29, elr_el1
   ae034:   d538401e    mrs x30, spsr_el1
   ae038:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   ae03c:   d50341ff    msr daifclr, #0x1
   ae040:   adbf7ffe    stp q30, q31, [sp, #-32]!
   ae044:   adbf77fc    stp q28, q29, [sp, #-32]!
   ae048:   adbf6ffa    stp q26, q27, [sp, #-32]!
   ae04c:   adbf67f8    stp q24, q25, [sp, #-32]!
   ae050:   adbf5ff6    stp q22, q23, [sp, #-32]!
   ae054:   adbf57f4    stp q20, q21, [sp, #-32]!
   ae058:   adbf4ff2    stp q18, q19, [sp, #-32]!
   ae05c:   adbf47f0    stp q16, q17, [sp, #-32]!
   ae060:   adbf3fee    stp q14, q15, [sp, #-32]!
   ae064:   adbf37ec    stp q12, q13, [sp, #-32]!
   ae068:   adbf2fea    stp q10, q11, [sp, #-32]!
   ae06c:   adbf27e8    stp q8, q9, [sp, #-32]!
   ae070:   adbf1fe6    stp q6, q7, [sp, #-32]!
   ae074:   adbf17e4    stp q4, q5, [sp, #-32]!
   ae078:   adbf0fe2    stp q2, q3, [sp, #-32]!
   ae07c:   adbf07e0    stp q0, q1, [sp, #-32]!
   ae080:   a9bf73fb    stp x27, x28, [sp, #-16]!
   ae084:   a9bf6bf9    stp x25, x26, [sp, #-16]!
   ae088:   a9bf63f7    stp x23, x24, [sp, #-16]!
   ae08c:   a9bf5bf5    stp x21, x22, [sp, #-16]!
   ae090:   a9bf53f3    stp x19, x20, [sp, #-16]!
   ae094:   a9bf4bf1    stp x17, x18, [sp, #-16]!
   ae098:   a9bf43ef    stp x15, x16, [sp, #-16]!
   ae09c:   a9bf3bed    stp x13, x14, [sp, #-16]!
   ae0a0:   a9bf33eb    stp x11, x12, [sp, #-16]!
   ae0a4:   a9bf2be9    stp x9, x10, [sp, #-16]!
   ae0a8:   a9bf23e7    stp x7, x8, [sp, #-16]!
   ae0ac:   a9bf1be5    stp x5, x6, [sp, #-16]!
   ae0b0:   a9bf13e3    stp x3, x4, [sp, #-16]!
   ae0b4:   a9bf0be1    stp x1, x2, [sp, #-16]!
   ae0b8:   f81f0fe0    str x0, [sp, #-16]!
   ae0bc:   58000fe0    ldr x0, ae2b8 <HVCStub+0x18>
   ae0c0:   f900001d    str x29, [x0]
   ae0c4:   97fff1ff    bl  aa8c0 <InterruptHandler>
   ae0c8:   f84107e0    ldr x0, [sp], #16
   ae0cc:   a8c10be1    ldp x1, x2, [sp], #16
   ae0d0:   a8c113e3    ldp x3, x4, [sp], #16
   ae0d4:   a8c11be5    ldp x5, x6, [sp], #16
   ae0d8:   a8c123e7    ldp x7, x8, [sp], #16
   ae0dc:   a8c12be9    ldp x9, x10, [sp], #16
   ae0e0:   a8c133eb    ldp x11, x12, [sp], #16
   ae0e4:   a8c13bed    ldp x13, x14, [sp], #16
   ae0e8:   a8c143ef    ldp x15, x16, [sp], #16
   ae0ec:   a8c14bf1    ldp x17, x18, [sp], #16
   ae0f0:   a8c153f3    ldp x19, x20, [sp], #16
   ae0f4:   a8c15bf5    ldp x21, x22, [sp], #16
   ae0f8:   a8c163f7    ldp x23, x24, [sp], #16
   ae0fc:   a8c16bf9    ldp x25, x26, [sp], #16
   ae100:   a8c173fb    ldp x27, x28, [sp], #16
   ae104:   acc107e0    ldp q0, q1, [sp], #32
   ae108:   acc10fe2    ldp q2, q3, [sp], #32
   ae10c:   acc117e4    ldp q4, q5, [sp], #32
   ae110:   acc11fe6    ldp q6, q7, [sp], #32
   ae114:   acc127e8    ldp q8, q9, [sp], #32
   ae118:   acc12fea    ldp q10, q11, [sp], #32
   ae11c:   acc137ec    ldp q12, q13, [sp], #32
   ae120:   acc13fee    ldp q14, q15, [sp], #32
   ae124:   acc147f0    ldp q16, q17, [sp], #32
   ae128:   acc14ff2    ldp q18, q19, [sp], #32
   ae12c:   acc157f4    ldp q20, q21, [sp], #32
   ae130:   acc15ff6    ldp q22, q23, [sp], #32
   ae134:   acc167f8    ldp q24, q25, [sp], #32
   ae138:   acc16ffa    ldp q26, q27, [sp], #32
   ae13c:   acc177fc    ldp q28, q29, [sp], #32
   ae140:   acc17ffe    ldp q30, q31, [sp], #32
   ae144:   d50341df    msr daifset, #0x1
   ae148:   a8c17bfd    ldp x29, x30, [sp], #16
   ae14c:   d518403d    msr elr_el1, x29
   ae150:   d518401e    msr spsr_el1, x30
   ae154:   a8c17bfd    ldp x29, x30, [sp], #16
   ae158:   d69f03e0    eret

00000000000ae15c <FIQStub>:
   ae15c:   adbf7ffe    stp q30, q31, [sp, #-32]!
   ae160:   adbf77fc    stp q28, q29, [sp, #-32]!
   ae164:   adbf6ffa    stp q26, q27, [sp, #-32]!
   ae168:   adbf67f8    stp q24, q25, [sp, #-32]!
   ae16c:   adbf5ff6    stp q22, q23, [sp, #-32]!
   ae170:   adbf57f4    stp q20, q21, [sp, #-32]!
   ae174:   adbf4ff2    stp q18, q19, [sp, #-32]!
   ae178:   adbf47f0    stp q16, q17, [sp, #-32]!
   ae17c:   adbf3fee    stp q14, q15, [sp, #-32]!
   ae180:   adbf37ec    stp q12, q13, [sp, #-32]!
   ae184:   adbf2fea    stp q10, q11, [sp, #-32]!
   ae188:   adbf27e8    stp q8, q9, [sp, #-32]!
   ae18c:   adbf1fe6    stp q6, q7, [sp, #-32]!
   ae190:   adbf17e4    stp q4, q5, [sp, #-32]!
   ae194:   adbf0fe2    stp q2, q3, [sp, #-32]!
   ae198:   adbf07e0    stp q0, q1, [sp, #-32]!
   ae19c:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   ae1a0:   a9bf73fb    stp x27, x28, [sp, #-16]!
   ae1a4:   a9bf6bf9    stp x25, x26, [sp, #-16]!
   ae1a8:   a9bf63f7    stp x23, x24, [sp, #-16]!
   ae1ac:   a9bf5bf5    stp x21, x22, [sp, #-16]!
   ae1b0:   a9bf53f3    stp x19, x20, [sp, #-16]!
   ae1b4:   a9bf4bf1    stp x17, x18, [sp, #-16]!
   ae1b8:   a9bf43ef    stp x15, x16, [sp, #-16]!
   ae1bc:   a9bf3bed    stp x13, x14, [sp, #-16]!
   ae1c0:   a9bf33eb    stp x11, x12, [sp, #-16]!
   ae1c4:   a9bf2be9    stp x9, x10, [sp, #-16]!
   ae1c8:   a9bf23e7    stp x7, x8, [sp, #-16]!
   ae1cc:   a9bf1be5    stp x5, x6, [sp, #-16]!
   ae1d0:   a9bf13e3    stp x3, x4, [sp, #-16]!
   ae1d4:   a9bf0be1    stp x1, x2, [sp, #-16]!
   ae1d8:   f81f0fe0    str x0, [sp, #-16]!
   ae1dc:   58000722    ldr x2, ae2c0 <HVCStub+0x20>
   ae1e0:   f9400041    ldr x1, [x2]
   ae1e4:   f100003f    cmp x1, #0x0
   ae1e8:   54000480    b.eq    ae278 <FIQStub+0x11c>
   ae1ec:   f9400440    ldr x0, [x2, #8]
   ae1f0:   d63f0020    blr x1
   ae1f4:   f84107e0    ldr x0, [sp], #16
   ae1f8:   a8c10be1    ldp x1, x2, [sp], #16
   ae1fc:   a8c113e3    ldp x3, x4, [sp], #16
   ae200:   a8c11be5    ldp x5, x6, [sp], #16
   ae204:   a8c123e7    ldp x7, x8, [sp], #16
   ae208:   a8c12be9    ldp x9, x10, [sp], #16
   ae20c:   a8c133eb    ldp x11, x12, [sp], #16
   ae210:   a8c13bed    ldp x13, x14, [sp], #16
   ae214:   a8c143ef    ldp x15, x16, [sp], #16
   ae218:   a8c14bf1    ldp x17, x18, [sp], #16
   ae21c:   a8c153f3    ldp x19, x20, [sp], #16
   ae220:   a8c15bf5    ldp x21, x22, [sp], #16
   ae224:   a8c163f7    ldp x23, x24, [sp], #16
   ae228:   a8c16bf9    ldp x25, x26, [sp], #16
   ae22c:   a8c173fb    ldp x27, x28, [sp], #16
   ae230:   a8c17bfd    ldp x29, x30, [sp], #16
   ae234:   acc107e0    ldp q0, q1, [sp], #32
   ae238:   acc10fe2    ldp q2, q3, [sp], #32
   ae23c:   acc117e4    ldp q4, q5, [sp], #32
   ae240:   acc11fe6    ldp q6, q7, [sp], #32
   ae244:   acc127e8    ldp q8, q9, [sp], #32
   ae248:   acc12fea    ldp q10, q11, [sp], #32
   ae24c:   acc137ec    ldp q12, q13, [sp], #32
   ae250:   acc13fee    ldp q14, q15, [sp], #32
   ae254:   acc147f0    ldp q16, q17, [sp], #32
   ae258:   acc14ff2    ldp q18, q19, [sp], #32
   ae25c:   acc157f4    ldp q20, q21, [sp], #32
   ae260:   acc15ff6    ldp q22, q23, [sp], #32
   ae264:   acc167f8    ldp q24, q25, [sp], #32
   ae268:   acc16ffa    ldp q26, q27, [sp], #32
   ae26c:   acc177fc    ldp q28, q29, [sp], #32
   ae270:   acc17ffe    ldp q30, q31, [sp], #32
   ae274:   d69f03e0    eret
   ae278:   58000281    ldr x1, ae2c8 <HVCStub+0x28>
   ae27c:   52800000    mov w0, #0x0
   ae280:   b9000020    str w0, [x1]
   ae284:   17ffffdc    b   ae1f4 <FIQStub+0x98>

00000000000ae288 <SMCStub>:
   ae288:   58000242    ldr x2, ae2d0 <HVCStub+0x30>
   ae28c:   9100005f    mov sp, x2
   ae290:   f81f0ffe    str x30, [sp, #-16]!
   ae294:   97fff213    bl  aaae0 <SecureMonitorHandler>
   ae298:   f84107fe    ldr x30, [sp], #16
   ae29c:   d69f03e0    eret

00000000000ae2a0 <HVCStub>:
   ae2a0:   d53c4000    mrs x0, spsr_el2
   ae2a4:   927cec00    and x0, x0, #0xfffffffffffffff0
   ae2a8:   d2800121    mov x1, #0x9
   ae2ac:   aa010000    orr x0, x0, x1
   ae2b0:   d51c4000    msr spsr_el2, x0
   ae2b4:   d69f03e0    eret
   ae2b8:   000ba878    .word   0x000ba878
   ae2bc:   00000000    .word   0x00000000
   ae2c0:   000ba860    .word   0x000ba860
   ae2c4:   00000000    .word   0x00000000
   ae2c8:   fe00b20c    .word   0xfe00b20c
   ae2cc:   00000000    .word   0x00000000
   ae2d0:   000babb0    .word   0x000babb0
    ...

00000000000ae2e0 <CDMA4Channel::CDMA4Channel(unsigned int, CInterruptSystem*)>:
   ae2e0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   ae2e4:   910003fd    mov x29, sp
   ae2e8:   7100283f    cmp w1, #0xa
   ae2ec:   a90153f3    stp x19, x20, [sp, #16]
   ae2f0:   b9000001    str w1, [x0]
   ae2f4:   a900fc1f    stp xzr, xzr, [x0, #8]
   ae2f8:   f9000c02    str x2, [x0, #24]
   ae2fc:   3900801f    strb    wzr, [x0, #32]
   ae300:   a902fc1f    stp xzr, xzr, [x0, #40]
   ae304:   3900e01f    strb    wzr, [x0, #56]
   ae308:   54000509    b.ls    ae3a8 <CDMA4Channel::CDMA4Channel(unsigned int, CInterruptSystem*)+0xc8>
   ae30c:   7100383f    cmp w1, #0xe
   ae310:   54000568    b.hi    ae3bc <CDMA4Channel::CDMA4Channel(unsigned int, CInterruptSystem*)+0xdc>
   ae314:   528e0194    mov w20, #0x700c
   ae318:   72bfc014    movk    w20, #0xfe00, lsl #16
   ae31c:   0b012281    add w1, w20, w1, lsl #8
   ae320:   aa0003f3    mov x19, x0
   ae324:   52a20002    mov w2, #0x10000000
   ae328:   b9400020    ldr w0, [x1]
   ae32c:   12040c00    and w0, w0, #0xf0000000
   ae330:   6b02001f    cmp w0, w2
   ae334:   540004e1    b.ne    ae3d0 <CDMA4Channel::CDMA4Channel(unsigned int, CInterruptSystem*)+0xf0>
   ae338:   52800041    mov w1, #0x2
   ae33c:   d28007e0    mov x0, #0x3f
   ae340:   97ffe4ec    bl  a76f0 <operator new[](unsigned long, int)>
   ae344:   b9400265    ldr w5, [x19]
   ae348:   51002282    sub w2, w20, #0x8
   ae34c:   91007c03    add x3, x0, #0x1f
   ae350:   927be863    and x3, x3, #0xffffffffffffffe0
   ae354:   d28ffe04    mov x4, #0x7ff0
   ae358:   f2bfc004    movk    x4, #0xfe00, lsl #16
   ae35c:   52800021    mov w1, #0x1
   ae360:   b9001c7f    str wzr, [x3, #28]
   ae364:   0b052042    add w2, w2, w5, lsl #8
   ae368:   1ac52021    lsl w1, w1, w5
   ae36c:   b900005f    str wzr, [x2]
   ae370:   b9400082    ldr w2, [x4]
   ae374:   a9008e60    stp x0, x3, [x19, #8]
   ae378:   52807d00    mov w0, #0x3e8
   ae37c:   2a020021    orr w1, w1, w2
   ae380:   b9000081    str w1, [x4]
   ae384:   97ffe07b    bl  a6570 <CTimer::SimpleusDelay(unsigned int)>
   ae388:   b9400261    ldr w1, [x19]
   ae38c:   52a01002    mov w2, #0x800000
   ae390:   52807d00    mov w0, #0x3e8
   ae394:   0b012281    add w1, w20, w1, lsl #8
   ae398:   a94153f3    ldp x19, x20, [sp, #16]
   ae39c:   b9000022    str w2, [x1]
   ae3a0:   a8c27bfd    ldp x29, x30, [sp], #32
   ae3a4:   17ffe073    b   a6570 <CTimer::SimpleusDelay(unsigned int)>
   ae3a8:   90000061    adrp    x1, ba000 <font_data+0x1080>
   ae3ac:   91060021    add x1, x1, #0x180
   ae3b0:   91004020    add x0, x1, #0x10
   ae3b4:   52800e22    mov w2, #0x71
   ae3b8:   97ffb9c2    bl  9cac0 <assertion_failed>
   ae3bc:   90000061    adrp    x1, ba000 <font_data+0x1080>
   ae3c0:   91060021    add x1, x1, #0x180
   ae3c4:   9100c020    add x0, x1, #0x30
   ae3c8:   52800e42    mov w2, #0x72
   ae3cc:   97ffb9bd    bl  9cac0 <assertion_failed>
   ae3d0:   90000061    adrp    x1, ba000 <font_data+0x1080>
   ae3d4:   91060021    add x1, x1, #0x180
   ae3d8:   91014020    add x0, x1, #0x50
   ae3dc:   52800e62    mov w2, #0x73
   ae3e0:   97ffb9b8    bl  9cac0 <assertion_failed>
   ae3e4:   d503201f    nop
   ae3e8:   d503201f    nop
   ae3ec:   d503201f    nop

00000000000ae3f0 <CDMA4Channel::~CDMA4Channel()>:
   ae3f0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   ae3f4:   910003fd    mov x29, sp
   ae3f8:   f9000bf3    str x19, [sp, #16]
   ae3fc:   aa0003f3    mov x19, x0
   ae400:   b9400000    ldr w0, [x0]
   ae404:   7100281f    cmp w0, #0xa
   ae408:   540004c9    b.ls    ae4a0 <CDMA4Channel::~CDMA4Channel()+0xb0>
   ae40c:   7100381f    cmp w0, #0xe
   ae410:   54000528    b.hi    ae4b4 <CDMA4Channel::~CDMA4Channel()+0xc4>
   ae414:   528e0181    mov w1, #0x700c
   ae418:   72bfc001    movk    w1, #0xfe00, lsl #16
   ae41c:   0b002021    add w1, w1, w0, lsl #8
   ae420:   52a01002    mov w2, #0x800000
   ae424:   52807d00    mov w0, #0x3e8
   ae428:   b9000022    str w2, [x1]
   ae42c:   97ffe051    bl  a6570 <CTimer::SimpleusDelay(unsigned int)>
   ae430:   b9400264    ldr w4, [x19]
   ae434:   d28ffe02    mov x2, #0x7ff0
   ae438:   f2bfc002    movk    x2, #0xfe00, lsl #16
   ae43c:   52800021    mov w1, #0x1
   ae440:   b9400043    ldr w3, [x2]
   ae444:   f9400e60    ldr x0, [x19, #24]
   ae448:   1ac42021    lsl w1, w1, w4
   ae44c:   0a210061    bic w1, w3, w1
   ae450:   b9000041    str w1, [x2]
   ae454:   f900167f    str xzr, [x19, #40]
   ae458:   b4000120    cbz x0, ae47c <CDMA4Channel::~CDMA4Channel()+0x8c>
   ae45c:   39408261    ldrb    w1, [x19, #32]
   ae460:   360000c1    tbz w1, #0, ae478 <CDMA4Channel::~CDMA4Channel()+0x88>
   ae464:   b9400261    ldr w1, [x19]
   ae468:   7100283f    cmp w1, #0xa
   ae46c:   540002e9    b.ls    ae4c8 <CDMA4Channel::~CDMA4Channel()+0xd8>
   ae470:   1101b821    add w1, w1, #0x6e
   ae474:   97ffef9b    bl  aa2e0 <CInterruptSystem::DisconnectIRQ(unsigned int)>
   ae478:   f9000e7f    str xzr, [x19, #24]
   ae47c:   f9400660    ldr x0, [x19, #8]
   ae480:   f9000a7f    str xzr, [x19, #16]
   ae484:   b4000080    cbz x0, ae494 <CDMA4Channel::~CDMA4Channel()+0xa4>
   ae488:   f9400bf3    ldr x19, [sp, #16]
   ae48c:   a8c27bfd    ldp x29, x30, [sp], #32
   ae490:   17ffe4e8    b   a7830 <operator delete[](void*)>
   ae494:   f9400bf3    ldr x19, [sp, #16]
   ae498:   a8c27bfd    ldp x29, x30, [sp], #32
   ae49c:   d65f03c0    ret
   ae4a0:   90000061    adrp    x1, ba000 <font_data+0x1080>
   ae4a4:   91060021    add x1, x1, #0x180
   ae4a8:   91004020    add x0, x1, #0x10
   ae4ac:   52801102    mov w2, #0x88
   ae4b0:   97ffb984    bl  9cac0 <assertion_failed>
   ae4b4:   90000061    adrp    x1, ba000 <font_data+0x1080>
   ae4b8:   91060021    add x1, x1, #0x180
   ae4bc:   9100c020    add x0, x1, #0x30
   ae4c0:   52801122    mov w2, #0x89
   ae4c4:   97ffb97f    bl  9cac0 <assertion_failed>
   ae4c8:   90000061    adrp    x1, ba000 <font_data+0x1080>
   ae4cc:   91060021    add x1, x1, #0x180
   ae4d0:   91030020    add x0, x1, #0xc0
   ae4d4:   528012c2    mov w2, #0x96
   ae4d8:   97ffb97a    bl  9cac0 <assertion_failed>
   ae4dc:   d503201f    nop

00000000000ae4e0 <CDMA4Channel::SetupMemCopy(void*, void const*, unsigned long, unsigned int, bool)>:
   ae4e0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   ae4e4:   910003fd    mov x29, sp
   ae4e8:   a90153f3    stp x19, x20, [sp, #16]
   ae4ec:   b40009e1    cbz x1, ae628 <CDMA4Channel::SetupMemCopy(void*, void const*, unsigned long, unsigned int, bool)+0x148>
   ae4f0:   b4000a62    cbz x2, ae63c <CDMA4Channel::SetupMemCopy(void*, void const*, unsigned long, unsigned int, bool)+0x15c>
   ae4f4:   aa0303f3    mov x19, x3
   ae4f8:   b4000ac3    cbz x3, ae650 <CDMA4Channel::SetupMemCopy(void*, void const*, unsigned long, unsigned int, bool)+0x170>
   ae4fc:   71003c9f    cmp w4, #0xf
   ae500:   54000b28    b.hi    ae664 <CDMA4Channel::SetupMemCopy(void*, void const*, unsigned long, unsigned int, bool)+0x184>
   ae504:   f9400806    ldr x6, [x0, #16]
   ae508:   aa0003e7    mov x7, x0
   ae50c:   b4000b66    cbz x6, ae678 <CDMA4Channel::SetupMemCopy(void*, void const*, unsigned long, unsigned int, bool)+0x198>
   ae510:   b24077e0    mov x0, #0x3fffffff
   ae514:   eb00007f    cmp x3, x0
   ae518:   54000ba8    b.hi    ae68c <CDMA4Channel::SetupMemCopy(void*, void const*, unsigned long, unsigned int, bool)+0x1ac>
   ae51c:   53185c84    lsl w4, w4, #8
   ae520:   d3609c48    ubfx    x8, x2, #32, #8
   ae524:   390000df    strb    wzr, [x6]
   ae528:   aa0103f4    mov x20, x1
   ae52c:   2a040108    orr w8, w8, w4
   ae530:   390004df    strb    wzr, [x6, #1]
   ae534:   d3609c23    ubfx    x3, x1, #32, #8
   ae538:   528a0001    mov w1, #0x5000
   ae53c:   390008df    strb    wzr, [x6, #2]
   ae540:   2a010100    orr w0, w8, w1
   ae544:   2a040063    orr w3, w3, w4
   ae548:   390020c8    strb    w8, [x6, #8]
   ae54c:   d3483c04    ubfx    x4, x0, #8, #8
   ae550:   d3505c09    ubfx    x9, x0, #16, #8
   ae554:   39000cdf    strb    wzr, [x6, #3]
   ae558:   53187c00    lsr w0, w0, #24
   ae55c:   2a010061    orr w1, w3, w1
   ae560:   390010c2    strb    w2, [x6, #4]
   ae564:   390024c4    strb    w4, [x6, #9]
   ae568:   53083c44    ubfx    w4, w2, #8, #8
   ae56c:   d3483c2f    ubfx    x15, x1, #8, #8
   ae570:   d3505c2e    ubfx    x14, x1, #16, #8
   ae574:   53105c4d    ubfx    w13, w2, #16, #8
   ae578:   390028c9    strb    w9, [x6, #10]
   ae57c:   53187c21    lsr w1, w1, #24
   ae580:   53187c4c    lsr w12, w2, #24
   ae584:   390014c4    strb    w4, [x6, #5]
   ae588:   53083e8b    ubfx    w11, w20, #8, #8
   ae58c:   53105e8a    ubfx    w10, w20, #16, #8
   ae590:   39002cc0    strb    w0, [x6, #11]
   ae594:   53187e89    lsr w9, w20, #24
   ae598:   53083e68    ubfx    w8, w19, #8, #8
   ae59c:   390018cd    strb    w13, [x6, #6]
   ae5a0:   53105e64    ubfx    w4, w19, #16, #8
   ae5a4:   53187e60    lsr w0, w19, #24
   ae5a8:   39001ccc    strb    w12, [x6, #7]
   ae5ac:   12001ca5    and w5, w5, #0xff
   ae5b0:   390030d4    strb    w20, [x6, #12]
   ae5b4:   390034cb    strb    w11, [x6, #13]
   ae5b8:   390038ca    strb    w10, [x6, #14]
   ae5bc:   39003cc9    strb    w9, [x6, #15]
   ae5c0:   390040c3    strb    w3, [x6, #16]
   ae5c4:   390044cf    strb    w15, [x6, #17]
   ae5c8:   390048ce    strb    w14, [x6, #18]
   ae5cc:   39004cc1    strb    w1, [x6, #19]
   ae5d0:   390050d3    strb    w19, [x6, #20]
   ae5d4:   390054c8    strb    w8, [x6, #21]
   ae5d8:   390058c4    strb    w4, [x6, #22]
   ae5dc:   39005cc0    strb    w0, [x6, #23]
   ae5e0:   390060df    strb    wzr, [x6, #24]
   ae5e4:   390064df    strb    wzr, [x6, #25]
   ae5e8:   390068df    strb    wzr, [x6, #26]
   ae5ec:   39006cdf    strb    wzr, [x6, #27]
   ae5f0:   370000a5    tbnz    w5, #0, ae604 <CDMA4Channel::SetupMemCopy(void*, void const*, unsigned long, unsigned int, bool)+0x124>
   ae5f4:   a94153f3    ldp x19, x20, [sp, #16]
   ae5f8:   f90020ff    str xzr, [x7, #64]
   ae5fc:   a8c27bfd    ldp x29, x30, [sp], #32
   ae600:   d65f03c0    ret
   ae604:   aa0203e0    mov x0, x2
   ae608:   aa1303e1    mov x1, x19
   ae60c:   a9044cf4    stp x20, x19, [x7, #64]
   ae610:   97ffe92c    bl  a8ac0 <CleanAndInvalidateDataCacheRange>
   ae614:   aa1303e1    mov x1, x19
   ae618:   aa1403e0    mov x0, x20
   ae61c:   a94153f3    ldp x19, x20, [sp, #16]
   ae620:   a8c27bfd    ldp x29, x30, [sp], #32
   ae624:   17ffe927    b   a8ac0 <CleanAndInvalidateDataCacheRange>
   ae628:   90000061    adrp    x1, ba000 <font_data+0x1080>
   ae62c:   91060021    add x1, x1, #0x180
   ae630:   91036020    add x0, x1, #0xd8
   ae634:   528014c2    mov w2, #0xa6
   ae638:   97ffb922    bl  9cac0 <assertion_failed>
   ae63c:   90000061    adrp    x1, ba000 <font_data+0x1080>
   ae640:   91060021    add x1, x1, #0x180
   ae644:   9103c020    add x0, x1, #0xf0
   ae648:   528014e2    mov w2, #0xa7
   ae64c:   97ffb91d    bl  9cac0 <assertion_failed>
   ae650:   90000061    adrp    x1, ba000 <font_data+0x1080>
   ae654:   91060021    add x1, x1, #0x180
   ae658:   91040020    add x0, x1, #0x100
   ae65c:   52801502    mov w2, #0xa8
   ae660:   97ffb918    bl  9cac0 <assertion_failed>
   ae664:   90000061    adrp    x1, ba000 <font_data+0x1080>
   ae668:   91060021    add x1, x1, #0x180
   ae66c:   91044020    add x0, x1, #0x110
   ae670:   52801522    mov w2, #0xa9
   ae674:   97ffb913    bl  9cac0 <assertion_failed>
   ae678:   90000061    adrp    x1, ba000 <font_data+0x1080>
   ae67c:   91060021    add x1, x1, #0x180
   ae680:   9104c020    add x0, x1, #0x130
   ae684:   52801562    mov w2, #0xab
   ae688:   97ffb90e    bl  9cac0 <assertion_failed>
   ae68c:   90000061    adrp    x1, ba000 <font_data+0x1080>
   ae690:   91060021    add x1, x1, #0x180
   ae694:   91052020    add x0, x1, #0x148
   ae698:   52801582    mov w2, #0xac
   ae69c:   97ffb909    bl  9cac0 <assertion_failed>

00000000000ae6a0 <CDMA4Channel::SetupIORead(void*, unsigned int, unsigned long, TDREQ)>:
   ae6a0:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   ae6a4:   910003fd    mov x29, sp
   ae6a8:   b40007e1    cbz x1, ae7a4 <CDMA4Channel::SetupIORead(void*, unsigned int, unsigned long, TDREQ)+0x104>
   ae6ac:   b4000863    cbz x3, ae7b8 <CDMA4Channel::SetupIORead(void*, unsigned int, unsigned long, TDREQ)+0x118>
   ae6b0:   aa0003e7    mov x7, x0
   ae6b4:   b24077e0    mov x0, #0x3fffffff
   ae6b8:   eb00007f    cmp x3, x0
   ae6bc:   54000888    b.hi    ae7cc <CDMA4Channel::SetupIORead(void*, unsigned int, unsigned long, TDREQ)+0x12c>
   ae6c0:   72005c42    ands    w2, w2, #0xffffff
   ae6c4:   540008e0    b.eq    ae7e0 <CDMA4Channel::SetupIORead(void*, unsigned int, unsigned long, TDREQ)+0x140>
   ae6c8:   f94008e5    ldr x5, [x7, #16]
   ae6cc:   52afc000    mov w0, #0x7e000000
   ae6d0:   0b000042    add w2, w2, w0
   ae6d4:   b4000905    cbz x5, ae7f4 <CDMA4Channel::SetupIORead(void*, unsigned int, unsigned long, TDREQ)+0x154>
   ae6d8:   52880180    mov w0, #0x400c
   ae6dc:   d3483c49    ubfx    x9, x2, #8, #8
   ae6e0:   390010a2    strb    w2, [x5, #4]
   ae6e4:   2a042404    orr w4, w0, w4, lsl #9
   ae6e8:   d3505c48    ubfx    x8, x2, #16, #8
   ae6ec:   aa0103e6    mov x6, x1
   ae6f0:   53083c2f    ubfx    w15, w1, #8, #8
   ae6f4:   53187c42    lsr w2, w2, #24
   ae6f8:   390000a0    strb    w0, [x5]
   ae6fc:   53087c81    lsr w1, w4, #8
   ae700:   d3505c80    ubfx    x0, x4, #16, #8
   ae704:   390014a9    strb    w9, [x5, #5]
   ae708:   52800090    mov w16, #0x4
   ae70c:   53187c84    lsr w4, w4, #24
   ae710:   390018a8    strb    w8, [x5, #6]
   ae714:   53105cce    ubfx    w14, w6, #16, #8
   ae718:   53187ccd    lsr w13, w6, #24
   ae71c:   390004a1    strb    w1, [x5, #1]
   ae720:   d3609ccc    ubfx    x12, x6, #32, #8
   ae724:   52800a0b    mov w11, #0x50
   ae728:   390008a0    strb    w0, [x5, #2]
   ae72c:   53083c6a    ubfx    w10, w3, #8, #8
   ae730:   53105c69    ubfx    w9, w3, #16, #8
   ae734:   39000ca4    strb    w4, [x5, #3]
   ae738:   53187c68    lsr w8, w3, #24
   ae73c:   39001ca2    strb    w2, [x5, #7]
   ae740:   aa0303e1    mov x1, x3
   ae744:   390020b0    strb    w16, [x5, #8]
   ae748:   aa0603e0    mov x0, x6
   ae74c:   390024bf    strb    wzr, [x5, #9]
   ae750:   390028bf    strb    wzr, [x5, #10]
   ae754:   39002cbf    strb    wzr, [x5, #11]
   ae758:   390030a6    strb    w6, [x5, #12]
   ae75c:   390034af    strb    w15, [x5, #13]
   ae760:   390038ae    strb    w14, [x5, #14]
   ae764:   39003cad    strb    w13, [x5, #15]
   ae768:   390040ac    strb    w12, [x5, #16]
   ae76c:   390044ab    strb    w11, [x5, #17]
   ae770:   390048bf    strb    wzr, [x5, #18]
   ae774:   39004cbf    strb    wzr, [x5, #19]
   ae778:   390050a3    strb    w3, [x5, #20]
   ae77c:   390054aa    strb    w10, [x5, #21]
   ae780:   390058a9    strb    w9, [x5, #22]
   ae784:   39005ca8    strb    w8, [x5, #23]
   ae788:   390060bf    strb    wzr, [x5, #24]
   ae78c:   390064bf    strb    wzr, [x5, #25]
   ae790:   390068bf    strb    wzr, [x5, #26]
   ae794:   39006cbf    strb    wzr, [x5, #27]
   ae798:   a9040ce6    stp x6, x3, [x7, #64]
   ae79c:   a8c17bfd    ldp x29, x30, [sp], #16
   ae7a0:   17ffe8c8    b   a8ac0 <CleanAndInvalidateDataCacheRange>
   ae7a4:   90000061    adrp    x1, ba000 <font_data+0x1080>
   ae7a8:   91060021    add x1, x1, #0x180
   ae7ac:   91036020    add x0, x1, #0xd8
   ae7b0:   528019c2    mov w2, #0xce
   ae7b4:   97ffb8c3    bl  9cac0 <assertion_failed>
   ae7b8:   90000061    adrp    x1, ba000 <font_data+0x1080>
   ae7bc:   91060021    add x1, x1, #0x180
   ae7c0:   91040020    add x0, x1, #0x100
   ae7c4:   528019e2    mov w2, #0xcf
   ae7c8:   97ffb8be    bl  9cac0 <assertion_failed>
   ae7cc:   90000061    adrp    x1, ba000 <font_data+0x1080>
   ae7d0:   91060021    add x1, x1, #0x180
   ae7d4:   91052020    add x0, x1, #0x148
   ae7d8:   52801a02    mov w2, #0xd0
   ae7dc:   97ffb8b9    bl  9cac0 <assertion_failed>
   ae7e0:   90000061    adrp    x1, ba000 <font_data+0x1080>
   ae7e4:   91060021    add x1, x1, #0x180
   ae7e8:   9105a020    add x0, x1, #0x168
   ae7ec:   52801a62    mov w2, #0xd3
   ae7f0:   97ffb8b4    bl  9cac0 <assertion_failed>
   ae7f4:   90000061    adrp    x1, ba000 <font_data+0x1080>
   ae7f8:   91060021    add x1, x1, #0x180
   ae7fc:   9104c020    add x0, x1, #0x130
   ae800:   52801ac2    mov w2, #0xd6
   ae804:   97ffb8af    bl  9cac0 <assertion_failed>
   ae808:   d503201f    nop
   ae80c:   d503201f    nop

00000000000ae810 <CDMA4Channel::SetupIOWrite(unsigned int, void const*, unsigned long, TDREQ)>:
   ae810:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   ae814:   910003fd    mov x29, sp
   ae818:   b40007e2    cbz x2, ae914 <CDMA4Channel::SetupIOWrite(unsigned int, void const*, unsigned long, TDREQ)+0x104>
   ae81c:   2a0103e6    mov w6, w1
   ae820:   aa0303e1    mov x1, x3
   ae824:   b4000823    cbz x3, ae928 <CDMA4Channel::SetupIOWrite(unsigned int, void const*, unsigned long, TDREQ)+0x118>
   ae828:   aa0003e7    mov x7, x0
   ae82c:   b24077e0    mov x0, #0x3fffffff
   ae830:   eb00007f    cmp x3, x0
   ae834:   54000848    b.hi    ae93c <CDMA4Channel::SetupIOWrite(unsigned int, void const*, unsigned long, TDREQ)+0x12c>
   ae838:   72005cc6    ands    w6, w6, #0xffffff
   ae83c:   540008a0    b.eq    ae950 <CDMA4Channel::SetupIOWrite(unsigned int, void const*, unsigned long, TDREQ)+0x140>
   ae840:   f94008e5    ldr x5, [x7, #16]
   ae844:   52afc000    mov w0, #0x7e000000
   ae848:   0b0000c6    add w6, w6, w0
   ae84c:   b40008c5    cbz x5, ae964 <CDMA4Channel::SetupIOWrite(unsigned int, void const*, unsigned long, TDREQ)+0x154>
   ae850:   52900180    mov w0, #0x800c
   ae854:   53083c49    ubfx    w9, w2, #8, #8
   ae858:   390010a2    strb    w2, [x5, #4]
   ae85c:   2a042404    orr w4, w0, w4, lsl #9
   ae860:   53105c48    ubfx    w8, w2, #16, #8
   ae864:   53187c50    lsr w16, w2, #24
   ae868:   d3609c4f    ubfx    x15, x2, #32, #8
   ae86c:   52800a0e    mov w14, #0x50
   ae870:   390000a0    strb    w0, [x5]
   ae874:   53087c83    lsr w3, w4, #8
   ae878:   d3505c80    ubfx    x0, x4, #16, #8
   ae87c:   390014a9    strb    w9, [x5, #5]
   ae880:   53187c84    lsr w4, w4, #24
   ae884:   d3483ccd    ubfx    x13, x6, #8, #8
   ae888:   390018a8    strb    w8, [x5, #6]
   ae88c:   d3505ccc    ubfx    x12, x6, #16, #8
   ae890:   53187ccb    lsr w11, w6, #24
   ae894:   390004a3    strb    w3, [x5, #1]
   ae898:   5280008a    mov w10, #0x4
   ae89c:   53083c29    ubfx    w9, w1, #8, #8
   ae8a0:   390008a0    strb    w0, [x5, #2]
   ae8a4:   53105c28    ubfx    w8, w1, #16, #8
   ae8a8:   53187c23    lsr w3, w1, #24
   ae8ac:   39000ca4    strb    w4, [x5, #3]
   ae8b0:   39001cb0    strb    w16, [x5, #7]
   ae8b4:   aa0203e0    mov x0, x2
   ae8b8:   390020af    strb    w15, [x5, #8]
   ae8bc:   390024ae    strb    w14, [x5, #9]
   ae8c0:   390028bf    strb    wzr, [x5, #10]
   ae8c4:   39002cbf    strb    wzr, [x5, #11]
   ae8c8:   390030a6    strb    w6, [x5, #12]
   ae8cc:   390034ad    strb    w13, [x5, #13]
   ae8d0:   390038ac    strb    w12, [x5, #14]
   ae8d4:   39003cab    strb    w11, [x5, #15]
   ae8d8:   390040aa    strb    w10, [x5, #16]
   ae8dc:   390044bf    strb    wzr, [x5, #17]
   ae8e0:   390048bf    strb    wzr, [x5, #18]
   ae8e4:   39004cbf    strb    wzr, [x5, #19]
   ae8e8:   390050a1    strb    w1, [x5, #20]
   ae8ec:   390054a9    strb    w9, [x5, #21]
   ae8f0:   390058a8    strb    w8, [x5, #22]
   ae8f4:   39005ca3    strb    w3, [x5, #23]
   ae8f8:   390060bf    strb    wzr, [x5, #24]
   ae8fc:   390064bf    strb    wzr, [x5, #25]
   ae900:   390068bf    strb    wzr, [x5, #26]
   ae904:   39006cbf    strb    wzr, [x5, #27]
   ae908:   f90020ff    str xzr, [x7, #64]
   ae90c:   a8c17bfd    ldp x29, x30, [sp], #16
   ae910:   17ffe86c    b   a8ac0 <CleanAndInvalidateDataCacheRange>
   ae914:   90000061    adrp    x1, ba000 <font_data+0x1080>
   ae918:   91060021    add x1, x1, #0x180
   ae91c:   9103c020    add x0, x1, #0xf0
   ae920:   52801e02    mov w2, #0xf0
   ae924:   97ffb867    bl  9cac0 <assertion_failed>
   ae928:   90000061    adrp    x1, ba000 <font_data+0x1080>
   ae92c:   91060021    add x1, x1, #0x180
   ae930:   91040020    add x0, x1, #0x100
   ae934:   52801e22    mov w2, #0xf1
   ae938:   97ffb862    bl  9cac0 <assertion_failed>
   ae93c:   90000061    adrp    x1, ba000 <font_data+0x1080>
   ae940:   91060021    add x1, x1, #0x180
   ae944:   91052020    add x0, x1, #0x148
   ae948:   52801e42    mov w2, #0xf2
   ae94c:   97ffb85d    bl  9cac0 <assertion_failed>
   ae950:   90000061    adrp    x1, ba000 <font_data+0x1080>
   ae954:   91060021    add x1, x1, #0x180
   ae958:   9105a020    add x0, x1, #0x168
   ae95c:   52801ea2    mov w2, #0xf5
   ae960:   97ffb858    bl  9cac0 <assertion_failed>
   ae964:   90000061    adrp    x1, ba000 <font_data+0x1080>
   ae968:   91060021    add x1, x1, #0x180
   ae96c:   9104c020    add x0, x1, #0x130
   ae970:   52801f02    mov w2, #0xf8
   ae974:   97ffb853    bl  9cac0 <assertion_failed>
   ae978:   d503201f    nop
   ae97c:   d503201f    nop

00000000000ae980 <CDMA4Channel::SetupMemCopy2D(void*, void const*, unsigned long, unsigned int, unsigned long, unsigned int)>:
   ae980:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   ae984:   910003fd    mov x29, sp
   ae988:   b4000a61    cbz x1, aead4 <CDMA4Channel::SetupMemCopy2D(void*, void const*, unsigned long, unsigned int, unsigned long, unsigned int)+0x154>
   ae98c:   aa0003e9    mov x9, x0
   ae990:   aa0203e0    mov x0, x2
   ae994:   b4000aa2    cbz x2, aeae8 <CDMA4Channel::SetupMemCopy2D(void*, void const*, unsigned long, unsigned int, unsigned long, unsigned int)+0x168>
   ae998:   b4000b23    cbz x3, aeafc <CDMA4Channel::SetupMemCopy2D(void*, void const*, unsigned long, unsigned int, unsigned long, unsigned int)+0x17c>
   ae99c:   d29fffe2    mov x2, #0xffff
   ae9a0:   eb02007f    cmp x3, x2
   ae9a4:   54000b68    b.hi    aeb10 <CDMA4Channel::SetupMemCopy2D(void*, void const*, unsigned long, unsigned int, unsigned long, unsigned int)+0x190>
   ae9a8:   34000be4    cbz w4, aeb24 <CDMA4Channel::SetupMemCopy2D(void*, void const*, unsigned long, unsigned int, unsigned long, unsigned int)+0x1a4>
   ae9ac:   5287ffe7    mov w7, #0x3fff
   ae9b0:   6b07009f    cmp w4, w7
   ae9b4:   54000c28    b.hi    aeb38 <CDMA4Channel::SetupMemCopy2D(void*, void const*, unsigned long, unsigned int, unsigned long, unsigned int)+0x1b8>
   ae9b8:   eb0200bf    cmp x5, x2
   ae9bc:   54000828    b.hi    aeac0 <CDMA4Channel::SetupMemCopy2D(void*, void const*, unsigned long, unsigned int, unsigned long, unsigned int)+0x140>
   ae9c0:   71003cdf    cmp w6, #0xf
   ae9c4:   54000c48    b.hi    aeb4c <CDMA4Channel::SetupMemCopy2D(void*, void const*, unsigned long, unsigned int, unsigned long, unsigned int)+0x1cc>
   ae9c8:   f9400927    ldr x7, [x9, #16]
   ae9cc:   b4000ca7    cbz x7, aeb60 <CDMA4Channel::SetupMemCopy2D(void*, void const*, unsigned long, unsigned int, unsigned long, unsigned int)+0x1e0>
   ae9d0:   53185cc6    lsl w6, w6, #8
   ae9d4:   d3609c0b    ubfx    x11, x0, #32, #8
   ae9d8:   390030e1    strb    w1, [x7, #12]
   ae9dc:   2a06016b    orr w11, w11, w6
   ae9e0:   528a0002    mov w2, #0x5000
   ae9e4:   390004ff    strb    wzr, [x7, #1]
   ae9e8:   51000488    sub w8, w4, #0x1
   ae9ec:   2a054045    orr w5, w2, w5, lsl #16
   ae9f0:   d3609c2a    ubfx    x10, x1, #32, #8
   ae9f4:   2a020162    orr w2, w11, w2
   ae9f8:   2a06014a    orr w10, w10, w6
   ae9fc:   2a084066    orr w6, w3, w8, lsl #16
   aea00:   d3505c4e    ubfx    x14, x2, #16, #8
   aea04:   d3483c48    ubfx    x8, x2, #8, #8
   aea08:   390020eb    strb    w11, [x7, #8]
   aea0c:   53187c42    lsr w2, w2, #24
   aea10:   2a050145    orr w5, w10, w5
   aea14:   390008ff    strb    wzr, [x7, #2]
   aea18:   d3483cad    ubfx    x13, x5, #8, #8
   aea1c:   d3505cac    ubfx    x12, x5, #16, #8
   aea20:   390024e8    strb    w8, [x7, #9]
   aea24:   53083c2f    ubfx    w15, w1, #8, #8
   aea28:   d3505cc8    ubfx    x8, x6, #16, #8
   aea2c:   390028ee    strb    w14, [x7, #10]
   aea30:   53187ca5    lsr w5, w5, #24
   aea34:   53105c2e    ubfx    w14, w1, #16, #8
   aea38:   39002ce2    strb    w2, [x7, #11]
   aea3c:   53083c6b    ubfx    w11, w3, #8, #8
   aea40:   53187c22    lsr w2, w1, #24
   aea44:   39000cff    strb    wzr, [x7, #3]
   aea48:   53187cc6    lsr w6, w6, #24
   aea4c:   528001de    mov w30, #0xe
   aea50:   390010e0    strb    w0, [x7, #4]
   aea54:   53083c12    ubfx    w18, w0, #8, #8
   aea58:   53105c11    ubfx    w17, w0, #16, #8
   aea5c:   390034ef    strb    w15, [x7, #13]
   aea60:   53187c10    lsr w16, w0, #24
   aea64:   2a0403e1    mov w1, w4
   aea68:   390000fe    strb    w30, [x7]
   aea6c:   390014f2    strb    w18, [x7, #5]
   aea70:   390018f1    strb    w17, [x7, #6]
   aea74:   9b037c21    mul x1, x1, x3
   aea78:   39001cf0    strb    w16, [x7, #7]
   aea7c:   390038ee    strb    w14, [x7, #14]
   aea80:   39003ce2    strb    w2, [x7, #15]
   aea84:   390040ea    strb    w10, [x7, #16]
   aea88:   390044ed    strb    w13, [x7, #17]
   aea8c:   390048ec    strb    w12, [x7, #18]
   aea90:   39004ce5    strb    w5, [x7, #19]
   aea94:   390050e3    strb    w3, [x7, #20]
   aea98:   390054eb    strb    w11, [x7, #21]
   aea9c:   390058e8    strb    w8, [x7, #22]
   aeaa0:   39005ce6    strb    w6, [x7, #23]
   aeaa4:   390060ff    strb    wzr, [x7, #24]
   aeaa8:   390064ff    strb    wzr, [x7, #25]
   aeaac:   390068ff    strb    wzr, [x7, #26]
   aeab0:   39006cff    strb    wzr, [x7, #27]
   aeab4:   f900213f    str xzr, [x9, #64]
   aeab8:   a8c17bfd    ldp x29, x30, [sp], #16
   aeabc:   17ffe801    b   a8ac0 <CleanAndInvalidateDataCacheRange>
   aeac0:   90000061    adrp    x1, ba000 <font_data+0x1080>
   aeac4:   91060021    add x1, x1, #0x180
   aeac8:   9107a020    add x0, x1, #0x1e8
   aeacc:   52802322    mov w2, #0x119
   aead0:   97ffb7fc    bl  9cac0 <assertion_failed>
   aead4:   90000061    adrp    x1, ba000 <font_data+0x1080>
   aead8:   91060021    add x1, x1, #0x180
   aeadc:   91036020    add x0, x1, #0xd8
   aeae0:   52802262    mov w2, #0x113
   aeae4:   97ffb7f7    bl  9cac0 <assertion_failed>
   aeae8:   90000061    adrp    x1, ba000 <font_data+0x1080>
   aeaec:   91060021    add x1, x1, #0x180
   aeaf0:   9103c020    add x0, x1, #0xf0
   aeaf4:   52802282    mov w2, #0x114
   aeaf8:   97ffb7f2    bl  9cac0 <assertion_failed>
   aeafc:   90000061    adrp    x1, ba000 <font_data+0x1080>
   aeb00:   91060021    add x1, x1, #0x180
   aeb04:   9105e020    add x0, x1, #0x178
   aeb08:   528022a2    mov w2, #0x115
   aeb0c:   97ffb7ed    bl  9cac0 <assertion_failed>
   aeb10:   90000061    adrp    x1, ba000 <font_data+0x1080>
   aeb14:   91060021    add x1, x1, #0x180
   aeb18:   91064020    add x0, x1, #0x190
   aeb1c:   528022c2    mov w2, #0x116
   aeb20:   97ffb7e8    bl  9cac0 <assertion_failed>
   aeb24:   90000061    adrp    x1, ba000 <font_data+0x1080>
   aeb28:   91060021    add x1, x1, #0x180
   aeb2c:   9106e020    add x0, x1, #0x1b8
   aeb30:   528022e2    mov w2, #0x117
   aeb34:   97ffb7e3    bl  9cac0 <assertion_failed>
   aeb38:   90000061    adrp    x1, ba000 <font_data+0x1080>
   aeb3c:   91060021    add x1, x1, #0x180
   aeb40:   91072020    add x0, x1, #0x1c8
   aeb44:   52802302    mov w2, #0x118
   aeb48:   97ffb7de    bl  9cac0 <assertion_failed>
   aeb4c:   90000061    adrp    x1, ba000 <font_data+0x1080>
   aeb50:   91060021    add x1, x1, #0x180
   aeb54:   91044020    add x0, x1, #0x110
   aeb58:   52802342    mov w2, #0x11a
   aeb5c:   97ffb7d9    bl  9cac0 <assertion_failed>
   aeb60:   90000061    adrp    x1, ba000 <font_data+0x1080>
   aeb64:   91060021    add x1, x1, #0x180
   aeb68:   9104c020    add x0, x1, #0x130
   aeb6c:   52802382    mov w2, #0x11c
   aeb70:   97ffb7d4    bl  9cac0 <assertion_failed>
   aeb74:   d503201f    nop
   aeb78:   d503201f    nop
   aeb7c:   d503201f    nop

00000000000aeb80 <CDMA4Channel::SetCompletionRoutine(void (*)(unsigned int, bool, void*), void*)>:
   aeb80:   a9bd7bfd    stp x29, x30, [sp, #-48]!
   aeb84:   910003fd    mov x29, sp
   aeb88:   b9400003    ldr w3, [x0]
   aeb8c:   a90153f3    stp x19, x20, [sp, #16]
   aeb90:   f90013f5    str x21, [sp, #32]
   aeb94:   7100287f    cmp w3, #0xa
   aeb98:   54000329    b.ls    aebfc <CDMA4Channel::SetCompletionRoutine(void (*)(unsigned int, bool, void*), void*)+0x7c>
   aeb9c:   7100387f    cmp w3, #0xe
   aeba0:   54000388    b.hi    aec10 <CDMA4Channel::SetCompletionRoutine(void (*)(unsigned int, bool, void*), void*)+0x90>
   aeba4:   aa0003f3    mov x19, x0
   aeba8:   f9400c00    ldr x0, [x0, #24]
   aebac:   b40003c0    cbz x0, aec24 <CDMA4Channel::SetCompletionRoutine(void (*)(unsigned int, bool, void*), void*)+0xa4>
   aebb0:   aa0103f4    mov x20, x1
   aebb4:   39408261    ldrb    w1, [x19, #32]
   aebb8:   aa0203f5    mov x21, x2
   aebbc:   36000101    tbz w1, #0, aebdc <CDMA4Channel::SetCompletionRoutine(void (*)(unsigned int, bool, void*), void*)+0x5c>
   aebc0:   f9001674    str x20, [x19, #40]
   aebc4:   b40003b4    cbz x20, aec38 <CDMA4Channel::SetCompletionRoutine(void (*)(unsigned int, bool, void*), void*)+0xb8>
   aebc8:   f9001a75    str x21, [x19, #48]
   aebcc:   a94153f3    ldp x19, x20, [sp, #16]
   aebd0:   f94013f5    ldr x21, [sp, #32]
   aebd4:   a8c37bfd    ldp x29, x30, [sp], #48
   aebd8:   d65f03c0    ret
   aebdc:   b0000002    adrp    x2, af000 <CDMA4Channel::InterruptHandler()+0xf0>
   aebe0:   1101b861    add w1, w3, #0x6e
   aebe4:   91010042    add x2, x2, #0x40
   aebe8:   aa1303e3    mov x3, x19
   aebec:   97ffed9d    bl  aa260 <CInterruptSystem::ConnectIRQ(unsigned int, void (*)(void*), void*)>
   aebf0:   52800020    mov w0, #0x1
   aebf4:   39008260    strb    w0, [x19, #32]
   aebf8:   17fffff2    b   aebc0 <CDMA4Channel::SetCompletionRoutine(void (*)(unsigned int, bool, void*), void*)+0x40>
   aebfc:   90000061    adrp    x1, ba000 <font_data+0x1080>
   aec00:   91060021    add x1, x1, #0x180
   aec04:   91004020    add x0, x1, #0x10
   aec08:   52802722    mov w2, #0x139
   aec0c:   97ffb7ad    bl  9cac0 <assertion_failed>
   aec10:   90000061    adrp    x1, ba000 <font_data+0x1080>
   aec14:   91060021    add x1, x1, #0x180
   aec18:   9100c020    add x0, x1, #0x30
   aec1c:   52802742    mov w2, #0x13a
   aec20:   97ffb7a8    bl  9cac0 <assertion_failed>
   aec24:   90000061    adrp    x1, ba000 <font_data+0x1080>
   aec28:   91060021    add x1, x1, #0x180
   aec2c:   91084020    add x0, x1, #0x210
   aec30:   52802762    mov w2, #0x13b
   aec34:   97ffb7a3    bl  9cac0 <assertion_failed>
   aec38:   90000061    adrp    x1, ba000 <font_data+0x1080>
   aec3c:   91060021    add x1, x1, #0x180
   aec40:   9108a020    add x0, x1, #0x228
   aec44:   528028c2    mov w2, #0x146
   aec48:   97ffb79e    bl  9cac0 <assertion_failed>
   aec4c:   d503201f    nop

00000000000aec50 <CDMA4Channel::Start()>:
   aec50:   a9be7bfd    stp x29, x30, [sp, #-32]!
   aec54:   910003fd    mov x29, sp
   aec58:   b9400002    ldr w2, [x0]
   aec5c:   a90153f3    stp x19, x20, [sp, #16]
   aec60:   7100285f    cmp w2, #0xa
   aec64:   54000789    b.ls    aed54 <CDMA4Channel::Start()+0x104>
   aec68:   7100385f    cmp w2, #0xe
   aec6c:   540007e8    b.hi    aed68 <CDMA4Channel::Start()+0x118>
   aec70:   aa0003f3    mov x19, x0
   aec74:   f9400800    ldr x0, [x0, #16]
   aec78:   b4000820    cbz x0, aed7c <CDMA4Channel::Start()+0x12c>
   aec7c:   f9401661    ldr x1, [x19, #40]
   aec80:   b4000281    cbz x1, aecd0 <CDMA4Channel::Start()+0x80>
   aec84:   f9400e61    ldr x1, [x19, #24]
   aec88:   b40005c1    cbz x1, aed40 <CDMA4Channel::Start()+0xf0>
   aec8c:   39408261    ldrb    w1, [x19, #32]
   aec90:   36000941    tbz w1, #0, aedb8 <CDMA4Channel::Start()+0x168>
   aec94:   39400005    ldrb    w5, [x0]
   aec98:   39400404    ldrb    w4, [x0, #1]
   aec9c:   39400803    ldrb    w3, [x0, #2]
   aeca0:   39400c01    ldrb    w1, [x0, #3]
   aeca4:   aa0420a4    orr x4, x5, x4, lsl #8
   aeca8:   aa034083    orr x3, x4, x3, lsl #16
   aecac:   aa016061    orr x1, x3, x1, lsl #24
   aecb0:   32000025    orr w5, w1, #0x1
   aecb4:   53083c24    ubfx    w4, w1, #8, #8
   aecb8:   53105c23    ubfx    w3, w1, #16, #8
   aecbc:   d358dc21    ubfx    x1, x1, #24, #32
   aecc0:   39000005    strb    w5, [x0]
   aecc4:   39000404    strb    w4, [x0, #1]
   aecc8:   39000803    strb    w3, [x0, #2]
   aeccc:   39000c01    strb    w1, [x0, #3]
   aecd0:   52800e14    mov w20, #0x70
   aecd4:   72a01fd4    movk    w20, #0xfe, lsl #16
   aecd8:   0b140041    add w1, w2, w20
   aecdc:   53185c23    lsl w3, w1, #8
   aece0:   53185c21    lsl w1, w1, #8
   aece4:   b9400063    ldr w3, [x3]
   aece8:   37100543    tbnz    w3, #2, aed90 <CDMA4Channel::Start()+0x140>
   aecec:   d28ffc04    mov x4, #0x7fe0
   aecf0:   f2bfc004    movk    x4, #0xfe00, lsl #16
   aecf4:   b9400084    ldr w4, [x4]
   aecf8:   52800023    mov w3, #0x1
   aecfc:   1ac22062    lsl w2, w3, w2
   aed00:   6a04005f    tst w2, w4
   aed04:   54000501    b.ne    aeda4 <CDMA4Channel::Start()+0x154>
   aed08:   11001022    add w2, w1, #0x4
   aed0c:   d345fc03    lsr x3, x0, #5
   aed10:   d2800401    mov x1, #0x20
   aed14:   b9000043    str w3, [x2]
   aed18:   97ffe76a    bl  a8ac0 <CleanAndInvalidateDataCacheRange>
   aed1c:   b9400260    ldr w0, [x19]
   aed20:   52800021    mov w1, #0x1
   aed24:   72a21e21    movk    w1, #0x10f1, lsl #16
   aed28:   0b140000    add w0, w0, w20
   aed2c:   a94153f3    ldp x19, x20, [sp, #16]
   aed30:   53185c00    lsl w0, w0, #8
   aed34:   b9000001    str w1, [x0]
   aed38:   a8c27bfd    ldp x29, x30, [sp], #32
   aed3c:   d65f03c0    ret
   aed40:   90000061    adrp    x1, ba000 <font_data+0x1080>
   aed44:   91060021    add x1, x1, #0x180
   aed48:   91084020    add x0, x1, #0x210
   aed4c:   52802a62    mov w2, #0x153
   aed50:   97ffb75c    bl  9cac0 <assertion_failed>
   aed54:   90000061    adrp    x1, ba000 <font_data+0x1080>
   aed58:   91060021    add x1, x1, #0x180
   aed5c:   91004020    add x0, x1, #0x10
   aed60:   528029a2    mov w2, #0x14d
   aed64:   97ffb757    bl  9cac0 <assertion_failed>
   aed68:   90000061    adrp    x1, ba000 <font_data+0x1080>
   aed6c:   91060021    add x1, x1, #0x180
   aed70:   9100c020    add x0, x1, #0x30
   aed74:   528029c2    mov w2, #0x14e
   aed78:   97ffb752    bl  9cac0 <assertion_failed>
   aed7c:   90000061    adrp    x1, ba000 <font_data+0x1080>
   aed80:   91060021    add x1, x1, #0x180
   aed84:   9104c020    add x0, x1, #0x130
   aed88:   528029e2    mov w2, #0x14f
   aed8c:   97ffb74d    bl  9cac0 <assertion_failed>
   aed90:   90000061    adrp    x1, ba000 <font_data+0x1080>
   aed94:   91060021    add x1, x1, #0x180
   aed98:   91096020    add x0, x1, #0x258
   aed9c:   52802b42    mov w2, #0x15a
   aeda0:   97ffb748    bl  9cac0 <assertion_failed>
   aeda4:   90000061    adrp    x1, ba000 <font_data+0x1080>
   aeda8:   91060021    add x1, x1, #0x180
   aedac:   910a4020    add x0, x1, #0x290
   aedb0:   52802b62    mov w2, #0x15b
   aedb4:   97ffb743    bl  9cac0 <assertion_failed>
   aedb8:   90000061    adrp    x1, ba000 <font_data+0x1080>
   aedbc:   91060021    add x1, x1, #0x180
   aedc0:   91092020    add x0, x1, #0x248
   aedc4:   52802a82    mov w2, #0x154
   aedc8:   97ffb73e    bl  9cac0 <assertion_failed>
   aedcc:   d503201f    nop

00000000000aedd0 <CDMA4Channel::Wait()>:
   aedd0:   a9be7bfd    stp x29, x30, [sp, #-32]!
   aedd4:   910003fd    mov x29, sp
   aedd8:   b9400002    ldr w2, [x0]
   aeddc:   f9000bf3    str x19, [sp, #16]
   aede0:   7100285f    cmp w2, #0xa
   aede4:   54000369    b.ls    aee50 <CDMA4Channel::Wait()+0x80>
   aede8:   7100385f    cmp w2, #0xe
   aedec:   540003c8    b.hi    aee64 <CDMA4Channel::Wait()+0x94>
   aedf0:   117f8042    add w2, w2, #0xfe0, lsl #12
   aedf4:   aa0003f3    mov x19, x0
   aedf8:   f9401400    ldr x0, [x0, #40]
   aedfc:   1101c042    add w2, w2, #0x70
   aee00:   53185c42    lsl w2, w2, #8
   aee04:   b50003a0    cbnz    x0, aee78 <CDMA4Channel::Wait()+0xa8>
   aee08:   b9400041    ldr w1, [x2]
   aee0c:   3707ffe1    tbnz    w1, #0, aee08 <CDMA4Channel::Wait()+0x38>
   aee10:   d2760021    eor x1, x1, #0x400
   aee14:   f9402260    ldr x0, [x19, #64]
   aee18:   530a2821    ubfx    w1, w1, #10, #1
   aee1c:   3900e261    strb    w1, [x19, #56]
   aee20:   b50000a0    cbnz    x0, aee34 <CDMA4Channel::Wait()+0x64>
   aee24:   f9400bf3    ldr x19, [sp, #16]
   aee28:   2a0103e0    mov w0, w1
   aee2c:   a8c27bfd    ldp x29, x30, [sp], #32
   aee30:   d65f03c0    ret
   aee34:   f9402661    ldr x1, [x19, #72]
   aee38:   97ffe722    bl  a8ac0 <CleanAndInvalidateDataCacheRange>
   aee3c:   3940e261    ldrb    w1, [x19, #56]
   aee40:   f9400bf3    ldr x19, [sp, #16]
   aee44:   a8c27bfd    ldp x29, x30, [sp], #32
   aee48:   2a0103e0    mov w0, w1
   aee4c:   d65f03c0    ret
   aee50:   90000061    adrp    x1, ba000 <font_data+0x1080>
   aee54:   91060021    add x1, x1, #0x180
   aee58:   91004020    add x0, x1, #0x10
   aee5c:   52802d82    mov w2, #0x16c
   aee60:   97ffb718    bl  9cac0 <assertion_failed>
   aee64:   90000061    adrp    x1, ba000 <font_data+0x1080>
   aee68:   91060021    add x1, x1, #0x180
   aee6c:   9100c020    add x0, x1, #0x30
   aee70:   52802da2    mov w2, #0x16d
   aee74:   97ffb713    bl  9cac0 <assertion_failed>
   aee78:   90000061    adrp    x1, ba000 <font_data+0x1080>
   aee7c:   91060021    add x1, x1, #0x180
   aee80:   910b2020    add x0, x1, #0x2c8
   aee84:   52802dc2    mov w2, #0x16e
   aee88:   97ffb70e    bl  9cac0 <assertion_failed>
   aee8c:   d503201f    nop

00000000000aee90 <CDMA4Channel::GetStatus()>:
   aee90:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   aee94:   910003fd    mov x29, sp
   aee98:   b9400001    ldr w1, [x0]
   aee9c:   7100283f    cmp w1, #0xa
   aeea0:   54000169    b.ls    aeecc <CDMA4Channel::GetStatus()+0x3c>
   aeea4:   7100383f    cmp w1, #0xe
   aeea8:   540001c8    b.hi    aeee0 <CDMA4Channel::GetStatus()+0x50>
   aeeac:   117f8021    add w1, w1, #0xfe0, lsl #12
   aeeb0:   1101c021    add w1, w1, #0x70
   aeeb4:   53185c21    lsl w1, w1, #8
   aeeb8:   b9400021    ldr w1, [x1]
   aeebc:   370001c1    tbnz    w1, #0, aeef4 <CDMA4Channel::GetStatus()+0x64>
   aeec0:   3940e000    ldrb    w0, [x0, #56]
   aeec4:   a8c17bfd    ldp x29, x30, [sp], #16
   aeec8:   d65f03c0    ret
   aeecc:   90000061    adrp    x1, ba000 <font_data+0x1080>
   aeed0:   91060021    add x1, x1, #0x180
   aeed4:   91004020    add x0, x1, #0x10
   aeed8:   528030c2    mov w2, #0x186
   aeedc:   97ffb6f9    bl  9cac0 <assertion_failed>
   aeee0:   90000061    adrp    x1, ba000 <font_data+0x1080>
   aeee4:   91060021    add x1, x1, #0x180
   aeee8:   9100c020    add x0, x1, #0x30
   aeeec:   528030e2    mov w2, #0x187
   aeef0:   97ffb6f4    bl  9cac0 <assertion_failed>
   aeef4:   90000061    adrp    x1, ba000 <font_data+0x1080>
   aeef8:   91060021    add x1, x1, #0x180
   aeefc:   910ba020    add x0, x1, #0x2e8
   aef00:   52803102    mov w2, #0x188
   aef04:   97ffb6ef    bl  9cac0 <assertion_failed>
   aef08:   d503201f    nop
   aef0c:   d503201f    nop

00000000000aef10 <CDMA4Channel::InterruptHandler()>:
   aef10:   a9be7bfd    stp x29, x30, [sp, #-32]!
   aef14:   910003fd    mov x29, sp
   aef18:   f9000bf3    str x19, [sp, #16]
   aef1c:   aa0003f3    mov x19, x0
   aef20:   f9402000    ldr x0, [x0, #64]
   aef24:   b5000440    cbnz    x0, aefac <CDMA4Channel::InterruptHandler()+0x9c>
   aef28:   b9400261    ldr w1, [x19]
   aef2c:   7100283f    cmp w1, #0xa
   aef30:   54000489    b.ls    aefc0 <CDMA4Channel::InterruptHandler()+0xb0>
   aef34:   7100383f    cmp w1, #0xe
   aef38:   540004e8    b.hi    aefd4 <CDMA4Channel::InterruptHandler()+0xc4>
   aef3c:   d28ffc02    mov x2, #0x7fe0
   aef40:   f2bfc002    movk    x2, #0xfe00, lsl #16
   aef44:   b9400043    ldr w3, [x2]
   aef48:   52800020    mov w0, #0x1
   aef4c:   1ac12000    lsl w0, w0, w1
   aef50:   6a03001f    tst w0, w3
   aef54:   540004a0    b.eq    aefe8 <CDMA4Channel::InterruptHandler()+0xd8>
   aef58:   b9000040    str w0, [x2]
   aef5c:   b9400260    ldr w0, [x19]
   aef60:   117f8000    add w0, w0, #0xfe0, lsl #12
   aef64:   1101c000    add w0, w0, #0x70
   aef68:   53185c00    lsl w0, w0, #8
   aef6c:   b9400001    ldr w1, [x0]
   aef70:   36100461    tbz w1, #2, aeffc <CDMA4Channel::InterruptHandler()+0xec>
   aef74:   370004e1    tbnz    w1, #0, af010 <CDMA4Channel::InterruptHandler()+0x100>
   aef78:   d2760021    eor x1, x1, #0x400
   aef7c:   52800082    mov w2, #0x4
   aef80:   f9401663    ldr x3, [x19, #40]
   aef84:   530a2821    ubfx    w1, w1, #10, #1
   aef88:   b9000002    str w2, [x0]
   aef8c:   3900e261    strb    w1, [x19, #56]
   aef90:   b40004a3    cbz x3, af024 <CDMA4Channel::InterruptHandler()+0x114>
   aef94:   f9401a62    ldr x2, [x19, #48]
   aef98:   aa0303f0    mov x16, x3
   aef9c:   b9400260    ldr w0, [x19]
   aefa0:   f9400bf3    ldr x19, [sp, #16]
   aefa4:   a8c27bfd    ldp x29, x30, [sp], #32
   aefa8:   d61f0200    br  x16
   aefac:   f9402661    ldr x1, [x19, #72]
   aefb0:   97ffe6c4    bl  a8ac0 <CleanAndInvalidateDataCacheRange>
   aefb4:   b9400261    ldr w1, [x19]
   aefb8:   7100283f    cmp w1, #0xa
   aefbc:   54fffbc8    b.hi    aef34 <CDMA4Channel::InterruptHandler()+0x24>
   aefc0:   90000061    adrp    x1, ba000 <font_data+0x1080>
   aefc4:   91060021    add x1, x1, #0x180
   aefc8:   91004020    add x0, x1, #0x10
   aefcc:   52803282    mov w2, #0x194
   aefd0:   97ffb6bc    bl  9cac0 <assertion_failed>
   aefd4:   90000061    adrp    x1, ba000 <font_data+0x1080>
   aefd8:   91060021    add x1, x1, #0x180
   aefdc:   9100c020    add x0, x1, #0x30
   aefe0:   528032a2    mov w2, #0x195
   aefe4:   97ffb6b7    bl  9cac0 <assertion_failed>
   aefe8:   90000061    adrp    x1, ba000 <font_data+0x1080>
   aefec:   91060021    add x1, x1, #0x180
   aeff0:   910c8020    add x0, x1, #0x320
   aeff4:   52803362    mov w2, #0x19b
   aeff8:   97ffb6b2    bl  9cac0 <assertion_failed>
   aeffc:   90000061    adrp    x1, ba000 <font_data+0x1080>
   af000:   91060021    add x1, x1, #0x180
   af004:   910ce020    add x0, x1, #0x338
   af008:   528033e2    mov w2, #0x19f
   af00c:   97ffb6ad    bl  9cac0 <assertion_failed>
   af010:   f0000041    adrp    x1, ba000 <font_data+0x1080>
   af014:   91060021    add x1, x1, #0x180
   af018:   910d2020    add x0, x1, #0x348
   af01c:   52803402    mov w2, #0x1a0
   af020:   97ffb6a8    bl  9cac0 <assertion_failed>
   af024:   f0000041    adrp    x1, ba000 <font_data+0x1080>
   af028:   91060021    add x1, x1, #0x180
   af02c:   9108a020    add x0, x1, #0x228
   af030:   528034a2    mov w2, #0x1a5
   af034:   97ffb6a3    bl  9cac0 <assertion_failed>
   af038:   d503201f    nop
   af03c:   d503201f    nop

00000000000af040 <CDMA4Channel::InterruptStub(void*)>:
   af040:   b4000040    cbz x0, af048 <CDMA4Channel::InterruptStub(void*)+0x8>
   af044:   17ffffb3    b   aef10 <CDMA4Channel::InterruptHandler()>
   af048:   f0000041    adrp    x1, ba000 <font_data+0x1080>
   af04c:   91060021    add x1, x1, #0x180
   af050:   a9bf7bfd    stp x29, x30, [sp, #-16]!
   af054:   910d8020    add x0, x1, #0x360
   af058:   910003fd    mov x29, sp
   af05c:   52803582    mov w2, #0x1ac
   af060:   97ffb698    bl  9cac0 <assertion_failed>
